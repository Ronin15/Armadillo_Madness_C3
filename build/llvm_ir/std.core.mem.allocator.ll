; ModuleID = 'std::core::mem::allocator'
source_filename = "std::core::mem::allocator"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%.introspect = type { i8, i64, ptr, i64, i64, i64, [0 x i64] }
%.fault = type { i64, %"char[]", i64 }
%"char[]" = type { ptr, i64 }
%Backtrace = type { i64, %"char[]", %"char[]", %"char[]", i32, %any, i8 }
%any = type { ptr, i64 }
%WasmMemory = type { i64, i64 }
%"any[]" = type { ptr, i64 }
%AlignedBlock = type { i64, ptr }
%OnStackAllocatorExtraChunk = type { i8, ptr, ptr }
%TrackingAllocator = type { %any, %HashMap, i64, i64 }
%HashMap = type { %"Entry*[]", %any, i32, i32, float }
%"Entry*[]" = type { ptr, i64 }
%"Allocation[]" = type { ptr, i64 }
%"void*[]" = type { ptr, i64 }
%Allocation = type { ptr, i64, [16 x ptr] }
%List = type { i64, i64, %any, ptr }

$std.core.mem.allocator.ArenaAllocator.init = comdat any

$std.core.mem.allocator.ArenaAllocator.clear = comdat any

$std.core.mem.allocator.ArenaAllocator.release = comdat any

$std.core.mem.allocator.ArenaAllocator.mark = comdat any

$std.core.mem.allocator.ArenaAllocator.reset = comdat any

$std.core.mem.allocator.ArenaAllocator.acquire = comdat any

$std.core.mem.allocator.ArenaAllocator.resize = comdat any

$std.core.mem.allocator.DynamicArenaAllocator.init = comdat any

$std.core.mem.allocator.DynamicArenaAllocator.free = comdat any

$std.core.mem.allocator.DynamicArenaAllocator.release = comdat any

$std.core.mem.allocator.DynamicArenaAllocator.resize = comdat any

$std.core.mem.allocator.DynamicArenaAllocator.reset = comdat any

$std.core.mem.allocator.DynamicArenaAllocator.acquire = comdat any

$std.core.mem.allocator.SimpleHeapAllocator.init = comdat any

$std.core.mem.allocator.SimpleHeapAllocator.acquire = comdat any

$std.core.mem.allocator.SimpleHeapAllocator.resize = comdat any

$std.core.mem.allocator.SimpleHeapAllocator.release = comdat any

$std.core.mem.allocator.LibcAllocator.to_string = comdat any

$std.core.mem.allocator.LibcAllocator.to_format = comdat any

$std.core.mem.allocator.LibcAllocator.acquire = comdat any

$std.core.mem.allocator.LibcAllocator.resize = comdat any

$std.core.mem.allocator.LibcAllocator.release = comdat any

$std.core.mem.allocator.OnStackAllocator.init = comdat any

$std.core.mem.allocator.OnStackAllocator.free = comdat any

$std.core.mem.allocator.OnStackAllocator.release = comdat any

$std.core.mem.allocator.OnStackAllocator.resize = comdat any

$std.core.mem.allocator.OnStackAllocator.acquire = comdat any

$std.core.mem.allocator.TempAllocator.destroy = comdat any

$std.core.mem.allocator.TempAllocator.mark = comdat any

$std.core.mem.allocator.TempAllocator.release = comdat any

$std.core.mem.allocator.TempAllocator.reset = comdat any

$std.core.mem.allocator.TempAllocator.resize = comdat any

$std.core.mem.allocator.TempAllocator.acquire = comdat any

$std.core.mem.allocator.TempAllocator.print_pages = comdat any

$std.core.mem.allocator.new_temp_allocator = comdat any

$std.core.mem.allocator.TrackingAllocator.init = comdat any

$std.core.mem.allocator.TrackingAllocator.free = comdat any

$std.core.mem.allocator.TrackingAllocator.allocated = comdat any

$std.core.mem.allocator.TrackingAllocator.total_allocated = comdat any

$std.core.mem.allocator.TrackingAllocator.total_allocation_count = comdat any

$std.core.mem.allocator.TrackingAllocator.allocations_tlist = comdat any

$std.core.mem.allocator.TrackingAllocator.allocation_count = comdat any

$std.core.mem.allocator.TrackingAllocator.acquire = comdat any

$std.core.mem.allocator.TrackingAllocator.resize = comdat any

$std.core.mem.allocator.TrackingAllocator.release = comdat any

$std.core.mem.allocator.TrackingAllocator.clear = comdat any

$std.core.mem.allocator.TrackingAllocator.print_report = comdat any

$std.core.mem.allocator.TrackingAllocator.fprint_report = comdat any

$std.core.mem.allocator.NullAllocator.acquire = comdat any

$std.core.mem.allocator.NullAllocator.resize = comdat any

$std.core.mem.allocator.NullAllocator.release = comdat any

$std.core.mem.allocator.clone_any = comdat any

$std.core.mem.allocator.init_default_temp_allocators = comdat any

$std.core.mem.allocator.destroy_temp_allocators = comdat any

$std.core.mem.allocator.temp_allocator_next = comdat any

$std.core.mem.allocator.WasmMemory.allocate_block = comdat any

$.dyn_search = comdat any

$"$ct.std.core.mem.allocator.ArenaAllocator" = comdat any

$"$ct.std.core.mem.allocator.ArenaAllocatorHeader" = comdat any

$"$ct.std.core.mem.allocator.DynamicArenaAllocator" = comdat any

$"$ct.std.core.mem.allocator.DynamicArenaPage" = comdat any

$"$ct.std.core.mem.allocator.DynamicArenaChunk" = comdat any

$"$ct.std.core.mem.allocator.SimpleHeapAllocator" = comdat any

$"$ct.std.core.mem.allocator.$anon" = comdat any

$"$ct.std.core.mem.allocator.Header" = comdat any

$"$ct.std.core.mem.allocator.LibcAllocator" = comdat any

$"$ct.ulong" = comdat any

$"$ct.std.core.mem.allocator.OnStackAllocator" = comdat any

$"$ct.std.core.mem.allocator.OnStackAllocatorExtraChunk" = comdat any

$"$ct.std.core.mem.allocator.OnStackAllocatorHeader" = comdat any

$"$ct.std.core.mem.allocator.TempAllocatorChunk" = comdat any

$"$ct.std.core.mem.allocator.TempAllocator" = comdat any

$"$ct.std.core.mem.allocator.TempAllocatorPage" = comdat any

$"$ct.std.core.mem.allocator.Allocation" = comdat any

$"$ct.std.core.mem.allocator.TrackingAllocator" = comdat any

$"$ct.std.core.mem.allocator.TrackingEnv" = comdat any

$"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" = comdat any

$"std.core.mem.allocator.AllocationFailure$CHUNK_TOO_LARGE" = comdat any

$"$ct.std.core.mem.allocator.AllocationFailure" = comdat any

$"$ct.std.core.mem.allocator.AlignedBlock" = comdat any

$"$ct.std.core.mem.allocator.NullAllocator" = comdat any

$"$ct.int" = comdat any

$"$ct.std.core.mem.allocator.AllocInitType" = comdat any

$"$ct.std.core.mem.allocator.WasmMemory" = comdat any

$"$sel.release" = comdat any

$"$sel.acquire" = comdat any

$std.core.mem.allocator.LIBC_ALLOCATOR = comdat any

$"$ct.long" = comdat any

$"$sel.resize" = comdat any

$"$ct.anyfault" = comdat any

$"$ct.std.io.File" = comdat any

$"$ct.uint" = comdat any

$"$ct.p$char" = comdat any

$"$ct.char" = comdat any

$"$ct.String" = comdat any

$"$ct.sa$char" = comdat any

$std.core.mem.allocator.MAX_BACKTRACE = comdat any

$"$ct.p$void" = comdat any

$"$ct.void" = comdat any

$"$sel.write" = comdat any

$"$sel.write_byte" = comdat any

$"$sel.flush" = comdat any

$std.core.mem.allocator.DEFAULT_SIZE_PREFIX = comdat any

$std.core.mem.allocator.DEFAULT_SIZE_PREFIX_ALIGNMENT = comdat any

$std.core.mem.allocator.thread_allocator = comdat any

$std.core.mem.allocator.thread_temp_allocator = comdat any

$std.core.mem.allocator.NULL_ALLOCATOR = comdat any

$std.core.mem.allocator.WASM_BLOCK_SIZE = comdat any

$std.core.mem.allocator.wasm_memory = comdat any

$"$sel.mark" = comdat any

$"$sel.reset" = comdat any

$"$sel.to_string" = comdat any

$"$sel.to_format" = comdat any

@"$ct.std.core.mem.allocator.ArenaAllocator" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 24, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.ArenaAllocatorHeader" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 8, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.DynamicArenaAllocator" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 40, i64 0, i64 4, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.DynamicArenaPage" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 40, i64 0, i64 5, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.DynamicArenaChunk" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 8, i64 0, i64 1, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.SimpleHeapAllocator" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 16, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.$anon" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 16, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.Header" = linkonce global %.introspect { i8 11, i64 0, ptr null, i64 16, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.LibcAllocator" = linkonce global %.introspect { i8 18, i64 0, ptr null, i64 8, i64 ptrtoint (ptr @"$ct.ulong" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.ulong" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.OnStackAllocator" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 48, i64 0, i64 4, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.OnStackAllocatorExtraChunk" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 24, i64 0, i64 3, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.OnStackAllocatorHeader" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 8, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.TempAllocatorChunk" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 8, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.TempAllocator" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 40, i64 0, i64 5, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.TempAllocatorPage" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 40, i64 0, i64 6, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.Allocation" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 144, i64 0, i64 3, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.TrackingAllocator" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 80, i64 0, i64 4, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.TrackingEnv" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 40, i64 0, i64 3, [0 x i64] zeroinitializer }, comdat, align 8
@"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.core.mem.allocator.AllocationFailure" to i64), %"char[]" { ptr @.fault, i64 13 }, i64 1 }, comdat, align 8
@.fault = internal constant [14 x i8] c"OUT_OF_MEMORY\00", align 1
@"std.core.mem.allocator.AllocationFailure$CHUNK_TOO_LARGE" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.core.mem.allocator.AllocationFailure" to i64), %"char[]" { ptr @.fault.2, i64 15 }, i64 2 }, comdat, align 8
@.fault.2 = internal constant [16 x i8] c"CHUNK_TOO_LARGE\00", align 1
@"$ct.std.core.mem.allocator.AllocationFailure" = linkonce global %.introspect { i8 9, i64 0, ptr null, i64 8, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.AlignedBlock" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 16, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.NullAllocator" = linkonce global %.introspect { i8 18, i64 0, ptr null, i64 8, i64 ptrtoint (ptr @"$ct.ulong" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.enum.NO_ZERO = internal constant [8 x i8] c"NO_ZERO\00", align 1
@.enum.ZERO = internal constant [5 x i8] c"ZERO\00", align 1
@"$ct.int" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 4, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.core.mem.allocator.AllocInitType" = linkonce global { i8, i64, ptr, i64, i64, i64, [2 x %"char[]"] } { i8 8, i64 0, ptr null, i64 4, i64 ptrtoint (ptr @"$ct.int" to i64), i64 2, [2 x %"char[]"] [%"char[]" { ptr @.enum.NO_ZERO, i64 7 }, %"char[]" { ptr @.enum.ZERO, i64 4 }] }, comdat, align 8
@"$ct.std.core.mem.allocator.WasmMemory" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 16, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg = internal constant [63 x i8] c"Reference parameter 'self' was passed a null pointer argument.\00", align 1
@.file = internal constant [19 x i8] c"arena_allocator.c3\00", align 1
@.func = internal constant [5 x i8] c"init\00", align 1
@std.core.builtin.panic = external global ptr, align 8
@.panic_msg.3 = internal constant [46 x i8] c"Dereference of null pointer, 'self' was null.\00", align 1
@.func.4 = internal constant [6 x i8] c"clear\00", align 1
@.func.5 = internal constant [8 x i8] c"release\00", align 1
@.panic_msg.6 = internal constant [33 x i8] c"@require \22ptr != null\22 violated.\00", align 1
@.panic_msg.7 = internal constant [47 x i8] c"Pointer originates from a different allocator.\00", align 1
@.panic_msg.8 = internal constant [48 x i8] c"Dereference of null pointer, 'header' was null.\00", align 1
@.panic_msg.9 = internal constant [60 x i8] c"Array index out of bounds (array had size %d, index was %d)\00", align 1
@.func.10 = internal constant [5 x i8] c"mark\00", align 1
@.func.11 = internal constant [6 x i8] c"reset\00", align 1
@.func.12 = internal constant [8 x i8] c"acquire\00", align 1
@.panic_msg.13 = internal constant [66 x i8] c"@require \22!alignment || math::is_power_of_2(alignment)\22 violated.\00", align 1
@.panic_msg.14 = internal constant [81 x i8] c"@require \22alignment <= mem::MAX_MEMORY_ALIGNMENT\22 violated: 'alignment too big'.\00", align 1
@.panic_msg.15 = internal constant [30 x i8] c"@require \22size > 0\22 violated.\00", align 1
@.func.16 = internal constant [7 x i8] c"resize\00", align 1
@.panic_msg.17 = internal constant [41 x i8] c"@require \22old_pointer != null\22 violated.\00", align 1
@.panic_msg.18 = internal constant [96 x i8] c"@require \22len == 0 || dst + len <= src || src + len <= dst\22 violated: 'Ranges may not overlap'.\00", align 1
@.file.19 = internal constant [7 x i8] c"mem.c3\00", align 1
@.file.20 = internal constant [17 x i8] c"dynamic_arena.c3\00", align 1
@.panic_msg.21 = internal constant [38 x i8] c"@require \22page_size >= 128\22 violated.\00", align 1
@.func.22 = internal constant [5 x i8] c"free\00", align 1
@.panic_msg.23 = internal constant [46 x i8] c"Dereference of null pointer, 'page' was null.\00", align 1
@"$sel.release" = linkonce_odr constant [8 x i8] c"release\00", comdat, align 1
@.panic_msg.24 = internal constant [45 x i8] c"No method 'release' could be found on target\00", align 1
@.file.25 = internal constant [17 x i8] c"mem_allocator.c3\00", align 1
@.panic_msg.26 = internal constant [25 x i8] c"@require \22ptr\22 violated.\00", align 1
@.panic_msg.27 = internal constant [77 x i8] c"@require \22self.page\22 violated: 'tried to free pointer on invalid allocator'.\00", align 1
@.panic_msg.28 = internal constant [54 x i8] c"Dereference of null pointer, 'current_page' was null.\00", align 1
@.panic_msg.29 = internal constant [64 x i8] c"@require \22size > 0\22 violated: 'Resize doesn't support zeroing'.\00", align 1
@.panic_msg.30 = internal constant [80 x i8] c"@require \22old_pointer != null\22 violated: 'Resize doesn't handle null pointers'.\00", align 1
@.panic_msg.31 = internal constant [80 x i8] c"@require \22self.page\22 violated: 'tried to realloc pointer on invalid allocator'.\00", align 1
@.panic_msg.32 = internal constant [54 x i8] c"Dereference of null pointer, 'old_size_ptr' was null.\00", align 1
@.panic_msg.33 = internal constant [17 x i8] c"Assert violation\00", align 1
@.panic_msg.34 = internal constant [56 x i8] c"Unexpectedly reset dynamic arena allocator with mark %d\00", align 1
@.panic_msg.35 = internal constant [57 x i8] c"Dereference of null pointer, 'unused_page_ptr' was null.\00", align 1
@.func.36 = internal constant [11 x i8] c"_alloc_new\00", align 1
@.panic_msg.37 = internal constant [52 x i8] c"@require \22math::is_power_of_2(alignment)\22 violated.\00", align 1
@"$sel.acquire" = linkonce_odr constant [8 x i8] c"acquire\00", comdat, align 1
@.panic_msg.38 = internal constant [45 x i8] c"No method 'acquire' could be found on target\00", align 1
@.panic_msg.39 = internal constant [47 x i8] c"Dereference of null pointer, 'chunk' was null.\00", align 1
@.panic_msg.40 = internal constant [58 x i8] c"@require \22size > 0\22 violated: 'acquire expects size > 0'.\00", align 1
@.file.41 = internal constant [18 x i8] c"heap_allocator.c3\00", align 1
@.panic_msg.42 = internal constant [78 x i8] c"@require \22allocator\22 violated: 'An underlying memory provider must be given'.\00", align 1
@.panic_msg.43 = internal constant [85 x i8] c"@require \22!self.free_list\22 violated: 'The allocator may not be already initialized'.\00", align 1
@.panic_msg.44 = internal constant [31 x i8] c"@require \22bytes > 0\22 violated.\00", align 1
@.panic_msg.45 = internal constant [35 x i8] c"@require \22alignment > 0\22 violated.\00", align 1
@.panic_msg.46 = internal constant [38 x i8] c"@require \22bytes <= isz.max\22 violated.\00", align 1
@.panic_msg.47 = internal constant [46 x i8] c"Dereference of null pointer, 'desc' was null.\00", align 1
@.func.48 = internal constant [9 x i8] c"_realloc\00", align 1
@.panic_msg.49 = internal constant [46 x i8] c"@require \22old_pointer && bytes > 0\22 violated.\00", align 1
@.panic_msg.50 = internal constant [47 x i8] c"Dereference of null pointer, 'block' was null.\00", align 1
@.func.51 = internal constant [8 x i8] c"_calloc\00", align 1
@.func.52 = internal constant [7 x i8] c"_alloc\00", align 1
@.panic_msg.53 = internal constant [49 x i8] c"Dereference of null pointer, 'current' was null.\00", align 1
@.panic_msg.54 = internal constant [50 x i8] c"Dereference of null pointer, 'previous' was null.\00", align 1
@.panic_msg.55 = internal constant [53 x i8] c"Dereference of null pointer, 'unallocated' was null.\00", align 1
@.func.56 = internal constant [10 x i8] c"add_block\00", align 1
@.panic_msg.57 = internal constant [51 x i8] c"Dereference of null pointer, 'new_block' was null.\00", align 1
@.func.58 = internal constant [6 x i8] c"_free\00", align 1
@.panic_msg.59 = internal constant [46 x i8] c"Dereference of null pointer, 'prev' was null.\00", align 1
@std.core.mem.allocator.LIBC_ALLOCATOR = weak constant i64 0, comdat, align 8, !dbg !0
@.file.60 = internal constant [18 x i8] c"libc_allocator.c3\00", align 1
@.func.61 = internal constant [10 x i8] c"to_string\00", align 1
@.str = private unnamed_addr constant [15 x i8] c"Libc allocator\00", align 1
@.func.62 = internal constant [10 x i8] c"to_format\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"Libc allocator\00", align 1
@.panic_msg.64 = internal constant [43 x i8] c"Dereference of null pointer, 'a' was null.\00", align 1
@.file.65 = internal constant [22 x i8] c"on_stack_allocator.c3\00", align 1
@.func.66 = internal constant [24 x i8] c"allocation_in_stack_mem\00", align 1
@"$ct.long" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.67 = internal constant [39 x i8] c"Negative array indexing (index was %d)\00", align 1
@.func.68 = internal constant [32 x i8] c"on_stack_allocator_remove_chunk\00", align 1
@.panic_msg.69 = internal constant [46 x i8] c"Dereference of null pointer, 'addr' was null.\00", align 1
@.str.70 = private unnamed_addr constant [14 x i8] c"Missing chunk\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"on_stack_allocator.c3\00", align 1
@.str.72 = private unnamed_addr constant [32 x i8] c"on_stack_allocator_remove_chunk\00", align 1
@.func.73 = internal constant [30 x i8] c"on_stack_allocator_find_chunk\00", align 1
@.panic_msg.74 = internal constant [33 x i8] c"@require \22old_pointer\22 violated.\00", align 1
@.panic_msg.75 = internal constant [56 x i8] c"Tried to realloc pointer not belonging to the allocator\00", align 1
@"$sel.resize" = linkonce_odr constant [7 x i8] c"resize\00", comdat, align 1
@.panic_msg.76 = internal constant [44 x i8] c"No method 'resize' could be found on target\00", align 1
@std.core.mem.allocator.PAGE_IS_ALIGNED = internal unnamed_addr constant i64 -9223372036854775808, align 8, !dbg !5
@.panic_msg.77 = internal constant [32 x i8] c"@require \22size >= 16\22 violated.\00", align 1
@.file.78 = internal constant [18 x i8] c"temp_allocator.c3\00", align 1
@.func.79 = internal constant [19 x i8] c"new_temp_allocator\00", align 1
@.panic_msg.80 = internal constant [46 x i8] c"Dereference of null pointer, 'temp' was null.\00", align 1
@.func.81 = internal constant [8 x i8] c"destroy\00", align 1
@.panic_msg.82 = internal constant [82 x i8] c"Dereference of null pointer, 'usz*)(old_pointer - DEFAULT_SIZE_PREFIX)' was null.\00", align 1
@.panic_msg.83 = internal constant [51 x i8] c"Dereference of null pointer, 'last_page' was null.\00", align 1
@"$ct.anyfault" = linkonce global %.introspect { i8 6, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.84 = internal constant [37 x i8] c"Unexpected fault '%s' was unwrapped!\00", align 1
@.func.85 = internal constant [11 x i8] c"_free_page\00", align 1
@.func.86 = internal constant [14 x i8] c"_realloc_page\00", align 1
@.panic_msg.87 = internal constant [57 x i8] c"Dereference of null pointer, 'pointer_to_prev' was null.\00", align 1
@.panic_msg.88 = internal constant [59 x i8] c"Dereference of null pointer, '*pointer_to_prev)' was null.\00", align 1
@.panic_msg.89 = internal constant [28 x i8] c"Realloc of non temp pointer\00", align 1
@.panic_msg.90 = internal constant [53 x i8] c"Dereference of null pointer, 'chunk_start' was null.\00", align 1
@.func.91 = internal constant [12 x i8] c"print_pages\00", align 1
@"$ct.std.io.File" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 8, i64 0, i64 1, [0 x i64] zeroinitializer }, comdat, align 8
@.str.92 = private unnamed_addr constant [11 x i8] c"No pages.\0A\00", align 1
@.str.93 = private unnamed_addr constant [14 x i8] c"---Pages----\0A\00", align 1
@.str.94 = private unnamed_addr constant [26 x i8] c"%d. Alloc: %d %d at %p%s\0A\00", align 1
@"$ct.uint" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 4, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.p$char" = linkonce global %.introspect { i8 19, i64 0, ptr null, i64 8, i64 ptrtoint (ptr @"$ct.char" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.char" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 1, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.str.95 = private unnamed_addr constant [11 x i8] c" [aligned]\00", align 1
@"$ct.String" = linkonce global %.introspect { i8 18, i64 ptrtoint (ptr @"$ct.sa$char" to i64), ptr null, i64 16, i64 ptrtoint (ptr @"$ct.sa$char" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.sa$char" = linkonce global %.introspect { i8 16, i64 0, ptr null, i64 16, i64 ptrtoint (ptr @"$ct.char" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@std.core.mem.allocator.MAX_BACKTRACE = weak local_unnamed_addr constant i32 16, comdat, align 4, !dbg !9
@.file.96 = internal constant [22 x i8] c"tracking_allocator.c3\00", align 1
@.func.97 = internal constant [10 x i8] c"allocated\00", align 1
@.panic_msg.98 = internal constant [52 x i8] c"Dereference of null pointer, 'allocation' was null.\00", align 1
@.func.99 = internal constant [16 x i8] c"total_allocated\00", align 1
@.func.100 = internal constant [23 x i8] c"total_allocation_count\00", align 1
@.func.101 = internal constant [18 x i8] c"allocations_tlist\00", align 1
@.func.102 = internal constant [17 x i8] c"allocation_count\00", align 1
@.str.103 = private unnamed_addr constant [63 x i8] c"Attempt to release untracked pointer %p, this is likely a bug.\00", align 1
@.str.104 = private unnamed_addr constant [22 x i8] c"tracking_allocator.c3\00", align 1
@.str.105 = private unnamed_addr constant [26 x i8] c"TrackingAllocator.release\00", align 1
@"$ct.p$void" = linkonce global %.introspect { i8 19, i64 0, ptr null, i64 8, i64 ptrtoint (ptr @"$ct.void" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.void" = linkonce global %.introspect { i8 0, i64 0, ptr null, i64 1, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.func.106 = internal constant [13 x i8] c"print_report\00", align 1
@.func.107 = internal constant [14 x i8] c"fprint_report\00", align 1
@.str.108 = private unnamed_addr constant [32 x i8] c"======== Memory Report ========\00", align 1
@"$sel.write" = linkonce_odr constant [6 x i8] c"write\00", comdat, align 1
@.panic_msg.109 = internal constant [43 x i8] c"No method 'write' could be found on target\00", align 1
@.file.110 = internal constant [6 x i8] c"io.c3\00", align 1
@"$sel.write_byte" = linkonce_odr constant [11 x i8] c"write_byte\00", comdat, align 1
@.panic_msg.111 = internal constant [48 x i8] c"No method 'write_byte' could be found on target\00", align 1
@"$sel.flush" = linkonce_odr constant [6 x i8] c"flush\00", comdat, align 1
@.panic_msg.112 = internal constant [43 x i8] c"No method 'flush' could be found on target\00", align 1
@.str.113 = private unnamed_addr constant [24 x i8] c"Size in bytes   Address\00", align 1
@.str.114 = private unnamed_addr constant [10 x i8] c"%13s   %p\00", align 1
@.str.115 = private unnamed_addr constant [32 x i8] c"===============================\00", align 1
@.str.116 = private unnamed_addr constant [84 x i8] c"================================== Memory Report ==================================\00", align 1
@.str.117 = private unnamed_addr constant [65 x i8] c"Size in bytes   Address          Function                       \00", align 1
@std.os.backtrace.BACKTRACE_UNKNOWN = external constant %Backtrace, align 8
@.str.118 = private unnamed_addr constant [18 x i8] c"%13s   %p   %s:%d\00", align 1
@.str.119 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.120 = private unnamed_addr constant [84 x i8] c"===================================================================================\00", align 1
@.str.121 = private unnamed_addr constant [25 x i8] c"* NO ALLOCATIONS FOUND *\00", align 1
@.str.122 = private unnamed_addr constant [50 x i8] c"- Total currently allocated memory:            %d\00", align 1
@.str.123 = private unnamed_addr constant [50 x i8] c"- Total current allocations:                   %d\00", align 1
@.str.124 = private unnamed_addr constant [50 x i8] c"- Total allocations (freed and retained):      %d\00", align 1
@.str.125 = private unnamed_addr constant [50 x i8] c"- Total allocated memory (freed and retained): %d\00", align 1
@.str.126 = private unnamed_addr constant [18 x i8] c"Full leak report:\00", align 1
@.str.127 = private unnamed_addr constant [51 x i8] c"Allocation %d (%d bytes) - no backtrace available.\00", align 1
@.panic_msg.128 = internal constant [62 x i8] c"Dereference of null pointer, 'allocation.backtrace' was null.\00", align 1
@.panic_msg.129 = internal constant [45 x i8] c"Negative size (start %d is less than end %d)\00", align 1
@.panic_msg.130 = internal constant [61 x i8] c"End index out of bounds (end index of %d exceeds size of %d)\00", align 1
@.str.131 = private unnamed_addr constant [27 x i8] c"Allocation %d (%d bytes): \00", align 1
@.file.132 = internal constant [8 x i8] c"list.c3\00", align 1
@.str.133 = private unnamed_addr constant [17 x i8] c"   %s (in %s:%d)\00", align 1
@.str.134 = private unnamed_addr constant [20 x i8] c"   ??? (in unknown)\00", align 1
@.str.135 = private unnamed_addr constant [27 x i8] c"   %s (source unavailable)\00", align 1
@std.core.mem.allocator.DEFAULT_SIZE_PREFIX = weak local_unnamed_addr constant i64 8, comdat, align 8, !dbg !13
@std.core.mem.allocator.DEFAULT_SIZE_PREFIX_ALIGNMENT = weak local_unnamed_addr constant i64 8, comdat, align 8, !dbg !16
@std.core.mem.allocator.thread_allocator = weak thread_local local_unnamed_addr global %any { ptr @std.core.mem.allocator.LIBC_ALLOCATOR, i64 ptrtoint (ptr @"$ct.std.core.mem.allocator.LibcAllocator" to i64) }, comdat, align 8, !dbg !18
@std.core.mem.allocator.temp_base_allocator = internal unnamed_addr global %any { ptr @std.core.mem.allocator.LIBC_ALLOCATOR, i64 ptrtoint (ptr @"$ct.std.core.mem.allocator.LibcAllocator" to i64) }, align 8, !dbg !26
@std.core.mem.allocator.thread_temp_allocator = weak thread_local local_unnamed_addr global ptr null, comdat, align 8, !dbg !28
@std.core.mem.allocator.temp_allocator_pair = internal thread_local(localdynamic) unnamed_addr global [2 x ptr] zeroinitializer, align 16, !dbg !51
@std.core.mem.allocator.NULL_ALLOCATOR = weak local_unnamed_addr constant i64 0, comdat, align 8, !dbg !56
@.func.142 = internal constant [10 x i8] c"clone_any\00", align 1
@.func.143 = internal constant [29 x i8] c"init_default_temp_allocators\00", align 1
@.func.144 = internal constant [20 x i8] c"temp_allocator_next\00", align 1
@std.core.mem.allocator.WASM_BLOCK_SIZE = weak local_unnamed_addr constant i64 65536, comdat, align 8, !dbg !59
@std.core.mem.allocator.wasm_memory = weak local_unnamed_addr global %WasmMemory zeroinitializer, comdat, align 8, !dbg !62
@.file.146 = internal constant [15 x i8] c"wasm_memory.c3\00", align 1
@.func.147 = internal constant [15 x i8] c"allocate_block\00", align 1
@"$ct.dyn.std.core.mem.allocator.ArenaAllocator.release" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.ArenaAllocator.release, ptr @"$sel.release", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.ArenaAllocator.mark" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.ArenaAllocator.mark, ptr @"$sel.mark", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$sel.mark" = linkonce_odr constant [5 x i8] c"mark\00", comdat, align 1
@"$ct.dyn.std.core.mem.allocator.ArenaAllocator.reset" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.ArenaAllocator.reset, ptr @"$sel.reset", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$sel.reset" = linkonce_odr constant [6 x i8] c"reset\00", comdat, align 1
@"$ct.dyn.std.core.mem.allocator.ArenaAllocator.acquire" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.ArenaAllocator.acquire, ptr @"$sel.acquire", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.ArenaAllocator.resize" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.ArenaAllocator.resize, ptr @"$sel.resize", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.release" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.DynamicArenaAllocator.release, ptr @"$sel.release", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.resize" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.DynamicArenaAllocator.resize, ptr @"$sel.resize", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.reset" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.DynamicArenaAllocator.reset, ptr @"$sel.reset", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.acquire" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.DynamicArenaAllocator.acquire, ptr @"$sel.acquire", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.acquire" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.SimpleHeapAllocator.acquire, ptr @"$sel.acquire", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.resize" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.SimpleHeapAllocator.resize, ptr @"$sel.resize", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.release" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.SimpleHeapAllocator.release, ptr @"$sel.release", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.LibcAllocator.to_string" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.LibcAllocator.to_string, ptr @"$sel.to_string", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$sel.to_string" = linkonce_odr constant [10 x i8] c"to_string\00", comdat, align 1
@"$ct.dyn.std.core.mem.allocator.LibcAllocator.to_format" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.LibcAllocator.to_format, ptr @"$sel.to_format", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$sel.to_format" = linkonce_odr constant [10 x i8] c"to_format\00", comdat, align 1
@"$ct.dyn.std.core.mem.allocator.LibcAllocator.acquire" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.LibcAllocator.acquire, ptr @"$sel.acquire", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.LibcAllocator.resize" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.LibcAllocator.resize, ptr @"$sel.resize", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.LibcAllocator.release" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.LibcAllocator.release, ptr @"$sel.release", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.OnStackAllocator.release" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.OnStackAllocator.release, ptr @"$sel.release", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.OnStackAllocator.resize" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.OnStackAllocator.resize, ptr @"$sel.resize", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.OnStackAllocator.acquire" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.OnStackAllocator.acquire, ptr @"$sel.acquire", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.TempAllocator.mark" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.TempAllocator.mark, ptr @"$sel.mark", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.TempAllocator.release" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.TempAllocator.release, ptr @"$sel.release", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.TempAllocator.reset" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.TempAllocator.reset, ptr @"$sel.reset", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.TempAllocator.resize" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.TempAllocator.resize, ptr @"$sel.resize", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.TempAllocator.acquire" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.TempAllocator.acquire, ptr @"$sel.acquire", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.TrackingAllocator.acquire" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.TrackingAllocator.acquire, ptr @"$sel.acquire", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.TrackingAllocator.resize" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.TrackingAllocator.resize, ptr @"$sel.resize", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.TrackingAllocator.release" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.TrackingAllocator.release, ptr @"$sel.release", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.NullAllocator.acquire" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.NullAllocator.acquire, ptr @"$sel.acquire", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.NullAllocator.resize" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.NullAllocator.resize, ptr @"$sel.resize", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.core.mem.allocator.NullAllocator.release" = global { ptr, ptr, ptr } { ptr @std.core.mem.allocator.NullAllocator.release, ptr @"$sel.release", ptr inttoptr (i64 -1 to ptr) }, align 8
@llvm.global_ctors = appending global [2 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @.__c3_atexit_std.core.mem.allocator.destroy_temp_allocators_after_exit, ptr null }, { i32, ptr, ptr } { i32 1, ptr @.c3_dynamic_register, ptr null }]

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.core.mem.allocator.ArenaAllocator.init(ptr %0, ptr align 8 %1) #0 comdat !dbg !80 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !94
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !94
  br i1 %3, label %panic, label %checkok, !dbg !94

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !95, metadata !DIExpression()), !dbg !96
  call void @llvm.dbg.declare(metadata ptr %1, metadata !97, metadata !DIExpression()), !dbg !98
  %4 = load ptr, ptr %self, align 8, !dbg !99
  %checknull = icmp eq ptr %4, null, !dbg !99
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !99
  br i1 %5, label %panic3, label %checkok7, !dbg !99

checkok7:                                         ; preds = %checkok
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %4, ptr align 8 %1, i32 16, i1 false), !dbg !100
  %6 = load ptr, ptr %self, align 8, !dbg !101
  %checknull8 = icmp eq ptr %6, null, !dbg !101
  %7 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !101
  br i1 %7, label %panic9, label %checkok13, !dbg !101

checkok13:                                        ; preds = %checkok7
  %ptradd = getelementptr inbounds i8, ptr %6, i64 16, !dbg !101
  store i64 0, ptr %ptradd, align 8, !dbg !102
  %8 = load ptr, ptr %self, align 8, !dbg !103
  ret ptr %8, !dbg !103

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 16), !dbg !96
  unreachable, !dbg !96

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg6, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 18), !dbg !99
  unreachable, !dbg !99

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg12, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 19), !dbg !101
  unreachable, !dbg !101
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.ArenaAllocator.clear(ptr %0) #0 comdat !dbg !104 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !107
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !107
  br i1 %2, label %panic, label %checkok, !dbg !107

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !108, metadata !DIExpression()), !dbg !109
  %3 = load ptr, ptr %self, align 8, !dbg !110
  %checknull = icmp eq ptr %3, null, !dbg !110
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !110
  br i1 %4, label %panic3, label %checkok7, !dbg !110

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !110
  store i64 0, ptr %ptradd, align 8, !dbg !111
  ret void, !dbg !111

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.4, i64 5 }, ptr %indirectarg2, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 23), !dbg !109
  unreachable, !dbg !109

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.4, i64 5 }, ptr %indirectarg6, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 25), !dbg !110
  unreachable, !dbg !110
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.ArenaAllocator.release(ptr %0, ptr %1, i8 zeroext %2) #0 comdat !dbg !112 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %.anon = alloca i8, align 1
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %header = alloca ptr, align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr39 = alloca i64, align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg44 = alloca %"any[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %3 = icmp eq ptr %0, null, !dbg !116
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !116
  br i1 %4, label %panic, label %checkok, !dbg !116

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !117, metadata !DIExpression()), !dbg !118
  store ptr %1, ptr %ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr, metadata !119, metadata !DIExpression()), !dbg !120
  store i8 %2, ptr %.anon, align 1
  call void @llvm.dbg.declare(metadata ptr %.anon, metadata !121, metadata !DIExpression()), !dbg !122
  %5 = load ptr, ptr %ptr, align 8, !dbg !123
  %neq = icmp ne ptr %5, null, !dbg !123
  br i1 %neq, label %assert_ok, label %assert_fail, !dbg !123

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.6, i64 32 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 35), !dbg !123
  unreachable, !dbg !123

assert_ok:                                        ; preds = %checkok
  %7 = load ptr, ptr %ptr, align 8, !dbg !125
  %ptrxi = ptrtoint ptr %7 to i64, !dbg !125
  %8 = load ptr, ptr %self, align 8, !dbg !126
  %checknull = icmp eq ptr %8, null, !dbg !126
  %9 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !126
  br i1 %9, label %panic6, label %checkok10, !dbg !126

checkok10:                                        ; preds = %assert_ok
  %10 = load ptr, ptr %8, align 8, !dbg !126
  %ptrxi11 = ptrtoint ptr %10 to i64, !dbg !126
  %ge = icmp uge i64 %ptrxi, %ptrxi11, !dbg !125
  br i1 %ge, label %assert_ok16, label %assert_fail12, !dbg !125

assert_fail12:                                    ; preds = %checkok10
  store %"char[]" { ptr @.panic_msg.7, i64 46 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg15, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 39), !dbg !125
  unreachable, !dbg !125

assert_ok16:                                      ; preds = %checkok10
  call void @llvm.dbg.declare(metadata ptr %header, metadata !127, metadata !DIExpression()), !dbg !133
  %12 = load ptr, ptr %ptr, align 8, !dbg !134
  %ptradd_any = getelementptr i8, ptr %12, i64 -8, !dbg !135
  store ptr %ptradd_any, ptr %header, align 8, !dbg !135
  %13 = load ptr, ptr %ptr, align 8, !dbg !136
  %14 = load ptr, ptr %header, align 8, !dbg !137
  %checknull17 = icmp eq ptr %14, null, !dbg !137
  %15 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !137
  br i1 %15, label %panic18, label %checkok22, !dbg !137

checkok22:                                        ; preds = %assert_ok16
  %16 = load i64, ptr %14, align 8, !dbg !137
  %ptradd_any23 = getelementptr i8, ptr %13, i64 %16, !dbg !137
  %17 = load ptr, ptr %self, align 8, !dbg !138
  %checknull24 = icmp eq ptr %17, null, !dbg !138
  %18 = call i1 @llvm.expect.i1(i1 %checknull24, i1 false), !dbg !138
  br i1 %18, label %panic25, label %checkok29, !dbg !138

checkok29:                                        ; preds = %checkok22
  %ptradd = getelementptr inbounds i8, ptr %17, i64 8, !dbg !138
  %19 = load i64, ptr %ptradd, align 8, !dbg !138
  %20 = load ptr, ptr %17, align 8, !dbg !138
  %21 = load ptr, ptr %self, align 8, !dbg !139
  %checknull30 = icmp eq ptr %21, null, !dbg !139
  %22 = call i1 @llvm.expect.i1(i1 %checknull30, i1 false), !dbg !139
  br i1 %22, label %panic31, label %checkok35, !dbg !139

checkok35:                                        ; preds = %checkok29
  %ptradd36 = getelementptr inbounds i8, ptr %21, i64 16, !dbg !139
  %23 = load i64, ptr %ptradd36, align 8, !dbg !139
  %ge37 = icmp uge i64 %23, %19, !dbg !139
  %24 = call i1 @llvm.expect.i1(i1 %ge37, i1 false), !dbg !139
  br i1 %24, label %panic38, label %checkok45, !dbg !139

checkok45:                                        ; preds = %checkok35
  %ptradd46 = getelementptr inbounds i8, ptr %20, i64 %23, !dbg !139
  %eq = icmp eq ptr %ptradd_any23, %ptradd46, !dbg !136
  br i1 %eq, label %if.then, label %if.exit, !dbg !136

if.then:                                          ; preds = %checkok45
  %25 = load ptr, ptr %self, align 8, !dbg !140
  %checknull47 = icmp eq ptr %25, null, !dbg !140
  %26 = call i1 @llvm.expect.i1(i1 %checknull47, i1 false), !dbg !140
  br i1 %26, label %panic48, label %checkok52, !dbg !140

checkok52:                                        ; preds = %if.then
  %ptradd53 = getelementptr inbounds i8, ptr %25, i64 16, !dbg !140
  %27 = load i64, ptr %ptradd53, align 8, !dbg !140
  %28 = load ptr, ptr %header, align 8, !dbg !142
  %checknull54 = icmp eq ptr %28, null, !dbg !142
  %29 = call i1 @llvm.expect.i1(i1 %checknull54, i1 false), !dbg !142
  br i1 %29, label %panic55, label %checkok59, !dbg !142

checkok59:                                        ; preds = %checkok52
  %30 = load i64, ptr %28, align 8, !dbg !142
  %add = add i64 %30, 8, !dbg !142
  %sub = sub i64 %27, %add, !dbg !140
  store i64 %sub, ptr %ptradd53, align 8, !dbg !140
  br label %if.exit, !dbg !140

if.exit:                                          ; preds = %checkok59, %checkok45
  ret void, !dbg !140

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg2, align 8
  %31 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %31(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 37), !dbg !118
  unreachable, !dbg !118

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg9, align 8
  %32 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %32(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 39), !dbg !126
  unreachable, !dbg !126

panic18:                                          ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.8, i64 47 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg21, align 8
  %33 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %33(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 42), !dbg !137
  unreachable, !dbg !137

panic25:                                          ; preds = %checkok22
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg28, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 42), !dbg !138
  unreachable, !dbg !138

panic31:                                          ; preds = %checkok29
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg34, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 42), !dbg !139
  unreachable, !dbg !139

panic38:                                          ; preds = %checkok35
  store i64 %19, ptr %taddr, align 8
  %36 = insertvalue %any undef, ptr %taddr, 0
  %37 = insertvalue %any %36, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %23, ptr %taddr39, align 8
  %38 = insertvalue %any undef, ptr %taddr39, 0
  %39 = insertvalue %any %38, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.9, i64 59 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg42, align 8
  store %any %37, ptr %varargslots, align 16
  %ptradd43 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %39, ptr %ptradd43, align 16
  %40 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %40, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg44, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, i32 42, ptr align 8 %indirectarg44), !dbg !139
  unreachable, !dbg !139

panic48:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg51, align 8
  %41 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %41(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 44), !dbg !140
  unreachable, !dbg !140

panic55:                                          ; preds = %checkok52
  store %"char[]" { ptr @.panic_msg.8, i64 47 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg58, align 8
  %42 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %42(ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, i32 44), !dbg !142
  unreachable, !dbg !142
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.ArenaAllocator.mark(ptr %0) #0 comdat !dbg !143 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !146
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !146
  br i1 %2, label %panic, label %checkok, !dbg !146

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !147, metadata !DIExpression()), !dbg !148
  %3 = load ptr, ptr %self, align 8, !dbg !146
  %checknull = icmp eq ptr %3, null, !dbg !146
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !146
  br i1 %4, label %panic3, label %checkok7, !dbg !146

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !146
  %5 = load i64, ptr %ptradd, align 8, !dbg !146
  ret i64 %5, !dbg !146

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.10, i64 4 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 48), !dbg !148
  unreachable, !dbg !148

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.10, i64 4 }, ptr %indirectarg6, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 48), !dbg !146
  unreachable, !dbg !146
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.ArenaAllocator.reset(ptr %0, i64 %1) #0 comdat !dbg !149 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %mark = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !152
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !152
  br i1 %3, label %panic, label %checkok, !dbg !152

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !153, metadata !DIExpression()), !dbg !154
  store i64 %1, ptr %mark, align 8
  call void @llvm.dbg.declare(metadata ptr %mark, metadata !155, metadata !DIExpression()), !dbg !156
  %4 = load ptr, ptr %self, align 8, !dbg !152
  %checknull = icmp eq ptr %4, null, !dbg !152
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !152
  br i1 %5, label %panic3, label %checkok7, !dbg !152

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !152
  %6 = load i64, ptr %mark, align 8, !dbg !157
  store i64 %6, ptr %ptradd, align 8, !dbg !157
  ret void, !dbg !157

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 49), !dbg !154
  unreachable, !dbg !154

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg6, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 49), !dbg !152
  unreachable, !dbg !152
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.ArenaAllocator.acquire(ptr %0, ptr %1, i64 %2, i32 %3, i64 %4) #0 comdat !dbg !158 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %size = alloca i64, align 8
  %init_type = alloca i32, align 4
  %alignment = alloca i64, align 8
  %x = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %total_len = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %start_mem = alloca ptr, align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %unaligned_pointer_to_offset = alloca ptr, align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %mem = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %alignment35 = alloca i64, align 8
  %end = alloca i64, align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %header = alloca ptr, align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %dst = alloca ptr, align 8
  %len = alloca i64, align 8
  %reterr = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !164
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !164
  br i1 %6, label %panic, label %checkok, !dbg !164

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !165, metadata !DIExpression()), !dbg !166
  store i64 %2, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !167, metadata !DIExpression()), !dbg !168
  store i32 %3, ptr %init_type, align 4
  call void @llvm.dbg.declare(metadata ptr %init_type, metadata !169, metadata !DIExpression()), !dbg !170
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !171, metadata !DIExpression()), !dbg !172
  %7 = load i64, ptr %alignment, align 8, !dbg !173
  %not = icmp eq i64 %7, 0, !dbg !173
  br i1 %not, label %or.phi, label %or.rhs, !dbg !173

or.rhs:                                           ; preds = %checkok
  %8 = load i64, ptr %alignment, align 8
  store i64 %8, ptr %x, align 8
  %9 = load i64, ptr %x, align 8, !dbg !175
  %neq = icmp ne i64 0, %9, !dbg !175
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !175

and.rhs:                                          ; preds = %or.rhs
  %10 = load i64, ptr %x, align 8, !dbg !179
  %11 = load i64, ptr %x, align 8, !dbg !180
  %sub = sub i64 %11, 1, !dbg !180
  %and = and i64 %10, %sub, !dbg !179
  %eq = icmp eq i64 %and, 0, !dbg !179
  br label %and.phi, !dbg !179

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !179
  br label %or.phi, !dbg !179

or.phi:                                           ; preds = %and.phi, %checkok
  %val3 = phi i1 [ true, %checkok ], [ %val, %and.phi ], !dbg !179
  br i1 %val3, label %assert_ok, label %assert_fail, !dbg !179

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.13, i64 65 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg6, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 52), !dbg !181
  unreachable, !dbg !181

assert_ok:                                        ; preds = %or.phi
  %13 = load i64, ptr %alignment, align 8, !dbg !182
  %le = icmp ule i64 %13, 268435456, !dbg !182
  br i1 %le, label %assert_ok11, label %assert_fail7, !dbg !182

assert_fail7:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg10, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 53), !dbg !182
  unreachable, !dbg !182

assert_ok11:                                      ; preds = %assert_ok
  %15 = load i64, ptr %size, align 8, !dbg !183
  %lt = icmp ult i64 0, %15, !dbg !183
  br i1 %lt, label %assert_ok16, label %assert_fail12, !dbg !183

assert_fail12:                                    ; preds = %assert_ok11
  store %"char[]" { ptr @.panic_msg.15, i64 29 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg15, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 54), !dbg !183
  unreachable, !dbg !183

assert_ok16:                                      ; preds = %assert_ok11
  %17 = load i64, ptr %alignment, align 8, !dbg !184
  %18 = call i64 @std.core.mem.allocator.alignment_for_allocation(i64 %17) #5, !dbg !185
  store i64 %18, ptr %alignment, align 8, !dbg !185
  call void @llvm.dbg.declare(metadata ptr %total_len, metadata !186, metadata !DIExpression()), !dbg !187
  %19 = load ptr, ptr %self, align 8, !dbg !188
  %checknull = icmp eq ptr %19, null, !dbg !188
  %20 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !188
  br i1 %20, label %panic17, label %checkok21, !dbg !188

checkok21:                                        ; preds = %assert_ok16
  %ptradd = getelementptr inbounds i8, ptr %19, i64 8, !dbg !188
  %21 = load i64, ptr %ptradd, align 8, !dbg !188
  store i64 %21, ptr %total_len, align 8, !dbg !188
  %22 = load i64, ptr %size, align 8, !dbg !189
  %23 = load i64, ptr %total_len, align 8, !dbg !190
  %gt = icmp ugt i64 %22, %23, !dbg !189
  br i1 %gt, label %if.then, label %if.exit, !dbg !189

if.then:                                          ; preds = %checkok21
  ret i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$CHUNK_TOO_LARGE" to i64), !dbg !191

if.exit:                                          ; preds = %checkok21
  call void @llvm.dbg.declare(metadata ptr %start_mem, metadata !192, metadata !DIExpression()), !dbg !193
  %24 = load ptr, ptr %self, align 8, !dbg !194
  %checknull22 = icmp eq ptr %24, null, !dbg !194
  %25 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !194
  br i1 %25, label %panic23, label %checkok27, !dbg !194

checkok27:                                        ; preds = %if.exit
  %26 = load ptr, ptr %24, align 8, !dbg !194
  store ptr %26, ptr %start_mem, align 8, !dbg !194
  call void @llvm.dbg.declare(metadata ptr %unaligned_pointer_to_offset, metadata !195, metadata !DIExpression()), !dbg !196
  %27 = load ptr, ptr %start_mem, align 8, !dbg !197
  %28 = load ptr, ptr %self, align 8, !dbg !198
  %checknull28 = icmp eq ptr %28, null, !dbg !198
  %29 = call i1 @llvm.expect.i1(i1 %checknull28, i1 false), !dbg !198
  br i1 %29, label %panic29, label %checkok33, !dbg !198

checkok33:                                        ; preds = %checkok27
  %ptradd34 = getelementptr inbounds i8, ptr %28, i64 16, !dbg !198
  %30 = load i64, ptr %ptradd34, align 8, !dbg !198
  %add = add i64 %30, 8, !dbg !197
  %ptradd_any = getelementptr i8, ptr %27, i64 %add, !dbg !197
  store ptr %ptradd_any, ptr %unaligned_pointer_to_offset, align 8, !dbg !197
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !199, metadata !DIExpression()), !dbg !200
  %31 = load ptr, ptr %unaligned_pointer_to_offset, align 8
  store ptr %31, ptr %ptr, align 8
  %32 = load i64, ptr %alignment, align 8
  store i64 %32, ptr %alignment35, align 8
  %33 = load ptr, ptr %ptr, align 8, !dbg !201
  %ptrxi = ptrtoint ptr %33 to i64, !dbg !201
  %34 = load i64, ptr %alignment35, align 8, !dbg !205
  %35 = call i64 @std.core.mem.aligned_offset(i64 %ptrxi, i64 %34), !dbg !206
  %intptr = inttoptr i64 %35 to ptr, !dbg !206
  store ptr %intptr, ptr %mem, align 8, !dbg !206
  call void @llvm.dbg.declare(metadata ptr %end, metadata !207, metadata !DIExpression()), !dbg !208
  %36 = load ptr, ptr %mem, align 8, !dbg !209
  %37 = load ptr, ptr %self, align 8, !dbg !210
  %checknull36 = icmp eq ptr %37, null, !dbg !210
  %38 = call i1 @llvm.expect.i1(i1 %checknull36, i1 false), !dbg !210
  br i1 %38, label %panic37, label %checkok41, !dbg !210

checkok41:                                        ; preds = %checkok33
  %39 = load ptr, ptr %37, align 8, !dbg !210
  %40 = ptrtoint ptr %39 to i64, !dbg !211
  %41 = ptrtoint ptr %36 to i64, !dbg !211
  %42 = sub i64 %41, %40, !dbg !211
  %43 = sdiv exact i64 %42, 1, !dbg !211
  %44 = load i64, ptr %size, align 8, !dbg !212
  %add42 = add i64 %43, %44, !dbg !211
  store i64 %add42, ptr %end, align 8, !dbg !211
  %45 = load i64, ptr %end, align 8, !dbg !213
  %46 = load i64, ptr %total_len, align 8, !dbg !214
  %gt43 = icmp ugt i64 %45, %46, !dbg !213
  br i1 %gt43, label %if.then44, label %if.exit45, !dbg !213

if.then44:                                        ; preds = %checkok41
  ret i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" to i64), !dbg !215

if.exit45:                                        ; preds = %checkok41
  %47 = load ptr, ptr %self, align 8, !dbg !216
  %checknull46 = icmp eq ptr %47, null, !dbg !216
  %48 = call i1 @llvm.expect.i1(i1 %checknull46, i1 false), !dbg !216
  br i1 %48, label %panic47, label %checkok51, !dbg !216

checkok51:                                        ; preds = %if.exit45
  %ptradd52 = getelementptr inbounds i8, ptr %47, i64 16, !dbg !216
  %49 = load i64, ptr %end, align 8, !dbg !217
  store i64 %49, ptr %ptradd52, align 8, !dbg !217
  call void @llvm.dbg.declare(metadata ptr %header, metadata !218, metadata !DIExpression()), !dbg !219
  %50 = load ptr, ptr %mem, align 8, !dbg !220
  %ptradd_any53 = getelementptr i8, ptr %50, i64 -8, !dbg !221
  store ptr %ptradd_any53, ptr %header, align 8, !dbg !221
  %51 = load ptr, ptr %header, align 8, !dbg !222
  %checknull54 = icmp eq ptr %51, null, !dbg !222
  %52 = call i1 @llvm.expect.i1(i1 %checknull54, i1 false), !dbg !222
  br i1 %52, label %panic55, label %checkok59, !dbg !222

checkok59:                                        ; preds = %checkok51
  %53 = load i64, ptr %size, align 8, !dbg !223
  store i64 %53, ptr %51, align 8, !dbg !223
  %54 = load i32, ptr %init_type, align 4, !dbg !224
  %eq60 = icmp eq i32 %54, 1, !dbg !224
  br i1 %eq60, label %if.then61, label %if.exit62, !dbg !224

if.then61:                                        ; preds = %checkok59
  %55 = load ptr, ptr %mem, align 8
  store ptr %55, ptr %dst, align 8
  %56 = load i64, ptr %size, align 8
  store i64 %56, ptr %len, align 8
  %57 = load ptr, ptr %dst, align 8, !dbg !225
  %58 = load i64, ptr %len, align 8, !dbg !228
  call void @llvm.memset.p0.i64(ptr align 16 %57, i8 0, i64 %58, i1 false), !dbg !229
  br label %if.exit62, !dbg !229

if.exit62:                                        ; preds = %if.then61, %checkok59
  %59 = load ptr, ptr %mem, align 8, !dbg !230
  store ptr %59, ptr %0, align 8, !dbg !230
  ret i64 0, !dbg !230

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg2, align 8
  %60 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %60(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 56), !dbg !166
  unreachable, !dbg !166

panic17:                                          ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg20, align 8
  %61 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %61(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 59), !dbg !188
  unreachable, !dbg !188

panic23:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg26, align 8
  %62 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %62(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 61), !dbg !194
  unreachable, !dbg !194

panic29:                                          ; preds = %checkok27
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg32, align 8
  %63 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %63(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 62), !dbg !198
  unreachable, !dbg !198

panic37:                                          ; preds = %checkok33
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg40, align 8
  %64 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %64(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 64), !dbg !210
  unreachable, !dbg !210

panic47:                                          ; preds = %if.exit45
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg50, align 8
  %65 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %65(ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, i32 66), !dbg !216
  unreachable, !dbg !216

panic55:                                          ; preds = %checkok51
  store %"char[]" { ptr @.panic_msg.8, i64 47 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg58, align 8
  %66 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %66(ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, i32 68), !dbg !222
  unreachable, !dbg !222
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.ArenaAllocator.resize(ptr %0, ptr %1, ptr %2, i64 %3, i64 %4) #0 comdat !dbg !231 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_pointer = alloca ptr, align 8
  %size = alloca i64, align 8
  %alignment = alloca i64, align 8
  %x = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %total_len = alloca i64, align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %header = alloca ptr, align 8
  %old_size = alloca i64, align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr61 = alloca i64, align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg66 = alloca %"any[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %indirectarg80 = alloca %"char[]", align 8
  %indirectarg81 = alloca %"char[]", align 8
  %new_used = alloca i64, align 8
  %indirectarg88 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg99 = alloca %"char[]", align 8
  %indirectarg100 = alloca %"char[]", align 8
  %indirectarg101 = alloca %"char[]", align 8
  %indirectarg107 = alloca %"char[]", align 8
  %indirectarg108 = alloca %"char[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %mem = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %dst = alloca ptr, align 8
  %src = alloca ptr, align 8
  %len = alloca i64, align 8
  %indirectarg124 = alloca %"char[]", align 8
  %indirectarg125 = alloca %"char[]", align 8
  %indirectarg126 = alloca %"char[]", align 8
  %reterr128 = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !234
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !234
  br i1 %6, label %panic, label %checkok, !dbg !234

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !235, metadata !DIExpression()), !dbg !236
  store ptr %2, ptr %old_pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %old_pointer, metadata !237, metadata !DIExpression()), !dbg !238
  store i64 %3, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !239, metadata !DIExpression()), !dbg !240
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !241, metadata !DIExpression()), !dbg !242
  %7 = load i64, ptr %alignment, align 8, !dbg !243
  %not = icmp eq i64 %7, 0, !dbg !243
  br i1 %not, label %or.phi, label %or.rhs, !dbg !243

or.rhs:                                           ; preds = %checkok
  %8 = load i64, ptr %alignment, align 8
  store i64 %8, ptr %x, align 8
  %9 = load i64, ptr %x, align 8, !dbg !245
  %neq = icmp ne i64 0, %9, !dbg !245
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !245

and.rhs:                                          ; preds = %or.rhs
  %10 = load i64, ptr %x, align 8, !dbg !248
  %11 = load i64, ptr %x, align 8, !dbg !249
  %sub = sub i64 %11, 1, !dbg !249
  %and = and i64 %10, %sub, !dbg !248
  %eq = icmp eq i64 %and, 0, !dbg !248
  br label %and.phi, !dbg !248

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !248
  br label %or.phi, !dbg !248

or.phi:                                           ; preds = %and.phi, %checkok
  %val3 = phi i1 [ true, %checkok ], [ %val, %and.phi ], !dbg !248
  br i1 %val3, label %assert_ok, label %assert_fail, !dbg !248

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.13, i64 65 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg6, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 74), !dbg !250
  unreachable, !dbg !250

assert_ok:                                        ; preds = %or.phi
  %13 = load i64, ptr %alignment, align 8, !dbg !251
  %le = icmp ule i64 %13, 268435456, !dbg !251
  br i1 %le, label %assert_ok11, label %assert_fail7, !dbg !251

assert_fail7:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg10, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 75), !dbg !251
  unreachable, !dbg !251

assert_ok11:                                      ; preds = %assert_ok
  %15 = load ptr, ptr %old_pointer, align 8, !dbg !252
  %neq12 = icmp ne ptr %15, null, !dbg !252
  br i1 %neq12, label %assert_ok17, label %assert_fail13, !dbg !252

assert_fail13:                                    ; preds = %assert_ok11
  store %"char[]" { ptr @.panic_msg.17, i64 40 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg16, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 76), !dbg !252
  unreachable, !dbg !252

assert_ok17:                                      ; preds = %assert_ok11
  %17 = load i64, ptr %size, align 8, !dbg !253
  %lt = icmp ult i64 0, %17, !dbg !253
  br i1 %lt, label %assert_ok22, label %assert_fail18, !dbg !253

assert_fail18:                                    ; preds = %assert_ok17
  store %"char[]" { ptr @.panic_msg.15, i64 29 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg21, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 77), !dbg !253
  unreachable, !dbg !253

assert_ok22:                                      ; preds = %assert_ok17
  %19 = load i64, ptr %alignment, align 8, !dbg !254
  %20 = call i64 @std.core.mem.allocator.alignment_for_allocation(i64 %19) #5, !dbg !255
  store i64 %20, ptr %alignment, align 8, !dbg !255
  %21 = load ptr, ptr %old_pointer, align 8, !dbg !256
  %22 = load ptr, ptr %self, align 8, !dbg !257
  %checknull = icmp eq ptr %22, null, !dbg !257
  %23 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !257
  br i1 %23, label %panic23, label %checkok27, !dbg !257

checkok27:                                        ; preds = %assert_ok22
  %24 = load ptr, ptr %22, align 8, !dbg !257
  %ge = icmp uge ptr %21, %24, !dbg !256
  br i1 %ge, label %assert_ok32, label %assert_fail28, !dbg !256

assert_fail28:                                    ; preds = %checkok27
  store %"char[]" { ptr @.panic_msg.7, i64 46 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg31, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, i32 82), !dbg !256
  unreachable, !dbg !256

assert_ok32:                                      ; preds = %checkok27
  call void @llvm.dbg.declare(metadata ptr %total_len, metadata !258, metadata !DIExpression()), !dbg !259
  %26 = load ptr, ptr %self, align 8, !dbg !260
  %checknull33 = icmp eq ptr %26, null, !dbg !260
  %27 = call i1 @llvm.expect.i1(i1 %checknull33, i1 false), !dbg !260
  br i1 %27, label %panic34, label %checkok38, !dbg !260

checkok38:                                        ; preds = %assert_ok32
  %ptradd = getelementptr inbounds i8, ptr %26, i64 8, !dbg !260
  %28 = load i64, ptr %ptradd, align 8, !dbg !260
  store i64 %28, ptr %total_len, align 8, !dbg !260
  %29 = load i64, ptr %size, align 8, !dbg !261
  %30 = load i64, ptr %total_len, align 8, !dbg !262
  %gt = icmp ugt i64 %29, %30, !dbg !261
  br i1 %gt, label %if.then, label %if.exit, !dbg !261

if.then:                                          ; preds = %checkok38
  ret i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$CHUNK_TOO_LARGE" to i64), !dbg !263

if.exit:                                          ; preds = %checkok38
  call void @llvm.dbg.declare(metadata ptr %header, metadata !264, metadata !DIExpression()), !dbg !265
  %31 = load ptr, ptr %old_pointer, align 8, !dbg !266
  %ptradd_any = getelementptr i8, ptr %31, i64 -8, !dbg !267
  store ptr %ptradd_any, ptr %header, align 8, !dbg !267
  call void @llvm.dbg.declare(metadata ptr %old_size, metadata !268, metadata !DIExpression()), !dbg !269
  %32 = load ptr, ptr %header, align 8, !dbg !270
  %checknull39 = icmp eq ptr %32, null, !dbg !270
  %33 = call i1 @llvm.expect.i1(i1 %checknull39, i1 false), !dbg !270
  br i1 %33, label %panic40, label %checkok44, !dbg !270

checkok44:                                        ; preds = %if.exit
  %34 = load i64, ptr %32, align 8, !dbg !270
  store i64 %34, ptr %old_size, align 8, !dbg !270
  %35 = load ptr, ptr %self, align 8, !dbg !271
  %checknull45 = icmp eq ptr %35, null, !dbg !271
  %36 = call i1 @llvm.expect.i1(i1 %checknull45, i1 false), !dbg !271
  br i1 %36, label %panic46, label %checkok50, !dbg !271

checkok50:                                        ; preds = %checkok44
  %ptradd51 = getelementptr inbounds i8, ptr %35, i64 8, !dbg !271
  %37 = load i64, ptr %ptradd51, align 8, !dbg !271
  %38 = load ptr, ptr %35, align 8, !dbg !271
  %39 = load ptr, ptr %self, align 8, !dbg !272
  %checknull52 = icmp eq ptr %39, null, !dbg !272
  %40 = call i1 @llvm.expect.i1(i1 %checknull52, i1 false), !dbg !272
  br i1 %40, label %panic53, label %checkok57, !dbg !272

checkok57:                                        ; preds = %checkok50
  %ptradd58 = getelementptr inbounds i8, ptr %39, i64 16, !dbg !272
  %41 = load i64, ptr %ptradd58, align 8, !dbg !272
  %ge59 = icmp uge i64 %41, %37, !dbg !272
  %42 = call i1 @llvm.expect.i1(i1 %ge59, i1 false), !dbg !272
  br i1 %42, label %panic60, label %checkok67, !dbg !272

checkok67:                                        ; preds = %checkok57
  %ptradd68 = getelementptr inbounds i8, ptr %38, i64 %41, !dbg !272
  %43 = load ptr, ptr %old_pointer, align 8, !dbg !273
  %44 = load i64, ptr %old_size, align 8, !dbg !274
  %ptradd_any69 = getelementptr i8, ptr %43, i64 %44, !dbg !274
  %eq70 = icmp eq ptr %ptradd68, %ptradd_any69, !dbg !275
  br i1 %eq70, label %and.rhs71, label %and.phi72, !dbg !275

and.rhs71:                                        ; preds = %checkok67
  %45 = load ptr, ptr %old_pointer, align 8, !dbg !276
  %46 = load i64, ptr %alignment, align 8, !dbg !276
  %47 = call i8 @std.core.mem.ptr_is_aligned(ptr %45, i64 %46) #5, !dbg !277
  %48 = trunc i8 %47 to i1, !dbg !277
  br label %and.phi72, !dbg !277

and.phi72:                                        ; preds = %and.rhs71, %checkok67
  %val73 = phi i1 [ false, %checkok67 ], [ %48, %and.rhs71 ], !dbg !277
  br i1 %val73, label %if.then74, label %if.exit111, !dbg !277

if.then74:                                        ; preds = %and.phi72
  %49 = load i64, ptr %old_size, align 8, !dbg !278
  %50 = load i64, ptr %size, align 8, !dbg !280
  %ge75 = icmp uge i64 %49, %50, !dbg !278
  br i1 %ge75, label %if.then76, label %if.else, !dbg !278

if.then76:                                        ; preds = %if.then74
  %51 = load ptr, ptr %self, align 8, !dbg !281
  %checknull77 = icmp eq ptr %51, null, !dbg !281
  %52 = call i1 @llvm.expect.i1(i1 %checknull77, i1 false), !dbg !281
  br i1 %52, label %panic78, label %checkok82, !dbg !281

checkok82:                                        ; preds = %if.then76
  %ptradd83 = getelementptr inbounds i8, ptr %51, i64 16, !dbg !281
  %53 = load i64, ptr %ptradd83, align 8, !dbg !281
  %54 = load i64, ptr %old_size, align 8, !dbg !283
  %55 = load i64, ptr %size, align 8, !dbg !284
  %sub84 = sub i64 %54, %55, !dbg !283
  %sub85 = sub i64 %53, %sub84, !dbg !281
  store i64 %sub85, ptr %ptradd83, align 8, !dbg !281
  br label %if.exit104, !dbg !281

if.else:                                          ; preds = %if.then74
  call void @llvm.dbg.declare(metadata ptr %new_used, metadata !285, metadata !DIExpression()), !dbg !287
  %56 = load ptr, ptr %self, align 8, !dbg !288
  %checknull86 = icmp eq ptr %56, null, !dbg !288
  %57 = call i1 @llvm.expect.i1(i1 %checknull86, i1 false), !dbg !288
  br i1 %57, label %panic87, label %checkok91, !dbg !288

checkok91:                                        ; preds = %if.else
  %ptradd92 = getelementptr inbounds i8, ptr %56, i64 16, !dbg !288
  %58 = load i64, ptr %ptradd92, align 8, !dbg !288
  %59 = load i64, ptr %size, align 8, !dbg !289
  %add = add i64 %58, %59, !dbg !288
  %60 = load i64, ptr %old_size, align 8, !dbg !290
  %sub93 = sub i64 %add, %60, !dbg !288
  store i64 %sub93, ptr %new_used, align 8, !dbg !288
  %61 = load i64, ptr %new_used, align 8, !dbg !291
  %62 = load i64, ptr %total_len, align 8, !dbg !292
  %gt94 = icmp ugt i64 %61, %62, !dbg !291
  br i1 %gt94, label %if.then95, label %if.exit96, !dbg !291

if.then95:                                        ; preds = %checkok91
  ret i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" to i64), !dbg !293

if.exit96:                                        ; preds = %checkok91
  %63 = load ptr, ptr %self, align 8, !dbg !294
  %checknull97 = icmp eq ptr %63, null, !dbg !294
  %64 = call i1 @llvm.expect.i1(i1 %checknull97, i1 false), !dbg !294
  br i1 %64, label %panic98, label %checkok102, !dbg !294

checkok102:                                       ; preds = %if.exit96
  %ptradd103 = getelementptr inbounds i8, ptr %63, i64 16, !dbg !294
  %65 = load i64, ptr %new_used, align 8, !dbg !295
  store i64 %65, ptr %ptradd103, align 8, !dbg !295
  br label %if.exit104, !dbg !295

if.exit104:                                       ; preds = %checkok102, %checkok82
  %66 = load ptr, ptr %header, align 8, !dbg !296
  %checknull105 = icmp eq ptr %66, null, !dbg !296
  %67 = call i1 @llvm.expect.i1(i1 %checknull105, i1 false), !dbg !296
  br i1 %67, label %panic106, label %checkok110, !dbg !296

checkok110:                                       ; preds = %if.exit104
  %68 = load i64, ptr %size, align 8, !dbg !297
  store i64 %68, ptr %66, align 8, !dbg !297
  %69 = load ptr, ptr %old_pointer, align 8, !dbg !298
  store ptr %69, ptr %0, align 8, !dbg !298
  ret i64 0, !dbg !298

if.exit111:                                       ; preds = %and.phi72
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !299, metadata !DIExpression()), !dbg !300
  %70 = load ptr, ptr %self, align 8
  %71 = load i64, ptr %size, align 8
  %72 = load i64, ptr %alignment, align 8
  %73 = call i64 @std.core.mem.allocator.ArenaAllocator.acquire(ptr %retparam, ptr %70, i64 %71, i32 0, i64 %72), !dbg !301
  %not_err = icmp eq i64 %73, 0, !dbg !301
  %74 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !301
  br i1 %74, label %after_check, label %assign_optional, !dbg !301

assign_optional:                                  ; preds = %if.exit111
  store i64 %73, ptr %error_var, align 8, !dbg !301
  br label %guard_block, !dbg !301

after_check:                                      ; preds = %if.exit111
  br label %noerr_block, !dbg !301

guard_block:                                      ; preds = %assign_optional
  %75 = load i64, ptr %error_var, align 8, !dbg !301
  ret i64 %75, !dbg !301

noerr_block:                                      ; preds = %after_check
  %76 = load ptr, ptr %retparam, align 8, !dbg !301
  store ptr %76, ptr %mem, align 8, !dbg !301
  %77 = load ptr, ptr %mem, align 8
  store ptr %77, ptr %dst, align 8
  %78 = load ptr, ptr %old_pointer, align 8
  store ptr %78, ptr %src, align 8
  %79 = load i64, ptr %old_size, align 8
  store i64 %79, ptr %len, align 8
  %80 = load i64, ptr %len, align 8, !dbg !302
  %eq112 = icmp eq i64 0, %80, !dbg !302
  br i1 %eq112, label %or.phi116, label %or.rhs113, !dbg !302

or.rhs113:                                        ; preds = %noerr_block
  %81 = load ptr, ptr %dst, align 8, !dbg !306
  %82 = load i64, ptr %len, align 8, !dbg !307
  %ptradd_any114 = getelementptr i8, ptr %81, i64 %82, !dbg !307
  %83 = load ptr, ptr %src, align 8, !dbg !308
  %le115 = icmp ule ptr %ptradd_any114, %83, !dbg !306
  br label %or.phi116, !dbg !306

or.phi116:                                        ; preds = %or.rhs113, %noerr_block
  %val117 = phi i1 [ true, %noerr_block ], [ %le115, %or.rhs113 ], !dbg !306
  br i1 %val117, label %or.phi121, label %or.rhs118, !dbg !306

or.rhs118:                                        ; preds = %or.phi116
  %84 = load ptr, ptr %src, align 8, !dbg !309
  %85 = load i64, ptr %len, align 8, !dbg !310
  %ptradd_any119 = getelementptr i8, ptr %84, i64 %85, !dbg !310
  %86 = load ptr, ptr %dst, align 8, !dbg !311
  %le120 = icmp ule ptr %ptradd_any119, %86, !dbg !309
  br label %or.phi121, !dbg !309

or.phi121:                                        ; preds = %or.rhs118, %or.phi116
  %val122 = phi i1 [ true, %or.phi116 ], [ %le120, %or.rhs118 ], !dbg !309
  br i1 %val122, label %assert_ok127, label %assert_fail123, !dbg !309

assert_fail123:                                   ; preds = %or.phi121
  store %"char[]" { ptr @.panic_msg.18, i64 95 }, ptr %indirectarg124, align 8
  store %"char[]" { ptr @.file.19, i64 6 }, ptr %indirectarg125, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg126, align 8
  %87 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %87(ptr align 8 %indirectarg124, ptr align 8 %indirectarg125, ptr align 8 %indirectarg126, i32 309), !dbg !302
  unreachable, !dbg !302

assert_ok127:                                     ; preds = %or.phi121
  %88 = load ptr, ptr %dst, align 8, !dbg !312
  %89 = load ptr, ptr %src, align 8, !dbg !313
  %90 = load i64, ptr %len, align 8, !dbg !314
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %88, ptr align 16 %89, i64 %90, i1 false), !dbg !315
  %91 = load ptr, ptr %mem, align 8, !dbg !316
  store ptr %91, ptr %0, align 8, !dbg !316
  ret i64 0, !dbg !316

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg2, align 8
  %92 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %92(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 79), !dbg !236
  unreachable, !dbg !236

panic23:                                          ; preds = %assert_ok22
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg26, align 8
  %93 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %93(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 82), !dbg !257
  unreachable, !dbg !257

panic34:                                          ; preds = %assert_ok32
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg37, align 8
  %94 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %94(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 83), !dbg !260
  unreachable, !dbg !260

panic40:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.8, i64 47 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg43, align 8
  %95 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %95(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 86), !dbg !270
  unreachable, !dbg !270

panic46:                                          ; preds = %checkok44
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg49, align 8
  %96 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %96(ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, i32 88), !dbg !271
  unreachable, !dbg !271

panic53:                                          ; preds = %checkok50
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg56, align 8
  %97 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %97(ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, i32 88), !dbg !272
  unreachable, !dbg !272

panic60:                                          ; preds = %checkok57
  store i64 %37, ptr %taddr, align 8
  %98 = insertvalue %any undef, ptr %taddr, 0
  %99 = insertvalue %any %98, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %41, ptr %taddr61, align 8
  %100 = insertvalue %any undef, ptr %taddr61, 0
  %101 = insertvalue %any %100, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.9, i64 59 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg64, align 8
  store %any %99, ptr %varargslots, align 16
  %ptradd65 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %101, ptr %ptradd65, align 16
  %102 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %102, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg66, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, i32 88, ptr align 8 %indirectarg66), !dbg !272
  unreachable, !dbg !272

panic78:                                          ; preds = %if.then76
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg79, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg80, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg81, align 8
  %103 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %103(ptr align 8 %indirectarg79, ptr align 8 %indirectarg80, ptr align 8 %indirectarg81, i32 92), !dbg !281
  unreachable, !dbg !281

panic87:                                          ; preds = %if.else
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg88, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg90, align 8
  %104 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %104(ptr align 8 %indirectarg88, ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, i32 96), !dbg !288
  unreachable, !dbg !288

panic98:                                          ; preds = %if.exit96
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg99, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg100, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg101, align 8
  %105 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %105(ptr align 8 %indirectarg99, ptr align 8 %indirectarg100, ptr align 8 %indirectarg101, i32 98), !dbg !294
  unreachable, !dbg !294

panic106:                                         ; preds = %if.exit104
  store %"char[]" { ptr @.panic_msg.8, i64 47 }, ptr %indirectarg107, align 8
  store %"char[]" { ptr @.file, i64 18 }, ptr %indirectarg108, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg109, align 8
  %106 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %106(ptr align 8 %indirectarg107, ptr align 8 %indirectarg108, ptr align 8 %indirectarg109, i32 100), !dbg !296
  unreachable, !dbg !296
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.DynamicArenaAllocator.init(ptr %0, i64 %1, ptr align 8 %2) #0 comdat !dbg !317 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %page_size = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %3 = icmp eq ptr %0, null, !dbg !336
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !336
  br i1 %4, label %panic, label %checkok, !dbg !336

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !337, metadata !DIExpression()), !dbg !338
  store i64 %1, ptr %page_size, align 8
  call void @llvm.dbg.declare(metadata ptr %page_size, metadata !339, metadata !DIExpression()), !dbg !340
  call void @llvm.dbg.declare(metadata ptr %2, metadata !341, metadata !DIExpression()), !dbg !342
  %5 = load i64, ptr %page_size, align 8, !dbg !343
  %le = icmp ule i64 128, %5, !dbg !343
  br i1 %le, label %assert_ok, label %assert_fail, !dbg !343

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.21, i64 37 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 17), !dbg !343
  unreachable, !dbg !343

assert_ok:                                        ; preds = %checkok
  %7 = load ptr, ptr %self, align 8, !dbg !345
  %checknull = icmp eq ptr %7, null, !dbg !345
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !345
  br i1 %8, label %panic6, label %checkok10, !dbg !345

checkok10:                                        ; preds = %assert_ok
  %ptradd = getelementptr inbounds i8, ptr %7, i64 16, !dbg !345
  store ptr null, ptr %ptradd, align 8, !dbg !346
  %9 = load ptr, ptr %self, align 8, !dbg !347
  %checknull11 = icmp eq ptr %9, null, !dbg !347
  %10 = call i1 @llvm.expect.i1(i1 %checknull11, i1 false), !dbg !347
  br i1 %10, label %panic12, label %checkok16, !dbg !347

checkok16:                                        ; preds = %checkok10
  %ptradd17 = getelementptr inbounds i8, ptr %9, i64 24, !dbg !347
  store ptr null, ptr %ptradd17, align 8, !dbg !348
  %11 = load ptr, ptr %self, align 8, !dbg !349
  %checknull18 = icmp eq ptr %11, null, !dbg !349
  %12 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !349
  br i1 %12, label %panic19, label %checkok23, !dbg !349

checkok23:                                        ; preds = %checkok16
  %ptradd24 = getelementptr inbounds i8, ptr %11, i64 32, !dbg !349
  %13 = load i64, ptr %page_size, align 8, !dbg !350
  store i64 %13, ptr %ptradd24, align 8, !dbg !350
  %14 = load ptr, ptr %self, align 8, !dbg !351
  %checknull25 = icmp eq ptr %14, null, !dbg !351
  %15 = call i1 @llvm.expect.i1(i1 %checknull25, i1 false), !dbg !351
  br i1 %15, label %panic26, label %checkok30, !dbg !351

checkok30:                                        ; preds = %checkok23
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %14, ptr align 8 %2, i32 16, i1 false), !dbg !352
  ret void, !dbg !352

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 19), !dbg !338
  unreachable, !dbg !338

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg9, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 21), !dbg !345
  unreachable, !dbg !345

panic12:                                          ; preds = %checkok10
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg15, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 22), !dbg !347
  unreachable, !dbg !347

panic19:                                          ; preds = %checkok16
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg22, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 23), !dbg !349
  unreachable, !dbg !349

panic26:                                          ; preds = %checkok23
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg29, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 24), !dbg !351
  unreachable, !dbg !351
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.DynamicArenaAllocator.free(ptr %0) #0 comdat !dbg !353 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %page = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %next_page = alloca ptr, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %allocator = alloca %any, align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %ptr = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %allocator38 = alloca %any, align 8
  %ptr39 = alloca ptr, align 8
  %.inlinecache44 = alloca ptr, align 8
  %.cachedtype45 = alloca ptr, align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %next_page68 = alloca ptr, align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg78 = alloca %"char[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %indirectarg80 = alloca %"char[]", align 8
  %allocator82 = alloca %any, align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %ptr89 = alloca ptr, align 8
  %.inlinecache94 = alloca ptr, align 8
  %.cachedtype95 = alloca ptr, align 8
  %indirectarg103 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg105 = alloca %"char[]", align 8
  %indirectarg110 = alloca %"char[]", align 8
  %indirectarg111 = alloca %"char[]", align 8
  %indirectarg112 = alloca %"char[]", align 8
  %allocator114 = alloca %any, align 8
  %ptr115 = alloca ptr, align 8
  %.inlinecache120 = alloca ptr, align 8
  %.cachedtype121 = alloca ptr, align 8
  %indirectarg129 = alloca %"char[]", align 8
  %indirectarg130 = alloca %"char[]", align 8
  %indirectarg131 = alloca %"char[]", align 8
  %indirectarg137 = alloca %"char[]", align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg139 = alloca %"char[]", align 8
  %indirectarg144 = alloca %"char[]", align 8
  %indirectarg145 = alloca %"char[]", align 8
  %indirectarg146 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype121, align 8, !dbg !356
  store ptr null, ptr %.cachedtype95, align 8, !dbg !356
  store ptr null, ptr %.cachedtype45, align 8, !dbg !356
  store ptr null, ptr %.cachedtype, align 8, !dbg !356
  %1 = icmp eq ptr %0, null, !dbg !356
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !356
  br i1 %2, label %panic, label %checkok, !dbg !356

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !357, metadata !DIExpression()), !dbg !358
  call void @llvm.dbg.declare(metadata ptr %page, metadata !359, metadata !DIExpression()), !dbg !360
  %3 = load ptr, ptr %self, align 8, !dbg !361
  %checknull = icmp eq ptr %3, null, !dbg !361
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !361
  br i1 %4, label %panic3, label %checkok7, !dbg !361

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !361
  %5 = load ptr, ptr %ptradd, align 8, !dbg !361
  store ptr %5, ptr %page, align 8, !dbg !361
  br label %loop.cond, !dbg !362

loop.cond:                                        ; preds = %expr_block.exit57, %checkok7
  %6 = load ptr, ptr %page, align 8, !dbg !363
  %ptrbool = icmp ne ptr %6, null, !dbg !363
  br i1 %ptrbool, label %loop.body, label %loop.exit, !dbg !363

loop.body:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %next_page, metadata !365, metadata !DIExpression()), !dbg !367
  %7 = load ptr, ptr %page, align 8, !dbg !368
  %checknull8 = icmp eq ptr %7, null, !dbg !368
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !368
  br i1 %8, label %panic9, label %checkok13, !dbg !368

checkok13:                                        ; preds = %loop.body
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 8, !dbg !368
  %9 = load ptr, ptr %ptradd14, align 8, !dbg !368
  store ptr %9, ptr %next_page, align 8, !dbg !368
  %10 = load ptr, ptr %self, align 8, !dbg !369
  %checknull15 = icmp eq ptr %10, null, !dbg !369
  %11 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !369
  br i1 %11, label %panic16, label %checkok20, !dbg !369

checkok20:                                        ; preds = %checkok13
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %10, i32 16, i1 false)
  %12 = load ptr, ptr %page, align 8, !dbg !370
  %checknull21 = icmp eq ptr %12, null, !dbg !370
  %13 = call i1 @llvm.expect.i1(i1 %checknull21, i1 false), !dbg !370
  br i1 %13, label %panic22, label %checkok26, !dbg !370

checkok26:                                        ; preds = %checkok20
  %14 = load ptr, ptr %12, align 8
  store ptr %14, ptr %ptr, align 8
  %15 = load ptr, ptr %ptr, align 8, !dbg !371
  %not = icmp eq ptr %15, null, !dbg !371
  br i1 %not, label %if.then, label %if.exit, !dbg !371

if.then:                                          ; preds = %checkok26
  br label %expr_block.exit, !dbg !374

if.exit:                                          ; preds = %checkok26
  %ptradd27 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !375
  %16 = load i64, ptr %ptradd27, align 8, !dbg !375
  %17 = inttoptr i64 %16 to ptr, !dbg !375
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !356
  %18 = icmp eq ptr %17, %type, !dbg !356
  br i1 %18, label %cache_hit, label %cache_miss, !dbg !356

cache_miss:                                       ; preds = %if.exit
  %ptradd28 = getelementptr inbounds i8, ptr %17, i64 16, !dbg !356
  %19 = load ptr, ptr %ptradd28, align 8, !dbg !356
  %20 = call ptr @.dyn_search(ptr %19, ptr @"$sel.release"), !dbg !356
  store ptr %20, ptr %.inlinecache, align 8, !dbg !356
  store ptr %17, ptr %.cachedtype, align 8, !dbg !356
  br label %21, !dbg !356

cache_hit:                                        ; preds = %if.exit
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !356
  br label %21, !dbg !356

21:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %20, %cache_miss ], !dbg !356
  %22 = icmp eq ptr %fn_phi, null, !dbg !356
  br i1 %22, label %missing_function, label %match, !dbg !356

missing_function:                                 ; preds = %21
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg31, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, i32 105), !dbg !376
  unreachable, !dbg !376

match:                                            ; preds = %21
  %24 = load ptr, ptr %allocator, align 8, !dbg !376
  %25 = load ptr, ptr %ptr, align 8, !dbg !376
  call void %fn_phi(ptr %24, ptr %25, i8 zeroext 0), !dbg !376
  br label %expr_block.exit, !dbg !376

expr_block.exit:                                  ; preds = %match, %if.then
  %26 = load ptr, ptr %self, align 8, !dbg !377
  %checknull32 = icmp eq ptr %26, null, !dbg !377
  %27 = call i1 @llvm.expect.i1(i1 %checknull32, i1 false), !dbg !377
  br i1 %27, label %panic33, label %checkok37, !dbg !377

checkok37:                                        ; preds = %expr_block.exit
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator38, ptr align 8 %26, i32 16, i1 false)
  %28 = load ptr, ptr %page, align 8, !dbg !378
  store ptr %28, ptr %ptr39, align 8
  %29 = load ptr, ptr %ptr39, align 8, !dbg !379
  %not40 = icmp eq ptr %29, null, !dbg !379
  br i1 %not40, label %if.then41, label %if.exit42, !dbg !379

if.then41:                                        ; preds = %checkok37
  br label %expr_block.exit57, !dbg !382

if.exit42:                                        ; preds = %checkok37
  %ptradd43 = getelementptr inbounds i8, ptr %allocator38, i64 8, !dbg !383
  %30 = load i64, ptr %ptradd43, align 8, !dbg !383
  %31 = inttoptr i64 %30 to ptr, !dbg !383
  %type46 = load ptr, ptr %.cachedtype45, align 8, !dbg !356
  %32 = icmp eq ptr %31, %type46, !dbg !356
  br i1 %32, label %cache_hit49, label %cache_miss47, !dbg !356

cache_miss47:                                     ; preds = %if.exit42
  %ptradd48 = getelementptr inbounds i8, ptr %31, i64 16, !dbg !356
  %33 = load ptr, ptr %ptradd48, align 8, !dbg !356
  %34 = call ptr @.dyn_search(ptr %33, ptr @"$sel.release"), !dbg !356
  store ptr %34, ptr %.inlinecache44, align 8, !dbg !356
  store ptr %31, ptr %.cachedtype45, align 8, !dbg !356
  br label %35, !dbg !356

cache_hit49:                                      ; preds = %if.exit42
  %cache_hit_fn50 = load ptr, ptr %.inlinecache44, align 8, !dbg !356
  br label %35, !dbg !356

35:                                               ; preds = %cache_hit49, %cache_miss47
  %fn_phi51 = phi ptr [ %cache_hit_fn50, %cache_hit49 ], [ %34, %cache_miss47 ], !dbg !356
  %36 = icmp eq ptr %fn_phi51, null, !dbg !356
  br i1 %36, label %missing_function52, label %match56, !dbg !356

missing_function52:                               ; preds = %35
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg55, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, i32 105), !dbg !384
  unreachable, !dbg !384

match56:                                          ; preds = %35
  %38 = load ptr, ptr %allocator38, align 8, !dbg !384
  %39 = load ptr, ptr %ptr39, align 8, !dbg !384
  call void %fn_phi51(ptr %38, ptr %39, i8 zeroext 0), !dbg !384
  br label %expr_block.exit57, !dbg !384

expr_block.exit57:                                ; preds = %match56, %if.then41
  %40 = load ptr, ptr %next_page, align 8, !dbg !385
  store ptr %40, ptr %page, align 8, !dbg !385
  br label %loop.cond, !dbg !385

loop.exit:                                        ; preds = %loop.cond
  %41 = load ptr, ptr %self, align 8, !dbg !386
  %checknull58 = icmp eq ptr %41, null, !dbg !386
  %42 = call i1 @llvm.expect.i1(i1 %checknull58, i1 false), !dbg !386
  br i1 %42, label %panic59, label %checkok63, !dbg !386

checkok63:                                        ; preds = %loop.exit
  %ptradd64 = getelementptr inbounds i8, ptr %41, i64 24, !dbg !386
  %43 = load ptr, ptr %ptradd64, align 8, !dbg !386
  store ptr %43, ptr %page, align 8, !dbg !386
  br label %loop.cond65, !dbg !387

loop.cond65:                                      ; preds = %expr_block.exit133, %checkok63
  %44 = load ptr, ptr %page, align 8, !dbg !388
  %ptrbool66 = icmp ne ptr %44, null, !dbg !388
  br i1 %ptrbool66, label %loop.body67, label %loop.exit134, !dbg !388

loop.body67:                                      ; preds = %loop.cond65
  call void @llvm.dbg.declare(metadata ptr %next_page68, metadata !390, metadata !DIExpression()), !dbg !392
  %45 = load ptr, ptr %page, align 8, !dbg !393
  %checknull69 = icmp eq ptr %45, null, !dbg !393
  %46 = call i1 @llvm.expect.i1(i1 %checknull69, i1 false), !dbg !393
  br i1 %46, label %panic70, label %checkok74, !dbg !393

checkok74:                                        ; preds = %loop.body67
  %ptradd75 = getelementptr inbounds i8, ptr %45, i64 8, !dbg !393
  %47 = load ptr, ptr %ptradd75, align 8, !dbg !393
  store ptr %47, ptr %next_page68, align 8, !dbg !393
  %48 = load ptr, ptr %self, align 8, !dbg !394
  %checknull76 = icmp eq ptr %48, null, !dbg !394
  %49 = call i1 @llvm.expect.i1(i1 %checknull76, i1 false), !dbg !394
  br i1 %49, label %panic77, label %checkok81, !dbg !394

checkok81:                                        ; preds = %checkok74
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator82, ptr align 8 %48, i32 16, i1 false)
  %50 = load ptr, ptr %page, align 8, !dbg !395
  %checknull83 = icmp eq ptr %50, null, !dbg !395
  %51 = call i1 @llvm.expect.i1(i1 %checknull83, i1 false), !dbg !395
  br i1 %51, label %panic84, label %checkok88, !dbg !395

checkok88:                                        ; preds = %checkok81
  %52 = load ptr, ptr %50, align 8
  store ptr %52, ptr %ptr89, align 8
  %53 = load ptr, ptr %ptr89, align 8, !dbg !396
  %not90 = icmp eq ptr %53, null, !dbg !396
  br i1 %not90, label %if.then91, label %if.exit92, !dbg !396

if.then91:                                        ; preds = %checkok88
  br label %expr_block.exit107, !dbg !399

if.exit92:                                        ; preds = %checkok88
  %ptradd93 = getelementptr inbounds i8, ptr %allocator82, i64 8, !dbg !400
  %54 = load i64, ptr %ptradd93, align 8, !dbg !400
  %55 = inttoptr i64 %54 to ptr, !dbg !400
  %type96 = load ptr, ptr %.cachedtype95, align 8, !dbg !356
  %56 = icmp eq ptr %55, %type96, !dbg !356
  br i1 %56, label %cache_hit99, label %cache_miss97, !dbg !356

cache_miss97:                                     ; preds = %if.exit92
  %ptradd98 = getelementptr inbounds i8, ptr %55, i64 16, !dbg !356
  %57 = load ptr, ptr %ptradd98, align 8, !dbg !356
  %58 = call ptr @.dyn_search(ptr %57, ptr @"$sel.release"), !dbg !356
  store ptr %58, ptr %.inlinecache94, align 8, !dbg !356
  store ptr %55, ptr %.cachedtype95, align 8, !dbg !356
  br label %59, !dbg !356

cache_hit99:                                      ; preds = %if.exit92
  %cache_hit_fn100 = load ptr, ptr %.inlinecache94, align 8, !dbg !356
  br label %59, !dbg !356

59:                                               ; preds = %cache_hit99, %cache_miss97
  %fn_phi101 = phi ptr [ %cache_hit_fn100, %cache_hit99 ], [ %58, %cache_miss97 ], !dbg !356
  %60 = icmp eq ptr %fn_phi101, null, !dbg !356
  br i1 %60, label %missing_function102, label %match106, !dbg !356

missing_function102:                              ; preds = %59
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg103, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg104, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg105, align 8
  %61 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %61(ptr align 8 %indirectarg103, ptr align 8 %indirectarg104, ptr align 8 %indirectarg105, i32 105), !dbg !401
  unreachable, !dbg !401

match106:                                         ; preds = %59
  %62 = load ptr, ptr %allocator82, align 8, !dbg !401
  %63 = load ptr, ptr %ptr89, align 8, !dbg !401
  call void %fn_phi101(ptr %62, ptr %63, i8 zeroext 0), !dbg !401
  br label %expr_block.exit107, !dbg !401

expr_block.exit107:                               ; preds = %match106, %if.then91
  %64 = load ptr, ptr %self, align 8, !dbg !402
  %checknull108 = icmp eq ptr %64, null, !dbg !402
  %65 = call i1 @llvm.expect.i1(i1 %checknull108, i1 false), !dbg !402
  br i1 %65, label %panic109, label %checkok113, !dbg !402

checkok113:                                       ; preds = %expr_block.exit107
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator114, ptr align 8 %64, i32 16, i1 false)
  %66 = load ptr, ptr %page, align 8, !dbg !403
  store ptr %66, ptr %ptr115, align 8
  %67 = load ptr, ptr %ptr115, align 8, !dbg !404
  %not116 = icmp eq ptr %67, null, !dbg !404
  br i1 %not116, label %if.then117, label %if.exit118, !dbg !404

if.then117:                                       ; preds = %checkok113
  br label %expr_block.exit133, !dbg !407

if.exit118:                                       ; preds = %checkok113
  %ptradd119 = getelementptr inbounds i8, ptr %allocator114, i64 8, !dbg !408
  %68 = load i64, ptr %ptradd119, align 8, !dbg !408
  %69 = inttoptr i64 %68 to ptr, !dbg !408
  %type122 = load ptr, ptr %.cachedtype121, align 8, !dbg !356
  %70 = icmp eq ptr %69, %type122, !dbg !356
  br i1 %70, label %cache_hit125, label %cache_miss123, !dbg !356

cache_miss123:                                    ; preds = %if.exit118
  %ptradd124 = getelementptr inbounds i8, ptr %69, i64 16, !dbg !356
  %71 = load ptr, ptr %ptradd124, align 8, !dbg !356
  %72 = call ptr @.dyn_search(ptr %71, ptr @"$sel.release"), !dbg !356
  store ptr %72, ptr %.inlinecache120, align 8, !dbg !356
  store ptr %69, ptr %.cachedtype121, align 8, !dbg !356
  br label %73, !dbg !356

cache_hit125:                                     ; preds = %if.exit118
  %cache_hit_fn126 = load ptr, ptr %.inlinecache120, align 8, !dbg !356
  br label %73, !dbg !356

73:                                               ; preds = %cache_hit125, %cache_miss123
  %fn_phi127 = phi ptr [ %cache_hit_fn126, %cache_hit125 ], [ %72, %cache_miss123 ], !dbg !356
  %74 = icmp eq ptr %fn_phi127, null, !dbg !356
  br i1 %74, label %missing_function128, label %match132, !dbg !356

missing_function128:                              ; preds = %73
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg129, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg130, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg131, align 8
  %75 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %75(ptr align 8 %indirectarg129, ptr align 8 %indirectarg130, ptr align 8 %indirectarg131, i32 105), !dbg !409
  unreachable, !dbg !409

match132:                                         ; preds = %73
  %76 = load ptr, ptr %allocator114, align 8, !dbg !409
  %77 = load ptr, ptr %ptr115, align 8, !dbg !409
  call void %fn_phi127(ptr %76, ptr %77, i8 zeroext 0), !dbg !409
  br label %expr_block.exit133, !dbg !409

expr_block.exit133:                               ; preds = %match132, %if.then117
  %78 = load ptr, ptr %next_page68, align 8, !dbg !410
  store ptr %78, ptr %page, align 8, !dbg !410
  br label %loop.cond65, !dbg !410

loop.exit134:                                     ; preds = %loop.cond65
  %79 = load ptr, ptr %self, align 8, !dbg !411
  %checknull135 = icmp eq ptr %79, null, !dbg !411
  %80 = call i1 @llvm.expect.i1(i1 %checknull135, i1 false), !dbg !411
  br i1 %80, label %panic136, label %checkok140, !dbg !411

checkok140:                                       ; preds = %loop.exit134
  %ptradd141 = getelementptr inbounds i8, ptr %79, i64 16, !dbg !411
  store ptr null, ptr %ptradd141, align 8, !dbg !412
  %81 = load ptr, ptr %self, align 8, !dbg !413
  %checknull142 = icmp eq ptr %81, null, !dbg !413
  %82 = call i1 @llvm.expect.i1(i1 %checknull142, i1 false), !dbg !413
  br i1 %82, label %panic143, label %checkok147, !dbg !413

checkok147:                                       ; preds = %checkok140
  %ptradd148 = getelementptr inbounds i8, ptr %81, i64 24, !dbg !413
  store ptr null, ptr %ptradd148, align 8, !dbg !414
  ret void, !dbg !414

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg2, align 8
  %83 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %83(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 27), !dbg !358
  unreachable, !dbg !358

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg6, align 8
  %84 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %84(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 29), !dbg !361
  unreachable, !dbg !361

panic9:                                           ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg12, align 8
  %85 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %85(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 32), !dbg !368
  unreachable, !dbg !368

panic16:                                          ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg19, align 8
  %86 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %86(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 33), !dbg !369
  unreachable, !dbg !369

panic22:                                          ; preds = %checkok20
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg25, align 8
  %87 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %87(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 33), !dbg !370
  unreachable, !dbg !370

panic33:                                          ; preds = %expr_block.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg36, align 8
  %88 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %88(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 34), !dbg !377
  unreachable, !dbg !377

panic59:                                          ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg62, align 8
  %89 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %89(ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, i32 37), !dbg !386
  unreachable, !dbg !386

panic70:                                          ; preds = %loop.body67
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg72, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg73, align 8
  %90 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %90(ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, ptr align 8 %indirectarg73, i32 40), !dbg !393
  unreachable, !dbg !393

panic77:                                          ; preds = %checkok74
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg78, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg79, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg80, align 8
  %91 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %91(ptr align 8 %indirectarg78, ptr align 8 %indirectarg79, ptr align 8 %indirectarg80, i32 41), !dbg !394
  unreachable, !dbg !394

panic84:                                          ; preds = %checkok81
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg86, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg87, align 8
  %92 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %92(ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, ptr align 8 %indirectarg87, i32 41), !dbg !395
  unreachable, !dbg !395

panic109:                                         ; preds = %expr_block.exit107
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg110, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg111, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg112, align 8
  %93 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %93(ptr align 8 %indirectarg110, ptr align 8 %indirectarg111, ptr align 8 %indirectarg112, i32 42), !dbg !402
  unreachable, !dbg !402

panic136:                                         ; preds = %loop.exit134
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg137, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg138, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg139, align 8
  %94 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %94(ptr align 8 %indirectarg137, ptr align 8 %indirectarg138, ptr align 8 %indirectarg139, i32 45), !dbg !411
  unreachable, !dbg !411

panic143:                                         ; preds = %checkok140
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg144, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg145, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg146, align 8
  %95 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %95(ptr align 8 %indirectarg144, ptr align 8 %indirectarg145, ptr align 8 %indirectarg146, i32 46), !dbg !413
  unreachable, !dbg !413
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.DynamicArenaAllocator.release(ptr %0, ptr %1, i8 zeroext %2) #0 comdat !dbg !415 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %.anon = alloca i8, align 1
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %current_page = alloca ptr, align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %3 = icmp eq ptr %0, null, !dbg !418
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !418
  br i1 %4, label %panic, label %checkok, !dbg !418

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !419, metadata !DIExpression()), !dbg !420
  store ptr %1, ptr %ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr, metadata !421, metadata !DIExpression()), !dbg !422
  store i8 %2, ptr %.anon, align 1
  call void @llvm.dbg.declare(metadata ptr %.anon, metadata !423, metadata !DIExpression()), !dbg !424
  %5 = load ptr, ptr %ptr, align 8, !dbg !425
  %ptrbool = icmp ne ptr %5, null, !dbg !425
  br i1 %ptrbool, label %assert_ok, label %assert_fail, !dbg !425

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.26, i64 24 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 64), !dbg !425
  unreachable, !dbg !425

assert_ok:                                        ; preds = %checkok
  %7 = load ptr, ptr %self, align 8, !dbg !427
  %checknull = icmp eq ptr %7, null, !dbg !427
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !427
  br i1 %8, label %panic6, label %checkok10, !dbg !427

checkok10:                                        ; preds = %assert_ok
  %ptradd = getelementptr inbounds i8, ptr %7, i64 16, !dbg !427
  %9 = load ptr, ptr %ptradd, align 8, !dbg !427
  %ptrbool11 = icmp ne ptr %9, null, !dbg !427
  br i1 %ptrbool11, label %assert_ok16, label %assert_fail12, !dbg !427

assert_fail12:                                    ; preds = %checkok10
  store %"char[]" { ptr @.panic_msg.27, i64 76 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg15, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 65), !dbg !427
  unreachable, !dbg !427

assert_ok16:                                      ; preds = %checkok10
  call void @llvm.dbg.declare(metadata ptr %current_page, metadata !428, metadata !DIExpression()), !dbg !429
  %11 = load ptr, ptr %self, align 8, !dbg !430
  %checknull17 = icmp eq ptr %11, null, !dbg !430
  %12 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !430
  br i1 %12, label %panic18, label %checkok22, !dbg !430

checkok22:                                        ; preds = %assert_ok16
  %ptradd23 = getelementptr inbounds i8, ptr %11, i64 16, !dbg !430
  %13 = load ptr, ptr %ptradd23, align 8, !dbg !430
  store ptr %13, ptr %current_page, align 8, !dbg !430
  %14 = load ptr, ptr %ptr, align 8, !dbg !431
  %15 = load ptr, ptr %current_page, align 8, !dbg !432
  %checknull24 = icmp eq ptr %15, null, !dbg !432
  %16 = call i1 @llvm.expect.i1(i1 %checknull24, i1 false), !dbg !432
  br i1 %16, label %panic25, label %checkok29, !dbg !432

checkok29:                                        ; preds = %checkok22
  %ptradd30 = getelementptr inbounds i8, ptr %15, i64 32, !dbg !432
  %17 = load ptr, ptr %ptradd30, align 8, !dbg !432
  %eq = icmp eq ptr %14, %17, !dbg !431
  br i1 %eq, label %if.then, label %if.exit, !dbg !431

if.then:                                          ; preds = %checkok29
  %18 = load ptr, ptr %current_page, align 8, !dbg !433
  %checknull31 = icmp eq ptr %18, null, !dbg !433
  %19 = call i1 @llvm.expect.i1(i1 %checknull31, i1 false), !dbg !433
  br i1 %19, label %panic32, label %checkok36, !dbg !433

checkok36:                                        ; preds = %if.then
  %ptradd37 = getelementptr inbounds i8, ptr %18, i64 24, !dbg !433
  %20 = load ptr, ptr %ptr, align 8, !dbg !435
  %ptradd_any = getelementptr i8, ptr %20, i64 -8, !dbg !436
  %21 = load ptr, ptr %current_page, align 8, !dbg !437
  %checknull38 = icmp eq ptr %21, null, !dbg !437
  %22 = call i1 @llvm.expect.i1(i1 %checknull38, i1 false), !dbg !437
  br i1 %22, label %panic39, label %checkok43, !dbg !437

checkok43:                                        ; preds = %checkok36
  %23 = load ptr, ptr %21, align 8, !dbg !437
  %24 = ptrtoint ptr %23 to i64, !dbg !438
  %25 = ptrtoint ptr %ptradd_any to i64, !dbg !438
  %26 = sub i64 %25, %24, !dbg !438
  %27 = sdiv exact i64 %26, 1, !dbg !438
  store i64 %27, ptr %ptradd37, align 8, !dbg !438
  br label %if.exit, !dbg !438

if.exit:                                          ; preds = %checkok43, %checkok29
  %28 = load ptr, ptr %current_page, align 8, !dbg !439
  %checknull44 = icmp eq ptr %28, null, !dbg !439
  %29 = call i1 @llvm.expect.i1(i1 %checknull44, i1 false), !dbg !439
  br i1 %29, label %panic45, label %checkok49, !dbg !439

checkok49:                                        ; preds = %if.exit
  %ptradd50 = getelementptr inbounds i8, ptr %28, i64 32, !dbg !439
  store ptr null, ptr %ptradd50, align 8, !dbg !440
  ret void, !dbg !440

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg2, align 8
  %30 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %30(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 67), !dbg !420
  unreachable, !dbg !420

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg9, align 8
  %31 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %31(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 65), !dbg !427
  unreachable, !dbg !427

panic18:                                          ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg21, align 8
  %32 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %32(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 69), !dbg !430
  unreachable, !dbg !430

panic25:                                          ; preds = %checkok22
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg28, align 8
  %33 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %33(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 70), !dbg !432
  unreachable, !dbg !432

panic32:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg35, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, i32 72), !dbg !433
  unreachable, !dbg !433

panic39:                                          ; preds = %checkok36
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg42, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, i32 72), !dbg !437
  unreachable, !dbg !437

panic45:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg48, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, i32 74), !dbg !439
  unreachable, !dbg !439
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.DynamicArenaAllocator.resize(ptr %0, ptr %1, ptr %2, i64 %3, i64 %4) #0 comdat !dbg !441 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_pointer = alloca ptr, align 8
  %size = alloca i64, align 8
  %alignment = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %current_page = alloca ptr, align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %old_size_ptr = alloca ptr, align 8
  %old_size = alloca i64, align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %indirectarg78 = alloca %"char[]", align 8
  %add_size = alloca i64, align 8
  %indirectarg82 = alloca %"char[]", align 8
  %indirectarg83 = alloca %"char[]", align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg91 = alloca %"char[]", align 8
  %indirectarg99 = alloca %"char[]", align 8
  %indirectarg100 = alloca %"char[]", align 8
  %indirectarg101 = alloca %"char[]", align 8
  %indirectarg105 = alloca %"char[]", align 8
  %indirectarg106 = alloca %"char[]", align 8
  %indirectarg107 = alloca %"char[]", align 8
  %reterr111 = alloca i64, align 8
  %new_mem = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %dst = alloca ptr, align 8
  %src = alloca ptr, align 8
  %len = alloca i64, align 8
  %indirectarg122 = alloca %"char[]", align 8
  %indirectarg123 = alloca %"char[]", align 8
  %indirectarg124 = alloca %"char[]", align 8
  %reterr126 = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !444
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !444
  br i1 %6, label %panic, label %checkok, !dbg !444

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !445, metadata !DIExpression()), !dbg !446
  store ptr %2, ptr %old_pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %old_pointer, metadata !447, metadata !DIExpression()), !dbg !448
  store i64 %3, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !449, metadata !DIExpression()), !dbg !450
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !451, metadata !DIExpression()), !dbg !452
  %7 = load i64, ptr %size, align 8, !dbg !453
  %lt = icmp ult i64 0, %7, !dbg !453
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !453

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.29, i64 63 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg5, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 78), !dbg !453
  unreachable, !dbg !453

assert_ok:                                        ; preds = %checkok
  %9 = load ptr, ptr %old_pointer, align 8, !dbg !455
  %neq = icmp ne ptr %9, null, !dbg !455
  br i1 %neq, label %assert_ok10, label %assert_fail6, !dbg !455

assert_fail6:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.30, i64 79 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg9, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 79), !dbg !455
  unreachable, !dbg !455

assert_ok10:                                      ; preds = %assert_ok
  %11 = load ptr, ptr %self, align 8, !dbg !456
  %checknull = icmp eq ptr %11, null, !dbg !456
  %12 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !456
  br i1 %12, label %panic11, label %checkok15, !dbg !456

checkok15:                                        ; preds = %assert_ok10
  %ptradd = getelementptr inbounds i8, ptr %11, i64 16, !dbg !456
  %13 = load ptr, ptr %ptradd, align 8, !dbg !456
  %ptrbool = icmp ne ptr %13, null, !dbg !456
  br i1 %ptrbool, label %assert_ok20, label %assert_fail16, !dbg !456

assert_fail16:                                    ; preds = %checkok15
  store %"char[]" { ptr @.panic_msg.31, i64 79 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg19, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 80), !dbg !456
  unreachable, !dbg !456

assert_ok20:                                      ; preds = %checkok15
  call void @llvm.dbg.declare(metadata ptr %current_page, metadata !457, metadata !DIExpression()), !dbg !458
  %15 = load ptr, ptr %self, align 8, !dbg !459
  %checknull21 = icmp eq ptr %15, null, !dbg !459
  %16 = call i1 @llvm.expect.i1(i1 %checknull21, i1 false), !dbg !459
  br i1 %16, label %panic22, label %checkok26, !dbg !459

checkok26:                                        ; preds = %assert_ok20
  %ptradd27 = getelementptr inbounds i8, ptr %15, i64 16, !dbg !459
  %17 = load ptr, ptr %ptradd27, align 8, !dbg !459
  store ptr %17, ptr %current_page, align 8, !dbg !459
  %18 = load i64, ptr %alignment, align 8, !dbg !460
  %19 = call i64 @std.core.mem.allocator.alignment_for_allocation(i64 %18) #5, !dbg !461
  store i64 %19, ptr %alignment, align 8, !dbg !461
  call void @llvm.dbg.declare(metadata ptr %old_size_ptr, metadata !462, metadata !DIExpression()), !dbg !464
  %20 = load ptr, ptr %old_pointer, align 8, !dbg !465
  %ptradd_any = getelementptr i8, ptr %20, i64 -8, !dbg !466
  store ptr %ptradd_any, ptr %old_size_ptr, align 8, !dbg !466
  call void @llvm.dbg.declare(metadata ptr %old_size, metadata !467, metadata !DIExpression()), !dbg !468
  %21 = load ptr, ptr %old_size_ptr, align 8, !dbg !469
  %checknull28 = icmp eq ptr %21, null, !dbg !469
  %22 = call i1 @llvm.expect.i1(i1 %checknull28, i1 false), !dbg !469
  br i1 %22, label %panic29, label %checkok33, !dbg !469

checkok33:                                        ; preds = %checkok26
  %23 = load i64, ptr %21, align 8, !dbg !469
  store i64 %23, ptr %old_size, align 8, !dbg !469
  %24 = load i64, ptr %old_size, align 8, !dbg !470
  %25 = load i64, ptr %size, align 8, !dbg !471
  %ge = icmp uge i64 %24, %25, !dbg !470
  br i1 %ge, label %and.rhs, label %and.phi, !dbg !470

and.rhs:                                          ; preds = %checkok33
  %26 = load ptr, ptr %old_pointer, align 8, !dbg !472
  %27 = load i64, ptr %alignment, align 8, !dbg !472
  %28 = call i8 @std.core.mem.ptr_is_aligned(ptr %26, i64 %27) #5, !dbg !473
  %29 = trunc i8 %28 to i1, !dbg !473
  br label %and.phi, !dbg !473

and.phi:                                          ; preds = %and.rhs, %checkok33
  %val = phi i1 [ false, %checkok33 ], [ %29, %and.rhs ], !dbg !473
  br i1 %val, label %if.then, label %if.exit62, !dbg !473

if.then:                                          ; preds = %and.phi
  %30 = load ptr, ptr %old_size_ptr, align 8, !dbg !474
  %checknull34 = icmp eq ptr %30, null, !dbg !474
  %31 = call i1 @llvm.expect.i1(i1 %checknull34, i1 false), !dbg !474
  br i1 %31, label %panic35, label %checkok39, !dbg !474

checkok39:                                        ; preds = %if.then
  %32 = load i64, ptr %size, align 8, !dbg !476
  store i64 %32, ptr %30, align 8, !dbg !476
  %33 = load ptr, ptr %current_page, align 8, !dbg !477
  %checknull40 = icmp eq ptr %33, null, !dbg !477
  %34 = call i1 @llvm.expect.i1(i1 %checknull40, i1 false), !dbg !477
  br i1 %34, label %panic41, label %checkok45, !dbg !477

checkok45:                                        ; preds = %checkok39
  %ptradd46 = getelementptr inbounds i8, ptr %33, i64 32, !dbg !477
  %35 = load ptr, ptr %ptradd46, align 8, !dbg !477
  %36 = load ptr, ptr %old_pointer, align 8, !dbg !478
  %eq = icmp eq ptr %35, %36, !dbg !477
  br i1 %eq, label %if.then47, label %if.exit, !dbg !477

if.then47:                                        ; preds = %checkok45
  %37 = load ptr, ptr %current_page, align 8, !dbg !479
  %checknull48 = icmp eq ptr %37, null, !dbg !479
  %38 = call i1 @llvm.expect.i1(i1 %checknull48, i1 false), !dbg !479
  br i1 %38, label %panic49, label %checkok53, !dbg !479

checkok53:                                        ; preds = %if.then47
  %ptradd54 = getelementptr inbounds i8, ptr %37, i64 24, !dbg !479
  %39 = load ptr, ptr %old_pointer, align 8, !dbg !481
  %ptradd_any55 = getelementptr i8, ptr %39, i64 -8, !dbg !482
  %40 = load ptr, ptr %current_page, align 8, !dbg !483
  %checknull56 = icmp eq ptr %40, null, !dbg !483
  %41 = call i1 @llvm.expect.i1(i1 %checknull56, i1 false), !dbg !483
  br i1 %41, label %panic57, label %checkok61, !dbg !483

checkok61:                                        ; preds = %checkok53
  %42 = load ptr, ptr %40, align 8, !dbg !483
  %43 = ptrtoint ptr %42 to i64, !dbg !484
  %44 = ptrtoint ptr %ptradd_any55 to i64, !dbg !484
  %45 = sub i64 %44, %43, !dbg !484
  %46 = sdiv exact i64 %45, 1, !dbg !484
  store i64 %46, ptr %ptradd54, align 8, !dbg !484
  br label %if.exit, !dbg !484

if.exit:                                          ; preds = %checkok61, %checkok45
  %47 = load ptr, ptr %old_pointer, align 8, !dbg !485
  store ptr %47, ptr %0, align 8, !dbg !485
  ret i64 0, !dbg !485

if.exit62:                                        ; preds = %and.phi
  %48 = load ptr, ptr %current_page, align 8, !dbg !486
  %checknull63 = icmp eq ptr %48, null, !dbg !486
  %49 = call i1 @llvm.expect.i1(i1 %checknull63, i1 false), !dbg !486
  br i1 %49, label %panic64, label %checkok68, !dbg !486

checkok68:                                        ; preds = %if.exit62
  %ptradd69 = getelementptr inbounds i8, ptr %48, i64 32, !dbg !486
  %50 = load ptr, ptr %ptradd69, align 8, !dbg !486
  %51 = load ptr, ptr %old_pointer, align 8, !dbg !487
  %eq70 = icmp eq ptr %50, %51, !dbg !486
  br i1 %eq70, label %and.rhs71, label %and.phi72, !dbg !486

and.rhs71:                                        ; preds = %checkok68
  %52 = load ptr, ptr %old_pointer, align 8, !dbg !488
  %53 = load i64, ptr %alignment, align 8, !dbg !488
  %54 = call i8 @std.core.mem.ptr_is_aligned(ptr %52, i64 %53) #5, !dbg !489
  %55 = trunc i8 %54 to i1, !dbg !489
  br label %and.phi72, !dbg !489

and.phi72:                                        ; preds = %and.rhs71, %checkok68
  %val73 = phi i1 [ false, %checkok68 ], [ %55, %and.rhs71 ], !dbg !489
  br i1 %val73, label %if.then74, label %if.exit112, !dbg !489

if.then74:                                        ; preds = %and.phi72
  %56 = load i64, ptr %size, align 8, !dbg !490
  %57 = load i64, ptr %old_size, align 8, !dbg !492
  %gt = icmp ugt i64 %56, %57, !dbg !490
  br i1 %gt, label %assert_ok79, label %assert_fail75, !dbg !490

assert_fail75:                                    ; preds = %if.then74
  store %"char[]" { ptr @.panic_msg.33, i64 16 }, ptr %indirectarg76, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg77, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg78, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg76, ptr align 8 %indirectarg77, ptr align 8 %indirectarg78, i32 100), !dbg !490
  unreachable, !dbg !490

assert_ok79:                                      ; preds = %if.then74
  call void @llvm.dbg.declare(metadata ptr %add_size, metadata !493, metadata !DIExpression()), !dbg !494
  %59 = load i64, ptr %size, align 8, !dbg !495
  %60 = load i64, ptr %old_size, align 8, !dbg !496
  %sub = sub i64 %59, %60, !dbg !495
  store i64 %sub, ptr %add_size, align 8, !dbg !495
  %61 = load i64, ptr %add_size, align 8, !dbg !497
  %62 = load ptr, ptr %current_page, align 8, !dbg !498
  %checknull80 = icmp eq ptr %62, null, !dbg !498
  %63 = call i1 @llvm.expect.i1(i1 %checknull80, i1 false), !dbg !498
  br i1 %63, label %panic81, label %checkok85, !dbg !498

checkok85:                                        ; preds = %assert_ok79
  %ptradd86 = getelementptr inbounds i8, ptr %62, i64 24, !dbg !498
  %64 = load i64, ptr %ptradd86, align 8, !dbg !498
  %add = add i64 %61, %64, !dbg !497
  %65 = load ptr, ptr %current_page, align 8, !dbg !499
  %checknull87 = icmp eq ptr %65, null, !dbg !499
  %66 = call i1 @llvm.expect.i1(i1 %checknull87, i1 false), !dbg !499
  br i1 %66, label %panic88, label %checkok92, !dbg !499

checkok92:                                        ; preds = %checkok85
  %ptradd93 = getelementptr inbounds i8, ptr %65, i64 16, !dbg !499
  %67 = load i64, ptr %ptradd93, align 8, !dbg !499
  %gt94 = icmp ugt i64 %add, %67, !dbg !497
  br i1 %gt94, label %if.then95, label %if.exit96, !dbg !497

if.then95:                                        ; preds = %checkok92
  br label %if.exit112, !dbg !500

if.exit96:                                        ; preds = %checkok92
  %68 = load ptr, ptr %old_size_ptr, align 8, !dbg !501
  %checknull97 = icmp eq ptr %68, null, !dbg !501
  %69 = call i1 @llvm.expect.i1(i1 %checknull97, i1 false), !dbg !501
  br i1 %69, label %panic98, label %checkok102, !dbg !501

checkok102:                                       ; preds = %if.exit96
  %70 = load i64, ptr %size, align 8, !dbg !502
  store i64 %70, ptr %68, align 8, !dbg !502
  %71 = load ptr, ptr %current_page, align 8, !dbg !503
  %checknull103 = icmp eq ptr %71, null, !dbg !503
  %72 = call i1 @llvm.expect.i1(i1 %checknull103, i1 false), !dbg !503
  br i1 %72, label %panic104, label %checkok108, !dbg !503

checkok108:                                       ; preds = %checkok102
  %ptradd109 = getelementptr inbounds i8, ptr %71, i64 24, !dbg !503
  %73 = load i64, ptr %ptradd109, align 8, !dbg !503
  %74 = load i64, ptr %add_size, align 8, !dbg !504
  %add110 = add i64 %73, %74, !dbg !503
  store i64 %add110, ptr %ptradd109, align 8, !dbg !503
  %75 = load ptr, ptr %old_pointer, align 8, !dbg !505
  store ptr %75, ptr %0, align 8, !dbg !505
  ret i64 0, !dbg !505

if.exit112:                                       ; preds = %if.then95, %and.phi72
  call void @llvm.dbg.declare(metadata ptr %new_mem, metadata !506, metadata !DIExpression()), !dbg !507
  %76 = load ptr, ptr %self, align 8
  %77 = load i64, ptr %size, align 8
  %78 = load i64, ptr %alignment, align 8
  %79 = call i64 @std.core.mem.allocator.DynamicArenaAllocator.acquire(ptr %retparam, ptr %76, i64 %77, i32 0, i64 %78), !dbg !508
  %not_err = icmp eq i64 %79, 0, !dbg !508
  %80 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !508
  br i1 %80, label %after_check, label %assign_optional, !dbg !508

assign_optional:                                  ; preds = %if.exit112
  store i64 %79, ptr %error_var, align 8, !dbg !508
  br label %guard_block, !dbg !508

after_check:                                      ; preds = %if.exit112
  br label %noerr_block, !dbg !508

guard_block:                                      ; preds = %assign_optional
  %81 = load i64, ptr %error_var, align 8, !dbg !508
  ret i64 %81, !dbg !508

noerr_block:                                      ; preds = %after_check
  %82 = load ptr, ptr %retparam, align 8, !dbg !508
  store ptr %82, ptr %new_mem, align 8, !dbg !508
  %83 = load ptr, ptr %new_mem, align 8
  store ptr %83, ptr %dst, align 8
  %84 = load ptr, ptr %old_pointer, align 8
  store ptr %84, ptr %src, align 8
  %85 = load i64, ptr %old_size, align 8
  store i64 %85, ptr %len, align 8
  %86 = load i64, ptr %len, align 8, !dbg !509
  %eq113 = icmp eq i64 0, %86, !dbg !509
  br i1 %eq113, label %or.phi, label %or.rhs, !dbg !509

or.rhs:                                           ; preds = %noerr_block
  %87 = load ptr, ptr %dst, align 8, !dbg !513
  %88 = load i64, ptr %len, align 8, !dbg !514
  %ptradd_any114 = getelementptr i8, ptr %87, i64 %88, !dbg !514
  %89 = load ptr, ptr %src, align 8, !dbg !515
  %le = icmp ule ptr %ptradd_any114, %89, !dbg !513
  br label %or.phi, !dbg !513

or.phi:                                           ; preds = %or.rhs, %noerr_block
  %val115 = phi i1 [ true, %noerr_block ], [ %le, %or.rhs ], !dbg !513
  br i1 %val115, label %or.phi119, label %or.rhs116, !dbg !513

or.rhs116:                                        ; preds = %or.phi
  %90 = load ptr, ptr %src, align 8, !dbg !516
  %91 = load i64, ptr %len, align 8, !dbg !517
  %ptradd_any117 = getelementptr i8, ptr %90, i64 %91, !dbg !517
  %92 = load ptr, ptr %dst, align 8, !dbg !518
  %le118 = icmp ule ptr %ptradd_any117, %92, !dbg !516
  br label %or.phi119, !dbg !516

or.phi119:                                        ; preds = %or.rhs116, %or.phi
  %val120 = phi i1 [ true, %or.phi ], [ %le118, %or.rhs116 ], !dbg !516
  br i1 %val120, label %assert_ok125, label %assert_fail121, !dbg !516

assert_fail121:                                   ; preds = %or.phi119
  store %"char[]" { ptr @.panic_msg.18, i64 95 }, ptr %indirectarg122, align 8
  store %"char[]" { ptr @.file.19, i64 6 }, ptr %indirectarg123, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg124, align 8
  %93 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %93(ptr align 8 %indirectarg122, ptr align 8 %indirectarg123, ptr align 8 %indirectarg124, i32 309), !dbg !509
  unreachable, !dbg !509

assert_ok125:                                     ; preds = %or.phi119
  %94 = load ptr, ptr %dst, align 8, !dbg !519
  %95 = load ptr, ptr %src, align 8, !dbg !520
  %96 = load i64, ptr %len, align 8, !dbg !521
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %94, ptr %95, i64 %96, i1 false), !dbg !522
  %97 = load ptr, ptr %new_mem, align 8, !dbg !523
  store ptr %97, ptr %0, align 8, !dbg !523
  ret i64 0, !dbg !523

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg2, align 8
  %98 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %98(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 82), !dbg !446
  unreachable, !dbg !446

panic11:                                          ; preds = %assert_ok10
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg14, align 8
  %99 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %99(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 80), !dbg !456
  unreachable, !dbg !456

panic22:                                          ; preds = %assert_ok20
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg25, align 8
  %100 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %100(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 84), !dbg !459
  unreachable, !dbg !459

panic29:                                          ; preds = %checkok26
  store %"char[]" { ptr @.panic_msg.32, i64 53 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg32, align 8
  %101 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %101(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 87), !dbg !469
  unreachable, !dbg !469

panic35:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.32, i64 53 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg38, align 8
  %102 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %102(ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, i32 91), !dbg !474
  unreachable, !dbg !474

panic41:                                          ; preds = %checkok39
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg44, align 8
  %103 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %103(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 92), !dbg !477
  unreachable, !dbg !477

panic49:                                          ; preds = %if.then47
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg52, align 8
  %104 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %104(ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, i32 94), !dbg !479
  unreachable, !dbg !479

panic57:                                          ; preds = %checkok53
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg60, align 8
  %105 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %105(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 94), !dbg !483
  unreachable, !dbg !483

panic64:                                          ; preds = %if.exit62
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg65, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg66, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg67, align 8
  %106 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %106(ptr align 8 %indirectarg65, ptr align 8 %indirectarg66, ptr align 8 %indirectarg67, i32 98), !dbg !486
  unreachable, !dbg !486

panic81:                                          ; preds = %assert_ok79
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg82, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg83, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg84, align 8
  %107 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %107(ptr align 8 %indirectarg82, ptr align 8 %indirectarg83, ptr align 8 %indirectarg84, i32 102), !dbg !498
  unreachable, !dbg !498

panic88:                                          ; preds = %checkok85
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg90, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg91, align 8
  %108 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %108(ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, ptr align 8 %indirectarg91, i32 102), !dbg !499
  unreachable, !dbg !499

panic98:                                          ; preds = %if.exit96
  store %"char[]" { ptr @.panic_msg.32, i64 53 }, ptr %indirectarg99, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg100, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg101, align 8
  %109 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %109(ptr align 8 %indirectarg99, ptr align 8 %indirectarg100, ptr align 8 %indirectarg101, i32 103), !dbg !501
  unreachable, !dbg !501

panic104:                                         ; preds = %checkok102
  store %"char[]" { ptr @.panic_msg.28, i64 53 }, ptr %indirectarg105, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg106, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg107, align 8
  %110 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %110(ptr align 8 %indirectarg105, ptr align 8 %indirectarg106, ptr align 8 %indirectarg107, i32 104), !dbg !503
  unreachable, !dbg !503
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.DynamicArenaAllocator.reset(ptr %0, i64 %1) #0 comdat !dbg !524 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %mark = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg6 = alloca %"any[]", align 8
  %page = alloca ptr, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %unused_page_ptr = alloca ptr, align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %next_page = alloca ptr, align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %prev_unused = alloca ptr, align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !527
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !527
  br i1 %3, label %panic, label %checkok, !dbg !527

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !528, metadata !DIExpression()), !dbg !529
  store i64 %1, ptr %mark, align 8
  call void @llvm.dbg.declare(metadata ptr %mark, metadata !530, metadata !DIExpression()), !dbg !531
  %4 = load i64, ptr %mark, align 8, !dbg !532
  %eq = icmp eq i64 0, %4, !dbg !532
  br i1 %eq, label %assert_ok, label %assert_fail, !dbg !532

assert_fail:                                      ; preds = %checkok
  %5 = insertvalue %any undef, ptr %mark, 0, !dbg !533
  %6 = insertvalue %any %5, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !533
  store %"char[]" { ptr @.panic_msg.34, i64 55 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg5, align 8
  store %any %6, ptr %varargslots, align 16
  %7 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %7, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg6, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 114, ptr align 8 %indirectarg6), !dbg !532
  unreachable, !dbg !532

assert_ok:                                        ; preds = %checkok
  call void @llvm.dbg.declare(metadata ptr %page, metadata !534, metadata !DIExpression()), !dbg !535
  %8 = load ptr, ptr %self, align 8, !dbg !536
  %checknull = icmp eq ptr %8, null, !dbg !536
  %9 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !536
  br i1 %9, label %panic7, label %checkok11, !dbg !536

checkok11:                                        ; preds = %assert_ok
  %ptradd = getelementptr inbounds i8, ptr %8, i64 16, !dbg !536
  %10 = load ptr, ptr %ptradd, align 8, !dbg !536
  store ptr %10, ptr %page, align 8, !dbg !536
  call void @llvm.dbg.declare(metadata ptr %unused_page_ptr, metadata !537, metadata !DIExpression()), !dbg !539
  %11 = load ptr, ptr %self, align 8, !dbg !540
  %checknull12 = icmp eq ptr %11, null, !dbg !540
  %12 = call i1 @llvm.expect.i1(i1 %checknull12, i1 false), !dbg !540
  br i1 %12, label %panic13, label %checkok17, !dbg !540

checkok17:                                        ; preds = %checkok11
  %ptradd18 = getelementptr inbounds i8, ptr %11, i64 24, !dbg !540
  store ptr %ptradd18, ptr %unused_page_ptr, align 8, !dbg !540
  br label %loop.cond, !dbg !541

loop.cond:                                        ; preds = %checkok50, %checkok17
  %13 = load ptr, ptr %page, align 8, !dbg !542
  %ptrbool = icmp ne ptr %13, null, !dbg !542
  br i1 %ptrbool, label %loop.body, label %loop.exit, !dbg !542

loop.body:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %next_page, metadata !544, metadata !DIExpression()), !dbg !546
  %14 = load ptr, ptr %page, align 8, !dbg !547
  %checknull19 = icmp eq ptr %14, null, !dbg !547
  %15 = call i1 @llvm.expect.i1(i1 %checknull19, i1 false), !dbg !547
  br i1 %15, label %panic20, label %checkok24, !dbg !547

checkok24:                                        ; preds = %loop.body
  %ptradd25 = getelementptr inbounds i8, ptr %14, i64 8, !dbg !547
  %16 = load ptr, ptr %ptradd25, align 8, !dbg !547
  store ptr %16, ptr %next_page, align 8, !dbg !547
  %17 = load ptr, ptr %page, align 8, !dbg !548
  %checknull26 = icmp eq ptr %17, null, !dbg !548
  %18 = call i1 @llvm.expect.i1(i1 %checknull26, i1 false), !dbg !548
  br i1 %18, label %panic27, label %checkok31, !dbg !548

checkok31:                                        ; preds = %checkok24
  %ptradd32 = getelementptr inbounds i8, ptr %17, i64 24, !dbg !548
  store i64 0, ptr %ptradd32, align 8, !dbg !549
  call void @llvm.dbg.declare(metadata ptr %prev_unused, metadata !550, metadata !DIExpression()), !dbg !551
  %19 = load ptr, ptr %unused_page_ptr, align 8, !dbg !552
  %checknull33 = icmp eq ptr %19, null, !dbg !552
  %20 = call i1 @llvm.expect.i1(i1 %checknull33, i1 false), !dbg !552
  br i1 %20, label %panic34, label %checkok38, !dbg !552

checkok38:                                        ; preds = %checkok31
  %21 = load ptr, ptr %19, align 8, !dbg !552
  store ptr %21, ptr %prev_unused, align 8, !dbg !552
  %22 = load ptr, ptr %unused_page_ptr, align 8, !dbg !553
  %checknull39 = icmp eq ptr %22, null, !dbg !553
  %23 = call i1 @llvm.expect.i1(i1 %checknull39, i1 false), !dbg !553
  br i1 %23, label %panic40, label %checkok44, !dbg !553

checkok44:                                        ; preds = %checkok38
  %24 = load ptr, ptr %page, align 8, !dbg !554
  store ptr %24, ptr %22, align 8, !dbg !554
  %25 = load ptr, ptr %page, align 8, !dbg !555
  %checknull45 = icmp eq ptr %25, null, !dbg !555
  %26 = call i1 @llvm.expect.i1(i1 %checknull45, i1 false), !dbg !555
  br i1 %26, label %panic46, label %checkok50, !dbg !555

checkok50:                                        ; preds = %checkok44
  %ptradd51 = getelementptr inbounds i8, ptr %25, i64 8, !dbg !555
  %27 = load ptr, ptr %prev_unused, align 8, !dbg !556
  store ptr %27, ptr %ptradd51, align 8, !dbg !556
  %28 = load ptr, ptr %next_page, align 8, !dbg !557
  store ptr %28, ptr %page, align 8, !dbg !557
  br label %loop.cond, !dbg !557

loop.exit:                                        ; preds = %loop.cond
  %29 = load ptr, ptr %self, align 8, !dbg !558
  %checknull52 = icmp eq ptr %29, null, !dbg !558
  %30 = call i1 @llvm.expect.i1(i1 %checknull52, i1 false), !dbg !558
  br i1 %30, label %panic53, label %checkok57, !dbg !558

checkok57:                                        ; preds = %loop.exit
  %ptradd58 = getelementptr inbounds i8, ptr %29, i64 16, !dbg !558
  %31 = load ptr, ptr %page, align 8, !dbg !559
  store ptr %31, ptr %ptradd58, align 8, !dbg !559
  ret void, !dbg !559

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg2, align 8
  %32 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %32(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 112), !dbg !529
  unreachable, !dbg !529

panic7:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg10, align 8
  %33 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %33(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 115), !dbg !536
  unreachable, !dbg !536

panic13:                                          ; preds = %checkok11
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg16, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 116), !dbg !540
  unreachable, !dbg !540

panic20:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg23, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 119), !dbg !547
  unreachable, !dbg !547

panic27:                                          ; preds = %checkok24
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg30, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, i32 120), !dbg !548
  unreachable, !dbg !548

panic34:                                          ; preds = %checkok31
  store %"char[]" { ptr @.panic_msg.35, i64 56 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg37, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 121), !dbg !552
  unreachable, !dbg !552

panic40:                                          ; preds = %checkok38
  store %"char[]" { ptr @.panic_msg.35, i64 56 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg43, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 122), !dbg !553
  unreachable, !dbg !553

panic46:                                          ; preds = %checkok44
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg49, align 8
  %39 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %39(ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, i32 123), !dbg !555
  unreachable, !dbg !555

panic53:                                          ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg56, align 8
  %40 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %40(ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, i32 126), !dbg !558
  unreachable, !dbg !558
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.core.mem.allocator.DynamicArenaAllocator._alloc_new(ptr %0, ptr %1, i64 %2, i64 %3) #0 !dbg !560 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %size = alloca i64, align 8
  %alignment = alloca i64, align 8
  %x = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %page_size = alloca i64, align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %x16 = alloca i64, align 8
  %.anon = alloca i64, align 8
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %mem = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %allocator = alloca %any, align 8
  %size32 = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %page = alloca ptr, align 8
  %page.f = alloca i64, align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %allocator44 = alloca %any, align 8
  %allocator46 = alloca %any, align 8
  %size47 = alloca i64, align 8
  %blockret48 = alloca ptr, align 8
  %.inlinecache53 = alloca ptr, align 8
  %.cachedtype54 = alloca ptr, align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %retparam66 = alloca ptr, align 8
  %err = alloca i64, align 8
  %indirectarg78 = alloca %"char[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %indirectarg80 = alloca %"char[]", align 8
  %allocator82 = alloca %any, align 8
  %ptr = alloca ptr, align 8
  %.inlinecache87 = alloca ptr, align 8
  %.cachedtype88 = alloca ptr, align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %indirectarg98 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg105 = alloca %"char[]", align 8
  %indirectarg106 = alloca %"char[]", align 8
  %mem_start = alloca ptr, align 8
  %ptr108 = alloca ptr, align 8
  %alignment109 = alloca i64, align 8
  %indirectarg114 = alloca %"char[]", align 8
  %indirectarg115 = alloca %"char[]", align 8
  %indirectarg116 = alloca %"char[]", align 8
  %chunk = alloca ptr, align 8
  %indirectarg121 = alloca %"char[]", align 8
  %indirectarg122 = alloca %"char[]", align 8
  %indirectarg123 = alloca %"char[]", align 8
  %indirectarg127 = alloca %"char[]", align 8
  %indirectarg128 = alloca %"char[]", align 8
  %indirectarg129 = alloca %"char[]", align 8
  %indirectarg134 = alloca %"char[]", align 8
  %indirectarg135 = alloca %"char[]", align 8
  %indirectarg136 = alloca %"char[]", align 8
  %indirectarg141 = alloca %"char[]", align 8
  %indirectarg142 = alloca %"char[]", align 8
  %indirectarg143 = alloca %"char[]", align 8
  %indirectarg148 = alloca %"char[]", align 8
  %indirectarg149 = alloca %"char[]", align 8
  %indirectarg150 = alloca %"char[]", align 8
  %indirectarg156 = alloca %"char[]", align 8
  %indirectarg157 = alloca %"char[]", align 8
  %indirectarg158 = alloca %"char[]", align 8
  %indirectarg162 = alloca %"char[]", align 8
  %indirectarg163 = alloca %"char[]", align 8
  %indirectarg164 = alloca %"char[]", align 8
  %indirectarg169 = alloca %"char[]", align 8
  %indirectarg170 = alloca %"char[]", align 8
  %indirectarg171 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  store ptr null, ptr %.cachedtype88, align 8, !dbg !563
  store ptr null, ptr %.cachedtype54, align 8, !dbg !563
  store ptr null, ptr %.cachedtype, align 8, !dbg !563
  %4 = icmp eq ptr %1, null, !dbg !563
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !563
  br i1 %5, label %panic, label %checkok, !dbg !563

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !564, metadata !DIExpression()), !dbg !565
  store i64 %2, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !566, metadata !DIExpression()), !dbg !567
  store i64 %3, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !568, metadata !DIExpression()), !dbg !569
  %6 = load i64, ptr %alignment, align 8
  store i64 %6, ptr %x, align 8
  %7 = load i64, ptr %x, align 8, !dbg !570
  %neq = icmp ne i64 0, %7, !dbg !570
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !570

and.rhs:                                          ; preds = %checkok
  %8 = load i64, ptr %x, align 8, !dbg !574
  %9 = load i64, ptr %x, align 8, !dbg !575
  %sub = sub i64 %9, 1, !dbg !575
  %and = and i64 %8, %sub, !dbg !574
  %eq = icmp eq i64 %and, 0, !dbg !574
  br label %and.phi, !dbg !574

and.phi:                                          ; preds = %and.rhs, %checkok
  %val = phi i1 [ false, %checkok ], [ %eq, %and.rhs ], !dbg !574
  br i1 %val, label %assert_ok, label %assert_fail, !dbg !574

assert_fail:                                      ; preds = %and.phi
  store %"char[]" { ptr @.panic_msg.37, i64 51 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg5, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 130), !dbg !572
  unreachable, !dbg !572

assert_ok:                                        ; preds = %and.phi
  %11 = load i64, ptr %size, align 8, !dbg !576
  %lt = icmp ult i64 0, %11, !dbg !576
  br i1 %lt, label %assert_ok10, label %assert_fail6, !dbg !576

assert_fail6:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.15, i64 29 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg9, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 131), !dbg !576
  unreachable, !dbg !576

assert_ok10:                                      ; preds = %assert_ok
  call void @llvm.dbg.declare(metadata ptr %page_size, metadata !577, metadata !DIExpression()), !dbg !578
  %13 = load ptr, ptr %self, align 8, !dbg !579
  %checknull = icmp eq ptr %13, null, !dbg !579
  %14 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !579
  br i1 %14, label %panic11, label %checkok15, !dbg !579

checkok15:                                        ; preds = %assert_ok10
  %ptradd = getelementptr inbounds i8, ptr %13, i64 32, !dbg !579
  %15 = load i64, ptr %ptradd, align 8
  store i64 %15, ptr %x16, align 8
  %16 = load i64, ptr %size, align 8, !dbg !580
  %add = add i64 %16, 8, !dbg !580
  %17 = load i64, ptr %alignment, align 8, !dbg !581
  %add17 = add i64 %add, %17, !dbg !580
  %18 = load i64, ptr %alignment, align 8, !dbg !582
  %19 = call i64 @std.core.mem.aligned_offset(i64 %add17, i64 %18), !dbg !583
  store i64 %19, ptr %.anon, align 8
  %20 = load i64, ptr %x16, align 8
  store i64 %20, ptr %a, align 8
  %21 = load i64, ptr %.anon, align 8
  store i64 %21, ptr %b, align 8
  %22 = load i64, ptr %a, align 8, !dbg !584
  %23 = load i64, ptr %b, align 8, !dbg !590
  %gt = icmp ugt i64 %22, %23, !dbg !584
  br i1 %gt, label %cond.lhs, label %cond.rhs, !dbg !584

cond.lhs:                                         ; preds = %checkok15
  %24 = load i64, ptr %x16, align 8, !dbg !591
  br label %cond.phi, !dbg !591

cond.rhs:                                         ; preds = %checkok15
  %25 = load i64, ptr %.anon, align 8, !dbg !592
  br label %cond.phi, !dbg !592

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val18 = phi i64 [ %24, %cond.lhs ], [ %25, %cond.rhs ], !dbg !592
  store i64 %val18, ptr %page_size, align 8, !dbg !592
  %26 = load i64, ptr %page_size, align 8, !dbg !593
  %27 = load i64, ptr %size, align 8, !dbg !594
  %add19 = add i64 %27, 8, !dbg !594
  %gt20 = icmp ugt i64 %26, %add19, !dbg !593
  br i1 %gt20, label %assert_ok25, label %assert_fail21, !dbg !593

assert_fail21:                                    ; preds = %cond.phi
  store %"char[]" { ptr @.panic_msg.33, i64 16 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg24, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, i32 137), !dbg !593
  unreachable, !dbg !593

assert_ok25:                                      ; preds = %cond.phi
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !595, metadata !DIExpression()), !dbg !596
  %29 = load ptr, ptr %self, align 8, !dbg !597
  %checknull26 = icmp eq ptr %29, null, !dbg !597
  %30 = call i1 @llvm.expect.i1(i1 %checknull26, i1 false), !dbg !597
  br i1 %30, label %panic27, label %checkok31, !dbg !597

checkok31:                                        ; preds = %assert_ok25
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %29, i32 16, i1 false)
  %31 = load i64, ptr %page_size, align 8
  store i64 %31, ptr %size32, align 8
  %32 = load i64, ptr %size32, align 8, !dbg !598
  %not = icmp eq i64 %32, 0, !dbg !598
  br i1 %not, label %if.then, label %if.exit, !dbg !598

if.then:                                          ; preds = %checkok31
  store ptr null, ptr %blockret, align 8, !dbg !601
  br label %expr_block.exit, !dbg !601

if.exit:                                          ; preds = %checkok31
  %ptradd33 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !602
  %33 = load i64, ptr %ptradd33, align 8, !dbg !602
  %34 = inttoptr i64 %33 to ptr, !dbg !602
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !563
  %35 = icmp eq ptr %34, %type, !dbg !563
  br i1 %35, label %cache_hit, label %cache_miss, !dbg !563

cache_miss:                                       ; preds = %if.exit
  %ptradd34 = getelementptr inbounds i8, ptr %34, i64 16, !dbg !563
  %36 = load ptr, ptr %ptradd34, align 8, !dbg !563
  %37 = call ptr @.dyn_search(ptr %36, ptr @"$sel.acquire"), !dbg !563
  store ptr %37, ptr %.inlinecache, align 8, !dbg !563
  store ptr %34, ptr %.cachedtype, align 8, !dbg !563
  br label %38, !dbg !563

cache_hit:                                        ; preds = %if.exit
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !563
  br label %38, !dbg !563

38:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %37, %cache_miss ], !dbg !563
  %39 = icmp eq ptr %fn_phi, null, !dbg !563
  br i1 %39, label %missing_function, label %match, !dbg !563

missing_function:                                 ; preds = %38
  store %"char[]" { ptr @.panic_msg.38, i64 44 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg37, align 8
  %40 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %40(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 68), !dbg !604
  unreachable, !dbg !604

match:                                            ; preds = %38
  %41 = load ptr, ptr %allocator, align 8
  %42 = load i64, ptr %size32, align 8
  %43 = call i64 %fn_phi(ptr %retparam, ptr %41, i64 %42, i32 0, i64 0), !dbg !604
  %not_err = icmp eq i64 %43, 0, !dbg !604
  %44 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !604
  br i1 %44, label %after_check, label %assign_optional, !dbg !604

assign_optional:                                  ; preds = %match
  store i64 %43, ptr %error_var, align 8, !dbg !604
  br label %guard_block, !dbg !604

after_check:                                      ; preds = %match
  %45 = load ptr, ptr %retparam, align 8, !dbg !604
  store ptr %45, ptr %blockret, align 8, !dbg !604
  br label %expr_block.exit, !dbg !604

expr_block.exit:                                  ; preds = %after_check, %if.then
  br label %noerr_block, !dbg !604

guard_block:                                      ; preds = %assign_optional
  %46 = load i64, ptr %error_var, align 8, !dbg !604
  ret i64 %46, !dbg !604

noerr_block:                                      ; preds = %expr_block.exit
  %47 = load ptr, ptr %blockret, align 8, !dbg !604
  store ptr %47, ptr %mem, align 8, !dbg !604
  call void @llvm.dbg.declare(metadata ptr %page, metadata !605, metadata !DIExpression()), !dbg !606
  %48 = load ptr, ptr %self, align 8, !dbg !607
  %checknull38 = icmp eq ptr %48, null, !dbg !607
  %49 = call i1 @llvm.expect.i1(i1 %checknull38, i1 false), !dbg !607
  br i1 %49, label %panic39, label %checkok43, !dbg !607

checkok43:                                        ; preds = %noerr_block
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator44, ptr align 8 %48, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator46, ptr align 8 %allocator44, i32 16, i1 false)
  store i64 40, ptr %size47, align 8
  %50 = load i64, ptr %size47, align 8, !dbg !608
  %not49 = icmp eq i64 %50, 0, !dbg !608
  br i1 %not49, label %if.then50, label %if.exit51, !dbg !608

if.then50:                                        ; preds = %checkok43
  store ptr null, ptr %blockret48, align 8, !dbg !613
  br label %expr_block.exit70, !dbg !613

if.exit51:                                        ; preds = %checkok43
  %ptradd52 = getelementptr inbounds i8, ptr %allocator46, i64 8, !dbg !614
  %51 = load i64, ptr %ptradd52, align 8, !dbg !614
  %52 = inttoptr i64 %51 to ptr, !dbg !614
  %type55 = load ptr, ptr %.cachedtype54, align 8, !dbg !563
  %53 = icmp eq ptr %52, %type55, !dbg !563
  br i1 %53, label %cache_hit58, label %cache_miss56, !dbg !563

cache_miss56:                                     ; preds = %if.exit51
  %ptradd57 = getelementptr inbounds i8, ptr %52, i64 16, !dbg !563
  %54 = load ptr, ptr %ptradd57, align 8, !dbg !563
  %55 = call ptr @.dyn_search(ptr %54, ptr @"$sel.acquire"), !dbg !563
  store ptr %55, ptr %.inlinecache53, align 8, !dbg !563
  store ptr %52, ptr %.cachedtype54, align 8, !dbg !563
  br label %56, !dbg !563

cache_hit58:                                      ; preds = %if.exit51
  %cache_hit_fn59 = load ptr, ptr %.inlinecache53, align 8, !dbg !563
  br label %56, !dbg !563

56:                                               ; preds = %cache_hit58, %cache_miss56
  %fn_phi60 = phi ptr [ %cache_hit_fn59, %cache_hit58 ], [ %55, %cache_miss56 ], !dbg !563
  %57 = icmp eq ptr %fn_phi60, null, !dbg !563
  br i1 %57, label %missing_function61, label %match65, !dbg !563

missing_function61:                               ; preds = %56
  store %"char[]" { ptr @.panic_msg.38, i64 44 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg64, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, i32 80), !dbg !616
  unreachable, !dbg !616

match65:                                          ; preds = %56
  %59 = load ptr, ptr %allocator46, align 8
  %60 = load i64, ptr %size47, align 8
  %61 = call i64 %fn_phi60(ptr %retparam66, ptr %59, i64 %60, i32 1, i64 0), !dbg !616
  %not_err67 = icmp eq i64 %61, 0, !dbg !616
  %62 = call i1 @llvm.expect.i1(i1 %not_err67, i1 true), !dbg !616
  br i1 %62, label %after_check69, label %assign_optional68, !dbg !616

assign_optional68:                                ; preds = %match65
  store i64 %61, ptr %page.f, align 8, !dbg !616
  br label %after_assign, !dbg !616

after_check69:                                    ; preds = %match65
  %63 = load ptr, ptr %retparam66, align 8, !dbg !616
  store ptr %63, ptr %blockret48, align 8, !dbg !616
  br label %expr_block.exit70, !dbg !616

expr_block.exit70:                                ; preds = %after_check69, %if.then50
  %64 = load ptr, ptr %blockret48, align 8, !dbg !616
  store ptr %64, ptr %page, align 8, !dbg !616
  store i64 0, ptr %page.f, align 8, !dbg !616
  br label %after_assign, !dbg !616

after_assign:                                     ; preds = %expr_block.exit70, %assign_optional68
  call void @llvm.dbg.declare(metadata ptr %err, metadata !617, metadata !DIExpression()), !dbg !618
  br label %testblock, !dbg !618

testblock:                                        ; preds = %after_assign
  %optval = load i64, ptr %page.f, align 8, !dbg !619
  %not_err71 = icmp eq i64 %optval, 0, !dbg !619
  %65 = call i1 @llvm.expect.i1(i1 %not_err71, i1 true), !dbg !619
  br i1 %65, label %after_check73, label %assign_optional72, !dbg !619

assign_optional72:                                ; preds = %testblock
  store i64 %optval, ptr %err, align 8, !dbg !619
  br label %end_block, !dbg !619

after_check73:                                    ; preds = %testblock
  store i64 0, ptr %err, align 8, !dbg !619
  br label %end_block, !dbg !619

end_block:                                        ; preds = %after_check73, %assign_optional72
  %66 = load i64, ptr %err, align 8, !dbg !619
  %neq74 = icmp ne i64 %66, 0, !dbg !619
  br i1 %neq74, label %if.then75, label %if.exit101, !dbg !619

if.then75:                                        ; preds = %end_block
  %67 = load ptr, ptr %self, align 8, !dbg !620
  %checknull76 = icmp eq ptr %67, null, !dbg !620
  %68 = call i1 @llvm.expect.i1(i1 %checknull76, i1 false), !dbg !620
  br i1 %68, label %panic77, label %checkok81, !dbg !620

checkok81:                                        ; preds = %if.then75
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator82, ptr align 8 %67, i32 16, i1 false)
  %69 = load ptr, ptr %mem, align 8
  store ptr %69, ptr %ptr, align 8
  %70 = load ptr, ptr %ptr, align 8, !dbg !622
  %not83 = icmp eq ptr %70, null, !dbg !622
  br i1 %not83, label %if.then84, label %if.exit85, !dbg !622

if.then84:                                        ; preds = %checkok81
  br label %expr_block.exit100, !dbg !625

if.exit85:                                        ; preds = %checkok81
  %ptradd86 = getelementptr inbounds i8, ptr %allocator82, i64 8, !dbg !626
  %71 = load i64, ptr %ptradd86, align 8, !dbg !626
  %72 = inttoptr i64 %71 to ptr, !dbg !626
  %type89 = load ptr, ptr %.cachedtype88, align 8, !dbg !563
  %73 = icmp eq ptr %72, %type89, !dbg !563
  br i1 %73, label %cache_hit92, label %cache_miss90, !dbg !563

cache_miss90:                                     ; preds = %if.exit85
  %ptradd91 = getelementptr inbounds i8, ptr %72, i64 16, !dbg !563
  %74 = load ptr, ptr %ptradd91, align 8, !dbg !563
  %75 = call ptr @.dyn_search(ptr %74, ptr @"$sel.release"), !dbg !563
  store ptr %75, ptr %.inlinecache87, align 8, !dbg !563
  store ptr %72, ptr %.cachedtype88, align 8, !dbg !563
  br label %76, !dbg !563

cache_hit92:                                      ; preds = %if.exit85
  %cache_hit_fn93 = load ptr, ptr %.inlinecache87, align 8, !dbg !563
  br label %76, !dbg !563

76:                                               ; preds = %cache_hit92, %cache_miss90
  %fn_phi94 = phi ptr [ %cache_hit_fn93, %cache_hit92 ], [ %75, %cache_miss90 ], !dbg !563
  %77 = icmp eq ptr %fn_phi94, null, !dbg !563
  br i1 %77, label %missing_function95, label %match99, !dbg !563

missing_function95:                               ; preds = %76
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg97, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg98, align 8
  %78 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %78(ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, ptr align 8 %indirectarg98, i32 105), !dbg !627
  unreachable, !dbg !627

match99:                                          ; preds = %76
  %79 = load ptr, ptr %allocator82, align 8, !dbg !627
  %80 = load ptr, ptr %ptr, align 8, !dbg !627
  call void %fn_phi94(ptr %79, ptr %80, i8 zeroext 0), !dbg !627
  br label %expr_block.exit100, !dbg !627

expr_block.exit100:                               ; preds = %match99, %if.then84
  %81 = load i64, ptr %err, align 8, !dbg !628
  ret i64 %81, !dbg !628

if.exit101:                                       ; preds = %end_block
  %82 = load ptr, ptr %page, align 8, !dbg !629
  %checknull102 = icmp eq ptr %82, null, !dbg !629
  %83 = call i1 @llvm.expect.i1(i1 %checknull102, i1 false), !dbg !629
  br i1 %83, label %panic103, label %checkok107, !dbg !629

checkok107:                                       ; preds = %if.exit101
  %84 = load ptr, ptr %mem, align 8, !dbg !630
  store ptr %84, ptr %82, align 8, !dbg !630
  call void @llvm.dbg.declare(metadata ptr %mem_start, metadata !631, metadata !DIExpression()), !dbg !632
  %85 = load ptr, ptr %mem, align 8, !dbg !633
  %ptradd_any = getelementptr i8, ptr %85, i64 8, !dbg !634
  store ptr %ptradd_any, ptr %ptr108, align 8
  %86 = load i64, ptr %alignment, align 8
  store i64 %86, ptr %alignment109, align 8
  %87 = load ptr, ptr %ptr108, align 8, !dbg !635
  %ptrxi = ptrtoint ptr %87 to i64, !dbg !635
  %88 = load i64, ptr %alignment109, align 8, !dbg !638
  %89 = call i64 @std.core.mem.aligned_offset(i64 %ptrxi, i64 %88), !dbg !639
  %intptr = inttoptr i64 %89 to ptr, !dbg !639
  store ptr %intptr, ptr %mem_start, align 8, !dbg !639
  %90 = load ptr, ptr %mem_start, align 8, !dbg !640
  %91 = load i64, ptr %size, align 8, !dbg !641
  %ptradd_any110 = getelementptr i8, ptr %90, i64 %91, !dbg !641
  %92 = load ptr, ptr %mem, align 8, !dbg !642
  %93 = load i64, ptr %page_size, align 8, !dbg !643
  %ptradd_any111 = getelementptr i8, ptr %92, i64 %93, !dbg !643
  %lt112 = icmp ult ptr %ptradd_any110, %ptradd_any111, !dbg !640
  br i1 %lt112, label %assert_ok117, label %assert_fail113, !dbg !640

assert_fail113:                                   ; preds = %checkok107
  store %"char[]" { ptr @.panic_msg.33, i64 16 }, ptr %indirectarg114, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg115, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg116, align 8
  %94 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %94(ptr align 8 %indirectarg114, ptr align 8 %indirectarg115, ptr align 8 %indirectarg116, i32 148), !dbg !640
  unreachable, !dbg !640

assert_ok117:                                     ; preds = %checkok107
  call void @llvm.dbg.declare(metadata ptr %chunk, metadata !644, metadata !DIExpression()), !dbg !649
  %95 = load ptr, ptr %mem_start, align 8, !dbg !650
  %ptradd_any118 = getelementptr i8, ptr %95, i64 -8, !dbg !651
  store ptr %ptradd_any118, ptr %chunk, align 8, !dbg !651
  %96 = load ptr, ptr %chunk, align 8, !dbg !652
  %checknull119 = icmp eq ptr %96, null, !dbg !652
  %97 = call i1 @llvm.expect.i1(i1 %checknull119, i1 false), !dbg !652
  br i1 %97, label %panic120, label %checkok124, !dbg !652

checkok124:                                       ; preds = %assert_ok117
  %98 = load i64, ptr %size, align 8, !dbg !653
  store i64 %98, ptr %96, align 8, !dbg !653
  %99 = load ptr, ptr %page, align 8, !dbg !654
  %checknull125 = icmp eq ptr %99, null, !dbg !654
  %100 = call i1 @llvm.expect.i1(i1 %checknull125, i1 false), !dbg !654
  br i1 %100, label %panic126, label %checkok130, !dbg !654

checkok130:                                       ; preds = %checkok124
  %ptradd131 = getelementptr inbounds i8, ptr %99, i64 8, !dbg !654
  %101 = load ptr, ptr %self, align 8, !dbg !655
  %checknull132 = icmp eq ptr %101, null, !dbg !655
  %102 = call i1 @llvm.expect.i1(i1 %checknull132, i1 false), !dbg !655
  br i1 %102, label %panic133, label %checkok137, !dbg !655

checkok137:                                       ; preds = %checkok130
  %ptradd138 = getelementptr inbounds i8, ptr %101, i64 16, !dbg !655
  %103 = load ptr, ptr %ptradd138, align 8, !dbg !655
  store ptr %103, ptr %ptradd131, align 8, !dbg !655
  %104 = load ptr, ptr %page, align 8, !dbg !656
  %checknull139 = icmp eq ptr %104, null, !dbg !656
  %105 = call i1 @llvm.expect.i1(i1 %checknull139, i1 false), !dbg !656
  br i1 %105, label %panic140, label %checkok144, !dbg !656

checkok144:                                       ; preds = %checkok137
  %ptradd145 = getelementptr inbounds i8, ptr %104, i64 16, !dbg !656
  %106 = load i64, ptr %page_size, align 8, !dbg !657
  store i64 %106, ptr %ptradd145, align 8, !dbg !657
  %107 = load ptr, ptr %page, align 8, !dbg !658
  %checknull146 = icmp eq ptr %107, null, !dbg !658
  %108 = call i1 @llvm.expect.i1(i1 %checknull146, i1 false), !dbg !658
  br i1 %108, label %panic147, label %checkok151, !dbg !658

checkok151:                                       ; preds = %checkok144
  %ptradd152 = getelementptr inbounds i8, ptr %107, i64 24, !dbg !658
  %109 = load ptr, ptr %mem_start, align 8, !dbg !659
  %110 = load i64, ptr %size, align 8, !dbg !660
  %ptradd_any153 = getelementptr i8, ptr %109, i64 %110, !dbg !660
  %111 = load ptr, ptr %page, align 8, !dbg !661
  %checknull154 = icmp eq ptr %111, null, !dbg !661
  %112 = call i1 @llvm.expect.i1(i1 %checknull154, i1 false), !dbg !661
  br i1 %112, label %panic155, label %checkok159, !dbg !661

checkok159:                                       ; preds = %checkok151
  %113 = load ptr, ptr %111, align 8, !dbg !661
  %114 = ptrtoint ptr %113 to i64, !dbg !659
  %115 = ptrtoint ptr %ptradd_any153 to i64, !dbg !659
  %116 = sub i64 %115, %114, !dbg !659
  %117 = sdiv exact i64 %116, 1, !dbg !659
  store i64 %117, ptr %ptradd152, align 8, !dbg !659
  %118 = load ptr, ptr %self, align 8, !dbg !662
  %checknull160 = icmp eq ptr %118, null, !dbg !662
  %119 = call i1 @llvm.expect.i1(i1 %checknull160, i1 false), !dbg !662
  br i1 %119, label %panic161, label %checkok165, !dbg !662

checkok165:                                       ; preds = %checkok159
  %ptradd166 = getelementptr inbounds i8, ptr %118, i64 16, !dbg !662
  %120 = load ptr, ptr %page, align 8, !dbg !663
  store ptr %120, ptr %ptradd166, align 8, !dbg !663
  %121 = load ptr, ptr %page, align 8, !dbg !664
  %checknull167 = icmp eq ptr %121, null, !dbg !664
  %122 = call i1 @llvm.expect.i1(i1 %checknull167, i1 false), !dbg !664
  br i1 %122, label %panic168, label %checkok172, !dbg !664

checkok172:                                       ; preds = %checkok165
  %ptradd173 = getelementptr inbounds i8, ptr %121, i64 32, !dbg !664
  %123 = load ptr, ptr %mem_start, align 8, !dbg !665
  store ptr %123, ptr %ptradd173, align 8, !dbg !665
  %124 = load ptr, ptr %mem_start, align 8, !dbg !666
  store ptr %124, ptr %0, align 8, !dbg !666
  ret i64 0, !dbg !666

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg2, align 8
  %125 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %125(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 133), !dbg !565
  unreachable, !dbg !565

panic11:                                          ; preds = %assert_ok10
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg14, align 8
  %126 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %126(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 136), !dbg !579
  unreachable, !dbg !579

panic27:                                          ; preds = %assert_ok25
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg30, align 8
  %127 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %127(ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, i32 139), !dbg !597
  unreachable, !dbg !597

panic39:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg42, align 8
  %128 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %128(ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, i32 140), !dbg !607
  unreachable, !dbg !607

panic77:                                          ; preds = %if.then75
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg78, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg79, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg80, align 8
  %129 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %129(ptr align 8 %indirectarg78, ptr align 8 %indirectarg79, ptr align 8 %indirectarg80, i32 143), !dbg !620
  unreachable, !dbg !620

panic103:                                         ; preds = %if.exit101
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg104, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg105, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg106, align 8
  %130 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %130(ptr align 8 %indirectarg104, ptr align 8 %indirectarg105, ptr align 8 %indirectarg106, i32 146), !dbg !629
  unreachable, !dbg !629

panic120:                                         ; preds = %assert_ok117
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg121, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg122, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg123, align 8
  %131 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %131(ptr align 8 %indirectarg121, ptr align 8 %indirectarg122, ptr align 8 %indirectarg123, i32 150), !dbg !652
  unreachable, !dbg !652

panic126:                                         ; preds = %checkok124
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg127, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg128, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg129, align 8
  %132 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %132(ptr align 8 %indirectarg127, ptr align 8 %indirectarg128, ptr align 8 %indirectarg129, i32 151), !dbg !654
  unreachable, !dbg !654

panic133:                                         ; preds = %checkok130
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg134, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg135, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg136, align 8
  %133 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %133(ptr align 8 %indirectarg134, ptr align 8 %indirectarg135, ptr align 8 %indirectarg136, i32 151), !dbg !655
  unreachable, !dbg !655

panic140:                                         ; preds = %checkok137
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg141, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg142, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg143, align 8
  %134 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %134(ptr align 8 %indirectarg141, ptr align 8 %indirectarg142, ptr align 8 %indirectarg143, i32 152), !dbg !656
  unreachable, !dbg !656

panic147:                                         ; preds = %checkok144
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg148, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg149, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg150, align 8
  %135 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %135(ptr align 8 %indirectarg148, ptr align 8 %indirectarg149, ptr align 8 %indirectarg150, i32 153), !dbg !658
  unreachable, !dbg !658

panic155:                                         ; preds = %checkok151
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg156, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg157, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg158, align 8
  %136 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %136(ptr align 8 %indirectarg156, ptr align 8 %indirectarg157, ptr align 8 %indirectarg158, i32 153), !dbg !661
  unreachable, !dbg !661

panic161:                                         ; preds = %checkok159
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg162, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg163, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg164, align 8
  %137 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %137(ptr align 8 %indirectarg162, ptr align 8 %indirectarg163, ptr align 8 %indirectarg164, i32 154), !dbg !662
  unreachable, !dbg !662

panic168:                                         ; preds = %checkok165
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg169, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg170, align 8
  store %"char[]" { ptr @.func.36, i64 10 }, ptr %indirectarg171, align 8
  %138 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %138(ptr align 8 %indirectarg169, ptr align 8 %indirectarg170, ptr align 8 %indirectarg171, i32 155), !dbg !664
  unreachable, !dbg !664
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.DynamicArenaAllocator.acquire(ptr %0, ptr %1, i64 %2, i32 %3, i64 %4) #0 comdat !dbg !667 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %size = alloca i64, align 8
  %init_type = alloca i32, align 4
  %alignment = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %x = alloca i64, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %page = alloca ptr, align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %ptr = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %start = alloca ptr, align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %ptr79 = alloca ptr, align 8
  %alignment80 = alloca i64, align 8
  %new_used = alloca i64, align 8
  %indirectarg83 = alloca %"char[]", align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg91 = alloca %"char[]", align 8
  %indirectarg92 = alloca %"char[]", align 8
  %indirectarg98 = alloca %"char[]", align 8
  %indirectarg99 = alloca %"char[]", align 8
  %indirectarg100 = alloca %"char[]", align 8
  %indirectarg107 = alloca %"char[]", align 8
  %indirectarg108 = alloca %"char[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %indirectarg113 = alloca %"char[]", align 8
  %indirectarg114 = alloca %"char[]", align 8
  %indirectarg115 = alloca %"char[]", align 8
  %ptr120 = alloca ptr, align 8
  %alignment121 = alloca i64, align 8
  %indirectarg127 = alloca %"char[]", align 8
  %indirectarg128 = alloca %"char[]", align 8
  %indirectarg129 = alloca %"char[]", align 8
  %indirectarg133 = alloca %"char[]", align 8
  %indirectarg134 = alloca %"char[]", align 8
  %indirectarg135 = alloca %"char[]", align 8
  %indirectarg141 = alloca %"char[]", align 8
  %indirectarg142 = alloca %"char[]", align 8
  %indirectarg143 = alloca %"char[]", align 8
  %indirectarg148 = alloca %"char[]", align 8
  %indirectarg149 = alloca %"char[]", align 8
  %indirectarg150 = alloca %"char[]", align 8
  %indirectarg155 = alloca %"char[]", align 8
  %indirectarg156 = alloca %"char[]", align 8
  %indirectarg157 = alloca %"char[]", align 8
  %indirectarg162 = alloca %"char[]", align 8
  %indirectarg163 = alloca %"char[]", align 8
  %indirectarg164 = alloca %"char[]", align 8
  %indirectarg169 = alloca %"char[]", align 8
  %indirectarg170 = alloca %"char[]", align 8
  %indirectarg171 = alloca %"char[]", align 8
  %retparam176 = alloca ptr, align 8
  %indirectarg183 = alloca %"char[]", align 8
  %indirectarg184 = alloca %"char[]", align 8
  %indirectarg185 = alloca %"char[]", align 8
  %indirectarg191 = alloca %"char[]", align 8
  %indirectarg192 = alloca %"char[]", align 8
  %indirectarg193 = alloca %"char[]", align 8
  %indirectarg197 = alloca %"char[]", align 8
  %indirectarg198 = alloca %"char[]", align 8
  %indirectarg199 = alloca %"char[]", align 8
  %indirectarg205 = alloca %"char[]", align 8
  %indirectarg206 = alloca %"char[]", align 8
  %indirectarg207 = alloca %"char[]", align 8
  %mem = alloca ptr, align 8
  %chunk = alloca ptr, align 8
  %indirectarg212 = alloca %"char[]", align 8
  %indirectarg213 = alloca %"char[]", align 8
  %indirectarg214 = alloca %"char[]", align 8
  %dst = alloca ptr, align 8
  %len = alloca i64, align 8
  %reterr = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !670
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !670
  br i1 %6, label %panic, label %checkok, !dbg !670

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !671, metadata !DIExpression()), !dbg !672
  store i64 %2, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !673, metadata !DIExpression()), !dbg !674
  store i32 %3, ptr %init_type, align 4
  call void @llvm.dbg.declare(metadata ptr %init_type, metadata !675, metadata !DIExpression()), !dbg !676
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !677, metadata !DIExpression()), !dbg !678
  %7 = load i64, ptr %size, align 8, !dbg !679
  %lt = icmp ult i64 0, %7, !dbg !679
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !679

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.40, i64 57 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg5, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 160), !dbg !679
  unreachable, !dbg !679

assert_ok:                                        ; preds = %checkok
  %9 = load i64, ptr %alignment, align 8, !dbg !681
  %not = icmp eq i64 %9, 0, !dbg !681
  br i1 %not, label %or.phi, label %or.rhs, !dbg !681

or.rhs:                                           ; preds = %assert_ok
  %10 = load i64, ptr %alignment, align 8
  store i64 %10, ptr %x, align 8
  %11 = load i64, ptr %x, align 8, !dbg !682
  %neq = icmp ne i64 0, %11, !dbg !682
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !682

and.rhs:                                          ; preds = %or.rhs
  %12 = load i64, ptr %x, align 8, !dbg !685
  %13 = load i64, ptr %x, align 8, !dbg !686
  %sub = sub i64 %13, 1, !dbg !686
  %and = and i64 %12, %sub, !dbg !685
  %eq = icmp eq i64 %and, 0, !dbg !685
  br label %and.phi, !dbg !685

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !685
  br label %or.phi, !dbg !685

or.phi:                                           ; preds = %and.phi, %assert_ok
  %val6 = phi i1 [ true, %assert_ok ], [ %val, %and.phi ], !dbg !685
  br i1 %val6, label %assert_ok11, label %assert_fail7, !dbg !685

assert_fail7:                                     ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.13, i64 65 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg10, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 161), !dbg !687
  unreachable, !dbg !687

assert_ok11:                                      ; preds = %or.phi
  %15 = load i64, ptr %alignment, align 8, !dbg !688
  %16 = call i64 @std.core.mem.allocator.alignment_for_allocation(i64 %15) #5, !dbg !689
  store i64 %16, ptr %alignment, align 8, !dbg !689
  call void @llvm.dbg.declare(metadata ptr %page, metadata !690, metadata !DIExpression()), !dbg !691
  %17 = load ptr, ptr %self, align 8, !dbg !692
  %checknull = icmp eq ptr %17, null, !dbg !692
  %18 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !692
  br i1 %18, label %panic12, label %checkok16, !dbg !692

checkok16:                                        ; preds = %assert_ok11
  %ptradd = getelementptr inbounds i8, ptr %17, i64 16, !dbg !692
  %19 = load ptr, ptr %ptradd, align 8, !dbg !692
  store ptr %19, ptr %page, align 8, !dbg !692
  call void @llvm.dbg.declare(metadata ptr %ptr, metadata !693, metadata !DIExpression()), !dbg !694
  %20 = load ptr, ptr %page, align 8, !dbg !695
  %not17 = icmp eq ptr %20, null, !dbg !695
  br i1 %not17, label %and.rhs18, label %and.phi26, !dbg !695

and.rhs18:                                        ; preds = %checkok16
  %21 = load ptr, ptr %self, align 8, !dbg !697
  %checknull19 = icmp eq ptr %21, null, !dbg !697
  %22 = call i1 @llvm.expect.i1(i1 %checknull19, i1 false), !dbg !697
  br i1 %22, label %panic20, label %checkok24, !dbg !697

checkok24:                                        ; preds = %and.rhs18
  %ptradd25 = getelementptr inbounds i8, ptr %21, i64 24, !dbg !697
  %23 = load ptr, ptr %ptradd25, align 8, !dbg !697
  %ptrbool = icmp ne ptr %23, null, !dbg !697
  br label %and.phi26, !dbg !697

and.phi26:                                        ; preds = %checkok24, %checkok16
  %val27 = phi i1 [ false, %checkok16 ], [ %ptrbool, %checkok24 ], !dbg !697
  br i1 %val27, label %if.then, label %if.exit, !dbg !697

if.then:                                          ; preds = %and.phi26
  %24 = load ptr, ptr %self, align 8, !dbg !698
  %checknull28 = icmp eq ptr %24, null, !dbg !698
  %25 = call i1 @llvm.expect.i1(i1 %checknull28, i1 false), !dbg !698
  br i1 %25, label %panic29, label %checkok33, !dbg !698

checkok33:                                        ; preds = %if.then
  %ptradd34 = getelementptr inbounds i8, ptr %24, i64 16, !dbg !698
  %26 = load ptr, ptr %self, align 8, !dbg !700
  %checknull35 = icmp eq ptr %26, null, !dbg !700
  %27 = call i1 @llvm.expect.i1(i1 %checknull35, i1 false), !dbg !700
  br i1 %27, label %panic36, label %checkok40, !dbg !700

checkok40:                                        ; preds = %checkok33
  %ptradd41 = getelementptr inbounds i8, ptr %26, i64 24, !dbg !700
  %28 = load ptr, ptr %ptradd41, align 8, !dbg !700
  store ptr %28, ptr %page, align 8, !dbg !700
  store ptr %28, ptr %ptradd34, align 8, !dbg !700
  %29 = load ptr, ptr %self, align 8, !dbg !701
  %checknull42 = icmp eq ptr %29, null, !dbg !701
  %30 = call i1 @llvm.expect.i1(i1 %checknull42, i1 false), !dbg !701
  br i1 %30, label %panic43, label %checkok47, !dbg !701

checkok47:                                        ; preds = %checkok40
  %ptradd48 = getelementptr inbounds i8, ptr %29, i64 24, !dbg !701
  %31 = load ptr, ptr %page, align 8, !dbg !702
  %checknull49 = icmp eq ptr %31, null, !dbg !702
  %32 = call i1 @llvm.expect.i1(i1 %checknull49, i1 false), !dbg !702
  br i1 %32, label %panic50, label %checkok54, !dbg !702

checkok54:                                        ; preds = %checkok47
  %ptradd55 = getelementptr inbounds i8, ptr %31, i64 8, !dbg !702
  %33 = load ptr, ptr %ptradd55, align 8, !dbg !702
  store ptr %33, ptr %ptradd48, align 8, !dbg !702
  %34 = load ptr, ptr %page, align 8, !dbg !703
  %checknull56 = icmp eq ptr %34, null, !dbg !703
  %35 = call i1 @llvm.expect.i1(i1 %checknull56, i1 false), !dbg !703
  br i1 %35, label %panic57, label %checkok61, !dbg !703

checkok61:                                        ; preds = %checkok54
  %ptradd62 = getelementptr inbounds i8, ptr %34, i64 8, !dbg !703
  store ptr null, ptr %ptradd62, align 8, !dbg !704
  br label %if.exit, !dbg !704

if.exit:                                          ; preds = %checkok61, %and.phi26
  %36 = load ptr, ptr %page, align 8, !dbg !705
  %not63 = icmp eq ptr %36, null, !dbg !705
  br i1 %not63, label %if.then64, label %if.exit65, !dbg !705

if.then64:                                        ; preds = %if.exit
  %37 = load ptr, ptr %self, align 8
  %38 = load i64, ptr %size, align 8
  %39 = load i64, ptr %alignment, align 8
  %40 = call i64 @std.core.mem.allocator.DynamicArenaAllocator._alloc_new(ptr %retparam, ptr %37, i64 %38, i64 %39), !dbg !706
  %not_err = icmp eq i64 %40, 0, !dbg !706
  %41 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !706
  br i1 %41, label %after_check, label %assign_optional, !dbg !706

assign_optional:                                  ; preds = %if.then64
  store i64 %40, ptr %error_var, align 8, !dbg !706
  br label %guard_block, !dbg !706

after_check:                                      ; preds = %if.then64
  %42 = load ptr, ptr %retparam, align 8, !dbg !706
  store ptr %42, ptr %blockret, align 8, !dbg !706
  br label %expr_block.exit, !dbg !706

if.exit65:                                        ; preds = %if.exit
  call void @llvm.dbg.declare(metadata ptr %start, metadata !707, metadata !DIExpression()), !dbg !708
  %43 = load ptr, ptr %page, align 8, !dbg !709
  %checknull66 = icmp eq ptr %43, null, !dbg !709
  %44 = call i1 @llvm.expect.i1(i1 %checknull66, i1 false), !dbg !709
  br i1 %44, label %panic67, label %checkok71, !dbg !709

checkok71:                                        ; preds = %if.exit65
  %45 = load ptr, ptr %43, align 8, !dbg !709
  %46 = load ptr, ptr %page, align 8, !dbg !710
  %checknull72 = icmp eq ptr %46, null, !dbg !710
  %47 = call i1 @llvm.expect.i1(i1 %checknull72, i1 false), !dbg !710
  br i1 %47, label %panic73, label %checkok77, !dbg !710

checkok77:                                        ; preds = %checkok71
  %ptradd78 = getelementptr inbounds i8, ptr %46, i64 24, !dbg !710
  %48 = load i64, ptr %ptradd78, align 8, !dbg !710
  %add = add i64 %48, 8, !dbg !709
  %ptradd_any = getelementptr i8, ptr %45, i64 %add, !dbg !709
  store ptr %ptradd_any, ptr %ptr79, align 8
  %49 = load i64, ptr %alignment, align 8
  store i64 %49, ptr %alignment80, align 8
  %50 = load ptr, ptr %ptr79, align 8, !dbg !711
  %ptrxi = ptrtoint ptr %50 to i64, !dbg !711
  %51 = load i64, ptr %alignment80, align 8, !dbg !714
  %52 = call i64 @std.core.mem.aligned_offset(i64 %ptrxi, i64 %51), !dbg !715
  %intptr = inttoptr i64 %52 to ptr, !dbg !715
  store ptr %intptr, ptr %start, align 8, !dbg !715
  call void @llvm.dbg.declare(metadata ptr %new_used, metadata !716, metadata !DIExpression()), !dbg !717
  %53 = load ptr, ptr %start, align 8, !dbg !718
  %54 = load ptr, ptr %page, align 8, !dbg !719
  %checknull81 = icmp eq ptr %54, null, !dbg !719
  %55 = call i1 @llvm.expect.i1(i1 %checknull81, i1 false), !dbg !719
  br i1 %55, label %panic82, label %checkok86, !dbg !719

checkok86:                                        ; preds = %checkok77
  %56 = load ptr, ptr %54, align 8, !dbg !719
  %57 = ptrtoint ptr %56 to i64, !dbg !718
  %58 = ptrtoint ptr %53 to i64, !dbg !718
  %59 = sub i64 %58, %57, !dbg !718
  %60 = sdiv exact i64 %59, 1, !dbg !718
  %61 = load i64, ptr %size, align 8, !dbg !720
  %add87 = add i64 %60, %61, !dbg !718
  store i64 %add87, ptr %new_used, align 8, !dbg !718
  %62 = load i64, ptr %new_used, align 8, !dbg !721
  %63 = load ptr, ptr %page, align 8, !dbg !722
  %checknull88 = icmp eq ptr %63, null, !dbg !722
  %64 = call i1 @llvm.expect.i1(i1 %checknull88, i1 false), !dbg !722
  br i1 %64, label %panic89, label %checkok93, !dbg !722

checkok93:                                        ; preds = %checkok86
  %ptradd94 = getelementptr inbounds i8, ptr %63, i64 16, !dbg !722
  %65 = load i64, ptr %ptradd94, align 8, !dbg !722
  %gt = icmp ugt i64 %62, %65, !dbg !721
  br i1 %gt, label %if.then95, label %if.exit180, !dbg !721

if.then95:                                        ; preds = %checkok93
  %66 = load ptr, ptr %self, align 8, !dbg !723
  %checknull96 = icmp eq ptr %66, null, !dbg !723
  %67 = call i1 @llvm.expect.i1(i1 %checknull96, i1 false), !dbg !723
  br i1 %67, label %panic97, label %checkok101, !dbg !723

checkok101:                                       ; preds = %if.then95
  %ptradd102 = getelementptr inbounds i8, ptr %66, i64 24, !dbg !723
  %68 = load ptr, ptr %ptradd102, align 8, !dbg !723
  store ptr %68, ptr %page, align 8, !dbg !723
  %ptrbool103 = icmp ne ptr %68, null, !dbg !723
  br i1 %ptrbool103, label %if.then104, label %if.exit175, !dbg !723

if.then104:                                       ; preds = %checkok101
  %69 = load ptr, ptr %page, align 8, !dbg !725
  %checknull105 = icmp eq ptr %69, null, !dbg !725
  %70 = call i1 @llvm.expect.i1(i1 %checknull105, i1 false), !dbg !725
  br i1 %70, label %panic106, label %checkok110, !dbg !725

checkok110:                                       ; preds = %if.then104
  %71 = load ptr, ptr %69, align 8, !dbg !725
  %72 = load ptr, ptr %page, align 8, !dbg !727
  %checknull111 = icmp eq ptr %72, null, !dbg !727
  %73 = call i1 @llvm.expect.i1(i1 %checknull111, i1 false), !dbg !727
  br i1 %73, label %panic112, label %checkok116, !dbg !727

checkok116:                                       ; preds = %checkok110
  %ptradd117 = getelementptr inbounds i8, ptr %72, i64 24, !dbg !727
  %74 = load i64, ptr %ptradd117, align 8, !dbg !727
  %add118 = add i64 %74, 8, !dbg !725
  %ptradd_any119 = getelementptr i8, ptr %71, i64 %add118, !dbg !725
  store ptr %ptradd_any119, ptr %ptr120, align 8
  %75 = load i64, ptr %alignment, align 8
  store i64 %75, ptr %alignment121, align 8
  %76 = load ptr, ptr %ptr120, align 8, !dbg !728
  %ptrxi122 = ptrtoint ptr %76 to i64, !dbg !728
  %77 = load i64, ptr %alignment121, align 8, !dbg !731
  %78 = call i64 @std.core.mem.aligned_offset(i64 %ptrxi122, i64 %77), !dbg !732
  %intptr123 = inttoptr i64 %78 to ptr, !dbg !732
  store ptr %intptr123, ptr %start, align 8, !dbg !732
  %79 = load ptr, ptr %start, align 8, !dbg !733
  %80 = load i64, ptr %size, align 8, !dbg !734
  %ptradd_any124 = getelementptr i8, ptr %79, i64 %80, !dbg !734
  %81 = load ptr, ptr %page, align 8, !dbg !735
  %checknull125 = icmp eq ptr %81, null, !dbg !735
  %82 = call i1 @llvm.expect.i1(i1 %checknull125, i1 false), !dbg !735
  br i1 %82, label %panic126, label %checkok130, !dbg !735

checkok130:                                       ; preds = %checkok116
  %83 = load ptr, ptr %81, align 8, !dbg !735
  %84 = ptrtoint ptr %83 to i64, !dbg !733
  %85 = ptrtoint ptr %ptradd_any124 to i64, !dbg !733
  %86 = sub i64 %85, %84, !dbg !733
  %87 = sdiv exact i64 %86, 1, !dbg !733
  store i64 %87, ptr %new_used, align 8, !dbg !733
  %88 = load ptr, ptr %page, align 8, !dbg !736
  %checknull131 = icmp eq ptr %88, null, !dbg !736
  %89 = call i1 @llvm.expect.i1(i1 %checknull131, i1 false), !dbg !736
  br i1 %89, label %panic132, label %checkok136, !dbg !736

checkok136:                                       ; preds = %checkok130
  %ptradd137 = getelementptr inbounds i8, ptr %88, i64 16, !dbg !736
  %90 = load i64, ptr %ptradd137, align 8, !dbg !736
  %91 = load i64, ptr %new_used, align 8, !dbg !737
  %ge = icmp uge i64 %90, %91, !dbg !736
  br i1 %ge, label %if.then138, label %if.exit174, !dbg !736

if.then138:                                       ; preds = %checkok136
  %92 = load ptr, ptr %self, align 8, !dbg !738
  %checknull139 = icmp eq ptr %92, null, !dbg !738
  %93 = call i1 @llvm.expect.i1(i1 %checknull139, i1 false), !dbg !738
  br i1 %93, label %panic140, label %checkok144, !dbg !738

checkok144:                                       ; preds = %if.then138
  %ptradd145 = getelementptr inbounds i8, ptr %92, i64 24, !dbg !738
  %94 = load ptr, ptr %page, align 8, !dbg !740
  %checknull146 = icmp eq ptr %94, null, !dbg !740
  %95 = call i1 @llvm.expect.i1(i1 %checknull146, i1 false), !dbg !740
  br i1 %95, label %panic147, label %checkok151, !dbg !740

checkok151:                                       ; preds = %checkok144
  %ptradd152 = getelementptr inbounds i8, ptr %94, i64 8, !dbg !740
  %96 = load ptr, ptr %ptradd152, align 8, !dbg !740
  store ptr %96, ptr %ptradd145, align 8, !dbg !740
  %97 = load ptr, ptr %page, align 8, !dbg !741
  %checknull153 = icmp eq ptr %97, null, !dbg !741
  %98 = call i1 @llvm.expect.i1(i1 %checknull153, i1 false), !dbg !741
  br i1 %98, label %panic154, label %checkok158, !dbg !741

checkok158:                                       ; preds = %checkok151
  %ptradd159 = getelementptr inbounds i8, ptr %97, i64 8, !dbg !741
  %99 = load ptr, ptr %self, align 8, !dbg !742
  %checknull160 = icmp eq ptr %99, null, !dbg !742
  %100 = call i1 @llvm.expect.i1(i1 %checknull160, i1 false), !dbg !742
  br i1 %100, label %panic161, label %checkok165, !dbg !742

checkok165:                                       ; preds = %checkok158
  %ptradd166 = getelementptr inbounds i8, ptr %99, i64 16, !dbg !742
  %101 = load ptr, ptr %ptradd166, align 8, !dbg !742
  store ptr %101, ptr %ptradd159, align 8, !dbg !742
  %102 = load ptr, ptr %self, align 8, !dbg !743
  %checknull167 = icmp eq ptr %102, null, !dbg !743
  %103 = call i1 @llvm.expect.i1(i1 %checknull167, i1 false), !dbg !743
  br i1 %103, label %panic168, label %checkok172, !dbg !743

checkok172:                                       ; preds = %checkok165
  %ptradd173 = getelementptr inbounds i8, ptr %102, i64 16, !dbg !743
  %104 = load ptr, ptr %page, align 8, !dbg !744
  store ptr %104, ptr %ptradd173, align 8, !dbg !744
  br label %if.exit180, !dbg !745

if.exit174:                                       ; preds = %checkok136
  br label %if.exit175, !dbg !745

if.exit175:                                       ; preds = %if.exit174, %checkok101
  %105 = load ptr, ptr %self, align 8
  %106 = load i64, ptr %size, align 8
  %107 = load i64, ptr %alignment, align 8
  %108 = call i64 @std.core.mem.allocator.DynamicArenaAllocator._alloc_new(ptr %retparam176, ptr %105, i64 %106, i64 %107), !dbg !746
  %not_err177 = icmp eq i64 %108, 0, !dbg !746
  %109 = call i1 @llvm.expect.i1(i1 %not_err177, i1 true), !dbg !746
  br i1 %109, label %after_check179, label %assign_optional178, !dbg !746

assign_optional178:                               ; preds = %if.exit175
  store i64 %108, ptr %error_var, align 8, !dbg !746
  br label %guard_block, !dbg !746

after_check179:                                   ; preds = %if.exit175
  %110 = load ptr, ptr %retparam176, align 8, !dbg !746
  store ptr %110, ptr %blockret, align 8, !dbg !746
  br label %expr_block.exit, !dbg !746

if.exit180:                                       ; preds = %checkok172, %checkok93
  %111 = load ptr, ptr %page, align 8, !dbg !747
  %checknull181 = icmp eq ptr %111, null, !dbg !747
  %112 = call i1 @llvm.expect.i1(i1 %checknull181, i1 false), !dbg !747
  br i1 %112, label %panic182, label %checkok186, !dbg !747

checkok186:                                       ; preds = %if.exit180
  %ptradd187 = getelementptr inbounds i8, ptr %111, i64 24, !dbg !747
  %113 = load i64, ptr %new_used, align 8, !dbg !748
  store i64 %113, ptr %ptradd187, align 8, !dbg !748
  %114 = load ptr, ptr %start, align 8, !dbg !749
  %115 = load i64, ptr %size, align 8, !dbg !750
  %ptradd_any188 = getelementptr i8, ptr %114, i64 %115, !dbg !750
  %116 = load ptr, ptr %page, align 8, !dbg !751
  %checknull189 = icmp eq ptr %116, null, !dbg !751
  %117 = call i1 @llvm.expect.i1(i1 %checknull189, i1 false), !dbg !751
  br i1 %117, label %panic190, label %checkok194, !dbg !751

checkok194:                                       ; preds = %checkok186
  %118 = load ptr, ptr %116, align 8, !dbg !751
  %119 = load ptr, ptr %page, align 8, !dbg !752
  %checknull195 = icmp eq ptr %119, null, !dbg !752
  %120 = call i1 @llvm.expect.i1(i1 %checknull195, i1 false), !dbg !752
  br i1 %120, label %panic196, label %checkok200, !dbg !752

checkok200:                                       ; preds = %checkok194
  %ptradd201 = getelementptr inbounds i8, ptr %119, i64 24, !dbg !752
  %121 = load i64, ptr %ptradd201, align 8, !dbg !752
  %ptradd_any202 = getelementptr i8, ptr %118, i64 %121, !dbg !752
  %eq203 = icmp eq ptr %ptradd_any188, %ptradd_any202, !dbg !749
  br i1 %eq203, label %assert_ok208, label %assert_fail204, !dbg !749

assert_fail204:                                   ; preds = %checkok200
  store %"char[]" { ptr @.panic_msg.33, i64 16 }, ptr %indirectarg205, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg206, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg207, align 8
  %122 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %122(ptr align 8 %indirectarg205, ptr align 8 %indirectarg206, ptr align 8 %indirectarg207, i32 194), !dbg !749
  unreachable, !dbg !749

assert_ok208:                                     ; preds = %checkok200
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !753, metadata !DIExpression()), !dbg !754
  %123 = load ptr, ptr %start, align 8, !dbg !755
  store ptr %123, ptr %mem, align 8, !dbg !755
  call void @llvm.dbg.declare(metadata ptr %chunk, metadata !756, metadata !DIExpression()), !dbg !757
  %124 = load ptr, ptr %mem, align 8, !dbg !758
  %ptradd_any209 = getelementptr i8, ptr %124, i64 -8, !dbg !759
  store ptr %ptradd_any209, ptr %chunk, align 8, !dbg !759
  %125 = load ptr, ptr %chunk, align 8, !dbg !760
  %checknull210 = icmp eq ptr %125, null, !dbg !760
  %126 = call i1 @llvm.expect.i1(i1 %checknull210, i1 false), !dbg !760
  br i1 %126, label %panic211, label %checkok215, !dbg !760

checkok215:                                       ; preds = %assert_ok208
  %127 = load i64, ptr %size, align 8, !dbg !761
  store i64 %127, ptr %125, align 8, !dbg !761
  %128 = load ptr, ptr %mem, align 8, !dbg !762
  store ptr %128, ptr %blockret, align 8, !dbg !762
  br label %expr_block.exit, !dbg !762

expr_block.exit:                                  ; preds = %checkok215, %after_check179, %after_check
  br label %noerr_block, !dbg !762

guard_block:                                      ; preds = %assign_optional178, %assign_optional
  %129 = load i64, ptr %error_var, align 8, !dbg !762
  ret i64 %129, !dbg !762

noerr_block:                                      ; preds = %expr_block.exit
  %130 = load ptr, ptr %blockret, align 8, !dbg !762
  store ptr %130, ptr %ptr, align 8, !dbg !762
  %131 = load i32, ptr %init_type, align 4, !dbg !763
  %eq216 = icmp eq i32 %131, 1, !dbg !763
  br i1 %eq216, label %if.then217, label %if.exit218, !dbg !763

if.then217:                                       ; preds = %noerr_block
  %132 = load ptr, ptr %ptr, align 8
  store ptr %132, ptr %dst, align 8
  %133 = load i64, ptr %size, align 8
  store i64 %133, ptr %len, align 8
  %134 = load ptr, ptr %dst, align 8, !dbg !764
  %135 = load i64, ptr %len, align 8, !dbg !767
  call void @llvm.memset.p0.i64(ptr align 16 %134, i8 0, i64 %135, i1 false), !dbg !768
  br label %if.exit218, !dbg !768

if.exit218:                                       ; preds = %if.then217, %noerr_block
  %136 = load ptr, ptr %ptr, align 8, !dbg !769
  store ptr %136, ptr %0, align 8, !dbg !769
  ret i64 0, !dbg !769

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg2, align 8
  %137 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %137(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 163), !dbg !672
  unreachable, !dbg !672

panic12:                                          ; preds = %assert_ok11
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg15, align 8
  %138 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %138(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 166), !dbg !692
  unreachable, !dbg !692

panic20:                                          ; preds = %and.rhs18
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg23, align 8
  %139 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %139(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 168), !dbg !697
  unreachable, !dbg !697

panic29:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg32, align 8
  %140 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %140(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 170), !dbg !698
  unreachable, !dbg !698

panic36:                                          ; preds = %checkok33
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg39, align 8
  %141 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %141(ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, i32 170), !dbg !700
  unreachable, !dbg !700

panic43:                                          ; preds = %checkok40
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg46, align 8
  %142 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %142(ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, i32 171), !dbg !701
  unreachable, !dbg !701

panic50:                                          ; preds = %checkok47
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg53, align 8
  %143 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %143(ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, i32 171), !dbg !702
  unreachable, !dbg !702

panic57:                                          ; preds = %checkok54
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg60, align 8
  %144 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %144(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 172), !dbg !703
  unreachable, !dbg !703

panic67:                                          ; preds = %if.exit65
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg70, align 8
  %145 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %145(ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, i32 175), !dbg !709
  unreachable, !dbg !709

panic73:                                          ; preds = %checkok71
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg75, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg76, align 8
  %146 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %146(ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, ptr align 8 %indirectarg76, i32 175), !dbg !710
  unreachable, !dbg !710

panic82:                                          ; preds = %checkok77
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg83, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg85, align 8
  %147 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %147(ptr align 8 %indirectarg83, ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, i32 176), !dbg !719
  unreachable, !dbg !719

panic89:                                          ; preds = %checkok86
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg90, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg91, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg92, align 8
  %148 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %148(ptr align 8 %indirectarg90, ptr align 8 %indirectarg91, ptr align 8 %indirectarg92, i32 177), !dbg !722
  unreachable, !dbg !722

panic97:                                          ; preds = %if.then95
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg98, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg99, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg100, align 8
  %149 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %149(ptr align 8 %indirectarg98, ptr align 8 %indirectarg99, ptr align 8 %indirectarg100, i32 179), !dbg !723
  unreachable, !dbg !723

panic106:                                         ; preds = %if.then104
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg107, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg108, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg109, align 8
  %150 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %150(ptr align 8 %indirectarg107, ptr align 8 %indirectarg108, ptr align 8 %indirectarg109, i32 181), !dbg !725
  unreachable, !dbg !725

panic112:                                         ; preds = %checkok110
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg113, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg114, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg115, align 8
  %151 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %151(ptr align 8 %indirectarg113, ptr align 8 %indirectarg114, ptr align 8 %indirectarg115, i32 181), !dbg !727
  unreachable, !dbg !727

panic126:                                         ; preds = %checkok116
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg127, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg128, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg129, align 8
  %152 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %152(ptr align 8 %indirectarg127, ptr align 8 %indirectarg128, ptr align 8 %indirectarg129, i32 182), !dbg !735
  unreachable, !dbg !735

panic132:                                         ; preds = %checkok130
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg133, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg134, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg135, align 8
  %153 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %153(ptr align 8 %indirectarg133, ptr align 8 %indirectarg134, ptr align 8 %indirectarg135, i32 183), !dbg !736
  unreachable, !dbg !736

panic140:                                         ; preds = %if.then138
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg141, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg142, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg143, align 8
  %154 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %154(ptr align 8 %indirectarg141, ptr align 8 %indirectarg142, ptr align 8 %indirectarg143, i32 185), !dbg !738
  unreachable, !dbg !738

panic147:                                         ; preds = %checkok144
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg148, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg149, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg150, align 8
  %155 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %155(ptr align 8 %indirectarg148, ptr align 8 %indirectarg149, ptr align 8 %indirectarg150, i32 185), !dbg !740
  unreachable, !dbg !740

panic154:                                         ; preds = %checkok151
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg155, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg156, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg157, align 8
  %156 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %156(ptr align 8 %indirectarg155, ptr align 8 %indirectarg156, ptr align 8 %indirectarg157, i32 186), !dbg !741
  unreachable, !dbg !741

panic161:                                         ; preds = %checkok158
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg162, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg163, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg164, align 8
  %157 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %157(ptr align 8 %indirectarg162, ptr align 8 %indirectarg163, ptr align 8 %indirectarg164, i32 186), !dbg !742
  unreachable, !dbg !742

panic168:                                         ; preds = %checkok165
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg169, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg170, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg171, align 8
  %158 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %158(ptr align 8 %indirectarg169, ptr align 8 %indirectarg170, ptr align 8 %indirectarg171, i32 187), !dbg !743
  unreachable, !dbg !743

panic182:                                         ; preds = %if.exit180
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg183, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg184, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg185, align 8
  %159 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %159(ptr align 8 %indirectarg183, ptr align 8 %indirectarg184, ptr align 8 %indirectarg185, i32 193), !dbg !747
  unreachable, !dbg !747

panic190:                                         ; preds = %checkok186
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg191, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg192, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg193, align 8
  %160 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %160(ptr align 8 %indirectarg191, ptr align 8 %indirectarg192, ptr align 8 %indirectarg193, i32 194), !dbg !751
  unreachable, !dbg !751

panic196:                                         ; preds = %checkok194
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg197, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg198, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg199, align 8
  %161 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %161(ptr align 8 %indirectarg197, ptr align 8 %indirectarg198, ptr align 8 %indirectarg199, i32 194), !dbg !752
  unreachable, !dbg !752

panic211:                                         ; preds = %assert_ok208
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg212, align 8
  store %"char[]" { ptr @.file.20, i64 16 }, ptr %indirectarg213, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg214, align 8
  %162 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %162(ptr align 8 %indirectarg212, ptr align 8 %indirectarg213, ptr align 8 %indirectarg214, i32 197), !dbg !760
  unreachable, !dbg !760
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.SimpleHeapAllocator.init(ptr %0, ptr %1) #0 comdat !dbg !770 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %allocator = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !793
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !793
  br i1 %3, label %panic, label %checkok, !dbg !793

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !794, metadata !DIExpression()), !dbg !795
  store ptr %1, ptr %allocator, align 8
  call void @llvm.dbg.declare(metadata ptr %allocator, metadata !796, metadata !DIExpression()), !dbg !797
  %4 = load ptr, ptr %allocator, align 8, !dbg !798
  %ptrbool = icmp ne ptr %4, null, !dbg !798
  br i1 %ptrbool, label %assert_ok, label %assert_fail, !dbg !798

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.42, i64 77 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg5, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 15), !dbg !798
  unreachable, !dbg !798

assert_ok:                                        ; preds = %checkok
  %6 = load ptr, ptr %self, align 8, !dbg !800
  %checknull = icmp eq ptr %6, null, !dbg !800
  %7 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !800
  br i1 %7, label %panic6, label %checkok10, !dbg !800

checkok10:                                        ; preds = %assert_ok
  %ptradd = getelementptr inbounds i8, ptr %6, i64 8, !dbg !800
  %8 = load ptr, ptr %ptradd, align 8, !dbg !800
  %not = icmp eq ptr %8, null, !dbg !800
  br i1 %not, label %assert_ok15, label %assert_fail11, !dbg !800

assert_fail11:                                    ; preds = %checkok10
  store %"char[]" { ptr @.panic_msg.43, i64 84 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg14, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 16), !dbg !801
  unreachable, !dbg !801

assert_ok15:                                      ; preds = %checkok10
  %10 = load ptr, ptr %self, align 8, !dbg !802
  %checknull16 = icmp eq ptr %10, null, !dbg !802
  %11 = call i1 @llvm.expect.i1(i1 %checknull16, i1 false), !dbg !802
  br i1 %11, label %panic17, label %checkok21, !dbg !802

checkok21:                                        ; preds = %assert_ok15
  %12 = load ptr, ptr %allocator, align 8, !dbg !803
  store ptr %12, ptr %10, align 8, !dbg !803
  %13 = load ptr, ptr %self, align 8, !dbg !804
  %checknull22 = icmp eq ptr %13, null, !dbg !804
  %14 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !804
  br i1 %14, label %panic23, label %checkok27, !dbg !804

checkok27:                                        ; preds = %checkok21
  %ptradd28 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !804
  store ptr null, ptr %ptradd28, align 8, !dbg !805
  ret void, !dbg !805

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 18), !dbg !795
  unreachable, !dbg !795

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg9, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 16), !dbg !800
  unreachable, !dbg !800

panic17:                                          ; preds = %assert_ok15
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg20, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 20), !dbg !802
  unreachable, !dbg !802

panic23:                                          ; preds = %checkok21
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg26, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 21), !dbg !804
  unreachable, !dbg !804
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.SimpleHeapAllocator.acquire(ptr %0, ptr %1, i64 %2, i32 %3, i64 %4) #0 comdat !dbg !806 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %size = alloca i64, align 8
  %init_type = alloca i32, align 4
  %alignment = alloca i64, align 8
  %reterr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %alignment3 = alloca i64, align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %header = alloca i64, align 8
  %alignsize = alloca i64, align 8
  %data = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %mem = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %alignment22 = alloca i64, align 8
  %desc = alloca ptr, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %.assign_list = alloca %AlignedBlock, align 8
  %retparam34 = alloca ptr, align 8
  %reterr39 = alloca i64, align 8
  %bytes42 = alloca i64, align 8
  %alignment43 = alloca i64, align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %header65 = alloca i64, align 8
  %alignsize67 = alloca i64, align 8
  %data69 = alloca ptr, align 8
  %error_var70 = alloca i64, align 8
  %retparam71 = alloca ptr, align 8
  %mem77 = alloca ptr, align 8
  %ptr79 = alloca ptr, align 8
  %alignment80 = alloca i64, align 8
  %desc83 = alloca ptr, align 8
  %indirectarg87 = alloca %"char[]", align 8
  %indirectarg88 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg93 = alloca %"char[]", align 8
  %indirectarg94 = alloca %"char[]", align 8
  %indirectarg95 = alloca %"char[]", align 8
  %.assign_list97 = alloca %AlignedBlock, align 8
  %retparam100 = alloca ptr, align 8
  %5 = icmp eq ptr %1, null, !dbg !809
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !809
  br i1 %6, label %panic, label %checkok, !dbg !809

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !810, metadata !DIExpression()), !dbg !811
  store i64 %2, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !812, metadata !DIExpression()), !dbg !813
  store i32 %3, ptr %init_type, align 4
  call void @llvm.dbg.declare(metadata ptr %init_type, metadata !814, metadata !DIExpression()), !dbg !815
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !816, metadata !DIExpression()), !dbg !817
  %7 = load i32, ptr %init_type, align 4, !dbg !818
  %eq = icmp eq i32 %7, 1, !dbg !818
  br i1 %eq, label %if.then, label %if.exit38, !dbg !818

if.then:                                          ; preds = %checkok
  %8 = load i64, ptr %alignment, align 8, !dbg !819
  %lt = icmp ult i64 0, %8, !dbg !819
  br i1 %lt, label %cond.lhs, label %cond.rhs, !dbg !819

cond.lhs:                                         ; preds = %if.then
  %9 = load i64, ptr %size, align 8
  store i64 %9, ptr %bytes, align 8
  %10 = load i64, ptr %alignment, align 8
  store i64 %10, ptr %alignment3, align 8
  %11 = load i64, ptr %bytes, align 8, !dbg !821
  %lt4 = icmp ult i64 0, %11, !dbg !821
  br i1 %lt4, label %assert_ok, label %assert_fail, !dbg !821

assert_fail:                                      ; preds = %cond.lhs
  store %"char[]" { ptr @.panic_msg.44, i64 30 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg7, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 304), !dbg !821
  unreachable, !dbg !821

assert_ok:                                        ; preds = %cond.lhs
  %13 = load i64, ptr %alignment3, align 8, !dbg !825
  %lt8 = icmp ult i64 0, %13, !dbg !825
  br i1 %lt8, label %assert_ok13, label %assert_fail9, !dbg !825

assert_fail9:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.45, i64 34 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg12, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 305), !dbg !825
  unreachable, !dbg !825

assert_ok13:                                      ; preds = %assert_ok
  %15 = load i64, ptr %bytes, align 8, !dbg !826
  %ge = icmp uge i64 9223372036854775807, %15, !dbg !826
  br i1 %ge, label %assert_ok18, label %assert_fail14, !dbg !826

assert_fail14:                                    ; preds = %assert_ok13
  store %"char[]" { ptr @.panic_msg.46, i64 37 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg17, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, i32 306), !dbg !826
  unreachable, !dbg !826

assert_ok18:                                      ; preds = %assert_ok13
  %17 = load i64, ptr %alignment3, align 8, !dbg !827
  %lt19 = icmp ult i64 %17, 8, !dbg !827
  br i1 %lt19, label %if.then20, label %if.exit, !dbg !827

if.then20:                                        ; preds = %assert_ok18
  store i64 8, ptr %alignment3, align 8, !dbg !828
  br label %if.exit, !dbg !828

if.exit:                                          ; preds = %if.then20, %assert_ok18
  call void @llvm.dbg.declare(metadata ptr %header, metadata !829, metadata !DIExpression()), !dbg !830
  %18 = load i64, ptr %alignment3, align 8, !dbg !831
  %add = add i64 16, %18, !dbg !832
  store i64 %add, ptr %header, align 8, !dbg !832
  call void @llvm.dbg.declare(metadata ptr %alignsize, metadata !833, metadata !DIExpression()), !dbg !834
  %19 = load i64, ptr %bytes, align 8, !dbg !835
  %20 = load i64, ptr %header, align 8, !dbg !836
  %add21 = add i64 %19, %20, !dbg !835
  store i64 %add21, ptr %alignsize, align 8, !dbg !835
  call void @llvm.dbg.declare(metadata ptr %data, metadata !837, metadata !DIExpression()), !dbg !838
  %21 = load ptr, ptr %self, align 8
  %22 = load i64, ptr %alignsize, align 8
  %23 = call i64 @std.core.mem.allocator.SimpleHeapAllocator._calloc(ptr %retparam, ptr %21, i64 %22), !dbg !839
  %not_err = icmp eq i64 %23, 0, !dbg !839
  %24 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !839
  br i1 %24, label %after_check, label %assign_optional, !dbg !839

assign_optional:                                  ; preds = %if.exit
  store i64 %23, ptr %error_var, align 8, !dbg !839
  br label %guard_block, !dbg !839

after_check:                                      ; preds = %if.exit
  br label %noerr_block, !dbg !839

guard_block:                                      ; preds = %assign_optional
  %25 = load i64, ptr %error_var, align 8, !dbg !839
  store i64 %25, ptr %reterr, align 8, !dbg !839
  br label %err_retblock, !dbg !839

noerr_block:                                      ; preds = %after_check
  %26 = load ptr, ptr %retparam, align 8, !dbg !839
  store ptr %26, ptr %data, align 8, !dbg !839
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !840, metadata !DIExpression()), !dbg !841
  %27 = load ptr, ptr %data, align 8, !dbg !842
  %ptradd_any = getelementptr i8, ptr %27, i64 16, !dbg !843
  store ptr %ptradd_any, ptr %ptr, align 8
  %28 = load i64, ptr %alignment3, align 8
  store i64 %28, ptr %alignment22, align 8
  %29 = load ptr, ptr %ptr, align 8, !dbg !844
  %ptrxi = ptrtoint ptr %29 to i64, !dbg !844
  %30 = load i64, ptr %alignment22, align 8, !dbg !847
  %31 = call i64 @std.core.mem.aligned_offset(i64 %ptrxi, i64 %30), !dbg !848
  %intptr = inttoptr i64 %31 to ptr, !dbg !848
  store ptr %intptr, ptr %mem, align 8, !dbg !848
  call void @llvm.dbg.declare(metadata ptr %desc, metadata !849, metadata !DIExpression()), !dbg !855
  %32 = load ptr, ptr %mem, align 8, !dbg !856
  %ptradd_any23 = getelementptr i8, ptr %32, i64 -16, !dbg !857
  store ptr %ptradd_any23, ptr %desc, align 8, !dbg !857
  %33 = load ptr, ptr %mem, align 8, !dbg !858
  %34 = load ptr, ptr %data, align 8, !dbg !859
  %gt = icmp ugt ptr %33, %34, !dbg !858
  br i1 %gt, label %assert_ok28, label %assert_fail24, !dbg !858

assert_fail24:                                    ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.33, i64 16 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg27, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 320), !dbg !858
  unreachable, !dbg !858

assert_ok28:                                      ; preds = %noerr_block
  %36 = load ptr, ptr %desc, align 8, !dbg !860
  %checknull = icmp eq ptr %36, null, !dbg !860
  %37 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !860
  br i1 %37, label %panic29, label %checkok33, !dbg !860

checkok33:                                        ; preds = %assert_ok28
  %38 = load i64, ptr %bytes, align 8, !dbg !861
  store i64 %38, ptr %.assign_list, align 8, !dbg !861
  %ptradd = getelementptr inbounds i8, ptr %.assign_list, i64 8, !dbg !861
  %39 = load ptr, ptr %data, align 8, !dbg !862
  store ptr %39, ptr %ptradd, align 8, !dbg !862
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %36, ptr align 8 %.assign_list, i32 16, i1 false), !dbg !862
  %40 = load ptr, ptr %mem, align 8, !dbg !863
  br label %cond.phi, !dbg !863

cond.rhs:                                         ; preds = %if.then
  %41 = load ptr, ptr %self, align 8
  %42 = load i64, ptr %size, align 8
  %43 = call i64 @std.core.mem.allocator.SimpleHeapAllocator._calloc(ptr %retparam34, ptr %41, i64 %42), !dbg !864
  %not_err35 = icmp eq i64 %43, 0, !dbg !864
  %44 = call i1 @llvm.expect.i1(i1 %not_err35, i1 true), !dbg !864
  br i1 %44, label %after_check37, label %assign_optional36, !dbg !864

assign_optional36:                                ; preds = %cond.rhs
  store i64 %43, ptr %reterr, align 8, !dbg !864
  br label %err_retblock, !dbg !864

after_check37:                                    ; preds = %cond.rhs
  %45 = load ptr, ptr %retparam34, align 8, !dbg !864
  br label %cond.phi, !dbg !864

cond.phi:                                         ; preds = %after_check37, %checkok33
  %val = phi ptr [ %40, %checkok33 ], [ %45, %after_check37 ], !dbg !864
  store ptr %val, ptr %0, align 8, !dbg !864
  ret i64 0, !dbg !864

err_retblock:                                     ; preds = %assign_optional36, %guard_block
  %46 = load i64, ptr %reterr, align 8, !dbg !864
  ret i64 %46, !dbg !864

if.exit38:                                        ; preds = %checkok
  %47 = load i64, ptr %alignment, align 8, !dbg !865
  %lt40 = icmp ult i64 0, %47, !dbg !865
  br i1 %lt40, label %cond.lhs41, label %cond.rhs99, !dbg !865

cond.lhs41:                                       ; preds = %if.exit38
  %48 = load i64, ptr %size, align 8
  store i64 %48, ptr %bytes42, align 8
  %49 = load i64, ptr %alignment, align 8
  store i64 %49, ptr %alignment43, align 8
  %50 = load i64, ptr %bytes42, align 8, !dbg !866
  %lt44 = icmp ult i64 0, %50, !dbg !866
  br i1 %lt44, label %assert_ok49, label %assert_fail45, !dbg !866

assert_fail45:                                    ; preds = %cond.lhs41
  store %"char[]" { ptr @.panic_msg.44, i64 30 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg48, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, i32 304), !dbg !866
  unreachable, !dbg !866

assert_ok49:                                      ; preds = %cond.lhs41
  %52 = load i64, ptr %alignment43, align 8, !dbg !870
  %lt50 = icmp ult i64 0, %52, !dbg !870
  br i1 %lt50, label %assert_ok55, label %assert_fail51, !dbg !870

assert_fail51:                                    ; preds = %assert_ok49
  store %"char[]" { ptr @.panic_msg.45, i64 34 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg54, align 8
  %53 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %53(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 305), !dbg !870
  unreachable, !dbg !870

assert_ok55:                                      ; preds = %assert_ok49
  %54 = load i64, ptr %bytes42, align 8, !dbg !871
  %ge56 = icmp uge i64 9223372036854775807, %54, !dbg !871
  br i1 %ge56, label %assert_ok61, label %assert_fail57, !dbg !871

assert_fail57:                                    ; preds = %assert_ok55
  store %"char[]" { ptr @.panic_msg.46, i64 37 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg60, align 8
  %55 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %55(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 306), !dbg !871
  unreachable, !dbg !871

assert_ok61:                                      ; preds = %assert_ok55
  %56 = load i64, ptr %alignment43, align 8, !dbg !872
  %lt62 = icmp ult i64 %56, 8, !dbg !872
  br i1 %lt62, label %if.then63, label %if.exit64, !dbg !872

if.then63:                                        ; preds = %assert_ok61
  store i64 8, ptr %alignment43, align 8, !dbg !873
  br label %if.exit64, !dbg !873

if.exit64:                                        ; preds = %if.then63, %assert_ok61
  call void @llvm.dbg.declare(metadata ptr %header65, metadata !874, metadata !DIExpression()), !dbg !875
  %57 = load i64, ptr %alignment43, align 8, !dbg !876
  %add66 = add i64 16, %57, !dbg !877
  store i64 %add66, ptr %header65, align 8, !dbg !877
  call void @llvm.dbg.declare(metadata ptr %alignsize67, metadata !878, metadata !DIExpression()), !dbg !879
  %58 = load i64, ptr %bytes42, align 8, !dbg !880
  %59 = load i64, ptr %header65, align 8, !dbg !881
  %add68 = add i64 %58, %59, !dbg !880
  store i64 %add68, ptr %alignsize67, align 8, !dbg !880
  call void @llvm.dbg.declare(metadata ptr %data69, metadata !882, metadata !DIExpression()), !dbg !883
  %60 = load ptr, ptr %self, align 8
  %61 = load i64, ptr %alignsize67, align 8
  %62 = call i64 @std.core.mem.allocator.SimpleHeapAllocator._alloc(ptr %retparam71, ptr %60, i64 %61), !dbg !884
  %not_err72 = icmp eq i64 %62, 0, !dbg !884
  %63 = call i1 @llvm.expect.i1(i1 %not_err72, i1 true), !dbg !884
  br i1 %63, label %after_check74, label %assign_optional73, !dbg !884

assign_optional73:                                ; preds = %if.exit64
  store i64 %62, ptr %error_var70, align 8, !dbg !884
  br label %guard_block75, !dbg !884

after_check74:                                    ; preds = %if.exit64
  br label %noerr_block76, !dbg !884

guard_block75:                                    ; preds = %assign_optional73
  %64 = load i64, ptr %error_var70, align 8, !dbg !884
  store i64 %64, ptr %reterr39, align 8, !dbg !884
  br label %err_retblock106, !dbg !884

noerr_block76:                                    ; preds = %after_check74
  %65 = load ptr, ptr %retparam71, align 8, !dbg !884
  store ptr %65, ptr %data69, align 8, !dbg !884
  call void @llvm.dbg.declare(metadata ptr %mem77, metadata !885, metadata !DIExpression()), !dbg !886
  %66 = load ptr, ptr %data69, align 8, !dbg !887
  %ptradd_any78 = getelementptr i8, ptr %66, i64 16, !dbg !888
  store ptr %ptradd_any78, ptr %ptr79, align 8
  %67 = load i64, ptr %alignment43, align 8
  store i64 %67, ptr %alignment80, align 8
  %68 = load ptr, ptr %ptr79, align 8, !dbg !889
  %ptrxi81 = ptrtoint ptr %68 to i64, !dbg !889
  %69 = load i64, ptr %alignment80, align 8, !dbg !892
  %70 = call i64 @std.core.mem.aligned_offset(i64 %ptrxi81, i64 %69), !dbg !893
  %intptr82 = inttoptr i64 %70 to ptr, !dbg !893
  store ptr %intptr82, ptr %mem77, align 8, !dbg !893
  call void @llvm.dbg.declare(metadata ptr %desc83, metadata !894, metadata !DIExpression()), !dbg !895
  %71 = load ptr, ptr %mem77, align 8, !dbg !896
  %ptradd_any84 = getelementptr i8, ptr %71, i64 -16, !dbg !897
  store ptr %ptradd_any84, ptr %desc83, align 8, !dbg !897
  %72 = load ptr, ptr %mem77, align 8, !dbg !898
  %73 = load ptr, ptr %data69, align 8, !dbg !899
  %gt85 = icmp ugt ptr %72, %73, !dbg !898
  br i1 %gt85, label %assert_ok90, label %assert_fail86, !dbg !898

assert_fail86:                                    ; preds = %noerr_block76
  store %"char[]" { ptr @.panic_msg.33, i64 16 }, ptr %indirectarg87, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg88, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg89, align 8
  %74 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %74(ptr align 8 %indirectarg87, ptr align 8 %indirectarg88, ptr align 8 %indirectarg89, i32 320), !dbg !898
  unreachable, !dbg !898

assert_ok90:                                      ; preds = %noerr_block76
  %75 = load ptr, ptr %desc83, align 8, !dbg !900
  %checknull91 = icmp eq ptr %75, null, !dbg !900
  %76 = call i1 @llvm.expect.i1(i1 %checknull91, i1 false), !dbg !900
  br i1 %76, label %panic92, label %checkok96, !dbg !900

checkok96:                                        ; preds = %assert_ok90
  %77 = load i64, ptr %bytes42, align 8, !dbg !901
  store i64 %77, ptr %.assign_list97, align 8, !dbg !901
  %ptradd98 = getelementptr inbounds i8, ptr %.assign_list97, i64 8, !dbg !901
  %78 = load ptr, ptr %data69, align 8, !dbg !902
  store ptr %78, ptr %ptradd98, align 8, !dbg !902
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %75, ptr align 8 %.assign_list97, i32 16, i1 false), !dbg !902
  %79 = load ptr, ptr %mem77, align 8, !dbg !903
  br label %cond.phi104, !dbg !903

cond.rhs99:                                       ; preds = %if.exit38
  %80 = load ptr, ptr %self, align 8
  %81 = load i64, ptr %size, align 8
  %82 = call i64 @std.core.mem.allocator.SimpleHeapAllocator._alloc(ptr %retparam100, ptr %80, i64 %81), !dbg !904
  %not_err101 = icmp eq i64 %82, 0, !dbg !904
  %83 = call i1 @llvm.expect.i1(i1 %not_err101, i1 true), !dbg !904
  br i1 %83, label %after_check103, label %assign_optional102, !dbg !904

assign_optional102:                               ; preds = %cond.rhs99
  store i64 %82, ptr %reterr39, align 8, !dbg !904
  br label %err_retblock106, !dbg !904

after_check103:                                   ; preds = %cond.rhs99
  %84 = load ptr, ptr %retparam100, align 8, !dbg !904
  br label %cond.phi104, !dbg !904

cond.phi104:                                      ; preds = %after_check103, %checkok96
  %val105 = phi ptr [ %79, %checkok96 ], [ %84, %after_check103 ], !dbg !904
  store ptr %val105, ptr %0, align 8, !dbg !904
  ret i64 0, !dbg !904

err_retblock106:                                  ; preds = %assign_optional102, %guard_block75
  %85 = load i64, ptr %reterr39, align 8, !dbg !904
  ret i64 %85, !dbg !904

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg2, align 8
  %86 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %86(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 24), !dbg !811
  unreachable, !dbg !811

panic29:                                          ; preds = %assert_ok28
  store %"char[]" { ptr @.panic_msg.47, i64 45 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg32, align 8
  %87 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %87(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 321), !dbg !860
  unreachable, !dbg !860

panic92:                                          ; preds = %assert_ok90
  store %"char[]" { ptr @.panic_msg.47, i64 45 }, ptr %indirectarg93, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg94, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg95, align 8
  %88 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %88(ptr align 8 %indirectarg93, ptr align 8 %indirectarg94, ptr align 8 %indirectarg95, i32 321), !dbg !900
  unreachable, !dbg !900
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.SimpleHeapAllocator.resize(ptr %0, ptr %1, ptr %2, i64 %3, i64 %4) #0 comdat !dbg !905 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_pointer = alloca ptr, align 8
  %size = alloca i64, align 8
  %alignment = alloca i64, align 8
  %reterr = alloca i64, align 8
  %old_pointer3 = alloca ptr, align 8
  %bytes = alloca i64, align 8
  %alignment4 = alloca i64, align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %desc = alloca ptr, align 8
  %data_start = alloca ptr, align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %new_data = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %bytes20 = alloca i64, align 8
  %alignment21 = alloca i64, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %header = alloca i64, align 8
  %alignsize = alloca i64, align 8
  %data = alloca ptr, align 8
  %error_var42 = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %mem = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %alignment44 = alloca i64, align 8
  %desc45 = alloca ptr, align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %.assign_list = alloca %AlignedBlock, align 8
  %dst = alloca ptr, align 8
  %src = alloca ptr, align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %len = alloca i64, align 8
  %indirectarg83 = alloca %"char[]", align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %retparam88 = alloca ptr, align 8
  %5 = icmp eq ptr %1, null, !dbg !908
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !908
  br i1 %6, label %panic, label %checkok, !dbg !908

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !909, metadata !DIExpression()), !dbg !910
  store ptr %2, ptr %old_pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %old_pointer, metadata !911, metadata !DIExpression()), !dbg !912
  store i64 %3, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !913, metadata !DIExpression()), !dbg !914
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !915, metadata !DIExpression()), !dbg !916
  %7 = load i64, ptr %alignment, align 8, !dbg !917
  %lt = icmp ult i64 0, %7, !dbg !917
  br i1 %lt, label %cond.lhs, label %cond.rhs87, !dbg !917

cond.lhs:                                         ; preds = %checkok
  %8 = load ptr, ptr %old_pointer, align 8
  store ptr %8, ptr %old_pointer3, align 8
  %9 = load i64, ptr %size, align 8
  store i64 %9, ptr %bytes, align 8
  %10 = load i64, ptr %alignment, align 8
  store i64 %10, ptr %alignment4, align 8
  %11 = load i64, ptr %bytes, align 8, !dbg !918
  %lt5 = icmp ult i64 0, %11, !dbg !918
  br i1 %lt5, label %assert_ok, label %assert_fail, !dbg !918

assert_fail:                                      ; preds = %cond.lhs
  store %"char[]" { ptr @.panic_msg.44, i64 30 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg8, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, i32 342), !dbg !918
  unreachable, !dbg !918

assert_ok:                                        ; preds = %cond.lhs
  %13 = load i64, ptr %alignment4, align 8, !dbg !922
  %lt9 = icmp ult i64 0, %13, !dbg !922
  br i1 %lt9, label %assert_ok14, label %assert_fail10, !dbg !922

assert_fail10:                                    ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.45, i64 34 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg13, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 343), !dbg !922
  unreachable, !dbg !922

assert_ok14:                                      ; preds = %assert_ok
  call void @llvm.dbg.declare(metadata ptr %desc, metadata !923, metadata !DIExpression()), !dbg !924
  %15 = load ptr, ptr %old_pointer3, align 8, !dbg !925
  %ptradd_any = getelementptr i8, ptr %15, i64 -16, !dbg !926
  store ptr %ptradd_any, ptr %desc, align 8, !dbg !926
  call void @llvm.dbg.declare(metadata ptr %data_start, metadata !927, metadata !DIExpression()), !dbg !928
  %16 = load ptr, ptr %desc, align 8, !dbg !929
  %checknull = icmp eq ptr %16, null, !dbg !929
  %17 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !929
  br i1 %17, label %panic15, label %checkok19, !dbg !929

checkok19:                                        ; preds = %assert_ok14
  %ptradd = getelementptr inbounds i8, ptr %16, i64 8, !dbg !929
  %18 = load ptr, ptr %ptradd, align 8, !dbg !929
  store ptr %18, ptr %data_start, align 8, !dbg !929
  call void @llvm.dbg.declare(metadata ptr %new_data, metadata !930, metadata !DIExpression()), !dbg !931
  %19 = load i64, ptr %bytes, align 8
  store i64 %19, ptr %bytes20, align 8
  %20 = load i64, ptr %alignment4, align 8
  store i64 %20, ptr %alignment21, align 8
  %21 = load i64, ptr %bytes20, align 8, !dbg !932
  %lt23 = icmp ult i64 0, %21, !dbg !932
  br i1 %lt23, label %assert_ok28, label %assert_fail24, !dbg !932

assert_fail24:                                    ; preds = %checkok19
  store %"char[]" { ptr @.panic_msg.44, i64 30 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg27, align 8
  %22 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %22(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 304), !dbg !932
  unreachable, !dbg !932

assert_ok28:                                      ; preds = %checkok19
  %23 = load i64, ptr %alignment21, align 8, !dbg !936
  %lt29 = icmp ult i64 0, %23, !dbg !936
  br i1 %lt29, label %assert_ok34, label %assert_fail30, !dbg !936

assert_fail30:                                    ; preds = %assert_ok28
  store %"char[]" { ptr @.panic_msg.45, i64 34 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg33, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, i32 305), !dbg !936
  unreachable, !dbg !936

assert_ok34:                                      ; preds = %assert_ok28
  %25 = load i64, ptr %bytes20, align 8, !dbg !937
  %ge = icmp uge i64 9223372036854775807, %25, !dbg !937
  br i1 %ge, label %assert_ok39, label %assert_fail35, !dbg !937

assert_fail35:                                    ; preds = %assert_ok34
  store %"char[]" { ptr @.panic_msg.46, i64 37 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg38, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, i32 306), !dbg !937
  unreachable, !dbg !937

assert_ok39:                                      ; preds = %assert_ok34
  %27 = load i64, ptr %alignment21, align 8, !dbg !938
  %lt40 = icmp ult i64 %27, 8, !dbg !938
  br i1 %lt40, label %if.then, label %if.exit, !dbg !938

if.then:                                          ; preds = %assert_ok39
  store i64 8, ptr %alignment21, align 8, !dbg !939
  br label %if.exit, !dbg !939

if.exit:                                          ; preds = %if.then, %assert_ok39
  call void @llvm.dbg.declare(metadata ptr %header, metadata !940, metadata !DIExpression()), !dbg !941
  %28 = load i64, ptr %alignment21, align 8, !dbg !942
  %add = add i64 16, %28, !dbg !943
  store i64 %add, ptr %header, align 8, !dbg !943
  call void @llvm.dbg.declare(metadata ptr %alignsize, metadata !944, metadata !DIExpression()), !dbg !945
  %29 = load i64, ptr %bytes20, align 8, !dbg !946
  %30 = load i64, ptr %header, align 8, !dbg !947
  %add41 = add i64 %29, %30, !dbg !946
  store i64 %add41, ptr %alignsize, align 8, !dbg !946
  call void @llvm.dbg.declare(metadata ptr %data, metadata !948, metadata !DIExpression()), !dbg !949
  %31 = load ptr, ptr %self, align 8
  %32 = load i64, ptr %alignsize, align 8
  %33 = call i64 @std.core.mem.allocator.SimpleHeapAllocator._calloc(ptr %retparam, ptr %31, i64 %32), !dbg !950
  %not_err = icmp eq i64 %33, 0, !dbg !950
  %34 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !950
  br i1 %34, label %after_check, label %assign_optional, !dbg !950

assign_optional:                                  ; preds = %if.exit
  store i64 %33, ptr %error_var42, align 8, !dbg !950
  br label %guard_block, !dbg !950

after_check:                                      ; preds = %if.exit
  br label %noerr_block, !dbg !950

guard_block:                                      ; preds = %assign_optional
  %35 = load i64, ptr %error_var42, align 8, !dbg !950
  store i64 %35, ptr %error_var, align 8, !dbg !950
  br label %guard_block59, !dbg !950

noerr_block:                                      ; preds = %after_check
  %36 = load ptr, ptr %retparam, align 8, !dbg !950
  store ptr %36, ptr %data, align 8, !dbg !950
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !951, metadata !DIExpression()), !dbg !952
  %37 = load ptr, ptr %data, align 8, !dbg !953
  %ptradd_any43 = getelementptr i8, ptr %37, i64 16, !dbg !954
  store ptr %ptradd_any43, ptr %ptr, align 8
  %38 = load i64, ptr %alignment21, align 8
  store i64 %38, ptr %alignment44, align 8
  %39 = load ptr, ptr %ptr, align 8, !dbg !955
  %ptrxi = ptrtoint ptr %39 to i64, !dbg !955
  %40 = load i64, ptr %alignment44, align 8, !dbg !958
  %41 = call i64 @std.core.mem.aligned_offset(i64 %ptrxi, i64 %40), !dbg !959
  %intptr = inttoptr i64 %41 to ptr, !dbg !959
  store ptr %intptr, ptr %mem, align 8, !dbg !959
  call void @llvm.dbg.declare(metadata ptr %desc45, metadata !960, metadata !DIExpression()), !dbg !961
  %42 = load ptr, ptr %mem, align 8, !dbg !962
  %ptradd_any46 = getelementptr i8, ptr %42, i64 -16, !dbg !963
  store ptr %ptradd_any46, ptr %desc45, align 8, !dbg !963
  %43 = load ptr, ptr %mem, align 8, !dbg !964
  %44 = load ptr, ptr %data, align 8, !dbg !965
  %gt = icmp ugt ptr %43, %44, !dbg !964
  br i1 %gt, label %assert_ok51, label %assert_fail47, !dbg !964

assert_fail47:                                    ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.33, i64 16 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg50, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, i32 320), !dbg !964
  unreachable, !dbg !964

assert_ok51:                                      ; preds = %noerr_block
  %46 = load ptr, ptr %desc45, align 8, !dbg !966
  %checknull52 = icmp eq ptr %46, null, !dbg !966
  %47 = call i1 @llvm.expect.i1(i1 %checknull52, i1 false), !dbg !966
  br i1 %47, label %panic53, label %checkok57, !dbg !966

checkok57:                                        ; preds = %assert_ok51
  %48 = load i64, ptr %bytes20, align 8, !dbg !967
  store i64 %48, ptr %.assign_list, align 8, !dbg !967
  %ptradd58 = getelementptr inbounds i8, ptr %.assign_list, i64 8, !dbg !967
  %49 = load ptr, ptr %data, align 8, !dbg !968
  store ptr %49, ptr %ptradd58, align 8, !dbg !968
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %46, ptr align 8 %.assign_list, i32 16, i1 false), !dbg !968
  br label %noerr_block60, !dbg !969

guard_block59:                                    ; preds = %guard_block
  %50 = load i64, ptr %error_var, align 8, !dbg !969
  store i64 %50, ptr %reterr, align 8, !dbg !969
  br label %err_retblock, !dbg !969

noerr_block60:                                    ; preds = %checkok57
  %51 = load ptr, ptr %mem, align 8, !dbg !969
  store ptr %51, ptr %new_data, align 8, !dbg !969
  %52 = load ptr, ptr %new_data, align 8
  store ptr %52, ptr %dst, align 8
  %53 = load ptr, ptr %old_pointer3, align 8
  store ptr %53, ptr %src, align 8
  %54 = load ptr, ptr %desc, align 8, !dbg !970
  %checknull61 = icmp eq ptr %54, null, !dbg !970
  %55 = call i1 @llvm.expect.i1(i1 %checknull61, i1 false), !dbg !970
  br i1 %55, label %panic62, label %checkok66, !dbg !970

checkok66:                                        ; preds = %noerr_block60
  %56 = load i64, ptr %54, align 8, !dbg !970
  %57 = load i64, ptr %bytes, align 8, !dbg !971
  %lt67 = icmp ult i64 %56, %57, !dbg !970
  br i1 %lt67, label %cond.lhs68, label %cond.rhs, !dbg !970

cond.lhs68:                                       ; preds = %checkok66
  %58 = load ptr, ptr %desc, align 8, !dbg !972
  %checknull69 = icmp eq ptr %58, null, !dbg !972
  %59 = call i1 @llvm.expect.i1(i1 %checknull69, i1 false), !dbg !972
  br i1 %59, label %panic70, label %checkok74, !dbg !972

checkok74:                                        ; preds = %cond.lhs68
  %60 = load i64, ptr %58, align 8, !dbg !972
  br label %cond.phi, !dbg !972

cond.rhs:                                         ; preds = %checkok66
  %61 = load i64, ptr %bytes, align 8, !dbg !973
  br label %cond.phi, !dbg !973

cond.phi:                                         ; preds = %cond.rhs, %checkok74
  %val = phi i64 [ %60, %checkok74 ], [ %61, %cond.rhs ], !dbg !973
  store i64 %val, ptr %len, align 8
  %62 = load i64, ptr %len, align 8, !dbg !974
  %eq = icmp eq i64 0, %62, !dbg !974
  br i1 %eq, label %or.phi, label %or.rhs, !dbg !974

or.rhs:                                           ; preds = %cond.phi
  %63 = load ptr, ptr %dst, align 8, !dbg !978
  %64 = load i64, ptr %len, align 8, !dbg !979
  %ptradd_any75 = getelementptr i8, ptr %63, i64 %64, !dbg !979
  %65 = load ptr, ptr %src, align 8, !dbg !980
  %le = icmp ule ptr %ptradd_any75, %65, !dbg !978
  br label %or.phi, !dbg !978

or.phi:                                           ; preds = %or.rhs, %cond.phi
  %val76 = phi i1 [ true, %cond.phi ], [ %le, %or.rhs ], !dbg !978
  br i1 %val76, label %or.phi80, label %or.rhs77, !dbg !978

or.rhs77:                                         ; preds = %or.phi
  %66 = load ptr, ptr %src, align 8, !dbg !981
  %67 = load i64, ptr %len, align 8, !dbg !982
  %ptradd_any78 = getelementptr i8, ptr %66, i64 %67, !dbg !982
  %68 = load ptr, ptr %dst, align 8, !dbg !983
  %le79 = icmp ule ptr %ptradd_any78, %68, !dbg !981
  br label %or.phi80, !dbg !981

or.phi80:                                         ; preds = %or.rhs77, %or.phi
  %val81 = phi i1 [ true, %or.phi ], [ %le79, %or.rhs77 ], !dbg !981
  br i1 %val81, label %assert_ok86, label %assert_fail82, !dbg !981

assert_fail82:                                    ; preds = %or.phi80
  store %"char[]" { ptr @.panic_msg.18, i64 95 }, ptr %indirectarg83, align 8
  store %"char[]" { ptr @.file.19, i64 6 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg85, align 8
  %69 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %69(ptr align 8 %indirectarg83, ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, i32 309), !dbg !974
  unreachable, !dbg !974

assert_ok86:                                      ; preds = %or.phi80
  %70 = load ptr, ptr %dst, align 8, !dbg !984
  %71 = load ptr, ptr %src, align 8, !dbg !985
  %72 = load i64, ptr %len, align 8, !dbg !986
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %70, ptr align 1 %71, i64 %72, i1 false), !dbg !987
  %73 = load ptr, ptr %self, align 8, !dbg !988
  %74 = load ptr, ptr %data_start, align 8, !dbg !988
  call void @std.core.mem.allocator.SimpleHeapAllocator._free(ptr %73, ptr %74), !dbg !989
  %75 = load ptr, ptr %new_data, align 8, !dbg !990
  br label %cond.phi92, !dbg !990

cond.rhs87:                                       ; preds = %checkok
  %76 = load ptr, ptr %self, align 8
  %77 = load ptr, ptr %old_pointer, align 8
  %78 = load i64, ptr %size, align 8
  %79 = call i64 @std.core.mem.allocator.SimpleHeapAllocator._realloc(ptr %retparam88, ptr %76, ptr %77, i64 %78), !dbg !991
  %not_err89 = icmp eq i64 %79, 0, !dbg !991
  %80 = call i1 @llvm.expect.i1(i1 %not_err89, i1 true), !dbg !991
  br i1 %80, label %after_check91, label %assign_optional90, !dbg !991

assign_optional90:                                ; preds = %cond.rhs87
  store i64 %79, ptr %reterr, align 8, !dbg !991
  br label %err_retblock, !dbg !991

after_check91:                                    ; preds = %cond.rhs87
  %81 = load ptr, ptr %retparam88, align 8, !dbg !991
  br label %cond.phi92, !dbg !991

cond.phi92:                                       ; preds = %after_check91, %assert_ok86
  %val93 = phi ptr [ %75, %assert_ok86 ], [ %81, %after_check91 ], !dbg !991
  store ptr %val93, ptr %0, align 8, !dbg !991
  ret i64 0, !dbg !991

err_retblock:                                     ; preds = %assign_optional90, %guard_block59
  %82 = load i64, ptr %reterr, align 8, !dbg !991
  ret i64 %82, !dbg !991

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg2, align 8
  %83 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %83(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 33), !dbg !910
  unreachable, !dbg !910

panic15:                                          ; preds = %assert_ok14
  store %"char[]" { ptr @.panic_msg.47, i64 45 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg18, align 8
  %84 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %84(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 348), !dbg !929
  unreachable, !dbg !929

panic53:                                          ; preds = %assert_ok51
  store %"char[]" { ptr @.panic_msg.47, i64 45 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg56, align 8
  %85 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %85(ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, i32 321), !dbg !966
  unreachable, !dbg !966

panic62:                                          ; preds = %noerr_block60
  store %"char[]" { ptr @.panic_msg.47, i64 45 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg64, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg65, align 8
  %86 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %86(ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, ptr align 8 %indirectarg65, i32 350), !dbg !970
  unreachable, !dbg !970

panic70:                                          ; preds = %cond.lhs68
  store %"char[]" { ptr @.panic_msg.47, i64 45 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg72, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg73, align 8
  %87 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %87(ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, ptr align 8 %indirectarg73, i32 350), !dbg !972
  unreachable, !dbg !972
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.SimpleHeapAllocator.release(ptr %0, ptr %1, i8 zeroext %2) #0 comdat !dbg !992 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_pointer = alloca ptr, align 8
  %aligned = alloca i8, align 1
  %error_var = alloca i64, align 8
  %old_pointer3 = alloca ptr, align 8
  %desc = alloca ptr, align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %3 = icmp eq ptr %0, null, !dbg !995
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !995
  br i1 %4, label %panic, label %checkok, !dbg !995

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !996, metadata !DIExpression()), !dbg !997
  store ptr %1, ptr %old_pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %old_pointer, metadata !998, metadata !DIExpression()), !dbg !999
  store i8 %2, ptr %aligned, align 1
  call void @llvm.dbg.declare(metadata ptr %aligned, metadata !1000, metadata !DIExpression()), !dbg !1001
  %5 = load i8, ptr %aligned, align 1, !dbg !1002
  %6 = trunc i8 %5 to i1, !dbg !1002
  br i1 %6, label %if.then, label %if.else, !dbg !1002

if.then:                                          ; preds = %checkok
  %7 = load ptr, ptr %old_pointer, align 8
  store ptr %7, ptr %old_pointer3, align 8
  call void @llvm.dbg.declare(metadata ptr %desc, metadata !1003, metadata !DIExpression()), !dbg !1005
  %8 = load ptr, ptr %old_pointer3, align 8, !dbg !1008
  %ptradd_any = getelementptr i8, ptr %8, i64 -16, !dbg !1009
  store ptr %ptradd_any, ptr %desc, align 8, !dbg !1009
  %9 = load ptr, ptr %desc, align 8, !dbg !1010
  %checknull = icmp eq ptr %9, null, !dbg !1010
  %10 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1010
  br i1 %10, label %panic4, label %checkok8, !dbg !1010

checkok8:                                         ; preds = %if.then
  %ptradd = getelementptr inbounds i8, ptr %9, i64 8, !dbg !1010
  %11 = load ptr, ptr %self, align 8, !dbg !1010
  %12 = load ptr, ptr %ptradd, align 8, !dbg !1010
  call void @std.core.mem.allocator.SimpleHeapAllocator._free(ptr %11, ptr %12), !dbg !1011
  br label %noerr_block, !dbg !1011

noerr_block:                                      ; preds = %checkok8
  br label %if.exit, !dbg !1006

if.else:                                          ; preds = %checkok
  %13 = load ptr, ptr %self, align 8, !dbg !1012
  %14 = load ptr, ptr %old_pointer, align 8, !dbg !1012
  call void @std.core.mem.allocator.SimpleHeapAllocator._free(ptr %13, ptr %14), !dbg !1014
  br label %if.exit, !dbg !1014

if.exit:                                          ; preds = %if.else, %noerr_block
  ret void, !dbg !1014

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg2, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 40), !dbg !997
  unreachable, !dbg !997

panic4:                                           ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.47, i64 45 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg7, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 337), !dbg !1010
  unreachable, !dbg !1010
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.core.mem.allocator.SimpleHeapAllocator._realloc(ptr %0, ptr %1, ptr %2, i64 %3) #0 !dbg !1015 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_pointer = alloca ptr, align 8
  %bytes = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %block = alloca ptr, align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %new = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %max_to_copy = alloca i64, align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %x = alloca i64, align 8
  %y = alloca i64, align 8
  %dst = alloca ptr, align 8
  %src = alloca ptr, align 8
  %len = alloca i64, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %reterr30 = alloca i64, align 8
  %4 = icmp eq ptr %1, null, !dbg !1018
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !1018
  br i1 %5, label %panic, label %checkok, !dbg !1018

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1019, metadata !DIExpression()), !dbg !1020
  store ptr %2, ptr %old_pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %old_pointer, metadata !1021, metadata !DIExpression()), !dbg !1022
  store i64 %3, ptr %bytes, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes, metadata !1023, metadata !DIExpression()), !dbg !1024
  %6 = load ptr, ptr %old_pointer, align 8, !dbg !1025
  %ptrbool = icmp ne ptr %6, null, !dbg !1025
  br i1 %ptrbool, label %and.rhs, label %and.phi, !dbg !1025

and.rhs:                                          ; preds = %checkok
  %7 = load i64, ptr %bytes, align 8, !dbg !1027
  %lt = icmp ult i64 0, %7, !dbg !1027
  br label %and.phi, !dbg !1027

and.phi:                                          ; preds = %and.rhs, %checkok
  %val = phi i1 [ false, %checkok ], [ %lt, %and.rhs ], !dbg !1027
  br i1 %val, label %assert_ok, label %assert_fail, !dbg !1027

assert_fail:                                      ; preds = %and.phi
  store %"char[]" { ptr @.panic_msg.49, i64 45 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.48, i64 8 }, ptr %indirectarg5, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 53), !dbg !1025
  unreachable, !dbg !1025

assert_ok:                                        ; preds = %and.phi
  call void @llvm.dbg.declare(metadata ptr %block, metadata !1028, metadata !DIExpression()), !dbg !1029
  %9 = load ptr, ptr %old_pointer, align 8, !dbg !1030
  %ptradd_any = getelementptr i8, ptr %9, i64 -16, !dbg !1031
  store ptr %ptradd_any, ptr %block, align 8, !dbg !1031
  %10 = load ptr, ptr %block, align 8, !dbg !1032
  %checknull = icmp eq ptr %10, null, !dbg !1032
  %11 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1032
  br i1 %11, label %panic6, label %checkok10, !dbg !1032

checkok10:                                        ; preds = %assert_ok
  %ptradd = getelementptr inbounds i8, ptr %10, i64 8, !dbg !1032
  %12 = load i64, ptr %ptradd, align 8, !dbg !1032
  %13 = load i64, ptr %bytes, align 8, !dbg !1033
  %ge = icmp uge i64 %12, %13, !dbg !1032
  br i1 %ge, label %if.then, label %if.exit, !dbg !1032

if.then:                                          ; preds = %checkok10
  %14 = load ptr, ptr %old_pointer, align 8, !dbg !1034
  store ptr %14, ptr %0, align 8, !dbg !1034
  ret i64 0, !dbg !1034

if.exit:                                          ; preds = %checkok10
  call void @llvm.dbg.declare(metadata ptr %new, metadata !1035, metadata !DIExpression()), !dbg !1036
  %15 = load ptr, ptr %self, align 8
  %16 = load i64, ptr %bytes, align 8
  %17 = call i64 @std.core.mem.allocator.SimpleHeapAllocator._alloc(ptr %retparam, ptr %15, i64 %16), !dbg !1037
  %not_err = icmp eq i64 %17, 0, !dbg !1037
  %18 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1037
  br i1 %18, label %after_check, label %assign_optional, !dbg !1037

assign_optional:                                  ; preds = %if.exit
  store i64 %17, ptr %error_var, align 8, !dbg !1037
  br label %guard_block, !dbg !1037

after_check:                                      ; preds = %if.exit
  br label %noerr_block, !dbg !1037

guard_block:                                      ; preds = %assign_optional
  %19 = load i64, ptr %error_var, align 8, !dbg !1037
  ret i64 %19, !dbg !1037

noerr_block:                                      ; preds = %after_check
  %20 = load ptr, ptr %retparam, align 8, !dbg !1037
  store ptr %20, ptr %new, align 8, !dbg !1037
  call void @llvm.dbg.declare(metadata ptr %max_to_copy, metadata !1038, metadata !DIExpression()), !dbg !1039
  %21 = load ptr, ptr %block, align 8, !dbg !1040
  %checknull11 = icmp eq ptr %21, null, !dbg !1040
  %22 = call i1 @llvm.expect.i1(i1 %checknull11, i1 false), !dbg !1040
  br i1 %22, label %panic12, label %checkok16, !dbg !1040

checkok16:                                        ; preds = %noerr_block
  %ptradd17 = getelementptr inbounds i8, ptr %21, i64 8, !dbg !1040
  %23 = load i64, ptr %ptradd17, align 8
  store i64 %23, ptr %x, align 8
  %24 = load i64, ptr %bytes, align 8
  store i64 %24, ptr %y, align 8
  %25 = load i64, ptr %x, align 8, !dbg !1041
  %26 = load i64, ptr %y, align 8, !dbg !1044
  %27 = call i64 @llvm.umin.i64(i64 %25, i64 %26), !dbg !1044
  store i64 %27, ptr %max_to_copy, align 8, !dbg !1044
  %28 = load ptr, ptr %new, align 8
  store ptr %28, ptr %dst, align 8
  %29 = load ptr, ptr %old_pointer, align 8
  store ptr %29, ptr %src, align 8
  %30 = load i64, ptr %max_to_copy, align 8
  store i64 %30, ptr %len, align 8
  %31 = load i64, ptr %len, align 8, !dbg !1045
  %eq = icmp eq i64 0, %31, !dbg !1045
  br i1 %eq, label %or.phi, label %or.rhs, !dbg !1045

or.rhs:                                           ; preds = %checkok16
  %32 = load ptr, ptr %dst, align 8, !dbg !1049
  %33 = load i64, ptr %len, align 8, !dbg !1050
  %ptradd_any18 = getelementptr i8, ptr %32, i64 %33, !dbg !1050
  %34 = load ptr, ptr %src, align 8, !dbg !1051
  %le = icmp ule ptr %ptradd_any18, %34, !dbg !1049
  br label %or.phi, !dbg !1049

or.phi:                                           ; preds = %or.rhs, %checkok16
  %val19 = phi i1 [ true, %checkok16 ], [ %le, %or.rhs ], !dbg !1049
  br i1 %val19, label %or.phi23, label %or.rhs20, !dbg !1049

or.rhs20:                                         ; preds = %or.phi
  %35 = load ptr, ptr %src, align 8, !dbg !1052
  %36 = load i64, ptr %len, align 8, !dbg !1053
  %ptradd_any21 = getelementptr i8, ptr %35, i64 %36, !dbg !1053
  %37 = load ptr, ptr %dst, align 8, !dbg !1054
  %le22 = icmp ule ptr %ptradd_any21, %37, !dbg !1052
  br label %or.phi23, !dbg !1052

or.phi23:                                         ; preds = %or.rhs20, %or.phi
  %val24 = phi i1 [ true, %or.phi ], [ %le22, %or.rhs20 ], !dbg !1052
  br i1 %val24, label %assert_ok29, label %assert_fail25, !dbg !1052

assert_fail25:                                    ; preds = %or.phi23
  store %"char[]" { ptr @.panic_msg.18, i64 95 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.19, i64 6 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.48, i64 8 }, ptr %indirectarg28, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 309), !dbg !1045
  unreachable, !dbg !1045

assert_ok29:                                      ; preds = %or.phi23
  %39 = load ptr, ptr %dst, align 8, !dbg !1055
  %40 = load ptr, ptr %src, align 8, !dbg !1056
  %41 = load i64, ptr %len, align 8, !dbg !1057
  call void @llvm.memcpy.p0.p0.i64(ptr %39, ptr %40, i64 %41, i1 false), !dbg !1058
  %42 = load ptr, ptr %self, align 8, !dbg !1059
  %43 = load ptr, ptr %old_pointer, align 8, !dbg !1059
  call void @std.core.mem.allocator.SimpleHeapAllocator._free(ptr %42, ptr %43), !dbg !1060
  %44 = load ptr, ptr %new, align 8, !dbg !1061
  store ptr %44, ptr %0, align 8, !dbg !1061
  ret i64 0, !dbg !1061

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.48, i64 8 }, ptr %indirectarg2, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 55), !dbg !1020
  unreachable, !dbg !1020

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.50, i64 46 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.48, i64 8 }, ptr %indirectarg9, align 8
  %46 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %46(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 59), !dbg !1032
  unreachable, !dbg !1032

panic12:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.50, i64 46 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.48, i64 8 }, ptr %indirectarg15, align 8
  %47 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %47(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 61), !dbg !1040
  unreachable, !dbg !1040
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.core.mem.allocator.SimpleHeapAllocator._calloc(ptr %0, ptr %1, i64 %2) #0 !dbg !1062 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %bytes = alloca i64, align 8
  %data = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %dst = alloca ptr, align 8
  %len = alloca i64, align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !1065
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1065
  br i1 %4, label %panic, label %checkok, !dbg !1065

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1066, metadata !DIExpression()), !dbg !1067
  store i64 %2, ptr %bytes, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes, metadata !1068, metadata !DIExpression()), !dbg !1069
  call void @llvm.dbg.declare(metadata ptr %data, metadata !1070, metadata !DIExpression()), !dbg !1071
  %5 = load ptr, ptr %self, align 8
  %6 = load i64, ptr %bytes, align 8
  %7 = call i64 @std.core.mem.allocator.SimpleHeapAllocator._alloc(ptr %retparam, ptr %5, i64 %6), !dbg !1072
  %not_err = icmp eq i64 %7, 0, !dbg !1072
  %8 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1072
  br i1 %8, label %after_check, label %assign_optional, !dbg !1072

assign_optional:                                  ; preds = %checkok
  store i64 %7, ptr %error_var, align 8, !dbg !1072
  br label %guard_block, !dbg !1072

after_check:                                      ; preds = %checkok
  br label %noerr_block, !dbg !1072

guard_block:                                      ; preds = %assign_optional
  %9 = load i64, ptr %error_var, align 8, !dbg !1072
  ret i64 %9, !dbg !1072

noerr_block:                                      ; preds = %after_check
  %10 = load ptr, ptr %retparam, align 8, !dbg !1072
  store ptr %10, ptr %data, align 8, !dbg !1072
  %11 = load ptr, ptr %data, align 8
  store ptr %11, ptr %dst, align 8
  %12 = load i64, ptr %bytes, align 8
  store i64 %12, ptr %len, align 8
  %13 = load ptr, ptr %dst, align 8, !dbg !1073
  %14 = load i64, ptr %len, align 8, !dbg !1076
  call void @llvm.memset.p0.i64(ptr align 16 %13, i8 0, i64 %14, i1 false), !dbg !1077
  %15 = load ptr, ptr %data, align 8, !dbg !1078
  store ptr %15, ptr %0, align 8, !dbg !1078
  ret i64 0, !dbg !1078

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.51, i64 7 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 67), !dbg !1067
  unreachable, !dbg !1067
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.core.mem.allocator.SimpleHeapAllocator._alloc(ptr %0, ptr %1, i64 %2) #0 !dbg !1079 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %bytes = alloca i64, align 8
  %aligned_bytes = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %current = alloca ptr, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %previous = alloca ptr, align 8
  %switch = alloca i8, align 1
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %unallocated = alloca ptr, align 8
  %indirectarg78 = alloca %"char[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %indirectarg80 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %indirectarg92 = alloca %"char[]", align 8
  %indirectarg93 = alloca %"char[]", align 8
  %indirectarg94 = alloca %"char[]", align 8
  %indirectarg98 = alloca %"char[]", align 8
  %indirectarg99 = alloca %"char[]", align 8
  %indirectarg100 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg105 = alloca %"char[]", align 8
  %indirectarg106 = alloca %"char[]", align 8
  %indirectarg113 = alloca %"char[]", align 8
  %indirectarg114 = alloca %"char[]", align 8
  %indirectarg115 = alloca %"char[]", align 8
  %indirectarg121 = alloca %"char[]", align 8
  %indirectarg122 = alloca %"char[]", align 8
  %indirectarg123 = alloca %"char[]", align 8
  %indirectarg128 = alloca %"char[]", align 8
  %indirectarg129 = alloca %"char[]", align 8
  %indirectarg130 = alloca %"char[]", align 8
  %indirectarg135 = alloca %"char[]", align 8
  %indirectarg136 = alloca %"char[]", align 8
  %indirectarg137 = alloca %"char[]", align 8
  %reterr139 = alloca i64, align 8
  %indirectarg144 = alloca %"char[]", align 8
  %indirectarg145 = alloca %"char[]", align 8
  %indirectarg146 = alloca %"char[]", align 8
  %error_var148 = alloca i64, align 8
  %reterr154 = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %3 = icmp eq ptr %1, null, !dbg !1080
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1080
  br i1 %4, label %panic, label %checkok, !dbg !1080

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1081, metadata !DIExpression()), !dbg !1082
  store i64 %2, ptr %bytes, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata ptr %aligned_bytes, metadata !1085, metadata !DIExpression()), !dbg !1086
  %5 = load i64, ptr %bytes, align 8, !dbg !1087
  %6 = call i64 @std.core.mem.aligned_offset(i64 %5, i64 16), !dbg !1088
  store i64 %6, ptr %aligned_bytes, align 8, !dbg !1088
  %7 = load ptr, ptr %self, align 8, !dbg !1089
  %checknull = icmp eq ptr %7, null, !dbg !1089
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1089
  br i1 %8, label %panic3, label %checkok7, !dbg !1089

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %7, i64 8, !dbg !1089
  %9 = load ptr, ptr %ptradd, align 8, !dbg !1089
  %not = icmp eq ptr %9, null, !dbg !1089
  br i1 %not, label %if.then, label %if.exit, !dbg !1089

if.then:                                          ; preds = %checkok7
  %10 = load ptr, ptr %self, align 8, !dbg !1090
  %11 = load i64, ptr %aligned_bytes, align 8, !dbg !1090
  %12 = call i64 @std.core.mem.allocator.SimpleHeapAllocator.add_block(ptr %10, i64 %11), !dbg !1092
  %not_err = icmp eq i64 %12, 0, !dbg !1092
  %13 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1092
  br i1 %13, label %after_check, label %assign_optional, !dbg !1092

assign_optional:                                  ; preds = %if.then
  store i64 %12, ptr %error_var, align 8, !dbg !1092
  br label %guard_block, !dbg !1092

after_check:                                      ; preds = %if.then
  br label %noerr_block, !dbg !1092

guard_block:                                      ; preds = %assign_optional
  %14 = load i64, ptr %error_var, align 8, !dbg !1092
  ret i64 %14, !dbg !1092

noerr_block:                                      ; preds = %after_check
  br label %if.exit, !dbg !1092

if.exit:                                          ; preds = %noerr_block, %checkok7
  call void @llvm.dbg.declare(metadata ptr %current, metadata !1093, metadata !DIExpression()), !dbg !1094
  %15 = load ptr, ptr %self, align 8, !dbg !1095
  %checknull8 = icmp eq ptr %15, null, !dbg !1095
  %16 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !1095
  br i1 %16, label %panic9, label %checkok13, !dbg !1095

checkok13:                                        ; preds = %if.exit
  %ptradd14 = getelementptr inbounds i8, ptr %15, i64 8, !dbg !1095
  %17 = load ptr, ptr %ptradd14, align 8, !dbg !1095
  store ptr %17, ptr %current, align 8, !dbg !1095
  call void @llvm.dbg.declare(metadata ptr %previous, metadata !1096, metadata !DIExpression()), !dbg !1097
  %18 = load ptr, ptr %current, align 8, !dbg !1098
  store ptr %18, ptr %previous, align 8, !dbg !1098
  br label %loop.cond, !dbg !1099

loop.cond:                                        ; preds = %switch.exit, %checkok13
  %19 = load ptr, ptr %current, align 8, !dbg !1100
  %ptrbool = icmp ne ptr %19, null, !dbg !1100
  br i1 %ptrbool, label %loop.body, label %loop.exit, !dbg !1100

loop.body:                                        ; preds = %loop.cond
  store i8 1, ptr %switch, align 1
  br label %switch.entry

switch.entry:                                     ; preds = %loop.body
  %20 = load i8, ptr %switch, align 1
  %21 = trunc i8 %20 to i1
  %22 = load ptr, ptr %current, align 8, !dbg !1102
  %checknull15 = icmp eq ptr %22, null, !dbg !1102
  %23 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !1102
  br i1 %23, label %panic16, label %checkok20, !dbg !1102

checkok20:                                        ; preds = %switch.entry
  %ptradd21 = getelementptr inbounds i8, ptr %22, i64 8, !dbg !1102
  %24 = load i64, ptr %ptradd21, align 8, !dbg !1102
  %25 = load i64, ptr %aligned_bytes, align 8, !dbg !1105
  %ge = icmp uge i64 %24, %25, !dbg !1102
  br i1 %ge, label %and.rhs, label %and.phi, !dbg !1102

and.rhs:                                          ; preds = %checkok20
  %26 = load ptr, ptr %current, align 8, !dbg !1106
  %checknull22 = icmp eq ptr %26, null, !dbg !1106
  %27 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !1106
  br i1 %27, label %panic23, label %checkok27, !dbg !1106

checkok27:                                        ; preds = %and.rhs
  %ptradd28 = getelementptr inbounds i8, ptr %26, i64 8, !dbg !1106
  %28 = load i64, ptr %ptradd28, align 8, !dbg !1106
  %29 = load i64, ptr %aligned_bytes, align 8, !dbg !1107
  %add = add i64 %29, 16, !dbg !1107
  %add29 = add i64 %add, 64, !dbg !1107
  %ge30 = icmp sge i64 %add29, %28, !dbg !1106
  %check = icmp sge i64 %28, 0, !dbg !1106
  %siui-ge = and i1 %check, %ge30, !dbg !1106
  br label %and.phi, !dbg !1106

and.phi:                                          ; preds = %checkok27, %checkok20
  %val = phi i1 [ false, %checkok20 ], [ %siui-ge, %checkok27 ], !dbg !1106
  %eq = icmp eq i1 %val, %21, !dbg !1106
  br i1 %eq, label %switch.case, label %next_if, !dbg !1106

switch.case:                                      ; preds = %and.phi
  %30 = load ptr, ptr %current, align 8, !dbg !1108
  %31 = load ptr, ptr %previous, align 8, !dbg !1110
  %eq31 = icmp eq ptr %30, %31, !dbg !1108
  br i1 %eq31, label %if.then32, label %if.else, !dbg !1108

if.then32:                                        ; preds = %switch.case
  %32 = load ptr, ptr %self, align 8, !dbg !1111
  %checknull33 = icmp eq ptr %32, null, !dbg !1111
  %33 = call i1 @llvm.expect.i1(i1 %checknull33, i1 false), !dbg !1111
  br i1 %33, label %panic34, label %checkok38, !dbg !1111

checkok38:                                        ; preds = %if.then32
  %ptradd39 = getelementptr inbounds i8, ptr %32, i64 8, !dbg !1111
  %34 = load ptr, ptr %current, align 8, !dbg !1113
  %checknull40 = icmp eq ptr %34, null, !dbg !1113
  %35 = call i1 @llvm.expect.i1(i1 %checknull40, i1 false), !dbg !1113
  br i1 %35, label %panic41, label %checkok45, !dbg !1113

checkok45:                                        ; preds = %checkok38
  %36 = load ptr, ptr %34, align 8, !dbg !1113
  store ptr %36, ptr %ptradd39, align 8, !dbg !1113
  br label %if.exit58, !dbg !1113

if.else:                                          ; preds = %switch.case
  %37 = load ptr, ptr %previous, align 8, !dbg !1114
  %checknull46 = icmp eq ptr %37, null, !dbg !1114
  %38 = call i1 @llvm.expect.i1(i1 %checknull46, i1 false), !dbg !1114
  br i1 %38, label %panic47, label %checkok51, !dbg !1114

checkok51:                                        ; preds = %if.else
  %39 = load ptr, ptr %current, align 8, !dbg !1116
  %checknull52 = icmp eq ptr %39, null, !dbg !1116
  %40 = call i1 @llvm.expect.i1(i1 %checknull52, i1 false), !dbg !1116
  br i1 %40, label %panic53, label %checkok57, !dbg !1116

checkok57:                                        ; preds = %checkok51
  %41 = load ptr, ptr %39, align 8, !dbg !1116
  store ptr %41, ptr %37, align 8, !dbg !1116
  br label %if.exit58, !dbg !1116

if.exit58:                                        ; preds = %checkok57, %checkok45
  %42 = load ptr, ptr %current, align 8, !dbg !1117
  %checknull59 = icmp eq ptr %42, null, !dbg !1117
  %43 = call i1 @llvm.expect.i1(i1 %checknull59, i1 false), !dbg !1117
  br i1 %43, label %panic60, label %checkok64, !dbg !1117

checkok64:                                        ; preds = %if.exit58
  store ptr null, ptr %42, align 8, !dbg !1118
  %44 = load ptr, ptr %current, align 8, !dbg !1119
  %ptradd_any = getelementptr i8, ptr %44, i64 16, !dbg !1120
  store ptr %ptradd_any, ptr %0, align 8, !dbg !1120
  ret i64 0, !dbg !1120

next_if:                                          ; preds = %and.phi
  %45 = load ptr, ptr %current, align 8, !dbg !1121
  %checknull65 = icmp eq ptr %45, null, !dbg !1121
  %46 = call i1 @llvm.expect.i1(i1 %checknull65, i1 false), !dbg !1121
  br i1 %46, label %panic66, label %checkok70, !dbg !1121

checkok70:                                        ; preds = %next_if
  %ptradd71 = getelementptr inbounds i8, ptr %45, i64 8, !dbg !1121
  %47 = load i64, ptr %ptradd71, align 8, !dbg !1121
  %48 = load i64, ptr %aligned_bytes, align 8, !dbg !1122
  %gt = icmp ugt i64 %47, %48, !dbg !1121
  %eq72 = icmp eq i1 %gt, %21, !dbg !1121
  br i1 %eq72, label %switch.case73, label %next_if141, !dbg !1121

switch.case73:                                    ; preds = %checkok70
  call void @llvm.dbg.declare(metadata ptr %unallocated, metadata !1123, metadata !DIExpression()), !dbg !1125
  %49 = load ptr, ptr %current, align 8, !dbg !1126
  %50 = load i64, ptr %aligned_bytes, align 8, !dbg !1127
  %add74 = add i64 %50, 16, !dbg !1126
  %ptradd_any75 = getelementptr i8, ptr %49, i64 %add74, !dbg !1126
  store ptr %ptradd_any75, ptr %unallocated, align 8, !dbg !1126
  %51 = load ptr, ptr %unallocated, align 8, !dbg !1128
  %checknull76 = icmp eq ptr %51, null, !dbg !1128
  %52 = call i1 @llvm.expect.i1(i1 %checknull76, i1 false), !dbg !1128
  br i1 %52, label %panic77, label %checkok81, !dbg !1128

checkok81:                                        ; preds = %switch.case73
  %ptradd82 = getelementptr inbounds i8, ptr %51, i64 8, !dbg !1128
  %53 = load ptr, ptr %current, align 8, !dbg !1129
  %checknull83 = icmp eq ptr %53, null, !dbg !1129
  %54 = call i1 @llvm.expect.i1(i1 %checknull83, i1 false), !dbg !1129
  br i1 %54, label %panic84, label %checkok88, !dbg !1129

checkok88:                                        ; preds = %checkok81
  %ptradd89 = getelementptr inbounds i8, ptr %53, i64 8, !dbg !1129
  %55 = load i64, ptr %ptradd89, align 8, !dbg !1129
  %56 = load i64, ptr %aligned_bytes, align 8, !dbg !1130
  %sub = sub i64 %55, %56, !dbg !1129
  store i64 %sub, ptr %ptradd82, align 8, !dbg !1129
  %57 = load ptr, ptr %unallocated, align 8, !dbg !1131
  %checknull90 = icmp eq ptr %57, null, !dbg !1131
  %58 = call i1 @llvm.expect.i1(i1 %checknull90, i1 false), !dbg !1131
  br i1 %58, label %panic91, label %checkok95, !dbg !1131

checkok95:                                        ; preds = %checkok88
  %59 = load ptr, ptr %current, align 8, !dbg !1132
  %checknull96 = icmp eq ptr %59, null, !dbg !1132
  %60 = call i1 @llvm.expect.i1(i1 %checknull96, i1 false), !dbg !1132
  br i1 %60, label %panic97, label %checkok101, !dbg !1132

checkok101:                                       ; preds = %checkok95
  %61 = load ptr, ptr %59, align 8, !dbg !1132
  store ptr %61, ptr %57, align 8, !dbg !1132
  %62 = load ptr, ptr %current, align 8, !dbg !1133
  %63 = load ptr, ptr %self, align 8, !dbg !1134
  %checknull102 = icmp eq ptr %63, null, !dbg !1134
  %64 = call i1 @llvm.expect.i1(i1 %checknull102, i1 false), !dbg !1134
  br i1 %64, label %panic103, label %checkok107, !dbg !1134

checkok107:                                       ; preds = %checkok101
  %ptradd108 = getelementptr inbounds i8, ptr %63, i64 8, !dbg !1134
  %65 = load ptr, ptr %ptradd108, align 8, !dbg !1134
  %eq109 = icmp eq ptr %62, %65, !dbg !1133
  br i1 %eq109, label %if.then110, label %if.else118, !dbg !1133

if.then110:                                       ; preds = %checkok107
  %66 = load ptr, ptr %self, align 8, !dbg !1135
  %checknull111 = icmp eq ptr %66, null, !dbg !1135
  %67 = call i1 @llvm.expect.i1(i1 %checknull111, i1 false), !dbg !1135
  br i1 %67, label %panic112, label %checkok116, !dbg !1135

checkok116:                                       ; preds = %if.then110
  %ptradd117 = getelementptr inbounds i8, ptr %66, i64 8, !dbg !1135
  %68 = load ptr, ptr %unallocated, align 8, !dbg !1137
  store ptr %68, ptr %ptradd117, align 8, !dbg !1137
  br label %if.exit125, !dbg !1137

if.else118:                                       ; preds = %checkok107
  %69 = load ptr, ptr %previous, align 8, !dbg !1138
  %checknull119 = icmp eq ptr %69, null, !dbg !1138
  %70 = call i1 @llvm.expect.i1(i1 %checknull119, i1 false), !dbg !1138
  br i1 %70, label %panic120, label %checkok124, !dbg !1138

checkok124:                                       ; preds = %if.else118
  %71 = load ptr, ptr %unallocated, align 8, !dbg !1140
  store ptr %71, ptr %69, align 8, !dbg !1140
  br label %if.exit125, !dbg !1140

if.exit125:                                       ; preds = %checkok124, %checkok116
  %72 = load ptr, ptr %current, align 8, !dbg !1141
  %checknull126 = icmp eq ptr %72, null, !dbg !1141
  %73 = call i1 @llvm.expect.i1(i1 %checknull126, i1 false), !dbg !1141
  br i1 %73, label %panic127, label %checkok131, !dbg !1141

checkok131:                                       ; preds = %if.exit125
  %ptradd132 = getelementptr inbounds i8, ptr %72, i64 8, !dbg !1141
  %74 = load i64, ptr %aligned_bytes, align 8, !dbg !1142
  store i64 %74, ptr %ptradd132, align 8, !dbg !1142
  %75 = load ptr, ptr %current, align 8, !dbg !1143
  %checknull133 = icmp eq ptr %75, null, !dbg !1143
  %76 = call i1 @llvm.expect.i1(i1 %checknull133, i1 false), !dbg !1143
  br i1 %76, label %panic134, label %checkok138, !dbg !1143

checkok138:                                       ; preds = %checkok131
  store ptr null, ptr %75, align 8, !dbg !1144
  %77 = load ptr, ptr %current, align 8, !dbg !1145
  %ptradd_any140 = getelementptr i8, ptr %77, i64 16, !dbg !1146
  store ptr %ptradd_any140, ptr %0, align 8, !dbg !1146
  ret i64 0, !dbg !1146

next_if141:                                       ; preds = %checkok70
  br label %switch.default, !dbg !1146

switch.default:                                   ; preds = %next_if141
  %78 = load ptr, ptr %current, align 8, !dbg !1147
  store ptr %78, ptr %previous, align 8, !dbg !1147
  %79 = load ptr, ptr %current, align 8, !dbg !1149
  %checknull142 = icmp eq ptr %79, null, !dbg !1149
  %80 = call i1 @llvm.expect.i1(i1 %checknull142, i1 false), !dbg !1149
  br i1 %80, label %panic143, label %checkok147, !dbg !1149

checkok147:                                       ; preds = %switch.default
  %81 = load ptr, ptr %79, align 8, !dbg !1149
  store ptr %81, ptr %current, align 8, !dbg !1149
  br label %switch.exit, !dbg !1149

switch.exit:                                      ; preds = %checkok147
  br label %loop.cond, !dbg !1149

loop.exit:                                        ; preds = %loop.cond
  %82 = load ptr, ptr %self, align 8, !dbg !1150
  %83 = load i64, ptr %aligned_bytes, align 8, !dbg !1150
  %84 = call i64 @std.core.mem.allocator.SimpleHeapAllocator.add_block(ptr %82, i64 %83), !dbg !1151
  %not_err149 = icmp eq i64 %84, 0, !dbg !1151
  %85 = call i1 @llvm.expect.i1(i1 %not_err149, i1 true), !dbg !1151
  br i1 %85, label %after_check151, label %assign_optional150, !dbg !1151

assign_optional150:                               ; preds = %loop.exit
  store i64 %84, ptr %error_var148, align 8, !dbg !1151
  br label %guard_block152, !dbg !1151

after_check151:                                   ; preds = %loop.exit
  br label %noerr_block153, !dbg !1151

guard_block152:                                   ; preds = %assign_optional150
  %86 = load i64, ptr %error_var148, align 8, !dbg !1151
  ret i64 %86, !dbg !1151

noerr_block153:                                   ; preds = %after_check151
  %87 = load ptr, ptr %self, align 8
  %88 = load i64, ptr %aligned_bytes, align 8
  %89 = call i64 @std.core.mem.allocator.SimpleHeapAllocator._alloc(ptr %retparam, ptr %87, i64 %88), !dbg !1152
  %not_err155 = icmp eq i64 %89, 0, !dbg !1152
  %90 = call i1 @llvm.expect.i1(i1 %not_err155, i1 true), !dbg !1152
  br i1 %90, label %after_check157, label %assign_optional156, !dbg !1152

assign_optional156:                               ; preds = %noerr_block153
  store i64 %89, ptr %reterr154, align 8, !dbg !1152
  br label %err_retblock, !dbg !1152

after_check157:                                   ; preds = %noerr_block153
  %91 = load ptr, ptr %retparam, align 8, !dbg !1152
  store ptr %91, ptr %0, align 8, !dbg !1152
  ret i64 0, !dbg !1152

err_retblock:                                     ; preds = %assign_optional156
  %92 = load i64, ptr %reterr154, align 8, !dbg !1152
  ret i64 %92, !dbg !1152

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg2, align 8
  %93 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %93(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 74), !dbg !1082
  unreachable, !dbg !1082

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg6, align 8
  %94 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %94(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 77), !dbg !1089
  unreachable, !dbg !1089

panic9:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg12, align 8
  %95 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %95(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 82), !dbg !1095
  unreachable, !dbg !1095

panic16:                                          ; preds = %switch.entry
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg19, align 8
  %96 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %96(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 88), !dbg !1102
  unreachable, !dbg !1102

panic23:                                          ; preds = %and.rhs
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg26, align 8
  %97 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %97(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 88), !dbg !1106
  unreachable, !dbg !1106

panic34:                                          ; preds = %if.then32
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg37, align 8
  %98 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %98(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 91), !dbg !1111
  unreachable, !dbg !1111

panic41:                                          ; preds = %checkok38
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg44, align 8
  %99 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %99(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 91), !dbg !1113
  unreachable, !dbg !1113

panic47:                                          ; preds = %if.else
  store %"char[]" { ptr @.panic_msg.54, i64 49 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg50, align 8
  %100 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %100(ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, i32 95), !dbg !1114
  unreachable, !dbg !1114

panic53:                                          ; preds = %checkok51
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg56, align 8
  %101 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %101(ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, i32 95), !dbg !1116
  unreachable, !dbg !1116

panic60:                                          ; preds = %if.exit58
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg63, align 8
  %102 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %102(ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, i32 97), !dbg !1117
  unreachable, !dbg !1117

panic66:                                          ; preds = %next_if
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg67, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg69, align 8
  %103 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %103(ptr align 8 %indirectarg67, ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, i32 99), !dbg !1121
  unreachable, !dbg !1121

panic77:                                          ; preds = %switch.case73
  store %"char[]" { ptr @.panic_msg.55, i64 52 }, ptr %indirectarg78, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg79, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg80, align 8
  %104 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %104(ptr align 8 %indirectarg78, ptr align 8 %indirectarg79, ptr align 8 %indirectarg80, i32 101), !dbg !1128
  unreachable, !dbg !1128

panic84:                                          ; preds = %checkok81
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg86, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg87, align 8
  %105 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %105(ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, ptr align 8 %indirectarg87, i32 101), !dbg !1129
  unreachable, !dbg !1129

panic91:                                          ; preds = %checkok88
  store %"char[]" { ptr @.panic_msg.55, i64 52 }, ptr %indirectarg92, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg93, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg94, align 8
  %106 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %106(ptr align 8 %indirectarg92, ptr align 8 %indirectarg93, ptr align 8 %indirectarg94, i32 102), !dbg !1131
  unreachable, !dbg !1131

panic97:                                          ; preds = %checkok95
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg98, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg99, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg100, align 8
  %107 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %107(ptr align 8 %indirectarg98, ptr align 8 %indirectarg99, ptr align 8 %indirectarg100, i32 102), !dbg !1132
  unreachable, !dbg !1132

panic103:                                         ; preds = %checkok101
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg104, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg105, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg106, align 8
  %108 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %108(ptr align 8 %indirectarg104, ptr align 8 %indirectarg105, ptr align 8 %indirectarg106, i32 103), !dbg !1134
  unreachable, !dbg !1134

panic112:                                         ; preds = %if.then110
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg113, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg114, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg115, align 8
  %109 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %109(ptr align 8 %indirectarg113, ptr align 8 %indirectarg114, ptr align 8 %indirectarg115, i32 105), !dbg !1135
  unreachable, !dbg !1135

panic120:                                         ; preds = %if.else118
  store %"char[]" { ptr @.panic_msg.54, i64 49 }, ptr %indirectarg121, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg122, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg123, align 8
  %110 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %110(ptr align 8 %indirectarg121, ptr align 8 %indirectarg122, ptr align 8 %indirectarg123, i32 109), !dbg !1138
  unreachable, !dbg !1138

panic127:                                         ; preds = %if.exit125
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg128, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg129, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg130, align 8
  %111 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %111(ptr align 8 %indirectarg128, ptr align 8 %indirectarg129, ptr align 8 %indirectarg130, i32 111), !dbg !1141
  unreachable, !dbg !1141

panic134:                                         ; preds = %checkok131
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg135, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg136, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg137, align 8
  %112 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %112(ptr align 8 %indirectarg135, ptr align 8 %indirectarg136, ptr align 8 %indirectarg137, i32 112), !dbg !1143
  unreachable, !dbg !1143

panic143:                                         ; preds = %switch.default
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg144, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg145, align 8
  store %"char[]" { ptr @.func.52, i64 6 }, ptr %indirectarg146, align 8
  %113 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %113(ptr align 8 %indirectarg144, ptr align 8 %indirectarg145, ptr align 8 %indirectarg146, i32 116), !dbg !1149
  unreachable, !dbg !1149
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.core.mem.allocator.SimpleHeapAllocator.add_block(ptr %0, i64 %1) #0 !dbg !1153 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %aligned_bytes = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %result = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %retparam = alloca %"char[]", align 8
  %new_block = alloca ptr, align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !1156
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1156
  br i1 %3, label %panic, label %checkok, !dbg !1156

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1157, metadata !DIExpression()), !dbg !1158
  store i64 %1, ptr %aligned_bytes, align 8
  call void @llvm.dbg.declare(metadata ptr %aligned_bytes, metadata !1159, metadata !DIExpression()), !dbg !1160
  %4 = load i64, ptr %aligned_bytes, align 8, !dbg !1161
  %5 = call i64 @std.core.mem.aligned_offset(i64 %4, i64 16), !dbg !1162
  %6 = load i64, ptr %aligned_bytes, align 8, !dbg !1163
  %eq = icmp eq i64 %5, %6, !dbg !1162
  br i1 %eq, label %assert_ok, label %assert_fail, !dbg !1162

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.33, i64 16 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg5, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 125), !dbg !1162
  unreachable, !dbg !1162

assert_ok:                                        ; preds = %checkok
  call void @llvm.dbg.declare(metadata ptr %result, metadata !1164, metadata !DIExpression()), !dbg !1165
  %8 = load ptr, ptr %self, align 8, !dbg !1166
  %checknull = icmp eq ptr %8, null, !dbg !1166
  %9 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1166
  br i1 %9, label %panic6, label %checkok10, !dbg !1166

checkok10:                                        ; preds = %assert_ok
  %10 = load ptr, ptr %8, align 8, !dbg !1166
  %11 = load i64, ptr %aligned_bytes, align 8, !dbg !1167
  %add = add i64 %11, 16, !dbg !1167
  %12 = call i64 %10(ptr %retparam, i64 %add), !dbg !1166
  %not_err = icmp eq i64 %12, 0, !dbg !1166
  %13 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1166
  br i1 %13, label %after_check, label %assign_optional, !dbg !1166

assign_optional:                                  ; preds = %checkok10
  store i64 %12, ptr %error_var, align 8, !dbg !1166
  br label %guard_block, !dbg !1166

after_check:                                      ; preds = %checkok10
  br label %noerr_block, !dbg !1166

guard_block:                                      ; preds = %assign_optional
  %14 = load i64, ptr %error_var, align 8, !dbg !1166
  ret i64 %14, !dbg !1166

noerr_block:                                      ; preds = %after_check
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %result, ptr align 8 %retparam, i32 16, i1 false), !dbg !1166
  call void @llvm.dbg.declare(metadata ptr %new_block, metadata !1168, metadata !DIExpression()), !dbg !1169
  %15 = load ptr, ptr %result, align 8, !dbg !1170
  store ptr %15, ptr %new_block, align 8, !dbg !1170
  %16 = load ptr, ptr %new_block, align 8, !dbg !1171
  %checknull11 = icmp eq ptr %16, null, !dbg !1171
  %17 = call i1 @llvm.expect.i1(i1 %checknull11, i1 false), !dbg !1171
  br i1 %17, label %panic12, label %checkok16, !dbg !1171

checkok16:                                        ; preds = %noerr_block
  %ptradd = getelementptr inbounds i8, ptr %16, i64 8, !dbg !1171
  %ptradd17 = getelementptr inbounds i8, ptr %result, i64 8, !dbg !1172
  %18 = load i64, ptr %ptradd17, align 8, !dbg !1172
  %sub = sub i64 %18, 16, !dbg !1172
  store i64 %sub, ptr %ptradd, align 8, !dbg !1172
  %19 = load ptr, ptr %new_block, align 8, !dbg !1173
  %checknull18 = icmp eq ptr %19, null, !dbg !1173
  %20 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !1173
  br i1 %20, label %panic19, label %checkok23, !dbg !1173

checkok23:                                        ; preds = %checkok16
  store ptr null, ptr %19, align 8, !dbg !1174
  %21 = load ptr, ptr %new_block, align 8, !dbg !1175
  %ptradd_any = getelementptr i8, ptr %21, i64 16, !dbg !1176
  %22 = load ptr, ptr %self, align 8, !dbg !1176
  call void @std.core.mem.allocator.SimpleHeapAllocator._free(ptr %22, ptr %ptradd_any), !dbg !1177
  ret i64 0, !dbg !1177

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg2, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 123), !dbg !1158
  unreachable, !dbg !1158

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg9, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 126), !dbg !1166
  unreachable, !dbg !1166

panic12:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.57, i64 50 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg15, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 128), !dbg !1171
  unreachable, !dbg !1171

panic19:                                          ; preds = %checkok16
  store %"char[]" { ptr @.panic_msg.57, i64 50 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.56, i64 9 }, ptr %indirectarg22, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 129), !dbg !1173
  unreachable, !dbg !1173
}

; Function Attrs: nounwind ssp uwtable
define internal void @std.core.mem.allocator.SimpleHeapAllocator._free(ptr %0, ptr %1) #0 !dbg !1178 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %block = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %current = alloca ptr, align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %prev = alloca ptr, align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %indirectarg80 = alloca %"char[]", align 8
  %indirectarg81 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg91 = alloca %"char[]", align 8
  %indirectarg98 = alloca %"char[]", align 8
  %indirectarg99 = alloca %"char[]", align 8
  %indirectarg100 = alloca %"char[]", align 8
  %indirectarg108 = alloca %"char[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %indirectarg110 = alloca %"char[]", align 8
  %indirectarg115 = alloca %"char[]", align 8
  %indirectarg116 = alloca %"char[]", align 8
  %indirectarg117 = alloca %"char[]", align 8
  %indirectarg124 = alloca %"char[]", align 8
  %indirectarg125 = alloca %"char[]", align 8
  %indirectarg126 = alloca %"char[]", align 8
  %indirectarg130 = alloca %"char[]", align 8
  %indirectarg131 = alloca %"char[]", align 8
  %indirectarg132 = alloca %"char[]", align 8
  %indirectarg137 = alloca %"char[]", align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg139 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !1181
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1181
  br i1 %3, label %panic, label %checkok, !dbg !1181

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1182, metadata !DIExpression()), !dbg !1183
  store ptr %1, ptr %ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr, metadata !1184, metadata !DIExpression()), !dbg !1185
  %4 = load ptr, ptr %ptr, align 8, !dbg !1186
  %not = icmp eq ptr %4, null, !dbg !1186
  br i1 %not, label %if.then, label %if.exit, !dbg !1186

if.then:                                          ; preds = %checkok
  ret void, !dbg !1187

if.exit:                                          ; preds = %checkok
  call void @llvm.dbg.declare(metadata ptr %block, metadata !1188, metadata !DIExpression()), !dbg !1189
  %5 = load ptr, ptr %ptr, align 8, !dbg !1190
  %ptradd_any = getelementptr i8, ptr %5, i64 -16, !dbg !1191
  store ptr %ptradd_any, ptr %block, align 8, !dbg !1191
  %6 = load ptr, ptr %self, align 8, !dbg !1192
  %checknull = icmp eq ptr %6, null, !dbg !1192
  %7 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1192
  br i1 %7, label %panic3, label %checkok7, !dbg !1192

checkok7:                                         ; preds = %if.exit
  %ptradd = getelementptr inbounds i8, ptr %6, i64 8, !dbg !1192
  %8 = load ptr, ptr %ptradd, align 8, !dbg !1192
  %not8 = icmp eq ptr %8, null, !dbg !1192
  br i1 %not8, label %if.then9, label %if.exit17, !dbg !1192

if.then9:                                         ; preds = %checkok7
  %9 = load ptr, ptr %self, align 8, !dbg !1193
  %checknull10 = icmp eq ptr %9, null, !dbg !1193
  %10 = call i1 @llvm.expect.i1(i1 %checknull10, i1 false), !dbg !1193
  br i1 %10, label %panic11, label %checkok15, !dbg !1193

checkok15:                                        ; preds = %if.then9
  %ptradd16 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !1193
  %11 = load ptr, ptr %block, align 8, !dbg !1195
  store ptr %11, ptr %ptradd16, align 8, !dbg !1195
  ret void, !dbg !1196

if.exit17:                                        ; preds = %checkok7
  call void @llvm.dbg.declare(metadata ptr %current, metadata !1197, metadata !DIExpression()), !dbg !1198
  %12 = load ptr, ptr %self, align 8, !dbg !1199
  %checknull18 = icmp eq ptr %12, null, !dbg !1199
  %13 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !1199
  br i1 %13, label %panic19, label %checkok23, !dbg !1199

checkok23:                                        ; preds = %if.exit17
  %ptradd24 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !1199
  %14 = load ptr, ptr %ptradd24, align 8, !dbg !1199
  store ptr %14, ptr %current, align 8, !dbg !1199
  call void @llvm.dbg.declare(metadata ptr %prev, metadata !1200, metadata !DIExpression()), !dbg !1201
  %15 = load ptr, ptr %current, align 8, !dbg !1202
  store ptr %15, ptr %prev, align 8, !dbg !1202
  br label %loop.cond, !dbg !1203

loop.cond:                                        ; preds = %checkok36, %checkok23
  %16 = load ptr, ptr %current, align 8, !dbg !1204
  %ptrbool = icmp ne ptr %16, null, !dbg !1204
  br i1 %ptrbool, label %loop.body, label %loop.exit, !dbg !1204

loop.body:                                        ; preds = %loop.cond
  %17 = load ptr, ptr %block, align 8, !dbg !1206
  %18 = load ptr, ptr %current, align 8, !dbg !1208
  %lt = icmp ult ptr %17, %18, !dbg !1206
  br i1 %lt, label %if.then25, label %if.exit30, !dbg !1206

if.then25:                                        ; preds = %loop.body
  %19 = load ptr, ptr %block, align 8, !dbg !1209
  %20 = load ptr, ptr %prev, align 8, !dbg !1211
  %gt = icmp ugt ptr %19, %20, !dbg !1209
  br i1 %gt, label %if.then26, label %if.exit27, !dbg !1209

if.then26:                                        ; preds = %if.then25
  br label %loop.exit, !dbg !1212

if.exit27:                                        ; preds = %if.then25
  %21 = load ptr, ptr %current, align 8, !dbg !1213
  %22 = load ptr, ptr %prev, align 8, !dbg !1214
  %eq = icmp eq ptr %21, %22, !dbg !1213
  br i1 %eq, label %if.then28, label %if.exit29, !dbg !1213

if.then28:                                        ; preds = %if.exit27
  br label %loop.exit, !dbg !1215

if.exit29:                                        ; preds = %if.exit27
  br label %if.exit30, !dbg !1215

if.exit30:                                        ; preds = %if.exit29, %loop.body
  %23 = load ptr, ptr %current, align 8, !dbg !1216
  store ptr %23, ptr %prev, align 8, !dbg !1216
  %24 = load ptr, ptr %prev, align 8, !dbg !1217
  %checknull31 = icmp eq ptr %24, null, !dbg !1217
  %25 = call i1 @llvm.expect.i1(i1 %checknull31, i1 false), !dbg !1217
  br i1 %25, label %panic32, label %checkok36, !dbg !1217

checkok36:                                        ; preds = %if.exit30
  %26 = load ptr, ptr %24, align 8, !dbg !1217
  store ptr %26, ptr %current, align 8, !dbg !1217
  br label %loop.cond, !dbg !1217

loop.exit:                                        ; preds = %if.then28, %if.then26, %loop.cond
  %27 = load ptr, ptr %current, align 8, !dbg !1218
  %ptrbool37 = icmp ne ptr %27, null, !dbg !1218
  br i1 %ptrbool37, label %if.then38, label %if.exit84, !dbg !1218

if.then38:                                        ; preds = %loop.exit
  %28 = load ptr, ptr %current, align 8, !dbg !1219
  %29 = load ptr, ptr %block, align 8, !dbg !1221
  %ptradd_any39 = getelementptr i8, ptr %29, i64 16, !dbg !1222
  %30 = load ptr, ptr %block, align 8, !dbg !1223
  %checknull40 = icmp eq ptr %30, null, !dbg !1223
  %31 = call i1 @llvm.expect.i1(i1 %checknull40, i1 false), !dbg !1223
  br i1 %31, label %panic41, label %checkok45, !dbg !1223

checkok45:                                        ; preds = %if.then38
  %ptradd46 = getelementptr inbounds i8, ptr %30, i64 8, !dbg !1223
  %32 = load i64, ptr %ptradd46, align 8, !dbg !1223
  %ptradd_any47 = getelementptr i8, ptr %ptradd_any39, i64 %32, !dbg !1223
  %eq48 = icmp eq ptr %28, %ptradd_any47, !dbg !1219
  br i1 %eq48, label %if.then49, label %if.else, !dbg !1219

if.then49:                                        ; preds = %checkok45
  %33 = load ptr, ptr %block, align 8, !dbg !1224
  %checknull50 = icmp eq ptr %33, null, !dbg !1224
  %34 = call i1 @llvm.expect.i1(i1 %checknull50, i1 false), !dbg !1224
  br i1 %34, label %panic51, label %checkok55, !dbg !1224

checkok55:                                        ; preds = %if.then49
  %ptradd56 = getelementptr inbounds i8, ptr %33, i64 8, !dbg !1224
  %35 = load i64, ptr %ptradd56, align 8, !dbg !1224
  %36 = load ptr, ptr %current, align 8, !dbg !1226
  %checknull57 = icmp eq ptr %36, null, !dbg !1226
  %37 = call i1 @llvm.expect.i1(i1 %checknull57, i1 false), !dbg !1226
  br i1 %37, label %panic58, label %checkok62, !dbg !1226

checkok62:                                        ; preds = %checkok55
  %ptradd63 = getelementptr inbounds i8, ptr %36, i64 8, !dbg !1226
  %38 = load i64, ptr %ptradd63, align 8, !dbg !1226
  %add = add i64 %38, 16, !dbg !1226
  %add64 = add i64 %35, %add, !dbg !1224
  store i64 %add64, ptr %ptradd56, align 8, !dbg !1224
  %39 = load ptr, ptr %block, align 8, !dbg !1227
  %checknull65 = icmp eq ptr %39, null, !dbg !1227
  %40 = call i1 @llvm.expect.i1(i1 %checknull65, i1 false), !dbg !1227
  br i1 %40, label %panic66, label %checkok70, !dbg !1227

checkok70:                                        ; preds = %checkok62
  %41 = load ptr, ptr %current, align 8, !dbg !1228
  %checknull71 = icmp eq ptr %41, null, !dbg !1228
  %42 = call i1 @llvm.expect.i1(i1 %checknull71, i1 false), !dbg !1228
  br i1 %42, label %panic72, label %checkok76, !dbg !1228

checkok76:                                        ; preds = %checkok70
  %43 = load ptr, ptr %41, align 8, !dbg !1228
  store ptr %43, ptr %39, align 8, !dbg !1228
  br label %if.exit83, !dbg !1228

if.else:                                          ; preds = %checkok45
  %44 = load ptr, ptr %block, align 8, !dbg !1229
  %checknull77 = icmp eq ptr %44, null, !dbg !1229
  %45 = call i1 @llvm.expect.i1(i1 %checknull77, i1 false), !dbg !1229
  br i1 %45, label %panic78, label %checkok82, !dbg !1229

checkok82:                                        ; preds = %if.else
  %46 = load ptr, ptr %current, align 8, !dbg !1231
  store ptr %46, ptr %44, align 8, !dbg !1231
  br label %if.exit83, !dbg !1231

if.exit83:                                        ; preds = %checkok82, %checkok76
  br label %if.exit84, !dbg !1231

if.exit84:                                        ; preds = %if.exit83, %loop.exit
  %47 = load ptr, ptr %prev, align 8, !dbg !1232
  %48 = load ptr, ptr %current, align 8, !dbg !1233
  %eq85 = icmp eq ptr %47, %48, !dbg !1232
  br i1 %eq85, label %if.then86, label %if.else94, !dbg !1232

if.then86:                                        ; preds = %if.exit84
  %49 = load ptr, ptr %self, align 8, !dbg !1234
  %checknull87 = icmp eq ptr %49, null, !dbg !1234
  %50 = call i1 @llvm.expect.i1(i1 %checknull87, i1 false), !dbg !1234
  br i1 %50, label %panic88, label %checkok92, !dbg !1234

checkok92:                                        ; preds = %if.then86
  %ptradd93 = getelementptr inbounds i8, ptr %49, i64 8, !dbg !1234
  %51 = load ptr, ptr %block, align 8, !dbg !1236
  store ptr %51, ptr %ptradd93, align 8, !dbg !1236
  br label %if.exit142, !dbg !1236

if.else94:                                        ; preds = %if.exit84
  %52 = load ptr, ptr %block, align 8, !dbg !1237
  %53 = load ptr, ptr %prev, align 8, !dbg !1239
  %ptradd_any95 = getelementptr i8, ptr %53, i64 16, !dbg !1240
  %54 = load ptr, ptr %prev, align 8, !dbg !1241
  %checknull96 = icmp eq ptr %54, null, !dbg !1241
  %55 = call i1 @llvm.expect.i1(i1 %checknull96, i1 false), !dbg !1241
  br i1 %55, label %panic97, label %checkok101, !dbg !1241

checkok101:                                       ; preds = %if.else94
  %ptradd102 = getelementptr inbounds i8, ptr %54, i64 8, !dbg !1241
  %56 = load i64, ptr %ptradd102, align 8, !dbg !1241
  %ptradd_any103 = getelementptr i8, ptr %ptradd_any95, i64 %56, !dbg !1241
  %eq104 = icmp eq ptr %52, %ptradd_any103, !dbg !1237
  br i1 %eq104, label %if.then105, label %if.else134, !dbg !1237

if.then105:                                       ; preds = %checkok101
  %57 = load ptr, ptr %prev, align 8, !dbg !1242
  %checknull106 = icmp eq ptr %57, null, !dbg !1242
  %58 = call i1 @llvm.expect.i1(i1 %checknull106, i1 false), !dbg !1242
  br i1 %58, label %panic107, label %checkok111, !dbg !1242

checkok111:                                       ; preds = %if.then105
  %ptradd112 = getelementptr inbounds i8, ptr %57, i64 8, !dbg !1242
  %59 = load i64, ptr %ptradd112, align 8, !dbg !1242
  %60 = load ptr, ptr %block, align 8, !dbg !1244
  %checknull113 = icmp eq ptr %60, null, !dbg !1244
  %61 = call i1 @llvm.expect.i1(i1 %checknull113, i1 false), !dbg !1244
  br i1 %61, label %panic114, label %checkok118, !dbg !1244

checkok118:                                       ; preds = %checkok111
  %ptradd119 = getelementptr inbounds i8, ptr %60, i64 8, !dbg !1244
  %62 = load i64, ptr %ptradd119, align 8, !dbg !1244
  %add120 = add i64 %62, 16, !dbg !1244
  %add121 = add i64 %59, %add120, !dbg !1242
  store i64 %add121, ptr %ptradd112, align 8, !dbg !1242
  %63 = load ptr, ptr %prev, align 8, !dbg !1245
  %checknull122 = icmp eq ptr %63, null, !dbg !1245
  %64 = call i1 @llvm.expect.i1(i1 %checknull122, i1 false), !dbg !1245
  br i1 %64, label %panic123, label %checkok127, !dbg !1245

checkok127:                                       ; preds = %checkok118
  %65 = load ptr, ptr %block, align 8, !dbg !1246
  %checknull128 = icmp eq ptr %65, null, !dbg !1246
  %66 = call i1 @llvm.expect.i1(i1 %checknull128, i1 false), !dbg !1246
  br i1 %66, label %panic129, label %checkok133, !dbg !1246

checkok133:                                       ; preds = %checkok127
  %67 = load ptr, ptr %65, align 8, !dbg !1246
  store ptr %67, ptr %63, align 8, !dbg !1246
  br label %if.exit141, !dbg !1246

if.else134:                                       ; preds = %checkok101
  %68 = load ptr, ptr %prev, align 8, !dbg !1247
  %checknull135 = icmp eq ptr %68, null, !dbg !1247
  %69 = call i1 @llvm.expect.i1(i1 %checknull135, i1 false), !dbg !1247
  br i1 %69, label %panic136, label %checkok140, !dbg !1247

checkok140:                                       ; preds = %if.else134
  %70 = load ptr, ptr %block, align 8, !dbg !1249
  store ptr %70, ptr %68, align 8, !dbg !1249
  br label %if.exit141, !dbg !1249

if.exit141:                                       ; preds = %checkok140, %checkok133
  br label %if.exit142, !dbg !1249

if.exit142:                                       ; preds = %if.exit141, %checkok92
  ret void, !dbg !1249

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg2, align 8
  %71 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %71(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 134), !dbg !1183
  unreachable, !dbg !1183

panic3:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg6, align 8
  %72 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %72(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 143), !dbg !1192
  unreachable, !dbg !1192

panic11:                                          ; preds = %if.then9
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg14, align 8
  %73 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %73(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 145), !dbg !1193
  unreachable, !dbg !1193

panic19:                                          ; preds = %if.exit17
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg22, align 8
  %74 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %74(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 150), !dbg !1199
  unreachable, !dbg !1199

panic32:                                          ; preds = %if.exit30
  store %"char[]" { ptr @.panic_msg.59, i64 45 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg35, align 8
  %75 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %75(ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, i32 162), !dbg !1217
  unreachable, !dbg !1217

panic41:                                          ; preds = %if.then38
  store %"char[]" { ptr @.panic_msg.50, i64 46 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg44, align 8
  %76 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %76(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 168), !dbg !1223
  unreachable, !dbg !1223

panic51:                                          ; preds = %if.then49
  store %"char[]" { ptr @.panic_msg.50, i64 46 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg54, align 8
  %77 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %77(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 171), !dbg !1224
  unreachable, !dbg !1224

panic58:                                          ; preds = %checkok55
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg61, align 8
  %78 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %78(ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, i32 171), !dbg !1226
  unreachable, !dbg !1226

panic66:                                          ; preds = %checkok62
  store %"char[]" { ptr @.panic_msg.50, i64 46 }, ptr %indirectarg67, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg69, align 8
  %79 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %79(ptr align 8 %indirectarg67, ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, i32 172), !dbg !1227
  unreachable, !dbg !1227

panic72:                                          ; preds = %checkok70
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg75, align 8
  %80 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %80(ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, i32 172), !dbg !1228
  unreachable, !dbg !1228

panic78:                                          ; preds = %if.else
  store %"char[]" { ptr @.panic_msg.50, i64 46 }, ptr %indirectarg79, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg80, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg81, align 8
  %81 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %81(ptr align 8 %indirectarg79, ptr align 8 %indirectarg80, ptr align 8 %indirectarg81, i32 177), !dbg !1229
  unreachable, !dbg !1229

panic88:                                          ; preds = %if.then86
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg90, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg91, align 8
  %82 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %82(ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, ptr align 8 %indirectarg91, i32 183), !dbg !1234
  unreachable, !dbg !1234

panic97:                                          ; preds = %if.else94
  store %"char[]" { ptr @.panic_msg.59, i64 45 }, ptr %indirectarg98, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg99, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg100, align 8
  %83 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %83(ptr align 8 %indirectarg98, ptr align 8 %indirectarg99, ptr align 8 %indirectarg100, i32 188), !dbg !1241
  unreachable, !dbg !1241

panic107:                                         ; preds = %if.then105
  store %"char[]" { ptr @.panic_msg.59, i64 45 }, ptr %indirectarg108, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg109, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg110, align 8
  %84 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %84(ptr align 8 %indirectarg108, ptr align 8 %indirectarg109, ptr align 8 %indirectarg110, i32 190), !dbg !1242
  unreachable, !dbg !1242

panic114:                                         ; preds = %checkok111
  store %"char[]" { ptr @.panic_msg.50, i64 46 }, ptr %indirectarg115, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg116, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg117, align 8
  %85 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %85(ptr align 8 %indirectarg115, ptr align 8 %indirectarg116, ptr align 8 %indirectarg117, i32 190), !dbg !1244
  unreachable, !dbg !1244

panic123:                                         ; preds = %checkok118
  store %"char[]" { ptr @.panic_msg.59, i64 45 }, ptr %indirectarg124, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg125, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg126, align 8
  %86 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %86(ptr align 8 %indirectarg124, ptr align 8 %indirectarg125, ptr align 8 %indirectarg126, i32 191), !dbg !1245
  unreachable, !dbg !1245

panic129:                                         ; preds = %checkok127
  store %"char[]" { ptr @.panic_msg.50, i64 46 }, ptr %indirectarg130, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg131, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg132, align 8
  %87 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %87(ptr align 8 %indirectarg130, ptr align 8 %indirectarg131, ptr align 8 %indirectarg132, i32 191), !dbg !1246
  unreachable, !dbg !1246

panic136:                                         ; preds = %if.else134
  store %"char[]" { ptr @.panic_msg.59, i64 45 }, ptr %indirectarg137, align 8
  store %"char[]" { ptr @.file.41, i64 17 }, ptr %indirectarg138, align 8
  store %"char[]" { ptr @.func.58, i64 5 }, ptr %indirectarg139, align 8
  %88 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %88(ptr align 8 %indirectarg137, ptr align 8 %indirectarg138, ptr align 8 %indirectarg139, i32 196), !dbg !1247
  unreachable, !dbg !1247
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.LibcAllocator.to_string(ptr noalias sret(%"char[]") align 8 %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !1250 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %sretparam = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %any, align 8
  %3 = icmp eq ptr %1, null, !dbg !1255
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1255
  br i1 %4, label %panic, label %checkok, !dbg !1255

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1256, metadata !DIExpression()), !dbg !1257
  call void @llvm.dbg.declare(metadata ptr %2, metadata !1258, metadata !DIExpression()), !dbg !1259
  store %"char[]" { ptr @.str, i64 14 }, ptr %indirectarg3, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg4, ptr align 8 %2, i32 16, i1 false)
  call void @std.core.String.copy(ptr sret(%"char[]") align 8 %sretparam, ptr align 8 %indirectarg3, ptr align 8 %indirectarg4), !dbg !1255
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %sretparam, i32 16, i1 false), !dbg !1255
  ret void, !dbg !1255

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.60, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.61, i64 9 }, ptr %indirectarg2, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 12), !dbg !1257
  unreachable, !dbg !1257
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.LibcAllocator.to_format(ptr %0, ptr %1, ptr %2) #0 comdat !dbg !1260 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %format = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %3 = icmp eq ptr %1, null, !dbg !1281
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1281
  br i1 %4, label %panic, label %checkok, !dbg !1281

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1282, metadata !DIExpression()), !dbg !1283
  store ptr %2, ptr %format, align 8
  call void @llvm.dbg.declare(metadata ptr %format, metadata !1284, metadata !DIExpression()), !dbg !1285
  %5 = load ptr, ptr %format, align 8
  store %"char[]" { ptr @.str.63, i64 14 }, ptr %indirectarg3, align 8
  %6 = call i64 @std.io.Formatter.print(ptr %retparam, ptr %5, ptr align 8 %indirectarg3), !dbg !1281
  %not_err = icmp eq i64 %6, 0, !dbg !1281
  %7 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1281
  br i1 %7, label %after_check, label %assign_optional, !dbg !1281

assign_optional:                                  ; preds = %checkok
  store i64 %6, ptr %reterr, align 8, !dbg !1281
  br label %err_retblock, !dbg !1281

after_check:                                      ; preds = %checkok
  %8 = load i64, ptr %retparam, align 8, !dbg !1281
  store i64 %8, ptr %0, align 8, !dbg !1281
  ret i64 0, !dbg !1281

err_retblock:                                     ; preds = %assign_optional
  %9 = load i64, ptr %reterr, align 8, !dbg !1281
  ret i64 %9, !dbg !1281

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.60, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.62, i64 9 }, ptr %indirectarg2, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 13), !dbg !1283
  unreachable, !dbg !1283
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.LibcAllocator.acquire(ptr %0, ptr %1, i64 %2, i32 %3, i64 %4) #0 comdat !dbg !1286 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %bytes = alloca i64, align 8
  %init_type = alloca i32, align 4
  %alignment = alloca i64, align 8
  %reterr = alloca i64, align 8
  %reterr4 = alloca i64, align 8
  %data = alloca ptr, align 8
  %reterr15 = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !1289
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1289
  br i1 %6, label %panic, label %checkok, !dbg !1289

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1290, metadata !DIExpression()), !dbg !1291
  store i64 %2, ptr %bytes, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes, metadata !1292, metadata !DIExpression()), !dbg !1293
  store i32 %3, ptr %init_type, align 4
  call void @llvm.dbg.declare(metadata ptr %init_type, metadata !1294, metadata !DIExpression()), !dbg !1295
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !1296, metadata !DIExpression()), !dbg !1297
  %7 = load i32, ptr %init_type, align 4, !dbg !1298
  %eq = icmp eq i32 %7, 1, !dbg !1298
  br i1 %eq, label %if.then, label %if.exit9, !dbg !1298

if.then:                                          ; preds = %checkok
  %8 = load i64, ptr %alignment, align 8, !dbg !1299
  %lt = icmp ult i64 0, %8, !dbg !1299
  br i1 %lt, label %if.then3, label %if.exit, !dbg !1299

if.then3:                                         ; preds = %if.then
  %9 = load i64, ptr %bytes, align 8, !dbg !1301
  %10 = load i64, ptr %alignment, align 8, !dbg !1301
  %11 = call ptr @_aligned_recalloc(ptr null, i64 1, i64 %9, i64 %10), !dbg !1303
  %ptrbool = icmp ne ptr %11, null, !dbg !1303
  br i1 %ptrbool, label %cond.phi, label %cond.rhs, !dbg !1303

cond.rhs:                                         ; preds = %if.then3
  store i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" to i64), ptr %reterr, align 8, !dbg !1304
  br label %err_retblock, !dbg !1304

cond.phi:                                         ; preds = %if.then3
  store ptr %11, ptr %0, align 8, !dbg !1304
  ret i64 0, !dbg !1304

err_retblock:                                     ; preds = %cond.rhs
  %12 = load i64, ptr %reterr, align 8, !dbg !1304
  ret i64 %12, !dbg !1304

if.exit:                                          ; preds = %if.then
  %13 = load i64, ptr %bytes, align 8, !dbg !1305
  %14 = call ptr @calloc(i64 1, i64 %13), !dbg !1306
  %ptrbool5 = icmp ne ptr %14, null, !dbg !1306
  br i1 %ptrbool5, label %cond.phi7, label %cond.rhs6, !dbg !1306

cond.rhs6:                                        ; preds = %if.exit
  store i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" to i64), ptr %reterr4, align 8, !dbg !1307
  br label %err_retblock8, !dbg !1307

cond.phi7:                                        ; preds = %if.exit
  store ptr %14, ptr %0, align 8, !dbg !1307
  ret i64 0, !dbg !1307

err_retblock8:                                    ; preds = %cond.rhs6
  %15 = load i64, ptr %reterr4, align 8, !dbg !1307
  ret i64 %15, !dbg !1307

if.exit9:                                         ; preds = %checkok
  call void @llvm.dbg.declare(metadata ptr %data, metadata !1308, metadata !DIExpression()), !dbg !1309
  %16 = load i64, ptr %alignment, align 8, !dbg !1310
  %lt10 = icmp ult i64 0, %16, !dbg !1310
  br i1 %lt10, label %cond.lhs, label %cond.rhs11, !dbg !1310

cond.lhs:                                         ; preds = %if.exit9
  %17 = load i64, ptr %bytes, align 8, !dbg !1311
  %18 = load i64, ptr %alignment, align 8, !dbg !1311
  %19 = call ptr @_aligned_malloc(i64 %17, i64 %18), !dbg !1312
  br label %cond.phi12, !dbg !1312

cond.rhs11:                                       ; preds = %if.exit9
  %20 = load i64, ptr %bytes, align 8, !dbg !1313
  %21 = call ptr @malloc(i64 %20), !dbg !1314
  br label %cond.phi12, !dbg !1314

cond.phi12:                                       ; preds = %cond.rhs11, %cond.lhs
  %val = phi ptr [ %19, %cond.lhs ], [ %21, %cond.rhs11 ], !dbg !1314
  store ptr %val, ptr %data, align 8, !dbg !1314
  %22 = load ptr, ptr %data, align 8, !dbg !1315
  %not = icmp eq ptr %22, null, !dbg !1315
  br i1 %not, label %if.then13, label %if.exit14, !dbg !1315

if.then13:                                        ; preds = %cond.phi12
  ret i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" to i64), !dbg !1316

if.exit14:                                        ; preds = %cond.phi12
  %23 = load ptr, ptr %data, align 8, !dbg !1317
  store ptr %23, ptr %0, align 8, !dbg !1317
  ret i64 0, !dbg !1317

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.60, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg2, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 81), !dbg !1291
  unreachable, !dbg !1291
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.LibcAllocator.resize(ptr %0, ptr %1, ptr %2, i64 %3, i64 %4) #0 comdat !dbg !1318 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_ptr = alloca ptr, align 8
  %new_bytes = alloca i64, align 8
  %alignment = alloca i64, align 8
  %reterr = alloca i64, align 8
  %reterr3 = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !1321
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1321
  br i1 %6, label %panic, label %checkok, !dbg !1321

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1322, metadata !DIExpression()), !dbg !1323
  store ptr %2, ptr %old_ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %old_ptr, metadata !1324, metadata !DIExpression()), !dbg !1325
  store i64 %3, ptr %new_bytes, align 8
  call void @llvm.dbg.declare(metadata ptr %new_bytes, metadata !1326, metadata !DIExpression()), !dbg !1327
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !1328, metadata !DIExpression()), !dbg !1329
  %7 = load i64, ptr %alignment, align 8, !dbg !1330
  %intbool = icmp ne i64 %7, 0, !dbg !1330
  br i1 %intbool, label %if.then, label %if.exit, !dbg !1330

if.then:                                          ; preds = %checkok
  %8 = load ptr, ptr %old_ptr, align 8, !dbg !1331
  %9 = load i64, ptr %new_bytes, align 8, !dbg !1331
  %10 = load i64, ptr %alignment, align 8, !dbg !1331
  %11 = call ptr @_aligned_realloc(ptr %8, i64 %9, i64 %10), !dbg !1333
  %ptrbool = icmp ne ptr %11, null, !dbg !1333
  br i1 %ptrbool, label %cond.phi, label %cond.rhs, !dbg !1333

cond.rhs:                                         ; preds = %if.then
  store i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" to i64), ptr %reterr, align 8, !dbg !1334
  br label %err_retblock, !dbg !1334

cond.phi:                                         ; preds = %if.then
  store ptr %11, ptr %0, align 8, !dbg !1334
  ret i64 0, !dbg !1334

err_retblock:                                     ; preds = %cond.rhs
  %12 = load i64, ptr %reterr, align 8, !dbg !1334
  ret i64 %12, !dbg !1334

if.exit:                                          ; preds = %checkok
  %13 = load ptr, ptr %old_ptr, align 8, !dbg !1335
  %14 = load i64, ptr %new_bytes, align 8, !dbg !1335
  %15 = call ptr @realloc(ptr %13, i64 %14), !dbg !1336
  %ptrbool4 = icmp ne ptr %15, null, !dbg !1336
  br i1 %ptrbool4, label %cond.phi6, label %cond.rhs5, !dbg !1336

cond.rhs5:                                        ; preds = %if.exit
  store i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" to i64), ptr %reterr3, align 8, !dbg !1337
  br label %err_retblock7, !dbg !1337

cond.phi6:                                        ; preds = %if.exit
  store ptr %15, ptr %0, align 8, !dbg !1337
  ret i64 0, !dbg !1337

err_retblock7:                                    ; preds = %cond.rhs5
  %16 = load i64, ptr %reterr3, align 8, !dbg !1337
  ret i64 %16, !dbg !1337

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.60, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg2, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 99), !dbg !1323
  unreachable, !dbg !1323
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.LibcAllocator.release(ptr %0, ptr %1, i8 zeroext %2) #0 comdat !dbg !1338 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_ptr = alloca ptr, align 8
  %aligned = alloca i8, align 1
  %3 = icmp eq ptr %0, null, !dbg !1341
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1341
  br i1 %4, label %panic, label %checkok, !dbg !1341

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1342, metadata !DIExpression()), !dbg !1343
  store ptr %1, ptr %old_ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %old_ptr, metadata !1344, metadata !DIExpression()), !dbg !1345
  store i8 %2, ptr %aligned, align 1
  call void @llvm.dbg.declare(metadata ptr %aligned, metadata !1346, metadata !DIExpression()), !dbg !1347
  %5 = load i8, ptr %aligned, align 1, !dbg !1348
  %6 = trunc i8 %5 to i1, !dbg !1348
  br i1 %6, label %if.then, label %if.exit, !dbg !1348

if.then:                                          ; preds = %checkok
  %7 = load ptr, ptr %old_ptr, align 8, !dbg !1349
  call void @_aligned_free(ptr %7), !dbg !1351
  ret void, !dbg !1352

if.exit:                                          ; preds = %checkok
  %8 = load ptr, ptr %old_ptr, align 8, !dbg !1353
  %9 = call ptr @free(ptr %8), !dbg !1354
  ret void, !dbg !1354

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.60, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg2, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 108), !dbg !1343
  unreachable, !dbg !1343
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.OnStackAllocator.init(ptr %0, ptr align 8 %1, ptr align 8 %2) #0 comdat !dbg !1355 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %3 = icmp eq ptr %0, null, !dbg !1372
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1372
  br i1 %4, label %panic, label %checkok, !dbg !1372

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1373, metadata !DIExpression()), !dbg !1374
  call void @llvm.dbg.declare(metadata ptr %1, metadata !1375, metadata !DIExpression()), !dbg !1376
  call void @llvm.dbg.declare(metadata ptr %2, metadata !1377, metadata !DIExpression()), !dbg !1378
  %5 = load ptr, ptr %self, align 8, !dbg !1379
  %checknull = icmp eq ptr %5, null, !dbg !1379
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1379
  br i1 %6, label %panic3, label %checkok7, !dbg !1379

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !1379
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd, ptr align 8 %1, i32 16, i1 false), !dbg !1380
  %7 = load ptr, ptr %self, align 8, !dbg !1381
  %checknull8 = icmp eq ptr %7, null, !dbg !1381
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !1381
  br i1 %8, label %panic9, label %checkok13, !dbg !1381

checkok13:                                        ; preds = %checkok7
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %7, ptr align 8 %2, i32 16, i1 false), !dbg !1382
  %9 = load ptr, ptr %self, align 8, !dbg !1383
  %checknull14 = icmp eq ptr %9, null, !dbg !1383
  %10 = call i1 @llvm.expect.i1(i1 %checknull14, i1 false), !dbg !1383
  br i1 %10, label %panic15, label %checkok19, !dbg !1383

checkok19:                                        ; preds = %checkok13
  %ptradd20 = getelementptr inbounds i8, ptr %9, i64 32, !dbg !1383
  store i64 0, ptr %ptradd20, align 8, !dbg !1384
  ret void, !dbg !1384

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 24), !dbg !1374
  unreachable, !dbg !1374

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg6, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 26), !dbg !1379
  unreachable, !dbg !1379

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg12, align 8
  %13 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %13(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 27), !dbg !1381
  unreachable, !dbg !1381

panic15:                                          ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg18, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 28), !dbg !1383
  unreachable, !dbg !1383
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.OnStackAllocator.free(ptr %0) #0 comdat !dbg !1385 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %chunk = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %allocator = alloca %any, align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %ptr = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %allocator39 = alloca %any, align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %ptr47 = alloca ptr, align 8
  %.inlinecache52 = alloca ptr, align 8
  %.cachedtype53 = alloca ptr, align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %old = alloca ptr, align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %indirectarg78 = alloca %"char[]", align 8
  %allocator80 = alloca %any, align 8
  %ptr81 = alloca ptr, align 8
  %.inlinecache86 = alloca ptr, align 8
  %.cachedtype87 = alloca ptr, align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %indirectarg102 = alloca %"char[]", align 8
  %indirectarg103 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %indirectarg110 = alloca %"char[]", align 8
  %indirectarg111 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype87, align 8, !dbg !1388
  store ptr null, ptr %.cachedtype53, align 8, !dbg !1388
  store ptr null, ptr %.cachedtype, align 8, !dbg !1388
  %1 = icmp eq ptr %0, null, !dbg !1388
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1388
  br i1 %2, label %panic, label %checkok, !dbg !1388

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1389, metadata !DIExpression()), !dbg !1390
  call void @llvm.dbg.declare(metadata ptr %chunk, metadata !1391, metadata !DIExpression()), !dbg !1392
  %3 = load ptr, ptr %self, align 8, !dbg !1393
  %checknull = icmp eq ptr %3, null, !dbg !1393
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1393
  br i1 %4, label %panic3, label %checkok7, !dbg !1393

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 40, !dbg !1393
  %5 = load ptr, ptr %ptradd, align 8, !dbg !1393
  store ptr %5, ptr %chunk, align 8, !dbg !1393
  br label %loop.cond, !dbg !1394

loop.cond:                                        ; preds = %expr_block.exit99, %checkok7
  %6 = load ptr, ptr %chunk, align 8, !dbg !1395
  %ptrbool = icmp ne ptr %6, null, !dbg !1395
  br i1 %ptrbool, label %loop.body, label %loop.exit, !dbg !1395

loop.body:                                        ; preds = %loop.cond
  %7 = load ptr, ptr %chunk, align 8, !dbg !1397
  %checknull8 = icmp eq ptr %7, null, !dbg !1397
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !1397
  br i1 %8, label %panic9, label %checkok13, !dbg !1397

checkok13:                                        ; preds = %loop.body
  %9 = load i8, ptr %7, align 8, !dbg !1397
  %10 = trunc i8 %9 to i1, !dbg !1397
  br i1 %10, label %if.then, label %if.else, !dbg !1397

if.then:                                          ; preds = %checkok13
  %11 = load ptr, ptr %self, align 8, !dbg !1399
  %checknull14 = icmp eq ptr %11, null, !dbg !1399
  %12 = call i1 @llvm.expect.i1(i1 %checknull14, i1 false), !dbg !1399
  br i1 %12, label %panic15, label %checkok19, !dbg !1399

checkok19:                                        ; preds = %if.then
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %11, i32 16, i1 false)
  %13 = load ptr, ptr %chunk, align 8, !dbg !1401
  %checknull20 = icmp eq ptr %13, null, !dbg !1401
  %14 = call i1 @llvm.expect.i1(i1 %checknull20, i1 false), !dbg !1401
  br i1 %14, label %panic21, label %checkok25, !dbg !1401

checkok25:                                        ; preds = %checkok19
  %ptradd26 = getelementptr inbounds i8, ptr %13, i64 16, !dbg !1401
  %15 = load ptr, ptr %ptradd26, align 8
  store ptr %15, ptr %ptr, align 8
  %16 = load ptr, ptr %ptr, align 8, !dbg !1402
  %not = icmp eq ptr %16, null, !dbg !1402
  br i1 %not, label %if.then27, label %if.exit, !dbg !1402

if.then27:                                        ; preds = %checkok25
  br label %expr_block.exit, !dbg !1405

if.exit:                                          ; preds = %checkok25
  %ptradd28 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !1406
  %17 = load i64, ptr %ptradd28, align 8, !dbg !1406
  %18 = inttoptr i64 %17 to ptr, !dbg !1406
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1388
  %19 = icmp eq ptr %18, %type, !dbg !1388
  br i1 %19, label %cache_hit, label %cache_miss, !dbg !1388

cache_miss:                                       ; preds = %if.exit
  %ptradd29 = getelementptr inbounds i8, ptr %18, i64 16, !dbg !1388
  %20 = load ptr, ptr %ptradd29, align 8, !dbg !1388
  %21 = call ptr @.dyn_search(ptr %20, ptr @"$sel.release"), !dbg !1388
  store ptr %21, ptr %.inlinecache, align 8, !dbg !1388
  store ptr %18, ptr %.cachedtype, align 8, !dbg !1388
  br label %22, !dbg !1388

cache_hit:                                        ; preds = %if.exit
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1388
  br label %22, !dbg !1388

22:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %21, %cache_miss ], !dbg !1388
  %23 = icmp eq ptr %fn_phi, null, !dbg !1388
  br i1 %23, label %missing_function, label %match, !dbg !1388

missing_function:                                 ; preds = %22
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg32, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 146), !dbg !1407
  unreachable, !dbg !1407

match:                                            ; preds = %22
  %25 = load ptr, ptr %allocator, align 8, !dbg !1407
  %26 = load ptr, ptr %ptr, align 8, !dbg !1407
  call void %fn_phi(ptr %25, ptr %26, i8 zeroext 1), !dbg !1407
  br label %expr_block.exit, !dbg !1407

expr_block.exit:                                  ; preds = %match, %if.then27
  br label %if.exit66, !dbg !1407

if.else:                                          ; preds = %checkok13
  %27 = load ptr, ptr %self, align 8, !dbg !1408
  %checknull33 = icmp eq ptr %27, null, !dbg !1408
  %28 = call i1 @llvm.expect.i1(i1 %checknull33, i1 false), !dbg !1408
  br i1 %28, label %panic34, label %checkok38, !dbg !1408

checkok38:                                        ; preds = %if.else
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator39, ptr align 8 %27, i32 16, i1 false)
  %29 = load ptr, ptr %chunk, align 8, !dbg !1410
  %checknull40 = icmp eq ptr %29, null, !dbg !1410
  %30 = call i1 @llvm.expect.i1(i1 %checknull40, i1 false), !dbg !1410
  br i1 %30, label %panic41, label %checkok45, !dbg !1410

checkok45:                                        ; preds = %checkok38
  %ptradd46 = getelementptr inbounds i8, ptr %29, i64 16, !dbg !1410
  %31 = load ptr, ptr %ptradd46, align 8
  store ptr %31, ptr %ptr47, align 8
  %32 = load ptr, ptr %ptr47, align 8, !dbg !1411
  %not48 = icmp eq ptr %32, null, !dbg !1411
  br i1 %not48, label %if.then49, label %if.exit50, !dbg !1411

if.then49:                                        ; preds = %checkok45
  br label %expr_block.exit65, !dbg !1414

if.exit50:                                        ; preds = %checkok45
  %ptradd51 = getelementptr inbounds i8, ptr %allocator39, i64 8, !dbg !1415
  %33 = load i64, ptr %ptradd51, align 8, !dbg !1415
  %34 = inttoptr i64 %33 to ptr, !dbg !1415
  %type54 = load ptr, ptr %.cachedtype53, align 8, !dbg !1388
  %35 = icmp eq ptr %34, %type54, !dbg !1388
  br i1 %35, label %cache_hit57, label %cache_miss55, !dbg !1388

cache_miss55:                                     ; preds = %if.exit50
  %ptradd56 = getelementptr inbounds i8, ptr %34, i64 16, !dbg !1388
  %36 = load ptr, ptr %ptradd56, align 8, !dbg !1388
  %37 = call ptr @.dyn_search(ptr %36, ptr @"$sel.release"), !dbg !1388
  store ptr %37, ptr %.inlinecache52, align 8, !dbg !1388
  store ptr %34, ptr %.cachedtype53, align 8, !dbg !1388
  br label %38, !dbg !1388

cache_hit57:                                      ; preds = %if.exit50
  %cache_hit_fn58 = load ptr, ptr %.inlinecache52, align 8, !dbg !1388
  br label %38, !dbg !1388

38:                                               ; preds = %cache_hit57, %cache_miss55
  %fn_phi59 = phi ptr [ %cache_hit_fn58, %cache_hit57 ], [ %37, %cache_miss55 ], !dbg !1388
  %39 = icmp eq ptr %fn_phi59, null, !dbg !1388
  br i1 %39, label %missing_function60, label %match64, !dbg !1388

missing_function60:                               ; preds = %38
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg63, align 8
  %40 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %40(ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, i32 105), !dbg !1416
  unreachable, !dbg !1416

match64:                                          ; preds = %38
  %41 = load ptr, ptr %allocator39, align 8, !dbg !1416
  %42 = load ptr, ptr %ptr47, align 8, !dbg !1416
  call void %fn_phi59(ptr %41, ptr %42, i8 zeroext 0), !dbg !1416
  br label %expr_block.exit65, !dbg !1416

expr_block.exit65:                                ; preds = %match64, %if.then49
  br label %if.exit66, !dbg !1416

if.exit66:                                        ; preds = %expr_block.exit65, %expr_block.exit
  call void @llvm.dbg.declare(metadata ptr %old, metadata !1417, metadata !DIExpression()), !dbg !1418
  %43 = load ptr, ptr %chunk, align 8, !dbg !1419
  store ptr %43, ptr %old, align 8, !dbg !1419
  %44 = load ptr, ptr %chunk, align 8, !dbg !1420
  %checknull67 = icmp eq ptr %44, null, !dbg !1420
  %45 = call i1 @llvm.expect.i1(i1 %checknull67, i1 false), !dbg !1420
  br i1 %45, label %panic68, label %checkok72, !dbg !1420

checkok72:                                        ; preds = %if.exit66
  %ptradd73 = getelementptr inbounds i8, ptr %44, i64 8, !dbg !1420
  %46 = load ptr, ptr %ptradd73, align 8, !dbg !1420
  store ptr %46, ptr %chunk, align 8, !dbg !1420
  %47 = load ptr, ptr %self, align 8, !dbg !1421
  %checknull74 = icmp eq ptr %47, null, !dbg !1421
  %48 = call i1 @llvm.expect.i1(i1 %checknull74, i1 false), !dbg !1421
  br i1 %48, label %panic75, label %checkok79, !dbg !1421

checkok79:                                        ; preds = %checkok72
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator80, ptr align 8 %47, i32 16, i1 false)
  %49 = load ptr, ptr %old, align 8
  store ptr %49, ptr %ptr81, align 8
  %50 = load ptr, ptr %ptr81, align 8, !dbg !1422
  %not82 = icmp eq ptr %50, null, !dbg !1422
  br i1 %not82, label %if.then83, label %if.exit84, !dbg !1422

if.then83:                                        ; preds = %checkok79
  br label %expr_block.exit99, !dbg !1425

if.exit84:                                        ; preds = %checkok79
  %ptradd85 = getelementptr inbounds i8, ptr %allocator80, i64 8, !dbg !1426
  %51 = load i64, ptr %ptradd85, align 8, !dbg !1426
  %52 = inttoptr i64 %51 to ptr, !dbg !1426
  %type88 = load ptr, ptr %.cachedtype87, align 8, !dbg !1388
  %53 = icmp eq ptr %52, %type88, !dbg !1388
  br i1 %53, label %cache_hit91, label %cache_miss89, !dbg !1388

cache_miss89:                                     ; preds = %if.exit84
  %ptradd90 = getelementptr inbounds i8, ptr %52, i64 16, !dbg !1388
  %54 = load ptr, ptr %ptradd90, align 8, !dbg !1388
  %55 = call ptr @.dyn_search(ptr %54, ptr @"$sel.release"), !dbg !1388
  store ptr %55, ptr %.inlinecache86, align 8, !dbg !1388
  store ptr %52, ptr %.cachedtype87, align 8, !dbg !1388
  br label %56, !dbg !1388

cache_hit91:                                      ; preds = %if.exit84
  %cache_hit_fn92 = load ptr, ptr %.inlinecache86, align 8, !dbg !1388
  br label %56, !dbg !1388

56:                                               ; preds = %cache_hit91, %cache_miss89
  %fn_phi93 = phi ptr [ %cache_hit_fn92, %cache_hit91 ], [ %55, %cache_miss89 ], !dbg !1388
  %57 = icmp eq ptr %fn_phi93, null, !dbg !1388
  br i1 %57, label %missing_function94, label %match98, !dbg !1388

missing_function94:                               ; preds = %56
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg97, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, i32 105), !dbg !1427
  unreachable, !dbg !1427

match98:                                          ; preds = %56
  %59 = load ptr, ptr %allocator80, align 8, !dbg !1427
  %60 = load ptr, ptr %ptr81, align 8, !dbg !1427
  call void %fn_phi93(ptr %59, ptr %60, i8 zeroext 0), !dbg !1427
  br label %expr_block.exit99, !dbg !1427

expr_block.exit99:                                ; preds = %match98, %if.then83
  br label %loop.cond, !dbg !1427

loop.exit:                                        ; preds = %loop.cond
  %61 = load ptr, ptr %self, align 8, !dbg !1428
  %checknull100 = icmp eq ptr %61, null, !dbg !1428
  %62 = call i1 @llvm.expect.i1(i1 %checknull100, i1 false), !dbg !1428
  br i1 %62, label %panic101, label %checkok105, !dbg !1428

checkok105:                                       ; preds = %loop.exit
  %ptradd106 = getelementptr inbounds i8, ptr %61, i64 40, !dbg !1428
  store ptr null, ptr %ptradd106, align 8, !dbg !1429
  %63 = load ptr, ptr %self, align 8, !dbg !1430
  %checknull107 = icmp eq ptr %63, null, !dbg !1430
  %64 = call i1 @llvm.expect.i1(i1 %checknull107, i1 false), !dbg !1430
  br i1 %64, label %panic108, label %checkok112, !dbg !1430

checkok112:                                       ; preds = %checkok105
  %ptradd113 = getelementptr inbounds i8, ptr %63, i64 32, !dbg !1430
  store i64 0, ptr %ptradd113, align 8, !dbg !1431
  ret void, !dbg !1431

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg2, align 8
  %65 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %65(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 31), !dbg !1390
  unreachable, !dbg !1390

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg6, align 8
  %66 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %66(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 33), !dbg !1393
  unreachable, !dbg !1393

panic9:                                           ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg12, align 8
  %67 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %67(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 36), !dbg !1397
  unreachable, !dbg !1397

panic15:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg18, align 8
  %68 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %68(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 38), !dbg !1399
  unreachable, !dbg !1399

panic21:                                          ; preds = %checkok19
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg24, align 8
  %69 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %69(ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, i32 38), !dbg !1401
  unreachable, !dbg !1401

panic34:                                          ; preds = %if.else
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg37, align 8
  %70 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %70(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 42), !dbg !1408
  unreachable, !dbg !1408

panic41:                                          ; preds = %checkok38
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg44, align 8
  %71 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %71(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 42), !dbg !1410
  unreachable, !dbg !1410

panic68:                                          ; preds = %if.exit66
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg71, align 8
  %72 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %72(ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, i32 45), !dbg !1420
  unreachable, !dbg !1420

panic75:                                          ; preds = %checkok72
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg76, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg77, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg78, align 8
  %73 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %73(ptr align 8 %indirectarg76, ptr align 8 %indirectarg77, ptr align 8 %indirectarg78, i32 46), !dbg !1421
  unreachable, !dbg !1421

panic101:                                         ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg102, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg103, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg104, align 8
  %74 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %74(ptr align 8 %indirectarg102, ptr align 8 %indirectarg103, ptr align 8 %indirectarg104, i32 48), !dbg !1428
  unreachable, !dbg !1428

panic108:                                         ; preds = %checkok105
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg109, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg110, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg111, align 8
  %75 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %75(ptr align 8 %indirectarg109, ptr align 8 %indirectarg110, ptr align 8 %indirectarg111, i32 49), !dbg !1430
  unreachable, !dbg !1430
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.OnStackAllocator.release(ptr %0, ptr %1, i8 zeroext %2) #0 comdat !dbg !1432 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_pointer = alloca ptr, align 8
  %aligned = alloca i8, align 1
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %3 = icmp eq ptr %0, null, !dbg !1435
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1435
  br i1 %4, label %panic, label %checkok, !dbg !1435

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1436, metadata !DIExpression()), !dbg !1437
  store ptr %1, ptr %old_pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %old_pointer, metadata !1438, metadata !DIExpression()), !dbg !1439
  store i8 %2, ptr %aligned, align 1
  call void @llvm.dbg.declare(metadata ptr %aligned, metadata !1440, metadata !DIExpression()), !dbg !1441
  %5 = load ptr, ptr %old_pointer, align 8, !dbg !1442
  %ptrbool = icmp ne ptr %5, null, !dbg !1442
  br i1 %ptrbool, label %assert_ok, label %assert_fail, !dbg !1442

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.74, i64 32 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 59), !dbg !1442
  unreachable, !dbg !1442

assert_ok:                                        ; preds = %checkok
  %7 = load ptr, ptr %self, align 8, !dbg !1444
  %8 = load ptr, ptr %old_pointer, align 8, !dbg !1444
  %9 = call i8 @std.core.mem.allocator.allocation_in_stack_mem(ptr %7, ptr %8), !dbg !1445
  %10 = trunc i8 %9 to i1, !dbg !1445
  br i1 %10, label %if.then, label %if.exit, !dbg !1445

if.then:                                          ; preds = %assert_ok
  ret void, !dbg !1446

if.exit:                                          ; preds = %assert_ok
  %11 = load ptr, ptr %self, align 8, !dbg !1447
  %12 = load ptr, ptr %old_pointer, align 8, !dbg !1447
  call void @std.core.mem.allocator.on_stack_allocator_remove_chunk(ptr %11, ptr %12), !dbg !1448
  %13 = load ptr, ptr %self, align 8, !dbg !1449
  %14 = load ptr, ptr %old_pointer, align 8, !dbg !1449
  %15 = load i8, ptr %aligned, align 1, !dbg !1449
  call void @std.core.mem.allocator.OnStackAllocator.release(ptr %13, ptr %14, i8 zeroext %15), !dbg !1450
  ret void, !dbg !1450

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 61), !dbg !1437
  unreachable, !dbg !1437
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.OnStackAllocator.resize(ptr %0, ptr %1, ptr %2, i64 %3, i64 %4) #0 comdat !dbg !1451 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_pointer = alloca ptr, align 8
  %size = alloca i64, align 8
  %alignment = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %chunk = alloca ptr, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %header = alloca ptr, align 8
  %old_size = alloca i64, align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %mem = alloca ptr, align 8
  %error_var43 = alloca i64, align 8
  %retparam44 = alloca ptr, align 8
  %dst = alloca ptr, align 8
  %src = alloca ptr, align 8
  %len = alloca i64, align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %reterr62 = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1454
  %5 = icmp eq ptr %1, null, !dbg !1454
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1454
  br i1 %6, label %panic, label %checkok, !dbg !1454

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1455, metadata !DIExpression()), !dbg !1456
  store ptr %2, ptr %old_pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %old_pointer, metadata !1457, metadata !DIExpression()), !dbg !1458
  store i64 %3, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !1459, metadata !DIExpression()), !dbg !1460
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !1461, metadata !DIExpression()), !dbg !1462
  %7 = load i64, ptr %size, align 8, !dbg !1463
  %lt = icmp ult i64 0, %7, !dbg !1463
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !1463

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.15, i64 29 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg5, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 103), !dbg !1463
  unreachable, !dbg !1463

assert_ok:                                        ; preds = %checkok
  %9 = load ptr, ptr %old_pointer, align 8, !dbg !1465
  %neq = icmp ne ptr %9, null, !dbg !1465
  br i1 %neq, label %assert_ok10, label %assert_fail6, !dbg !1465

assert_fail6:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.17, i64 40 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg9, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 104), !dbg !1465
  unreachable, !dbg !1465

assert_ok10:                                      ; preds = %assert_ok
  %11 = load i64, ptr %alignment, align 8, !dbg !1466
  %le = icmp ule i64 %11, 268435456, !dbg !1466
  br i1 %le, label %assert_ok15, label %assert_fail11, !dbg !1466

assert_fail11:                                    ; preds = %assert_ok10
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg14, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 105), !dbg !1466
  unreachable, !dbg !1466

assert_ok15:                                      ; preds = %assert_ok10
  %13 = load ptr, ptr %self, align 8, !dbg !1467
  %14 = load ptr, ptr %old_pointer, align 8, !dbg !1467
  %15 = call i8 @std.core.mem.allocator.allocation_in_stack_mem(ptr %13, ptr %14), !dbg !1468
  %16 = trunc i8 %15 to i1, !dbg !1468
  %not = xor i1 %16, true, !dbg !1468
  br i1 %not, label %if.then, label %if.exit, !dbg !1468

if.then:                                          ; preds = %assert_ok15
  call void @llvm.dbg.declare(metadata ptr %chunk, metadata !1469, metadata !DIExpression()), !dbg !1471
  %17 = load ptr, ptr %self, align 8, !dbg !1472
  %18 = load ptr, ptr %old_pointer, align 8, !dbg !1472
  %19 = call ptr @std.core.mem.allocator.on_stack_allocator_find_chunk(ptr %17, ptr %18), !dbg !1473
  store ptr %19, ptr %chunk, align 8, !dbg !1473
  %20 = load ptr, ptr %chunk, align 8, !dbg !1474
  %ptrbool = icmp ne ptr %20, null, !dbg !1474
  br i1 %ptrbool, label %assert_ok20, label %assert_fail16, !dbg !1474

assert_fail16:                                    ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.75, i64 55 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg19, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 112), !dbg !1474
  unreachable, !dbg !1474

assert_ok20:                                      ; preds = %if.then
  %22 = load ptr, ptr %chunk, align 8, !dbg !1475
  %checknull = icmp eq ptr %22, null, !dbg !1475
  %23 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1475
  br i1 %23, label %panic21, label %checkok25, !dbg !1475

checkok25:                                        ; preds = %assert_ok20
  %ptradd = getelementptr inbounds i8, ptr %22, i64 16, !dbg !1475
  %24 = load ptr, ptr %self, align 8, !dbg !1476
  %checknull26 = icmp eq ptr %24, null, !dbg !1476
  %25 = call i1 @llvm.expect.i1(i1 %checknull26, i1 false), !dbg !1476
  br i1 %25, label %panic27, label %checkok31, !dbg !1476

checkok31:                                        ; preds = %checkok25
  %ptradd32 = getelementptr inbounds i8, ptr %24, i64 8, !dbg !1477
  %26 = load i64, ptr %ptradd32, align 8, !dbg !1477
  %27 = inttoptr i64 %26 to ptr, !dbg !1477
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1454
  %28 = icmp eq ptr %27, %type, !dbg !1454
  br i1 %28, label %cache_hit, label %cache_miss, !dbg !1454

cache_miss:                                       ; preds = %checkok31
  %ptradd33 = getelementptr inbounds i8, ptr %27, i64 16, !dbg !1454
  %29 = load ptr, ptr %ptradd33, align 8, !dbg !1454
  %30 = call ptr @.dyn_search(ptr %29, ptr @"$sel.resize"), !dbg !1454
  store ptr %30, ptr %.inlinecache, align 8, !dbg !1454
  store ptr %27, ptr %.cachedtype, align 8, !dbg !1454
  br label %31, !dbg !1454

cache_hit:                                        ; preds = %checkok31
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1454
  br label %31, !dbg !1454

31:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %30, %cache_miss ], !dbg !1454
  %32 = icmp eq ptr %fn_phi, null, !dbg !1454
  br i1 %32, label %missing_function, label %match, !dbg !1454

missing_function:                                 ; preds = %31
  store %"char[]" { ptr @.panic_msg.76, i64 43 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg36, align 8
  %33 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %33(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 113), !dbg !1476
  unreachable, !dbg !1476

match:                                            ; preds = %31
  %34 = load ptr, ptr %24, align 8
  %35 = load ptr, ptr %old_pointer, align 8
  %36 = load i64, ptr %size, align 8
  %37 = load i64, ptr %alignment, align 8
  %38 = call i64 %fn_phi(ptr %retparam, ptr %34, ptr %35, i64 %36, i64 %37), !dbg !1476
  %not_err = icmp eq i64 %38, 0, !dbg !1476
  %39 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1476
  br i1 %39, label %after_check, label %assign_optional, !dbg !1476

assign_optional:                                  ; preds = %match
  store i64 %38, ptr %error_var, align 8, !dbg !1476
  br label %guard_block, !dbg !1476

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !1476

guard_block:                                      ; preds = %assign_optional
  %40 = load i64, ptr %error_var, align 8, !dbg !1476
  ret i64 %40, !dbg !1476

noerr_block:                                      ; preds = %after_check
  %41 = load ptr, ptr %retparam, align 8, !dbg !1476
  store ptr %41, ptr %ptradd, align 8, !dbg !1476
  store ptr %41, ptr %0, align 8, !dbg !1476
  ret i64 0, !dbg !1476

if.exit:                                          ; preds = %assert_ok15
  call void @llvm.dbg.declare(metadata ptr %header, metadata !1478, metadata !DIExpression()), !dbg !1484
  %42 = load ptr, ptr %old_pointer, align 8, !dbg !1485
  %ptradd_any = getelementptr i8, ptr %42, i64 -8, !dbg !1486
  store ptr %ptradd_any, ptr %header, align 8, !dbg !1486
  call void @llvm.dbg.declare(metadata ptr %old_size, metadata !1487, metadata !DIExpression()), !dbg !1488
  %43 = load ptr, ptr %header, align 8, !dbg !1489
  %checknull37 = icmp eq ptr %43, null, !dbg !1489
  %44 = call i1 @llvm.expect.i1(i1 %checknull37, i1 false), !dbg !1489
  br i1 %44, label %panic38, label %checkok42, !dbg !1489

checkok42:                                        ; preds = %if.exit
  %45 = load i64, ptr %43, align 8, !dbg !1489
  store i64 %45, ptr %old_size, align 8, !dbg !1489
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !1490, metadata !DIExpression()), !dbg !1491
  %46 = load ptr, ptr %self, align 8
  %47 = load i64, ptr %size, align 8
  %48 = load i64, ptr %alignment, align 8
  %49 = call i64 @std.core.mem.allocator.OnStackAllocator.acquire(ptr %retparam44, ptr %46, i64 %47, i32 0, i64 %48), !dbg !1492
  %not_err45 = icmp eq i64 %49, 0, !dbg !1492
  %50 = call i1 @llvm.expect.i1(i1 %not_err45, i1 true), !dbg !1492
  br i1 %50, label %after_check47, label %assign_optional46, !dbg !1492

assign_optional46:                                ; preds = %checkok42
  store i64 %49, ptr %error_var43, align 8, !dbg !1492
  br label %guard_block48, !dbg !1492

after_check47:                                    ; preds = %checkok42
  br label %noerr_block49, !dbg !1492

guard_block48:                                    ; preds = %assign_optional46
  %51 = load i64, ptr %error_var43, align 8, !dbg !1492
  ret i64 %51, !dbg !1492

noerr_block49:                                    ; preds = %after_check47
  %52 = load ptr, ptr %retparam44, align 8, !dbg !1492
  store ptr %52, ptr %mem, align 8, !dbg !1492
  %53 = load ptr, ptr %mem, align 8
  store ptr %53, ptr %dst, align 8
  %54 = load ptr, ptr %old_pointer, align 8
  store ptr %54, ptr %src, align 8
  %55 = load i64, ptr %old_size, align 8
  store i64 %55, ptr %len, align 8
  %56 = load i64, ptr %len, align 8, !dbg !1493
  %eq = icmp eq i64 0, %56, !dbg !1493
  br i1 %eq, label %or.phi, label %or.rhs, !dbg !1493

or.rhs:                                           ; preds = %noerr_block49
  %57 = load ptr, ptr %dst, align 8, !dbg !1497
  %58 = load i64, ptr %len, align 8, !dbg !1498
  %ptradd_any50 = getelementptr i8, ptr %57, i64 %58, !dbg !1498
  %59 = load ptr, ptr %src, align 8, !dbg !1499
  %le51 = icmp ule ptr %ptradd_any50, %59, !dbg !1497
  br label %or.phi, !dbg !1497

or.phi:                                           ; preds = %or.rhs, %noerr_block49
  %val = phi i1 [ true, %noerr_block49 ], [ %le51, %or.rhs ], !dbg !1497
  br i1 %val, label %or.phi55, label %or.rhs52, !dbg !1497

or.rhs52:                                         ; preds = %or.phi
  %60 = load ptr, ptr %src, align 8, !dbg !1500
  %61 = load i64, ptr %len, align 8, !dbg !1501
  %ptradd_any53 = getelementptr i8, ptr %60, i64 %61, !dbg !1501
  %62 = load ptr, ptr %dst, align 8, !dbg !1502
  %le54 = icmp ule ptr %ptradd_any53, %62, !dbg !1500
  br label %or.phi55, !dbg !1500

or.phi55:                                         ; preds = %or.rhs52, %or.phi
  %val56 = phi i1 [ true, %or.phi ], [ %le54, %or.rhs52 ], !dbg !1500
  br i1 %val56, label %assert_ok61, label %assert_fail57, !dbg !1500

assert_fail57:                                    ; preds = %or.phi55
  store %"char[]" { ptr @.panic_msg.18, i64 95 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.19, i64 6 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg60, align 8
  %63 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %63(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 309), !dbg !1493
  unreachable, !dbg !1493

assert_ok61:                                      ; preds = %or.phi55
  %64 = load ptr, ptr %dst, align 8, !dbg !1503
  %65 = load ptr, ptr %src, align 8, !dbg !1504
  %66 = load i64, ptr %len, align 8, !dbg !1505
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %64, ptr align 16 %65, i64 %66, i1 false), !dbg !1506
  %67 = load ptr, ptr %mem, align 8, !dbg !1507
  store ptr %67, ptr %0, align 8, !dbg !1507
  ret i64 0, !dbg !1507

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg2, align 8
  %68 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %68(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 107), !dbg !1456
  unreachable, !dbg !1456

panic21:                                          ; preds = %assert_ok20
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg24, align 8
  %69 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %69(ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, i32 113), !dbg !1475
  unreachable, !dbg !1475

panic27:                                          ; preds = %checkok25
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg30, align 8
  %70 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %70(ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, i32 113), !dbg !1476
  unreachable, !dbg !1476

panic38:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.8, i64 47 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg41, align 8
  %71 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %71(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 117), !dbg !1489
  unreachable, !dbg !1489
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.OnStackAllocator.acquire(ptr %0, ptr %1, i64 %2, i32 %3, i64 %4) #0 comdat !dbg !1508 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %size = alloca i64, align 8
  %init_type = alloca i32, align 4
  %alignment = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %aligned = alloca i8, align 1
  %total_len = alloca i64, align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %start_mem = alloca ptr, align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %unaligned_pointer_to_offset = alloca ptr, align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %mem = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %alignment32 = alloca i64, align 8
  %end = alloca i64, align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %backing_allocator = alloca %any, align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %chunk = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %allocator = alloca %any, align 8
  %allocator47 = alloca %any, align 8
  %size48 = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %.assign_list = alloca %OnStackAllocatorExtraChunk, align 8
  %indirectarg64 = alloca %"char[]", align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %error_var76 = alloca i64, align 8
  %.inlinecache78 = alloca ptr, align 8
  %.cachedtype79 = alloca ptr, align 8
  %indirectarg87 = alloca %"char[]", align 8
  %indirectarg88 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %retparam91 = alloca ptr, align 8
  %allocator96 = alloca %any, align 8
  %ptr97 = alloca ptr, align 8
  %.inlinecache102 = alloca ptr, align 8
  %.cachedtype103 = alloca ptr, align 8
  %indirectarg111 = alloca %"char[]", align 8
  %indirectarg112 = alloca %"char[]", align 8
  %indirectarg113 = alloca %"char[]", align 8
  %indirectarg119 = alloca %"char[]", align 8
  %indirectarg120 = alloca %"char[]", align 8
  %indirectarg121 = alloca %"char[]", align 8
  %indirectarg127 = alloca %"char[]", align 8
  %indirectarg128 = alloca %"char[]", align 8
  %indirectarg129 = alloca %"char[]", align 8
  %header = alloca ptr, align 8
  %indirectarg135 = alloca %"char[]", align 8
  %indirectarg136 = alloca %"char[]", align 8
  %indirectarg137 = alloca %"char[]", align 8
  %reterr139 = alloca i64, align 8
  store ptr null, ptr %.cachedtype103, align 8, !dbg !1511
  store ptr null, ptr %.cachedtype79, align 8, !dbg !1511
  store ptr null, ptr %.cachedtype, align 8, !dbg !1511
  %5 = icmp eq ptr %1, null, !dbg !1511
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1511
  br i1 %6, label %panic, label %checkok, !dbg !1511

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1512, metadata !DIExpression()), !dbg !1513
  store i64 %2, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !1514, metadata !DIExpression()), !dbg !1515
  store i32 %3, ptr %init_type, align 4
  call void @llvm.dbg.declare(metadata ptr %init_type, metadata !1516, metadata !DIExpression()), !dbg !1517
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !1518, metadata !DIExpression()), !dbg !1519
  %7 = load i64, ptr %alignment, align 8, !dbg !1520
  %le = icmp ule i64 %7, 268435456, !dbg !1520
  br i1 %le, label %assert_ok, label %assert_fail, !dbg !1520

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg5, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 124), !dbg !1520
  unreachable, !dbg !1520

assert_ok:                                        ; preds = %checkok
  %9 = load i64, ptr %size, align 8, !dbg !1522
  %lt = icmp ult i64 0, %9, !dbg !1522
  br i1 %lt, label %assert_ok10, label %assert_fail6, !dbg !1522

assert_fail6:                                     ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.15, i64 29 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg9, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 125), !dbg !1522
  unreachable, !dbg !1522

assert_ok10:                                      ; preds = %assert_ok
  call void @llvm.dbg.declare(metadata ptr %aligned, metadata !1523, metadata !DIExpression()), !dbg !1524
  %11 = load i64, ptr %alignment, align 8, !dbg !1525
  %lt11 = icmp ult i64 0, %11, !dbg !1525
  %12 = zext i1 %lt11 to i8, !dbg !1525
  store i8 %12, ptr %aligned, align 1, !dbg !1525
  %13 = load i64, ptr %alignment, align 8, !dbg !1526
  %14 = call i64 @std.core.mem.allocator.alignment_for_allocation(i64 %13) #5, !dbg !1527
  store i64 %14, ptr %alignment, align 8, !dbg !1527
  call void @llvm.dbg.declare(metadata ptr %total_len, metadata !1528, metadata !DIExpression()), !dbg !1529
  %15 = load ptr, ptr %self, align 8, !dbg !1530
  %checknull = icmp eq ptr %15, null, !dbg !1530
  %16 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1530
  br i1 %16, label %panic12, label %checkok16, !dbg !1530

checkok16:                                        ; preds = %assert_ok10
  %ptradd = getelementptr inbounds i8, ptr %15, i64 16, !dbg !1530
  %ptradd17 = getelementptr inbounds i8, ptr %ptradd, i64 8, !dbg !1530
  %17 = load i64, ptr %ptradd17, align 8, !dbg !1530
  store i64 %17, ptr %total_len, align 8, !dbg !1530
  call void @llvm.dbg.declare(metadata ptr %start_mem, metadata !1531, metadata !DIExpression()), !dbg !1532
  %18 = load ptr, ptr %self, align 8, !dbg !1533
  %checknull18 = icmp eq ptr %18, null, !dbg !1533
  %19 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !1533
  br i1 %19, label %panic19, label %checkok23, !dbg !1533

checkok23:                                        ; preds = %checkok16
  %ptradd24 = getelementptr inbounds i8, ptr %18, i64 16, !dbg !1533
  %20 = load ptr, ptr %ptradd24, align 8, !dbg !1533
  store ptr %20, ptr %start_mem, align 8, !dbg !1533
  call void @llvm.dbg.declare(metadata ptr %unaligned_pointer_to_offset, metadata !1534, metadata !DIExpression()), !dbg !1535
  %21 = load ptr, ptr %start_mem, align 8, !dbg !1536
  %22 = load ptr, ptr %self, align 8, !dbg !1537
  %checknull25 = icmp eq ptr %22, null, !dbg !1537
  %23 = call i1 @llvm.expect.i1(i1 %checknull25, i1 false), !dbg !1537
  br i1 %23, label %panic26, label %checkok30, !dbg !1537

checkok30:                                        ; preds = %checkok23
  %ptradd31 = getelementptr inbounds i8, ptr %22, i64 32, !dbg !1537
  %24 = load i64, ptr %ptradd31, align 8, !dbg !1537
  %add = add i64 %24, 8, !dbg !1536
  %ptradd_any = getelementptr i8, ptr %21, i64 %add, !dbg !1536
  store ptr %ptradd_any, ptr %unaligned_pointer_to_offset, align 8, !dbg !1536
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !1538, metadata !DIExpression()), !dbg !1539
  %25 = load ptr, ptr %unaligned_pointer_to_offset, align 8
  store ptr %25, ptr %ptr, align 8
  %26 = load i64, ptr %alignment, align 8
  store i64 %26, ptr %alignment32, align 8
  %27 = load ptr, ptr %ptr, align 8, !dbg !1540
  %ptrxi = ptrtoint ptr %27 to i64, !dbg !1540
  %28 = load i64, ptr %alignment32, align 8, !dbg !1543
  %29 = call i64 @std.core.mem.aligned_offset(i64 %ptrxi, i64 %28), !dbg !1544
  %intptr = inttoptr i64 %29 to ptr, !dbg !1544
  store ptr %intptr, ptr %mem, align 8, !dbg !1544
  call void @llvm.dbg.declare(metadata ptr %end, metadata !1545, metadata !DIExpression()), !dbg !1546
  %30 = load ptr, ptr %mem, align 8, !dbg !1547
  %31 = load ptr, ptr %self, align 8, !dbg !1548
  %checknull33 = icmp eq ptr %31, null, !dbg !1548
  %32 = call i1 @llvm.expect.i1(i1 %checknull33, i1 false), !dbg !1548
  br i1 %32, label %panic34, label %checkok38, !dbg !1548

checkok38:                                        ; preds = %checkok30
  %ptradd39 = getelementptr inbounds i8, ptr %31, i64 16, !dbg !1548
  %33 = load ptr, ptr %ptradd39, align 8, !dbg !1548
  %34 = ptrtoint ptr %33 to i64, !dbg !1549
  %35 = ptrtoint ptr %30 to i64, !dbg !1549
  %36 = sub i64 %35, %34, !dbg !1549
  %37 = sdiv exact i64 %36, 1, !dbg !1549
  %38 = load i64, ptr %size, align 8, !dbg !1550
  %add40 = add i64 %37, %38, !dbg !1549
  store i64 %add40, ptr %end, align 8, !dbg !1549
  call void @llvm.dbg.declare(metadata ptr %backing_allocator, metadata !1551, metadata !DIExpression()), !dbg !1552
  %39 = load ptr, ptr %self, align 8, !dbg !1553
  %checknull41 = icmp eq ptr %39, null, !dbg !1553
  %40 = call i1 @llvm.expect.i1(i1 %checknull41, i1 false), !dbg !1553
  br i1 %40, label %panic42, label %checkok46, !dbg !1553

checkok46:                                        ; preds = %checkok38
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %backing_allocator, ptr align 8 %39, i32 16, i1 false), !dbg !1553
  %41 = load i64, ptr %end, align 8, !dbg !1554
  %42 = load i64, ptr %total_len, align 8, !dbg !1555
  %gt = icmp ugt i64 %41, %42, !dbg !1554
  br i1 %gt, label %if.then, label %if.exit124, !dbg !1554

if.then:                                          ; preds = %checkok46
  call void @llvm.dbg.declare(metadata ptr %chunk, metadata !1556, metadata !DIExpression()), !dbg !1558
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %backing_allocator, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator47, ptr align 8 %allocator, i32 16, i1 false)
  store i64 24, ptr %size48, align 8
  %43 = load i64, ptr %size48, align 8, !dbg !1559
  %not = icmp eq i64 %43, 0, !dbg !1559
  br i1 %not, label %if.then49, label %if.exit, !dbg !1559

if.then49:                                        ; preds = %if.then
  store ptr null, ptr %blockret, align 8, !dbg !1564
  br label %expr_block.exit, !dbg !1564

if.exit:                                          ; preds = %if.then
  %ptradd50 = getelementptr inbounds i8, ptr %allocator47, i64 8, !dbg !1565
  %44 = load i64, ptr %ptradd50, align 8, !dbg !1565
  %45 = inttoptr i64 %44 to ptr, !dbg !1565
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1511
  %46 = icmp eq ptr %45, %type, !dbg !1511
  br i1 %46, label %cache_hit, label %cache_miss, !dbg !1511

cache_miss:                                       ; preds = %if.exit
  %ptradd51 = getelementptr inbounds i8, ptr %45, i64 16, !dbg !1511
  %47 = load ptr, ptr %ptradd51, align 8, !dbg !1511
  %48 = call ptr @.dyn_search(ptr %47, ptr @"$sel.acquire"), !dbg !1511
  store ptr %48, ptr %.inlinecache, align 8, !dbg !1511
  store ptr %45, ptr %.cachedtype, align 8, !dbg !1511
  br label %49, !dbg !1511

cache_hit:                                        ; preds = %if.exit
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1511
  br label %49, !dbg !1511

49:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %48, %cache_miss ], !dbg !1511
  %50 = icmp eq ptr %fn_phi, null, !dbg !1511
  br i1 %50, label %missing_function, label %match, !dbg !1511

missing_function:                                 ; preds = %49
  store %"char[]" { ptr @.panic_msg.38, i64 44 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg54, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 68), !dbg !1567
  unreachable, !dbg !1567

match:                                            ; preds = %49
  %52 = load ptr, ptr %allocator47, align 8
  %53 = load i64, ptr %size48, align 8
  %54 = call i64 %fn_phi(ptr %retparam, ptr %52, i64 %53, i32 0, i64 0), !dbg !1567
  %not_err = icmp eq i64 %54, 0, !dbg !1567
  %55 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1567
  br i1 %55, label %after_check, label %assign_optional, !dbg !1567

assign_optional:                                  ; preds = %match
  store i64 %54, ptr %error_var, align 8, !dbg !1567
  br label %guard_block, !dbg !1567

after_check:                                      ; preds = %match
  %56 = load ptr, ptr %retparam, align 8, !dbg !1567
  store ptr %56, ptr %blockret, align 8, !dbg !1567
  br label %expr_block.exit, !dbg !1567

expr_block.exit:                                  ; preds = %after_check, %if.then49
  %57 = load ptr, ptr %blockret, align 8, !dbg !1567
  br label %noerr_block, !dbg !1567

guard_block:                                      ; preds = %assign_optional
  %58 = load i64, ptr %error_var, align 8, !dbg !1567
  ret i64 %58, !dbg !1567

noerr_block:                                      ; preds = %expr_block.exit
  store ptr %57, ptr %chunk, align 8, !dbg !1567
  %59 = load ptr, ptr %chunk, align 8, !dbg !1568
  %checknull55 = icmp eq ptr %59, null, !dbg !1568
  %60 = call i1 @llvm.expect.i1(i1 %checknull55, i1 false), !dbg !1568
  br i1 %60, label %panic56, label %checkok60, !dbg !1568

checkok60:                                        ; preds = %noerr_block
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 24, i1 false)
  %ptradd61 = getelementptr inbounds i8, ptr %.assign_list, i64 8
  %61 = load ptr, ptr %self, align 8, !dbg !1569
  %checknull62 = icmp eq ptr %61, null, !dbg !1569
  %62 = call i1 @llvm.expect.i1(i1 %checknull62, i1 false), !dbg !1569
  br i1 %62, label %panic63, label %checkok67, !dbg !1569

checkok67:                                        ; preds = %checkok60
  %ptradd68 = getelementptr inbounds i8, ptr %61, i64 40, !dbg !1569
  %63 = load ptr, ptr %ptradd68, align 8, !dbg !1569
  store ptr %63, ptr %ptradd61, align 8, !dbg !1569
  %64 = load i8, ptr %aligned, align 1, !dbg !1570
  store i8 %64, ptr %.assign_list, align 8, !dbg !1570
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %59, ptr align 8 %.assign_list, i32 24, i1 false), !dbg !1570
  %65 = load ptr, ptr %chunk, align 8, !dbg !1571
  %checknull69 = icmp eq ptr %65, null, !dbg !1571
  %66 = call i1 @llvm.expect.i1(i1 %checknull69, i1 false), !dbg !1571
  br i1 %66, label %panic70, label %checkok74, !dbg !1571

checkok74:                                        ; preds = %checkok67
  %ptradd75 = getelementptr inbounds i8, ptr %65, i64 16, !dbg !1571
  %67 = load i8, ptr %aligned, align 1, !dbg !1572
  %68 = trunc i8 %67 to i1, !dbg !1572
  br i1 %68, label %cond.lhs, label %cond.rhs, !dbg !1572

cond.lhs:                                         ; preds = %checkok74
  %69 = load i64, ptr %alignment, align 8, !dbg !1573
  br label %cond.phi, !dbg !1573

cond.rhs:                                         ; preds = %checkok74
  br label %cond.phi, !dbg !1574

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i64 [ %69, %cond.lhs ], [ 0, %cond.rhs ], !dbg !1574
  %ptradd77 = getelementptr inbounds i8, ptr %backing_allocator, i64 8, !dbg !1574
  %70 = load i64, ptr %ptradd77, align 8, !dbg !1574
  %71 = inttoptr i64 %70 to ptr, !dbg !1574
  %type80 = load ptr, ptr %.cachedtype79, align 8, !dbg !1511
  %72 = icmp eq ptr %71, %type80, !dbg !1511
  br i1 %72, label %cache_hit83, label %cache_miss81, !dbg !1511

cache_miss81:                                     ; preds = %cond.phi
  %ptradd82 = getelementptr inbounds i8, ptr %71, i64 16, !dbg !1511
  %73 = load ptr, ptr %ptradd82, align 8, !dbg !1511
  %74 = call ptr @.dyn_search(ptr %73, ptr @"$sel.acquire"), !dbg !1511
  store ptr %74, ptr %.inlinecache78, align 8, !dbg !1511
  store ptr %71, ptr %.cachedtype79, align 8, !dbg !1511
  br label %75, !dbg !1511

cache_hit83:                                      ; preds = %cond.phi
  %cache_hit_fn84 = load ptr, ptr %.inlinecache78, align 8, !dbg !1511
  br label %75, !dbg !1511

75:                                               ; preds = %cache_hit83, %cache_miss81
  %fn_phi85 = phi ptr [ %cache_hit_fn84, %cache_hit83 ], [ %74, %cache_miss81 ], !dbg !1511
  %76 = icmp eq ptr %fn_phi85, null, !dbg !1511
  br i1 %76, label %missing_function86, label %match90, !dbg !1511

missing_function86:                               ; preds = %75
  store %"char[]" { ptr @.panic_msg.38, i64 44 }, ptr %indirectarg87, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg88, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg89, align 8
  %77 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %77(ptr align 8 %indirectarg87, ptr align 8 %indirectarg88, ptr align 8 %indirectarg89, i32 144), !dbg !1575
  unreachable, !dbg !1575

match90:                                          ; preds = %75
  %78 = load ptr, ptr %backing_allocator, align 8
  %79 = load i64, ptr %size, align 8
  %80 = load i32, ptr %init_type, align 4
  %81 = call i64 %fn_phi85(ptr %retparam91, ptr %78, i64 %79, i32 %80, i64 %val), !dbg !1575
  %not_err92 = icmp eq i64 %81, 0, !dbg !1575
  %82 = call i1 @llvm.expect.i1(i1 %not_err92, i1 true), !dbg !1575
  br i1 %82, label %after_check94, label %assign_optional93, !dbg !1575

assign_optional93:                                ; preds = %match90
  store i64 %81, ptr %error_var76, align 8, !dbg !1575
  br label %guard_block95, !dbg !1575

after_check94:                                    ; preds = %match90
  br label %noerr_block116, !dbg !1575

guard_block95:                                    ; preds = %assign_optional93
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator96, ptr align 8 %backing_allocator, i32 16, i1 false)
  %83 = load ptr, ptr %chunk, align 8, !dbg !1576
  store ptr %83, ptr %ptr97, align 8
  %84 = load ptr, ptr %ptr97, align 8, !dbg !1578
  %not98 = icmp eq ptr %84, null, !dbg !1578
  br i1 %not98, label %if.then99, label %if.exit100, !dbg !1578

if.then99:                                        ; preds = %guard_block95
  br label %expr_block.exit115, !dbg !1581

if.exit100:                                       ; preds = %guard_block95
  %ptradd101 = getelementptr inbounds i8, ptr %allocator96, i64 8, !dbg !1582
  %85 = load i64, ptr %ptradd101, align 8, !dbg !1582
  %86 = inttoptr i64 %85 to ptr, !dbg !1582
  %type104 = load ptr, ptr %.cachedtype103, align 8, !dbg !1511
  %87 = icmp eq ptr %86, %type104, !dbg !1511
  br i1 %87, label %cache_hit107, label %cache_miss105, !dbg !1511

cache_miss105:                                    ; preds = %if.exit100
  %ptradd106 = getelementptr inbounds i8, ptr %86, i64 16, !dbg !1511
  %88 = load ptr, ptr %ptradd106, align 8, !dbg !1511
  %89 = call ptr @.dyn_search(ptr %88, ptr @"$sel.release"), !dbg !1511
  store ptr %89, ptr %.inlinecache102, align 8, !dbg !1511
  store ptr %86, ptr %.cachedtype103, align 8, !dbg !1511
  br label %90, !dbg !1511

cache_hit107:                                     ; preds = %if.exit100
  %cache_hit_fn108 = load ptr, ptr %.inlinecache102, align 8, !dbg !1511
  br label %90, !dbg !1511

90:                                               ; preds = %cache_hit107, %cache_miss105
  %fn_phi109 = phi ptr [ %cache_hit_fn108, %cache_hit107 ], [ %89, %cache_miss105 ], !dbg !1511
  %91 = icmp eq ptr %fn_phi109, null, !dbg !1511
  br i1 %91, label %missing_function110, label %match114, !dbg !1511

missing_function110:                              ; preds = %90
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg111, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg112, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg113, align 8
  %92 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %92(ptr align 8 %indirectarg111, ptr align 8 %indirectarg112, ptr align 8 %indirectarg113, i32 105), !dbg !1583
  unreachable, !dbg !1583

match114:                                         ; preds = %90
  %93 = load ptr, ptr %allocator96, align 8, !dbg !1583
  %94 = load ptr, ptr %ptr97, align 8, !dbg !1583
  call void %fn_phi109(ptr %93, ptr %94, i8 zeroext 0), !dbg !1583
  br label %expr_block.exit115, !dbg !1583

expr_block.exit115:                               ; preds = %match114, %if.then99
  %95 = load i64, ptr %error_var76, align 8, !dbg !1583
  ret i64 %95, !dbg !1583

noerr_block116:                                   ; preds = %after_check94
  %96 = load ptr, ptr %retparam91, align 8, !dbg !1583
  store ptr %96, ptr %ptradd75, align 8, !dbg !1583
  %97 = load ptr, ptr %self, align 8, !dbg !1584
  %checknull117 = icmp eq ptr %97, null, !dbg !1584
  %98 = call i1 @llvm.expect.i1(i1 %checknull117, i1 false), !dbg !1584
  br i1 %98, label %panic118, label %checkok122, !dbg !1584

checkok122:                                       ; preds = %noerr_block116
  %ptradd123 = getelementptr inbounds i8, ptr %97, i64 40, !dbg !1584
  %99 = load ptr, ptr %chunk, align 8, !dbg !1586
  store ptr %99, ptr %ptradd123, align 8, !dbg !1586
  store ptr %96, ptr %0, align 8, !dbg !1586
  ret i64 0, !dbg !1586

if.exit124:                                       ; preds = %checkok46
  %100 = load ptr, ptr %self, align 8, !dbg !1587
  %checknull125 = icmp eq ptr %100, null, !dbg !1587
  %101 = call i1 @llvm.expect.i1(i1 %checknull125, i1 false), !dbg !1587
  br i1 %101, label %panic126, label %checkok130, !dbg !1587

checkok130:                                       ; preds = %if.exit124
  %ptradd131 = getelementptr inbounds i8, ptr %100, i64 32, !dbg !1587
  %102 = load i64, ptr %end, align 8, !dbg !1588
  store i64 %102, ptr %ptradd131, align 8, !dbg !1588
  call void @llvm.dbg.declare(metadata ptr %header, metadata !1589, metadata !DIExpression()), !dbg !1590
  %103 = load ptr, ptr %mem, align 8, !dbg !1591
  %ptradd_any132 = getelementptr i8, ptr %103, i64 -8, !dbg !1592
  store ptr %ptradd_any132, ptr %header, align 8, !dbg !1592
  %104 = load ptr, ptr %header, align 8, !dbg !1593
  %checknull133 = icmp eq ptr %104, null, !dbg !1593
  %105 = call i1 @llvm.expect.i1(i1 %checknull133, i1 false), !dbg !1593
  br i1 %105, label %panic134, label %checkok138, !dbg !1593

checkok138:                                       ; preds = %checkok130
  %106 = load i64, ptr %size, align 8, !dbg !1594
  store i64 %106, ptr %104, align 8, !dbg !1594
  %107 = load ptr, ptr %mem, align 8, !dbg !1595
  store ptr %107, ptr %0, align 8, !dbg !1595
  ret i64 0, !dbg !1595

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg2, align 8
  %108 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %108(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 127), !dbg !1513
  unreachable, !dbg !1513

panic12:                                          ; preds = %assert_ok10
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg15, align 8
  %109 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %109(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 131), !dbg !1530
  unreachable, !dbg !1530

panic19:                                          ; preds = %checkok16
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg22, align 8
  %110 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %110(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 132), !dbg !1533
  unreachable, !dbg !1533

panic26:                                          ; preds = %checkok23
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg29, align 8
  %111 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %111(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 133), !dbg !1537
  unreachable, !dbg !1537

panic34:                                          ; preds = %checkok30
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg37, align 8
  %112 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %112(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 135), !dbg !1548
  unreachable, !dbg !1548

panic42:                                          ; preds = %checkok38
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg45, align 8
  %113 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %113(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 136), !dbg !1553
  unreachable, !dbg !1553

panic56:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg59, align 8
  %114 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %114(ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, i32 143), !dbg !1568
  unreachable, !dbg !1568

panic63:                                          ; preds = %checkok60
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg64, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg65, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg66, align 8
  %115 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %115(ptr align 8 %indirectarg64, ptr align 8 %indirectarg65, ptr align 8 %indirectarg66, i32 143), !dbg !1569
  unreachable, !dbg !1569

panic70:                                          ; preds = %checkok67
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg72, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg73, align 8
  %116 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %116(ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, ptr align 8 %indirectarg73, i32 144), !dbg !1571
  unreachable, !dbg !1571

panic118:                                         ; preds = %noerr_block116
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg119, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg120, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg121, align 8
  %117 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %117(ptr align 8 %indirectarg119, ptr align 8 %indirectarg120, ptr align 8 %indirectarg121, i32 142), !dbg !1584
  unreachable, !dbg !1584

panic126:                                         ; preds = %if.exit124
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg127, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg128, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg129, align 8
  %118 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %118(ptr align 8 %indirectarg127, ptr align 8 %indirectarg128, ptr align 8 %indirectarg129, i32 146), !dbg !1587
  unreachable, !dbg !1587

panic134:                                         ; preds = %checkok130
  store %"char[]" { ptr @.panic_msg.8, i64 47 }, ptr %indirectarg135, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg136, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg137, align 8
  %119 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %119(ptr align 8 %indirectarg135, ptr align 8 %indirectarg136, ptr align 8 %indirectarg137, i32 148), !dbg !1593
  unreachable, !dbg !1593
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i8 @std.core.mem.allocator.allocation_in_stack_mem(ptr %0, ptr %1) #0 !dbg !1596 {
entry:
  %a = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg15 = alloca %"any[]", align 8
  %taddr19 = alloca i64, align 8
  %taddr20 = alloca i64, align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %varargslots24 = alloca [2 x %any], align 16
  %indirectarg27 = alloca %"any[]", align 8
  store ptr %0, ptr %a, align 8
  call void @llvm.dbg.declare(metadata ptr %a, metadata !1599, metadata !DIExpression()), !dbg !1600
  store ptr %1, ptr %ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr, metadata !1601, metadata !DIExpression()), !dbg !1602
  %2 = load ptr, ptr %ptr, align 8, !dbg !1603
  %3 = load ptr, ptr %a, align 8, !dbg !1604
  %checknull = icmp eq ptr %3, null, !dbg !1604
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1604
  br i1 %4, label %panic, label %checkok, !dbg !1604

checkok:                                          ; preds = %entry
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !1604
  %5 = load ptr, ptr %ptradd, align 8, !dbg !1604
  %ge = icmp uge ptr %2, %5, !dbg !1603
  br i1 %ge, label %and.rhs, label %and.phi, !dbg !1603

and.rhs:                                          ; preds = %checkok
  %6 = load ptr, ptr %ptr, align 8, !dbg !1605
  %7 = load ptr, ptr %a, align 8, !dbg !1606
  %checknull3 = icmp eq ptr %7, null, !dbg !1606
  %8 = call i1 @llvm.expect.i1(i1 %checknull3, i1 false), !dbg !1606
  br i1 %8, label %panic4, label %checkok8, !dbg !1606

checkok8:                                         ; preds = %and.rhs
  %ptradd9 = getelementptr inbounds i8, ptr %7, i64 16, !dbg !1606
  %ptradd10 = getelementptr inbounds i8, ptr %ptradd9, i64 8, !dbg !1606
  %9 = load i64, ptr %ptradd10, align 8, !dbg !1606
  %10 = load ptr, ptr %ptradd9, align 8, !dbg !1606
  %11 = sub nuw i64 %9, 1, !dbg !1607
  %lt = icmp slt i64 %11, 0, !dbg !1607
  %12 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !1607
  br i1 %12, label %panic11, label %checkok16, !dbg !1607

checkok16:                                        ; preds = %checkok8
  %ge17 = icmp sge i64 %11, %9, !dbg !1607
  %13 = call i1 @llvm.expect.i1(i1 %ge17, i1 false), !dbg !1607
  br i1 %13, label %panic18, label %checkok28, !dbg !1607

checkok28:                                        ; preds = %checkok16
  %ptradd29 = getelementptr inbounds i8, ptr %10, i64 %11, !dbg !1607
  %le = icmp ule ptr %6, %ptradd29, !dbg !1605
  br label %and.phi, !dbg !1605

and.phi:                                          ; preds = %checkok28, %checkok
  %val = phi i1 [ false, %checkok ], [ %le, %checkok28 ], !dbg !1605
  %14 = zext i1 %val to i8, !dbg !1605
  ret i8 %14, !dbg !1605

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.64, i64 42 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.66, i64 23 }, ptr %indirectarg2, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 70), !dbg !1604
  unreachable, !dbg !1604

panic4:                                           ; preds = %and.rhs
  store %"char[]" { ptr @.panic_msg.64, i64 42 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.66, i64 23 }, ptr %indirectarg7, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 70), !dbg !1606
  unreachable, !dbg !1606

panic11:                                          ; preds = %checkok8
  store i64 %11, ptr %taddr, align 8
  %17 = insertvalue %any undef, ptr %taddr, 0
  %18 = insertvalue %any %17, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.67, i64 38 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.66, i64 23 }, ptr %indirectarg14, align 8
  store %any %18, ptr %varargslots, align 16
  %19 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %19, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg15, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 70, ptr align 8 %indirectarg15), !dbg !1607
  unreachable, !dbg !1607

panic18:                                          ; preds = %checkok16
  store i64 %9, ptr %taddr19, align 8
  %20 = insertvalue %any undef, ptr %taddr19, 0
  %21 = insertvalue %any %20, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %11, ptr %taddr20, align 8
  %22 = insertvalue %any undef, ptr %taddr20, 0
  %23 = insertvalue %any %22, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.9, i64 59 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.66, i64 23 }, ptr %indirectarg23, align 8
  store %any %21, ptr %varargslots24, align 16
  %ptradd25 = getelementptr inbounds i8, ptr %varargslots24, i64 16
  store %any %23, ptr %ptradd25, align 16
  %24 = insertvalue %"any[]" undef, ptr %varargslots24, 0
  %"$$temp26" = insertvalue %"any[]" %24, i64 2, 1
  store %"any[]" %"$$temp26", ptr %indirectarg27, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 70, ptr align 8 %indirectarg27), !dbg !1607
  unreachable, !dbg !1607
}

; Function Attrs: nounwind ssp uwtable
define internal void @std.core.mem.allocator.on_stack_allocator_remove_chunk(ptr %0, ptr %1) #0 !dbg !1608 {
entry:
  %a = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %chunk = alloca ptr, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %addr = alloca ptr, align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %allocator = alloca %any, align 8
  %ptr36 = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %string = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8
  store ptr %0, ptr %a, align 8
  call void @llvm.dbg.declare(metadata ptr %a, metadata !1611, metadata !DIExpression()), !dbg !1612
  store ptr %1, ptr %ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr, metadata !1613, metadata !DIExpression()), !dbg !1614
  call void @llvm.dbg.declare(metadata ptr %chunk, metadata !1615, metadata !DIExpression()), !dbg !1616
  %2 = load ptr, ptr %a, align 8, !dbg !1617
  %checknull = icmp eq ptr %2, null, !dbg !1617
  %3 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1617
  br i1 %3, label %panic, label %checkok, !dbg !1617

checkok:                                          ; preds = %entry
  %ptradd = getelementptr inbounds i8, ptr %2, i64 40, !dbg !1617
  %4 = load ptr, ptr %ptradd, align 8, !dbg !1617
  store ptr %4, ptr %chunk, align 8, !dbg !1617
  call void @llvm.dbg.declare(metadata ptr %addr, metadata !1618, metadata !DIExpression()), !dbg !1620
  %5 = load ptr, ptr %a, align 8, !dbg !1621
  %checknull3 = icmp eq ptr %5, null, !dbg !1621
  %6 = call i1 @llvm.expect.i1(i1 %checknull3, i1 false), !dbg !1621
  br i1 %6, label %panic4, label %checkok8, !dbg !1621

checkok8:                                         ; preds = %checkok
  %ptradd9 = getelementptr inbounds i8, ptr %5, i64 40, !dbg !1621
  store ptr %ptradd9, ptr %addr, align 8, !dbg !1621
  br label %loop.cond, !dbg !1622

loop.cond:                                        ; preds = %checkok56, %checkok8
  %7 = load ptr, ptr %chunk, align 8, !dbg !1623
  %ptrbool = icmp ne ptr %7, null, !dbg !1623
  br i1 %ptrbool, label %loop.body, label %loop.exit, !dbg !1623

loop.body:                                        ; preds = %loop.cond
  %8 = load ptr, ptr %chunk, align 8, !dbg !1625
  %checknull10 = icmp eq ptr %8, null, !dbg !1625
  %9 = call i1 @llvm.expect.i1(i1 %checknull10, i1 false), !dbg !1625
  br i1 %9, label %panic11, label %checkok15, !dbg !1625

checkok15:                                        ; preds = %loop.body
  %ptradd16 = getelementptr inbounds i8, ptr %8, i64 16, !dbg !1625
  %10 = load ptr, ptr %ptradd16, align 8, !dbg !1625
  %11 = load ptr, ptr %ptr, align 8, !dbg !1627
  %eq = icmp eq ptr %10, %11, !dbg !1625
  br i1 %eq, label %if.then, label %if.exit43, !dbg !1625

if.then:                                          ; preds = %checkok15
  %12 = load ptr, ptr %addr, align 8, !dbg !1628
  %checknull17 = icmp eq ptr %12, null, !dbg !1628
  %13 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !1628
  br i1 %13, label %panic18, label %checkok22, !dbg !1628

checkok22:                                        ; preds = %if.then
  %14 = load ptr, ptr %chunk, align 8, !dbg !1630
  %checknull23 = icmp eq ptr %14, null, !dbg !1630
  %15 = call i1 @llvm.expect.i1(i1 %checknull23, i1 false), !dbg !1630
  br i1 %15, label %panic24, label %checkok28, !dbg !1630

checkok28:                                        ; preds = %checkok22
  %ptradd29 = getelementptr inbounds i8, ptr %14, i64 8, !dbg !1630
  %16 = load ptr, ptr %ptradd29, align 8, !dbg !1630
  store ptr %16, ptr %12, align 8, !dbg !1630
  %17 = load ptr, ptr %a, align 8, !dbg !1631
  %checknull30 = icmp eq ptr %17, null, !dbg !1631
  %18 = call i1 @llvm.expect.i1(i1 %checknull30, i1 false), !dbg !1631
  br i1 %18, label %panic31, label %checkok35, !dbg !1631

checkok35:                                        ; preds = %checkok28
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %17, i32 16, i1 false)
  %19 = load ptr, ptr %chunk, align 8, !dbg !1632
  store ptr %19, ptr %ptr36, align 8
  %20 = load ptr, ptr %ptr36, align 8, !dbg !1633
  %not = icmp eq ptr %20, null, !dbg !1633
  br i1 %not, label %if.then37, label %if.exit, !dbg !1633

if.then37:                                        ; preds = %checkok35
  br label %expr_block.exit, !dbg !1636

if.exit:                                          ; preds = %checkok35
  %ptradd38 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !1637
  %21 = load i64, ptr %ptradd38, align 8, !dbg !1637
  %22 = inttoptr i64 %21 to ptr, !dbg !1637
  %type = load ptr, ptr %.cachedtype, align 8
  %23 = icmp eq ptr %22, %type
  br i1 %23, label %cache_hit, label %cache_miss

cache_miss:                                       ; preds = %if.exit
  %ptradd39 = getelementptr inbounds i8, ptr %22, i64 16
  %24 = load ptr, ptr %ptradd39, align 8
  %25 = call ptr @.dyn_search(ptr %24, ptr @"$sel.release")
  store ptr %25, ptr %.inlinecache, align 8
  store ptr %22, ptr %.cachedtype, align 8
  br label %26

cache_hit:                                        ; preds = %if.exit
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8
  br label %26

26:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %25, %cache_miss ]
  %27 = icmp eq ptr %fn_phi, null
  br i1 %27, label %missing_function, label %match

missing_function:                                 ; preds = %26
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.func.68, i64 31 }, ptr %indirectarg42, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, i32 105), !dbg !1638
  unreachable, !dbg !1638

match:                                            ; preds = %26
  %29 = load ptr, ptr %allocator, align 8, !dbg !1638
  %30 = load ptr, ptr %ptr36, align 8, !dbg !1638
  call void %fn_phi(ptr %29, ptr %30, i8 zeroext 0), !dbg !1638
  br label %expr_block.exit, !dbg !1638

expr_block.exit:                                  ; preds = %match, %if.then37
  ret void, !dbg !1639

if.exit43:                                        ; preds = %checkok15
  %31 = load ptr, ptr %chunk, align 8, !dbg !1640
  %checknull44 = icmp eq ptr %31, null, !dbg !1640
  %32 = call i1 @llvm.expect.i1(i1 %checknull44, i1 false), !dbg !1640
  br i1 %32, label %panic45, label %checkok49, !dbg !1640

checkok49:                                        ; preds = %if.exit43
  %ptradd50 = getelementptr inbounds i8, ptr %31, i64 8, !dbg !1640
  store ptr %ptradd50, ptr %addr, align 8, !dbg !1640
  %33 = load ptr, ptr %addr, align 8, !dbg !1641
  %checknull51 = icmp eq ptr %33, null, !dbg !1641
  %34 = call i1 @llvm.expect.i1(i1 %checknull51, i1 false), !dbg !1641
  br i1 %34, label %panic52, label %checkok56, !dbg !1641

checkok56:                                        ; preds = %checkok49
  %35 = load ptr, ptr %33, align 8, !dbg !1641
  store ptr %35, ptr %chunk, align 8, !dbg !1641
  br label %loop.cond, !dbg !1641

loop.exit:                                        ; preds = %loop.cond
  store %"char[]" { ptr @.str.70, i64 13 }, ptr %string, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg57, ptr align 8 %string, i32 16, i1 false)
  store %"char[]" { ptr @.str.71, i64 21 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.str.72, i64 31 }, ptr %indirectarg59, align 8
  store %"any[]" zeroinitializer, ptr %indirectarg60, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, i32 88, ptr align 8 %indirectarg60), !dbg !1642
  unreachable, !dbg !1646

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.64, i64 42 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.68, i64 31 }, ptr %indirectarg2, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 75), !dbg !1617
  unreachable, !dbg !1617

panic4:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.64, i64 42 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.68, i64 31 }, ptr %indirectarg7, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 76), !dbg !1621
  unreachable, !dbg !1621

panic11:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.68, i64 31 }, ptr %indirectarg14, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 79), !dbg !1625
  unreachable, !dbg !1625

panic18:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.69, i64 45 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.68, i64 31 }, ptr %indirectarg21, align 8
  %39 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %39(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 81), !dbg !1628
  unreachable, !dbg !1628

panic24:                                          ; preds = %checkok22
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.68, i64 31 }, ptr %indirectarg27, align 8
  %40 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %40(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 81), !dbg !1630
  unreachable, !dbg !1630

panic31:                                          ; preds = %checkok28
  store %"char[]" { ptr @.panic_msg.64, i64 42 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.68, i64 31 }, ptr %indirectarg34, align 8
  %41 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %41(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 82), !dbg !1631
  unreachable, !dbg !1631

panic45:                                          ; preds = %if.exit43
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.func.68, i64 31 }, ptr %indirectarg48, align 8
  %42 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %42(ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, i32 85), !dbg !1640
  unreachable, !dbg !1640

panic52:                                          ; preds = %checkok49
  store %"char[]" { ptr @.panic_msg.69, i64 45 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.func.68, i64 31 }, ptr %indirectarg55, align 8
  %43 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %43(ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, i32 86), !dbg !1641
  unreachable, !dbg !1641
}

; Function Attrs: nounwind ssp uwtable
define internal ptr @std.core.mem.allocator.on_stack_allocator_find_chunk(ptr %0, ptr %1) #0 !dbg !1647 {
entry:
  %a = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %chunk = alloca ptr, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  store ptr %0, ptr %a, align 8
  call void @llvm.dbg.declare(metadata ptr %a, metadata !1650, metadata !DIExpression()), !dbg !1651
  store ptr %1, ptr %ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr, metadata !1652, metadata !DIExpression()), !dbg !1653
  call void @llvm.dbg.declare(metadata ptr %chunk, metadata !1654, metadata !DIExpression()), !dbg !1655
  %2 = load ptr, ptr %a, align 8, !dbg !1656
  %checknull = icmp eq ptr %2, null, !dbg !1656
  %3 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1656
  br i1 %3, label %panic, label %checkok, !dbg !1656

checkok:                                          ; preds = %entry
  %ptradd = getelementptr inbounds i8, ptr %2, i64 40, !dbg !1656
  %4 = load ptr, ptr %ptradd, align 8, !dbg !1656
  store ptr %4, ptr %chunk, align 8, !dbg !1656
  br label %loop.cond, !dbg !1657

loop.cond:                                        ; preds = %checkok15, %checkok
  %5 = load ptr, ptr %chunk, align 8, !dbg !1658
  %ptrbool = icmp ne ptr %5, null, !dbg !1658
  br i1 %ptrbool, label %loop.body, label %loop.exit, !dbg !1658

loop.body:                                        ; preds = %loop.cond
  %6 = load ptr, ptr %chunk, align 8, !dbg !1660
  %checknull3 = icmp eq ptr %6, null, !dbg !1660
  %7 = call i1 @llvm.expect.i1(i1 %checknull3, i1 false), !dbg !1660
  br i1 %7, label %panic4, label %checkok8, !dbg !1660

checkok8:                                         ; preds = %loop.body
  %ptradd9 = getelementptr inbounds i8, ptr %6, i64 16, !dbg !1660
  %8 = load ptr, ptr %ptradd9, align 8, !dbg !1660
  %9 = load ptr, ptr %ptr, align 8, !dbg !1662
  %eq = icmp eq ptr %8, %9, !dbg !1660
  br i1 %eq, label %if.then, label %if.exit, !dbg !1660

if.then:                                          ; preds = %checkok8
  %10 = load ptr, ptr %chunk, align 8, !dbg !1663
  ret ptr %10, !dbg !1663

if.exit:                                          ; preds = %checkok8
  %11 = load ptr, ptr %chunk, align 8, !dbg !1664
  %checknull10 = icmp eq ptr %11, null, !dbg !1664
  %12 = call i1 @llvm.expect.i1(i1 %checknull10, i1 false), !dbg !1664
  br i1 %12, label %panic11, label %checkok15, !dbg !1664

checkok15:                                        ; preds = %if.exit
  %ptradd16 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !1664
  %13 = load ptr, ptr %ptradd16, align 8, !dbg !1664
  store ptr %13, ptr %chunk, align 8, !dbg !1664
  br label %loop.cond, !dbg !1664

loop.exit:                                        ; preds = %loop.cond
  ret ptr null, !dbg !1665

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.64, i64 42 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.73, i64 29 }, ptr %indirectarg2, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 93), !dbg !1656
  unreachable, !dbg !1656

panic4:                                           ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.73, i64 29 }, ptr %indirectarg7, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 96), !dbg !1660
  unreachable, !dbg !1660

panic11:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.65, i64 21 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.73, i64 29 }, ptr %indirectarg14, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 97), !dbg !1664
  unreachable, !dbg !1664
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.TempAllocator.destroy(ptr %0) #0 comdat !dbg !1666 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %allocator = alloca %any, align 8
  %ptr = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1669
  %1 = icmp eq ptr %0, null, !dbg !1669
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1669
  br i1 %2, label %panic, label %checkok, !dbg !1669

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1670, metadata !DIExpression()), !dbg !1671
  %3 = load ptr, ptr %self, align 8, !dbg !1672
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %3, i64 0), !dbg !1673
  %4 = load ptr, ptr %self, align 8, !dbg !1674
  %checknull = icmp eq ptr %4, null, !dbg !1674
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1674
  br i1 %5, label %panic3, label %checkok7, !dbg !1674

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !1674
  %6 = load ptr, ptr %ptradd, align 8, !dbg !1674
  %ptrbool = icmp ne ptr %6, null, !dbg !1674
  br i1 %ptrbool, label %if.then, label %if.exit, !dbg !1674

if.then:                                          ; preds = %checkok7
  %7 = load ptr, ptr %self, align 8, !dbg !1675
  %checknull8 = icmp eq ptr %7, null, !dbg !1675
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !1675
  br i1 %8, label %panic9, label %checkok13, !dbg !1675

checkok13:                                        ; preds = %if.then
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 16, !dbg !1675
  %9 = load ptr, ptr %self, align 8, !dbg !1675
  %10 = load ptr, ptr %ptradd14, align 8, !dbg !1675
  %11 = call i64 @std.core.mem.allocator.TempAllocator._free_page(ptr %9, ptr %10) #5, !dbg !1676
  br label %if.exit, !dbg !1676

if.exit:                                          ; preds = %checkok13, %checkok7
  %12 = load ptr, ptr %self, align 8, !dbg !1677
  %checknull15 = icmp eq ptr %12, null, !dbg !1677
  %13 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !1677
  br i1 %13, label %panic16, label %checkok20, !dbg !1677

checkok20:                                        ; preds = %if.exit
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %12, i32 16, i1 false)
  %14 = load ptr, ptr %self, align 8, !dbg !1678
  store ptr %14, ptr %ptr, align 8
  %15 = load ptr, ptr %ptr, align 8, !dbg !1679
  %not = icmp eq ptr %15, null, !dbg !1679
  br i1 %not, label %if.then21, label %if.exit22, !dbg !1679

if.then21:                                        ; preds = %checkok20
  br label %expr_block.exit, !dbg !1682

if.exit22:                                        ; preds = %checkok20
  %ptradd23 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !1683
  %16 = load i64, ptr %ptradd23, align 8, !dbg !1683
  %17 = inttoptr i64 %16 to ptr, !dbg !1683
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1669
  %18 = icmp eq ptr %17, %type, !dbg !1669
  br i1 %18, label %cache_hit, label %cache_miss, !dbg !1669

cache_miss:                                       ; preds = %if.exit22
  %ptradd24 = getelementptr inbounds i8, ptr %17, i64 16, !dbg !1669
  %19 = load ptr, ptr %ptradd24, align 8, !dbg !1669
  %20 = call ptr @.dyn_search(ptr %19, ptr @"$sel.release"), !dbg !1669
  store ptr %20, ptr %.inlinecache, align 8, !dbg !1669
  store ptr %17, ptr %.cachedtype, align 8, !dbg !1669
  br label %21, !dbg !1669

cache_hit:                                        ; preds = %if.exit22
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1669
  br label %21, !dbg !1669

21:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %20, %cache_miss ], !dbg !1669
  %22 = icmp eq ptr %fn_phi, null, !dbg !1669
  br i1 %22, label %missing_function, label %match, !dbg !1669

missing_function:                                 ; preds = %21
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.81, i64 7 }, ptr %indirectarg27, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 105), !dbg !1684
  unreachable, !dbg !1684

match:                                            ; preds = %21
  %24 = load ptr, ptr %allocator, align 8, !dbg !1684
  %25 = load ptr, ptr %ptr, align 8, !dbg !1684
  call void %fn_phi(ptr %24, ptr %25, i8 zeroext 0), !dbg !1684
  br label %expr_block.exit, !dbg !1684

expr_block.exit:                                  ; preds = %match, %if.then21
  ret void, !dbg !1684

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.81, i64 7 }, ptr %indirectarg2, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 48), !dbg !1671
  unreachable, !dbg !1671

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.81, i64 7 }, ptr %indirectarg6, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 51), !dbg !1674
  unreachable, !dbg !1674

panic9:                                           ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.81, i64 7 }, ptr %indirectarg12, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 51), !dbg !1675
  unreachable, !dbg !1675

panic16:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.81, i64 7 }, ptr %indirectarg19, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 52), !dbg !1677
  unreachable, !dbg !1677
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TempAllocator.mark(ptr %0) #0 comdat !dbg !1685 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !1688
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !1688
  br i1 %2, label %panic, label %checkok, !dbg !1688

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1689, metadata !DIExpression()), !dbg !1690
  %3 = load ptr, ptr %self, align 8, !dbg !1688
  %checknull = icmp eq ptr %3, null, !dbg !1688
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1688
  br i1 %4, label %panic3, label %checkok7, !dbg !1688

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 24, !dbg !1688
  %5 = load i64, ptr %ptradd, align 8, !dbg !1688
  ret i64 %5, !dbg !1688

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.10, i64 4 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 55), !dbg !1690
  unreachable, !dbg !1690

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.10, i64 4 }, ptr %indirectarg6, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 55), !dbg !1688
  unreachable, !dbg !1688
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.TempAllocator.release(ptr %0, ptr %1, i8 zeroext %2) #0 comdat !dbg !1691 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_pointer = alloca ptr, align 8
  %.anon = alloca i8, align 1
  %old_size = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %addr = alloca ptr, align 8
  %size = alloca i64, align 8
  %3 = icmp eq ptr %0, null, !dbg !1694
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1694
  br i1 %4, label %panic, label %checkok, !dbg !1694

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1695, metadata !DIExpression()), !dbg !1696
  store ptr %1, ptr %old_pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %old_pointer, metadata !1697, metadata !DIExpression()), !dbg !1698
  store i8 %2, ptr %.anon, align 1
  call void @llvm.dbg.declare(metadata ptr %.anon, metadata !1699, metadata !DIExpression()), !dbg !1700
  call void @llvm.dbg.declare(metadata ptr %old_size, metadata !1701, metadata !DIExpression()), !dbg !1702
  %5 = load ptr, ptr %old_pointer, align 8, !dbg !1703
  %ptradd_any = getelementptr i8, ptr %5, i64 -8, !dbg !1704
  %checknull = icmp eq ptr %ptradd_any, null, !dbg !1704
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1704
  br i1 %6, label %panic3, label %checkok7, !dbg !1704

checkok7:                                         ; preds = %checkok
  %7 = load i64, ptr %ptradd_any, align 8, !dbg !1705
  store i64 %7, ptr %old_size, align 8, !dbg !1705
  %8 = load ptr, ptr %old_pointer, align 8, !dbg !1706
  %9 = load i64, ptr %old_size, align 8, !dbg !1707
  %ptradd_any8 = getelementptr i8, ptr %8, i64 %9, !dbg !1707
  %10 = load ptr, ptr %self, align 8, !dbg !1708
  %checknull9 = icmp eq ptr %10, null, !dbg !1708
  %11 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !1708
  br i1 %11, label %panic10, label %checkok14, !dbg !1708

checkok14:                                        ; preds = %checkok7
  %ptradd = getelementptr inbounds i8, ptr %10, i64 40, !dbg !1708
  %12 = load ptr, ptr %self, align 8, !dbg !1709
  %checknull15 = icmp eq ptr %12, null, !dbg !1709
  %13 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !1709
  br i1 %13, label %panic16, label %checkok20, !dbg !1709

checkok20:                                        ; preds = %checkok14
  %ptradd21 = getelementptr inbounds i8, ptr %12, i64 24, !dbg !1709
  %14 = load i64, ptr %ptradd21, align 8, !dbg !1709
  %ptradd22 = getelementptr inbounds i8, ptr %ptradd, i64 %14, !dbg !1709
  %eq = icmp eq ptr %ptradd_any8, %ptradd22, !dbg !1706
  br i1 %eq, label %if.then, label %if.exit, !dbg !1706

if.then:                                          ; preds = %checkok20
  %15 = load ptr, ptr %self, align 8, !dbg !1710
  %checknull23 = icmp eq ptr %15, null, !dbg !1710
  %16 = call i1 @llvm.expect.i1(i1 %checknull23, i1 false), !dbg !1710
  br i1 %16, label %panic24, label %checkok28, !dbg !1710

checkok28:                                        ; preds = %if.then
  %ptradd29 = getelementptr inbounds i8, ptr %15, i64 24, !dbg !1710
  %17 = load i64, ptr %ptradd29, align 8, !dbg !1710
  %18 = load i64, ptr %old_size, align 8, !dbg !1712
  %sub = sub i64 %17, %18, !dbg !1710
  store i64 %sub, ptr %ptradd29, align 8, !dbg !1710
  %19 = load ptr, ptr %self, align 8, !dbg !1713
  %checknull30 = icmp eq ptr %19, null, !dbg !1713
  %20 = call i1 @llvm.expect.i1(i1 %checknull30, i1 false), !dbg !1713
  br i1 %20, label %panic31, label %checkok35, !dbg !1713

checkok35:                                        ; preds = %checkok28
  %ptradd36 = getelementptr inbounds i8, ptr %19, i64 40, !dbg !1713
  %21 = load ptr, ptr %self, align 8, !dbg !1714
  %checknull37 = icmp eq ptr %21, null, !dbg !1714
  %22 = call i1 @llvm.expect.i1(i1 %checknull37, i1 false), !dbg !1714
  br i1 %22, label %panic38, label %checkok42, !dbg !1714

checkok42:                                        ; preds = %checkok35
  %ptradd43 = getelementptr inbounds i8, ptr %21, i64 24, !dbg !1714
  %23 = load i64, ptr %ptradd43, align 8, !dbg !1714
  %ptradd44 = getelementptr inbounds i8, ptr %ptradd36, i64 %23, !dbg !1714
  store ptr %ptradd44, ptr %addr, align 8
  %24 = load i64, ptr %old_size, align 8
  store i64 %24, ptr %size, align 8
  br label %if.exit, !dbg !1715

if.exit:                                          ; preds = %checkok42, %checkok20
  ret void, !dbg !1715

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg2, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 57), !dbg !1696
  unreachable, !dbg !1696

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.82, i64 81 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg6, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 59), !dbg !1705
  unreachable, !dbg !1705

panic10:                                          ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg13, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 60), !dbg !1708
  unreachable, !dbg !1708

panic16:                                          ; preds = %checkok14
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg19, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 60), !dbg !1709
  unreachable, !dbg !1709

panic24:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg27, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 62), !dbg !1710
  unreachable, !dbg !1710

panic31:                                          ; preds = %checkok28
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg34, align 8
  %30 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %30(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 63), !dbg !1713
  unreachable, !dbg !1713

panic38:                                          ; preds = %checkok35
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg41, align 8
  %31 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %31(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 63), !dbg !1714
  unreachable, !dbg !1714
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.TempAllocator.reset(ptr %0, i64 %1) #0 comdat !dbg !1719 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %mark = alloca i64, align 8
  %last_page = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %to_free = alloca ptr, align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg38 = alloca %"any[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %cleaned = alloca i64, align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %addr = alloca ptr, align 8
  %size = alloca i64, align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !1722
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1722
  br i1 %3, label %panic, label %checkok, !dbg !1722

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1723, metadata !DIExpression()), !dbg !1724
  store i64 %1, ptr %mark, align 8
  call void @llvm.dbg.declare(metadata ptr %mark, metadata !1725, metadata !DIExpression()), !dbg !1726
  call void @llvm.dbg.declare(metadata ptr %last_page, metadata !1727, metadata !DIExpression()), !dbg !1728
  %4 = load ptr, ptr %self, align 8, !dbg !1729
  %checknull = icmp eq ptr %4, null, !dbg !1729
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1729
  br i1 %5, label %panic3, label %checkok7, !dbg !1729

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !1729
  %6 = load ptr, ptr %ptradd, align 8, !dbg !1729
  store ptr %6, ptr %last_page, align 8, !dbg !1729
  br label %loop.cond, !dbg !1730

loop.cond:                                        ; preds = %noerr_block, %checkok7
  %7 = load ptr, ptr %last_page, align 8, !dbg !1731
  %ptrbool = icmp ne ptr %7, null, !dbg !1731
  br i1 %ptrbool, label %and.rhs, label %and.phi, !dbg !1731

and.rhs:                                          ; preds = %loop.cond
  %8 = load ptr, ptr %last_page, align 8, !dbg !1733
  %checknull8 = icmp eq ptr %8, null, !dbg !1733
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !1733
  br i1 %9, label %panic9, label %checkok13, !dbg !1733

checkok13:                                        ; preds = %and.rhs
  %ptradd14 = getelementptr inbounds i8, ptr %8, i64 16, !dbg !1733
  %10 = load i64, ptr %ptradd14, align 8, !dbg !1733
  %11 = load i64, ptr %mark, align 8, !dbg !1734
  %gt = icmp ugt i64 %10, %11, !dbg !1733
  br label %and.phi, !dbg !1733

and.phi:                                          ; preds = %checkok13, %loop.cond
  %val = phi i1 [ false, %loop.cond ], [ %gt, %checkok13 ], !dbg !1733
  br i1 %val, label %loop.body, label %loop.exit, !dbg !1733

loop.body:                                        ; preds = %and.phi
  %12 = load ptr, ptr %self, align 8, !dbg !1735
  %checknull15 = icmp eq ptr %12, null, !dbg !1735
  %13 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !1735
  br i1 %13, label %panic16, label %checkok20, !dbg !1735

checkok20:                                        ; preds = %loop.body
  %ptradd21 = getelementptr inbounds i8, ptr %12, i64 24, !dbg !1735
  %14 = load ptr, ptr %last_page, align 8, !dbg !1737
  %checknull22 = icmp eq ptr %14, null, !dbg !1737
  %15 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !1737
  br i1 %15, label %panic23, label %checkok27, !dbg !1737

checkok27:                                        ; preds = %checkok20
  %ptradd28 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !1737
  %16 = load i64, ptr %ptradd28, align 8, !dbg !1737
  store i64 %16, ptr %ptradd21, align 8, !dbg !1737
  call void @llvm.dbg.declare(metadata ptr %to_free, metadata !1738, metadata !DIExpression()), !dbg !1739
  %17 = load ptr, ptr %last_page, align 8, !dbg !1740
  store ptr %17, ptr %to_free, align 8, !dbg !1740
  %18 = load ptr, ptr %last_page, align 8, !dbg !1741
  %checknull29 = icmp eq ptr %18, null, !dbg !1741
  %19 = call i1 @llvm.expect.i1(i1 %checknull29, i1 false), !dbg !1741
  br i1 %19, label %panic30, label %checkok34, !dbg !1741

checkok34:                                        ; preds = %checkok27
  %20 = load ptr, ptr %18, align 8, !dbg !1741
  store ptr %20, ptr %last_page, align 8, !dbg !1741
  %21 = load ptr, ptr %self, align 8, !dbg !1742
  %22 = load ptr, ptr %to_free, align 8, !dbg !1742
  %23 = call i64 @std.core.mem.allocator.TempAllocator._free_page(ptr %21, ptr %22) #5, !dbg !1743
  %not_err = icmp eq i64 %23, 0, !dbg !1743
  %24 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1743
  br i1 %24, label %after_check, label %assign_optional, !dbg !1743

assign_optional:                                  ; preds = %checkok34
  store i64 %23, ptr %error_var, align 8, !dbg !1743
  br label %panic_block, !dbg !1743

after_check:                                      ; preds = %checkok34
  br label %noerr_block, !dbg !1743

panic_block:                                      ; preds = %assign_optional
  %25 = insertvalue %any undef, ptr %error_var, 0, !dbg !1743
  %26 = insertvalue %any %25, i64 ptrtoint (ptr @"$ct.anyfault" to i64), 1, !dbg !1743
  store %"char[]" { ptr @.panic_msg.84, i64 36 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg37, align 8
  store %any %26, ptr %varargslots, align 16
  %27 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %27, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg38, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 74, ptr align 8 %indirectarg38), !dbg !1743
  unreachable, !dbg !1743

noerr_block:                                      ; preds = %after_check
  br label %loop.cond, !dbg !1743

loop.exit:                                        ; preds = %and.phi
  %28 = load ptr, ptr %self, align 8, !dbg !1744
  %checknull39 = icmp eq ptr %28, null, !dbg !1744
  %29 = call i1 @llvm.expect.i1(i1 %checknull39, i1 false), !dbg !1744
  br i1 %29, label %panic40, label %checkok44, !dbg !1744

checkok44:                                        ; preds = %loop.exit
  %ptradd45 = getelementptr inbounds i8, ptr %28, i64 16, !dbg !1744
  %30 = load ptr, ptr %last_page, align 8, !dbg !1745
  store ptr %30, ptr %ptradd45, align 8, !dbg !1745
  %31 = load ptr, ptr %last_page, align 8, !dbg !1746
  %not = icmp eq ptr %31, null, !dbg !1746
  br i1 %not, label %if.then, label %if.exit72, !dbg !1746

if.then:                                          ; preds = %checkok44
  call void @llvm.dbg.declare(metadata ptr %cleaned, metadata !1747, metadata !DIExpression()), !dbg !1749
  %32 = load ptr, ptr %self, align 8, !dbg !1750
  %checknull46 = icmp eq ptr %32, null, !dbg !1750
  %33 = call i1 @llvm.expect.i1(i1 %checknull46, i1 false), !dbg !1750
  br i1 %33, label %panic47, label %checkok51, !dbg !1750

checkok51:                                        ; preds = %if.then
  %ptradd52 = getelementptr inbounds i8, ptr %32, i64 24, !dbg !1750
  %34 = load i64, ptr %ptradd52, align 8, !dbg !1750
  %35 = load i64, ptr %mark, align 8, !dbg !1751
  %sub = sub i64 %34, %35, !dbg !1750
  store i64 %sub, ptr %cleaned, align 8, !dbg !1750
  %36 = load i64, ptr %cleaned, align 8, !dbg !1752
  %lt = icmp ult i64 0, %36, !dbg !1752
  br i1 %lt, label %if.then53, label %if.exit, !dbg !1752

if.then53:                                        ; preds = %checkok51
  %37 = load ptr, ptr %self, align 8, !dbg !1753
  %checknull54 = icmp eq ptr %37, null, !dbg !1753
  %38 = call i1 @llvm.expect.i1(i1 %checknull54, i1 false), !dbg !1753
  br i1 %38, label %panic55, label %checkok59, !dbg !1753

checkok59:                                        ; preds = %if.then53
  %ptradd60 = getelementptr inbounds i8, ptr %37, i64 40, !dbg !1753
  %39 = load i64, ptr %mark, align 8, !dbg !1755
  %40 = load i64, ptr %cleaned, align 8, !dbg !1756
  %add = add i64 %39, %40, !dbg !1756
  br label %cond, !dbg !1756

cond:                                             ; preds = %assign, %checkok59
  %41 = phi i64 [ %39, %checkok59 ], [ %add63, %assign ], !dbg !1753
  %lt61 = icmp ult i64 %41, %add, !dbg !1753
  br i1 %lt61, label %assign, label %exit, !dbg !1753

assign:                                           ; preds = %cond
  %ptradd62 = getelementptr inbounds i8, ptr %ptradd60, i64 %41, !dbg !1753
  store i8 -86, ptr %ptradd62, align 1, !dbg !1753
  %add63 = add i64 %41, 1, !dbg !1753
  br label %cond, !dbg !1753

exit:                                             ; preds = %cond
  %42 = load ptr, ptr %self, align 8, !dbg !1757
  %checknull64 = icmp eq ptr %42, null, !dbg !1757
  %43 = call i1 @llvm.expect.i1(i1 %checknull64, i1 false), !dbg !1757
  br i1 %43, label %panic65, label %checkok69, !dbg !1757

checkok69:                                        ; preds = %exit
  %ptradd70 = getelementptr inbounds i8, ptr %42, i64 40, !dbg !1757
  %44 = load i64, ptr %mark, align 8, !dbg !1758
  %ptradd71 = getelementptr inbounds i8, ptr %ptradd70, i64 %44, !dbg !1758
  store ptr %ptradd71, ptr %addr, align 8
  %45 = load i64, ptr %cleaned, align 8
  store i64 %45, ptr %size, align 8
  br label %if.exit, !dbg !1759

if.exit:                                          ; preds = %checkok69, %checkok51
  br label %if.exit72, !dbg !1759

if.exit72:                                        ; preds = %if.exit, %checkok44
  %46 = load ptr, ptr %self, align 8, !dbg !1762
  %checknull73 = icmp eq ptr %46, null, !dbg !1762
  %47 = call i1 @llvm.expect.i1(i1 %checknull73, i1 false), !dbg !1762
  br i1 %47, label %panic74, label %checkok78, !dbg !1762

checkok78:                                        ; preds = %if.exit72
  %ptradd79 = getelementptr inbounds i8, ptr %46, i64 24, !dbg !1762
  %48 = load i64, ptr %mark, align 8, !dbg !1763
  store i64 %48, ptr %ptradd79, align 8, !dbg !1763
  ret void, !dbg !1763

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg2, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 66), !dbg !1724
  unreachable, !dbg !1724

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg6, align 8
  %50 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %50(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 68), !dbg !1729
  unreachable, !dbg !1729

panic9:                                           ; preds = %and.rhs
  store %"char[]" { ptr @.panic_msg.83, i64 50 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg12, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 69), !dbg !1733
  unreachable, !dbg !1733

panic16:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg19, align 8
  %52 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %52(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 71), !dbg !1735
  unreachable, !dbg !1735

panic23:                                          ; preds = %checkok20
  store %"char[]" { ptr @.panic_msg.83, i64 50 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg26, align 8
  %53 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %53(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 71), !dbg !1737
  unreachable, !dbg !1737

panic30:                                          ; preds = %checkok27
  store %"char[]" { ptr @.panic_msg.83, i64 50 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg33, align 8
  %54 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %54(ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, i32 73), !dbg !1741
  unreachable, !dbg !1741

panic40:                                          ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg43, align 8
  %55 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %55(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 76), !dbg !1744
  unreachable, !dbg !1744

panic47:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg50, align 8
  %56 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %56(ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, i32 80), !dbg !1750
  unreachable, !dbg !1750

panic55:                                          ; preds = %if.then53
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg58, align 8
  %57 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %57(ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, i32 84), !dbg !1753
  unreachable, !dbg !1753

panic65:                                          ; preds = %exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg66, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg67, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg68, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg66, ptr align 8 %indirectarg67, ptr align 8 %indirectarg68, i32 86), !dbg !1757
  unreachable, !dbg !1757

panic74:                                          ; preds = %if.exit72
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg75, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg76, align 8
  store %"char[]" { ptr @.func.11, i64 5 }, ptr %indirectarg77, align 8
  %59 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %59(ptr align 8 %indirectarg75, ptr align 8 %indirectarg76, ptr align 8 %indirectarg77, i32 90), !dbg !1762
  unreachable, !dbg !1762
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.core.mem.allocator.TempAllocator._free_page(ptr %0, ptr %1) #0 !dbg !1764 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %page = alloca ptr, align 8
  %mem = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %self14 = alloca ptr, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1767
  %2 = icmp eq ptr %0, null, !dbg !1767
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !1767
  br i1 %3, label %panic, label %checkok, !dbg !1767

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1768, metadata !DIExpression()), !dbg !1769
  store ptr %1, ptr %page, align 8
  call void @llvm.dbg.declare(metadata ptr %page, metadata !1770, metadata !DIExpression()), !dbg !1771
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !1772, metadata !DIExpression()), !dbg !1773
  %4 = load ptr, ptr %page, align 8, !dbg !1774
  %checknull = icmp eq ptr %4, null, !dbg !1774
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1774
  br i1 %5, label %panic3, label %checkok7, !dbg !1774

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 8, !dbg !1774
  %6 = load ptr, ptr %ptradd, align 8, !dbg !1774
  store ptr %6, ptr %mem, align 8, !dbg !1774
  %7 = load ptr, ptr %self, align 8, !dbg !1775
  %checknull8 = icmp eq ptr %7, null, !dbg !1775
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !1775
  br i1 %8, label %panic9, label %checkok13, !dbg !1775

checkok13:                                        ; preds = %checkok7
  %9 = load ptr, ptr %page, align 8
  store ptr %9, ptr %self14, align 8
  %10 = load ptr, ptr %self14, align 8, !dbg !1776
  %checknull15 = icmp eq ptr %10, null, !dbg !1776
  %11 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !1776
  br i1 %11, label %panic16, label %checkok20, !dbg !1776

checkok20:                                        ; preds = %checkok13
  %ptradd21 = getelementptr inbounds i8, ptr %10, i64 24, !dbg !1776
  %12 = load i64, ptr %ptradd21, align 8, !dbg !1776
  %and = and i64 %12, -9223372036854775808, !dbg !1776
  %eq = icmp eq i64 %and, -9223372036854775808, !dbg !1776
  %ptradd22 = getelementptr inbounds i8, ptr %7, i64 8, !dbg !1776
  %13 = load i64, ptr %ptradd22, align 8, !dbg !1776
  %14 = inttoptr i64 %13 to ptr, !dbg !1776
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1767
  %15 = icmp eq ptr %14, %type, !dbg !1767
  br i1 %15, label %cache_hit, label %cache_miss, !dbg !1767

cache_miss:                                       ; preds = %checkok20
  %ptradd23 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !1767
  %16 = load ptr, ptr %ptradd23, align 8, !dbg !1767
  %17 = call ptr @.dyn_search(ptr %16, ptr @"$sel.release"), !dbg !1767
  store ptr %17, ptr %.inlinecache, align 8, !dbg !1767
  store ptr %14, ptr %.cachedtype, align 8, !dbg !1767
  br label %18, !dbg !1767

cache_hit:                                        ; preds = %checkok20
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1767
  br label %18, !dbg !1767

18:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %17, %cache_miss ], !dbg !1767
  %19 = icmp eq ptr %fn_phi, null, !dbg !1767
  br i1 %19, label %missing_function, label %match, !dbg !1767

missing_function:                                 ; preds = %18
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.85, i64 10 }, ptr %indirectarg26, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 96), !dbg !1775
  unreachable, !dbg !1775

match:                                            ; preds = %18
  %21 = load ptr, ptr %7, align 8, !dbg !1775
  %22 = load ptr, ptr %mem, align 8, !dbg !1775
  %23 = zext i1 %eq to i8, !dbg !1775
  call void %fn_phi(ptr %21, ptr %22, i8 zeroext %23), !dbg !1775
  ret i64 0, !dbg !1775

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.85, i64 10 }, ptr %indirectarg2, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 93), !dbg !1769
  unreachable, !dbg !1769

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.85, i64 10 }, ptr %indirectarg6, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 95), !dbg !1774
  unreachable, !dbg !1774

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.85, i64 10 }, ptr %indirectarg12, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 96), !dbg !1775
  unreachable, !dbg !1775

panic16:                                          ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.85, i64 10 }, ptr %indirectarg19, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 33), !dbg !1776
  unreachable, !dbg !1776
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.core.mem.allocator.TempAllocator._realloc_page(ptr %0, ptr %1, ptr %2, i64 %3, i64 %4) #0 !dbg !1779 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %page = alloca ptr, align 8
  %size = alloca i64, align 8
  %alignment = alloca i64, align 8
  %real_pointer = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %pointer_to_prev = alloca ptr, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %page_size = alloca i64, align 8
  %self45 = alloca ptr, align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %data = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %dst = alloca ptr, align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %src = alloca ptr, align 8
  %len = alloca i64, align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %self74 = alloca ptr, align 8
  %indirectarg77 = alloca %"char[]", align 8
  %indirectarg78 = alloca %"char[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg86 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %indirectarg88 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !1782
  %5 = icmp eq ptr %1, null, !dbg !1782
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1782
  br i1 %6, label %panic, label %checkok, !dbg !1782

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1783, metadata !DIExpression()), !dbg !1784
  store ptr %2, ptr %page, align 8
  call void @llvm.dbg.declare(metadata ptr %page, metadata !1785, metadata !DIExpression()), !dbg !1786
  store i64 %3, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !1787, metadata !DIExpression()), !dbg !1788
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !1789, metadata !DIExpression()), !dbg !1790
  call void @llvm.dbg.declare(metadata ptr %real_pointer, metadata !1791, metadata !DIExpression()), !dbg !1792
  %7 = load ptr, ptr %page, align 8, !dbg !1793
  %checknull = icmp eq ptr %7, null, !dbg !1793
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1793
  br i1 %8, label %panic3, label %checkok7, !dbg !1793

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %7, i64 8, !dbg !1793
  %9 = load ptr, ptr %ptradd, align 8, !dbg !1793
  store ptr %9, ptr %real_pointer, align 8, !dbg !1793
  call void @llvm.dbg.declare(metadata ptr %pointer_to_prev, metadata !1794, metadata !DIExpression()), !dbg !1796
  %10 = load ptr, ptr %self, align 8, !dbg !1797
  %checknull8 = icmp eq ptr %10, null, !dbg !1797
  %11 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !1797
  br i1 %11, label %panic9, label %checkok13, !dbg !1797

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %10, i64 16, !dbg !1797
  store ptr %ptradd14, ptr %pointer_to_prev, align 8, !dbg !1797
  br label %loop.cond, !dbg !1798

loop.cond:                                        ; preds = %checkok32, %checkok13
  %12 = load ptr, ptr %pointer_to_prev, align 8, !dbg !1799
  %checknull15 = icmp eq ptr %12, null, !dbg !1799
  %13 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !1799
  br i1 %13, label %panic16, label %checkok20, !dbg !1799

checkok20:                                        ; preds = %loop.cond
  %14 = load ptr, ptr %12, align 8, !dbg !1799
  %15 = load ptr, ptr %page, align 8, !dbg !1801
  %neq = icmp ne ptr %14, %15, !dbg !1802
  br i1 %neq, label %loop.body, label %loop.exit, !dbg !1802

loop.body:                                        ; preds = %checkok20
  %16 = load ptr, ptr %pointer_to_prev, align 8, !dbg !1803
  %checknull21 = icmp eq ptr %16, null, !dbg !1803
  %17 = call i1 @llvm.expect.i1(i1 %checknull21, i1 false), !dbg !1803
  br i1 %17, label %panic22, label %checkok26, !dbg !1803

checkok26:                                        ; preds = %loop.body
  %18 = load ptr, ptr %16, align 8, !dbg !1803
  %checknull27 = icmp eq ptr %18, null, !dbg !1803
  %19 = call i1 @llvm.expect.i1(i1 %checknull27, i1 false), !dbg !1803
  br i1 %19, label %panic28, label %checkok32, !dbg !1803

checkok32:                                        ; preds = %checkok26
  store ptr %18, ptr %pointer_to_prev, align 8, !dbg !1805
  br label %loop.cond, !dbg !1805

loop.exit:                                        ; preds = %checkok20
  %20 = load ptr, ptr %pointer_to_prev, align 8, !dbg !1806
  %checknull33 = icmp eq ptr %20, null, !dbg !1806
  %21 = call i1 @llvm.expect.i1(i1 %checknull33, i1 false), !dbg !1806
  br i1 %21, label %panic34, label %checkok38, !dbg !1806

checkok38:                                        ; preds = %loop.exit
  %22 = load ptr, ptr %page, align 8, !dbg !1807
  %checknull39 = icmp eq ptr %22, null, !dbg !1807
  %23 = call i1 @llvm.expect.i1(i1 %checknull39, i1 false), !dbg !1807
  br i1 %23, label %panic40, label %checkok44, !dbg !1807

checkok44:                                        ; preds = %checkok38
  %24 = load ptr, ptr %22, align 8, !dbg !1807
  store ptr %24, ptr %20, align 8, !dbg !1807
  call void @llvm.dbg.declare(metadata ptr %page_size, metadata !1808, metadata !DIExpression()), !dbg !1809
  %25 = load ptr, ptr %page, align 8
  store ptr %25, ptr %self45, align 8
  %26 = load ptr, ptr %self45, align 8, !dbg !1810
  %checknull46 = icmp eq ptr %26, null, !dbg !1810
  %27 = call i1 @llvm.expect.i1(i1 %checknull46, i1 false), !dbg !1810
  br i1 %27, label %panic47, label %checkok51, !dbg !1810

checkok51:                                        ; preds = %checkok44
  %ptradd52 = getelementptr inbounds i8, ptr %26, i64 24, !dbg !1810
  %28 = load i64, ptr %ptradd52, align 8, !dbg !1810
  %and = and i64 %28, 9223372036854775807, !dbg !1810
  store i64 %and, ptr %page_size, align 8, !dbg !1810
  call void @llvm.dbg.declare(metadata ptr %data, metadata !1813, metadata !DIExpression()), !dbg !1814
  %29 = load ptr, ptr %self, align 8
  %30 = load i64, ptr %size, align 8
  %31 = load i64, ptr %alignment, align 8
  %32 = call i64 @std.core.mem.allocator.TempAllocator.acquire(ptr %retparam, ptr %29, i64 %30, i32 0, i64 %31), !dbg !1815
  %not_err = icmp eq i64 %32, 0, !dbg !1815
  %33 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1815
  br i1 %33, label %after_check, label %assign_optional, !dbg !1815

assign_optional:                                  ; preds = %checkok51
  store i64 %32, ptr %error_var, align 8, !dbg !1815
  br label %guard_block, !dbg !1815

after_check:                                      ; preds = %checkok51
  br label %noerr_block, !dbg !1815

guard_block:                                      ; preds = %assign_optional
  %34 = load i64, ptr %error_var, align 8, !dbg !1815
  ret i64 %34, !dbg !1815

noerr_block:                                      ; preds = %after_check
  %35 = load ptr, ptr %retparam, align 8, !dbg !1815
  store ptr %35, ptr %data, align 8, !dbg !1815
  %36 = load ptr, ptr %data, align 8
  store ptr %36, ptr %dst, align 8
  %37 = load ptr, ptr %page, align 8, !dbg !1816
  %checknull53 = icmp eq ptr %37, null, !dbg !1816
  %38 = call i1 @llvm.expect.i1(i1 %checknull53, i1 false), !dbg !1816
  br i1 %38, label %panic54, label %checkok58, !dbg !1816

checkok58:                                        ; preds = %noerr_block
  %ptradd59 = getelementptr inbounds i8, ptr %37, i64 40, !dbg !1816
  store ptr %ptradd59, ptr %src, align 8
  %39 = load i64, ptr %page_size, align 8
  store i64 %39, ptr %len, align 8
  %40 = load i64, ptr %len, align 8, !dbg !1817
  %eq = icmp eq i64 0, %40, !dbg !1817
  br i1 %eq, label %or.phi, label %or.rhs, !dbg !1817

or.rhs:                                           ; preds = %checkok58
  %41 = load ptr, ptr %dst, align 8, !dbg !1821
  %42 = load i64, ptr %len, align 8, !dbg !1822
  %ptradd_any = getelementptr i8, ptr %41, i64 %42, !dbg !1822
  %43 = load ptr, ptr %src, align 8, !dbg !1823
  %le = icmp ule ptr %ptradd_any, %43, !dbg !1821
  br label %or.phi, !dbg !1821

or.phi:                                           ; preds = %or.rhs, %checkok58
  %val = phi i1 [ true, %checkok58 ], [ %le, %or.rhs ], !dbg !1821
  br i1 %val, label %or.phi63, label %or.rhs60, !dbg !1821

or.rhs60:                                         ; preds = %or.phi
  %44 = load ptr, ptr %src, align 8, !dbg !1824
  %45 = load i64, ptr %len, align 8, !dbg !1825
  %ptradd_any61 = getelementptr i8, ptr %44, i64 %45, !dbg !1825
  %46 = load ptr, ptr %dst, align 8, !dbg !1826
  %le62 = icmp ule ptr %ptradd_any61, %46, !dbg !1824
  br label %or.phi63, !dbg !1824

or.phi63:                                         ; preds = %or.rhs60, %or.phi
  %val64 = phi i1 [ true, %or.phi ], [ %le62, %or.rhs60 ], !dbg !1824
  br i1 %val64, label %assert_ok, label %assert_fail, !dbg !1824

assert_fail:                                      ; preds = %or.phi63
  store %"char[]" { ptr @.panic_msg.18, i64 95 }, ptr %indirectarg65, align 8
  store %"char[]" { ptr @.file.19, i64 6 }, ptr %indirectarg66, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg67, align 8
  %47 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %47(ptr align 8 %indirectarg65, ptr align 8 %indirectarg66, ptr align 8 %indirectarg67, i32 309), !dbg !1817
  unreachable, !dbg !1817

assert_ok:                                        ; preds = %or.phi63
  %48 = load ptr, ptr %dst, align 8, !dbg !1827
  %49 = load ptr, ptr %src, align 8, !dbg !1828
  %50 = load i64, ptr %len, align 8, !dbg !1829
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %48, ptr align 16 %49, i64 %50, i1 false), !dbg !1830
  %51 = load ptr, ptr %self, align 8, !dbg !1831
  %checknull68 = icmp eq ptr %51, null, !dbg !1831
  %52 = call i1 @llvm.expect.i1(i1 %checknull68, i1 false), !dbg !1831
  br i1 %52, label %panic69, label %checkok73, !dbg !1831

checkok73:                                        ; preds = %assert_ok
  %53 = load ptr, ptr %page, align 8
  store ptr %53, ptr %self74, align 8
  %54 = load ptr, ptr %self74, align 8, !dbg !1832
  %checknull75 = icmp eq ptr %54, null, !dbg !1832
  %55 = call i1 @llvm.expect.i1(i1 %checknull75, i1 false), !dbg !1832
  br i1 %55, label %panic76, label %checkok80, !dbg !1832

checkok80:                                        ; preds = %checkok73
  %ptradd81 = getelementptr inbounds i8, ptr %54, i64 24, !dbg !1832
  %56 = load i64, ptr %ptradd81, align 8, !dbg !1832
  %and82 = and i64 %56, -9223372036854775808, !dbg !1832
  %eq83 = icmp eq i64 %and82, -9223372036854775808, !dbg !1832
  %ptradd84 = getelementptr inbounds i8, ptr %51, i64 8, !dbg !1832
  %57 = load i64, ptr %ptradd84, align 8, !dbg !1832
  %58 = inttoptr i64 %57 to ptr, !dbg !1832
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1782
  %59 = icmp eq ptr %58, %type, !dbg !1782
  br i1 %59, label %cache_hit, label %cache_miss, !dbg !1782

cache_miss:                                       ; preds = %checkok80
  %ptradd85 = getelementptr inbounds i8, ptr %58, i64 16, !dbg !1782
  %60 = load ptr, ptr %ptradd85, align 8, !dbg !1782
  %61 = call ptr @.dyn_search(ptr %60, ptr @"$sel.release"), !dbg !1782
  store ptr %61, ptr %.inlinecache, align 8, !dbg !1782
  store ptr %58, ptr %.cachedtype, align 8, !dbg !1782
  br label %62, !dbg !1782

cache_hit:                                        ; preds = %checkok80
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1782
  br label %62, !dbg !1782

62:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %61, %cache_miss ], !dbg !1782
  %63 = icmp eq ptr %fn_phi, null, !dbg !1782
  br i1 %63, label %missing_function, label %match, !dbg !1782

missing_function:                                 ; preds = %62
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg86, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg87, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg88, align 8
  %64 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %64(ptr align 8 %indirectarg86, ptr align 8 %indirectarg87, ptr align 8 %indirectarg88, i32 116), !dbg !1831
  unreachable, !dbg !1831

match:                                            ; preds = %62
  %65 = load ptr, ptr %51, align 8, !dbg !1831
  %66 = load ptr, ptr %real_pointer, align 8, !dbg !1831
  %67 = zext i1 %eq83 to i8, !dbg !1831
  call void %fn_phi(ptr %65, ptr %66, i8 zeroext %67), !dbg !1831
  %68 = load ptr, ptr %data, align 8, !dbg !1835
  store ptr %68, ptr %0, align 8, !dbg !1835
  ret i64 0, !dbg !1835

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg2, align 8
  %69 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %69(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 99), !dbg !1784
  unreachable, !dbg !1784

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg6, align 8
  %70 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %70(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 102), !dbg !1793
  unreachable, !dbg !1793

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg12, align 8
  %71 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %71(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 105), !dbg !1797
  unreachable, !dbg !1797

panic16:                                          ; preds = %loop.cond
  store %"char[]" { ptr @.panic_msg.87, i64 56 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg19, align 8
  %72 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %72(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 107), !dbg !1799
  unreachable, !dbg !1799

panic22:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.87, i64 56 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg25, align 8
  %73 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %73(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 109), !dbg !1803
  unreachable, !dbg !1803

panic28:                                          ; preds = %checkok26
  store %"char[]" { ptr @.panic_msg.88, i64 58 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg31, align 8
  %74 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %74(ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, i32 109), !dbg !1805
  unreachable, !dbg !1805

panic34:                                          ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.87, i64 56 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg37, align 8
  %75 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %75(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 111), !dbg !1806
  unreachable, !dbg !1806

panic40:                                          ; preds = %checkok38
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg43, align 8
  %76 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %76(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 111), !dbg !1807
  unreachable, !dbg !1807

panic47:                                          ; preds = %checkok44
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg50, align 8
  %77 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %77(ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, i32 32), !dbg !1810
  unreachable, !dbg !1810

panic54:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg57, align 8
  %78 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %78(ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, i32 115), !dbg !1816
  unreachable, !dbg !1816

panic69:                                          ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg72, align 8
  %79 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %79(ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, i32 116), !dbg !1831
  unreachable, !dbg !1831

panic76:                                          ; preds = %checkok73
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg77, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg78, align 8
  store %"char[]" { ptr @.func.86, i64 13 }, ptr %indirectarg79, align 8
  %80 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %80(ptr align 8 %indirectarg77, ptr align 8 %indirectarg78, ptr align 8 %indirectarg79, i32 33), !dbg !1832
  unreachable, !dbg !1832
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TempAllocator.resize(ptr %0, ptr %1, ptr %2, i64 %3, i64 %4) #0 comdat !dbg !1836 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %pointer = alloca ptr, align 8
  %size = alloca i64, align 8
  %alignment = alloca i64, align 8
  %chunk = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %page = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %data = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %retparam18 = alloca ptr, align 8
  %dst = alloca ptr, align 8
  %src = alloca ptr, align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %len = alloca i64, align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %reterr40 = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !1839
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1839
  br i1 %6, label %panic, label %checkok, !dbg !1839

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1840, metadata !DIExpression()), !dbg !1841
  store ptr %2, ptr %pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %pointer, metadata !1842, metadata !DIExpression()), !dbg !1843
  store i64 %3, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !1844, metadata !DIExpression()), !dbg !1845
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !1846, metadata !DIExpression()), !dbg !1847
  call void @llvm.dbg.declare(metadata ptr %chunk, metadata !1848, metadata !DIExpression()), !dbg !1854
  %7 = load ptr, ptr %pointer, align 8, !dbg !1855
  %ptradd_any = getelementptr i8, ptr %7, i64 -8, !dbg !1856
  store ptr %ptradd_any, ptr %chunk, align 8, !dbg !1856
  %8 = load ptr, ptr %chunk, align 8, !dbg !1857
  %checknull = icmp eq ptr %8, null, !dbg !1857
  %9 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1857
  br i1 %9, label %panic3, label %checkok7, !dbg !1857

checkok7:                                         ; preds = %checkok
  %10 = load i64, ptr %8, align 8, !dbg !1857
  %eq = icmp eq i64 %10, -1, !dbg !1857
  br i1 %eq, label %if.then, label %if.exit, !dbg !1857

if.then:                                          ; preds = %checkok7
  %11 = load ptr, ptr %self, align 8, !dbg !1858
  %checknull8 = icmp eq ptr %11, null, !dbg !1858
  %12 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !1858
  br i1 %12, label %panic9, label %checkok13, !dbg !1858

checkok13:                                        ; preds = %if.then
  %ptradd = getelementptr inbounds i8, ptr %11, i64 16, !dbg !1858
  %13 = load ptr, ptr %ptradd, align 8, !dbg !1858
  %ptrbool = icmp ne ptr %13, null, !dbg !1858
  br i1 %ptrbool, label %assert_ok, label %assert_fail, !dbg !1858

assert_fail:                                      ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.89, i64 27 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg16, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 125), !dbg !1858
  unreachable, !dbg !1858

assert_ok:                                        ; preds = %checkok13
  call void @llvm.dbg.declare(metadata ptr %page, metadata !1860, metadata !DIExpression()), !dbg !1861
  %15 = load ptr, ptr %pointer, align 8, !dbg !1862
  %ptradd_any17 = getelementptr i8, ptr %15, i64 -40, !dbg !1863
  store ptr %ptradd_any17, ptr %page, align 8, !dbg !1863
  %16 = load ptr, ptr %self, align 8
  %17 = load ptr, ptr %page, align 8
  %18 = load i64, ptr %size, align 8
  %19 = load i64, ptr %alignment, align 8
  %20 = call i64 @std.core.mem.allocator.TempAllocator._realloc_page(ptr %retparam, ptr %16, ptr %17, i64 %18, i64 %19) #5, !dbg !1864
  %not_err = icmp eq i64 %20, 0, !dbg !1864
  %21 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1864
  br i1 %21, label %after_check, label %assign_optional, !dbg !1864

assign_optional:                                  ; preds = %assert_ok
  store i64 %20, ptr %reterr, align 8, !dbg !1864
  br label %err_retblock, !dbg !1864

after_check:                                      ; preds = %assert_ok
  %22 = load ptr, ptr %retparam, align 8, !dbg !1864
  store ptr %22, ptr %0, align 8, !dbg !1864
  ret i64 0, !dbg !1864

err_retblock:                                     ; preds = %assign_optional
  %23 = load i64, ptr %reterr, align 8, !dbg !1864
  ret i64 %23, !dbg !1864

if.exit:                                          ; preds = %checkok7
  call void @llvm.dbg.declare(metadata ptr %data, metadata !1865, metadata !DIExpression()), !dbg !1866
  %24 = load ptr, ptr %self, align 8
  %25 = load i64, ptr %size, align 8
  %26 = load i64, ptr %alignment, align 8
  %27 = call i64 @std.core.mem.allocator.TempAllocator.acquire(ptr %retparam18, ptr %24, i64 %25, i32 0, i64 %26), !dbg !1867
  %not_err19 = icmp eq i64 %27, 0, !dbg !1867
  %28 = call i1 @llvm.expect.i1(i1 %not_err19, i1 true), !dbg !1867
  br i1 %28, label %after_check21, label %assign_optional20, !dbg !1867

assign_optional20:                                ; preds = %if.exit
  store i64 %27, ptr %error_var, align 8, !dbg !1867
  br label %guard_block, !dbg !1867

after_check21:                                    ; preds = %if.exit
  br label %noerr_block, !dbg !1867

guard_block:                                      ; preds = %assign_optional20
  %29 = load i64, ptr %error_var, align 8, !dbg !1867
  ret i64 %29, !dbg !1867

noerr_block:                                      ; preds = %after_check21
  %30 = load ptr, ptr %retparam18, align 8, !dbg !1867
  store ptr %30, ptr %data, align 8, !dbg !1867
  %31 = load ptr, ptr %data, align 8, !dbg !1868
  store ptr %31, ptr %dst, align 8
  %32 = load ptr, ptr %pointer, align 8
  store ptr %32, ptr %src, align 8
  %33 = load ptr, ptr %chunk, align 8, !dbg !1869
  %checknull22 = icmp eq ptr %33, null, !dbg !1869
  %34 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !1869
  br i1 %34, label %panic23, label %checkok27, !dbg !1869

checkok27:                                        ; preds = %noerr_block
  %35 = load i64, ptr %33, align 8
  store i64 %35, ptr %len, align 8
  %36 = load i64, ptr %len, align 8, !dbg !1870
  %eq28 = icmp eq i64 0, %36, !dbg !1870
  br i1 %eq28, label %or.phi, label %or.rhs, !dbg !1870

or.rhs:                                           ; preds = %checkok27
  %37 = load ptr, ptr %dst, align 8, !dbg !1874
  %38 = load i64, ptr %len, align 8, !dbg !1875
  %ptradd_any29 = getelementptr i8, ptr %37, i64 %38, !dbg !1875
  %39 = load ptr, ptr %src, align 8, !dbg !1876
  %le = icmp ule ptr %ptradd_any29, %39, !dbg !1874
  br label %or.phi, !dbg !1874

or.phi:                                           ; preds = %or.rhs, %checkok27
  %val = phi i1 [ true, %checkok27 ], [ %le, %or.rhs ], !dbg !1874
  br i1 %val, label %or.phi33, label %or.rhs30, !dbg !1874

or.rhs30:                                         ; preds = %or.phi
  %40 = load ptr, ptr %src, align 8, !dbg !1877
  %41 = load i64, ptr %len, align 8, !dbg !1878
  %ptradd_any31 = getelementptr i8, ptr %40, i64 %41, !dbg !1878
  %42 = load ptr, ptr %dst, align 8, !dbg !1879
  %le32 = icmp ule ptr %ptradd_any31, %42, !dbg !1877
  br label %or.phi33, !dbg !1877

or.phi33:                                         ; preds = %or.rhs30, %or.phi
  %val34 = phi i1 [ true, %or.phi ], [ %le32, %or.rhs30 ], !dbg !1877
  br i1 %val34, label %assert_ok39, label %assert_fail35, !dbg !1877

assert_fail35:                                    ; preds = %or.phi33
  store %"char[]" { ptr @.panic_msg.18, i64 95 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.file.19, i64 6 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg38, align 8
  %43 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %43(ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, i32 309), !dbg !1870
  unreachable, !dbg !1870

assert_ok39:                                      ; preds = %or.phi33
  %44 = load ptr, ptr %dst, align 8, !dbg !1880
  %45 = load ptr, ptr %src, align 8, !dbg !1881
  %46 = load i64, ptr %len, align 8, !dbg !1882
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %44, ptr align 16 %45, i64 %46, i1 false), !dbg !1883
  %47 = load ptr, ptr %data, align 8, !dbg !1884
  store ptr %47, ptr %0, align 8, !dbg !1884
  ret i64 0, !dbg !1884

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg2, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 120), !dbg !1841
  unreachable, !dbg !1841

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg6, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 123), !dbg !1857
  unreachable, !dbg !1857

panic9:                                           ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg12, align 8
  %50 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %50(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 125), !dbg !1858
  unreachable, !dbg !1858

panic23:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.39, i64 46 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg26, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 132), !dbg !1869
  unreachable, !dbg !1869
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TempAllocator.acquire(ptr %0, ptr %1, i64 %2, i32 %3, i64 %4) #0 comdat !dbg !1885 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %size = alloca i64, align 8
  %init_type = alloca i32, align 4
  %alignment = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %x = alloca i64, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %start_mem = alloca ptr, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %starting_ptr = alloca ptr, align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %aligned_header_start = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %alignment29 = alloca i64, align 8
  %mem = alloca ptr, align 8
  %ptr31 = alloca ptr, align 8
  %alignment32 = alloca i64, align 8
  %new_usage = alloca i64, align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %addr = alloca ptr, align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %size52 = alloca i64, align 8
  %chunk_start = alloca ptr, align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %dst = alloca ptr, align 8
  %len = alloca i64, align 8
  %reterr = alloca i64, align 8
  %page = alloca ptr, align 8
  %total_alloc_size = alloca i64, align 8
  %error_var = alloca i64, align 8
  %indirectarg78 = alloca %"char[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %indirectarg80 = alloca %"char[]", align 8
  %allocator = alloca %any, align 8
  %size82 = alloca i64, align 8
  %alignment83 = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg91 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %error_var92 = alloca i64, align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %allocator99 = alloca %any, align 8
  %size100 = alloca i64, align 8
  %alignment101 = alloca i64, align 8
  %blockret102 = alloca ptr, align 8
  %.inlinecache107 = alloca ptr, align 8
  %.cachedtype108 = alloca ptr, align 8
  %indirectarg116 = alloca %"char[]", align 8
  %indirectarg117 = alloca %"char[]", align 8
  %indirectarg118 = alloca %"char[]", align 8
  %retparam120 = alloca ptr, align 8
  %indirectarg131 = alloca %"char[]", align 8
  %indirectarg132 = alloca %"char[]", align 8
  %indirectarg133 = alloca %"char[]", align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg139 = alloca %"char[]", align 8
  %indirectarg140 = alloca %"char[]", align 8
  %padded_header_size = alloca i64, align 8
  %total_alloc_size144 = alloca i64, align 8
  %alloc = alloca ptr, align 8
  %error_var146 = alloca i64, align 8
  %indirectarg149 = alloca %"char[]", align 8
  %indirectarg150 = alloca %"char[]", align 8
  %indirectarg151 = alloca %"char[]", align 8
  %.inlinecache154 = alloca ptr, align 8
  %.cachedtype155 = alloca ptr, align 8
  %indirectarg163 = alloca %"char[]", align 8
  %indirectarg164 = alloca %"char[]", align 8
  %indirectarg165 = alloca %"char[]", align 8
  %retparam167 = alloca ptr, align 8
  %indirectarg176 = alloca %"char[]", align 8
  %indirectarg177 = alloca %"char[]", align 8
  %indirectarg178 = alloca %"char[]", align 8
  %indirectarg182 = alloca %"char[]", align 8
  %indirectarg183 = alloca %"char[]", align 8
  %indirectarg184 = alloca %"char[]", align 8
  %indirectarg188 = alloca %"char[]", align 8
  %indirectarg189 = alloca %"char[]", align 8
  %indirectarg190 = alloca %"char[]", align 8
  %indirectarg194 = alloca %"char[]", align 8
  %indirectarg195 = alloca %"char[]", align 8
  %indirectarg196 = alloca %"char[]", align 8
  %indirectarg201 = alloca %"char[]", align 8
  %indirectarg202 = alloca %"char[]", align 8
  %indirectarg203 = alloca %"char[]", align 8
  %indirectarg209 = alloca %"char[]", align 8
  %indirectarg210 = alloca %"char[]", align 8
  %indirectarg211 = alloca %"char[]", align 8
  %indirectarg216 = alloca %"char[]", align 8
  %indirectarg217 = alloca %"char[]", align 8
  %indirectarg218 = alloca %"char[]", align 8
  %indirectarg223 = alloca %"char[]", align 8
  %indirectarg224 = alloca %"char[]", align 8
  %indirectarg225 = alloca %"char[]", align 8
  %indirectarg231 = alloca %"char[]", align 8
  %indirectarg232 = alloca %"char[]", align 8
  %indirectarg233 = alloca %"char[]", align 8
  %indirectarg237 = alloca %"char[]", align 8
  %indirectarg238 = alloca %"char[]", align 8
  %indirectarg239 = alloca %"char[]", align 8
  %indirectarg244 = alloca %"char[]", align 8
  %indirectarg245 = alloca %"char[]", align 8
  %indirectarg246 = alloca %"char[]", align 8
  %reterr249 = alloca i64, align 8
  %indirectarg252 = alloca %"char[]", align 8
  %indirectarg253 = alloca %"char[]", align 8
  %indirectarg254 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype155, align 8, !dbg !1888
  store ptr null, ptr %.cachedtype108, align 8, !dbg !1888
  store ptr null, ptr %.cachedtype, align 8, !dbg !1888
  %5 = icmp eq ptr %1, null, !dbg !1888
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1888
  br i1 %6, label %panic, label %checkok, !dbg !1888

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1889, metadata !DIExpression()), !dbg !1890
  store i64 %2, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !1891, metadata !DIExpression()), !dbg !1892
  store i32 %3, ptr %init_type, align 4
  call void @llvm.dbg.declare(metadata ptr %init_type, metadata !1893, metadata !DIExpression()), !dbg !1894
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !1895, metadata !DIExpression()), !dbg !1896
  %7 = load i64, ptr %size, align 8, !dbg !1897
  %lt = icmp ult i64 0, %7, !dbg !1897
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !1897

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.15, i64 29 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg5, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 138), !dbg !1897
  unreachable, !dbg !1897

assert_ok:                                        ; preds = %checkok
  %9 = load i64, ptr %alignment, align 8, !dbg !1899
  %not = icmp eq i64 %9, 0, !dbg !1899
  br i1 %not, label %or.phi, label %or.rhs, !dbg !1899

or.rhs:                                           ; preds = %assert_ok
  %10 = load i64, ptr %alignment, align 8
  store i64 %10, ptr %x, align 8
  %11 = load i64, ptr %x, align 8, !dbg !1900
  %neq = icmp ne i64 0, %11, !dbg !1900
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !1900

and.rhs:                                          ; preds = %or.rhs
  %12 = load i64, ptr %x, align 8, !dbg !1903
  %13 = load i64, ptr %x, align 8, !dbg !1904
  %sub = sub i64 %13, 1, !dbg !1904
  %and = and i64 %12, %sub, !dbg !1903
  %eq = icmp eq i64 %and, 0, !dbg !1903
  br label %and.phi, !dbg !1903

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !1903
  br label %or.phi, !dbg !1903

or.phi:                                           ; preds = %and.phi, %assert_ok
  %val6 = phi i1 [ true, %assert_ok ], [ %val, %and.phi ], !dbg !1903
  br i1 %val6, label %assert_ok11, label %assert_fail7, !dbg !1903

assert_fail7:                                     ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.13, i64 65 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg10, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 139), !dbg !1905
  unreachable, !dbg !1905

assert_ok11:                                      ; preds = %or.phi
  %15 = load i64, ptr %alignment, align 8, !dbg !1906
  %le = icmp ule i64 %15, 268435456, !dbg !1906
  br i1 %le, label %assert_ok16, label %assert_fail12, !dbg !1906

assert_fail12:                                    ; preds = %assert_ok11
  store %"char[]" { ptr @.panic_msg.14, i64 80 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg15, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 140), !dbg !1906
  unreachable, !dbg !1906

assert_ok16:                                      ; preds = %assert_ok11
  %17 = load i64, ptr %alignment, align 8, !dbg !1907
  %18 = call i64 @std.core.mem.allocator.alignment_for_allocation(i64 %17) #5, !dbg !1908
  store i64 %18, ptr %alignment, align 8, !dbg !1908
  call void @llvm.dbg.declare(metadata ptr %start_mem, metadata !1909, metadata !DIExpression()), !dbg !1910
  %19 = load ptr, ptr %self, align 8, !dbg !1911
  %checknull = icmp eq ptr %19, null, !dbg !1911
  %20 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1911
  br i1 %20, label %panic17, label %checkok21, !dbg !1911

checkok21:                                        ; preds = %assert_ok16
  %ptradd = getelementptr inbounds i8, ptr %19, i64 40, !dbg !1911
  store ptr %ptradd, ptr %start_mem, align 8, !dbg !1911
  call void @llvm.dbg.declare(metadata ptr %starting_ptr, metadata !1912, metadata !DIExpression()), !dbg !1913
  %21 = load ptr, ptr %start_mem, align 8, !dbg !1914
  %22 = load ptr, ptr %self, align 8, !dbg !1915
  %checknull22 = icmp eq ptr %22, null, !dbg !1915
  %23 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !1915
  br i1 %23, label %panic23, label %checkok27, !dbg !1915

checkok27:                                        ; preds = %checkok21
  %ptradd28 = getelementptr inbounds i8, ptr %22, i64 24, !dbg !1915
  %24 = load i64, ptr %ptradd28, align 8, !dbg !1915
  %ptradd_any = getelementptr i8, ptr %21, i64 %24, !dbg !1915
  store ptr %ptradd_any, ptr %starting_ptr, align 8, !dbg !1915
  call void @llvm.dbg.declare(metadata ptr %aligned_header_start, metadata !1916, metadata !DIExpression()), !dbg !1917
  %25 = load ptr, ptr %starting_ptr, align 8
  store ptr %25, ptr %ptr, align 8
  store i64 8, ptr %alignment29, align 8
  %26 = load ptr, ptr %ptr, align 8, !dbg !1918
  %ptrxi = ptrtoint ptr %26 to i64, !dbg !1918
  %27 = load i64, ptr %alignment29, align 8, !dbg !1921
  %28 = call i64 @std.core.mem.aligned_offset(i64 %ptrxi, i64 %27), !dbg !1922
  %intptr = inttoptr i64 %28 to ptr, !dbg !1922
  store ptr %intptr, ptr %aligned_header_start, align 8, !dbg !1922
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !1923, metadata !DIExpression()), !dbg !1924
  %29 = load ptr, ptr %aligned_header_start, align 8, !dbg !1925
  %ptradd_any30 = getelementptr i8, ptr %29, i64 8, !dbg !1926
  store ptr %ptradd_any30, ptr %mem, align 8, !dbg !1926
  %30 = load i64, ptr %alignment, align 8, !dbg !1927
  %gt = icmp ugt i64 %30, 8, !dbg !1927
  br i1 %gt, label %if.then, label %if.exit, !dbg !1927

if.then:                                          ; preds = %checkok27
  %31 = load ptr, ptr %mem, align 8
  store ptr %31, ptr %ptr31, align 8
  %32 = load i64, ptr %alignment, align 8
  store i64 %32, ptr %alignment32, align 8
  %33 = load ptr, ptr %ptr31, align 8, !dbg !1928
  %ptrxi33 = ptrtoint ptr %33 to i64, !dbg !1928
  %34 = load i64, ptr %alignment32, align 8, !dbg !1932
  %35 = call i64 @std.core.mem.aligned_offset(i64 %ptrxi33, i64 %34), !dbg !1933
  %intptr34 = inttoptr i64 %35 to ptr, !dbg !1933
  store ptr %intptr34, ptr %mem, align 8, !dbg !1933
  br label %if.exit, !dbg !1933

if.exit:                                          ; preds = %if.then, %checkok27
  call void @llvm.dbg.declare(metadata ptr %new_usage, metadata !1934, metadata !DIExpression()), !dbg !1935
  %36 = load ptr, ptr %mem, align 8, !dbg !1936
  %37 = load ptr, ptr %start_mem, align 8, !dbg !1937
  %38 = ptrtoint ptr %37 to i64, !dbg !1938
  %39 = ptrtoint ptr %36 to i64, !dbg !1938
  %40 = sub i64 %39, %38, !dbg !1938
  %41 = sdiv exact i64 %40, 1, !dbg !1938
  %42 = load i64, ptr %size, align 8, !dbg !1939
  %add = add i64 %41, %42, !dbg !1938
  store i64 %add, ptr %new_usage, align 8, !dbg !1938
  %43 = load i64, ptr %new_usage, align 8, !dbg !1940
  %44 = load ptr, ptr %self, align 8, !dbg !1941
  %checknull35 = icmp eq ptr %44, null, !dbg !1941
  %45 = call i1 @llvm.expect.i1(i1 %checknull35, i1 false), !dbg !1941
  br i1 %45, label %panic36, label %checkok40, !dbg !1941

checkok40:                                        ; preds = %if.exit
  %ptradd41 = getelementptr inbounds i8, ptr %44, i64 32, !dbg !1941
  %46 = load i64, ptr %ptradd41, align 8, !dbg !1941
  %le42 = icmp ule i64 %43, %46, !dbg !1940
  br i1 %le42, label %if.then43, label %if.exit70, !dbg !1940

if.then43:                                        ; preds = %checkok40
  %47 = load ptr, ptr %starting_ptr, align 8
  store ptr %47, ptr %addr, align 8
  %48 = load i64, ptr %new_usage, align 8, !dbg !1942
  %49 = load ptr, ptr %self, align 8, !dbg !1944
  %checknull44 = icmp eq ptr %49, null, !dbg !1944
  %50 = call i1 @llvm.expect.i1(i1 %checknull44, i1 false), !dbg !1944
  br i1 %50, label %panic45, label %checkok49, !dbg !1944

checkok49:                                        ; preds = %if.then43
  %ptradd50 = getelementptr inbounds i8, ptr %49, i64 24, !dbg !1944
  %51 = load i64, ptr %ptradd50, align 8, !dbg !1944
  %sub51 = sub i64 %48, %51, !dbg !1942
  store i64 %sub51, ptr %size52, align 8
  call void @llvm.dbg.declare(metadata ptr %chunk_start, metadata !1945, metadata !DIExpression()), !dbg !1946
  %52 = load ptr, ptr %mem, align 8, !dbg !1947
  %ptradd_any53 = getelementptr i8, ptr %52, i64 -8, !dbg !1948
  store ptr %ptradd_any53, ptr %chunk_start, align 8, !dbg !1948
  %53 = load ptr, ptr %chunk_start, align 8, !dbg !1949
  %checknull54 = icmp eq ptr %53, null, !dbg !1949
  %54 = call i1 @llvm.expect.i1(i1 %checknull54, i1 false), !dbg !1949
  br i1 %54, label %panic55, label %checkok59, !dbg !1949

checkok59:                                        ; preds = %checkok49
  %55 = load i64, ptr %size, align 8, !dbg !1950
  store i64 %55, ptr %53, align 8, !dbg !1950
  %56 = load ptr, ptr %self, align 8, !dbg !1951
  %checknull60 = icmp eq ptr %56, null, !dbg !1951
  %57 = call i1 @llvm.expect.i1(i1 %checknull60, i1 false), !dbg !1951
  br i1 %57, label %panic61, label %checkok65, !dbg !1951

checkok65:                                        ; preds = %checkok59
  %ptradd66 = getelementptr inbounds i8, ptr %56, i64 24, !dbg !1951
  %58 = load i64, ptr %new_usage, align 8, !dbg !1952
  store i64 %58, ptr %ptradd66, align 8, !dbg !1952
  %59 = load i32, ptr %init_type, align 4, !dbg !1953
  %eq67 = icmp eq i32 %59, 1, !dbg !1953
  br i1 %eq67, label %if.then68, label %if.exit69, !dbg !1953

if.then68:                                        ; preds = %checkok65
  %60 = load ptr, ptr %mem, align 8
  store ptr %60, ptr %dst, align 8
  %61 = load i64, ptr %size, align 8
  store i64 %61, ptr %len, align 8
  %62 = load ptr, ptr %dst, align 8, !dbg !1954
  %63 = load i64, ptr %len, align 8, !dbg !1957
  call void @llvm.memset.p0.i64(ptr align 16 %62, i8 0, i64 %63, i1 false), !dbg !1958
  br label %if.exit69, !dbg !1958

if.exit69:                                        ; preds = %if.then68, %checkok65
  %64 = load ptr, ptr %mem, align 8, !dbg !1959
  store ptr %64, ptr %0, align 8, !dbg !1959
  ret i64 0, !dbg !1959

if.exit70:                                        ; preds = %checkok40
  call void @llvm.dbg.declare(metadata ptr %page, metadata !1960, metadata !DIExpression()), !dbg !1961
  store ptr null, ptr %page, align 8, !dbg !1961
  %65 = load i64, ptr %alignment, align 8, !dbg !1962
  %lt71 = icmp ult i64 16, %65, !dbg !1962
  br i1 %lt71, label %if.then72, label %if.else143, !dbg !1962

if.then72:                                        ; preds = %if.exit70
  call void @llvm.dbg.declare(metadata ptr %total_alloc_size, metadata !1963, metadata !DIExpression()), !dbg !1965
  %66 = load i64, ptr %size, align 8, !dbg !1966
  %add73 = add i64 40, %66, !dbg !1967
  %67 = load i64, ptr %alignment, align 8, !dbg !1968
  %68 = call i64 @std.core.mem.aligned_offset(i64 %add73, i64 %67), !dbg !1969
  store i64 %68, ptr %total_alloc_size, align 8, !dbg !1969
  %69 = load i32, ptr %init_type, align 4, !dbg !1970
  %eq74 = icmp eq i32 %69, 1, !dbg !1970
  br i1 %eq74, label %if.then75, label %if.else, !dbg !1970

if.then75:                                        ; preds = %if.then72
  %70 = load ptr, ptr %self, align 8, !dbg !1971
  %checknull76 = icmp eq ptr %70, null, !dbg !1971
  %71 = call i1 @llvm.expect.i1(i1 %checknull76, i1 false), !dbg !1971
  br i1 %71, label %panic77, label %checkok81, !dbg !1971

checkok81:                                        ; preds = %if.then75
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %70, i32 16, i1 false)
  %72 = load i64, ptr %total_alloc_size, align 8
  store i64 %72, ptr %size82, align 8
  %73 = load i64, ptr %alignment, align 8
  store i64 %73, ptr %alignment83, align 8
  %74 = load i64, ptr %size82, align 8, !dbg !1973
  %not84 = icmp eq i64 %74, 0, !dbg !1973
  br i1 %not84, label %if.then85, label %if.exit86, !dbg !1973

if.then85:                                        ; preds = %checkok81
  store ptr null, ptr %blockret, align 8, !dbg !1976
  br label %expr_block.exit, !dbg !1976

if.exit86:                                        ; preds = %checkok81
  %ptradd87 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !1977
  %75 = load i64, ptr %ptradd87, align 8, !dbg !1977
  %76 = inttoptr i64 %75 to ptr, !dbg !1977
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !1888
  %77 = icmp eq ptr %76, %type, !dbg !1888
  br i1 %77, label %cache_hit, label %cache_miss, !dbg !1888

cache_miss:                                       ; preds = %if.exit86
  %ptradd88 = getelementptr inbounds i8, ptr %76, i64 16, !dbg !1888
  %78 = load ptr, ptr %ptradd88, align 8, !dbg !1888
  %79 = call ptr @.dyn_search(ptr %78, ptr @"$sel.acquire"), !dbg !1888
  store ptr %79, ptr %.inlinecache, align 8, !dbg !1888
  store ptr %76, ptr %.cachedtype, align 8, !dbg !1888
  br label %80, !dbg !1888

cache_hit:                                        ; preds = %if.exit86
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !1888
  br label %80, !dbg !1888

80:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %79, %cache_miss ], !dbg !1888
  %81 = icmp eq ptr %fn_phi, null, !dbg !1888
  br i1 %81, label %missing_function, label %match, !dbg !1888

missing_function:                                 ; preds = %80
  store %"char[]" { ptr @.panic_msg.38, i64 44 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg90, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg91, align 8
  %82 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %82(ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, ptr align 8 %indirectarg91, i32 123), !dbg !1978
  unreachable, !dbg !1978

match:                                            ; preds = %80
  %83 = load ptr, ptr %allocator, align 8
  %84 = load i64, ptr %size82, align 8
  %85 = load i64, ptr %alignment83, align 8
  %86 = call i64 %fn_phi(ptr %retparam, ptr %83, i64 %84, i32 1, i64 %85), !dbg !1978
  %not_err = icmp eq i64 %86, 0, !dbg !1978
  %87 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1978
  br i1 %87, label %after_check, label %assign_optional, !dbg !1978

assign_optional:                                  ; preds = %match
  store i64 %86, ptr %error_var, align 8, !dbg !1978
  br label %guard_block, !dbg !1978

after_check:                                      ; preds = %match
  %88 = load ptr, ptr %retparam, align 8, !dbg !1978
  store ptr %88, ptr %blockret, align 8, !dbg !1978
  br label %expr_block.exit, !dbg !1978

expr_block.exit:                                  ; preds = %after_check, %if.then85
  br label %noerr_block, !dbg !1978

guard_block:                                      ; preds = %assign_optional
  %89 = load i64, ptr %error_var, align 8, !dbg !1978
  ret i64 %89, !dbg !1978

noerr_block:                                      ; preds = %expr_block.exit
  %90 = load ptr, ptr %blockret, align 8, !dbg !1978
  store ptr %90, ptr %mem, align 8, !dbg !1978
  br label %if.exit127, !dbg !1978

if.else:                                          ; preds = %if.then72
  %91 = load ptr, ptr %self, align 8, !dbg !1979
  %checknull93 = icmp eq ptr %91, null, !dbg !1979
  %92 = call i1 @llvm.expect.i1(i1 %checknull93, i1 false), !dbg !1979
  br i1 %92, label %panic94, label %checkok98, !dbg !1979

checkok98:                                        ; preds = %if.else
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator99, ptr align 8 %91, i32 16, i1 false)
  %93 = load i64, ptr %total_alloc_size, align 8
  store i64 %93, ptr %size100, align 8
  %94 = load i64, ptr %alignment, align 8
  store i64 %94, ptr %alignment101, align 8
  %95 = load i64, ptr %size100, align 8, !dbg !1981
  %not103 = icmp eq i64 %95, 0, !dbg !1981
  br i1 %not103, label %if.then104, label %if.exit105, !dbg !1981

if.then104:                                       ; preds = %checkok98
  store ptr null, ptr %blockret102, align 8, !dbg !1984
  br label %expr_block.exit124, !dbg !1984

if.exit105:                                       ; preds = %checkok98
  %ptradd106 = getelementptr inbounds i8, ptr %allocator99, i64 8, !dbg !1985
  %96 = load i64, ptr %ptradd106, align 8, !dbg !1985
  %97 = inttoptr i64 %96 to ptr, !dbg !1985
  %type109 = load ptr, ptr %.cachedtype108, align 8, !dbg !1888
  %98 = icmp eq ptr %97, %type109, !dbg !1888
  br i1 %98, label %cache_hit112, label %cache_miss110, !dbg !1888

cache_miss110:                                    ; preds = %if.exit105
  %ptradd111 = getelementptr inbounds i8, ptr %97, i64 16, !dbg !1888
  %99 = load ptr, ptr %ptradd111, align 8, !dbg !1888
  %100 = call ptr @.dyn_search(ptr %99, ptr @"$sel.acquire"), !dbg !1888
  store ptr %100, ptr %.inlinecache107, align 8, !dbg !1888
  store ptr %97, ptr %.cachedtype108, align 8, !dbg !1888
  br label %101, !dbg !1888

cache_hit112:                                     ; preds = %if.exit105
  %cache_hit_fn113 = load ptr, ptr %.inlinecache107, align 8, !dbg !1888
  br label %101, !dbg !1888

101:                                              ; preds = %cache_hit112, %cache_miss110
  %fn_phi114 = phi ptr [ %cache_hit_fn113, %cache_hit112 ], [ %100, %cache_miss110 ], !dbg !1888
  %102 = icmp eq ptr %fn_phi114, null, !dbg !1888
  br i1 %102, label %missing_function115, label %match119, !dbg !1888

missing_function115:                              ; preds = %101
  store %"char[]" { ptr @.panic_msg.38, i64 44 }, ptr %indirectarg116, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg117, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg118, align 8
  %103 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %103(ptr align 8 %indirectarg116, ptr align 8 %indirectarg117, ptr align 8 %indirectarg118, i32 116), !dbg !1986
  unreachable, !dbg !1986

match119:                                         ; preds = %101
  %104 = load ptr, ptr %allocator99, align 8
  %105 = load i64, ptr %size100, align 8
  %106 = load i64, ptr %alignment101, align 8
  %107 = call i64 %fn_phi114(ptr %retparam120, ptr %104, i64 %105, i32 0, i64 %106), !dbg !1986
  %not_err121 = icmp eq i64 %107, 0, !dbg !1986
  %108 = call i1 @llvm.expect.i1(i1 %not_err121, i1 true), !dbg !1986
  br i1 %108, label %after_check123, label %assign_optional122, !dbg !1986

assign_optional122:                               ; preds = %match119
  store i64 %107, ptr %error_var92, align 8, !dbg !1986
  br label %guard_block125, !dbg !1986

after_check123:                                   ; preds = %match119
  %109 = load ptr, ptr %retparam120, align 8, !dbg !1986
  store ptr %109, ptr %blockret102, align 8, !dbg !1986
  br label %expr_block.exit124, !dbg !1986

expr_block.exit124:                               ; preds = %after_check123, %if.then104
  br label %noerr_block126, !dbg !1986

guard_block125:                                   ; preds = %assign_optional122
  %110 = load i64, ptr %error_var92, align 8, !dbg !1986
  ret i64 %110, !dbg !1986

noerr_block126:                                   ; preds = %expr_block.exit124
  %111 = load ptr, ptr %blockret102, align 8, !dbg !1986
  store ptr %111, ptr %mem, align 8, !dbg !1986
  br label %if.exit127, !dbg !1986

if.exit127:                                       ; preds = %noerr_block126, %noerr_block
  %112 = load ptr, ptr %mem, align 8, !dbg !1987
  %ptradd_any128 = getelementptr i8, ptr %112, i64 -40, !dbg !1988
  store ptr %ptradd_any128, ptr %page, align 8, !dbg !1988
  %113 = load ptr, ptr %page, align 8, !dbg !1989
  %checknull129 = icmp eq ptr %113, null, !dbg !1989
  %114 = call i1 @llvm.expect.i1(i1 %checknull129, i1 false), !dbg !1989
  br i1 %114, label %panic130, label %checkok134, !dbg !1989

checkok134:                                       ; preds = %if.exit127
  %ptradd135 = getelementptr inbounds i8, ptr %113, i64 8, !dbg !1989
  %115 = load ptr, ptr %mem, align 8, !dbg !1990
  store ptr %115, ptr %ptradd135, align 8, !dbg !1990
  %116 = load ptr, ptr %page, align 8, !dbg !1991
  %checknull136 = icmp eq ptr %116, null, !dbg !1991
  %117 = call i1 @llvm.expect.i1(i1 %checknull136, i1 false), !dbg !1991
  br i1 %117, label %panic137, label %checkok141, !dbg !1991

checkok141:                                       ; preds = %checkok134
  %ptradd142 = getelementptr inbounds i8, ptr %116, i64 24, !dbg !1991
  %118 = load i64, ptr %size, align 8, !dbg !1992
  %or = or i64 %118, -9223372036854775808, !dbg !1992
  store i64 %or, ptr %ptradd142, align 8, !dbg !1992
  br label %if.exit206, !dbg !1992

if.else143:                                       ; preds = %if.exit70
  call void @llvm.dbg.declare(metadata ptr %padded_header_size, metadata !1993, metadata !DIExpression()), !dbg !1995
  %119 = call i64 @std.core.mem.aligned_offset(i64 40, i64 16), !dbg !1996
  store i64 %119, ptr %padded_header_size, align 8, !dbg !1996
  call void @llvm.dbg.declare(metadata ptr %total_alloc_size144, metadata !1997, metadata !DIExpression()), !dbg !1998
  %120 = load i64, ptr %padded_header_size, align 8, !dbg !1999
  %121 = load i64, ptr %size, align 8, !dbg !2000
  %add145 = add i64 %120, %121, !dbg !1999
  store i64 %add145, ptr %total_alloc_size144, align 8, !dbg !1999
  call void @llvm.dbg.declare(metadata ptr %alloc, metadata !2001, metadata !DIExpression()), !dbg !2002
  %122 = load ptr, ptr %self, align 8, !dbg !2003
  %checknull147 = icmp eq ptr %122, null, !dbg !2003
  %123 = call i1 @llvm.expect.i1(i1 %checknull147, i1 false), !dbg !2003
  br i1 %123, label %panic148, label %checkok152, !dbg !2003

checkok152:                                       ; preds = %if.else143
  %ptradd153 = getelementptr inbounds i8, ptr %122, i64 8, !dbg !2004
  %124 = load i64, ptr %ptradd153, align 8, !dbg !2004
  %125 = inttoptr i64 %124 to ptr, !dbg !2004
  %type156 = load ptr, ptr %.cachedtype155, align 8, !dbg !1888
  %126 = icmp eq ptr %125, %type156, !dbg !1888
  br i1 %126, label %cache_hit159, label %cache_miss157, !dbg !1888

cache_miss157:                                    ; preds = %checkok152
  %ptradd158 = getelementptr inbounds i8, ptr %125, i64 16, !dbg !1888
  %127 = load ptr, ptr %ptradd158, align 8, !dbg !1888
  %128 = call ptr @.dyn_search(ptr %127, ptr @"$sel.acquire"), !dbg !1888
  store ptr %128, ptr %.inlinecache154, align 8, !dbg !1888
  store ptr %125, ptr %.cachedtype155, align 8, !dbg !1888
  br label %129, !dbg !1888

cache_hit159:                                     ; preds = %checkok152
  %cache_hit_fn160 = load ptr, ptr %.inlinecache154, align 8, !dbg !1888
  br label %129, !dbg !1888

129:                                              ; preds = %cache_hit159, %cache_miss157
  %fn_phi161 = phi ptr [ %cache_hit_fn160, %cache_hit159 ], [ %128, %cache_miss157 ], !dbg !1888
  %130 = icmp eq ptr %fn_phi161, null, !dbg !1888
  br i1 %130, label %missing_function162, label %match166, !dbg !1888

missing_function162:                              ; preds = %129
  store %"char[]" { ptr @.panic_msg.38, i64 44 }, ptr %indirectarg163, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg164, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg165, align 8
  %131 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %131(ptr align 8 %indirectarg163, ptr align 8 %indirectarg164, ptr align 8 %indirectarg165, i32 191), !dbg !2003
  unreachable, !dbg !2003

match166:                                         ; preds = %129
  %132 = load ptr, ptr %122, align 8
  %133 = load i64, ptr %total_alloc_size144, align 8
  %134 = load i32, ptr %init_type, align 4
  %135 = call i64 %fn_phi161(ptr %retparam167, ptr %132, i64 %133, i32 %134, i64 0), !dbg !2003
  %not_err168 = icmp eq i64 %135, 0, !dbg !2003
  %136 = call i1 @llvm.expect.i1(i1 %not_err168, i1 true), !dbg !2003
  br i1 %136, label %after_check170, label %assign_optional169, !dbg !2003

assign_optional169:                               ; preds = %match166
  store i64 %135, ptr %error_var146, align 8, !dbg !2003
  br label %guard_block171, !dbg !2003

after_check170:                                   ; preds = %match166
  br label %noerr_block172, !dbg !2003

guard_block171:                                   ; preds = %assign_optional169
  %137 = load i64, ptr %error_var146, align 8, !dbg !2003
  ret i64 %137, !dbg !2003

noerr_block172:                                   ; preds = %after_check170
  %138 = load ptr, ptr %retparam167, align 8, !dbg !2003
  store ptr %138, ptr %alloc, align 8, !dbg !2003
  %139 = load ptr, ptr %alloc, align 8, !dbg !2005
  %140 = load i64, ptr %padded_header_size, align 8, !dbg !2006
  %sub173 = sub i64 %140, 40, !dbg !2005
  %ptradd_any174 = getelementptr i8, ptr %139, i64 %sub173, !dbg !2005
  store ptr %ptradd_any174, ptr %page, align 8, !dbg !2005
  %141 = load ptr, ptr %page, align 8, !dbg !2007
  %142 = call i8 @std.core.mem.ptr_is_aligned(ptr %141, i64 8) #5, !dbg !2008
  %143 = trunc i8 %142 to i1, !dbg !2008
  br i1 %143, label %assert_ok179, label %assert_fail175, !dbg !2008

assert_fail175:                                   ; preds = %noerr_block172
  store %"char[]" { ptr @.panic_msg.33, i64 16 }, ptr %indirectarg176, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg177, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg178, align 8
  %144 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %144(ptr align 8 %indirectarg176, ptr align 8 %indirectarg177, ptr align 8 %indirectarg178, i32 195), !dbg !2008
  unreachable, !dbg !2008

assert_ok179:                                     ; preds = %noerr_block172
  %145 = load ptr, ptr %page, align 8, !dbg !2009
  %checknull180 = icmp eq ptr %145, null, !dbg !2009
  %146 = call i1 @llvm.expect.i1(i1 %checknull180, i1 false), !dbg !2009
  br i1 %146, label %panic181, label %checkok185, !dbg !2009

checkok185:                                       ; preds = %assert_ok179
  %ptradd186 = getelementptr inbounds i8, ptr %145, i64 40, !dbg !2009
  %147 = call i8 @std.core.mem.ptr_is_aligned(ptr %ptradd186, i64 16) #5, !dbg !2010
  %148 = trunc i8 %147 to i1, !dbg !2010
  br i1 %148, label %assert_ok191, label %assert_fail187, !dbg !2010

assert_fail187:                                   ; preds = %checkok185
  store %"char[]" { ptr @.panic_msg.33, i64 16 }, ptr %indirectarg188, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg189, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg190, align 8
  %149 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %149(ptr align 8 %indirectarg188, ptr align 8 %indirectarg189, ptr align 8 %indirectarg190, i32 196), !dbg !2010
  unreachable, !dbg !2010

assert_ok191:                                     ; preds = %checkok185
  %150 = load ptr, ptr %page, align 8, !dbg !2011
  %checknull192 = icmp eq ptr %150, null, !dbg !2011
  %151 = call i1 @llvm.expect.i1(i1 %checknull192, i1 false), !dbg !2011
  br i1 %151, label %panic193, label %checkok197, !dbg !2011

checkok197:                                       ; preds = %assert_ok191
  %ptradd198 = getelementptr inbounds i8, ptr %150, i64 8, !dbg !2011
  %152 = load ptr, ptr %alloc, align 8, !dbg !2012
  store ptr %152, ptr %ptradd198, align 8, !dbg !2012
  %153 = load ptr, ptr %page, align 8, !dbg !2013
  %checknull199 = icmp eq ptr %153, null, !dbg !2013
  %154 = call i1 @llvm.expect.i1(i1 %checknull199, i1 false), !dbg !2013
  br i1 %154, label %panic200, label %checkok204, !dbg !2013

checkok204:                                       ; preds = %checkok197
  %ptradd205 = getelementptr inbounds i8, ptr %153, i64 24, !dbg !2013
  %155 = load i64, ptr %size, align 8, !dbg !2014
  store i64 %155, ptr %ptradd205, align 8, !dbg !2014
  br label %if.exit206, !dbg !2014

if.exit206:                                       ; preds = %checkok204, %checkok141
  %156 = load ptr, ptr %page, align 8, !dbg !2015
  %checknull207 = icmp eq ptr %156, null, !dbg !2015
  %157 = call i1 @llvm.expect.i1(i1 %checknull207, i1 false), !dbg !2015
  br i1 %157, label %panic208, label %checkok212, !dbg !2015

checkok212:                                       ; preds = %if.exit206
  %ptradd213 = getelementptr inbounds i8, ptr %156, i64 32, !dbg !2015
  store i64 -1, ptr %ptradd213, align 8, !dbg !2016
  %158 = load ptr, ptr %page, align 8, !dbg !2017
  %checknull214 = icmp eq ptr %158, null, !dbg !2017
  %159 = call i1 @llvm.expect.i1(i1 %checknull214, i1 false), !dbg !2017
  br i1 %159, label %panic215, label %checkok219, !dbg !2017

checkok219:                                       ; preds = %checkok212
  %ptradd220 = getelementptr inbounds i8, ptr %158, i64 16, !dbg !2017
  %160 = load ptr, ptr %self, align 8, !dbg !2018
  %checknull221 = icmp eq ptr %160, null, !dbg !2018
  %161 = call i1 @llvm.expect.i1(i1 %checknull221, i1 false), !dbg !2018
  br i1 %161, label %panic222, label %checkok226, !dbg !2018

checkok226:                                       ; preds = %checkok219
  %ptradd227 = getelementptr inbounds i8, ptr %160, i64 24, !dbg !2018
  %162 = load i64, ptr %ptradd227, align 8, !dbg !2018
  %add228 = add i64 %162, 1, !dbg !2018
  store i64 %add228, ptr %ptradd227, align 8, !dbg !2018
  store i64 %add228, ptr %ptradd220, align 8, !dbg !2018
  %163 = load ptr, ptr %page, align 8, !dbg !2019
  %checknull229 = icmp eq ptr %163, null, !dbg !2019
  %164 = call i1 @llvm.expect.i1(i1 %checknull229, i1 false), !dbg !2019
  br i1 %164, label %panic230, label %checkok234, !dbg !2019

checkok234:                                       ; preds = %checkok226
  %165 = load ptr, ptr %self, align 8, !dbg !2020
  %checknull235 = icmp eq ptr %165, null, !dbg !2020
  %166 = call i1 @llvm.expect.i1(i1 %checknull235, i1 false), !dbg !2020
  br i1 %166, label %panic236, label %checkok240, !dbg !2020

checkok240:                                       ; preds = %checkok234
  %ptradd241 = getelementptr inbounds i8, ptr %165, i64 16, !dbg !2020
  %167 = load ptr, ptr %ptradd241, align 8, !dbg !2020
  store ptr %167, ptr %163, align 8, !dbg !2020
  %168 = load ptr, ptr %self, align 8, !dbg !2021
  %checknull242 = icmp eq ptr %168, null, !dbg !2021
  %169 = call i1 @llvm.expect.i1(i1 %checknull242, i1 false), !dbg !2021
  br i1 %169, label %panic243, label %checkok247, !dbg !2021

checkok247:                                       ; preds = %checkok240
  %ptradd248 = getelementptr inbounds i8, ptr %168, i64 16, !dbg !2021
  %170 = load ptr, ptr %page, align 8, !dbg !2022
  store ptr %170, ptr %ptradd248, align 8, !dbg !2022
  %171 = load ptr, ptr %page, align 8, !dbg !2023
  %checknull250 = icmp eq ptr %171, null, !dbg !2023
  %172 = call i1 @llvm.expect.i1(i1 %checknull250, i1 false), !dbg !2023
  br i1 %172, label %panic251, label %checkok255, !dbg !2023

checkok255:                                       ; preds = %checkok247
  %ptradd256 = getelementptr inbounds i8, ptr %171, i64 40, !dbg !2023
  store ptr %ptradd256, ptr %0, align 8, !dbg !2024
  ret i64 0, !dbg !2024

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg2, align 8
  %173 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %173(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 142), !dbg !1890
  unreachable, !dbg !1890

panic17:                                          ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg20, align 8
  %174 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %174(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 145), !dbg !1911
  unreachable, !dbg !1911

panic23:                                          ; preds = %checkok21
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg26, align 8
  %175 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %175(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 146), !dbg !1915
  unreachable, !dbg !1915

panic36:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg39, align 8
  %176 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %176(ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, i32 156), !dbg !1941
  unreachable, !dbg !1941

panic45:                                          ; preds = %if.then43
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg48, align 8
  %177 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %177(ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, i32 158), !dbg !1944
  unreachable, !dbg !1944

panic55:                                          ; preds = %checkok49
  store %"char[]" { ptr @.panic_msg.90, i64 52 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg58, align 8
  %178 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %178(ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, i32 160), !dbg !1949
  unreachable, !dbg !1949

panic61:                                          ; preds = %checkok59
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg64, align 8
  %179 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %179(ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, i32 161), !dbg !1951
  unreachable, !dbg !1951

panic77:                                          ; preds = %if.then75
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg78, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg79, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg80, align 8
  %180 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %180(ptr align 8 %indirectarg78, ptr align 8 %indirectarg79, ptr align 8 %indirectarg80, i32 176), !dbg !1971
  unreachable, !dbg !1971

panic94:                                          ; preds = %if.else
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg97, align 8
  %181 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %181(ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, i32 180), !dbg !1979
  unreachable, !dbg !1979

panic130:                                         ; preds = %if.exit127
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg131, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg132, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg133, align 8
  %182 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %182(ptr align 8 %indirectarg131, ptr align 8 %indirectarg132, ptr align 8 %indirectarg133, i32 183), !dbg !1989
  unreachable, !dbg !1989

panic137:                                         ; preds = %checkok134
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg138, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg139, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg140, align 8
  %183 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %183(ptr align 8 %indirectarg138, ptr align 8 %indirectarg139, ptr align 8 %indirectarg140, i32 184), !dbg !1991
  unreachable, !dbg !1991

panic148:                                         ; preds = %if.else143
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg149, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg150, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg151, align 8
  %184 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %184(ptr align 8 %indirectarg149, ptr align 8 %indirectarg150, ptr align 8 %indirectarg151, i32 191), !dbg !2003
  unreachable, !dbg !2003

panic181:                                         ; preds = %assert_ok179
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg182, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg183, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg184, align 8
  %185 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %185(ptr align 8 %indirectarg182, ptr align 8 %indirectarg183, ptr align 8 %indirectarg184, i32 196), !dbg !2009
  unreachable, !dbg !2009

panic193:                                         ; preds = %assert_ok191
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg194, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg195, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg196, align 8
  %186 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %186(ptr align 8 %indirectarg194, ptr align 8 %indirectarg195, ptr align 8 %indirectarg196, i32 197), !dbg !2011
  unreachable, !dbg !2011

panic200:                                         ; preds = %checkok197
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg201, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg202, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg203, align 8
  %187 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %187(ptr align 8 %indirectarg201, ptr align 8 %indirectarg202, ptr align 8 %indirectarg203, i32 198), !dbg !2013
  unreachable, !dbg !2013

panic208:                                         ; preds = %if.exit206
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg209, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg210, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg211, align 8
  %188 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %188(ptr align 8 %indirectarg209, ptr align 8 %indirectarg210, ptr align 8 %indirectarg211, i32 202), !dbg !2015
  unreachable, !dbg !2015

panic215:                                         ; preds = %checkok212
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg216, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg217, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg218, align 8
  %189 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %189(ptr align 8 %indirectarg216, ptr align 8 %indirectarg217, ptr align 8 %indirectarg218, i32 204), !dbg !2017
  unreachable, !dbg !2017

panic222:                                         ; preds = %checkok219
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg223, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg224, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg225, align 8
  %190 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %190(ptr align 8 %indirectarg223, ptr align 8 %indirectarg224, ptr align 8 %indirectarg225, i32 204), !dbg !2018
  unreachable, !dbg !2018

panic230:                                         ; preds = %checkok226
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg231, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg232, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg233, align 8
  %191 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %191(ptr align 8 %indirectarg231, ptr align 8 %indirectarg232, ptr align 8 %indirectarg233, i32 206), !dbg !2019
  unreachable, !dbg !2019

panic236:                                         ; preds = %checkok234
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg237, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg238, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg239, align 8
  %192 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %192(ptr align 8 %indirectarg237, ptr align 8 %indirectarg238, ptr align 8 %indirectarg239, i32 206), !dbg !2020
  unreachable, !dbg !2020

panic243:                                         ; preds = %checkok240
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg244, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg245, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg246, align 8
  %193 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %193(ptr align 8 %indirectarg244, ptr align 8 %indirectarg245, ptr align 8 %indirectarg246, i32 207), !dbg !2021
  unreachable, !dbg !2021

panic251:                                         ; preds = %checkok247
  store %"char[]" { ptr @.panic_msg.23, i64 45 }, ptr %indirectarg252, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg253, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg254, align 8
  %194 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %194(ptr align 8 %indirectarg252, ptr align 8 %indirectarg253, ptr align 8 %indirectarg254, i32 208), !dbg !2023
  unreachable, !dbg !2023
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TempAllocator.print_pages(ptr %0, ptr %1) #0 comdat !dbg !2025 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %f = alloca ptr, align 8
  %last_page = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg8 = alloca %any, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"any[]", align 8
  %reterr = alloca i64, align 8
  %error_var11 = alloca i64, align 8
  %retparam12 = alloca i64, align 8
  %indirectarg13 = alloca %any, align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"any[]", align 8
  %index = alloca i32, align 4
  %is_not_aligned = alloca i8, align 1
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %error_var29 = alloca i64, align 8
  %varargslots = alloca [5 x %any], align 16
  %taddr = alloca i32, align 4
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %taddr38 = alloca i64, align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %taddr55 = alloca ptr, align 8
  %taddr57 = alloca %"char[]", align 8
  %retparam59 = alloca i64, align 8
  %indirectarg60 = alloca %any, align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"any[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !2033
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !2033
  br i1 %3, label %panic, label %checkok, !dbg !2033

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2034, metadata !DIExpression()), !dbg !2035
  store ptr %1, ptr %f, align 8
  call void @llvm.dbg.declare(metadata ptr %f, metadata !2036, metadata !DIExpression()), !dbg !2037
  call void @llvm.dbg.declare(metadata ptr %last_page, metadata !2038, metadata !DIExpression()), !dbg !2039
  %4 = load ptr, ptr %self, align 8, !dbg !2040
  %checknull = icmp eq ptr %4, null, !dbg !2040
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2040
  br i1 %5, label %panic3, label %checkok7, !dbg !2040

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !2040
  %6 = load ptr, ptr %ptradd, align 8, !dbg !2040
  store ptr %6, ptr %last_page, align 8, !dbg !2040
  %7 = load ptr, ptr %last_page, align 8, !dbg !2041
  %not = icmp eq ptr %7, null, !dbg !2041
  br i1 %not, label %if.then, label %if.exit, !dbg !2041

if.then:                                          ; preds = %checkok7
  %8 = load ptr, ptr %f, align 8, !dbg !2042
  %9 = insertvalue %any undef, ptr %8, 0, !dbg !2042
  %10 = insertvalue %any %9, i64 ptrtoint (ptr @"$ct.std.io.File" to i64), 1, !dbg !2042
  store %any %10, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.str.92, i64 10 }, ptr %indirectarg9, align 8
  store %"any[]" zeroinitializer, ptr %indirectarg10, align 8
  %11 = call i64 @std.io.fprintf(ptr %retparam, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10), !dbg !2044
  %not_err = icmp eq i64 %11, 0, !dbg !2044
  %12 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2044
  br i1 %12, label %after_check, label %assign_optional, !dbg !2044

assign_optional:                                  ; preds = %if.then
  store i64 %11, ptr %error_var, align 8, !dbg !2044
  br label %guard_block, !dbg !2044

after_check:                                      ; preds = %if.then
  br label %noerr_block, !dbg !2044

guard_block:                                      ; preds = %assign_optional
  %13 = load i64, ptr %error_var, align 8, !dbg !2044
  ret i64 %13, !dbg !2044

noerr_block:                                      ; preds = %after_check
  ret i64 0

if.exit:                                          ; preds = %checkok7
  %14 = load ptr, ptr %f, align 8, !dbg !2045
  %15 = insertvalue %any undef, ptr %14, 0, !dbg !2045
  %16 = insertvalue %any %15, i64 ptrtoint (ptr @"$ct.std.io.File" to i64), 1, !dbg !2045
  store %any %16, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.str.93, i64 13 }, ptr %indirectarg14, align 8
  store %"any[]" zeroinitializer, ptr %indirectarg15, align 8
  %17 = call i64 @std.io.fprintf(ptr %retparam12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15), !dbg !2046
  %not_err16 = icmp eq i64 %17, 0, !dbg !2046
  %18 = call i1 @llvm.expect.i1(i1 %not_err16, i1 true), !dbg !2046
  br i1 %18, label %after_check18, label %assign_optional17, !dbg !2046

assign_optional17:                                ; preds = %if.exit
  store i64 %17, ptr %error_var11, align 8, !dbg !2046
  br label %guard_block19, !dbg !2046

after_check18:                                    ; preds = %if.exit
  br label %noerr_block20, !dbg !2046

guard_block19:                                    ; preds = %assign_optional17
  %19 = load i64, ptr %error_var11, align 8, !dbg !2046
  ret i64 %19, !dbg !2046

noerr_block20:                                    ; preds = %after_check18
  call void @llvm.dbg.declare(metadata ptr %index, metadata !2047, metadata !DIExpression()), !dbg !2048
  store i32 0, ptr %index, align 4, !dbg !2049
  br label %loop.cond, !dbg !2050

loop.cond:                                        ; preds = %checkok73, %noerr_block20
  %20 = load ptr, ptr %last_page, align 8, !dbg !2051
  %ptrbool = icmp ne ptr %20, null, !dbg !2051
  br i1 %ptrbool, label %loop.body, label %loop.exit, !dbg !2051

loop.body:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %is_not_aligned, metadata !2053, metadata !DIExpression()), !dbg !2055
  %21 = load ptr, ptr %last_page, align 8, !dbg !2056
  %checknull21 = icmp eq ptr %21, null, !dbg !2056
  %22 = call i1 @llvm.expect.i1(i1 %checknull21, i1 false), !dbg !2056
  br i1 %22, label %panic22, label %checkok26, !dbg !2056

checkok26:                                        ; preds = %loop.body
  %ptradd27 = getelementptr inbounds i8, ptr %21, i64 24, !dbg !2056
  %23 = load i64, ptr %ptradd27, align 8, !dbg !2056
  %and = and i64 %23, -9223372036854775808, !dbg !2056
  %not28 = icmp eq i64 %and, 0, !dbg !2056
  %24 = zext i1 %not28 to i8, !dbg !2056
  store i8 %24, ptr %is_not_aligned, align 1, !dbg !2056
  %25 = load ptr, ptr %f, align 8, !dbg !2057
  %26 = insertvalue %any undef, ptr %25, 0, !dbg !2057
  %27 = insertvalue %any %26, i64 ptrtoint (ptr @"$ct.std.io.File" to i64), 1, !dbg !2057
  %28 = load i32, ptr %index, align 4, !dbg !2058
  %add = add i32 %28, 1, !dbg !2058
  store i32 %add, ptr %index, align 4, !dbg !2058
  store i32 %add, ptr %taddr, align 4
  %29 = insertvalue %any undef, ptr %taddr, 0
  %30 = insertvalue %any %29, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %any %30, ptr %varargslots, align 16
  %31 = load ptr, ptr %last_page, align 8, !dbg !2059
  %checknull30 = icmp eq ptr %31, null, !dbg !2059
  %32 = call i1 @llvm.expect.i1(i1 %checknull30, i1 false), !dbg !2059
  br i1 %32, label %panic31, label %checkok35, !dbg !2059

checkok35:                                        ; preds = %checkok26
  %ptradd36 = getelementptr inbounds i8, ptr %31, i64 24, !dbg !2059
  %33 = load i64, ptr %ptradd36, align 8, !dbg !2059
  %and37 = and i64 %33, 9223372036854775807, !dbg !2059
  store i64 %and37, ptr %taddr38, align 8
  %34 = insertvalue %any undef, ptr %taddr38, 0
  %35 = insertvalue %any %34, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  %ptradd39 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %35, ptr %ptradd39, align 16
  %36 = load ptr, ptr %last_page, align 8, !dbg !2060
  %checknull40 = icmp eq ptr %36, null, !dbg !2060
  %37 = call i1 @llvm.expect.i1(i1 %checknull40, i1 false), !dbg !2060
  br i1 %37, label %panic41, label %checkok45, !dbg !2060

checkok45:                                        ; preds = %checkok35
  %ptradd46 = getelementptr inbounds i8, ptr %36, i64 16, !dbg !2060
  %38 = insertvalue %any undef, ptr %ptradd46, 0, !dbg !2060
  %39 = insertvalue %any %38, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !2060
  %ptradd47 = getelementptr inbounds i8, ptr %varargslots, i64 32, !dbg !2060
  store %any %39, ptr %ptradd47, align 16, !dbg !2060
  %40 = load ptr, ptr %last_page, align 8, !dbg !2061
  %checknull48 = icmp eq ptr %40, null, !dbg !2061
  %41 = call i1 @llvm.expect.i1(i1 %checknull48, i1 false), !dbg !2061
  br i1 %41, label %panic49, label %checkok53, !dbg !2061

checkok53:                                        ; preds = %checkok45
  %ptradd54 = getelementptr inbounds i8, ptr %40, i64 40, !dbg !2061
  store ptr %ptradd54, ptr %taddr55, align 8
  %42 = insertvalue %any undef, ptr %taddr55, 0
  %43 = insertvalue %any %42, i64 ptrtoint (ptr @"$ct.p$char" to i64), 1
  %ptradd56 = getelementptr inbounds i8, ptr %varargslots, i64 48
  store %any %43, ptr %ptradd56, align 16
  %44 = load i8, ptr %is_not_aligned, align 1, !dbg !2062
  %45 = trunc i8 %44 to i1, !dbg !2062
  %ternary = select i1 %45, %"char[]" zeroinitializer, %"char[]" { ptr @.str.95, i64 10 }, !dbg !2063
  store %"char[]" %ternary, ptr %taddr57, align 8
  %46 = insertvalue %any undef, ptr %taddr57, 0
  %47 = insertvalue %any %46, i64 ptrtoint (ptr @"$ct.String" to i64), 1
  %ptradd58 = getelementptr inbounds i8, ptr %varargslots, i64 64
  store %any %47, ptr %ptradd58, align 16
  %48 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %48, i64 5, 1
  store %any %27, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.str.94, i64 25 }, ptr %indirectarg61, align 8
  store %"any[]" %"$$temp", ptr %indirectarg62, align 8
  %49 = call i64 @std.io.fprintf(ptr %retparam59, ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62), !dbg !2064
  %not_err63 = icmp eq i64 %49, 0, !dbg !2064
  %50 = call i1 @llvm.expect.i1(i1 %not_err63, i1 true), !dbg !2064
  br i1 %50, label %after_check65, label %assign_optional64, !dbg !2064

assign_optional64:                                ; preds = %checkok53
  store i64 %49, ptr %error_var29, align 8, !dbg !2064
  br label %guard_block66, !dbg !2064

after_check65:                                    ; preds = %checkok53
  br label %noerr_block67, !dbg !2064

guard_block66:                                    ; preds = %assign_optional64
  %51 = load i64, ptr %error_var29, align 8, !dbg !2064
  ret i64 %51, !dbg !2064

noerr_block67:                                    ; preds = %after_check65
  %52 = load ptr, ptr %last_page, align 8, !dbg !2065
  %checknull68 = icmp eq ptr %52, null, !dbg !2065
  %53 = call i1 @llvm.expect.i1(i1 %checknull68, i1 false), !dbg !2065
  br i1 %53, label %panic69, label %checkok73, !dbg !2065

checkok73:                                        ; preds = %noerr_block67
  %54 = load ptr, ptr %52, align 8, !dbg !2065
  store ptr %54, ptr %last_page, align 8, !dbg !2065
  br label %loop.cond, !dbg !2065

loop.exit:                                        ; preds = %loop.cond
  ret i64 0, !dbg !2065

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.91, i64 11 }, ptr %indirectarg2, align 8
  %55 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %55(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 211), !dbg !2035
  unreachable, !dbg !2035

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.91, i64 11 }, ptr %indirectarg6, align 8
  %56 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %56(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 213), !dbg !2040
  unreachable, !dbg !2040

panic22:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.83, i64 50 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.91, i64 11 }, ptr %indirectarg25, align 8
  %57 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %57(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 223), !dbg !2056
  unreachable, !dbg !2056

panic31:                                          ; preds = %checkok26
  store %"char[]" { ptr @.panic_msg.83, i64 50 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.91, i64 11 }, ptr %indirectarg34, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 225), !dbg !2059
  unreachable, !dbg !2059

panic41:                                          ; preds = %checkok35
  store %"char[]" { ptr @.panic_msg.83, i64 50 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.91, i64 11 }, ptr %indirectarg44, align 8
  %59 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %59(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 225), !dbg !2060
  unreachable, !dbg !2060

panic49:                                          ; preds = %checkok45
  store %"char[]" { ptr @.panic_msg.83, i64 50 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.func.91, i64 11 }, ptr %indirectarg52, align 8
  %60 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %60(ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, i32 225), !dbg !2061
  unreachable, !dbg !2061

panic69:                                          ; preds = %noerr_block67
  store %"char[]" { ptr @.panic_msg.83, i64 50 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.func.91, i64 11 }, ptr %indirectarg72, align 8
  %61 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %61(ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, i32 226), !dbg !2065
  unreachable, !dbg !2065
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.new_temp_allocator(ptr %0, i64 %1, ptr align 8 %2) #0 comdat !dbg !2066 {
entry:
  %size = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %temp = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %allocator = alloca %any, align 8
  %padding = alloca i64, align 8
  %allocator3 = alloca %any, align 8
  %size4 = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8
  store i64 %1, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !2070, metadata !DIExpression()), !dbg !2071
  call void @llvm.dbg.declare(metadata ptr %2, metadata !2072, metadata !DIExpression()), !dbg !2073
  %3 = load i64, ptr %size, align 8, !dbg !2074
  %le = icmp ule i64 16, %3, !dbg !2074
  br i1 %le, label %assert_ok, label %assert_fail, !dbg !2074

assert_fail:                                      ; preds = %entry
  store %"char[]" { ptr @.panic_msg.77, i64 31 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.79, i64 18 }, ptr %indirectarg2, align 8
  %4 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %4(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 36), !dbg !2074
  unreachable, !dbg !2074

assert_ok:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata ptr %temp, metadata !2076, metadata !DIExpression()), !dbg !2077
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %2, i32 16, i1 false)
  %5 = load i64, ptr %size, align 8
  store i64 %5, ptr %padding, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator3, ptr align 8 %allocator, i32 16, i1 false)
  %6 = load i64, ptr %padding, align 8, !dbg !2078
  %add = add i64 40, %6, !dbg !2081
  store i64 %add, ptr %size4, align 8
  %7 = load i64, ptr %size4, align 8, !dbg !2082
  %not = icmp eq i64 %7, 0, !dbg !2082
  br i1 %not, label %if.then, label %if.exit, !dbg !2082

if.then:                                          ; preds = %assert_ok
  store ptr null, ptr %blockret, align 8, !dbg !2085
  br label %expr_block.exit, !dbg !2085

if.exit:                                          ; preds = %assert_ok
  %ptradd = getelementptr inbounds i8, ptr %allocator3, i64 8, !dbg !2086
  %8 = load i64, ptr %ptradd, align 8, !dbg !2086
  %9 = inttoptr i64 %8 to ptr, !dbg !2086
  %type = load ptr, ptr %.cachedtype, align 8
  %10 = icmp eq ptr %9, %type
  br i1 %10, label %cache_hit, label %cache_miss

cache_miss:                                       ; preds = %if.exit
  %ptradd5 = getelementptr inbounds i8, ptr %9, i64 16
  %11 = load ptr, ptr %ptradd5, align 8
  %12 = call ptr @.dyn_search(ptr %11, ptr @"$sel.acquire")
  store ptr %12, ptr %.inlinecache, align 8
  store ptr %9, ptr %.cachedtype, align 8
  br label %13

cache_hit:                                        ; preds = %if.exit
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8
  br label %13

13:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %12, %cache_miss ]
  %14 = icmp eq ptr %fn_phi, null
  br i1 %14, label %missing_function, label %match

missing_function:                                 ; preds = %13
  store %"char[]" { ptr @.panic_msg.38, i64 44 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.func.79, i64 18 }, ptr %indirectarg8, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, i32 68), !dbg !2088
  unreachable, !dbg !2088

match:                                            ; preds = %13
  %16 = load ptr, ptr %allocator3, align 8
  %17 = load i64, ptr %size4, align 8
  %18 = call i64 %fn_phi(ptr %retparam, ptr %16, i64 %17, i32 0, i64 0), !dbg !2088
  %not_err = icmp eq i64 %18, 0, !dbg !2088
  %19 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2088
  br i1 %19, label %after_check, label %assign_optional, !dbg !2088

assign_optional:                                  ; preds = %match
  store i64 %18, ptr %error_var, align 8, !dbg !2088
  br label %guard_block, !dbg !2088

after_check:                                      ; preds = %match
  %20 = load ptr, ptr %retparam, align 8, !dbg !2088
  store ptr %20, ptr %blockret, align 8, !dbg !2088
  br label %expr_block.exit, !dbg !2088

expr_block.exit:                                  ; preds = %after_check, %if.then
  %21 = load ptr, ptr %blockret, align 8, !dbg !2088
  br label %noerr_block, !dbg !2088

guard_block:                                      ; preds = %assign_optional
  %22 = load i64, ptr %error_var, align 8, !dbg !2088
  ret i64 %22, !dbg !2088

noerr_block:                                      ; preds = %expr_block.exit
  store ptr %21, ptr %temp, align 8, !dbg !2088
  %23 = load ptr, ptr %temp, align 8, !dbg !2089
  %checknull = icmp eq ptr %23, null, !dbg !2089
  %24 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2089
  br i1 %24, label %panic, label %checkok, !dbg !2089

checkok:                                          ; preds = %noerr_block
  %ptradd12 = getelementptr inbounds i8, ptr %23, i64 16, !dbg !2089
  store ptr null, ptr %ptradd12, align 8, !dbg !2090
  %25 = load ptr, ptr %temp, align 8, !dbg !2091
  %checknull13 = icmp eq ptr %25, null, !dbg !2091
  %26 = call i1 @llvm.expect.i1(i1 %checknull13, i1 false), !dbg !2091
  br i1 %26, label %panic14, label %checkok18, !dbg !2091

checkok18:                                        ; preds = %checkok
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %25, ptr align 8 %2, i32 16, i1 false), !dbg !2092
  %27 = load ptr, ptr %temp, align 8, !dbg !2093
  %checknull19 = icmp eq ptr %27, null, !dbg !2093
  %28 = call i1 @llvm.expect.i1(i1 %checknull19, i1 false), !dbg !2093
  br i1 %28, label %panic20, label %checkok24, !dbg !2093

checkok24:                                        ; preds = %checkok18
  %ptradd25 = getelementptr inbounds i8, ptr %27, i64 24, !dbg !2093
  store i64 0, ptr %ptradd25, align 8, !dbg !2094
  %29 = load ptr, ptr %temp, align 8, !dbg !2095
  %checknull26 = icmp eq ptr %29, null, !dbg !2095
  %30 = call i1 @llvm.expect.i1(i1 %checknull26, i1 false), !dbg !2095
  br i1 %30, label %panic27, label %checkok31, !dbg !2095

checkok31:                                        ; preds = %checkok24
  %ptradd32 = getelementptr inbounds i8, ptr %29, i64 32, !dbg !2095
  %31 = load i64, ptr %size, align 8, !dbg !2096
  store i64 %31, ptr %ptradd32, align 8, !dbg !2096
  %32 = load ptr, ptr %temp, align 8, !dbg !2097
  store ptr %32, ptr %0, align 8, !dbg !2097
  ret i64 0, !dbg !2097

panic:                                            ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.80, i64 45 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.79, i64 18 }, ptr %indirectarg11, align 8
  %33 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %33(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 41), !dbg !2089
  unreachable, !dbg !2089

panic14:                                          ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.80, i64 45 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.func.79, i64 18 }, ptr %indirectarg17, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, i32 42), !dbg !2091
  unreachable, !dbg !2091

panic20:                                          ; preds = %checkok18
  store %"char[]" { ptr @.panic_msg.80, i64 45 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.79, i64 18 }, ptr %indirectarg23, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 43), !dbg !2093
  unreachable, !dbg !2093

panic27:                                          ; preds = %checkok24
  store %"char[]" { ptr @.panic_msg.80, i64 45 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.file.78, i64 17 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.func.79, i64 18 }, ptr %indirectarg30, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, i32 44), !dbg !2095
  unreachable, !dbg !2095
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.TrackingAllocator.init(ptr %0, ptr align 8 %1) #0 comdat !dbg !2098 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.assign_list = alloca %TrackingAllocator, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg14 = alloca %any, align 8
  %2 = icmp eq ptr %0, null, !dbg !2139
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !2139
  br i1 %3, label %panic, label %checkok, !dbg !2139

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2140, metadata !DIExpression()), !dbg !2141
  call void @llvm.dbg.declare(metadata ptr %1, metadata !2142, metadata !DIExpression()), !dbg !2143
  %4 = load ptr, ptr %self, align 8, !dbg !2144
  %checknull = icmp eq ptr %4, null, !dbg !2144
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2144
  br i1 %5, label %panic3, label %checkok7, !dbg !2144

checkok7:                                         ; preds = %checkok
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 80, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %.assign_list, ptr align 8 %1, i32 16, i1 false), !dbg !2145
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %4, ptr align 8 %.assign_list, i32 80, i1 false), !dbg !2145
  %6 = load ptr, ptr %self, align 8, !dbg !2146
  %checknull8 = icmp eq ptr %6, null, !dbg !2146
  %7 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !2146
  br i1 %7, label %panic9, label %checkok13, !dbg !2146

checkok13:                                        ; preds = %checkok7
  %ptradd = getelementptr inbounds i8, ptr %6, i64 16, !dbg !2146
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg14, ptr align 8 %1, i32 16, i1 false)
  %8 = call ptr @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.new_init"(ptr %ptradd, i32 16, float 7.500000e-01, ptr align 8 %indirectarg14), !dbg !2146
  ret void, !dbg !2146

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 34), !dbg !2141
  unreachable, !dbg !2141

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg6, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 36), !dbg !2144
  unreachable, !dbg !2144

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg12, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 37), !dbg !2146
  unreachable, !dbg !2146
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.TrackingAllocator.free(ptr %0) #0 comdat !dbg !2147 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !2150
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !2150
  br i1 %2, label %panic, label %checkok, !dbg !2150

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2151, metadata !DIExpression()), !dbg !2152
  %3 = load ptr, ptr %self, align 8, !dbg !2153
  %checknull = icmp eq ptr %3, null, !dbg !2153
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2153
  br i1 %4, label %panic3, label %checkok7, !dbg !2153

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !2153
  call void @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.free"(ptr %ptradd), !dbg !2153
  %5 = load ptr, ptr %self, align 8, !dbg !2154
  %checknull8 = icmp eq ptr %5, null, !dbg !2154
  %6 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !2154
  br i1 %6, label %panic9, label %checkok13, !dbg !2154

checkok13:                                        ; preds = %checkok7
  call void @llvm.memset.p0.i64(ptr align 8 %5, i8 0, i64 80, i1 false), !dbg !2154
  ret void, !dbg !2154

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 43), !dbg !2152
  unreachable, !dbg !2152

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg6, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 45), !dbg !2153
  unreachable, !dbg !2153

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.22, i64 4 }, ptr %indirectarg12, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 46), !dbg !2154
  unreachable, !dbg !2154
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TrackingAllocator.allocated(ptr %0) #0 comdat !dbg !2155 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %allocated = alloca i64, align 8
  %current = alloca ptr, align 8
  %mark = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.anon = alloca %"Allocation[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %.anon15 = alloca i64, align 8
  %.anon17 = alloca i64, align 8
  %allocation = alloca ptr, align 8
  %taddr = alloca i64, align 8
  %taddr20 = alloca i64, align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg25 = alloca %"any[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !2158
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !2158
  br i1 %2, label %panic, label %checkok, !dbg !2158

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2159, metadata !DIExpression()), !dbg !2160
  call void @llvm.dbg.declare(metadata ptr %allocated, metadata !2161, metadata !DIExpression()), !dbg !2162
  store i64 0, ptr %allocated, align 8, !dbg !2163
  call void @llvm.dbg.declare(metadata ptr %current, metadata !2164, metadata !DIExpression()), !dbg !2166
  %3 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2168
  %not = icmp eq ptr %3, null, !dbg !2168
  br i1 %not, label %if.then, label %if.exit, !dbg !2168

if.then:                                          ; preds = %checkok
  call void @std.core.mem.allocator.init_default_temp_allocators(), !dbg !2171
  br label %if.exit, !dbg !2171

if.exit:                                          ; preds = %if.then, %checkok
  %4 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2173
  store ptr %4, ptr %current, align 8, !dbg !2173
  call void @llvm.dbg.declare(metadata ptr %mark, metadata !2174, metadata !DIExpression()), !dbg !2175
  %5 = load ptr, ptr %current, align 8, !dbg !2176
  %checknull = icmp eq ptr %5, null, !dbg !2176
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2176
  br i1 %6, label %panic3, label %checkok7, !dbg !2176

checkok7:                                         ; preds = %if.exit
  %ptradd = getelementptr inbounds i8, ptr %5, i64 24, !dbg !2176
  %7 = load i64, ptr %ptradd, align 8, !dbg !2176
  store i64 %7, ptr %mark, align 8, !dbg !2176
  call void @llvm.dbg.declare(metadata ptr %.anon, metadata !2177, metadata !DIExpression()), !dbg !2185
  %8 = load ptr, ptr %self, align 8, !dbg !2185
  %checknull8 = icmp eq ptr %8, null, !dbg !2185
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !2185
  br i1 %9, label %panic9, label %checkok13, !dbg !2185

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %8, i64 16, !dbg !2185
  call void @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.value_tlist"(ptr sret(%"Allocation[]") align 8 %.anon, ptr %ptradd14), !dbg !2185
  call void @llvm.dbg.declare(metadata ptr %.anon15, metadata !2186, metadata !DIExpression()), !dbg !2185
  %ptradd16 = getelementptr inbounds i8, ptr %.anon, i64 8, !dbg !2185
  %10 = load i64, ptr %ptradd16, align 8, !dbg !2185
  store i64 %10, ptr %.anon15, align 8, !dbg !2185
  call void @llvm.dbg.declare(metadata ptr %.anon17, metadata !2186, metadata !DIExpression()), !dbg !2185
  store i64 0, ptr %.anon17, align 8, !dbg !2185
  br label %loop.cond, !dbg !2185

loop.cond:                                        ; preds = %checkok32, %checkok13
  %11 = load i64, ptr %.anon17, align 8, !dbg !2185
  %12 = load i64, ptr %.anon15, align 8, !dbg !2185
  %lt = icmp ult i64 %11, %12, !dbg !2185
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !2185

loop.body:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %allocation, metadata !2187, metadata !DIExpression()), !dbg !2190
  %ptradd18 = getelementptr inbounds i8, ptr %.anon, i64 8, !dbg !2191
  %13 = load i64, ptr %ptradd18, align 8, !dbg !2191
  %14 = load ptr, ptr %.anon, align 8, !dbg !2191
  %15 = load i64, ptr %.anon17, align 8, !dbg !2191
  %ge = icmp uge i64 %15, %13, !dbg !2191
  %16 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2191
  br i1 %16, label %panic19, label %checkok26, !dbg !2191

checkok26:                                        ; preds = %loop.body
  %ptroffset = getelementptr inbounds [144 x i8], ptr %14, i64 %15, !dbg !2191
  store ptr %ptroffset, ptr %allocation, align 8, !dbg !2191
  %17 = load i64, ptr %allocated, align 8, !dbg !2192
  %18 = load ptr, ptr %allocation, align 8, !dbg !2193
  %checknull27 = icmp eq ptr %18, null, !dbg !2193
  %19 = call i1 @llvm.expect.i1(i1 %checknull27, i1 false), !dbg !2193
  br i1 %19, label %panic28, label %checkok32, !dbg !2193

checkok32:                                        ; preds = %checkok26
  %ptradd33 = getelementptr inbounds i8, ptr %18, i64 8, !dbg !2193
  %20 = load i64, ptr %ptradd33, align 8, !dbg !2193
  %add = add i64 %17, %20, !dbg !2192
  store i64 %add, ptr %allocated, align 8, !dbg !2192
  %21 = load i64, ptr %.anon17, align 8, !dbg !2185
  %addnuw = add nuw i64 %21, 1, !dbg !2185
  store i64 %addnuw, ptr %.anon17, align 8, !dbg !2185
  br label %loop.cond, !dbg !2185

loop.exit:                                        ; preds = %loop.cond
  %22 = load ptr, ptr %current, align 8, !dbg !2194
  %23 = load i64, ptr %mark, align 8, !dbg !2194
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %22, i64 %23), !dbg !2196
  %24 = load i64, ptr %allocated, align 8, !dbg !2197
  ret i64 %24, !dbg !2197

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.97, i64 9 }, ptr %indirectarg2, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 52), !dbg !2160
  unreachable, !dbg !2160

panic3:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.19, i64 6 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.97, i64 9 }, ptr %indirectarg6, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 542), !dbg !2176
  unreachable, !dbg !2176

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.97, i64 9 }, ptr %indirectarg12, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 57), !dbg !2185
  unreachable, !dbg !2185

panic19:                                          ; preds = %loop.body
  store i64 %13, ptr %taddr, align 8
  %28 = insertvalue %any undef, ptr %taddr, 0
  %29 = insertvalue %any %28, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %15, ptr %taddr20, align 8
  %30 = insertvalue %any undef, ptr %taddr20, 0
  %31 = insertvalue %any %30, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.9, i64 59 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.97, i64 9 }, ptr %indirectarg23, align 8
  store %any %29, ptr %varargslots, align 16
  %ptradd24 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %31, ptr %ptradd24, align 16
  %32 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %32, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg25, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 57, ptr align 8 %indirectarg25), !dbg !2191
  unreachable, !dbg !2191

panic28:                                          ; preds = %checkok26
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.func.97, i64 9 }, ptr %indirectarg31, align 8
  %33 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %33(ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, i32 57), !dbg !2193
  unreachable, !dbg !2193
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TrackingAllocator.total_allocated(ptr %0) #0 comdat !dbg !2198 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !2199
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !2199
  br i1 %2, label %panic, label %checkok, !dbg !2199

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2200, metadata !DIExpression()), !dbg !2201
  %3 = load ptr, ptr %self, align 8, !dbg !2199
  %checknull = icmp eq ptr %3, null, !dbg !2199
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2199
  br i1 %4, label %panic3, label %checkok7, !dbg !2199

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 64, !dbg !2199
  %5 = load i64, ptr %ptradd, align 8, !dbg !2199
  ret i64 %5, !dbg !2199

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.99, i64 15 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 65), !dbg !2201
  unreachable, !dbg !2201

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.99, i64 15 }, ptr %indirectarg6, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 65), !dbg !2199
  unreachable, !dbg !2199
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TrackingAllocator.total_allocation_count(ptr %0) #0 comdat !dbg !2202 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !2203
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !2203
  br i1 %2, label %panic, label %checkok, !dbg !2203

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2204, metadata !DIExpression()), !dbg !2205
  %3 = load ptr, ptr %self, align 8, !dbg !2203
  %checknull = icmp eq ptr %3, null, !dbg !2203
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2203
  br i1 %4, label %panic3, label %checkok7, !dbg !2203

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 72, !dbg !2203
  %5 = load i64, ptr %ptradd, align 8, !dbg !2203
  ret i64 %5, !dbg !2203

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.100, i64 22 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 70), !dbg !2205
  unreachable, !dbg !2205

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.100, i64 22 }, ptr %indirectarg6, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 70), !dbg !2203
  unreachable, !dbg !2203
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.TrackingAllocator.allocations_tlist(ptr noalias sret(%"Allocation[]") align 8 %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !2206 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %sretparam = alloca %"Allocation[]", align 8
  %3 = icmp eq ptr %1, null, !dbg !2213
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !2213
  br i1 %4, label %panic, label %checkok, !dbg !2213

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2214, metadata !DIExpression()), !dbg !2215
  call void @llvm.dbg.declare(metadata ptr %2, metadata !2216, metadata !DIExpression()), !dbg !2217
  %5 = load ptr, ptr %self, align 8, !dbg !2218
  %checknull = icmp eq ptr %5, null, !dbg !2218
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2218
  br i1 %6, label %panic3, label %checkok7, !dbg !2218

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !2218
  call void @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.value_tlist"(ptr sret(%"Allocation[]") align 8 %sretparam, ptr %ptradd), !dbg !2218
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %sretparam, i32 16, i1 false), !dbg !2218
  ret void, !dbg !2218

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.101, i64 17 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 72), !dbg !2215
  unreachable, !dbg !2215

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.101, i64 17 }, ptr %indirectarg6, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 74), !dbg !2218
  unreachable, !dbg !2218
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TrackingAllocator.allocation_count(ptr %0) #0 comdat !dbg !2219 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !2220
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !2220
  br i1 %2, label %panic, label %checkok, !dbg !2220

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2221, metadata !DIExpression()), !dbg !2222
  %3 = load ptr, ptr %self, align 8, !dbg !2220
  %checknull = icmp eq ptr %3, null, !dbg !2220
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2220
  br i1 %4, label %panic3, label %checkok7, !dbg !2220

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !2220
  %ptradd8 = getelementptr inbounds i8, ptr %ptradd, i64 32, !dbg !2220
  %5 = load i32, ptr %ptradd8, align 8, !dbg !2220
  %zext = zext i32 %5 to i64, !dbg !2220
  ret i64 %zext, !dbg !2220

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.102, i64 16 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 80), !dbg !2222
  unreachable, !dbg !2222

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.102, i64 16 }, ptr %indirectarg6, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 80), !dbg !2220
  unreachable, !dbg !2220
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TrackingAllocator.acquire(ptr %0, ptr %1, i64 %2, i32 %3, i64 %4) #0 comdat !dbg !2223 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %size = alloca i64, align 8
  %init_type = alloca i32, align 4
  %alignment = alloca i64, align 8
  %data = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %bt = alloca [16 x ptr], align 16
  %sretparam = alloca %"void*[]", align 8
  %indirectarg19 = alloca %"void*[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %literal = alloca %Allocation, align 8
  %indirectarg29 = alloca %Allocation, align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !2226
  %5 = icmp eq ptr %1, null, !dbg !2226
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !2226
  br i1 %6, label %panic, label %checkok, !dbg !2226

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2227, metadata !DIExpression()), !dbg !2228
  store i64 %2, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !2229, metadata !DIExpression()), !dbg !2230
  store i32 %3, ptr %init_type, align 4
  call void @llvm.dbg.declare(metadata ptr %init_type, metadata !2231, metadata !DIExpression()), !dbg !2232
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !2233, metadata !DIExpression()), !dbg !2234
  call void @llvm.dbg.declare(metadata ptr %data, metadata !2235, metadata !DIExpression()), !dbg !2236
  %7 = load ptr, ptr %self, align 8, !dbg !2237
  %checknull = icmp eq ptr %7, null, !dbg !2237
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2237
  br i1 %8, label %panic3, label %checkok7, !dbg !2237

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %7, i64 8, !dbg !2238
  %9 = load i64, ptr %ptradd, align 8, !dbg !2238
  %10 = inttoptr i64 %9 to ptr, !dbg !2238
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !2226
  %11 = icmp eq ptr %10, %type, !dbg !2226
  br i1 %11, label %cache_hit, label %cache_miss, !dbg !2226

cache_miss:                                       ; preds = %checkok7
  %ptradd8 = getelementptr inbounds i8, ptr %10, i64 16, !dbg !2226
  %12 = load ptr, ptr %ptradd8, align 8, !dbg !2226
  %13 = call ptr @.dyn_search(ptr %12, ptr @"$sel.acquire"), !dbg !2226
  store ptr %13, ptr %.inlinecache, align 8, !dbg !2226
  store ptr %10, ptr %.cachedtype, align 8, !dbg !2226
  br label %14, !dbg !2226

cache_hit:                                        ; preds = %checkok7
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !2226
  br label %14, !dbg !2226

14:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %13, %cache_miss ], !dbg !2226
  %15 = icmp eq ptr %fn_phi, null, !dbg !2226
  br i1 %15, label %missing_function, label %match, !dbg !2226

missing_function:                                 ; preds = %14
  store %"char[]" { ptr @.panic_msg.38, i64 44 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg11, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 84), !dbg !2237
  unreachable, !dbg !2237

match:                                            ; preds = %14
  %17 = load ptr, ptr %7, align 8
  %18 = load i64, ptr %size, align 8
  %19 = load i32, ptr %init_type, align 4
  %20 = load i64, ptr %alignment, align 8
  %21 = call i64 %fn_phi(ptr %retparam, ptr %17, i64 %18, i32 %19, i64 %20), !dbg !2237
  %not_err = icmp eq i64 %21, 0, !dbg !2237
  %22 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2237
  br i1 %22, label %after_check, label %assign_optional, !dbg !2237

assign_optional:                                  ; preds = %match
  store i64 %21, ptr %error_var, align 8, !dbg !2237
  br label %guard_block, !dbg !2237

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !2237

guard_block:                                      ; preds = %assign_optional
  %23 = load i64, ptr %error_var, align 8, !dbg !2237
  ret i64 %23, !dbg !2237

noerr_block:                                      ; preds = %after_check
  %24 = load ptr, ptr %retparam, align 8, !dbg !2237
  store ptr %24, ptr %data, align 8, !dbg !2237
  %25 = load ptr, ptr %self, align 8, !dbg !2239
  %checknull12 = icmp eq ptr %25, null, !dbg !2239
  %26 = call i1 @llvm.expect.i1(i1 %checknull12, i1 false), !dbg !2239
  br i1 %26, label %panic13, label %checkok17, !dbg !2239

checkok17:                                        ; preds = %noerr_block
  %ptradd18 = getelementptr inbounds i8, ptr %25, i64 72, !dbg !2239
  %27 = load i64, ptr %ptradd18, align 8, !dbg !2239
  %add = add i64 %27, 1, !dbg !2239
  store i64 %add, ptr %ptradd18, align 8, !dbg !2239
  call void @llvm.dbg.declare(metadata ptr %bt, metadata !2240, metadata !DIExpression()), !dbg !2241
  call void @llvm.memset.p0.i64(ptr align 16 %bt, i8 0, i64 128, i1 false), !dbg !2241
  %28 = insertvalue %"void*[]" undef, ptr %bt, 0, !dbg !2242
  %29 = insertvalue %"void*[]" %28, i64 16, 1, !dbg !2242
  store %"void*[]" %29, ptr %indirectarg19, align 8
  call void @std.os.backtrace.capture_current(ptr sret(%"void*[]") align 8 %sretparam, ptr align 8 %indirectarg19), !dbg !2243
  %30 = load ptr, ptr %self, align 8, !dbg !2244
  %checknull20 = icmp eq ptr %30, null, !dbg !2244
  %31 = call i1 @llvm.expect.i1(i1 %checknull20, i1 false), !dbg !2244
  br i1 %31, label %panic21, label %checkok25, !dbg !2244

checkok25:                                        ; preds = %checkok17
  %ptradd26 = getelementptr inbounds i8, ptr %30, i64 16, !dbg !2244
  %32 = load ptr, ptr %data, align 8, !dbg !2245
  %ptrxi = ptrtoint ptr %32 to i64, !dbg !2245
  %33 = load ptr, ptr %data, align 8, !dbg !2246
  store ptr %33, ptr %literal, align 8, !dbg !2246
  %ptradd27 = getelementptr inbounds i8, ptr %literal, i64 8, !dbg !2246
  %34 = load i64, ptr %size, align 8, !dbg !2247
  store i64 %34, ptr %ptradd27, align 8, !dbg !2247
  %ptradd28 = getelementptr inbounds i8, ptr %literal, i64 16, !dbg !2247
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd28, ptr align 16 %bt, i32 128, i1 false), !dbg !2248
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg29, ptr align 8 %literal, i32 144, i1 false)
  %35 = call i8 @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.set"(ptr %ptradd26, i64 %ptrxi, ptr align 8 %indirectarg29), !dbg !2244
  %36 = load ptr, ptr %self, align 8, !dbg !2249
  %checknull30 = icmp eq ptr %36, null, !dbg !2249
  %37 = call i1 @llvm.expect.i1(i1 %checknull30, i1 false), !dbg !2249
  br i1 %37, label %panic31, label %checkok35, !dbg !2249

checkok35:                                        ; preds = %checkok25
  %ptradd36 = getelementptr inbounds i8, ptr %36, i64 64, !dbg !2249
  %38 = load i64, ptr %ptradd36, align 8, !dbg !2249
  %39 = load i64, ptr %size, align 8, !dbg !2250
  %add37 = add i64 %38, %39, !dbg !2249
  store i64 %add37, ptr %ptradd36, align 8, !dbg !2249
  %40 = load ptr, ptr %data, align 8, !dbg !2251
  store ptr %40, ptr %0, align 8, !dbg !2251
  ret i64 0, !dbg !2251

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg2, align 8
  %41 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %41(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 82), !dbg !2228
  unreachable, !dbg !2228

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg6, align 8
  %42 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %42(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 84), !dbg !2237
  unreachable, !dbg !2237

panic13:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg16, align 8
  %43 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %43(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 85), !dbg !2239
  unreachable, !dbg !2239

panic21:                                          ; preds = %checkok17
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg24, align 8
  %44 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %44(ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, i32 88), !dbg !2244
  unreachable, !dbg !2244

panic31:                                          ; preds = %checkok25
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg34, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 89), !dbg !2249
  unreachable, !dbg !2249
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TrackingAllocator.resize(ptr %0, ptr %1, ptr %2, i64 %3, i64 %4) #0 comdat !dbg !2252 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_pointer = alloca ptr, align 8
  %size = alloca i64, align 8
  %alignment = alloca i64, align 8
  %data = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %bt = alloca [16 x ptr], align 16
  %sretparam = alloca %"void*[]", align 8
  %indirectarg21 = alloca %"void*[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %literal = alloca %Allocation, align 8
  %indirectarg32 = alloca %Allocation, align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !2255
  %5 = icmp eq ptr %1, null, !dbg !2255
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !2255
  br i1 %6, label %panic, label %checkok, !dbg !2255

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2256, metadata !DIExpression()), !dbg !2257
  store ptr %2, ptr %old_pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %old_pointer, metadata !2258, metadata !DIExpression()), !dbg !2259
  store i64 %3, ptr %size, align 8
  call void @llvm.dbg.declare(metadata ptr %size, metadata !2260, metadata !DIExpression()), !dbg !2261
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !2262, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.declare(metadata ptr %data, metadata !2264, metadata !DIExpression()), !dbg !2265
  %7 = load ptr, ptr %self, align 8, !dbg !2266
  %checknull = icmp eq ptr %7, null, !dbg !2266
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2266
  br i1 %8, label %panic3, label %checkok7, !dbg !2266

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %7, i64 8, !dbg !2267
  %9 = load i64, ptr %ptradd, align 8, !dbg !2267
  %10 = inttoptr i64 %9 to ptr, !dbg !2267
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !2255
  %11 = icmp eq ptr %10, %type, !dbg !2255
  br i1 %11, label %cache_hit, label %cache_miss, !dbg !2255

cache_miss:                                       ; preds = %checkok7
  %ptradd8 = getelementptr inbounds i8, ptr %10, i64 16, !dbg !2255
  %12 = load ptr, ptr %ptradd8, align 8, !dbg !2255
  %13 = call ptr @.dyn_search(ptr %12, ptr @"$sel.resize"), !dbg !2255
  store ptr %13, ptr %.inlinecache, align 8, !dbg !2255
  store ptr %10, ptr %.cachedtype, align 8, !dbg !2255
  br label %14, !dbg !2255

cache_hit:                                        ; preds = %checkok7
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !2255
  br label %14, !dbg !2255

14:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %13, %cache_miss ], !dbg !2255
  %15 = icmp eq ptr %fn_phi, null, !dbg !2255
  br i1 %15, label %missing_function, label %match, !dbg !2255

missing_function:                                 ; preds = %14
  store %"char[]" { ptr @.panic_msg.76, i64 43 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg11, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 95), !dbg !2266
  unreachable, !dbg !2266

match:                                            ; preds = %14
  %17 = load ptr, ptr %7, align 8
  %18 = load ptr, ptr %old_pointer, align 8
  %19 = load i64, ptr %size, align 8
  %20 = load i64, ptr %alignment, align 8
  %21 = call i64 %fn_phi(ptr %retparam, ptr %17, ptr %18, i64 %19, i64 %20), !dbg !2266
  %not_err = icmp eq i64 %21, 0, !dbg !2266
  %22 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2266
  br i1 %22, label %after_check, label %assign_optional, !dbg !2266

assign_optional:                                  ; preds = %match
  store i64 %21, ptr %error_var, align 8, !dbg !2266
  br label %guard_block, !dbg !2266

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !2266

guard_block:                                      ; preds = %assign_optional
  %23 = load i64, ptr %error_var, align 8, !dbg !2266
  ret i64 %23, !dbg !2266

noerr_block:                                      ; preds = %after_check
  %24 = load ptr, ptr %retparam, align 8, !dbg !2266
  store ptr %24, ptr %data, align 8, !dbg !2266
  %25 = load ptr, ptr %self, align 8, !dbg !2268
  %checknull12 = icmp eq ptr %25, null, !dbg !2268
  %26 = call i1 @llvm.expect.i1(i1 %checknull12, i1 false), !dbg !2268
  br i1 %26, label %panic13, label %checkok17, !dbg !2268

checkok17:                                        ; preds = %noerr_block
  %ptradd18 = getelementptr inbounds i8, ptr %25, i64 16, !dbg !2268
  %27 = load ptr, ptr %old_pointer, align 8, !dbg !2269
  %ptrxi = ptrtoint ptr %27 to i64, !dbg !2269
  %28 = call i64 @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.remove"(ptr %ptradd18, i64 %ptrxi), !dbg !2268
  call void @llvm.dbg.declare(metadata ptr %bt, metadata !2270, metadata !DIExpression()), !dbg !2271
  call void @llvm.memset.p0.i64(ptr align 16 %bt, i8 0, i64 128, i1 false), !dbg !2271
  %29 = insertvalue %"void*[]" undef, ptr %bt, 0, !dbg !2272
  %30 = insertvalue %"void*[]" %29, i64 16, 1, !dbg !2272
  store %"void*[]" %30, ptr %indirectarg21, align 8
  call void @std.os.backtrace.capture_current(ptr sret(%"void*[]") align 8 %sretparam, ptr align 8 %indirectarg21), !dbg !2273
  %31 = load ptr, ptr %self, align 8, !dbg !2274
  %checknull22 = icmp eq ptr %31, null, !dbg !2274
  %32 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !2274
  br i1 %32, label %panic23, label %checkok27, !dbg !2274

checkok27:                                        ; preds = %checkok17
  %ptradd28 = getelementptr inbounds i8, ptr %31, i64 16, !dbg !2274
  %33 = load ptr, ptr %data, align 8, !dbg !2275
  %ptrxi29 = ptrtoint ptr %33 to i64, !dbg !2275
  %34 = load ptr, ptr %data, align 8, !dbg !2276
  store ptr %34, ptr %literal, align 8, !dbg !2276
  %ptradd30 = getelementptr inbounds i8, ptr %literal, i64 8, !dbg !2276
  %35 = load i64, ptr %size, align 8, !dbg !2277
  store i64 %35, ptr %ptradd30, align 8, !dbg !2277
  %ptradd31 = getelementptr inbounds i8, ptr %literal, i64 16, !dbg !2277
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd31, ptr align 16 %bt, i32 128, i1 false), !dbg !2278
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg32, ptr align 8 %literal, i32 144, i1 false)
  %36 = call i8 @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.set"(ptr %ptradd28, i64 %ptrxi29, ptr align 8 %indirectarg32), !dbg !2274
  %37 = load ptr, ptr %self, align 8, !dbg !2279
  %checknull33 = icmp eq ptr %37, null, !dbg !2279
  %38 = call i1 @llvm.expect.i1(i1 %checknull33, i1 false), !dbg !2279
  br i1 %38, label %panic34, label %checkok38, !dbg !2279

checkok38:                                        ; preds = %checkok27
  %ptradd39 = getelementptr inbounds i8, ptr %37, i64 64, !dbg !2279
  %39 = load i64, ptr %ptradd39, align 8, !dbg !2279
  %40 = load i64, ptr %size, align 8, !dbg !2280
  %add = add i64 %39, %40, !dbg !2279
  store i64 %add, ptr %ptradd39, align 8, !dbg !2279
  %41 = load ptr, ptr %self, align 8, !dbg !2281
  %checknull40 = icmp eq ptr %41, null, !dbg !2281
  %42 = call i1 @llvm.expect.i1(i1 %checknull40, i1 false), !dbg !2281
  br i1 %42, label %panic41, label %checkok45, !dbg !2281

checkok45:                                        ; preds = %checkok38
  %ptradd46 = getelementptr inbounds i8, ptr %41, i64 72, !dbg !2281
  %43 = load i64, ptr %ptradd46, align 8, !dbg !2281
  %add47 = add i64 %43, 1, !dbg !2281
  store i64 %add47, ptr %ptradd46, align 8, !dbg !2281
  %44 = load ptr, ptr %data, align 8, !dbg !2282
  store ptr %44, ptr %0, align 8, !dbg !2282
  ret i64 0, !dbg !2282

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg2, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 93), !dbg !2257
  unreachable, !dbg !2257

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg6, align 8
  %46 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %46(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 95), !dbg !2266
  unreachable, !dbg !2266

panic13:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg16, align 8
  %47 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %47(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 96), !dbg !2268
  unreachable, !dbg !2268

panic23:                                          ; preds = %checkok17
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg26, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 99), !dbg !2274
  unreachable, !dbg !2274

panic34:                                          ; preds = %checkok27
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg37, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 100), !dbg !2279
  unreachable, !dbg !2279

panic41:                                          ; preds = %checkok38
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg44, align 8
  %50 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %50(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 101), !dbg !2281
  unreachable, !dbg !2281
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.TrackingAllocator.release(ptr %0, ptr %1, i8 zeroext %2) #0 comdat !dbg !2283 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_pointer = alloca ptr, align 8
  %is_aligned = alloca i8, align 1
  %temp_err = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %string = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"any[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !2286
  %3 = icmp eq ptr %0, null, !dbg !2286
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !2286
  br i1 %4, label %panic, label %checkok, !dbg !2286

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2287, metadata !DIExpression()), !dbg !2288
  store ptr %1, ptr %old_pointer, align 8
  call void @llvm.dbg.declare(metadata ptr %old_pointer, metadata !2289, metadata !DIExpression()), !dbg !2290
  store i8 %2, ptr %is_aligned, align 1
  call void @llvm.dbg.declare(metadata ptr %is_aligned, metadata !2291, metadata !DIExpression()), !dbg !2292
  br label %testblock

testblock:                                        ; preds = %checkok
  %5 = load ptr, ptr %self, align 8, !dbg !2293
  %checknull = icmp eq ptr %5, null, !dbg !2293
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2293
  br i1 %6, label %panic3, label %checkok7, !dbg !2293

checkok7:                                         ; preds = %testblock
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !2293
  %7 = load ptr, ptr %old_pointer, align 8, !dbg !2294
  %ptrxi = ptrtoint ptr %7 to i64, !dbg !2294
  %8 = call i64 @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.remove"(ptr %ptradd, i64 %ptrxi), !dbg !2293
  %not_err = icmp eq i64 %8, 0, !dbg !2293
  %9 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2293
  br i1 %9, label %after_check, label %assign_optional, !dbg !2293

assign_optional:                                  ; preds = %checkok7
  store i64 %8, ptr %temp_err, align 8, !dbg !2293
  br label %end_block, !dbg !2293

after_check:                                      ; preds = %checkok7
  store i64 0, ptr %temp_err, align 8, !dbg !2293
  br label %end_block, !dbg !2293

end_block:                                        ; preds = %after_check, %assign_optional
  %10 = load i64, ptr %temp_err, align 8, !dbg !2293
  %neq = icmp ne i64 %10, 0, !dbg !2293
  br i1 %neq, label %if.then, label %if.exit, !dbg !2293

if.then:                                          ; preds = %end_block
  store %"char[]" { ptr @.str.103, i64 62 }, ptr %string, align 8
  %11 = insertvalue %any undef, ptr %old_pointer, 0, !dbg !2295
  %12 = insertvalue %any %11, i64 ptrtoint (ptr @"$ct.p$void" to i64), 1, !dbg !2295
  store %any %12, ptr %varargslots, align 16, !dbg !2295
  %13 = insertvalue %"any[]" undef, ptr %varargslots, 0, !dbg !2295
  %"$$temp" = insertvalue %"any[]" %13, i64 1, 1, !dbg !2295
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg8, ptr align 8 %string, i32 16, i1 false)
  store %"char[]" { ptr @.str.104, i64 21 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.str.105, i64 25 }, ptr %indirectarg10, align 8
  store %"any[]" %"$$temp", ptr %indirectarg11, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 109, ptr align 8 %indirectarg11), !dbg !2299
  unreachable, !dbg !2300

if.exit:                                          ; preds = %end_block
  %14 = load ptr, ptr %self, align 8, !dbg !2301
  %checknull12 = icmp eq ptr %14, null, !dbg !2301
  %15 = call i1 @llvm.expect.i1(i1 %checknull12, i1 false), !dbg !2301
  br i1 %15, label %panic13, label %checkok17, !dbg !2301

checkok17:                                        ; preds = %if.exit
  %ptradd18 = getelementptr inbounds i8, ptr %14, i64 8, !dbg !2302
  %16 = load i64, ptr %ptradd18, align 8, !dbg !2302
  %17 = inttoptr i64 %16 to ptr, !dbg !2302
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !2286
  %18 = icmp eq ptr %17, %type, !dbg !2286
  br i1 %18, label %cache_hit, label %cache_miss, !dbg !2286

cache_miss:                                       ; preds = %checkok17
  %ptradd19 = getelementptr inbounds i8, ptr %17, i64 16, !dbg !2286
  %19 = load ptr, ptr %ptradd19, align 8, !dbg !2286
  %20 = call ptr @.dyn_search(ptr %19, ptr @"$sel.release"), !dbg !2286
  store ptr %20, ptr %.inlinecache, align 8, !dbg !2286
  store ptr %17, ptr %.cachedtype, align 8, !dbg !2286
  br label %21, !dbg !2286

cache_hit:                                        ; preds = %checkok17
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !2286
  br label %21, !dbg !2286

21:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %20, %cache_miss ], !dbg !2286
  %22 = icmp eq ptr %fn_phi, null, !dbg !2286
  br i1 %22, label %missing_function, label %match, !dbg !2286

missing_function:                                 ; preds = %21
  store %"char[]" { ptr @.panic_msg.24, i64 44 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg22, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 111), !dbg !2301
  unreachable, !dbg !2301

match:                                            ; preds = %21
  %24 = load ptr, ptr %14, align 8, !dbg !2301
  %25 = load ptr, ptr %old_pointer, align 8, !dbg !2301
  %26 = load i8, ptr %is_aligned, align 1, !dbg !2301
  call void %fn_phi(ptr %24, ptr %25, i8 zeroext %26), !dbg !2301
  ret void, !dbg !2301

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg2, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 105), !dbg !2288
  unreachable, !dbg !2288

panic3:                                           ; preds = %testblock
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg6, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 107), !dbg !2293
  unreachable, !dbg !2293

panic13:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg16, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 111), !dbg !2301
  unreachable, !dbg !2301
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.TrackingAllocator.clear(ptr %0) #0 comdat !dbg !2303 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !2304
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !2304
  br i1 %2, label %panic, label %checkok, !dbg !2304

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2305, metadata !DIExpression()), !dbg !2306
  %3 = load ptr, ptr %self, align 8, !dbg !2307
  %checknull = icmp eq ptr %3, null, !dbg !2307
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2307
  br i1 %4, label %panic3, label %checkok7, !dbg !2307

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !2307
  call void @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.clear"(ptr %ptradd), !dbg !2307
  ret void, !dbg !2307

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.4, i64 5 }, ptr %indirectarg2, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 114), !dbg !2306
  unreachable, !dbg !2306

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.4, i64 5 }, ptr %indirectarg6, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 116), !dbg !2307
  unreachable, !dbg !2307
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.TrackingAllocator.print_report(ptr %0) #0 comdat !dbg !2308 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %indirectarg3 = alloca %any, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg7 = alloca %"any[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !2309
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !2309
  br i1 %2, label %panic, label %checkok, !dbg !2309

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2310, metadata !DIExpression()), !dbg !2311
  %3 = call ptr @std.io.stdout(), !dbg !2312
  %4 = insertvalue %any undef, ptr %3, 0, !dbg !2312
  %5 = insertvalue %any %4, i64 ptrtoint (ptr @"$ct.std.io.File" to i64), 1, !dbg !2312
  %6 = load ptr, ptr %self, align 8, !dbg !2312
  store %any %5, ptr %indirectarg3, align 8
  %7 = call i64 @std.core.mem.allocator.TrackingAllocator.fprint_report(ptr %6, ptr align 8 %indirectarg3), !dbg !2309
  %not_err = icmp eq i64 %7, 0, !dbg !2309
  %8 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2309
  br i1 %8, label %after_check, label %assign_optional, !dbg !2309

assign_optional:                                  ; preds = %checkok
  store i64 %7, ptr %error_var, align 8, !dbg !2309
  br label %panic_block, !dbg !2309

after_check:                                      ; preds = %checkok
  br label %noerr_block, !dbg !2309

panic_block:                                      ; preds = %assign_optional
  %9 = insertvalue %any undef, ptr %error_var, 0, !dbg !2309
  %10 = insertvalue %any %9, i64 ptrtoint (ptr @"$ct.anyfault" to i64), 1, !dbg !2309
  store %"char[]" { ptr @.panic_msg.84, i64 36 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.106, i64 12 }, ptr %indirectarg6, align 8
  store %any %10, ptr %varargslots, align 16
  %11 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %11, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg7, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 119, ptr align 8 %indirectarg7), !dbg !2309
  unreachable, !dbg !2309

noerr_block:                                      ; preds = %after_check
  ret void, !dbg !2309

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.106, i64 12 }, ptr %indirectarg2, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 119), !dbg !2311
  unreachable, !dbg !2311
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.TrackingAllocator.fprint_report(ptr %0, ptr align 8 %1) #0 comdat !dbg !2313 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %total = alloca i64, align 8
  %entries = alloca i64, align 8
  %leaks = alloca i8, align 1
  %current = alloca ptr, align 8
  %mark = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %allocs = alloca %"Allocation[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr19 = alloca i64, align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg24 = alloca %"any[]", align 8
  %error_var = alloca i64, align 8
  %out = alloca %any, align 8
  %x = alloca %"char[]", align 8
  %len = alloca i64, align 8
  %error_var29 = alloca i64, align 8
  %out30 = alloca %any, align 8
  %x31 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg38 = alloca %"char[]", align 8
  %error_var39 = alloca i64, align 8
  %.inlinecache41 = alloca ptr, align 8
  %.cachedtype42 = alloca ptr, align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %.inlinecache60 = alloca ptr, align 8
  %.cachedtype61 = alloca ptr, align 8
  %error_var69 = alloca i64, align 8
  %.inlinecache71 = alloca ptr, align 8
  %.cachedtype72 = alloca ptr, align 8
  %indirectarg80 = alloca %"char[]", align 8
  %indirectarg81 = alloca %"char[]", align 8
  %indirectarg82 = alloca %"char[]", align 8
  %error_var92 = alloca i64, align 8
  %out93 = alloca %any, align 8
  %x94 = alloca %"char[]", align 8
  %len95 = alloca i64, align 8
  %error_var96 = alloca i64, align 8
  %out97 = alloca %any, align 8
  %x98 = alloca %"char[]", align 8
  %.inlinecache101 = alloca ptr, align 8
  %.cachedtype102 = alloca ptr, align 8
  %indirectarg110 = alloca %"char[]", align 8
  %indirectarg111 = alloca %"char[]", align 8
  %indirectarg112 = alloca %"char[]", align 8
  %retparam114 = alloca i64, align 8
  %indirectarg115 = alloca %"char[]", align 8
  %error_var121 = alloca i64, align 8
  %.inlinecache123 = alloca ptr, align 8
  %.cachedtype124 = alloca ptr, align 8
  %indirectarg132 = alloca %"char[]", align 8
  %indirectarg133 = alloca %"char[]", align 8
  %indirectarg134 = alloca %"char[]", align 8
  %.inlinecache142 = alloca ptr, align 8
  %.cachedtype143 = alloca ptr, align 8
  %error_var152 = alloca i64, align 8
  %.inlinecache154 = alloca ptr, align 8
  %.cachedtype155 = alloca ptr, align 8
  %indirectarg163 = alloca %"char[]", align 8
  %indirectarg164 = alloca %"char[]", align 8
  %indirectarg165 = alloca %"char[]", align 8
  %.anon = alloca i64, align 8
  %.anon177 = alloca i64, align 8
  %i = alloca i64, align 8
  %allocation = alloca ptr, align 8
  %taddr181 = alloca i64, align 8
  %taddr182 = alloca i64, align 8
  %indirectarg183 = alloca %"char[]", align 8
  %indirectarg184 = alloca %"char[]", align 8
  %indirectarg185 = alloca %"char[]", align 8
  %varargslots186 = alloca [2 x %any], align 16
  %indirectarg189 = alloca %"any[]", align 8
  %indirectarg194 = alloca %"char[]", align 8
  %indirectarg195 = alloca %"char[]", align 8
  %indirectarg196 = alloca %"char[]", align 8
  %error_var200 = alloca i64, align 8
  %varargslots201 = alloca [2 x %any], align 16
  %indirectarg204 = alloca %"char[]", align 8
  %indirectarg205 = alloca %"char[]", align 8
  %indirectarg206 = alloca %"char[]", align 8
  %indirectarg211 = alloca %"char[]", align 8
  %indirectarg212 = alloca %"char[]", align 8
  %indirectarg213 = alloca %"char[]", align 8
  %retparam217 = alloca i64, align 8
  %indirectarg218 = alloca %any, align 8
  %indirectarg219 = alloca %"char[]", align 8
  %indirectarg220 = alloca %"any[]", align 8
  %error_var226 = alloca i64, align 8
  %out227 = alloca %any, align 8
  %x228 = alloca %"char[]", align 8
  %len229 = alloca i64, align 8
  %error_var230 = alloca i64, align 8
  %out231 = alloca %any, align 8
  %x232 = alloca %"char[]", align 8
  %.inlinecache235 = alloca ptr, align 8
  %.cachedtype236 = alloca ptr, align 8
  %indirectarg244 = alloca %"char[]", align 8
  %indirectarg245 = alloca %"char[]", align 8
  %indirectarg246 = alloca %"char[]", align 8
  %retparam248 = alloca i64, align 8
  %indirectarg249 = alloca %"char[]", align 8
  %error_var255 = alloca i64, align 8
  %.inlinecache257 = alloca ptr, align 8
  %.cachedtype258 = alloca ptr, align 8
  %indirectarg266 = alloca %"char[]", align 8
  %indirectarg267 = alloca %"char[]", align 8
  %indirectarg268 = alloca %"char[]", align 8
  %.inlinecache276 = alloca ptr, align 8
  %.cachedtype277 = alloca ptr, align 8
  %error_var286 = alloca i64, align 8
  %.inlinecache288 = alloca ptr, align 8
  %.cachedtype289 = alloca ptr, align 8
  %indirectarg297 = alloca %"char[]", align 8
  %indirectarg298 = alloca %"char[]", align 8
  %indirectarg299 = alloca %"char[]", align 8
  %error_var310 = alloca i64, align 8
  %out311 = alloca %any, align 8
  %x312 = alloca %"char[]", align 8
  %len313 = alloca i64, align 8
  %error_var314 = alloca i64, align 8
  %out315 = alloca %any, align 8
  %x316 = alloca %"char[]", align 8
  %.inlinecache319 = alloca ptr, align 8
  %.cachedtype320 = alloca ptr, align 8
  %indirectarg328 = alloca %"char[]", align 8
  %indirectarg329 = alloca %"char[]", align 8
  %indirectarg330 = alloca %"char[]", align 8
  %retparam332 = alloca i64, align 8
  %indirectarg333 = alloca %"char[]", align 8
  %error_var339 = alloca i64, align 8
  %.inlinecache341 = alloca ptr, align 8
  %.cachedtype342 = alloca ptr, align 8
  %indirectarg350 = alloca %"char[]", align 8
  %indirectarg351 = alloca %"char[]", align 8
  %indirectarg352 = alloca %"char[]", align 8
  %.inlinecache360 = alloca ptr, align 8
  %.cachedtype361 = alloca ptr, align 8
  %error_var370 = alloca i64, align 8
  %.inlinecache372 = alloca ptr, align 8
  %.cachedtype373 = alloca ptr, align 8
  %indirectarg381 = alloca %"char[]", align 8
  %indirectarg382 = alloca %"char[]", align 8
  %indirectarg383 = alloca %"char[]", align 8
  %error_var394 = alloca i64, align 8
  %out395 = alloca %any, align 8
  %x396 = alloca %"char[]", align 8
  %len397 = alloca i64, align 8
  %error_var398 = alloca i64, align 8
  %out399 = alloca %any, align 8
  %x400 = alloca %"char[]", align 8
  %.inlinecache403 = alloca ptr, align 8
  %.cachedtype404 = alloca ptr, align 8
  %indirectarg412 = alloca %"char[]", align 8
  %indirectarg413 = alloca %"char[]", align 8
  %indirectarg414 = alloca %"char[]", align 8
  %retparam416 = alloca i64, align 8
  %indirectarg417 = alloca %"char[]", align 8
  %error_var423 = alloca i64, align 8
  %.inlinecache425 = alloca ptr, align 8
  %.cachedtype426 = alloca ptr, align 8
  %indirectarg434 = alloca %"char[]", align 8
  %indirectarg435 = alloca %"char[]", align 8
  %indirectarg436 = alloca %"char[]", align 8
  %.inlinecache444 = alloca ptr, align 8
  %.cachedtype445 = alloca ptr, align 8
  %error_var454 = alloca i64, align 8
  %.inlinecache456 = alloca ptr, align 8
  %.cachedtype457 = alloca ptr, align 8
  %indirectarg465 = alloca %"char[]", align 8
  %indirectarg466 = alloca %"char[]", align 8
  %indirectarg467 = alloca %"char[]", align 8
  %.anon478 = alloca i64, align 8
  %.anon480 = alloca i64, align 8
  %i484 = alloca i64, align 8
  %allocation485 = alloca ptr, align 8
  %taddr489 = alloca i64, align 8
  %taddr490 = alloca i64, align 8
  %indirectarg491 = alloca %"char[]", align 8
  %indirectarg492 = alloca %"char[]", align 8
  %indirectarg493 = alloca %"char[]", align 8
  %varargslots494 = alloca [2 x %any], align 16
  %indirectarg497 = alloca %"any[]", align 8
  %indirectarg503 = alloca %"char[]", align 8
  %indirectarg504 = alloca %"char[]", align 8
  %indirectarg505 = alloca %"char[]", align 8
  %backtraces = alloca %List, align 8
  %trace = alloca %Backtrace, align 8
  %indirectarg511 = alloca %"char[]", align 8
  %indirectarg512 = alloca %"char[]", align 8
  %indirectarg513 = alloca %"char[]", align 8
  %indirectarg521 = alloca %"char[]", align 8
  %indirectarg522 = alloca %"char[]", align 8
  %indirectarg523 = alloca %"char[]", align 8
  %retparam530 = alloca %List, align 8
  %indirectarg531 = alloca %"void*[]", align 8
  %indirectarg532 = alloca %any, align 8
  %sretparam = alloca %Backtrace, align 8
  %error_var541 = alloca i64, align 8
  %varargslots542 = alloca [4 x %any], align 16
  %indirectarg545 = alloca %"char[]", align 8
  %indirectarg546 = alloca %"char[]", align 8
  %indirectarg547 = alloca %"char[]", align 8
  %indirectarg552 = alloca %"char[]", align 8
  %indirectarg553 = alloca %"char[]", align 8
  %indirectarg554 = alloca %"char[]", align 8
  %taddr562 = alloca %"char[]", align 8
  %taddr571 = alloca i32, align 4
  %retparam574 = alloca i64, align 8
  %indirectarg575 = alloca %any, align 8
  %indirectarg576 = alloca %"char[]", align 8
  %indirectarg577 = alloca %"any[]", align 8
  %error_var585 = alloca i64, align 8
  %out586 = alloca %any, align 8
  %x587 = alloca %"char[]", align 8
  %len588 = alloca i64, align 8
  %error_var589 = alloca i64, align 8
  %out590 = alloca %any, align 8
  %x591 = alloca %"char[]", align 8
  %.inlinecache594 = alloca ptr, align 8
  %.cachedtype595 = alloca ptr, align 8
  %indirectarg603 = alloca %"char[]", align 8
  %indirectarg604 = alloca %"char[]", align 8
  %indirectarg605 = alloca %"char[]", align 8
  %retparam607 = alloca i64, align 8
  %indirectarg608 = alloca %"char[]", align 8
  %error_var614 = alloca i64, align 8
  %.inlinecache616 = alloca ptr, align 8
  %.cachedtype617 = alloca ptr, align 8
  %indirectarg625 = alloca %"char[]", align 8
  %indirectarg626 = alloca %"char[]", align 8
  %indirectarg627 = alloca %"char[]", align 8
  %.inlinecache635 = alloca ptr, align 8
  %.cachedtype636 = alloca ptr, align 8
  %error_var645 = alloca i64, align 8
  %.inlinecache647 = alloca ptr, align 8
  %.cachedtype648 = alloca ptr, align 8
  %indirectarg656 = alloca %"char[]", align 8
  %indirectarg657 = alloca %"char[]", align 8
  %indirectarg658 = alloca %"char[]", align 8
  %error_var671 = alloca i64, align 8
  %out672 = alloca %any, align 8
  %x673 = alloca %"char[]", align 8
  %len674 = alloca i64, align 8
  %error_var675 = alloca i64, align 8
  %out676 = alloca %any, align 8
  %x677 = alloca %"char[]", align 8
  %.inlinecache680 = alloca ptr, align 8
  %.cachedtype681 = alloca ptr, align 8
  %indirectarg689 = alloca %"char[]", align 8
  %indirectarg690 = alloca %"char[]", align 8
  %indirectarg691 = alloca %"char[]", align 8
  %retparam693 = alloca i64, align 8
  %indirectarg694 = alloca %"char[]", align 8
  %error_var700 = alloca i64, align 8
  %.inlinecache702 = alloca ptr, align 8
  %.cachedtype703 = alloca ptr, align 8
  %indirectarg711 = alloca %"char[]", align 8
  %indirectarg712 = alloca %"char[]", align 8
  %indirectarg713 = alloca %"char[]", align 8
  %.inlinecache721 = alloca ptr, align 8
  %.cachedtype722 = alloca ptr, align 8
  %error_var731 = alloca i64, align 8
  %.inlinecache733 = alloca ptr, align 8
  %.cachedtype734 = alloca ptr, align 8
  %indirectarg742 = alloca %"char[]", align 8
  %indirectarg743 = alloca %"char[]", align 8
  %indirectarg744 = alloca %"char[]", align 8
  %error_var756 = alloca i64, align 8
  %varargslots757 = alloca [1 x %any], align 16
  %retparam759 = alloca i64, align 8
  %indirectarg760 = alloca %any, align 8
  %indirectarg761 = alloca %"char[]", align 8
  %indirectarg762 = alloca %"any[]", align 8
  %error_var768 = alloca i64, align 8
  %varargslots769 = alloca [1 x %any], align 16
  %retparam771 = alloca i64, align 8
  %indirectarg772 = alloca %any, align 8
  %indirectarg773 = alloca %"char[]", align 8
  %indirectarg774 = alloca %"any[]", align 8
  %error_var780 = alloca i64, align 8
  %varargslots781 = alloca [1 x %any], align 16
  %indirectarg784 = alloca %"char[]", align 8
  %indirectarg785 = alloca %"char[]", align 8
  %indirectarg786 = alloca %"char[]", align 8
  %retparam790 = alloca i64, align 8
  %indirectarg791 = alloca %any, align 8
  %indirectarg792 = alloca %"char[]", align 8
  %indirectarg793 = alloca %"any[]", align 8
  %error_var799 = alloca i64, align 8
  %varargslots800 = alloca [1 x %any], align 16
  %indirectarg803 = alloca %"char[]", align 8
  %indirectarg804 = alloca %"char[]", align 8
  %indirectarg805 = alloca %"char[]", align 8
  %retparam809 = alloca i64, align 8
  %indirectarg810 = alloca %any, align 8
  %indirectarg811 = alloca %"char[]", align 8
  %indirectarg812 = alloca %"any[]", align 8
  %error_var819 = alloca i64, align 8
  %out820 = alloca %any, align 8
  %x821 = alloca %"char[]", align 8
  %len822 = alloca i64, align 8
  %error_var823 = alloca i64, align 8
  %out824 = alloca %any, align 8
  %x825 = alloca %"char[]", align 8
  %.inlinecache828 = alloca ptr, align 8
  %.cachedtype829 = alloca ptr, align 8
  %indirectarg837 = alloca %"char[]", align 8
  %indirectarg838 = alloca %"char[]", align 8
  %indirectarg839 = alloca %"char[]", align 8
  %retparam841 = alloca i64, align 8
  %indirectarg842 = alloca %"char[]", align 8
  %error_var848 = alloca i64, align 8
  %.inlinecache850 = alloca ptr, align 8
  %.cachedtype851 = alloca ptr, align 8
  %indirectarg859 = alloca %"char[]", align 8
  %indirectarg860 = alloca %"char[]", align 8
  %indirectarg861 = alloca %"char[]", align 8
  %.inlinecache869 = alloca ptr, align 8
  %.cachedtype870 = alloca ptr, align 8
  %error_var879 = alloca i64, align 8
  %.inlinecache881 = alloca ptr, align 8
  %.cachedtype882 = alloca ptr, align 8
  %indirectarg890 = alloca %"char[]", align 8
  %indirectarg891 = alloca %"char[]", align 8
  %indirectarg892 = alloca %"char[]", align 8
  %error_var903 = alloca i64, align 8
  %out904 = alloca %any, align 8
  %x905 = alloca %"char[]", align 8
  %len906 = alloca i64, align 8
  %error_var907 = alloca i64, align 8
  %out908 = alloca %any, align 8
  %x909 = alloca %"char[]", align 8
  %.inlinecache912 = alloca ptr, align 8
  %.cachedtype913 = alloca ptr, align 8
  %indirectarg921 = alloca %"char[]", align 8
  %indirectarg922 = alloca %"char[]", align 8
  %indirectarg923 = alloca %"char[]", align 8
  %retparam925 = alloca i64, align 8
  %indirectarg926 = alloca %"char[]", align 8
  %error_var932 = alloca i64, align 8
  %.inlinecache934 = alloca ptr, align 8
  %.cachedtype935 = alloca ptr, align 8
  %indirectarg943 = alloca %"char[]", align 8
  %indirectarg944 = alloca %"char[]", align 8
  %indirectarg945 = alloca %"char[]", align 8
  %.inlinecache953 = alloca ptr, align 8
  %.cachedtype954 = alloca ptr, align 8
  %error_var963 = alloca i64, align 8
  %.inlinecache965 = alloca ptr, align 8
  %.cachedtype966 = alloca ptr, align 8
  %indirectarg974 = alloca %"char[]", align 8
  %indirectarg975 = alloca %"char[]", align 8
  %indirectarg976 = alloca %"char[]", align 8
  %.anon987 = alloca i64, align 8
  %.anon989 = alloca i64, align 8
  %i993 = alloca i64, align 8
  %allocation994 = alloca ptr, align 8
  %taddr998 = alloca i64, align 8
  %taddr999 = alloca i64, align 8
  %indirectarg1000 = alloca %"char[]", align 8
  %indirectarg1001 = alloca %"char[]", align 8
  %indirectarg1002 = alloca %"char[]", align 8
  %varargslots1003 = alloca [2 x %any], align 16
  %indirectarg1006 = alloca %"any[]", align 8
  %indirectarg1011 = alloca %"char[]", align 8
  %indirectarg1012 = alloca %"char[]", align 8
  %indirectarg1013 = alloca %"char[]", align 8
  %error_var1019 = alloca i64, align 8
  %varargslots1020 = alloca [2 x %any], align 16
  %taddr1022 = alloca i64, align 8
  %indirectarg1025 = alloca %"char[]", align 8
  %indirectarg1026 = alloca %"char[]", align 8
  %indirectarg1027 = alloca %"char[]", align 8
  %retparam1032 = alloca i64, align 8
  %indirectarg1033 = alloca %any, align 8
  %indirectarg1034 = alloca %"char[]", align 8
  %indirectarg1035 = alloca %"any[]", align 8
  %backtraces1042 = alloca %List, align 8
  %end = alloca i64, align 8
  %.anon1043 = alloca ptr, align 8
  %indirectarg1046 = alloca %"char[]", align 8
  %indirectarg1047 = alloca %"char[]", align 8
  %indirectarg1048 = alloca %"char[]", align 8
  %.anon1051 = alloca i64, align 8
  %j = alloca i64, align 8
  %val1054 = alloca ptr, align 8
  %indirectarg1057 = alloca %"char[]", align 8
  %indirectarg1058 = alloca %"char[]", align 8
  %indirectarg1059 = alloca %"char[]", align 8
  %taddr1063 = alloca i64, align 8
  %taddr1064 = alloca i64, align 8
  %indirectarg1065 = alloca %"char[]", align 8
  %indirectarg1066 = alloca %"char[]", align 8
  %indirectarg1067 = alloca %"char[]", align 8
  %varargslots1068 = alloca [2 x %any], align 16
  %indirectarg1071 = alloca %"any[]", align 8
  %list = alloca %List, align 8
  %error_var1079 = alloca i64, align 8
  %indirectarg1082 = alloca %"char[]", align 8
  %indirectarg1083 = alloca %"char[]", align 8
  %indirectarg1084 = alloca %"char[]", align 8
  %taddr1089 = alloca i64, align 8
  %taddr1090 = alloca i64, align 8
  %indirectarg1091 = alloca %"char[]", align 8
  %indirectarg1092 = alloca %"char[]", align 8
  %indirectarg1093 = alloca %"char[]", align 8
  %varargslots1094 = alloca [2 x %any], align 16
  %indirectarg1097 = alloca %"any[]", align 8
  %taddr1100 = alloca i64, align 8
  %taddr1101 = alloca i64, align 8
  %indirectarg1102 = alloca %"char[]", align 8
  %indirectarg1103 = alloca %"char[]", align 8
  %indirectarg1104 = alloca %"char[]", align 8
  %varargslots1105 = alloca [2 x %any], align 16
  %indirectarg1108 = alloca %"any[]", align 8
  %retparam1114 = alloca %List, align 8
  %indirectarg1115 = alloca %"void*[]", align 8
  %indirectarg1116 = alloca %any, align 8
  %error_var1122 = alloca i64, align 8
  %varargslots1123 = alloca [2 x %any], align 16
  %taddr1125 = alloca i64, align 8
  %indirectarg1128 = alloca %"char[]", align 8
  %indirectarg1129 = alloca %"char[]", align 8
  %indirectarg1130 = alloca %"char[]", align 8
  %retparam1135 = alloca i64, align 8
  %indirectarg1136 = alloca %any, align 8
  %indirectarg1137 = alloca %"char[]", align 8
  %indirectarg1138 = alloca %"any[]", align 8
  %.anon1144 = alloca i64, align 8
  %.anon1145 = alloca i64, align 8
  %trace1149 = alloca %Backtrace, align 8
  %self1150 = alloca ptr, align 8
  %index = alloca i64, align 8
  %indirectarg1153 = alloca %"char[]", align 8
  %indirectarg1154 = alloca %"char[]", align 8
  %indirectarg1155 = alloca %"char[]", align 8
  %varargslots1160 = alloca [3 x %any], align 16
  %retparam1167 = alloca i64, align 8
  %indirectarg1168 = alloca %any, align 8
  %indirectarg1169 = alloca %"char[]", align 8
  %indirectarg1170 = alloca %"any[]", align 8
  %retparam1175 = alloca i64, align 8
  %indirectarg1176 = alloca %any, align 8
  %indirectarg1177 = alloca %"char[]", align 8
  %indirectarg1178 = alloca %"any[]", align 8
  %varargslots1182 = alloca [1 x %any], align 16
  %retparam1185 = alloca i64, align 8
  %indirectarg1186 = alloca %any, align 8
  %indirectarg1187 = alloca %"char[]", align 8
  %indirectarg1188 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype966, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype954, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype935, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype913, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype882, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype870, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype851, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype829, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype734, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype722, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype703, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype681, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype648, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype636, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype617, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype595, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype457, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype445, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype426, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype404, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype373, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype361, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype342, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype320, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype289, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype277, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype258, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype236, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype155, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype143, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype124, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype102, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype72, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype61, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype42, align 8, !dbg !2320
  store ptr null, ptr %.cachedtype, align 8, !dbg !2320
  %2 = icmp eq ptr %0, null, !dbg !2320
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !2320
  br i1 %3, label %panic, label %checkok, !dbg !2320

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2321, metadata !DIExpression()), !dbg !2322
  call void @llvm.dbg.declare(metadata ptr %1, metadata !2323, metadata !DIExpression()), !dbg !2324
  call void @llvm.dbg.declare(metadata ptr %total, metadata !2325, metadata !DIExpression()), !dbg !2326
  store i64 0, ptr %total, align 8, !dbg !2327
  call void @llvm.dbg.declare(metadata ptr %entries, metadata !2328, metadata !DIExpression()), !dbg !2329
  store i64 0, ptr %entries, align 8, !dbg !2330
  call void @llvm.dbg.declare(metadata ptr %leaks, metadata !2331, metadata !DIExpression()), !dbg !2332
  store i8 0, ptr %leaks, align 1, !dbg !2333
  call void @llvm.dbg.declare(metadata ptr %current, metadata !2334, metadata !DIExpression()), !dbg !2336
  %4 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2338
  %not = icmp eq ptr %4, null, !dbg !2338
  br i1 %not, label %if.then, label %if.exit, !dbg !2338

if.then:                                          ; preds = %checkok
  call void @std.core.mem.allocator.init_default_temp_allocators(), !dbg !2341
  br label %if.exit, !dbg !2341

if.exit:                                          ; preds = %if.then, %checkok
  %5 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2343
  store ptr %5, ptr %current, align 8, !dbg !2343
  call void @llvm.dbg.declare(metadata ptr %mark, metadata !2344, metadata !DIExpression()), !dbg !2345
  %6 = load ptr, ptr %current, align 8, !dbg !2346
  %checknull = icmp eq ptr %6, null, !dbg !2346
  %7 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2346
  br i1 %7, label %panic3, label %checkok7, !dbg !2346

checkok7:                                         ; preds = %if.exit
  %ptradd = getelementptr inbounds i8, ptr %6, i64 24, !dbg !2346
  %8 = load i64, ptr %ptradd, align 8, !dbg !2346
  store i64 %8, ptr %mark, align 8, !dbg !2346
  call void @llvm.dbg.declare(metadata ptr %allocs, metadata !2347, metadata !DIExpression()), !dbg !2349
  %9 = load ptr, ptr %self, align 8, !dbg !2350
  %checknull8 = icmp eq ptr %9, null, !dbg !2350
  %10 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !2350
  br i1 %10, label %panic9, label %checkok13, !dbg !2350

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %9, i64 16, !dbg !2350
  call void @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.value_tlist"(ptr sret(%"Allocation[]") align 8 %allocs, ptr %ptradd14), !dbg !2350
  %ptradd15 = getelementptr inbounds i8, ptr %allocs, i64 8, !dbg !2351
  %11 = load i64, ptr %ptradd15, align 8, !dbg !2351
  %intbool = icmp ne i64 %11, 0, !dbg !2351
  br i1 %intbool, label %if.then16, label %if.else670, !dbg !2351

if.then16:                                        ; preds = %checkok13
  %ptradd17 = getelementptr inbounds i8, ptr %allocs, i64 8, !dbg !2352
  %12 = load i64, ptr %ptradd17, align 8, !dbg !2352
  %13 = load ptr, ptr %allocs, align 8, !dbg !2352
  %ge = icmp sge i64 0, %12, !dbg !2354
  %14 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2354
  br i1 %14, label %panic18, label %checkok25, !dbg !2354

checkok25:                                        ; preds = %if.then16
  %ptradd26 = getelementptr inbounds i8, ptr %13, i64 16, !dbg !2354
  %15 = load ptr, ptr %ptradd26, align 8, !dbg !2355
  %not27 = icmp eq ptr %15, null, !dbg !2355
  br i1 %not27, label %if.then28, label %if.else, !dbg !2355

if.then28:                                        ; preds = %checkok25
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.108, i64 31 }, ptr %x, align 8
  call void @llvm.dbg.declare(metadata ptr %len, metadata !2356, metadata !DIExpression()), !dbg !2359
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out30, ptr align 8 %out, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %x31, ptr align 8 %x, i32 16, i1 false)
  %ptradd33 = getelementptr inbounds i8, ptr %out30, i64 8, !dbg !2362
  %16 = load i64, ptr %ptradd33, align 8, !dbg !2362
  %17 = inttoptr i64 %16 to ptr, !dbg !2362
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !2320
  %18 = icmp eq ptr %17, %type, !dbg !2320
  br i1 %18, label %cache_hit, label %cache_miss, !dbg !2320

cache_miss:                                       ; preds = %if.then28
  %ptradd34 = getelementptr inbounds i8, ptr %17, i64 16, !dbg !2320
  %19 = load ptr, ptr %ptradd34, align 8, !dbg !2320
  %20 = call ptr @.dyn_search(ptr %19, ptr @"$sel.write"), !dbg !2320
  store ptr %20, ptr %.inlinecache, align 8, !dbg !2320
  store ptr %17, ptr %.cachedtype, align 8, !dbg !2320
  br label %21, !dbg !2320

cache_hit:                                        ; preds = %if.then28
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !2320
  br label %21, !dbg !2320

21:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %20, %cache_miss ], !dbg !2320
  %22 = icmp eq ptr %fn_phi, null, !dbg !2320
  br i1 %22, label %missing_function, label %match, !dbg !2320

missing_function:                                 ; preds = %21
  store %"char[]" { ptr @.panic_msg.109, i64 42 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg37, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 118), !dbg !2365
  unreachable, !dbg !2365

match:                                            ; preds = %21
  %24 = load ptr, ptr %out30, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg38, ptr align 8 %x31, i32 16, i1 false)
  %25 = call i64 %fn_phi(ptr %retparam, ptr %24, ptr align 8 %indirectarg38), !dbg !2365
  %not_err = icmp eq i64 %25, 0, !dbg !2365
  %26 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2365
  br i1 %26, label %after_check, label %assign_optional, !dbg !2365

assign_optional:                                  ; preds = %match
  store i64 %25, ptr %error_var29, align 8, !dbg !2365
  br label %guard_block, !dbg !2365

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !2365

guard_block:                                      ; preds = %assign_optional
  %27 = load i64, ptr %error_var29, align 8, !dbg !2365
  store i64 %27, ptr %error_var, align 8, !dbg !2365
  br label %guard_block90, !dbg !2365

noerr_block:                                      ; preds = %after_check
  %28 = load i64, ptr %retparam, align 8, !dbg !2365
  store i64 %28, ptr %len, align 8, !dbg !2365
  %ptradd40 = getelementptr inbounds i8, ptr %out, i64 8, !dbg !2366
  %29 = load i64, ptr %ptradd40, align 8, !dbg !2366
  %30 = inttoptr i64 %29 to ptr, !dbg !2366
  %type43 = load ptr, ptr %.cachedtype42, align 8, !dbg !2320
  %31 = icmp eq ptr %30, %type43, !dbg !2320
  br i1 %31, label %cache_hit46, label %cache_miss44, !dbg !2320

cache_miss44:                                     ; preds = %noerr_block
  %ptradd45 = getelementptr inbounds i8, ptr %30, i64 16, !dbg !2320
  %32 = load ptr, ptr %ptradd45, align 8, !dbg !2320
  %33 = call ptr @.dyn_search(ptr %32, ptr @"$sel.write_byte"), !dbg !2320
  store ptr %33, ptr %.inlinecache41, align 8, !dbg !2320
  store ptr %30, ptr %.cachedtype42, align 8, !dbg !2320
  br label %34, !dbg !2320

cache_hit46:                                      ; preds = %noerr_block
  %cache_hit_fn47 = load ptr, ptr %.inlinecache41, align 8, !dbg !2320
  br label %34, !dbg !2320

34:                                               ; preds = %cache_hit46, %cache_miss44
  %fn_phi48 = phi ptr [ %cache_hit_fn47, %cache_hit46 ], [ %33, %cache_miss44 ], !dbg !2320
  %35 = icmp eq ptr %fn_phi48, null, !dbg !2320
  br i1 %35, label %missing_function49, label %match53, !dbg !2320

missing_function49:                               ; preds = %34
  store %"char[]" { ptr @.panic_msg.111, i64 47 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg52, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, i32 169), !dbg !2367
  unreachable, !dbg !2367

match53:                                          ; preds = %34
  %37 = load ptr, ptr %out, align 8, !dbg !2367
  %38 = call i64 %fn_phi48(ptr %37, i8 10), !dbg !2367
  %not_err54 = icmp eq i64 %38, 0, !dbg !2367
  %39 = call i1 @llvm.expect.i1(i1 %not_err54, i1 true), !dbg !2367
  br i1 %39, label %after_check56, label %assign_optional55, !dbg !2367

assign_optional55:                                ; preds = %match53
  store i64 %38, ptr %error_var39, align 8, !dbg !2367
  br label %guard_block57, !dbg !2367

after_check56:                                    ; preds = %match53
  br label %noerr_block58, !dbg !2367

guard_block57:                                    ; preds = %assign_optional55
  %40 = load i64, ptr %error_var39, align 8, !dbg !2367
  store i64 %40, ptr %error_var, align 8, !dbg !2367
  br label %guard_block90, !dbg !2367

noerr_block58:                                    ; preds = %after_check56
  %ptradd59 = getelementptr inbounds i8, ptr %out, i64 8, !dbg !2368
  %41 = load i64, ptr %ptradd59, align 8, !dbg !2368
  %42 = inttoptr i64 %41 to ptr, !dbg !2368
  %type62 = load ptr, ptr %.cachedtype61, align 8, !dbg !2320
  %43 = icmp eq ptr %42, %type62, !dbg !2320
  br i1 %43, label %cache_hit65, label %cache_miss63, !dbg !2320

cache_miss63:                                     ; preds = %noerr_block58
  %ptradd64 = getelementptr inbounds i8, ptr %42, i64 16, !dbg !2320
  %44 = load ptr, ptr %ptradd64, align 8, !dbg !2320
  %45 = call ptr @.dyn_search(ptr %44, ptr @"$sel.flush"), !dbg !2320
  store ptr %45, ptr %.inlinecache60, align 8, !dbg !2320
  store ptr %42, ptr %.cachedtype61, align 8, !dbg !2320
  br label %46, !dbg !2320

cache_hit65:                                      ; preds = %noerr_block58
  %cache_hit_fn66 = load ptr, ptr %.inlinecache60, align 8, !dbg !2320
  br label %46, !dbg !2320

46:                                               ; preds = %cache_hit65, %cache_miss63
  %fn_phi67 = phi ptr [ %cache_hit_fn66, %cache_hit65 ], [ %45, %cache_miss63 ], !dbg !2320
  %ptrbool = icmp ne ptr %fn_phi67, null, !dbg !2320
  br i1 %ptrbool, label %if.then68, label %if.exit89, !dbg !2320

if.then68:                                        ; preds = %46
  %ptradd70 = getelementptr inbounds i8, ptr %out, i64 8, !dbg !2369
  %47 = load i64, ptr %ptradd70, align 8, !dbg !2369
  %48 = inttoptr i64 %47 to ptr, !dbg !2369
  %type73 = load ptr, ptr %.cachedtype72, align 8, !dbg !2320
  %49 = icmp eq ptr %48, %type73, !dbg !2320
  br i1 %49, label %cache_hit76, label %cache_miss74, !dbg !2320

cache_miss74:                                     ; preds = %if.then68
  %ptradd75 = getelementptr inbounds i8, ptr %48, i64 16, !dbg !2320
  %50 = load ptr, ptr %ptradd75, align 8, !dbg !2320
  %51 = call ptr @.dyn_search(ptr %50, ptr @"$sel.flush"), !dbg !2320
  store ptr %51, ptr %.inlinecache71, align 8, !dbg !2320
  store ptr %48, ptr %.cachedtype72, align 8, !dbg !2320
  br label %52, !dbg !2320

cache_hit76:                                      ; preds = %if.then68
  %cache_hit_fn77 = load ptr, ptr %.inlinecache71, align 8, !dbg !2320
  br label %52, !dbg !2320

52:                                               ; preds = %cache_hit76, %cache_miss74
  %fn_phi78 = phi ptr [ %cache_hit_fn77, %cache_hit76 ], [ %51, %cache_miss74 ], !dbg !2320
  %53 = icmp eq ptr %fn_phi78, null, !dbg !2320
  br i1 %53, label %missing_function79, label %match83, !dbg !2320

missing_function79:                               ; preds = %52
  store %"char[]" { ptr @.panic_msg.112, i64 42 }, ptr %indirectarg80, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg81, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg82, align 8
  %54 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %54(ptr align 8 %indirectarg80, ptr align 8 %indirectarg81, ptr align 8 %indirectarg82, i32 172), !dbg !2369
  unreachable, !dbg !2369

match83:                                          ; preds = %52
  %55 = load ptr, ptr %out, align 8, !dbg !2369
  %56 = call i64 %fn_phi78(ptr %55), !dbg !2369
  %not_err84 = icmp eq i64 %56, 0, !dbg !2369
  %57 = call i1 @llvm.expect.i1(i1 %not_err84, i1 true), !dbg !2369
  br i1 %57, label %after_check86, label %assign_optional85, !dbg !2369

assign_optional85:                                ; preds = %match83
  store i64 %56, ptr %error_var69, align 8, !dbg !2369
  br label %guard_block87, !dbg !2369

after_check86:                                    ; preds = %match83
  br label %noerr_block88, !dbg !2369

guard_block87:                                    ; preds = %assign_optional85
  %58 = load i64, ptr %error_var69, align 8, !dbg !2369
  store i64 %58, ptr %error_var, align 8, !dbg !2369
  br label %guard_block90, !dbg !2369

noerr_block88:                                    ; preds = %after_check86
  br label %if.exit89, !dbg !2369

if.exit89:                                        ; preds = %noerr_block88, %46
  %59 = load i64, ptr %len, align 8, !dbg !2370
  %add = add i64 %59, 1, !dbg !2370
  br label %noerr_block91, !dbg !2370

guard_block90:                                    ; preds = %guard_block87, %guard_block57, %guard_block
  %60 = load ptr, ptr %current, align 8, !dbg !2371
  %61 = load i64, ptr %mark, align 8, !dbg !2371
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %60, i64 %61), !dbg !2373
  %62 = load i64, ptr %error_var, align 8, !dbg !2374
  ret i64 %62, !dbg !2374

noerr_block91:                                    ; preds = %if.exit89
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out93, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.113, i64 23 }, ptr %x94, align 8
  call void @llvm.dbg.declare(metadata ptr %len95, metadata !2375, metadata !DIExpression()), !dbg !2377
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out97, ptr align 8 %out93, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %x98, ptr align 8 %x94, i32 16, i1 false)
  %ptradd100 = getelementptr inbounds i8, ptr %out97, i64 8, !dbg !2379
  %63 = load i64, ptr %ptradd100, align 8, !dbg !2379
  %64 = inttoptr i64 %63 to ptr, !dbg !2379
  %type103 = load ptr, ptr %.cachedtype102, align 8, !dbg !2320
  %65 = icmp eq ptr %64, %type103, !dbg !2320
  br i1 %65, label %cache_hit106, label %cache_miss104, !dbg !2320

cache_miss104:                                    ; preds = %noerr_block91
  %ptradd105 = getelementptr inbounds i8, ptr %64, i64 16, !dbg !2320
  %66 = load ptr, ptr %ptradd105, align 8, !dbg !2320
  %67 = call ptr @.dyn_search(ptr %66, ptr @"$sel.write"), !dbg !2320
  store ptr %67, ptr %.inlinecache101, align 8, !dbg !2320
  store ptr %64, ptr %.cachedtype102, align 8, !dbg !2320
  br label %68, !dbg !2320

cache_hit106:                                     ; preds = %noerr_block91
  %cache_hit_fn107 = load ptr, ptr %.inlinecache101, align 8, !dbg !2320
  br label %68, !dbg !2320

68:                                               ; preds = %cache_hit106, %cache_miss104
  %fn_phi108 = phi ptr [ %cache_hit_fn107, %cache_hit106 ], [ %67, %cache_miss104 ], !dbg !2320
  %69 = icmp eq ptr %fn_phi108, null, !dbg !2320
  br i1 %69, label %missing_function109, label %match113, !dbg !2320

missing_function109:                              ; preds = %68
  store %"char[]" { ptr @.panic_msg.109, i64 42 }, ptr %indirectarg110, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg111, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg112, align 8
  %70 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %70(ptr align 8 %indirectarg110, ptr align 8 %indirectarg111, ptr align 8 %indirectarg112, i32 118), !dbg !2382
  unreachable, !dbg !2382

match113:                                         ; preds = %68
  %71 = load ptr, ptr %out97, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg115, ptr align 8 %x98, i32 16, i1 false)
  %72 = call i64 %fn_phi108(ptr %retparam114, ptr %71, ptr align 8 %indirectarg115), !dbg !2382
  %not_err116 = icmp eq i64 %72, 0, !dbg !2382
  %73 = call i1 @llvm.expect.i1(i1 %not_err116, i1 true), !dbg !2382
  br i1 %73, label %after_check118, label %assign_optional117, !dbg !2382

assign_optional117:                               ; preds = %match113
  store i64 %72, ptr %error_var96, align 8, !dbg !2382
  br label %guard_block119, !dbg !2382

after_check118:                                   ; preds = %match113
  br label %noerr_block120, !dbg !2382

guard_block119:                                   ; preds = %assign_optional117
  %74 = load i64, ptr %error_var96, align 8, !dbg !2382
  store i64 %74, ptr %error_var92, align 8, !dbg !2382
  br label %guard_block174, !dbg !2382

noerr_block120:                                   ; preds = %after_check118
  %75 = load i64, ptr %retparam114, align 8, !dbg !2382
  store i64 %75, ptr %len95, align 8, !dbg !2382
  %ptradd122 = getelementptr inbounds i8, ptr %out93, i64 8, !dbg !2383
  %76 = load i64, ptr %ptradd122, align 8, !dbg !2383
  %77 = inttoptr i64 %76 to ptr, !dbg !2383
  %type125 = load ptr, ptr %.cachedtype124, align 8, !dbg !2320
  %78 = icmp eq ptr %77, %type125, !dbg !2320
  br i1 %78, label %cache_hit128, label %cache_miss126, !dbg !2320

cache_miss126:                                    ; preds = %noerr_block120
  %ptradd127 = getelementptr inbounds i8, ptr %77, i64 16, !dbg !2320
  %79 = load ptr, ptr %ptradd127, align 8, !dbg !2320
  %80 = call ptr @.dyn_search(ptr %79, ptr @"$sel.write_byte"), !dbg !2320
  store ptr %80, ptr %.inlinecache123, align 8, !dbg !2320
  store ptr %77, ptr %.cachedtype124, align 8, !dbg !2320
  br label %81, !dbg !2320

cache_hit128:                                     ; preds = %noerr_block120
  %cache_hit_fn129 = load ptr, ptr %.inlinecache123, align 8, !dbg !2320
  br label %81, !dbg !2320

81:                                               ; preds = %cache_hit128, %cache_miss126
  %fn_phi130 = phi ptr [ %cache_hit_fn129, %cache_hit128 ], [ %80, %cache_miss126 ], !dbg !2320
  %82 = icmp eq ptr %fn_phi130, null, !dbg !2320
  br i1 %82, label %missing_function131, label %match135, !dbg !2320

missing_function131:                              ; preds = %81
  store %"char[]" { ptr @.panic_msg.111, i64 47 }, ptr %indirectarg132, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg133, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg134, align 8
  %83 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %83(ptr align 8 %indirectarg132, ptr align 8 %indirectarg133, ptr align 8 %indirectarg134, i32 169), !dbg !2384
  unreachable, !dbg !2384

match135:                                         ; preds = %81
  %84 = load ptr, ptr %out93, align 8, !dbg !2384
  %85 = call i64 %fn_phi130(ptr %84, i8 10), !dbg !2384
  %not_err136 = icmp eq i64 %85, 0, !dbg !2384
  %86 = call i1 @llvm.expect.i1(i1 %not_err136, i1 true), !dbg !2384
  br i1 %86, label %after_check138, label %assign_optional137, !dbg !2384

assign_optional137:                               ; preds = %match135
  store i64 %85, ptr %error_var121, align 8, !dbg !2384
  br label %guard_block139, !dbg !2384

after_check138:                                   ; preds = %match135
  br label %noerr_block140, !dbg !2384

guard_block139:                                   ; preds = %assign_optional137
  %87 = load i64, ptr %error_var121, align 8, !dbg !2384
  store i64 %87, ptr %error_var92, align 8, !dbg !2384
  br label %guard_block174, !dbg !2384

noerr_block140:                                   ; preds = %after_check138
  %ptradd141 = getelementptr inbounds i8, ptr %out93, i64 8, !dbg !2385
  %88 = load i64, ptr %ptradd141, align 8, !dbg !2385
  %89 = inttoptr i64 %88 to ptr, !dbg !2385
  %type144 = load ptr, ptr %.cachedtype143, align 8, !dbg !2320
  %90 = icmp eq ptr %89, %type144, !dbg !2320
  br i1 %90, label %cache_hit147, label %cache_miss145, !dbg !2320

cache_miss145:                                    ; preds = %noerr_block140
  %ptradd146 = getelementptr inbounds i8, ptr %89, i64 16, !dbg !2320
  %91 = load ptr, ptr %ptradd146, align 8, !dbg !2320
  %92 = call ptr @.dyn_search(ptr %91, ptr @"$sel.flush"), !dbg !2320
  store ptr %92, ptr %.inlinecache142, align 8, !dbg !2320
  store ptr %89, ptr %.cachedtype143, align 8, !dbg !2320
  br label %93, !dbg !2320

cache_hit147:                                     ; preds = %noerr_block140
  %cache_hit_fn148 = load ptr, ptr %.inlinecache142, align 8, !dbg !2320
  br label %93, !dbg !2320

93:                                               ; preds = %cache_hit147, %cache_miss145
  %fn_phi149 = phi ptr [ %cache_hit_fn148, %cache_hit147 ], [ %92, %cache_miss145 ], !dbg !2320
  %ptrbool150 = icmp ne ptr %fn_phi149, null, !dbg !2320
  br i1 %ptrbool150, label %if.then151, label %if.exit172, !dbg !2320

if.then151:                                       ; preds = %93
  %ptradd153 = getelementptr inbounds i8, ptr %out93, i64 8, !dbg !2386
  %94 = load i64, ptr %ptradd153, align 8, !dbg !2386
  %95 = inttoptr i64 %94 to ptr, !dbg !2386
  %type156 = load ptr, ptr %.cachedtype155, align 8, !dbg !2320
  %96 = icmp eq ptr %95, %type156, !dbg !2320
  br i1 %96, label %cache_hit159, label %cache_miss157, !dbg !2320

cache_miss157:                                    ; preds = %if.then151
  %ptradd158 = getelementptr inbounds i8, ptr %95, i64 16, !dbg !2320
  %97 = load ptr, ptr %ptradd158, align 8, !dbg !2320
  %98 = call ptr @.dyn_search(ptr %97, ptr @"$sel.flush"), !dbg !2320
  store ptr %98, ptr %.inlinecache154, align 8, !dbg !2320
  store ptr %95, ptr %.cachedtype155, align 8, !dbg !2320
  br label %99, !dbg !2320

cache_hit159:                                     ; preds = %if.then151
  %cache_hit_fn160 = load ptr, ptr %.inlinecache154, align 8, !dbg !2320
  br label %99, !dbg !2320

99:                                               ; preds = %cache_hit159, %cache_miss157
  %fn_phi161 = phi ptr [ %cache_hit_fn160, %cache_hit159 ], [ %98, %cache_miss157 ], !dbg !2320
  %100 = icmp eq ptr %fn_phi161, null, !dbg !2320
  br i1 %100, label %missing_function162, label %match166, !dbg !2320

missing_function162:                              ; preds = %99
  store %"char[]" { ptr @.panic_msg.112, i64 42 }, ptr %indirectarg163, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg164, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg165, align 8
  %101 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %101(ptr align 8 %indirectarg163, ptr align 8 %indirectarg164, ptr align 8 %indirectarg165, i32 172), !dbg !2386
  unreachable, !dbg !2386

match166:                                         ; preds = %99
  %102 = load ptr, ptr %out93, align 8, !dbg !2386
  %103 = call i64 %fn_phi161(ptr %102), !dbg !2386
  %not_err167 = icmp eq i64 %103, 0, !dbg !2386
  %104 = call i1 @llvm.expect.i1(i1 %not_err167, i1 true), !dbg !2386
  br i1 %104, label %after_check169, label %assign_optional168, !dbg !2386

assign_optional168:                               ; preds = %match166
  store i64 %103, ptr %error_var152, align 8, !dbg !2386
  br label %guard_block170, !dbg !2386

after_check169:                                   ; preds = %match166
  br label %noerr_block171, !dbg !2386

guard_block170:                                   ; preds = %assign_optional168
  %105 = load i64, ptr %error_var152, align 8, !dbg !2386
  store i64 %105, ptr %error_var92, align 8, !dbg !2386
  br label %guard_block174, !dbg !2386

noerr_block171:                                   ; preds = %after_check169
  br label %if.exit172, !dbg !2386

if.exit172:                                       ; preds = %noerr_block171, %93
  %106 = load i64, ptr %len95, align 8, !dbg !2387
  %add173 = add i64 %106, 1, !dbg !2387
  br label %noerr_block175, !dbg !2387

guard_block174:                                   ; preds = %guard_block170, %guard_block139, %guard_block119
  %107 = load ptr, ptr %current, align 8, !dbg !2388
  %108 = load i64, ptr %mark, align 8, !dbg !2388
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %107, i64 %108), !dbg !2390
  %109 = load i64, ptr %error_var92, align 8, !dbg !2391
  ret i64 %109, !dbg !2391

noerr_block175:                                   ; preds = %if.exit172
  call void @llvm.dbg.declare(metadata ptr %.anon, metadata !2392, metadata !DIExpression()), !dbg !2394
  %ptradd176 = getelementptr inbounds i8, ptr %allocs, i64 8, !dbg !2394
  %110 = load i64, ptr %ptradd176, align 8, !dbg !2394
  store i64 %110, ptr %.anon, align 8, !dbg !2394
  call void @llvm.dbg.declare(metadata ptr %.anon177, metadata !2392, metadata !DIExpression()), !dbg !2395
  store i64 0, ptr %.anon177, align 8, !dbg !2395
  br label %loop.cond, !dbg !2395

loop.cond:                                        ; preds = %noerr_block225, %noerr_block175
  %111 = load i64, ptr %.anon177, align 8, !dbg !2395
  %112 = load i64, ptr %.anon, align 8, !dbg !2394
  %lt = icmp ult i64 %111, %112, !dbg !2395
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !2395

loop.body:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %i, metadata !2396, metadata !DIExpression()), !dbg !2398
  %113 = load i64, ptr %.anon177, align 8, !dbg !2398
  store i64 %113, ptr %i, align 8, !dbg !2398
  call void @llvm.dbg.declare(metadata ptr %allocation, metadata !2399, metadata !DIExpression()), !dbg !2400
  %ptradd178 = getelementptr inbounds i8, ptr %allocs, i64 8, !dbg !2401
  %114 = load i64, ptr %ptradd178, align 8, !dbg !2401
  %115 = load ptr, ptr %allocs, align 8, !dbg !2401
  %116 = load i64, ptr %.anon177, align 8, !dbg !2398
  %ge179 = icmp uge i64 %116, %114, !dbg !2398
  %117 = call i1 @llvm.expect.i1(i1 %ge179, i1 false), !dbg !2398
  br i1 %117, label %panic180, label %checkok190, !dbg !2398

checkok190:                                       ; preds = %loop.body
  %ptroffset = getelementptr inbounds [144 x i8], ptr %115, i64 %116, !dbg !2398
  store ptr %ptroffset, ptr %allocation, align 8, !dbg !2398
  %118 = load i64, ptr %entries, align 8, !dbg !2402
  %add191 = add i64 %118, 1, !dbg !2402
  store i64 %add191, ptr %entries, align 8, !dbg !2402
  %119 = load i64, ptr %total, align 8, !dbg !2404
  %120 = load ptr, ptr %allocation, align 8, !dbg !2405
  %checknull192 = icmp eq ptr %120, null, !dbg !2405
  %121 = call i1 @llvm.expect.i1(i1 %checknull192, i1 false), !dbg !2405
  br i1 %121, label %panic193, label %checkok197, !dbg !2405

checkok197:                                       ; preds = %checkok190
  %ptradd198 = getelementptr inbounds i8, ptr %120, i64 8, !dbg !2405
  %122 = load i64, ptr %ptradd198, align 8, !dbg !2405
  %add199 = add i64 %119, %122, !dbg !2404
  store i64 %add199, ptr %total, align 8, !dbg !2404
  %123 = load ptr, ptr %allocation, align 8, !dbg !2406
  %checknull202 = icmp eq ptr %123, null, !dbg !2406
  %124 = call i1 @llvm.expect.i1(i1 %checknull202, i1 false), !dbg !2406
  br i1 %124, label %panic203, label %checkok207, !dbg !2406

checkok207:                                       ; preds = %checkok197
  %ptradd208 = getelementptr inbounds i8, ptr %123, i64 8, !dbg !2406
  %125 = insertvalue %any undef, ptr %ptradd208, 0, !dbg !2406
  %126 = insertvalue %any %125, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !2406
  store %any %126, ptr %varargslots201, align 16, !dbg !2406
  %127 = load ptr, ptr %allocation, align 8, !dbg !2407
  %checknull209 = icmp eq ptr %127, null, !dbg !2407
  %128 = call i1 @llvm.expect.i1(i1 %checknull209, i1 false), !dbg !2407
  br i1 %128, label %panic210, label %checkok214, !dbg !2407

checkok214:                                       ; preds = %checkok207
  %129 = insertvalue %any undef, ptr %127, 0, !dbg !2407
  %130 = insertvalue %any %129, i64 ptrtoint (ptr @"$ct.p$void" to i64), 1, !dbg !2407
  %ptradd215 = getelementptr inbounds i8, ptr %varargslots201, i64 16, !dbg !2407
  store %any %130, ptr %ptradd215, align 16, !dbg !2407
  %131 = insertvalue %"any[]" undef, ptr %varargslots201, 0, !dbg !2407
  %"$$temp216" = insertvalue %"any[]" %131, i64 2, 1, !dbg !2407
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg218, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.114, i64 9 }, ptr %indirectarg219, align 8
  store %"any[]" %"$$temp216", ptr %indirectarg220, align 8
  %132 = call i64 @std.io.fprintfn(ptr %retparam217, ptr align 8 %indirectarg218, ptr align 8 %indirectarg219, ptr align 8 %indirectarg220), !dbg !2408
  %not_err221 = icmp eq i64 %132, 0, !dbg !2408
  %133 = call i1 @llvm.expect.i1(i1 %not_err221, i1 true), !dbg !2408
  br i1 %133, label %after_check223, label %assign_optional222, !dbg !2408

assign_optional222:                               ; preds = %checkok214
  store i64 %132, ptr %error_var200, align 8, !dbg !2408
  br label %guard_block224, !dbg !2408

after_check223:                                   ; preds = %checkok214
  br label %noerr_block225, !dbg !2408

guard_block224:                                   ; preds = %assign_optional222
  %134 = load ptr, ptr %current, align 8, !dbg !2409
  %135 = load i64, ptr %mark, align 8, !dbg !2409
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %134, i64 %135), !dbg !2411
  %136 = load i64, ptr %error_var200, align 8, !dbg !2412
  ret i64 %136, !dbg !2412

noerr_block225:                                   ; preds = %after_check223
  %137 = load i64, ptr %.anon177, align 8, !dbg !2395
  %addnuw = add nuw i64 %137, 1, !dbg !2395
  store i64 %addnuw, ptr %.anon177, align 8, !dbg !2395
  br label %loop.cond, !dbg !2395

loop.exit:                                        ; preds = %loop.cond
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out227, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.115, i64 31 }, ptr %x228, align 8
  call void @llvm.dbg.declare(metadata ptr %len229, metadata !2413, metadata !DIExpression()), !dbg !2415
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out231, ptr align 8 %out227, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %x232, ptr align 8 %x228, i32 16, i1 false)
  %ptradd234 = getelementptr inbounds i8, ptr %out231, i64 8, !dbg !2417
  %138 = load i64, ptr %ptradd234, align 8, !dbg !2417
  %139 = inttoptr i64 %138 to ptr, !dbg !2417
  %type237 = load ptr, ptr %.cachedtype236, align 8, !dbg !2320
  %140 = icmp eq ptr %139, %type237, !dbg !2320
  br i1 %140, label %cache_hit240, label %cache_miss238, !dbg !2320

cache_miss238:                                    ; preds = %loop.exit
  %ptradd239 = getelementptr inbounds i8, ptr %139, i64 16, !dbg !2320
  %141 = load ptr, ptr %ptradd239, align 8, !dbg !2320
  %142 = call ptr @.dyn_search(ptr %141, ptr @"$sel.write"), !dbg !2320
  store ptr %142, ptr %.inlinecache235, align 8, !dbg !2320
  store ptr %139, ptr %.cachedtype236, align 8, !dbg !2320
  br label %143, !dbg !2320

cache_hit240:                                     ; preds = %loop.exit
  %cache_hit_fn241 = load ptr, ptr %.inlinecache235, align 8, !dbg !2320
  br label %143, !dbg !2320

143:                                              ; preds = %cache_hit240, %cache_miss238
  %fn_phi242 = phi ptr [ %cache_hit_fn241, %cache_hit240 ], [ %142, %cache_miss238 ], !dbg !2320
  %144 = icmp eq ptr %fn_phi242, null, !dbg !2320
  br i1 %144, label %missing_function243, label %match247, !dbg !2320

missing_function243:                              ; preds = %143
  store %"char[]" { ptr @.panic_msg.109, i64 42 }, ptr %indirectarg244, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg245, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg246, align 8
  %145 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %145(ptr align 8 %indirectarg244, ptr align 8 %indirectarg245, ptr align 8 %indirectarg246, i32 118), !dbg !2420
  unreachable, !dbg !2420

match247:                                         ; preds = %143
  %146 = load ptr, ptr %out231, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg249, ptr align 8 %x232, i32 16, i1 false)
  %147 = call i64 %fn_phi242(ptr %retparam248, ptr %146, ptr align 8 %indirectarg249), !dbg !2420
  %not_err250 = icmp eq i64 %147, 0, !dbg !2420
  %148 = call i1 @llvm.expect.i1(i1 %not_err250, i1 true), !dbg !2420
  br i1 %148, label %after_check252, label %assign_optional251, !dbg !2420

assign_optional251:                               ; preds = %match247
  store i64 %147, ptr %error_var230, align 8, !dbg !2420
  br label %guard_block253, !dbg !2420

after_check252:                                   ; preds = %match247
  br label %noerr_block254, !dbg !2420

guard_block253:                                   ; preds = %assign_optional251
  %149 = load i64, ptr %error_var230, align 8, !dbg !2420
  store i64 %149, ptr %error_var226, align 8, !dbg !2420
  br label %guard_block308, !dbg !2420

noerr_block254:                                   ; preds = %after_check252
  %150 = load i64, ptr %retparam248, align 8, !dbg !2420
  store i64 %150, ptr %len229, align 8, !dbg !2420
  %ptradd256 = getelementptr inbounds i8, ptr %out227, i64 8, !dbg !2421
  %151 = load i64, ptr %ptradd256, align 8, !dbg !2421
  %152 = inttoptr i64 %151 to ptr, !dbg !2421
  %type259 = load ptr, ptr %.cachedtype258, align 8, !dbg !2320
  %153 = icmp eq ptr %152, %type259, !dbg !2320
  br i1 %153, label %cache_hit262, label %cache_miss260, !dbg !2320

cache_miss260:                                    ; preds = %noerr_block254
  %ptradd261 = getelementptr inbounds i8, ptr %152, i64 16, !dbg !2320
  %154 = load ptr, ptr %ptradd261, align 8, !dbg !2320
  %155 = call ptr @.dyn_search(ptr %154, ptr @"$sel.write_byte"), !dbg !2320
  store ptr %155, ptr %.inlinecache257, align 8, !dbg !2320
  store ptr %152, ptr %.cachedtype258, align 8, !dbg !2320
  br label %156, !dbg !2320

cache_hit262:                                     ; preds = %noerr_block254
  %cache_hit_fn263 = load ptr, ptr %.inlinecache257, align 8, !dbg !2320
  br label %156, !dbg !2320

156:                                              ; preds = %cache_hit262, %cache_miss260
  %fn_phi264 = phi ptr [ %cache_hit_fn263, %cache_hit262 ], [ %155, %cache_miss260 ], !dbg !2320
  %157 = icmp eq ptr %fn_phi264, null, !dbg !2320
  br i1 %157, label %missing_function265, label %match269, !dbg !2320

missing_function265:                              ; preds = %156
  store %"char[]" { ptr @.panic_msg.111, i64 47 }, ptr %indirectarg266, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg267, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg268, align 8
  %158 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %158(ptr align 8 %indirectarg266, ptr align 8 %indirectarg267, ptr align 8 %indirectarg268, i32 169), !dbg !2422
  unreachable, !dbg !2422

match269:                                         ; preds = %156
  %159 = load ptr, ptr %out227, align 8, !dbg !2422
  %160 = call i64 %fn_phi264(ptr %159, i8 10), !dbg !2422
  %not_err270 = icmp eq i64 %160, 0, !dbg !2422
  %161 = call i1 @llvm.expect.i1(i1 %not_err270, i1 true), !dbg !2422
  br i1 %161, label %after_check272, label %assign_optional271, !dbg !2422

assign_optional271:                               ; preds = %match269
  store i64 %160, ptr %error_var255, align 8, !dbg !2422
  br label %guard_block273, !dbg !2422

after_check272:                                   ; preds = %match269
  br label %noerr_block274, !dbg !2422

guard_block273:                                   ; preds = %assign_optional271
  %162 = load i64, ptr %error_var255, align 8, !dbg !2422
  store i64 %162, ptr %error_var226, align 8, !dbg !2422
  br label %guard_block308, !dbg !2422

noerr_block274:                                   ; preds = %after_check272
  %ptradd275 = getelementptr inbounds i8, ptr %out227, i64 8, !dbg !2423
  %163 = load i64, ptr %ptradd275, align 8, !dbg !2423
  %164 = inttoptr i64 %163 to ptr, !dbg !2423
  %type278 = load ptr, ptr %.cachedtype277, align 8, !dbg !2320
  %165 = icmp eq ptr %164, %type278, !dbg !2320
  br i1 %165, label %cache_hit281, label %cache_miss279, !dbg !2320

cache_miss279:                                    ; preds = %noerr_block274
  %ptradd280 = getelementptr inbounds i8, ptr %164, i64 16, !dbg !2320
  %166 = load ptr, ptr %ptradd280, align 8, !dbg !2320
  %167 = call ptr @.dyn_search(ptr %166, ptr @"$sel.flush"), !dbg !2320
  store ptr %167, ptr %.inlinecache276, align 8, !dbg !2320
  store ptr %164, ptr %.cachedtype277, align 8, !dbg !2320
  br label %168, !dbg !2320

cache_hit281:                                     ; preds = %noerr_block274
  %cache_hit_fn282 = load ptr, ptr %.inlinecache276, align 8, !dbg !2320
  br label %168, !dbg !2320

168:                                              ; preds = %cache_hit281, %cache_miss279
  %fn_phi283 = phi ptr [ %cache_hit_fn282, %cache_hit281 ], [ %167, %cache_miss279 ], !dbg !2320
  %ptrbool284 = icmp ne ptr %fn_phi283, null, !dbg !2320
  br i1 %ptrbool284, label %if.then285, label %if.exit306, !dbg !2320

if.then285:                                       ; preds = %168
  %ptradd287 = getelementptr inbounds i8, ptr %out227, i64 8, !dbg !2424
  %169 = load i64, ptr %ptradd287, align 8, !dbg !2424
  %170 = inttoptr i64 %169 to ptr, !dbg !2424
  %type290 = load ptr, ptr %.cachedtype289, align 8, !dbg !2320
  %171 = icmp eq ptr %170, %type290, !dbg !2320
  br i1 %171, label %cache_hit293, label %cache_miss291, !dbg !2320

cache_miss291:                                    ; preds = %if.then285
  %ptradd292 = getelementptr inbounds i8, ptr %170, i64 16, !dbg !2320
  %172 = load ptr, ptr %ptradd292, align 8, !dbg !2320
  %173 = call ptr @.dyn_search(ptr %172, ptr @"$sel.flush"), !dbg !2320
  store ptr %173, ptr %.inlinecache288, align 8, !dbg !2320
  store ptr %170, ptr %.cachedtype289, align 8, !dbg !2320
  br label %174, !dbg !2320

cache_hit293:                                     ; preds = %if.then285
  %cache_hit_fn294 = load ptr, ptr %.inlinecache288, align 8, !dbg !2320
  br label %174, !dbg !2320

174:                                              ; preds = %cache_hit293, %cache_miss291
  %fn_phi295 = phi ptr [ %cache_hit_fn294, %cache_hit293 ], [ %173, %cache_miss291 ], !dbg !2320
  %175 = icmp eq ptr %fn_phi295, null, !dbg !2320
  br i1 %175, label %missing_function296, label %match300, !dbg !2320

missing_function296:                              ; preds = %174
  store %"char[]" { ptr @.panic_msg.112, i64 42 }, ptr %indirectarg297, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg298, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg299, align 8
  %176 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %176(ptr align 8 %indirectarg297, ptr align 8 %indirectarg298, ptr align 8 %indirectarg299, i32 172), !dbg !2424
  unreachable, !dbg !2424

match300:                                         ; preds = %174
  %177 = load ptr, ptr %out227, align 8, !dbg !2424
  %178 = call i64 %fn_phi295(ptr %177), !dbg !2424
  %not_err301 = icmp eq i64 %178, 0, !dbg !2424
  %179 = call i1 @llvm.expect.i1(i1 %not_err301, i1 true), !dbg !2424
  br i1 %179, label %after_check303, label %assign_optional302, !dbg !2424

assign_optional302:                               ; preds = %match300
  store i64 %178, ptr %error_var286, align 8, !dbg !2424
  br label %guard_block304, !dbg !2424

after_check303:                                   ; preds = %match300
  br label %noerr_block305, !dbg !2424

guard_block304:                                   ; preds = %assign_optional302
  %180 = load i64, ptr %error_var286, align 8, !dbg !2424
  store i64 %180, ptr %error_var226, align 8, !dbg !2424
  br label %guard_block308, !dbg !2424

noerr_block305:                                   ; preds = %after_check303
  br label %if.exit306, !dbg !2424

if.exit306:                                       ; preds = %noerr_block305, %168
  %181 = load i64, ptr %len229, align 8, !dbg !2425
  %add307 = add i64 %181, 1, !dbg !2425
  br label %noerr_block309, !dbg !2425

guard_block308:                                   ; preds = %guard_block304, %guard_block273, %guard_block253
  %182 = load ptr, ptr %current, align 8, !dbg !2426
  %183 = load i64, ptr %mark, align 8, !dbg !2426
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %182, i64 %183), !dbg !2428
  %184 = load i64, ptr %error_var226, align 8, !dbg !2429
  ret i64 %184, !dbg !2429

noerr_block309:                                   ; preds = %if.exit306
  br label %if.exit669, !dbg !2429

if.else:                                          ; preds = %checkok25
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out311, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.116, i64 83 }, ptr %x312, align 8
  call void @llvm.dbg.declare(metadata ptr %len313, metadata !2430, metadata !DIExpression()), !dbg !2432
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out315, ptr align 8 %out311, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %x316, ptr align 8 %x312, i32 16, i1 false)
  %ptradd318 = getelementptr inbounds i8, ptr %out315, i64 8, !dbg !2435
  %185 = load i64, ptr %ptradd318, align 8, !dbg !2435
  %186 = inttoptr i64 %185 to ptr, !dbg !2435
  %type321 = load ptr, ptr %.cachedtype320, align 8, !dbg !2320
  %187 = icmp eq ptr %186, %type321, !dbg !2320
  br i1 %187, label %cache_hit324, label %cache_miss322, !dbg !2320

cache_miss322:                                    ; preds = %if.else
  %ptradd323 = getelementptr inbounds i8, ptr %186, i64 16, !dbg !2320
  %188 = load ptr, ptr %ptradd323, align 8, !dbg !2320
  %189 = call ptr @.dyn_search(ptr %188, ptr @"$sel.write"), !dbg !2320
  store ptr %189, ptr %.inlinecache319, align 8, !dbg !2320
  store ptr %186, ptr %.cachedtype320, align 8, !dbg !2320
  br label %190, !dbg !2320

cache_hit324:                                     ; preds = %if.else
  %cache_hit_fn325 = load ptr, ptr %.inlinecache319, align 8, !dbg !2320
  br label %190, !dbg !2320

190:                                              ; preds = %cache_hit324, %cache_miss322
  %fn_phi326 = phi ptr [ %cache_hit_fn325, %cache_hit324 ], [ %189, %cache_miss322 ], !dbg !2320
  %191 = icmp eq ptr %fn_phi326, null, !dbg !2320
  br i1 %191, label %missing_function327, label %match331, !dbg !2320

missing_function327:                              ; preds = %190
  store %"char[]" { ptr @.panic_msg.109, i64 42 }, ptr %indirectarg328, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg329, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg330, align 8
  %192 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %192(ptr align 8 %indirectarg328, ptr align 8 %indirectarg329, ptr align 8 %indirectarg330, i32 118), !dbg !2438
  unreachable, !dbg !2438

match331:                                         ; preds = %190
  %193 = load ptr, ptr %out315, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg333, ptr align 8 %x316, i32 16, i1 false)
  %194 = call i64 %fn_phi326(ptr %retparam332, ptr %193, ptr align 8 %indirectarg333), !dbg !2438
  %not_err334 = icmp eq i64 %194, 0, !dbg !2438
  %195 = call i1 @llvm.expect.i1(i1 %not_err334, i1 true), !dbg !2438
  br i1 %195, label %after_check336, label %assign_optional335, !dbg !2438

assign_optional335:                               ; preds = %match331
  store i64 %194, ptr %error_var314, align 8, !dbg !2438
  br label %guard_block337, !dbg !2438

after_check336:                                   ; preds = %match331
  br label %noerr_block338, !dbg !2438

guard_block337:                                   ; preds = %assign_optional335
  %196 = load i64, ptr %error_var314, align 8, !dbg !2438
  store i64 %196, ptr %error_var310, align 8, !dbg !2438
  br label %guard_block392, !dbg !2438

noerr_block338:                                   ; preds = %after_check336
  %197 = load i64, ptr %retparam332, align 8, !dbg !2438
  store i64 %197, ptr %len313, align 8, !dbg !2438
  %ptradd340 = getelementptr inbounds i8, ptr %out311, i64 8, !dbg !2439
  %198 = load i64, ptr %ptradd340, align 8, !dbg !2439
  %199 = inttoptr i64 %198 to ptr, !dbg !2439
  %type343 = load ptr, ptr %.cachedtype342, align 8, !dbg !2320
  %200 = icmp eq ptr %199, %type343, !dbg !2320
  br i1 %200, label %cache_hit346, label %cache_miss344, !dbg !2320

cache_miss344:                                    ; preds = %noerr_block338
  %ptradd345 = getelementptr inbounds i8, ptr %199, i64 16, !dbg !2320
  %201 = load ptr, ptr %ptradd345, align 8, !dbg !2320
  %202 = call ptr @.dyn_search(ptr %201, ptr @"$sel.write_byte"), !dbg !2320
  store ptr %202, ptr %.inlinecache341, align 8, !dbg !2320
  store ptr %199, ptr %.cachedtype342, align 8, !dbg !2320
  br label %203, !dbg !2320

cache_hit346:                                     ; preds = %noerr_block338
  %cache_hit_fn347 = load ptr, ptr %.inlinecache341, align 8, !dbg !2320
  br label %203, !dbg !2320

203:                                              ; preds = %cache_hit346, %cache_miss344
  %fn_phi348 = phi ptr [ %cache_hit_fn347, %cache_hit346 ], [ %202, %cache_miss344 ], !dbg !2320
  %204 = icmp eq ptr %fn_phi348, null, !dbg !2320
  br i1 %204, label %missing_function349, label %match353, !dbg !2320

missing_function349:                              ; preds = %203
  store %"char[]" { ptr @.panic_msg.111, i64 47 }, ptr %indirectarg350, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg351, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg352, align 8
  %205 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %205(ptr align 8 %indirectarg350, ptr align 8 %indirectarg351, ptr align 8 %indirectarg352, i32 169), !dbg !2440
  unreachable, !dbg !2440

match353:                                         ; preds = %203
  %206 = load ptr, ptr %out311, align 8, !dbg !2440
  %207 = call i64 %fn_phi348(ptr %206, i8 10), !dbg !2440
  %not_err354 = icmp eq i64 %207, 0, !dbg !2440
  %208 = call i1 @llvm.expect.i1(i1 %not_err354, i1 true), !dbg !2440
  br i1 %208, label %after_check356, label %assign_optional355, !dbg !2440

assign_optional355:                               ; preds = %match353
  store i64 %207, ptr %error_var339, align 8, !dbg !2440
  br label %guard_block357, !dbg !2440

after_check356:                                   ; preds = %match353
  br label %noerr_block358, !dbg !2440

guard_block357:                                   ; preds = %assign_optional355
  %209 = load i64, ptr %error_var339, align 8, !dbg !2440
  store i64 %209, ptr %error_var310, align 8, !dbg !2440
  br label %guard_block392, !dbg !2440

noerr_block358:                                   ; preds = %after_check356
  %ptradd359 = getelementptr inbounds i8, ptr %out311, i64 8, !dbg !2441
  %210 = load i64, ptr %ptradd359, align 8, !dbg !2441
  %211 = inttoptr i64 %210 to ptr, !dbg !2441
  %type362 = load ptr, ptr %.cachedtype361, align 8, !dbg !2320
  %212 = icmp eq ptr %211, %type362, !dbg !2320
  br i1 %212, label %cache_hit365, label %cache_miss363, !dbg !2320

cache_miss363:                                    ; preds = %noerr_block358
  %ptradd364 = getelementptr inbounds i8, ptr %211, i64 16, !dbg !2320
  %213 = load ptr, ptr %ptradd364, align 8, !dbg !2320
  %214 = call ptr @.dyn_search(ptr %213, ptr @"$sel.flush"), !dbg !2320
  store ptr %214, ptr %.inlinecache360, align 8, !dbg !2320
  store ptr %211, ptr %.cachedtype361, align 8, !dbg !2320
  br label %215, !dbg !2320

cache_hit365:                                     ; preds = %noerr_block358
  %cache_hit_fn366 = load ptr, ptr %.inlinecache360, align 8, !dbg !2320
  br label %215, !dbg !2320

215:                                              ; preds = %cache_hit365, %cache_miss363
  %fn_phi367 = phi ptr [ %cache_hit_fn366, %cache_hit365 ], [ %214, %cache_miss363 ], !dbg !2320
  %ptrbool368 = icmp ne ptr %fn_phi367, null, !dbg !2320
  br i1 %ptrbool368, label %if.then369, label %if.exit390, !dbg !2320

if.then369:                                       ; preds = %215
  %ptradd371 = getelementptr inbounds i8, ptr %out311, i64 8, !dbg !2442
  %216 = load i64, ptr %ptradd371, align 8, !dbg !2442
  %217 = inttoptr i64 %216 to ptr, !dbg !2442
  %type374 = load ptr, ptr %.cachedtype373, align 8, !dbg !2320
  %218 = icmp eq ptr %217, %type374, !dbg !2320
  br i1 %218, label %cache_hit377, label %cache_miss375, !dbg !2320

cache_miss375:                                    ; preds = %if.then369
  %ptradd376 = getelementptr inbounds i8, ptr %217, i64 16, !dbg !2320
  %219 = load ptr, ptr %ptradd376, align 8, !dbg !2320
  %220 = call ptr @.dyn_search(ptr %219, ptr @"$sel.flush"), !dbg !2320
  store ptr %220, ptr %.inlinecache372, align 8, !dbg !2320
  store ptr %217, ptr %.cachedtype373, align 8, !dbg !2320
  br label %221, !dbg !2320

cache_hit377:                                     ; preds = %if.then369
  %cache_hit_fn378 = load ptr, ptr %.inlinecache372, align 8, !dbg !2320
  br label %221, !dbg !2320

221:                                              ; preds = %cache_hit377, %cache_miss375
  %fn_phi379 = phi ptr [ %cache_hit_fn378, %cache_hit377 ], [ %220, %cache_miss375 ], !dbg !2320
  %222 = icmp eq ptr %fn_phi379, null, !dbg !2320
  br i1 %222, label %missing_function380, label %match384, !dbg !2320

missing_function380:                              ; preds = %221
  store %"char[]" { ptr @.panic_msg.112, i64 42 }, ptr %indirectarg381, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg382, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg383, align 8
  %223 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %223(ptr align 8 %indirectarg381, ptr align 8 %indirectarg382, ptr align 8 %indirectarg383, i32 172), !dbg !2442
  unreachable, !dbg !2442

match384:                                         ; preds = %221
  %224 = load ptr, ptr %out311, align 8, !dbg !2442
  %225 = call i64 %fn_phi379(ptr %224), !dbg !2442
  %not_err385 = icmp eq i64 %225, 0, !dbg !2442
  %226 = call i1 @llvm.expect.i1(i1 %not_err385, i1 true), !dbg !2442
  br i1 %226, label %after_check387, label %assign_optional386, !dbg !2442

assign_optional386:                               ; preds = %match384
  store i64 %225, ptr %error_var370, align 8, !dbg !2442
  br label %guard_block388, !dbg !2442

after_check387:                                   ; preds = %match384
  br label %noerr_block389, !dbg !2442

guard_block388:                                   ; preds = %assign_optional386
  %227 = load i64, ptr %error_var370, align 8, !dbg !2442
  store i64 %227, ptr %error_var310, align 8, !dbg !2442
  br label %guard_block392, !dbg !2442

noerr_block389:                                   ; preds = %after_check387
  br label %if.exit390, !dbg !2442

if.exit390:                                       ; preds = %noerr_block389, %215
  %228 = load i64, ptr %len313, align 8, !dbg !2443
  %add391 = add i64 %228, 1, !dbg !2443
  br label %noerr_block393, !dbg !2443

guard_block392:                                   ; preds = %guard_block388, %guard_block357, %guard_block337
  %229 = load ptr, ptr %current, align 8, !dbg !2444
  %230 = load i64, ptr %mark, align 8, !dbg !2444
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %229, i64 %230), !dbg !2446
  %231 = load i64, ptr %error_var310, align 8, !dbg !2447
  ret i64 %231, !dbg !2447

noerr_block393:                                   ; preds = %if.exit390
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out395, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.117, i64 64 }, ptr %x396, align 8
  call void @llvm.dbg.declare(metadata ptr %len397, metadata !2448, metadata !DIExpression()), !dbg !2450
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out399, ptr align 8 %out395, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %x400, ptr align 8 %x396, i32 16, i1 false)
  %ptradd402 = getelementptr inbounds i8, ptr %out399, i64 8, !dbg !2452
  %232 = load i64, ptr %ptradd402, align 8, !dbg !2452
  %233 = inttoptr i64 %232 to ptr, !dbg !2452
  %type405 = load ptr, ptr %.cachedtype404, align 8, !dbg !2320
  %234 = icmp eq ptr %233, %type405, !dbg !2320
  br i1 %234, label %cache_hit408, label %cache_miss406, !dbg !2320

cache_miss406:                                    ; preds = %noerr_block393
  %ptradd407 = getelementptr inbounds i8, ptr %233, i64 16, !dbg !2320
  %235 = load ptr, ptr %ptradd407, align 8, !dbg !2320
  %236 = call ptr @.dyn_search(ptr %235, ptr @"$sel.write"), !dbg !2320
  store ptr %236, ptr %.inlinecache403, align 8, !dbg !2320
  store ptr %233, ptr %.cachedtype404, align 8, !dbg !2320
  br label %237, !dbg !2320

cache_hit408:                                     ; preds = %noerr_block393
  %cache_hit_fn409 = load ptr, ptr %.inlinecache403, align 8, !dbg !2320
  br label %237, !dbg !2320

237:                                              ; preds = %cache_hit408, %cache_miss406
  %fn_phi410 = phi ptr [ %cache_hit_fn409, %cache_hit408 ], [ %236, %cache_miss406 ], !dbg !2320
  %238 = icmp eq ptr %fn_phi410, null, !dbg !2320
  br i1 %238, label %missing_function411, label %match415, !dbg !2320

missing_function411:                              ; preds = %237
  store %"char[]" { ptr @.panic_msg.109, i64 42 }, ptr %indirectarg412, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg413, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg414, align 8
  %239 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %239(ptr align 8 %indirectarg412, ptr align 8 %indirectarg413, ptr align 8 %indirectarg414, i32 118), !dbg !2455
  unreachable, !dbg !2455

match415:                                         ; preds = %237
  %240 = load ptr, ptr %out399, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg417, ptr align 8 %x400, i32 16, i1 false)
  %241 = call i64 %fn_phi410(ptr %retparam416, ptr %240, ptr align 8 %indirectarg417), !dbg !2455
  %not_err418 = icmp eq i64 %241, 0, !dbg !2455
  %242 = call i1 @llvm.expect.i1(i1 %not_err418, i1 true), !dbg !2455
  br i1 %242, label %after_check420, label %assign_optional419, !dbg !2455

assign_optional419:                               ; preds = %match415
  store i64 %241, ptr %error_var398, align 8, !dbg !2455
  br label %guard_block421, !dbg !2455

after_check420:                                   ; preds = %match415
  br label %noerr_block422, !dbg !2455

guard_block421:                                   ; preds = %assign_optional419
  %243 = load i64, ptr %error_var398, align 8, !dbg !2455
  store i64 %243, ptr %error_var394, align 8, !dbg !2455
  br label %guard_block476, !dbg !2455

noerr_block422:                                   ; preds = %after_check420
  %244 = load i64, ptr %retparam416, align 8, !dbg !2455
  store i64 %244, ptr %len397, align 8, !dbg !2455
  %ptradd424 = getelementptr inbounds i8, ptr %out395, i64 8, !dbg !2456
  %245 = load i64, ptr %ptradd424, align 8, !dbg !2456
  %246 = inttoptr i64 %245 to ptr, !dbg !2456
  %type427 = load ptr, ptr %.cachedtype426, align 8, !dbg !2320
  %247 = icmp eq ptr %246, %type427, !dbg !2320
  br i1 %247, label %cache_hit430, label %cache_miss428, !dbg !2320

cache_miss428:                                    ; preds = %noerr_block422
  %ptradd429 = getelementptr inbounds i8, ptr %246, i64 16, !dbg !2320
  %248 = load ptr, ptr %ptradd429, align 8, !dbg !2320
  %249 = call ptr @.dyn_search(ptr %248, ptr @"$sel.write_byte"), !dbg !2320
  store ptr %249, ptr %.inlinecache425, align 8, !dbg !2320
  store ptr %246, ptr %.cachedtype426, align 8, !dbg !2320
  br label %250, !dbg !2320

cache_hit430:                                     ; preds = %noerr_block422
  %cache_hit_fn431 = load ptr, ptr %.inlinecache425, align 8, !dbg !2320
  br label %250, !dbg !2320

250:                                              ; preds = %cache_hit430, %cache_miss428
  %fn_phi432 = phi ptr [ %cache_hit_fn431, %cache_hit430 ], [ %249, %cache_miss428 ], !dbg !2320
  %251 = icmp eq ptr %fn_phi432, null, !dbg !2320
  br i1 %251, label %missing_function433, label %match437, !dbg !2320

missing_function433:                              ; preds = %250
  store %"char[]" { ptr @.panic_msg.111, i64 47 }, ptr %indirectarg434, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg435, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg436, align 8
  %252 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %252(ptr align 8 %indirectarg434, ptr align 8 %indirectarg435, ptr align 8 %indirectarg436, i32 169), !dbg !2457
  unreachable, !dbg !2457

match437:                                         ; preds = %250
  %253 = load ptr, ptr %out395, align 8, !dbg !2457
  %254 = call i64 %fn_phi432(ptr %253, i8 10), !dbg !2457
  %not_err438 = icmp eq i64 %254, 0, !dbg !2457
  %255 = call i1 @llvm.expect.i1(i1 %not_err438, i1 true), !dbg !2457
  br i1 %255, label %after_check440, label %assign_optional439, !dbg !2457

assign_optional439:                               ; preds = %match437
  store i64 %254, ptr %error_var423, align 8, !dbg !2457
  br label %guard_block441, !dbg !2457

after_check440:                                   ; preds = %match437
  br label %noerr_block442, !dbg !2457

guard_block441:                                   ; preds = %assign_optional439
  %256 = load i64, ptr %error_var423, align 8, !dbg !2457
  store i64 %256, ptr %error_var394, align 8, !dbg !2457
  br label %guard_block476, !dbg !2457

noerr_block442:                                   ; preds = %after_check440
  %ptradd443 = getelementptr inbounds i8, ptr %out395, i64 8, !dbg !2458
  %257 = load i64, ptr %ptradd443, align 8, !dbg !2458
  %258 = inttoptr i64 %257 to ptr, !dbg !2458
  %type446 = load ptr, ptr %.cachedtype445, align 8, !dbg !2320
  %259 = icmp eq ptr %258, %type446, !dbg !2320
  br i1 %259, label %cache_hit449, label %cache_miss447, !dbg !2320

cache_miss447:                                    ; preds = %noerr_block442
  %ptradd448 = getelementptr inbounds i8, ptr %258, i64 16, !dbg !2320
  %260 = load ptr, ptr %ptradd448, align 8, !dbg !2320
  %261 = call ptr @.dyn_search(ptr %260, ptr @"$sel.flush"), !dbg !2320
  store ptr %261, ptr %.inlinecache444, align 8, !dbg !2320
  store ptr %258, ptr %.cachedtype445, align 8, !dbg !2320
  br label %262, !dbg !2320

cache_hit449:                                     ; preds = %noerr_block442
  %cache_hit_fn450 = load ptr, ptr %.inlinecache444, align 8, !dbg !2320
  br label %262, !dbg !2320

262:                                              ; preds = %cache_hit449, %cache_miss447
  %fn_phi451 = phi ptr [ %cache_hit_fn450, %cache_hit449 ], [ %261, %cache_miss447 ], !dbg !2320
  %ptrbool452 = icmp ne ptr %fn_phi451, null, !dbg !2320
  br i1 %ptrbool452, label %if.then453, label %if.exit474, !dbg !2320

if.then453:                                       ; preds = %262
  %ptradd455 = getelementptr inbounds i8, ptr %out395, i64 8, !dbg !2459
  %263 = load i64, ptr %ptradd455, align 8, !dbg !2459
  %264 = inttoptr i64 %263 to ptr, !dbg !2459
  %type458 = load ptr, ptr %.cachedtype457, align 8, !dbg !2320
  %265 = icmp eq ptr %264, %type458, !dbg !2320
  br i1 %265, label %cache_hit461, label %cache_miss459, !dbg !2320

cache_miss459:                                    ; preds = %if.then453
  %ptradd460 = getelementptr inbounds i8, ptr %264, i64 16, !dbg !2320
  %266 = load ptr, ptr %ptradd460, align 8, !dbg !2320
  %267 = call ptr @.dyn_search(ptr %266, ptr @"$sel.flush"), !dbg !2320
  store ptr %267, ptr %.inlinecache456, align 8, !dbg !2320
  store ptr %264, ptr %.cachedtype457, align 8, !dbg !2320
  br label %268, !dbg !2320

cache_hit461:                                     ; preds = %if.then453
  %cache_hit_fn462 = load ptr, ptr %.inlinecache456, align 8, !dbg !2320
  br label %268, !dbg !2320

268:                                              ; preds = %cache_hit461, %cache_miss459
  %fn_phi463 = phi ptr [ %cache_hit_fn462, %cache_hit461 ], [ %267, %cache_miss459 ], !dbg !2320
  %269 = icmp eq ptr %fn_phi463, null, !dbg !2320
  br i1 %269, label %missing_function464, label %match468, !dbg !2320

missing_function464:                              ; preds = %268
  store %"char[]" { ptr @.panic_msg.112, i64 42 }, ptr %indirectarg465, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg466, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg467, align 8
  %270 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %270(ptr align 8 %indirectarg465, ptr align 8 %indirectarg466, ptr align 8 %indirectarg467, i32 172), !dbg !2459
  unreachable, !dbg !2459

match468:                                         ; preds = %268
  %271 = load ptr, ptr %out395, align 8, !dbg !2459
  %272 = call i64 %fn_phi463(ptr %271), !dbg !2459
  %not_err469 = icmp eq i64 %272, 0, !dbg !2459
  %273 = call i1 @llvm.expect.i1(i1 %not_err469, i1 true), !dbg !2459
  br i1 %273, label %after_check471, label %assign_optional470, !dbg !2459

assign_optional470:                               ; preds = %match468
  store i64 %272, ptr %error_var454, align 8, !dbg !2459
  br label %guard_block472, !dbg !2459

after_check471:                                   ; preds = %match468
  br label %noerr_block473, !dbg !2459

guard_block472:                                   ; preds = %assign_optional470
  %274 = load i64, ptr %error_var454, align 8, !dbg !2459
  store i64 %274, ptr %error_var394, align 8, !dbg !2459
  br label %guard_block476, !dbg !2459

noerr_block473:                                   ; preds = %after_check471
  br label %if.exit474, !dbg !2459

if.exit474:                                       ; preds = %noerr_block473, %262
  %275 = load i64, ptr %len397, align 8, !dbg !2460
  %add475 = add i64 %275, 1, !dbg !2460
  br label %noerr_block477, !dbg !2460

guard_block476:                                   ; preds = %guard_block472, %guard_block441, %guard_block421
  %276 = load ptr, ptr %current, align 8, !dbg !2461
  %277 = load i64, ptr %mark, align 8, !dbg !2461
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %276, i64 %277), !dbg !2463
  %278 = load i64, ptr %error_var394, align 8, !dbg !2464
  ret i64 %278, !dbg !2464

noerr_block477:                                   ; preds = %if.exit474
  call void @llvm.dbg.declare(metadata ptr %.anon478, metadata !2465, metadata !DIExpression()), !dbg !2467
  %ptradd479 = getelementptr inbounds i8, ptr %allocs, i64 8, !dbg !2467
  %279 = load i64, ptr %ptradd479, align 8, !dbg !2467
  store i64 %279, ptr %.anon478, align 8, !dbg !2467
  call void @llvm.dbg.declare(metadata ptr %.anon480, metadata !2465, metadata !DIExpression()), !dbg !2468
  store i64 0, ptr %.anon480, align 8, !dbg !2468
  br label %loop.cond481, !dbg !2468

loop.cond481:                                     ; preds = %noerr_block582, %noerr_block477
  %280 = load i64, ptr %.anon480, align 8, !dbg !2468
  %281 = load i64, ptr %.anon478, align 8, !dbg !2467
  %lt482 = icmp ult i64 %280, %281, !dbg !2468
  br i1 %lt482, label %loop.body483, label %loop.exit584, !dbg !2468

loop.body483:                                     ; preds = %loop.cond481
  call void @llvm.dbg.declare(metadata ptr %i484, metadata !2469, metadata !DIExpression()), !dbg !2471
  %282 = load i64, ptr %.anon480, align 8, !dbg !2471
  store i64 %282, ptr %i484, align 8, !dbg !2471
  call void @llvm.dbg.declare(metadata ptr %allocation485, metadata !2472, metadata !DIExpression()), !dbg !2473
  %ptradd486 = getelementptr inbounds i8, ptr %allocs, i64 8, !dbg !2474
  %283 = load i64, ptr %ptradd486, align 8, !dbg !2474
  %284 = load ptr, ptr %allocs, align 8, !dbg !2474
  %285 = load i64, ptr %.anon480, align 8, !dbg !2471
  %ge487 = icmp uge i64 %285, %283, !dbg !2471
  %286 = call i1 @llvm.expect.i1(i1 %ge487, i1 false), !dbg !2471
  br i1 %286, label %panic488, label %checkok498, !dbg !2471

checkok498:                                       ; preds = %loop.body483
  %ptroffset499 = getelementptr inbounds [144 x i8], ptr %284, i64 %285, !dbg !2471
  store ptr %ptroffset499, ptr %allocation485, align 8, !dbg !2471
  %287 = load i64, ptr %entries, align 8, !dbg !2475
  %add500 = add i64 %287, 1, !dbg !2475
  store i64 %add500, ptr %entries, align 8, !dbg !2475
  %288 = load i64, ptr %total, align 8, !dbg !2477
  %289 = load ptr, ptr %allocation485, align 8, !dbg !2478
  %checknull501 = icmp eq ptr %289, null, !dbg !2478
  %290 = call i1 @llvm.expect.i1(i1 %checknull501, i1 false), !dbg !2478
  br i1 %290, label %panic502, label %checkok506, !dbg !2478

checkok506:                                       ; preds = %checkok498
  %ptradd507 = getelementptr inbounds i8, ptr %289, i64 8, !dbg !2478
  %291 = load i64, ptr %ptradd507, align 8, !dbg !2478
  %add508 = add i64 %288, %291, !dbg !2477
  store i64 %add508, ptr %total, align 8, !dbg !2477
  call void @llvm.dbg.declare(metadata ptr %backtraces, metadata !2479, metadata !DIExpression()), !dbg !2498
  call void @llvm.memset.p0.i64(ptr align 8 %backtraces, i8 0, i64 40, i1 false), !dbg !2498
  call void @llvm.dbg.declare(metadata ptr %trace, metadata !2499, metadata !DIExpression()), !dbg !2500
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %trace, ptr align 8 @std.os.backtrace.BACKTRACE_UNKNOWN, i32 88, i1 false), !dbg !2501
  %292 = load ptr, ptr %allocation485, align 8, !dbg !2502
  %checknull509 = icmp eq ptr %292, null, !dbg !2502
  %293 = call i1 @llvm.expect.i1(i1 %checknull509, i1 false), !dbg !2502
  br i1 %293, label %panic510, label %checkok514, !dbg !2502

checkok514:                                       ; preds = %checkok506
  %ptradd515 = getelementptr inbounds i8, ptr %292, i64 16, !dbg !2502
  %ptradd516 = getelementptr inbounds i8, ptr %ptradd515, i64 24, !dbg !2503
  %294 = load ptr, ptr %ptradd516, align 8, !dbg !2503
  %ptrbool517 = icmp ne ptr %294, null, !dbg !2503
  br i1 %ptrbool517, label %if.then518, label %if.exit535, !dbg !2503

if.then518:                                       ; preds = %checkok514
  %295 = load ptr, ptr %allocation485, align 8, !dbg !2504
  %checknull519 = icmp eq ptr %295, null, !dbg !2504
  %296 = call i1 @llvm.expect.i1(i1 %checknull519, i1 false), !dbg !2504
  br i1 %296, label %panic520, label %checkok524, !dbg !2504

checkok524:                                       ; preds = %if.then518
  %ptradd525 = getelementptr inbounds i8, ptr %295, i64 16, !dbg !2504
  %ptradd526 = getelementptr inbounds i8, ptr %ptradd525, i64 24, !dbg !2504
  %297 = insertvalue %"void*[]" undef, ptr %ptradd526, 0, !dbg !2504
  %298 = insertvalue %"void*[]" %297, i64 1, 1, !dbg !2504
  %299 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2506
  %not527 = icmp eq ptr %299, null, !dbg !2506
  br i1 %not527, label %if.then528, label %if.exit529, !dbg !2506

if.then528:                                       ; preds = %checkok524
  call void @std.core.mem.allocator.init_default_temp_allocators(), !dbg !2509
  br label %if.exit529, !dbg !2509

if.exit529:                                       ; preds = %if.then528, %checkok524
  %300 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2511
  %301 = insertvalue %any undef, ptr %300, 0, !dbg !2511
  %302 = insertvalue %any %301, i64 ptrtoint (ptr @"$ct.std.core.mem.allocator.TempAllocator" to i64), 1, !dbg !2511
  store %"void*[]" %298, ptr %indirectarg531, align 8
  store %any %302, ptr %indirectarg532, align 8
  %303 = call i64 @std.os.win32.symbolize_backtrace(ptr %retparam530, ptr align 8 %indirectarg531, ptr align 8 %indirectarg532), !dbg !2512
  %not_err533 = icmp eq i64 %303, 0, !dbg !2512
  %304 = call i1 @llvm.expect.i1(i1 %not_err533, i1 true), !dbg !2512
  br i1 %304, label %after_check534, label %else_block, !dbg !2512

after_check534:                                   ; preds = %if.exit529
  call void @"std_collections_list$std.os.backtrace.Backtrace$.List.get"(ptr sret(%Backtrace) align 8 %sretparam, ptr %retparam530, i64 0) #5, !dbg !2512
  br label %phi_block, !dbg !2512

else_block:                                       ; preds = %if.exit529
  br label %phi_block, !dbg !2513

phi_block:                                        ; preds = %else_block, %after_check534
  %val = phi ptr [ %sretparam, %after_check534 ], [ @std.os.backtrace.BACKTRACE_UNKNOWN, %else_block ], !dbg !2513
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %trace, ptr align 8 %val, i32 88, i1 false), !dbg !2513
  br label %if.exit535, !dbg !2513

if.exit535:                                       ; preds = %phi_block, %checkok514
  %ptradd536 = getelementptr inbounds i8, ptr %trace, i64 8, !dbg !2514
  %ptradd537 = getelementptr inbounds i8, ptr %ptradd536, i64 8, !dbg !2514
  %305 = load i64, ptr %ptradd537, align 8, !dbg !2514
  %intbool538 = icmp ne i64 %305, 0, !dbg !2514
  br i1 %intbool538, label %if.then539, label %if.exit540, !dbg !2514

if.then539:                                       ; preds = %if.exit535
  store i8 1, ptr %leaks, align 1, !dbg !2515
  br label %if.exit540, !dbg !2515

if.exit540:                                       ; preds = %if.then539, %if.exit535
  %306 = load ptr, ptr %allocation485, align 8, !dbg !2516
  %checknull543 = icmp eq ptr %306, null, !dbg !2516
  %307 = call i1 @llvm.expect.i1(i1 %checknull543, i1 false), !dbg !2516
  br i1 %307, label %panic544, label %checkok548, !dbg !2516

checkok548:                                       ; preds = %if.exit540
  %ptradd549 = getelementptr inbounds i8, ptr %306, i64 8, !dbg !2516
  %308 = insertvalue %any undef, ptr %ptradd549, 0, !dbg !2516
  %309 = insertvalue %any %308, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !2516
  store %any %309, ptr %varargslots542, align 16, !dbg !2516
  %310 = load ptr, ptr %allocation485, align 8, !dbg !2517
  %checknull550 = icmp eq ptr %310, null, !dbg !2517
  %311 = call i1 @llvm.expect.i1(i1 %checknull550, i1 false), !dbg !2517
  br i1 %311, label %panic551, label %checkok555, !dbg !2517

checkok555:                                       ; preds = %checkok548
  %312 = insertvalue %any undef, ptr %310, 0, !dbg !2517
  %313 = insertvalue %any %312, i64 ptrtoint (ptr @"$ct.p$void" to i64), 1, !dbg !2517
  %ptradd556 = getelementptr inbounds i8, ptr %varargslots542, i64 16, !dbg !2517
  store %any %313, ptr %ptradd556, align 16, !dbg !2517
  %ptradd557 = getelementptr inbounds i8, ptr %trace, i64 8, !dbg !2518
  %ptradd558 = getelementptr inbounds i8, ptr %ptradd557, i64 8, !dbg !2518
  %314 = load i64, ptr %ptradd558, align 8, !dbg !2518
  %intbool559 = icmp ne i64 %314, 0, !dbg !2518
  br i1 %intbool559, label %cond.lhs, label %cond.rhs, !dbg !2518

cond.lhs:                                         ; preds = %checkok555
  %ptradd560 = getelementptr inbounds i8, ptr %trace, i64 8, !dbg !2519
  %315 = load %"char[]", ptr %ptradd560, align 8, !dbg !2519
  br label %cond.phi, !dbg !2519

cond.rhs:                                         ; preds = %checkok555
  br label %cond.phi, !dbg !2520

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val561 = phi %"char[]" [ %315, %cond.lhs ], [ { ptr @.str.119, i64 3 }, %cond.rhs ], !dbg !2520
  store %"char[]" %val561, ptr %taddr562, align 8
  %316 = insertvalue %any undef, ptr %taddr562, 0
  %317 = insertvalue %any %316, i64 ptrtoint (ptr @"$ct.String" to i64), 1
  %ptradd563 = getelementptr inbounds i8, ptr %varargslots542, i64 32
  store %any %317, ptr %ptradd563, align 16
  %ptradd564 = getelementptr inbounds i8, ptr %trace, i64 56, !dbg !2521
  %318 = load i32, ptr %ptradd564, align 8, !dbg !2521
  %intbool565 = icmp ne i32 %318, 0, !dbg !2521
  br i1 %intbool565, label %cond.lhs566, label %cond.rhs568, !dbg !2521

cond.lhs566:                                      ; preds = %cond.phi
  %ptradd567 = getelementptr inbounds i8, ptr %trace, i64 56, !dbg !2522
  %319 = load i32, ptr %ptradd567, align 8, !dbg !2522
  br label %cond.phi569, !dbg !2522

cond.rhs568:                                      ; preds = %cond.phi
  br label %cond.phi569, !dbg !2523

cond.phi569:                                      ; preds = %cond.rhs568, %cond.lhs566
  %val570 = phi i32 [ %319, %cond.lhs566 ], [ 0, %cond.rhs568 ], !dbg !2523
  store i32 %val570, ptr %taddr571, align 4
  %320 = insertvalue %any undef, ptr %taddr571, 0
  %321 = insertvalue %any %320, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %ptradd572 = getelementptr inbounds i8, ptr %varargslots542, i64 48
  store %any %321, ptr %ptradd572, align 16
  %322 = insertvalue %"any[]" undef, ptr %varargslots542, 0
  %"$$temp573" = insertvalue %"any[]" %322, i64 4, 1
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg575, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.118, i64 17 }, ptr %indirectarg576, align 8
  store %"any[]" %"$$temp573", ptr %indirectarg577, align 8
  %323 = call i64 @std.io.fprintfn(ptr %retparam574, ptr align 8 %indirectarg575, ptr align 8 %indirectarg576, ptr align 8 %indirectarg577), !dbg !2524
  %not_err578 = icmp eq i64 %323, 0, !dbg !2524
  %324 = call i1 @llvm.expect.i1(i1 %not_err578, i1 true), !dbg !2524
  br i1 %324, label %after_check580, label %assign_optional579, !dbg !2524

assign_optional579:                               ; preds = %cond.phi569
  store i64 %323, ptr %error_var541, align 8, !dbg !2524
  br label %guard_block581, !dbg !2524

after_check580:                                   ; preds = %cond.phi569
  br label %noerr_block582, !dbg !2524

guard_block581:                                   ; preds = %assign_optional579
  %325 = load ptr, ptr %current, align 8, !dbg !2525
  %326 = load i64, ptr %mark, align 8, !dbg !2525
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %325, i64 %326), !dbg !2527
  %327 = load i64, ptr %error_var541, align 8, !dbg !2528
  ret i64 %327, !dbg !2528

noerr_block582:                                   ; preds = %after_check580
  %328 = load i64, ptr %.anon480, align 8, !dbg !2468
  %addnuw583 = add nuw i64 %328, 1, !dbg !2468
  store i64 %addnuw583, ptr %.anon480, align 8, !dbg !2468
  br label %loop.cond481, !dbg !2468

loop.exit584:                                     ; preds = %loop.cond481
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out586, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.120, i64 83 }, ptr %x587, align 8
  call void @llvm.dbg.declare(metadata ptr %len588, metadata !2529, metadata !DIExpression()), !dbg !2531
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out590, ptr align 8 %out586, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %x591, ptr align 8 %x587, i32 16, i1 false)
  %ptradd593 = getelementptr inbounds i8, ptr %out590, i64 8, !dbg !2533
  %329 = load i64, ptr %ptradd593, align 8, !dbg !2533
  %330 = inttoptr i64 %329 to ptr, !dbg !2533
  %type596 = load ptr, ptr %.cachedtype595, align 8, !dbg !2320
  %331 = icmp eq ptr %330, %type596, !dbg !2320
  br i1 %331, label %cache_hit599, label %cache_miss597, !dbg !2320

cache_miss597:                                    ; preds = %loop.exit584
  %ptradd598 = getelementptr inbounds i8, ptr %330, i64 16, !dbg !2320
  %332 = load ptr, ptr %ptradd598, align 8, !dbg !2320
  %333 = call ptr @.dyn_search(ptr %332, ptr @"$sel.write"), !dbg !2320
  store ptr %333, ptr %.inlinecache594, align 8, !dbg !2320
  store ptr %330, ptr %.cachedtype595, align 8, !dbg !2320
  br label %334, !dbg !2320

cache_hit599:                                     ; preds = %loop.exit584
  %cache_hit_fn600 = load ptr, ptr %.inlinecache594, align 8, !dbg !2320
  br label %334, !dbg !2320

334:                                              ; preds = %cache_hit599, %cache_miss597
  %fn_phi601 = phi ptr [ %cache_hit_fn600, %cache_hit599 ], [ %333, %cache_miss597 ], !dbg !2320
  %335 = icmp eq ptr %fn_phi601, null, !dbg !2320
  br i1 %335, label %missing_function602, label %match606, !dbg !2320

missing_function602:                              ; preds = %334
  store %"char[]" { ptr @.panic_msg.109, i64 42 }, ptr %indirectarg603, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg604, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg605, align 8
  %336 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %336(ptr align 8 %indirectarg603, ptr align 8 %indirectarg604, ptr align 8 %indirectarg605, i32 118), !dbg !2536
  unreachable, !dbg !2536

match606:                                         ; preds = %334
  %337 = load ptr, ptr %out590, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg608, ptr align 8 %x591, i32 16, i1 false)
  %338 = call i64 %fn_phi601(ptr %retparam607, ptr %337, ptr align 8 %indirectarg608), !dbg !2536
  %not_err609 = icmp eq i64 %338, 0, !dbg !2536
  %339 = call i1 @llvm.expect.i1(i1 %not_err609, i1 true), !dbg !2536
  br i1 %339, label %after_check611, label %assign_optional610, !dbg !2536

assign_optional610:                               ; preds = %match606
  store i64 %338, ptr %error_var589, align 8, !dbg !2536
  br label %guard_block612, !dbg !2536

after_check611:                                   ; preds = %match606
  br label %noerr_block613, !dbg !2536

guard_block612:                                   ; preds = %assign_optional610
  %340 = load i64, ptr %error_var589, align 8, !dbg !2536
  store i64 %340, ptr %error_var585, align 8, !dbg !2536
  br label %guard_block667, !dbg !2536

noerr_block613:                                   ; preds = %after_check611
  %341 = load i64, ptr %retparam607, align 8, !dbg !2536
  store i64 %341, ptr %len588, align 8, !dbg !2536
  %ptradd615 = getelementptr inbounds i8, ptr %out586, i64 8, !dbg !2537
  %342 = load i64, ptr %ptradd615, align 8, !dbg !2537
  %343 = inttoptr i64 %342 to ptr, !dbg !2537
  %type618 = load ptr, ptr %.cachedtype617, align 8, !dbg !2320
  %344 = icmp eq ptr %343, %type618, !dbg !2320
  br i1 %344, label %cache_hit621, label %cache_miss619, !dbg !2320

cache_miss619:                                    ; preds = %noerr_block613
  %ptradd620 = getelementptr inbounds i8, ptr %343, i64 16, !dbg !2320
  %345 = load ptr, ptr %ptradd620, align 8, !dbg !2320
  %346 = call ptr @.dyn_search(ptr %345, ptr @"$sel.write_byte"), !dbg !2320
  store ptr %346, ptr %.inlinecache616, align 8, !dbg !2320
  store ptr %343, ptr %.cachedtype617, align 8, !dbg !2320
  br label %347, !dbg !2320

cache_hit621:                                     ; preds = %noerr_block613
  %cache_hit_fn622 = load ptr, ptr %.inlinecache616, align 8, !dbg !2320
  br label %347, !dbg !2320

347:                                              ; preds = %cache_hit621, %cache_miss619
  %fn_phi623 = phi ptr [ %cache_hit_fn622, %cache_hit621 ], [ %346, %cache_miss619 ], !dbg !2320
  %348 = icmp eq ptr %fn_phi623, null, !dbg !2320
  br i1 %348, label %missing_function624, label %match628, !dbg !2320

missing_function624:                              ; preds = %347
  store %"char[]" { ptr @.panic_msg.111, i64 47 }, ptr %indirectarg625, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg626, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg627, align 8
  %349 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %349(ptr align 8 %indirectarg625, ptr align 8 %indirectarg626, ptr align 8 %indirectarg627, i32 169), !dbg !2538
  unreachable, !dbg !2538

match628:                                         ; preds = %347
  %350 = load ptr, ptr %out586, align 8, !dbg !2538
  %351 = call i64 %fn_phi623(ptr %350, i8 10), !dbg !2538
  %not_err629 = icmp eq i64 %351, 0, !dbg !2538
  %352 = call i1 @llvm.expect.i1(i1 %not_err629, i1 true), !dbg !2538
  br i1 %352, label %after_check631, label %assign_optional630, !dbg !2538

assign_optional630:                               ; preds = %match628
  store i64 %351, ptr %error_var614, align 8, !dbg !2538
  br label %guard_block632, !dbg !2538

after_check631:                                   ; preds = %match628
  br label %noerr_block633, !dbg !2538

guard_block632:                                   ; preds = %assign_optional630
  %353 = load i64, ptr %error_var614, align 8, !dbg !2538
  store i64 %353, ptr %error_var585, align 8, !dbg !2538
  br label %guard_block667, !dbg !2538

noerr_block633:                                   ; preds = %after_check631
  %ptradd634 = getelementptr inbounds i8, ptr %out586, i64 8, !dbg !2539
  %354 = load i64, ptr %ptradd634, align 8, !dbg !2539
  %355 = inttoptr i64 %354 to ptr, !dbg !2539
  %type637 = load ptr, ptr %.cachedtype636, align 8, !dbg !2320
  %356 = icmp eq ptr %355, %type637, !dbg !2320
  br i1 %356, label %cache_hit640, label %cache_miss638, !dbg !2320

cache_miss638:                                    ; preds = %noerr_block633
  %ptradd639 = getelementptr inbounds i8, ptr %355, i64 16, !dbg !2320
  %357 = load ptr, ptr %ptradd639, align 8, !dbg !2320
  %358 = call ptr @.dyn_search(ptr %357, ptr @"$sel.flush"), !dbg !2320
  store ptr %358, ptr %.inlinecache635, align 8, !dbg !2320
  store ptr %355, ptr %.cachedtype636, align 8, !dbg !2320
  br label %359, !dbg !2320

cache_hit640:                                     ; preds = %noerr_block633
  %cache_hit_fn641 = load ptr, ptr %.inlinecache635, align 8, !dbg !2320
  br label %359, !dbg !2320

359:                                              ; preds = %cache_hit640, %cache_miss638
  %fn_phi642 = phi ptr [ %cache_hit_fn641, %cache_hit640 ], [ %358, %cache_miss638 ], !dbg !2320
  %ptrbool643 = icmp ne ptr %fn_phi642, null, !dbg !2320
  br i1 %ptrbool643, label %if.then644, label %if.exit665, !dbg !2320

if.then644:                                       ; preds = %359
  %ptradd646 = getelementptr inbounds i8, ptr %out586, i64 8, !dbg !2540
  %360 = load i64, ptr %ptradd646, align 8, !dbg !2540
  %361 = inttoptr i64 %360 to ptr, !dbg !2540
  %type649 = load ptr, ptr %.cachedtype648, align 8, !dbg !2320
  %362 = icmp eq ptr %361, %type649, !dbg !2320
  br i1 %362, label %cache_hit652, label %cache_miss650, !dbg !2320

cache_miss650:                                    ; preds = %if.then644
  %ptradd651 = getelementptr inbounds i8, ptr %361, i64 16, !dbg !2320
  %363 = load ptr, ptr %ptradd651, align 8, !dbg !2320
  %364 = call ptr @.dyn_search(ptr %363, ptr @"$sel.flush"), !dbg !2320
  store ptr %364, ptr %.inlinecache647, align 8, !dbg !2320
  store ptr %361, ptr %.cachedtype648, align 8, !dbg !2320
  br label %365, !dbg !2320

cache_hit652:                                     ; preds = %if.then644
  %cache_hit_fn653 = load ptr, ptr %.inlinecache647, align 8, !dbg !2320
  br label %365, !dbg !2320

365:                                              ; preds = %cache_hit652, %cache_miss650
  %fn_phi654 = phi ptr [ %cache_hit_fn653, %cache_hit652 ], [ %364, %cache_miss650 ], !dbg !2320
  %366 = icmp eq ptr %fn_phi654, null, !dbg !2320
  br i1 %366, label %missing_function655, label %match659, !dbg !2320

missing_function655:                              ; preds = %365
  store %"char[]" { ptr @.panic_msg.112, i64 42 }, ptr %indirectarg656, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg657, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg658, align 8
  %367 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %367(ptr align 8 %indirectarg656, ptr align 8 %indirectarg657, ptr align 8 %indirectarg658, i32 172), !dbg !2540
  unreachable, !dbg !2540

match659:                                         ; preds = %365
  %368 = load ptr, ptr %out586, align 8, !dbg !2540
  %369 = call i64 %fn_phi654(ptr %368), !dbg !2540
  %not_err660 = icmp eq i64 %369, 0, !dbg !2540
  %370 = call i1 @llvm.expect.i1(i1 %not_err660, i1 true), !dbg !2540
  br i1 %370, label %after_check662, label %assign_optional661, !dbg !2540

assign_optional661:                               ; preds = %match659
  store i64 %369, ptr %error_var645, align 8, !dbg !2540
  br label %guard_block663, !dbg !2540

after_check662:                                   ; preds = %match659
  br label %noerr_block664, !dbg !2540

guard_block663:                                   ; preds = %assign_optional661
  %371 = load i64, ptr %error_var645, align 8, !dbg !2540
  store i64 %371, ptr %error_var585, align 8, !dbg !2540
  br label %guard_block667, !dbg !2540

noerr_block664:                                   ; preds = %after_check662
  br label %if.exit665, !dbg !2540

if.exit665:                                       ; preds = %noerr_block664, %359
  %372 = load i64, ptr %len588, align 8, !dbg !2541
  %add666 = add i64 %372, 1, !dbg !2541
  br label %noerr_block668, !dbg !2541

guard_block667:                                   ; preds = %guard_block663, %guard_block632, %guard_block612
  %373 = load ptr, ptr %current, align 8, !dbg !2542
  %374 = load i64, ptr %mark, align 8, !dbg !2542
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %373, i64 %374), !dbg !2544
  %375 = load i64, ptr %error_var585, align 8, !dbg !2545
  ret i64 %375, !dbg !2545

noerr_block668:                                   ; preds = %if.exit665
  br label %if.exit669, !dbg !2545

if.exit669:                                       ; preds = %noerr_block668, %noerr_block309
  br label %if.exit755, !dbg !2545

if.else670:                                       ; preds = %checkok13
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out672, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.121, i64 24 }, ptr %x673, align 8
  call void @llvm.dbg.declare(metadata ptr %len674, metadata !2546, metadata !DIExpression()), !dbg !2548
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out676, ptr align 8 %out672, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %x677, ptr align 8 %x673, i32 16, i1 false)
  %ptradd679 = getelementptr inbounds i8, ptr %out676, i64 8, !dbg !2551
  %376 = load i64, ptr %ptradd679, align 8, !dbg !2551
  %377 = inttoptr i64 %376 to ptr, !dbg !2551
  %type682 = load ptr, ptr %.cachedtype681, align 8, !dbg !2320
  %378 = icmp eq ptr %377, %type682, !dbg !2320
  br i1 %378, label %cache_hit685, label %cache_miss683, !dbg !2320

cache_miss683:                                    ; preds = %if.else670
  %ptradd684 = getelementptr inbounds i8, ptr %377, i64 16, !dbg !2320
  %379 = load ptr, ptr %ptradd684, align 8, !dbg !2320
  %380 = call ptr @.dyn_search(ptr %379, ptr @"$sel.write"), !dbg !2320
  store ptr %380, ptr %.inlinecache680, align 8, !dbg !2320
  store ptr %377, ptr %.cachedtype681, align 8, !dbg !2320
  br label %381, !dbg !2320

cache_hit685:                                     ; preds = %if.else670
  %cache_hit_fn686 = load ptr, ptr %.inlinecache680, align 8, !dbg !2320
  br label %381, !dbg !2320

381:                                              ; preds = %cache_hit685, %cache_miss683
  %fn_phi687 = phi ptr [ %cache_hit_fn686, %cache_hit685 ], [ %380, %cache_miss683 ], !dbg !2320
  %382 = icmp eq ptr %fn_phi687, null, !dbg !2320
  br i1 %382, label %missing_function688, label %match692, !dbg !2320

missing_function688:                              ; preds = %381
  store %"char[]" { ptr @.panic_msg.109, i64 42 }, ptr %indirectarg689, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg690, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg691, align 8
  %383 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %383(ptr align 8 %indirectarg689, ptr align 8 %indirectarg690, ptr align 8 %indirectarg691, i32 118), !dbg !2554
  unreachable, !dbg !2554

match692:                                         ; preds = %381
  %384 = load ptr, ptr %out676, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg694, ptr align 8 %x677, i32 16, i1 false)
  %385 = call i64 %fn_phi687(ptr %retparam693, ptr %384, ptr align 8 %indirectarg694), !dbg !2554
  %not_err695 = icmp eq i64 %385, 0, !dbg !2554
  %386 = call i1 @llvm.expect.i1(i1 %not_err695, i1 true), !dbg !2554
  br i1 %386, label %after_check697, label %assign_optional696, !dbg !2554

assign_optional696:                               ; preds = %match692
  store i64 %385, ptr %error_var675, align 8, !dbg !2554
  br label %guard_block698, !dbg !2554

after_check697:                                   ; preds = %match692
  br label %noerr_block699, !dbg !2554

guard_block698:                                   ; preds = %assign_optional696
  %387 = load i64, ptr %error_var675, align 8, !dbg !2554
  store i64 %387, ptr %error_var671, align 8, !dbg !2554
  br label %guard_block753, !dbg !2554

noerr_block699:                                   ; preds = %after_check697
  %388 = load i64, ptr %retparam693, align 8, !dbg !2554
  store i64 %388, ptr %len674, align 8, !dbg !2554
  %ptradd701 = getelementptr inbounds i8, ptr %out672, i64 8, !dbg !2555
  %389 = load i64, ptr %ptradd701, align 8, !dbg !2555
  %390 = inttoptr i64 %389 to ptr, !dbg !2555
  %type704 = load ptr, ptr %.cachedtype703, align 8, !dbg !2320
  %391 = icmp eq ptr %390, %type704, !dbg !2320
  br i1 %391, label %cache_hit707, label %cache_miss705, !dbg !2320

cache_miss705:                                    ; preds = %noerr_block699
  %ptradd706 = getelementptr inbounds i8, ptr %390, i64 16, !dbg !2320
  %392 = load ptr, ptr %ptradd706, align 8, !dbg !2320
  %393 = call ptr @.dyn_search(ptr %392, ptr @"$sel.write_byte"), !dbg !2320
  store ptr %393, ptr %.inlinecache702, align 8, !dbg !2320
  store ptr %390, ptr %.cachedtype703, align 8, !dbg !2320
  br label %394, !dbg !2320

cache_hit707:                                     ; preds = %noerr_block699
  %cache_hit_fn708 = load ptr, ptr %.inlinecache702, align 8, !dbg !2320
  br label %394, !dbg !2320

394:                                              ; preds = %cache_hit707, %cache_miss705
  %fn_phi709 = phi ptr [ %cache_hit_fn708, %cache_hit707 ], [ %393, %cache_miss705 ], !dbg !2320
  %395 = icmp eq ptr %fn_phi709, null, !dbg !2320
  br i1 %395, label %missing_function710, label %match714, !dbg !2320

missing_function710:                              ; preds = %394
  store %"char[]" { ptr @.panic_msg.111, i64 47 }, ptr %indirectarg711, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg712, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg713, align 8
  %396 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %396(ptr align 8 %indirectarg711, ptr align 8 %indirectarg712, ptr align 8 %indirectarg713, i32 169), !dbg !2556
  unreachable, !dbg !2556

match714:                                         ; preds = %394
  %397 = load ptr, ptr %out672, align 8, !dbg !2556
  %398 = call i64 %fn_phi709(ptr %397, i8 10), !dbg !2556
  %not_err715 = icmp eq i64 %398, 0, !dbg !2556
  %399 = call i1 @llvm.expect.i1(i1 %not_err715, i1 true), !dbg !2556
  br i1 %399, label %after_check717, label %assign_optional716, !dbg !2556

assign_optional716:                               ; preds = %match714
  store i64 %398, ptr %error_var700, align 8, !dbg !2556
  br label %guard_block718, !dbg !2556

after_check717:                                   ; preds = %match714
  br label %noerr_block719, !dbg !2556

guard_block718:                                   ; preds = %assign_optional716
  %400 = load i64, ptr %error_var700, align 8, !dbg !2556
  store i64 %400, ptr %error_var671, align 8, !dbg !2556
  br label %guard_block753, !dbg !2556

noerr_block719:                                   ; preds = %after_check717
  %ptradd720 = getelementptr inbounds i8, ptr %out672, i64 8, !dbg !2557
  %401 = load i64, ptr %ptradd720, align 8, !dbg !2557
  %402 = inttoptr i64 %401 to ptr, !dbg !2557
  %type723 = load ptr, ptr %.cachedtype722, align 8, !dbg !2320
  %403 = icmp eq ptr %402, %type723, !dbg !2320
  br i1 %403, label %cache_hit726, label %cache_miss724, !dbg !2320

cache_miss724:                                    ; preds = %noerr_block719
  %ptradd725 = getelementptr inbounds i8, ptr %402, i64 16, !dbg !2320
  %404 = load ptr, ptr %ptradd725, align 8, !dbg !2320
  %405 = call ptr @.dyn_search(ptr %404, ptr @"$sel.flush"), !dbg !2320
  store ptr %405, ptr %.inlinecache721, align 8, !dbg !2320
  store ptr %402, ptr %.cachedtype722, align 8, !dbg !2320
  br label %406, !dbg !2320

cache_hit726:                                     ; preds = %noerr_block719
  %cache_hit_fn727 = load ptr, ptr %.inlinecache721, align 8, !dbg !2320
  br label %406, !dbg !2320

406:                                              ; preds = %cache_hit726, %cache_miss724
  %fn_phi728 = phi ptr [ %cache_hit_fn727, %cache_hit726 ], [ %405, %cache_miss724 ], !dbg !2320
  %ptrbool729 = icmp ne ptr %fn_phi728, null, !dbg !2320
  br i1 %ptrbool729, label %if.then730, label %if.exit751, !dbg !2320

if.then730:                                       ; preds = %406
  %ptradd732 = getelementptr inbounds i8, ptr %out672, i64 8, !dbg !2558
  %407 = load i64, ptr %ptradd732, align 8, !dbg !2558
  %408 = inttoptr i64 %407 to ptr, !dbg !2558
  %type735 = load ptr, ptr %.cachedtype734, align 8, !dbg !2320
  %409 = icmp eq ptr %408, %type735, !dbg !2320
  br i1 %409, label %cache_hit738, label %cache_miss736, !dbg !2320

cache_miss736:                                    ; preds = %if.then730
  %ptradd737 = getelementptr inbounds i8, ptr %408, i64 16, !dbg !2320
  %410 = load ptr, ptr %ptradd737, align 8, !dbg !2320
  %411 = call ptr @.dyn_search(ptr %410, ptr @"$sel.flush"), !dbg !2320
  store ptr %411, ptr %.inlinecache733, align 8, !dbg !2320
  store ptr %408, ptr %.cachedtype734, align 8, !dbg !2320
  br label %412, !dbg !2320

cache_hit738:                                     ; preds = %if.then730
  %cache_hit_fn739 = load ptr, ptr %.inlinecache733, align 8, !dbg !2320
  br label %412, !dbg !2320

412:                                              ; preds = %cache_hit738, %cache_miss736
  %fn_phi740 = phi ptr [ %cache_hit_fn739, %cache_hit738 ], [ %411, %cache_miss736 ], !dbg !2320
  %413 = icmp eq ptr %fn_phi740, null, !dbg !2320
  br i1 %413, label %missing_function741, label %match745, !dbg !2320

missing_function741:                              ; preds = %412
  store %"char[]" { ptr @.panic_msg.112, i64 42 }, ptr %indirectarg742, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg743, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg744, align 8
  %414 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %414(ptr align 8 %indirectarg742, ptr align 8 %indirectarg743, ptr align 8 %indirectarg744, i32 172), !dbg !2558
  unreachable, !dbg !2558

match745:                                         ; preds = %412
  %415 = load ptr, ptr %out672, align 8, !dbg !2558
  %416 = call i64 %fn_phi740(ptr %415), !dbg !2558
  %not_err746 = icmp eq i64 %416, 0, !dbg !2558
  %417 = call i1 @llvm.expect.i1(i1 %not_err746, i1 true), !dbg !2558
  br i1 %417, label %after_check748, label %assign_optional747, !dbg !2558

assign_optional747:                               ; preds = %match745
  store i64 %416, ptr %error_var731, align 8, !dbg !2558
  br label %guard_block749, !dbg !2558

after_check748:                                   ; preds = %match745
  br label %noerr_block750, !dbg !2558

guard_block749:                                   ; preds = %assign_optional747
  %418 = load i64, ptr %error_var731, align 8, !dbg !2558
  store i64 %418, ptr %error_var671, align 8, !dbg !2558
  br label %guard_block753, !dbg !2558

noerr_block750:                                   ; preds = %after_check748
  br label %if.exit751, !dbg !2558

if.exit751:                                       ; preds = %noerr_block750, %406
  %419 = load i64, ptr %len674, align 8, !dbg !2559
  %add752 = add i64 %419, 1, !dbg !2559
  br label %noerr_block754, !dbg !2559

guard_block753:                                   ; preds = %guard_block749, %guard_block718, %guard_block698
  %420 = load ptr, ptr %current, align 8, !dbg !2560
  %421 = load i64, ptr %mark, align 8, !dbg !2560
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %420, i64 %421), !dbg !2562
  %422 = load i64, ptr %error_var671, align 8, !dbg !2563
  ret i64 %422, !dbg !2563

noerr_block754:                                   ; preds = %if.exit751
  br label %if.exit755, !dbg !2563

if.exit755:                                       ; preds = %noerr_block754, %if.exit669
  %423 = insertvalue %any undef, ptr %total, 0, !dbg !2564
  %424 = insertvalue %any %423, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !2564
  store %any %424, ptr %varargslots757, align 16, !dbg !2564
  %425 = insertvalue %"any[]" undef, ptr %varargslots757, 0, !dbg !2564
  %"$$temp758" = insertvalue %"any[]" %425, i64 1, 1, !dbg !2564
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg760, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.122, i64 49 }, ptr %indirectarg761, align 8
  store %"any[]" %"$$temp758", ptr %indirectarg762, align 8
  %426 = call i64 @std.io.fprintfn(ptr %retparam759, ptr align 8 %indirectarg760, ptr align 8 %indirectarg761, ptr align 8 %indirectarg762), !dbg !2565
  %not_err763 = icmp eq i64 %426, 0, !dbg !2565
  %427 = call i1 @llvm.expect.i1(i1 %not_err763, i1 true), !dbg !2565
  br i1 %427, label %after_check765, label %assign_optional764, !dbg !2565

assign_optional764:                               ; preds = %if.exit755
  store i64 %426, ptr %error_var756, align 8, !dbg !2565
  br label %guard_block766, !dbg !2565

after_check765:                                   ; preds = %if.exit755
  br label %noerr_block767, !dbg !2565

guard_block766:                                   ; preds = %assign_optional764
  %428 = load ptr, ptr %current, align 8, !dbg !2566
  %429 = load i64, ptr %mark, align 8, !dbg !2566
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %428, i64 %429), !dbg !2568
  %430 = load i64, ptr %error_var756, align 8, !dbg !2569
  ret i64 %430, !dbg !2569

noerr_block767:                                   ; preds = %after_check765
  %431 = insertvalue %any undef, ptr %entries, 0, !dbg !2570
  %432 = insertvalue %any %431, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !2570
  store %any %432, ptr %varargslots769, align 16, !dbg !2570
  %433 = insertvalue %"any[]" undef, ptr %varargslots769, 0, !dbg !2570
  %"$$temp770" = insertvalue %"any[]" %433, i64 1, 1, !dbg !2570
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg772, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.123, i64 49 }, ptr %indirectarg773, align 8
  store %"any[]" %"$$temp770", ptr %indirectarg774, align 8
  %434 = call i64 @std.io.fprintfn(ptr %retparam771, ptr align 8 %indirectarg772, ptr align 8 %indirectarg773, ptr align 8 %indirectarg774), !dbg !2571
  %not_err775 = icmp eq i64 %434, 0, !dbg !2571
  %435 = call i1 @llvm.expect.i1(i1 %not_err775, i1 true), !dbg !2571
  br i1 %435, label %after_check777, label %assign_optional776, !dbg !2571

assign_optional776:                               ; preds = %noerr_block767
  store i64 %434, ptr %error_var768, align 8, !dbg !2571
  br label %guard_block778, !dbg !2571

after_check777:                                   ; preds = %noerr_block767
  br label %noerr_block779, !dbg !2571

guard_block778:                                   ; preds = %assign_optional776
  %436 = load ptr, ptr %current, align 8, !dbg !2572
  %437 = load i64, ptr %mark, align 8, !dbg !2572
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %436, i64 %437), !dbg !2574
  %438 = load i64, ptr %error_var768, align 8, !dbg !2575
  ret i64 %438, !dbg !2575

noerr_block779:                                   ; preds = %after_check777
  %439 = load ptr, ptr %self, align 8, !dbg !2576
  %checknull782 = icmp eq ptr %439, null, !dbg !2576
  %440 = call i1 @llvm.expect.i1(i1 %checknull782, i1 false), !dbg !2576
  br i1 %440, label %panic783, label %checkok787, !dbg !2576

checkok787:                                       ; preds = %noerr_block779
  %ptradd788 = getelementptr inbounds i8, ptr %439, i64 72, !dbg !2576
  %441 = insertvalue %any undef, ptr %ptradd788, 0, !dbg !2576
  %442 = insertvalue %any %441, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !2576
  store %any %442, ptr %varargslots781, align 16, !dbg !2576
  %443 = insertvalue %"any[]" undef, ptr %varargslots781, 0, !dbg !2576
  %"$$temp789" = insertvalue %"any[]" %443, i64 1, 1, !dbg !2576
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg791, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.124, i64 49 }, ptr %indirectarg792, align 8
  store %"any[]" %"$$temp789", ptr %indirectarg793, align 8
  %444 = call i64 @std.io.fprintfn(ptr %retparam790, ptr align 8 %indirectarg791, ptr align 8 %indirectarg792, ptr align 8 %indirectarg793), !dbg !2577
  %not_err794 = icmp eq i64 %444, 0, !dbg !2577
  %445 = call i1 @llvm.expect.i1(i1 %not_err794, i1 true), !dbg !2577
  br i1 %445, label %after_check796, label %assign_optional795, !dbg !2577

assign_optional795:                               ; preds = %checkok787
  store i64 %444, ptr %error_var780, align 8, !dbg !2577
  br label %guard_block797, !dbg !2577

after_check796:                                   ; preds = %checkok787
  br label %noerr_block798, !dbg !2577

guard_block797:                                   ; preds = %assign_optional795
  %446 = load ptr, ptr %current, align 8, !dbg !2578
  %447 = load i64, ptr %mark, align 8, !dbg !2578
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %446, i64 %447), !dbg !2580
  %448 = load i64, ptr %error_var780, align 8, !dbg !2581
  ret i64 %448, !dbg !2581

noerr_block798:                                   ; preds = %after_check796
  %449 = load ptr, ptr %self, align 8, !dbg !2582
  %checknull801 = icmp eq ptr %449, null, !dbg !2582
  %450 = call i1 @llvm.expect.i1(i1 %checknull801, i1 false), !dbg !2582
  br i1 %450, label %panic802, label %checkok806, !dbg !2582

checkok806:                                       ; preds = %noerr_block798
  %ptradd807 = getelementptr inbounds i8, ptr %449, i64 64, !dbg !2582
  %451 = insertvalue %any undef, ptr %ptradd807, 0, !dbg !2582
  %452 = insertvalue %any %451, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !2582
  store %any %452, ptr %varargslots800, align 16, !dbg !2582
  %453 = insertvalue %"any[]" undef, ptr %varargslots800, 0, !dbg !2582
  %"$$temp808" = insertvalue %"any[]" %453, i64 1, 1, !dbg !2582
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg810, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.125, i64 49 }, ptr %indirectarg811, align 8
  store %"any[]" %"$$temp808", ptr %indirectarg812, align 8
  %454 = call i64 @std.io.fprintfn(ptr %retparam809, ptr align 8 %indirectarg810, ptr align 8 %indirectarg811, ptr align 8 %indirectarg812), !dbg !2583
  %not_err813 = icmp eq i64 %454, 0, !dbg !2583
  %455 = call i1 @llvm.expect.i1(i1 %not_err813, i1 true), !dbg !2583
  br i1 %455, label %after_check815, label %assign_optional814, !dbg !2583

assign_optional814:                               ; preds = %checkok806
  store i64 %454, ptr %error_var799, align 8, !dbg !2583
  br label %guard_block816, !dbg !2583

after_check815:                                   ; preds = %checkok806
  br label %noerr_block817, !dbg !2583

guard_block816:                                   ; preds = %assign_optional814
  %456 = load ptr, ptr %current, align 8, !dbg !2584
  %457 = load i64, ptr %mark, align 8, !dbg !2584
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %456, i64 %457), !dbg !2586
  %458 = load i64, ptr %error_var799, align 8, !dbg !2587
  ret i64 %458, !dbg !2587

noerr_block817:                                   ; preds = %after_check815
  %459 = load i8, ptr %leaks, align 1, !dbg !2588
  %460 = trunc i8 %459 to i1, !dbg !2588
  br i1 %460, label %if.then818, label %if.exit1196, !dbg !2588

if.then818:                                       ; preds = %noerr_block817
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out820, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" zeroinitializer, ptr %x821, align 8
  call void @llvm.dbg.declare(metadata ptr %len822, metadata !2589, metadata !DIExpression()), !dbg !2591
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out824, ptr align 8 %out820, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %x825, ptr align 8 %x821, i32 16, i1 false)
  %ptradd827 = getelementptr inbounds i8, ptr %out824, i64 8, !dbg !2594
  %461 = load i64, ptr %ptradd827, align 8, !dbg !2594
  %462 = inttoptr i64 %461 to ptr, !dbg !2594
  %type830 = load ptr, ptr %.cachedtype829, align 8, !dbg !2320
  %463 = icmp eq ptr %462, %type830, !dbg !2320
  br i1 %463, label %cache_hit833, label %cache_miss831, !dbg !2320

cache_miss831:                                    ; preds = %if.then818
  %ptradd832 = getelementptr inbounds i8, ptr %462, i64 16, !dbg !2320
  %464 = load ptr, ptr %ptradd832, align 8, !dbg !2320
  %465 = call ptr @.dyn_search(ptr %464, ptr @"$sel.write"), !dbg !2320
  store ptr %465, ptr %.inlinecache828, align 8, !dbg !2320
  store ptr %462, ptr %.cachedtype829, align 8, !dbg !2320
  br label %466, !dbg !2320

cache_hit833:                                     ; preds = %if.then818
  %cache_hit_fn834 = load ptr, ptr %.inlinecache828, align 8, !dbg !2320
  br label %466, !dbg !2320

466:                                              ; preds = %cache_hit833, %cache_miss831
  %fn_phi835 = phi ptr [ %cache_hit_fn834, %cache_hit833 ], [ %465, %cache_miss831 ], !dbg !2320
  %467 = icmp eq ptr %fn_phi835, null, !dbg !2320
  br i1 %467, label %missing_function836, label %match840, !dbg !2320

missing_function836:                              ; preds = %466
  store %"char[]" { ptr @.panic_msg.109, i64 42 }, ptr %indirectarg837, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg838, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg839, align 8
  %468 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %468(ptr align 8 %indirectarg837, ptr align 8 %indirectarg838, ptr align 8 %indirectarg839, i32 118), !dbg !2597
  unreachable, !dbg !2597

match840:                                         ; preds = %466
  %469 = load ptr, ptr %out824, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg842, ptr align 8 %x825, i32 16, i1 false)
  %470 = call i64 %fn_phi835(ptr %retparam841, ptr %469, ptr align 8 %indirectarg842), !dbg !2597
  %not_err843 = icmp eq i64 %470, 0, !dbg !2597
  %471 = call i1 @llvm.expect.i1(i1 %not_err843, i1 true), !dbg !2597
  br i1 %471, label %after_check845, label %assign_optional844, !dbg !2597

assign_optional844:                               ; preds = %match840
  store i64 %470, ptr %error_var823, align 8, !dbg !2597
  br label %guard_block846, !dbg !2597

after_check845:                                   ; preds = %match840
  br label %noerr_block847, !dbg !2597

guard_block846:                                   ; preds = %assign_optional844
  %472 = load i64, ptr %error_var823, align 8, !dbg !2597
  store i64 %472, ptr %error_var819, align 8, !dbg !2597
  br label %guard_block901, !dbg !2597

noerr_block847:                                   ; preds = %after_check845
  %473 = load i64, ptr %retparam841, align 8, !dbg !2597
  store i64 %473, ptr %len822, align 8, !dbg !2597
  %ptradd849 = getelementptr inbounds i8, ptr %out820, i64 8, !dbg !2598
  %474 = load i64, ptr %ptradd849, align 8, !dbg !2598
  %475 = inttoptr i64 %474 to ptr, !dbg !2598
  %type852 = load ptr, ptr %.cachedtype851, align 8, !dbg !2320
  %476 = icmp eq ptr %475, %type852, !dbg !2320
  br i1 %476, label %cache_hit855, label %cache_miss853, !dbg !2320

cache_miss853:                                    ; preds = %noerr_block847
  %ptradd854 = getelementptr inbounds i8, ptr %475, i64 16, !dbg !2320
  %477 = load ptr, ptr %ptradd854, align 8, !dbg !2320
  %478 = call ptr @.dyn_search(ptr %477, ptr @"$sel.write_byte"), !dbg !2320
  store ptr %478, ptr %.inlinecache850, align 8, !dbg !2320
  store ptr %475, ptr %.cachedtype851, align 8, !dbg !2320
  br label %479, !dbg !2320

cache_hit855:                                     ; preds = %noerr_block847
  %cache_hit_fn856 = load ptr, ptr %.inlinecache850, align 8, !dbg !2320
  br label %479, !dbg !2320

479:                                              ; preds = %cache_hit855, %cache_miss853
  %fn_phi857 = phi ptr [ %cache_hit_fn856, %cache_hit855 ], [ %478, %cache_miss853 ], !dbg !2320
  %480 = icmp eq ptr %fn_phi857, null, !dbg !2320
  br i1 %480, label %missing_function858, label %match862, !dbg !2320

missing_function858:                              ; preds = %479
  store %"char[]" { ptr @.panic_msg.111, i64 47 }, ptr %indirectarg859, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg860, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg861, align 8
  %481 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %481(ptr align 8 %indirectarg859, ptr align 8 %indirectarg860, ptr align 8 %indirectarg861, i32 169), !dbg !2599
  unreachable, !dbg !2599

match862:                                         ; preds = %479
  %482 = load ptr, ptr %out820, align 8, !dbg !2599
  %483 = call i64 %fn_phi857(ptr %482, i8 10), !dbg !2599
  %not_err863 = icmp eq i64 %483, 0, !dbg !2599
  %484 = call i1 @llvm.expect.i1(i1 %not_err863, i1 true), !dbg !2599
  br i1 %484, label %after_check865, label %assign_optional864, !dbg !2599

assign_optional864:                               ; preds = %match862
  store i64 %483, ptr %error_var848, align 8, !dbg !2599
  br label %guard_block866, !dbg !2599

after_check865:                                   ; preds = %match862
  br label %noerr_block867, !dbg !2599

guard_block866:                                   ; preds = %assign_optional864
  %485 = load i64, ptr %error_var848, align 8, !dbg !2599
  store i64 %485, ptr %error_var819, align 8, !dbg !2599
  br label %guard_block901, !dbg !2599

noerr_block867:                                   ; preds = %after_check865
  %ptradd868 = getelementptr inbounds i8, ptr %out820, i64 8, !dbg !2600
  %486 = load i64, ptr %ptradd868, align 8, !dbg !2600
  %487 = inttoptr i64 %486 to ptr, !dbg !2600
  %type871 = load ptr, ptr %.cachedtype870, align 8, !dbg !2320
  %488 = icmp eq ptr %487, %type871, !dbg !2320
  br i1 %488, label %cache_hit874, label %cache_miss872, !dbg !2320

cache_miss872:                                    ; preds = %noerr_block867
  %ptradd873 = getelementptr inbounds i8, ptr %487, i64 16, !dbg !2320
  %489 = load ptr, ptr %ptradd873, align 8, !dbg !2320
  %490 = call ptr @.dyn_search(ptr %489, ptr @"$sel.flush"), !dbg !2320
  store ptr %490, ptr %.inlinecache869, align 8, !dbg !2320
  store ptr %487, ptr %.cachedtype870, align 8, !dbg !2320
  br label %491, !dbg !2320

cache_hit874:                                     ; preds = %noerr_block867
  %cache_hit_fn875 = load ptr, ptr %.inlinecache869, align 8, !dbg !2320
  br label %491, !dbg !2320

491:                                              ; preds = %cache_hit874, %cache_miss872
  %fn_phi876 = phi ptr [ %cache_hit_fn875, %cache_hit874 ], [ %490, %cache_miss872 ], !dbg !2320
  %ptrbool877 = icmp ne ptr %fn_phi876, null, !dbg !2320
  br i1 %ptrbool877, label %if.then878, label %if.exit899, !dbg !2320

if.then878:                                       ; preds = %491
  %ptradd880 = getelementptr inbounds i8, ptr %out820, i64 8, !dbg !2601
  %492 = load i64, ptr %ptradd880, align 8, !dbg !2601
  %493 = inttoptr i64 %492 to ptr, !dbg !2601
  %type883 = load ptr, ptr %.cachedtype882, align 8, !dbg !2320
  %494 = icmp eq ptr %493, %type883, !dbg !2320
  br i1 %494, label %cache_hit886, label %cache_miss884, !dbg !2320

cache_miss884:                                    ; preds = %if.then878
  %ptradd885 = getelementptr inbounds i8, ptr %493, i64 16, !dbg !2320
  %495 = load ptr, ptr %ptradd885, align 8, !dbg !2320
  %496 = call ptr @.dyn_search(ptr %495, ptr @"$sel.flush"), !dbg !2320
  store ptr %496, ptr %.inlinecache881, align 8, !dbg !2320
  store ptr %493, ptr %.cachedtype882, align 8, !dbg !2320
  br label %497, !dbg !2320

cache_hit886:                                     ; preds = %if.then878
  %cache_hit_fn887 = load ptr, ptr %.inlinecache881, align 8, !dbg !2320
  br label %497, !dbg !2320

497:                                              ; preds = %cache_hit886, %cache_miss884
  %fn_phi888 = phi ptr [ %cache_hit_fn887, %cache_hit886 ], [ %496, %cache_miss884 ], !dbg !2320
  %498 = icmp eq ptr %fn_phi888, null, !dbg !2320
  br i1 %498, label %missing_function889, label %match893, !dbg !2320

missing_function889:                              ; preds = %497
  store %"char[]" { ptr @.panic_msg.112, i64 42 }, ptr %indirectarg890, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg891, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg892, align 8
  %499 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %499(ptr align 8 %indirectarg890, ptr align 8 %indirectarg891, ptr align 8 %indirectarg892, i32 172), !dbg !2601
  unreachable, !dbg !2601

match893:                                         ; preds = %497
  %500 = load ptr, ptr %out820, align 8, !dbg !2601
  %501 = call i64 %fn_phi888(ptr %500), !dbg !2601
  %not_err894 = icmp eq i64 %501, 0, !dbg !2601
  %502 = call i1 @llvm.expect.i1(i1 %not_err894, i1 true), !dbg !2601
  br i1 %502, label %after_check896, label %assign_optional895, !dbg !2601

assign_optional895:                               ; preds = %match893
  store i64 %501, ptr %error_var879, align 8, !dbg !2601
  br label %guard_block897, !dbg !2601

after_check896:                                   ; preds = %match893
  br label %noerr_block898, !dbg !2601

guard_block897:                                   ; preds = %assign_optional895
  %503 = load i64, ptr %error_var879, align 8, !dbg !2601
  store i64 %503, ptr %error_var819, align 8, !dbg !2601
  br label %guard_block901, !dbg !2601

noerr_block898:                                   ; preds = %after_check896
  br label %if.exit899, !dbg !2601

if.exit899:                                       ; preds = %noerr_block898, %491
  %504 = load i64, ptr %len822, align 8, !dbg !2602
  %add900 = add i64 %504, 1, !dbg !2602
  br label %noerr_block902, !dbg !2602

guard_block901:                                   ; preds = %guard_block897, %guard_block866, %guard_block846
  %505 = load ptr, ptr %current, align 8, !dbg !2603
  %506 = load i64, ptr %mark, align 8, !dbg !2603
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %505, i64 %506), !dbg !2605
  %507 = load i64, ptr %error_var819, align 8, !dbg !2606
  ret i64 %507, !dbg !2606

noerr_block902:                                   ; preds = %if.exit899
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out904, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.126, i64 17 }, ptr %x905, align 8
  call void @llvm.dbg.declare(metadata ptr %len906, metadata !2607, metadata !DIExpression()), !dbg !2609
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %out908, ptr align 8 %out904, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %x909, ptr align 8 %x905, i32 16, i1 false)
  %ptradd911 = getelementptr inbounds i8, ptr %out908, i64 8, !dbg !2611
  %508 = load i64, ptr %ptradd911, align 8, !dbg !2611
  %509 = inttoptr i64 %508 to ptr, !dbg !2611
  %type914 = load ptr, ptr %.cachedtype913, align 8, !dbg !2320
  %510 = icmp eq ptr %509, %type914, !dbg !2320
  br i1 %510, label %cache_hit917, label %cache_miss915, !dbg !2320

cache_miss915:                                    ; preds = %noerr_block902
  %ptradd916 = getelementptr inbounds i8, ptr %509, i64 16, !dbg !2320
  %511 = load ptr, ptr %ptradd916, align 8, !dbg !2320
  %512 = call ptr @.dyn_search(ptr %511, ptr @"$sel.write"), !dbg !2320
  store ptr %512, ptr %.inlinecache912, align 8, !dbg !2320
  store ptr %509, ptr %.cachedtype913, align 8, !dbg !2320
  br label %513, !dbg !2320

cache_hit917:                                     ; preds = %noerr_block902
  %cache_hit_fn918 = load ptr, ptr %.inlinecache912, align 8, !dbg !2320
  br label %513, !dbg !2320

513:                                              ; preds = %cache_hit917, %cache_miss915
  %fn_phi919 = phi ptr [ %cache_hit_fn918, %cache_hit917 ], [ %512, %cache_miss915 ], !dbg !2320
  %514 = icmp eq ptr %fn_phi919, null, !dbg !2320
  br i1 %514, label %missing_function920, label %match924, !dbg !2320

missing_function920:                              ; preds = %513
  store %"char[]" { ptr @.panic_msg.109, i64 42 }, ptr %indirectarg921, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg922, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg923, align 8
  %515 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %515(ptr align 8 %indirectarg921, ptr align 8 %indirectarg922, ptr align 8 %indirectarg923, i32 118), !dbg !2614
  unreachable, !dbg !2614

match924:                                         ; preds = %513
  %516 = load ptr, ptr %out908, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg926, ptr align 8 %x909, i32 16, i1 false)
  %517 = call i64 %fn_phi919(ptr %retparam925, ptr %516, ptr align 8 %indirectarg926), !dbg !2614
  %not_err927 = icmp eq i64 %517, 0, !dbg !2614
  %518 = call i1 @llvm.expect.i1(i1 %not_err927, i1 true), !dbg !2614
  br i1 %518, label %after_check929, label %assign_optional928, !dbg !2614

assign_optional928:                               ; preds = %match924
  store i64 %517, ptr %error_var907, align 8, !dbg !2614
  br label %guard_block930, !dbg !2614

after_check929:                                   ; preds = %match924
  br label %noerr_block931, !dbg !2614

guard_block930:                                   ; preds = %assign_optional928
  %519 = load i64, ptr %error_var907, align 8, !dbg !2614
  store i64 %519, ptr %error_var903, align 8, !dbg !2614
  br label %guard_block985, !dbg !2614

noerr_block931:                                   ; preds = %after_check929
  %520 = load i64, ptr %retparam925, align 8, !dbg !2614
  store i64 %520, ptr %len906, align 8, !dbg !2614
  %ptradd933 = getelementptr inbounds i8, ptr %out904, i64 8, !dbg !2615
  %521 = load i64, ptr %ptradd933, align 8, !dbg !2615
  %522 = inttoptr i64 %521 to ptr, !dbg !2615
  %type936 = load ptr, ptr %.cachedtype935, align 8, !dbg !2320
  %523 = icmp eq ptr %522, %type936, !dbg !2320
  br i1 %523, label %cache_hit939, label %cache_miss937, !dbg !2320

cache_miss937:                                    ; preds = %noerr_block931
  %ptradd938 = getelementptr inbounds i8, ptr %522, i64 16, !dbg !2320
  %524 = load ptr, ptr %ptradd938, align 8, !dbg !2320
  %525 = call ptr @.dyn_search(ptr %524, ptr @"$sel.write_byte"), !dbg !2320
  store ptr %525, ptr %.inlinecache934, align 8, !dbg !2320
  store ptr %522, ptr %.cachedtype935, align 8, !dbg !2320
  br label %526, !dbg !2320

cache_hit939:                                     ; preds = %noerr_block931
  %cache_hit_fn940 = load ptr, ptr %.inlinecache934, align 8, !dbg !2320
  br label %526, !dbg !2320

526:                                              ; preds = %cache_hit939, %cache_miss937
  %fn_phi941 = phi ptr [ %cache_hit_fn940, %cache_hit939 ], [ %525, %cache_miss937 ], !dbg !2320
  %527 = icmp eq ptr %fn_phi941, null, !dbg !2320
  br i1 %527, label %missing_function942, label %match946, !dbg !2320

missing_function942:                              ; preds = %526
  store %"char[]" { ptr @.panic_msg.111, i64 47 }, ptr %indirectarg943, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg944, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg945, align 8
  %528 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %528(ptr align 8 %indirectarg943, ptr align 8 %indirectarg944, ptr align 8 %indirectarg945, i32 169), !dbg !2616
  unreachable, !dbg !2616

match946:                                         ; preds = %526
  %529 = load ptr, ptr %out904, align 8, !dbg !2616
  %530 = call i64 %fn_phi941(ptr %529, i8 10), !dbg !2616
  %not_err947 = icmp eq i64 %530, 0, !dbg !2616
  %531 = call i1 @llvm.expect.i1(i1 %not_err947, i1 true), !dbg !2616
  br i1 %531, label %after_check949, label %assign_optional948, !dbg !2616

assign_optional948:                               ; preds = %match946
  store i64 %530, ptr %error_var932, align 8, !dbg !2616
  br label %guard_block950, !dbg !2616

after_check949:                                   ; preds = %match946
  br label %noerr_block951, !dbg !2616

guard_block950:                                   ; preds = %assign_optional948
  %532 = load i64, ptr %error_var932, align 8, !dbg !2616
  store i64 %532, ptr %error_var903, align 8, !dbg !2616
  br label %guard_block985, !dbg !2616

noerr_block951:                                   ; preds = %after_check949
  %ptradd952 = getelementptr inbounds i8, ptr %out904, i64 8, !dbg !2617
  %533 = load i64, ptr %ptradd952, align 8, !dbg !2617
  %534 = inttoptr i64 %533 to ptr, !dbg !2617
  %type955 = load ptr, ptr %.cachedtype954, align 8, !dbg !2320
  %535 = icmp eq ptr %534, %type955, !dbg !2320
  br i1 %535, label %cache_hit958, label %cache_miss956, !dbg !2320

cache_miss956:                                    ; preds = %noerr_block951
  %ptradd957 = getelementptr inbounds i8, ptr %534, i64 16, !dbg !2320
  %536 = load ptr, ptr %ptradd957, align 8, !dbg !2320
  %537 = call ptr @.dyn_search(ptr %536, ptr @"$sel.flush"), !dbg !2320
  store ptr %537, ptr %.inlinecache953, align 8, !dbg !2320
  store ptr %534, ptr %.cachedtype954, align 8, !dbg !2320
  br label %538, !dbg !2320

cache_hit958:                                     ; preds = %noerr_block951
  %cache_hit_fn959 = load ptr, ptr %.inlinecache953, align 8, !dbg !2320
  br label %538, !dbg !2320

538:                                              ; preds = %cache_hit958, %cache_miss956
  %fn_phi960 = phi ptr [ %cache_hit_fn959, %cache_hit958 ], [ %537, %cache_miss956 ], !dbg !2320
  %ptrbool961 = icmp ne ptr %fn_phi960, null, !dbg !2320
  br i1 %ptrbool961, label %if.then962, label %if.exit983, !dbg !2320

if.then962:                                       ; preds = %538
  %ptradd964 = getelementptr inbounds i8, ptr %out904, i64 8, !dbg !2618
  %539 = load i64, ptr %ptradd964, align 8, !dbg !2618
  %540 = inttoptr i64 %539 to ptr, !dbg !2618
  %type967 = load ptr, ptr %.cachedtype966, align 8, !dbg !2320
  %541 = icmp eq ptr %540, %type967, !dbg !2320
  br i1 %541, label %cache_hit970, label %cache_miss968, !dbg !2320

cache_miss968:                                    ; preds = %if.then962
  %ptradd969 = getelementptr inbounds i8, ptr %540, i64 16, !dbg !2320
  %542 = load ptr, ptr %ptradd969, align 8, !dbg !2320
  %543 = call ptr @.dyn_search(ptr %542, ptr @"$sel.flush"), !dbg !2320
  store ptr %543, ptr %.inlinecache965, align 8, !dbg !2320
  store ptr %540, ptr %.cachedtype966, align 8, !dbg !2320
  br label %544, !dbg !2320

cache_hit970:                                     ; preds = %if.then962
  %cache_hit_fn971 = load ptr, ptr %.inlinecache965, align 8, !dbg !2320
  br label %544, !dbg !2320

544:                                              ; preds = %cache_hit970, %cache_miss968
  %fn_phi972 = phi ptr [ %cache_hit_fn971, %cache_hit970 ], [ %543, %cache_miss968 ], !dbg !2320
  %545 = icmp eq ptr %fn_phi972, null, !dbg !2320
  br i1 %545, label %missing_function973, label %match977, !dbg !2320

missing_function973:                              ; preds = %544
  store %"char[]" { ptr @.panic_msg.112, i64 42 }, ptr %indirectarg974, align 8
  store %"char[]" { ptr @.file.110, i64 5 }, ptr %indirectarg975, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg976, align 8
  %546 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %546(ptr align 8 %indirectarg974, ptr align 8 %indirectarg975, ptr align 8 %indirectarg976, i32 172), !dbg !2618
  unreachable, !dbg !2618

match977:                                         ; preds = %544
  %547 = load ptr, ptr %out904, align 8, !dbg !2618
  %548 = call i64 %fn_phi972(ptr %547), !dbg !2618
  %not_err978 = icmp eq i64 %548, 0, !dbg !2618
  %549 = call i1 @llvm.expect.i1(i1 %not_err978, i1 true), !dbg !2618
  br i1 %549, label %after_check980, label %assign_optional979, !dbg !2618

assign_optional979:                               ; preds = %match977
  store i64 %548, ptr %error_var963, align 8, !dbg !2618
  br label %guard_block981, !dbg !2618

after_check980:                                   ; preds = %match977
  br label %noerr_block982, !dbg !2618

guard_block981:                                   ; preds = %assign_optional979
  %550 = load i64, ptr %error_var963, align 8, !dbg !2618
  store i64 %550, ptr %error_var903, align 8, !dbg !2618
  br label %guard_block985, !dbg !2618

noerr_block982:                                   ; preds = %after_check980
  br label %if.exit983, !dbg !2618

if.exit983:                                       ; preds = %noerr_block982, %538
  %551 = load i64, ptr %len906, align 8, !dbg !2619
  %add984 = add i64 %551, 1, !dbg !2619
  br label %noerr_block986, !dbg !2619

guard_block985:                                   ; preds = %guard_block981, %guard_block950, %guard_block930
  %552 = load ptr, ptr %current, align 8, !dbg !2620
  %553 = load i64, ptr %mark, align 8, !dbg !2620
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %552, i64 %553), !dbg !2622
  %554 = load i64, ptr %error_var903, align 8, !dbg !2623
  ret i64 %554, !dbg !2623

noerr_block986:                                   ; preds = %if.exit983
  call void @llvm.dbg.declare(metadata ptr %.anon987, metadata !2624, metadata !DIExpression()), !dbg !2626
  %ptradd988 = getelementptr inbounds i8, ptr %allocs, i64 8, !dbg !2626
  %555 = load i64, ptr %ptradd988, align 8, !dbg !2626
  store i64 %555, ptr %.anon987, align 8, !dbg !2626
  call void @llvm.dbg.declare(metadata ptr %.anon989, metadata !2624, metadata !DIExpression()), !dbg !2627
  store i64 0, ptr %.anon989, align 8, !dbg !2627
  br label %loop.cond990, !dbg !2627

loop.cond990:                                     ; preds = %loop.inc1193, %noerr_block986
  %556 = load i64, ptr %.anon989, align 8, !dbg !2627
  %557 = load i64, ptr %.anon987, align 8, !dbg !2626
  %lt991 = icmp ult i64 %556, %557, !dbg !2627
  br i1 %lt991, label %loop.body992, label %loop.exit1195, !dbg !2627

loop.body992:                                     ; preds = %loop.cond990
  call void @llvm.dbg.declare(metadata ptr %i993, metadata !2628, metadata !DIExpression()), !dbg !2630
  %558 = load i64, ptr %.anon989, align 8, !dbg !2630
  store i64 %558, ptr %i993, align 8, !dbg !2630
  call void @llvm.dbg.declare(metadata ptr %allocation994, metadata !2631, metadata !DIExpression()), !dbg !2632
  %ptradd995 = getelementptr inbounds i8, ptr %allocs, i64 8, !dbg !2633
  %559 = load i64, ptr %ptradd995, align 8, !dbg !2633
  %560 = load ptr, ptr %allocs, align 8, !dbg !2633
  %561 = load i64, ptr %.anon989, align 8, !dbg !2630
  %ge996 = icmp uge i64 %561, %559, !dbg !2630
  %562 = call i1 @llvm.expect.i1(i1 %ge996, i1 false), !dbg !2630
  br i1 %562, label %panic997, label %checkok1007, !dbg !2630

checkok1007:                                      ; preds = %loop.body992
  %ptroffset1008 = getelementptr inbounds [144 x i8], ptr %560, i64 %561, !dbg !2630
  store ptr %ptroffset1008, ptr %allocation994, align 8, !dbg !2630
  %563 = load ptr, ptr %allocation994, align 8, !dbg !2634
  %checknull1009 = icmp eq ptr %563, null, !dbg !2634
  %564 = call i1 @llvm.expect.i1(i1 %checknull1009, i1 false), !dbg !2634
  br i1 %564, label %panic1010, label %checkok1014, !dbg !2634

checkok1014:                                      ; preds = %checkok1007
  %ptradd1015 = getelementptr inbounds i8, ptr %563, i64 16, !dbg !2634
  %ptradd1016 = getelementptr inbounds i8, ptr %ptradd1015, i64 24, !dbg !2636
  %565 = load ptr, ptr %ptradd1016, align 8, !dbg !2636
  %not1017 = icmp eq ptr %565, null, !dbg !2636
  br i1 %not1017, label %if.then1018, label %if.exit1041, !dbg !2636

if.then1018:                                      ; preds = %checkok1014
  %566 = load i64, ptr %i993, align 8, !dbg !2637
  %add1021 = add i64 %566, 1, !dbg !2637
  store i64 %add1021, ptr %taddr1022, align 8
  %567 = insertvalue %any undef, ptr %taddr1022, 0
  %568 = insertvalue %any %567, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %any %568, ptr %varargslots1020, align 16
  %569 = load ptr, ptr %allocation994, align 8, !dbg !2639
  %checknull1023 = icmp eq ptr %569, null, !dbg !2639
  %570 = call i1 @llvm.expect.i1(i1 %checknull1023, i1 false), !dbg !2639
  br i1 %570, label %panic1024, label %checkok1028, !dbg !2639

checkok1028:                                      ; preds = %if.then1018
  %ptradd1029 = getelementptr inbounds i8, ptr %569, i64 8, !dbg !2639
  %571 = insertvalue %any undef, ptr %ptradd1029, 0, !dbg !2639
  %572 = insertvalue %any %571, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !2639
  %ptradd1030 = getelementptr inbounds i8, ptr %varargslots1020, i64 16, !dbg !2639
  store %any %572, ptr %ptradd1030, align 16, !dbg !2639
  %573 = insertvalue %"any[]" undef, ptr %varargslots1020, 0, !dbg !2639
  %"$$temp1031" = insertvalue %"any[]" %573, i64 2, 1, !dbg !2639
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1033, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.127, i64 50 }, ptr %indirectarg1034, align 8
  store %"any[]" %"$$temp1031", ptr %indirectarg1035, align 8
  %574 = call i64 @std.io.fprintfn(ptr %retparam1032, ptr align 8 %indirectarg1033, ptr align 8 %indirectarg1034, ptr align 8 %indirectarg1035), !dbg !2640
  %not_err1036 = icmp eq i64 %574, 0, !dbg !2640
  %575 = call i1 @llvm.expect.i1(i1 %not_err1036, i1 true), !dbg !2640
  br i1 %575, label %after_check1038, label %assign_optional1037, !dbg !2640

assign_optional1037:                              ; preds = %checkok1028
  store i64 %574, ptr %error_var1019, align 8, !dbg !2640
  br label %guard_block1039, !dbg !2640

after_check1038:                                  ; preds = %checkok1028
  br label %noerr_block1040, !dbg !2640

guard_block1039:                                  ; preds = %assign_optional1037
  %576 = load ptr, ptr %current, align 8, !dbg !2641
  %577 = load i64, ptr %mark, align 8, !dbg !2641
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %576, i64 %577), !dbg !2643
  %578 = load i64, ptr %error_var1019, align 8, !dbg !2644
  ret i64 %578, !dbg !2644

noerr_block1040:                                  ; preds = %after_check1038
  br label %loop.inc1193, !dbg !2645

if.exit1041:                                      ; preds = %checkok1014
  call void @llvm.dbg.declare(metadata ptr %backtraces1042, metadata !2646, metadata !DIExpression()), !dbg !2647
  call void @llvm.memset.p0.i64(ptr align 8 %backtraces1042, i8 0, i64 40, i1 false), !dbg !2647
  call void @llvm.dbg.declare(metadata ptr %end, metadata !2648, metadata !DIExpression()), !dbg !2649
  store i64 16, ptr %end, align 8, !dbg !2650
  call void @llvm.dbg.declare(metadata ptr %.anon1043, metadata !2651, metadata !DIExpression()), !dbg !2654
  %579 = load ptr, ptr %allocation994, align 8, !dbg !2654
  %checknull1044 = icmp eq ptr %579, null, !dbg !2654
  %580 = call i1 @llvm.expect.i1(i1 %checknull1044, i1 false), !dbg !2654
  br i1 %580, label %panic1045, label %checkok1049, !dbg !2654

checkok1049:                                      ; preds = %if.exit1041
  %ptradd1050 = getelementptr inbounds i8, ptr %579, i64 16, !dbg !2654
  store ptr %ptradd1050, ptr %.anon1043, align 8, !dbg !2654
  call void @llvm.dbg.declare(metadata ptr %.anon1051, metadata !2655, metadata !DIExpression()), !dbg !2656
  store i64 0, ptr %.anon1051, align 8, !dbg !2656
  br label %loop.cond1052, !dbg !2656

loop.cond1052:                                    ; preds = %if.exit1076, %checkok1049
  %581 = load i64, ptr %.anon1051, align 8, !dbg !2656
  %gt = icmp ugt i64 16, %581, !dbg !2656
  br i1 %gt, label %loop.body1053, label %loop.exit1078, !dbg !2656

loop.body1053:                                    ; preds = %loop.cond1052
  call void @llvm.dbg.declare(metadata ptr %j, metadata !2657, metadata !DIExpression()), !dbg !2659
  %582 = load i64, ptr %.anon1051, align 8, !dbg !2659
  store i64 %582, ptr %j, align 8, !dbg !2659
  call void @llvm.dbg.declare(metadata ptr %val1054, metadata !2660, metadata !DIExpression()), !dbg !2661
  %583 = load ptr, ptr %.anon1043, align 8, !dbg !2662
  %checknull1055 = icmp eq ptr %583, null, !dbg !2662
  %584 = call i1 @llvm.expect.i1(i1 %checknull1055, i1 false), !dbg !2662
  br i1 %584, label %panic1056, label %checkok1060, !dbg !2662

checkok1060:                                      ; preds = %loop.body1053
  %585 = load i64, ptr %.anon1051, align 8, !dbg !2659
  %ge1061 = icmp uge i64 %585, 16, !dbg !2659
  %586 = call i1 @llvm.expect.i1(i1 %ge1061, i1 false), !dbg !2659
  br i1 %586, label %panic1062, label %checkok1072, !dbg !2659

checkok1072:                                      ; preds = %checkok1060
  %ptroffset1073 = getelementptr inbounds [8 x i8], ptr %583, i64 %585, !dbg !2659
  %587 = load ptr, ptr %ptroffset1073, align 8, !dbg !2659
  store ptr %587, ptr %val1054, align 8, !dbg !2659
  %588 = load ptr, ptr %val1054, align 8, !dbg !2663
  %not1074 = icmp eq ptr %588, null, !dbg !2663
  br i1 %not1074, label %if.then1075, label %if.exit1076, !dbg !2663

if.then1075:                                      ; preds = %checkok1072
  %589 = load i64, ptr %j, align 8, !dbg !2665
  store i64 %589, ptr %end, align 8, !dbg !2665
  br label %loop.exit1078, !dbg !2667

if.exit1076:                                      ; preds = %checkok1072
  %590 = load i64, ptr %.anon1051, align 8, !dbg !2656
  %addnuw1077 = add nuw i64 %590, 1, !dbg !2656
  store i64 %addnuw1077, ptr %.anon1051, align 8, !dbg !2656
  br label %loop.cond1052, !dbg !2656

loop.exit1078:                                    ; preds = %if.then1075, %loop.cond1052
  call void @llvm.dbg.declare(metadata ptr %list, metadata !2668, metadata !DIExpression()), !dbg !2669
  %591 = load ptr, ptr %allocation994, align 8, !dbg !2670
  %checknull1080 = icmp eq ptr %591, null, !dbg !2670
  %592 = call i1 @llvm.expect.i1(i1 %checknull1080, i1 false), !dbg !2670
  br i1 %592, label %panic1081, label %checkok1085, !dbg !2670

checkok1085:                                      ; preds = %loop.exit1078
  %ptradd1086 = getelementptr inbounds i8, ptr %591, i64 16, !dbg !2670
  %593 = load i64, ptr %end, align 8, !dbg !2671
  %sub = sub i64 %593, 1, !dbg !2671
  %gt1087 = icmp sgt i64 3, %sub, !dbg !2671
  %594 = call i1 @llvm.expect.i1(i1 %gt1087, i1 false), !dbg !2671
  br i1 %594, label %panic1088, label %checkok1098, !dbg !2671

checkok1098:                                      ; preds = %checkok1085
  %le = icmp sle i64 16, %sub, !dbg !2670
  %595 = call i1 @llvm.expect.i1(i1 %le, i1 false), !dbg !2670
  br i1 %595, label %panic1099, label %checkok1109, !dbg !2670

checkok1109:                                      ; preds = %checkok1098
  %596 = add i64 %sub, 1, !dbg !2670
  %size = sub i64 %596, 3, !dbg !2670
  %ptradd1110 = getelementptr inbounds i8, ptr %ptradd1086, i64 24, !dbg !2670
  %597 = insertvalue %"void*[]" undef, ptr %ptradd1110, 0, !dbg !2670
  %598 = insertvalue %"void*[]" %597, i64 %size, 1, !dbg !2670
  %599 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2672
  %not1111 = icmp eq ptr %599, null, !dbg !2672
  br i1 %not1111, label %if.then1112, label %if.exit1113, !dbg !2672

if.then1112:                                      ; preds = %checkok1109
  call void @std.core.mem.allocator.init_default_temp_allocators(), !dbg !2675
  br label %if.exit1113, !dbg !2675

if.exit1113:                                      ; preds = %if.then1112, %checkok1109
  %600 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2677
  %601 = insertvalue %any undef, ptr %600, 0, !dbg !2677
  %602 = insertvalue %any %601, i64 ptrtoint (ptr @"$ct.std.core.mem.allocator.TempAllocator" to i64), 1, !dbg !2677
  store %"void*[]" %598, ptr %indirectarg1115, align 8
  store %any %602, ptr %indirectarg1116, align 8
  %603 = call i64 @std.os.win32.symbolize_backtrace(ptr %retparam1114, ptr align 8 %indirectarg1115, ptr align 8 %indirectarg1116), !dbg !2678
  %not_err1117 = icmp eq i64 %603, 0, !dbg !2678
  %604 = call i1 @llvm.expect.i1(i1 %not_err1117, i1 true), !dbg !2678
  br i1 %604, label %after_check1119, label %assign_optional1118, !dbg !2678

assign_optional1118:                              ; preds = %if.exit1113
  store i64 %603, ptr %error_var1079, align 8, !dbg !2678
  br label %guard_block1120, !dbg !2678

after_check1119:                                  ; preds = %if.exit1113
  br label %noerr_block1121, !dbg !2678

guard_block1120:                                  ; preds = %assign_optional1118
  %605 = load ptr, ptr %current, align 8, !dbg !2679
  %606 = load i64, ptr %mark, align 8, !dbg !2679
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %605, i64 %606), !dbg !2681
  %607 = load i64, ptr %error_var1079, align 8, !dbg !2682
  ret i64 %607, !dbg !2682

noerr_block1121:                                  ; preds = %after_check1119
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %list, ptr align 8 %retparam1114, i32 40, i1 false), !dbg !2682
  %608 = load i64, ptr %i993, align 8, !dbg !2683
  %add1124 = add i64 %608, 1, !dbg !2683
  store i64 %add1124, ptr %taddr1125, align 8
  %609 = insertvalue %any undef, ptr %taddr1125, 0
  %610 = insertvalue %any %609, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %any %610, ptr %varargslots1123, align 16
  %611 = load ptr, ptr %allocation994, align 8, !dbg !2684
  %checknull1126 = icmp eq ptr %611, null, !dbg !2684
  %612 = call i1 @llvm.expect.i1(i1 %checknull1126, i1 false), !dbg !2684
  br i1 %612, label %panic1127, label %checkok1131, !dbg !2684

checkok1131:                                      ; preds = %noerr_block1121
  %ptradd1132 = getelementptr inbounds i8, ptr %611, i64 8, !dbg !2684
  %613 = insertvalue %any undef, ptr %ptradd1132, 0, !dbg !2684
  %614 = insertvalue %any %613, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !2684
  %ptradd1133 = getelementptr inbounds i8, ptr %varargslots1123, i64 16, !dbg !2684
  store %any %614, ptr %ptradd1133, align 16, !dbg !2684
  %615 = insertvalue %"any[]" undef, ptr %varargslots1123, 0, !dbg !2684
  %"$$temp1134" = insertvalue %"any[]" %615, i64 2, 1, !dbg !2684
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1136, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.131, i64 26 }, ptr %indirectarg1137, align 8
  store %"any[]" %"$$temp1134", ptr %indirectarg1138, align 8
  %616 = call i64 @std.io.fprintfn(ptr %retparam1135, ptr align 8 %indirectarg1136, ptr align 8 %indirectarg1137, ptr align 8 %indirectarg1138), !dbg !2685
  %not_err1139 = icmp eq i64 %616, 0, !dbg !2685
  %617 = call i1 @llvm.expect.i1(i1 %not_err1139, i1 true), !dbg !2685
  br i1 %617, label %after_check1141, label %assign_optional1140, !dbg !2685

assign_optional1140:                              ; preds = %checkok1131
  store i64 %616, ptr %error_var1122, align 8, !dbg !2685
  br label %guard_block1142, !dbg !2685

after_check1141:                                  ; preds = %checkok1131
  br label %noerr_block1143, !dbg !2685

guard_block1142:                                  ; preds = %assign_optional1140
  %618 = load ptr, ptr %current, align 8, !dbg !2686
  %619 = load i64, ptr %mark, align 8, !dbg !2686
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %618, i64 %619), !dbg !2688
  %620 = load i64, ptr %error_var1122, align 8, !dbg !2689
  ret i64 %620, !dbg !2689

noerr_block1143:                                  ; preds = %after_check1141
  call void @llvm.dbg.declare(metadata ptr %.anon1144, metadata !2690, metadata !DIExpression()), !dbg !2692
  %621 = call i64 @"std_collections_list$std.os.backtrace.Backtrace$.List.len"(ptr %list) #5, !dbg !2692
  store i64 %621, ptr %.anon1144, align 8, !dbg !2692
  call void @llvm.dbg.declare(metadata ptr %.anon1145, metadata !2690, metadata !DIExpression()), !dbg !2692
  store i64 0, ptr %.anon1145, align 8, !dbg !2692
  br label %loop.cond1146, !dbg !2692

loop.cond1146:                                    ; preds = %loop.inc, %noerr_block1143
  %622 = load i64, ptr %.anon1145, align 8, !dbg !2692
  %623 = load i64, ptr %.anon1144, align 8, !dbg !2692
  %lt1147 = icmp ult i64 %622, %623, !dbg !2692
  br i1 %lt1147, label %loop.body1148, label %loop.exit1192, !dbg !2692

loop.body1148:                                    ; preds = %loop.cond1146
  call void @llvm.dbg.declare(metadata ptr %trace1149, metadata !2693, metadata !DIExpression()), !dbg !2695
  store ptr %list, ptr %self1150, align 8
  %624 = load i64, ptr %.anon1145, align 8
  store i64 %624, ptr %index, align 8
  %625 = load ptr, ptr %self1150, align 8, !dbg !2696
  %checknull1151 = icmp eq ptr %625, null, !dbg !2696
  %626 = call i1 @llvm.expect.i1(i1 %checknull1151, i1 false), !dbg !2696
  br i1 %626, label %panic1152, label %checkok1156, !dbg !2696

checkok1156:                                      ; preds = %loop.body1148
  %ptradd1157 = getelementptr inbounds i8, ptr %625, i64 32, !dbg !2696
  %627 = load ptr, ptr %ptradd1157, align 8, !dbg !2696
  %628 = load i64, ptr %index, align 8, !dbg !2699
  %ptroffset1158 = getelementptr inbounds [88 x i8], ptr %627, i64 %628, !dbg !2699
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %trace1149, ptr align 8 %ptroffset1158, i32 88, i1 false), !dbg !2699
  %629 = call i8 @std.os.backtrace.Backtrace.has_file(ptr %trace1149), !dbg !2700
  %630 = trunc i8 %629 to i1, !dbg !2700
  br i1 %630, label %if.then1159, label %if.exit1173, !dbg !2700

if.then1159:                                      ; preds = %checkok1156
  %ptradd1161 = getelementptr inbounds i8, ptr %trace1149, i64 8, !dbg !2702
  %631 = insertvalue %any undef, ptr %ptradd1161, 0, !dbg !2702
  %632 = insertvalue %any %631, i64 ptrtoint (ptr @"$ct.String" to i64), 1, !dbg !2702
  store %any %632, ptr %varargslots1160, align 16, !dbg !2702
  %ptradd1162 = getelementptr inbounds i8, ptr %trace1149, i64 40, !dbg !2704
  %633 = insertvalue %any undef, ptr %ptradd1162, 0, !dbg !2704
  %634 = insertvalue %any %633, i64 ptrtoint (ptr @"$ct.String" to i64), 1, !dbg !2704
  %ptradd1163 = getelementptr inbounds i8, ptr %varargslots1160, i64 16, !dbg !2704
  store %any %634, ptr %ptradd1163, align 16, !dbg !2704
  %ptradd1164 = getelementptr inbounds i8, ptr %trace1149, i64 56, !dbg !2705
  %635 = insertvalue %any undef, ptr %ptradd1164, 0, !dbg !2705
  %636 = insertvalue %any %635, i64 ptrtoint (ptr @"$ct.uint" to i64), 1, !dbg !2705
  %ptradd1165 = getelementptr inbounds i8, ptr %varargslots1160, i64 32, !dbg !2705
  store %any %636, ptr %ptradd1165, align 16, !dbg !2705
  %637 = insertvalue %"any[]" undef, ptr %varargslots1160, 0, !dbg !2705
  %"$$temp1166" = insertvalue %"any[]" %637, i64 3, 1, !dbg !2705
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1168, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.133, i64 16 }, ptr %indirectarg1169, align 8
  store %"any[]" %"$$temp1166", ptr %indirectarg1170, align 8
  %638 = call i64 @std.io.fprintfn(ptr %retparam1167, ptr align 8 %indirectarg1168, ptr align 8 %indirectarg1169, ptr align 8 %indirectarg1170), !dbg !2706
  br label %loop.inc, !dbg !2707

if.exit1173:                                      ; preds = %checkok1156
  %639 = call i8 @std.os.backtrace.Backtrace.is_unknown(ptr %trace1149), !dbg !2708
  %640 = trunc i8 %639 to i1, !dbg !2708
  br i1 %640, label %if.then1174, label %if.exit1181, !dbg !2708

if.then1174:                                      ; preds = %if.exit1173
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1176, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.134, i64 19 }, ptr %indirectarg1177, align 8
  store %"any[]" zeroinitializer, ptr %indirectarg1178, align 8
  %641 = call i64 @std.io.fprintfn(ptr %retparam1175, ptr align 8 %indirectarg1176, ptr align 8 %indirectarg1177, ptr align 8 %indirectarg1178), !dbg !2709
  br label %loop.inc, !dbg !2711

if.exit1181:                                      ; preds = %if.exit1173
  %ptradd1183 = getelementptr inbounds i8, ptr %trace1149, i64 8, !dbg !2712
  %642 = insertvalue %any undef, ptr %ptradd1183, 0, !dbg !2712
  %643 = insertvalue %any %642, i64 ptrtoint (ptr @"$ct.String" to i64), 1, !dbg !2712
  store %any %643, ptr %varargslots1182, align 16, !dbg !2712
  %644 = insertvalue %"any[]" undef, ptr %varargslots1182, 0, !dbg !2712
  %"$$temp1184" = insertvalue %"any[]" %644, i64 1, 1, !dbg !2712
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1186, ptr align 8 %1, i32 16, i1 false)
  store %"char[]" { ptr @.str.135, i64 26 }, ptr %indirectarg1187, align 8
  store %"any[]" %"$$temp1184", ptr %indirectarg1188, align 8
  %645 = call i64 @std.io.fprintfn(ptr %retparam1185, ptr align 8 %indirectarg1186, ptr align 8 %indirectarg1187, ptr align 8 %indirectarg1188), !dbg !2713
  br label %loop.inc, !dbg !2713

loop.inc:                                         ; preds = %if.exit1181, %if.then1174, %if.then1159
  %646 = load i64, ptr %.anon1145, align 8, !dbg !2692
  %addnuw1191 = add nuw i64 %646, 1, !dbg !2692
  store i64 %addnuw1191, ptr %.anon1145, align 8, !dbg !2692
  br label %loop.cond1146, !dbg !2692

loop.exit1192:                                    ; preds = %loop.cond1146
  br label %loop.inc1193, !dbg !2692

loop.inc1193:                                     ; preds = %loop.exit1192, %noerr_block1040
  %647 = load i64, ptr %.anon989, align 8, !dbg !2627
  %addnuw1194 = add nuw i64 %647, 1, !dbg !2627
  store i64 %addnuw1194, ptr %.anon989, align 8, !dbg !2627
  br label %loop.cond990, !dbg !2627

loop.exit1195:                                    ; preds = %loop.cond990
  br label %if.exit1196, !dbg !2627

if.exit1196:                                      ; preds = %loop.exit1195, %noerr_block817
  %648 = load ptr, ptr %current, align 8, !dbg !2714
  %649 = load i64, ptr %mark, align 8, !dbg !2714
  call void @std.core.mem.allocator.TempAllocator.reset(ptr %648, i64 %649), !dbg !2716
  ret i64 0, !dbg !2717

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg2, align 8
  %650 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %650(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 121), !dbg !2322
  unreachable, !dbg !2322

panic3:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.53, i64 48 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.19, i64 6 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg6, align 8
  %651 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %651(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 542), !dbg !2346
  unreachable, !dbg !2346

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg12, align 8
  %652 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %652(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 129), !dbg !2350
  unreachable, !dbg !2350

panic18:                                          ; preds = %if.then16
  store i64 %12, ptr %taddr, align 8
  %653 = insertvalue %any undef, ptr %taddr, 0
  %654 = insertvalue %any %653, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 0, ptr %taddr19, align 8
  %655 = insertvalue %any undef, ptr %taddr19, 0
  %656 = insertvalue %any %655, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.9, i64 59 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg22, align 8
  store %any %654, ptr %varargslots, align 16
  %ptradd23 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %656, ptr %ptradd23, align 16
  %657 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %657, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg24, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 132, ptr align 8 %indirectarg24), !dbg !2354
  unreachable, !dbg !2354

panic180:                                         ; preds = %loop.body
  store i64 %114, ptr %taddr181, align 8
  %658 = insertvalue %any undef, ptr %taddr181, 0
  %659 = insertvalue %any %658, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %116, ptr %taddr182, align 8
  %660 = insertvalue %any undef, ptr %taddr182, 0
  %661 = insertvalue %any %660, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.9, i64 59 }, ptr %indirectarg183, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg184, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg185, align 8
  store %any %659, ptr %varargslots186, align 16
  %ptradd187 = getelementptr inbounds i8, ptr %varargslots186, i64 16
  store %any %661, ptr %ptradd187, align 16
  %662 = insertvalue %"any[]" undef, ptr %varargslots186, 0
  %"$$temp188" = insertvalue %"any[]" %662, i64 2, 1
  store %"any[]" %"$$temp188", ptr %indirectarg189, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg183, ptr align 8 %indirectarg184, ptr align 8 %indirectarg185, i32 136, ptr align 8 %indirectarg189), !dbg !2398
  unreachable, !dbg !2398

panic193:                                         ; preds = %checkok190
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg194, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg195, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg196, align 8
  %663 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %663(ptr align 8 %indirectarg194, ptr align 8 %indirectarg195, ptr align 8 %indirectarg196, i32 139), !dbg !2405
  unreachable, !dbg !2405

panic203:                                         ; preds = %checkok197
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg204, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg205, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg206, align 8
  %664 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %664(ptr align 8 %indirectarg204, ptr align 8 %indirectarg205, ptr align 8 %indirectarg206, i32 140), !dbg !2406
  unreachable, !dbg !2406

panic210:                                         ; preds = %checkok207
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg211, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg212, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg213, align 8
  %665 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %665(ptr align 8 %indirectarg211, ptr align 8 %indirectarg212, ptr align 8 %indirectarg213, i32 140), !dbg !2407
  unreachable, !dbg !2407

panic488:                                         ; preds = %loop.body483
  store i64 %283, ptr %taddr489, align 8
  %666 = insertvalue %any undef, ptr %taddr489, 0
  %667 = insertvalue %any %666, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %285, ptr %taddr490, align 8
  %668 = insertvalue %any undef, ptr %taddr490, 0
  %669 = insertvalue %any %668, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.9, i64 59 }, ptr %indirectarg491, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg492, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg493, align 8
  store %any %667, ptr %varargslots494, align 16
  %ptradd495 = getelementptr inbounds i8, ptr %varargslots494, i64 16
  store %any %669, ptr %ptradd495, align 16
  %670 = insertvalue %"any[]" undef, ptr %varargslots494, 0
  %"$$temp496" = insertvalue %"any[]" %670, i64 2, 1
  store %"any[]" %"$$temp496", ptr %indirectarg497, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg491, ptr align 8 %indirectarg492, ptr align 8 %indirectarg493, i32 149, ptr align 8 %indirectarg497), !dbg !2471
  unreachable, !dbg !2471

panic502:                                         ; preds = %checkok498
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg503, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg504, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg505, align 8
  %671 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %671(ptr align 8 %indirectarg503, ptr align 8 %indirectarg504, ptr align 8 %indirectarg505, i32 152), !dbg !2478
  unreachable, !dbg !2478

panic510:                                         ; preds = %checkok506
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg511, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg512, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg513, align 8
  %672 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %672(ptr align 8 %indirectarg511, ptr align 8 %indirectarg512, ptr align 8 %indirectarg513, i32 155), !dbg !2502
  unreachable, !dbg !2502

panic520:                                         ; preds = %if.then518
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg521, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg522, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg523, align 8
  %673 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %673(ptr align 8 %indirectarg521, ptr align 8 %indirectarg522, ptr align 8 %indirectarg523, i32 157), !dbg !2504
  unreachable, !dbg !2504

panic544:                                         ; preds = %if.exit540
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg545, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg546, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg547, align 8
  %674 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %674(ptr align 8 %indirectarg545, ptr align 8 %indirectarg546, ptr align 8 %indirectarg547, i32 160), !dbg !2516
  unreachable, !dbg !2516

panic551:                                         ; preds = %checkok548
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg552, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg553, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg554, align 8
  %675 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %675(ptr align 8 %indirectarg552, ptr align 8 %indirectarg553, ptr align 8 %indirectarg554, i32 161), !dbg !2517
  unreachable, !dbg !2517

panic783:                                         ; preds = %noerr_block779
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg784, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg785, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg786, align 8
  %676 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %676(ptr align 8 %indirectarg784, ptr align 8 %indirectarg785, ptr align 8 %indirectarg786, i32 173), !dbg !2576
  unreachable, !dbg !2576

panic802:                                         ; preds = %noerr_block798
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg803, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg804, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg805, align 8
  %677 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %677(ptr align 8 %indirectarg803, ptr align 8 %indirectarg804, ptr align 8 %indirectarg805, i32 174), !dbg !2582
  unreachable, !dbg !2582

panic997:                                         ; preds = %loop.body992
  store i64 %559, ptr %taddr998, align 8
  %678 = insertvalue %any undef, ptr %taddr998, 0
  %679 = insertvalue %any %678, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %561, ptr %taddr999, align 8
  %680 = insertvalue %any undef, ptr %taddr999, 0
  %681 = insertvalue %any %680, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.9, i64 59 }, ptr %indirectarg1000, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1001, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1002, align 8
  store %any %679, ptr %varargslots1003, align 16
  %ptradd1004 = getelementptr inbounds i8, ptr %varargslots1003, i64 16
  store %any %681, ptr %ptradd1004, align 16
  %682 = insertvalue %"any[]" undef, ptr %varargslots1003, 0
  %"$$temp1005" = insertvalue %"any[]" %682, i64 2, 1
  store %"any[]" %"$$temp1005", ptr %indirectarg1006, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg1000, ptr align 8 %indirectarg1001, ptr align 8 %indirectarg1002, i32 179, ptr align 8 %indirectarg1006), !dbg !2630
  unreachable, !dbg !2630

panic1010:                                        ; preds = %checkok1007
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg1011, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1012, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1013, align 8
  %683 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %683(ptr align 8 %indirectarg1011, ptr align 8 %indirectarg1012, ptr align 8 %indirectarg1013, i32 181), !dbg !2634
  unreachable, !dbg !2634

panic1024:                                        ; preds = %if.then1018
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg1025, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1026, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1027, align 8
  %684 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %684(ptr align 8 %indirectarg1025, ptr align 8 %indirectarg1026, ptr align 8 %indirectarg1027, i32 183), !dbg !2639
  unreachable, !dbg !2639

panic1045:                                        ; preds = %if.exit1041
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg1046, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1047, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1048, align 8
  %685 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %685(ptr align 8 %indirectarg1046, ptr align 8 %indirectarg1047, ptr align 8 %indirectarg1048, i32 188), !dbg !2654
  unreachable, !dbg !2654

panic1056:                                        ; preds = %loop.body1053
  store %"char[]" { ptr @.panic_msg.128, i64 61 }, ptr %indirectarg1057, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1058, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1059, align 8
  %686 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %686(ptr align 8 %indirectarg1057, ptr align 8 %indirectarg1058, ptr align 8 %indirectarg1059, i32 188), !dbg !2662
  unreachable, !dbg !2662

panic1062:                                        ; preds = %checkok1060
  store i64 16, ptr %taddr1063, align 8
  %687 = insertvalue %any undef, ptr %taddr1063, 0
  %688 = insertvalue %any %687, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %585, ptr %taddr1064, align 8
  %689 = insertvalue %any undef, ptr %taddr1064, 0
  %690 = insertvalue %any %689, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.9, i64 59 }, ptr %indirectarg1065, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1066, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1067, align 8
  store %any %688, ptr %varargslots1068, align 16
  %ptradd1069 = getelementptr inbounds i8, ptr %varargslots1068, i64 16
  store %any %690, ptr %ptradd1069, align 16
  %691 = insertvalue %"any[]" undef, ptr %varargslots1068, 0
  %"$$temp1070" = insertvalue %"any[]" %691, i64 2, 1
  store %"any[]" %"$$temp1070", ptr %indirectarg1071, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg1065, ptr align 8 %indirectarg1066, ptr align 8 %indirectarg1067, i32 188, ptr align 8 %indirectarg1071), !dbg !2659
  unreachable, !dbg !2659

panic1081:                                        ; preds = %loop.exit1078
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg1082, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1083, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1084, align 8
  %692 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %692(ptr align 8 %indirectarg1082, ptr align 8 %indirectarg1083, ptr align 8 %indirectarg1084, i32 196), !dbg !2670
  unreachable, !dbg !2670

panic1088:                                        ; preds = %checkok1085
  store i64 3, ptr %taddr1089, align 8
  %693 = insertvalue %any undef, ptr %taddr1089, 0
  %694 = insertvalue %any %693, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sub, ptr %taddr1090, align 8
  %695 = insertvalue %any undef, ptr %taddr1090, 0
  %696 = insertvalue %any %695, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.129, i64 44 }, ptr %indirectarg1091, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1092, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1093, align 8
  store %any %694, ptr %varargslots1094, align 16
  %ptradd1095 = getelementptr inbounds i8, ptr %varargslots1094, i64 16
  store %any %696, ptr %ptradd1095, align 16
  %697 = insertvalue %"any[]" undef, ptr %varargslots1094, 0
  %"$$temp1096" = insertvalue %"any[]" %697, i64 2, 1
  store %"any[]" %"$$temp1096", ptr %indirectarg1097, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg1091, ptr align 8 %indirectarg1092, ptr align 8 %indirectarg1093, i32 196, ptr align 8 %indirectarg1097), !dbg !2670
  unreachable, !dbg !2670

panic1099:                                        ; preds = %checkok1098
  store i64 %sub, ptr %taddr1100, align 8
  %698 = insertvalue %any undef, ptr %taddr1100, 0
  %699 = insertvalue %any %698, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 16, ptr %taddr1101, align 8
  %700 = insertvalue %any undef, ptr %taddr1101, 0
  %701 = insertvalue %any %700, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.130, i64 60 }, ptr %indirectarg1102, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1103, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1104, align 8
  store %any %699, ptr %varargslots1105, align 16
  %ptradd1106 = getelementptr inbounds i8, ptr %varargslots1105, i64 16
  store %any %701, ptr %ptradd1106, align 16
  %702 = insertvalue %"any[]" undef, ptr %varargslots1105, 0
  %"$$temp1107" = insertvalue %"any[]" %702, i64 2, 1
  store %"any[]" %"$$temp1107", ptr %indirectarg1108, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg1102, ptr align 8 %indirectarg1103, ptr align 8 %indirectarg1104, i32 196, ptr align 8 %indirectarg1108), !dbg !2670
  unreachable, !dbg !2670

panic1127:                                        ; preds = %noerr_block1121
  store %"char[]" { ptr @.panic_msg.98, i64 51 }, ptr %indirectarg1128, align 8
  store %"char[]" { ptr @.file.96, i64 21 }, ptr %indirectarg1129, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1130, align 8
  %703 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %703(ptr align 8 %indirectarg1128, ptr align 8 %indirectarg1129, ptr align 8 %indirectarg1130, i32 197), !dbg !2684
  unreachable, !dbg !2684

panic1152:                                        ; preds = %loop.body1148
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg1153, align 8
  store %"char[]" { ptr @.file.132, i64 7 }, ptr %indirectarg1154, align 8
  store %"char[]" { ptr @.func.107, i64 13 }, ptr %indirectarg1155, align 8
  %704 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %704(ptr align 8 %indirectarg1153, ptr align 8 %indirectarg1154, ptr align 8 %indirectarg1155, i32 366), !dbg !2696
  unreachable, !dbg !2696
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.NullAllocator.acquire(ptr %0, ptr %1, i64 %2, i32 %3, i64 %4) #0 comdat !dbg !2718 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %bytes = alloca i64, align 8
  %init_type = alloca i32, align 4
  %alignment = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !2722
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !2722
  br i1 %6, label %panic, label %checkok, !dbg !2722

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2723, metadata !DIExpression()), !dbg !2724
  store i64 %2, ptr %bytes, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes, metadata !2725, metadata !DIExpression()), !dbg !2726
  store i32 %3, ptr %init_type, align 4
  call void @llvm.dbg.declare(metadata ptr %init_type, metadata !2727, metadata !DIExpression()), !dbg !2728
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !2729, metadata !DIExpression()), !dbg !2730
  ret i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" to i64), !dbg !2731

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.12, i64 7 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 441), !dbg !2724
  unreachable, !dbg !2724
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.NullAllocator.resize(ptr %0, ptr %1, ptr %2, i64 %3, i64 %4) #0 comdat !dbg !2732 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_ptr = alloca ptr, align 8
  %new_bytes = alloca i64, align 8
  %alignment = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !2735
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !2735
  br i1 %6, label %panic, label %checkok, !dbg !2735

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2736, metadata !DIExpression()), !dbg !2737
  store ptr %2, ptr %old_ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %old_ptr, metadata !2738, metadata !DIExpression()), !dbg !2739
  store i64 %3, ptr %new_bytes, align 8
  call void @llvm.dbg.declare(metadata ptr %new_bytes, metadata !2740, metadata !DIExpression()), !dbg !2741
  store i64 %4, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !2742, metadata !DIExpression()), !dbg !2743
  ret i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" to i64), !dbg !2744

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.16, i64 6 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 446), !dbg !2737
  unreachable, !dbg !2737
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.NullAllocator.release(ptr %0, ptr %1, i8 zeroext %2) #0 comdat !dbg !2745 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %old_ptr = alloca ptr, align 8
  %aligned = alloca i8, align 1
  %3 = icmp eq ptr %0, null, !dbg !2748
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !2748
  br i1 %4, label %panic, label %checkok, !dbg !2748

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2749, metadata !DIExpression()), !dbg !2750
  store ptr %1, ptr %old_ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %old_ptr, metadata !2751, metadata !DIExpression()), !dbg !2752
  store i8 %2, ptr %aligned, align 1
  call void @llvm.dbg.declare(metadata ptr %aligned, metadata !2753, metadata !DIExpression()), !dbg !2754
  ret void

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.5, i64 7 }, ptr %indirectarg2, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 451), !dbg !2750
  unreachable, !dbg !2750
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.core.mem.allocator.alignment_for_allocation(i64 %0) #0 !dbg !2755 {
entry:
  %alignment = alloca i64, align 8
  store i64 %0, ptr %alignment, align 8
  call void @llvm.dbg.declare(metadata ptr %alignment, metadata !2758, metadata !DIExpression()), !dbg !2759
  %1 = load i64, ptr %alignment, align 8, !dbg !2760
  %gt = icmp ugt i64 16, %1, !dbg !2760
  br i1 %gt, label %cond.lhs, label %cond.rhs, !dbg !2760

cond.lhs:                                         ; preds = %entry
  br label %cond.phi, !dbg !2761

cond.rhs:                                         ; preds = %entry
  %2 = load i64, ptr %alignment, align 8, !dbg !2762
  br label %cond.phi, !dbg !2762

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i64 [ 16, %cond.lhs ], [ %2, %cond.rhs ], !dbg !2762
  ret i64 %val, !dbg !2762
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.clone_any(ptr noalias sret(%any) align 8 %0, ptr align 8 %1, ptr align 8 %2) #0 comdat !dbg !2763 {
entry:
  %size = alloca i64, align 8
  %data = alloca ptr, align 8
  %allocator = alloca %any, align 8
  %size2 = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator3 = alloca %any, align 8
  %size4 = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg12 = alloca %"any[]", align 8
  %dst = alloca ptr, align 8
  %src = alloca ptr, align 8
  %len = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %ptr = alloca ptr, align 8
  %type22 = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !2770
  call void @llvm.dbg.declare(metadata ptr %1, metadata !2771, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.declare(metadata ptr %2, metadata !2773, metadata !DIExpression()), !dbg !2774
  call void @llvm.dbg.declare(metadata ptr %size, metadata !2775, metadata !DIExpression()), !dbg !2776
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2770
  %3 = load i64, ptr %ptradd, align 8, !dbg !2770
  %"introspect*" = inttoptr i64 %3 to ptr, !dbg !2770
  %typeid.kind = load i8, ptr %"introspect*", align 8, !dbg !2770
  %ptradd1 = getelementptr inbounds i8, ptr %"introspect*", i64 24, !dbg !2770
  %typeid.size = load i64, ptr %ptradd1, align 8, !dbg !2770
  store i64 %typeid.size, ptr %size, align 8, !dbg !2770
  call void @llvm.dbg.declare(metadata ptr %data, metadata !2777, metadata !DIExpression()), !dbg !2778
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %1, i32 16, i1 false)
  %4 = load i64, ptr %size, align 8
  store i64 %4, ptr %size2, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator3, ptr align 8 %allocator, i32 16, i1 false)
  %5 = load i64, ptr %size2, align 8
  store i64 %5, ptr %size4, align 8
  %6 = load i64, ptr %size4, align 8, !dbg !2779
  %not = icmp eq i64 %6, 0, !dbg !2779
  br i1 %not, label %if.then, label %if.exit, !dbg !2779

if.then:                                          ; preds = %entry
  store ptr null, ptr %blockret, align 8, !dbg !2784
  br label %expr_block.exit, !dbg !2784

if.exit:                                          ; preds = %entry
  %ptradd5 = getelementptr inbounds i8, ptr %allocator3, i64 8, !dbg !2785
  %7 = load i64, ptr %ptradd5, align 8, !dbg !2785
  %8 = inttoptr i64 %7 to ptr, !dbg !2785
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !2770
  %9 = icmp eq ptr %8, %type, !dbg !2770
  br i1 %9, label %cache_hit, label %cache_miss, !dbg !2770

cache_miss:                                       ; preds = %if.exit
  %ptradd6 = getelementptr inbounds i8, ptr %8, i64 16, !dbg !2770
  %10 = load ptr, ptr %ptradd6, align 8, !dbg !2770
  %11 = call ptr @.dyn_search(ptr %10, ptr @"$sel.acquire"), !dbg !2770
  store ptr %11, ptr %.inlinecache, align 8, !dbg !2770
  store ptr %8, ptr %.cachedtype, align 8, !dbg !2770
  br label %12, !dbg !2770

cache_hit:                                        ; preds = %if.exit
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !2770
  br label %12, !dbg !2770

12:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %11, %cache_miss ], !dbg !2770
  %13 = icmp eq ptr %fn_phi, null, !dbg !2770
  br i1 %13, label %missing_function, label %match, !dbg !2770

missing_function:                                 ; preds = %12
  store %"char[]" { ptr @.panic_msg.38, i64 44 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.func.142, i64 9 }, ptr %indirectarg8, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg, ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, i32 68), !dbg !2787
  unreachable, !dbg !2787

match:                                            ; preds = %12
  %15 = load ptr, ptr %allocator3, align 8
  %16 = load i64, ptr %size4, align 8
  %17 = call i64 %fn_phi(ptr %retparam, ptr %15, i64 %16, i32 0, i64 0), !dbg !2787
  %not_err = icmp eq i64 %17, 0, !dbg !2787
  %18 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2787
  br i1 %18, label %after_check, label %assign_optional, !dbg !2787

assign_optional:                                  ; preds = %match
  store i64 %17, ptr %error_var, align 8, !dbg !2787
  br label %panic_block, !dbg !2787

after_check:                                      ; preds = %match
  %19 = load ptr, ptr %retparam, align 8, !dbg !2787
  store ptr %19, ptr %blockret, align 8, !dbg !2787
  br label %expr_block.exit, !dbg !2787

expr_block.exit:                                  ; preds = %after_check, %if.then
  br label %noerr_block, !dbg !2787

panic_block:                                      ; preds = %assign_optional
  %20 = insertvalue %any undef, ptr %error_var, 0, !dbg !2787
  %21 = insertvalue %any %20, i64 ptrtoint (ptr @"$ct.anyfault" to i64), 1, !dbg !2787
  store %"char[]" { ptr @.panic_msg.84, i64 36 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.142, i64 9 }, ptr %indirectarg11, align 8
  store %any %21, ptr %varargslots, align 16
  %22 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %22, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg12, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 57, ptr align 8 %indirectarg12), !dbg !2781
  unreachable, !dbg !2781

noerr_block:                                      ; preds = %expr_block.exit
  %23 = load ptr, ptr %blockret, align 8, !dbg !2781
  store ptr %23, ptr %data, align 8, !dbg !2781
  %24 = load ptr, ptr %data, align 8
  store ptr %24, ptr %dst, align 8
  %25 = load ptr, ptr %2, align 8
  store ptr %25, ptr %src, align 8
  %26 = load i64, ptr %size, align 8
  store i64 %26, ptr %len, align 8
  %27 = load i64, ptr %len, align 8, !dbg !2788
  %eq = icmp eq i64 0, %27, !dbg !2788
  br i1 %eq, label %or.phi, label %or.rhs, !dbg !2788

or.rhs:                                           ; preds = %noerr_block
  %28 = load ptr, ptr %dst, align 8, !dbg !2792
  %29 = load i64, ptr %len, align 8, !dbg !2793
  %ptradd_any = getelementptr i8, ptr %28, i64 %29, !dbg !2793
  %30 = load ptr, ptr %src, align 8, !dbg !2794
  %le = icmp ule ptr %ptradd_any, %30, !dbg !2792
  br label %or.phi, !dbg !2792

or.phi:                                           ; preds = %or.rhs, %noerr_block
  %val = phi i1 [ true, %noerr_block ], [ %le, %or.rhs ], !dbg !2792
  br i1 %val, label %or.phi16, label %or.rhs13, !dbg !2792

or.rhs13:                                         ; preds = %or.phi
  %31 = load ptr, ptr %src, align 8, !dbg !2795
  %32 = load i64, ptr %len, align 8, !dbg !2796
  %ptradd_any14 = getelementptr i8, ptr %31, i64 %32, !dbg !2796
  %33 = load ptr, ptr %dst, align 8, !dbg !2797
  %le15 = icmp ule ptr %ptradd_any14, %33, !dbg !2795
  br label %or.phi16, !dbg !2795

or.phi16:                                         ; preds = %or.rhs13, %or.phi
  %val17 = phi i1 [ true, %or.phi ], [ %le15, %or.rhs13 ], !dbg !2795
  br i1 %val17, label %assert_ok, label %assert_fail, !dbg !2795

assert_fail:                                      ; preds = %or.phi16
  store %"char[]" { ptr @.panic_msg.18, i64 95 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.19, i64 6 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.142, i64 9 }, ptr %indirectarg20, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 309), !dbg !2788
  unreachable, !dbg !2788

assert_ok:                                        ; preds = %or.phi16
  %35 = load ptr, ptr %dst, align 8, !dbg !2798
  %36 = load ptr, ptr %src, align 8, !dbg !2799
  %37 = load i64, ptr %len, align 8, !dbg !2800
  call void @llvm.memcpy.p0.p0.i64(ptr %35, ptr %36, i64 %37, i1 false), !dbg !2801
  %38 = load ptr, ptr %data, align 8
  store ptr %38, ptr %ptr, align 8
  %ptradd21 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2802
  %39 = load i64, ptr %ptradd21, align 8
  store i64 %39, ptr %type22, align 8
  %40 = load ptr, ptr %ptr, align 8, !dbg !2803
  %41 = load i64, ptr %type22, align 8, !dbg !2806
  %42 = insertvalue %any undef, ptr %40, 0, !dbg !2806
  %43 = insertvalue %any %42, i64 %41, 1, !dbg !2806
  store %any %43, ptr %0, align 8, !dbg !2806
  ret void, !dbg !2806
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.init_default_temp_allocators() #0 comdat !dbg !2807 {
entry:
  %allocator = alloca %any, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %indirectarg = alloca %any, align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg4 = alloca %"any[]", align 8
  %allocator5 = alloca %any, align 8
  %error_var6 = alloca i64, align 8
  %retparam7 = alloca ptr, align 8
  %indirectarg8 = alloca %any, align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %varargslots16 = alloca [1 x %any], align 16
  %indirectarg18 = alloca %"any[]", align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 @std.core.mem.allocator.temp_base_allocator, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 8 %allocator, i32 16, i1 false)
  %0 = call i64 @std.core.mem.allocator.new_temp_allocator(ptr %retparam, i64 262144, ptr align 8 %indirectarg), !dbg !2810
  %not_err = icmp eq i64 %0, 0, !dbg !2810
  %1 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2810
  br i1 %1, label %after_check, label %assign_optional, !dbg !2810

assign_optional:                                  ; preds = %entry
  store i64 %0, ptr %error_var, align 8, !dbg !2810
  br label %panic_block, !dbg !2810

after_check:                                      ; preds = %entry
  br label %noerr_block, !dbg !2810

panic_block:                                      ; preds = %assign_optional
  %2 = insertvalue %any undef, ptr %error_var, 0, !dbg !2810
  %3 = insertvalue %any %2, i64 ptrtoint (ptr @"$ct.anyfault" to i64), 1, !dbg !2810
  store %"char[]" { ptr @.panic_msg.84, i64 36 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg2, align 8
  store %"char[]" { ptr @.func.143, i64 28 }, ptr %indirectarg3, align 8
  store %any %3, ptr %varargslots, align 16
  %4 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %4, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg4, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, ptr align 8 %indirectarg3, i32 382, ptr align 8 %indirectarg4), !dbg !2810
  unreachable, !dbg !2810

noerr_block:                                      ; preds = %after_check
  %5 = load ptr, ptr %retparam, align 8, !dbg !2810
  store ptr %5, ptr @std.core.mem.allocator.temp_allocator_pair, align 8, !dbg !2810
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator5, ptr align 8 @std.core.mem.allocator.temp_base_allocator, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg8, ptr align 8 %allocator5, i32 16, i1 false)
  %6 = call i64 @std.core.mem.allocator.new_temp_allocator(ptr %retparam7, i64 262144, ptr align 8 %indirectarg8), !dbg !2813
  %not_err9 = icmp eq i64 %6, 0, !dbg !2813
  %7 = call i1 @llvm.expect.i1(i1 %not_err9, i1 true), !dbg !2813
  br i1 %7, label %after_check11, label %assign_optional10, !dbg !2813

assign_optional10:                                ; preds = %noerr_block
  store i64 %6, ptr %error_var6, align 8, !dbg !2813
  br label %panic_block12, !dbg !2813

after_check11:                                    ; preds = %noerr_block
  br label %noerr_block19, !dbg !2813

panic_block12:                                    ; preds = %assign_optional10
  %8 = insertvalue %any undef, ptr %error_var6, 0, !dbg !2813
  %9 = insertvalue %any %8, i64 ptrtoint (ptr @"$ct.anyfault" to i64), 1, !dbg !2813
  store %"char[]" { ptr @.panic_msg.84, i64 36 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.143, i64 28 }, ptr %indirectarg15, align 8
  store %any %9, ptr %varargslots16, align 16
  %10 = insertvalue %"any[]" undef, ptr %varargslots16, 0
  %"$$temp17" = insertvalue %"any[]" %10, i64 1, 1
  store %"any[]" %"$$temp17", ptr %indirectarg18, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 382, ptr align 8 %indirectarg18), !dbg !2813
  unreachable, !dbg !2813

noerr_block19:                                    ; preds = %after_check11
  %11 = load ptr, ptr %retparam7, align 8, !dbg !2813
  store ptr %11, ptr getelementptr inbounds (i8, ptr @std.core.mem.allocator.temp_allocator_pair, i64 8), align 8, !dbg !2813
  %12 = load ptr, ptr @std.core.mem.allocator.temp_allocator_pair, align 8, !dbg !2816
  store ptr %12, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2816
  ret void, !dbg !2816
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.core.mem.allocator.destroy_temp_allocators() #0 comdat !dbg !2817 {
entry:
  %0 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2818
  %not = icmp eq ptr %0, null, !dbg !2818
  br i1 %not, label %if.then, label %if.exit, !dbg !2818

if.then:                                          ; preds = %entry
  ret void, !dbg !2819

if.exit:                                          ; preds = %entry
  %1 = load ptr, ptr @std.core.mem.allocator.temp_allocator_pair, align 8, !dbg !2820
  call void @std.core.mem.allocator.TempAllocator.destroy(ptr %1), !dbg !2821
  %2 = load ptr, ptr getelementptr inbounds (i8, ptr @std.core.mem.allocator.temp_allocator_pair, i64 8), align 8, !dbg !2822
  call void @std.core.mem.allocator.TempAllocator.destroy(ptr %2), !dbg !2823
  store ptr null, ptr @std.core.mem.allocator.temp_allocator_pair, align 8, !dbg !2824
  store ptr null, ptr getelementptr inbounds (i8, ptr @std.core.mem.allocator.temp_allocator_pair, i64 8), align 8, !dbg !2824
  store ptr null, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2825
  ret void, !dbg !2825
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.core.mem.allocator.temp_allocator_next() #0 comdat !dbg !2826 {
entry:
  %index = alloca i64, align 8
  %taddr = alloca i64, align 8
  %taddr1 = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg4 = alloca %"any[]", align 8
  %0 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2829
  %not = icmp eq ptr %0, null, !dbg !2829
  br i1 %not, label %if.then, label %if.exit, !dbg !2829

if.then:                                          ; preds = %entry
  call void @std.core.mem.allocator.init_default_temp_allocators(), !dbg !2830
  %1 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2832
  ret ptr %1, !dbg !2832

if.exit:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata ptr %index, metadata !2833, metadata !DIExpression()), !dbg !2834
  %2 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2835
  %3 = load ptr, ptr @std.core.mem.allocator.temp_allocator_pair, align 8, !dbg !2836
  %eq = icmp eq ptr %2, %3, !dbg !2835
  %ternary = select i1 %eq, i64 1, i64 0, !dbg !2837
  store i64 %ternary, ptr %index, align 8, !dbg !2837
  %4 = load i64, ptr %index, align 8, !dbg !2838
  %ge = icmp uge i64 %4, 2, !dbg !2838
  %5 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2838
  br i1 %5, label %panic, label %checkok, !dbg !2838

checkok:                                          ; preds = %if.exit
  %ptroffset = getelementptr inbounds [8 x i8], ptr @std.core.mem.allocator.temp_allocator_pair, i64 %4, !dbg !2838
  %6 = load ptr, ptr %ptroffset, align 8, !dbg !2838
  store ptr %6, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !2838
  ret ptr %6, !dbg !2838

panic:                                            ; preds = %if.exit
  store i64 2, ptr %taddr, align 8
  %7 = insertvalue %any undef, ptr %taddr, 0
  %8 = insertvalue %any %7, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %4, ptr %taddr1, align 8
  %9 = insertvalue %any undef, ptr %taddr1, 0
  %10 = insertvalue %any %9, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.9, i64 59 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.25, i64 16 }, ptr %indirectarg2, align 8
  store %"char[]" { ptr @.func.144, i64 19 }, ptr %indirectarg3, align 8
  store %any %8, ptr %varargslots, align 16
  %ptradd = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %10, ptr %ptradd, align 16
  %11 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %11, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg4, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg, ptr align 8 %indirectarg2, ptr align 8 %indirectarg3, i32 435, ptr align 8 %indirectarg4), !dbg !2838
  unreachable, !dbg !2838
}

; Function Attrs: nounwind ssp uwtable
define internal void @std.core.mem.allocator.destroy_temp_allocators_after_exit() #0 !dbg !2839 {
entry:
  call void @std.core.mem.allocator.destroy_temp_allocators(), !dbg !2840
  ret void, !dbg !2840
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.core.mem.allocator.WasmMemory.allocate_block(ptr %0, ptr %1, i64 %2) #0 comdat !dbg !2841 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %bytes = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %bytes_required = alloca i64, align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %taddr = alloca ptr, align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %blocks_required = alloca i64, align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %reterr54 = alloca i64, align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %taddr63 = alloca ptr, align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %3 = icmp eq ptr %1, null, !dbg !2845
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !2845
  br i1 %4, label %panic, label %checkok, !dbg !2845

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2846, metadata !DIExpression()), !dbg !2847
  store i64 %2, ptr %bytes, align 8
  call void @llvm.dbg.declare(metadata ptr %bytes, metadata !2848, metadata !DIExpression()), !dbg !2849
  %5 = load ptr, ptr %self, align 8, !dbg !2850
  %checknull = icmp eq ptr %5, null, !dbg !2850
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2850
  br i1 %6, label %panic3, label %checkok7, !dbg !2850

checkok7:                                         ; preds = %checkok
  %7 = load i64, ptr %5, align 8, !dbg !2850
  %not = icmp eq i64 %7, 0, !dbg !2850
  br i1 %not, label %if.then, label %if.exit, !dbg !2850

if.then:                                          ; preds = %checkok7
  %8 = load ptr, ptr %self, align 8, !dbg !2851
  %checknull8 = icmp eq ptr %8, null, !dbg !2851
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !2851
  br i1 %9, label %panic9, label %checkok13, !dbg !2851

checkok13:                                        ; preds = %if.then
  store i64 0, ptr %8, align 8, !dbg !2853
  br label %if.exit, !dbg !2853

if.exit:                                          ; preds = %checkok13, %checkok7
  call void @llvm.dbg.declare(metadata ptr %bytes_required, metadata !2854, metadata !DIExpression()), !dbg !2856
  %10 = load i64, ptr %bytes, align 8, !dbg !2857
  %11 = load ptr, ptr %self, align 8, !dbg !2858
  %checknull14 = icmp eq ptr %11, null, !dbg !2858
  %12 = call i1 @llvm.expect.i1(i1 %checknull14, i1 false), !dbg !2858
  br i1 %12, label %panic15, label %checkok19, !dbg !2858

checkok19:                                        ; preds = %if.exit
  %ptradd = getelementptr inbounds i8, ptr %11, i64 8, !dbg !2858
  %13 = load i64, ptr %ptradd, align 8, !dbg !2858
  %add = add i64 %10, %13, !dbg !2857
  %14 = load ptr, ptr %self, align 8, !dbg !2859
  %checknull20 = icmp eq ptr %14, null, !dbg !2859
  %15 = call i1 @llvm.expect.i1(i1 %checknull20, i1 false), !dbg !2859
  br i1 %15, label %panic21, label %checkok25, !dbg !2859

checkok25:                                        ; preds = %checkok19
  %16 = load i64, ptr %14, align 8, !dbg !2859
  %sub = sub i64 %add, %16, !dbg !2857
  store i64 %sub, ptr %bytes_required, align 8, !dbg !2857
  %17 = load i64, ptr %bytes_required, align 8, !dbg !2860
  %le = icmp sle i64 %17, 0, !dbg !2860
  br i1 %le, label %if.then26, label %if.exit43, !dbg !2860

if.then26:                                        ; preds = %checkok25
  %18 = load ptr, ptr %self, align 8, !dbg !2861
  %checknull27 = icmp eq ptr %18, null, !dbg !2861
  %19 = call i1 @llvm.expect.i1(i1 %checknull27, i1 false), !dbg !2861
  br i1 %19, label %panic28, label %checkok32, !dbg !2861

checkok32:                                        ; preds = %if.then26
  %ptradd33 = getelementptr inbounds i8, ptr %18, i64 8, !dbg !2861
  %20 = load i64, ptr %ptradd33, align 8, !dbg !2861
  %intptr = inttoptr i64 %20 to ptr, !dbg !2861
  store ptr %intptr, ptr %taddr, align 8
  %21 = load ptr, ptr %taddr, align 8
  %22 = load i64, ptr %bytes, align 8, !dbg !2863
  %add34 = add i64 0, %22, !dbg !2863
  %size = sub i64 %add34, 0, !dbg !2863
  %23 = insertvalue %"char[]" undef, ptr %21, 0, !dbg !2863
  %24 = insertvalue %"char[]" %23, i64 %size, 1, !dbg !2863
  %25 = load ptr, ptr %self, align 8, !dbg !2864
  %checknull35 = icmp eq ptr %25, null, !dbg !2864
  %26 = call i1 @llvm.expect.i1(i1 %checknull35, i1 false), !dbg !2864
  br i1 %26, label %panic36, label %checkok40, !dbg !2864

checkok40:                                        ; preds = %checkok32
  %ptradd41 = getelementptr inbounds i8, ptr %25, i64 8, !dbg !2864
  %27 = load i64, ptr %ptradd41, align 8, !dbg !2864
  %28 = load i64, ptr %bytes, align 8, !dbg !2866
  %add42 = add i64 %27, %28, !dbg !2864
  store i64 %add42, ptr %ptradd41, align 8, !dbg !2864
  store %"char[]" %24, ptr %0, align 8, !dbg !2864
  ret i64 0, !dbg !2864

if.exit43:                                        ; preds = %checkok25
  call void @llvm.dbg.declare(metadata ptr %blocks_required, metadata !2867, metadata !DIExpression()), !dbg !2868
  %29 = load i64, ptr %bytes_required, align 8, !dbg !2869
  %add44 = add i64 %29, 65536, !dbg !2869
  %add45 = add i64 %add44, 1, !dbg !2869
  %sdiv = sdiv i64 %add45, 65536, !dbg !2869
  store i64 %sdiv, ptr %blocks_required, align 8, !dbg !2869
  br label %if.then46, !dbg !2870

if.then46:                                        ; preds = %if.exit43
  ret i64 ptrtoint (ptr @"std.core.mem.allocator.AllocationFailure$OUT_OF_MEMORY" to i64), !dbg !2871

if.exit47:                                        ; No predecessors!
  %30 = load ptr, ptr %self, align 8, !dbg !2872
  %checknull48 = icmp eq ptr %30, null, !dbg !2872
  %31 = call i1 @llvm.expect.i1(i1 %checknull48, i1 false), !dbg !2872
  br i1 %31, label %panic49, label %checkok53, !dbg !2872

checkok53:                                        ; preds = %if.exit47
  store i64 0, ptr %30, align 8, !dbg !2873
  %32 = load ptr, ptr %self, align 8, !dbg !2874
  %checknull55 = icmp eq ptr %32, null, !dbg !2874
  %33 = call i1 @llvm.expect.i1(i1 %checknull55, i1 false), !dbg !2874
  br i1 %33, label %panic56, label %checkok60, !dbg !2874

checkok60:                                        ; preds = %checkok53
  %ptradd61 = getelementptr inbounds i8, ptr %32, i64 8, !dbg !2874
  %34 = load i64, ptr %ptradd61, align 8, !dbg !2874
  %intptr62 = inttoptr i64 %34 to ptr, !dbg !2874
  store ptr %intptr62, ptr %taddr63, align 8
  %35 = load ptr, ptr %taddr63, align 8
  %36 = load i64, ptr %bytes, align 8, !dbg !2875
  %add64 = add i64 0, %36, !dbg !2875
  %size65 = sub i64 %add64, 0, !dbg !2875
  %37 = insertvalue %"char[]" undef, ptr %35, 0, !dbg !2875
  %38 = insertvalue %"char[]" %37, i64 %size65, 1, !dbg !2875
  %39 = load ptr, ptr %self, align 8, !dbg !2876
  %checknull66 = icmp eq ptr %39, null, !dbg !2876
  %40 = call i1 @llvm.expect.i1(i1 %checknull66, i1 false), !dbg !2876
  br i1 %40, label %panic67, label %checkok71, !dbg !2876

checkok71:                                        ; preds = %checkok60
  %ptradd72 = getelementptr inbounds i8, ptr %39, i64 8, !dbg !2876
  %41 = load i64, ptr %ptradd72, align 8, !dbg !2876
  %42 = load i64, ptr %bytes, align 8, !dbg !2878
  %add73 = add i64 %41, %42, !dbg !2876
  store i64 %add73, ptr %ptradd72, align 8, !dbg !2876
  store %"char[]" %38, ptr %0, align 8, !dbg !2876
  ret i64 0, !dbg !2876

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.146, i64 14 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.147, i64 14 }, ptr %indirectarg2, align 8
  %43 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %43(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 14), !dbg !2847
  unreachable, !dbg !2847

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.146, i64 14 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.147, i64 14 }, ptr %indirectarg6, align 8
  %44 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %44(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 16), !dbg !2850
  unreachable, !dbg !2850

panic9:                                           ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.146, i64 14 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.147, i64 14 }, ptr %indirectarg12, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 18), !dbg !2851
  unreachable, !dbg !2851

panic15:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.146, i64 14 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func.147, i64 14 }, ptr %indirectarg18, align 8
  %46 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %46(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 20), !dbg !2858
  unreachable, !dbg !2858

panic21:                                          ; preds = %checkok19
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.file.146, i64 14 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.func.147, i64 14 }, ptr %indirectarg24, align 8
  %47 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %47(ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, i32 20), !dbg !2859
  unreachable, !dbg !2859

panic28:                                          ; preds = %if.then26
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.file.146, i64 14 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.func.147, i64 14 }, ptr %indirectarg31, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, i32 24), !dbg !2861
  unreachable, !dbg !2861

panic36:                                          ; preds = %checkok32
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.file.146, i64 14 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.func.147, i64 14 }, ptr %indirectarg39, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, i32 23), !dbg !2864
  unreachable, !dbg !2864

panic49:                                          ; preds = %if.exit47
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.file.146, i64 14 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.func.147, i64 14 }, ptr %indirectarg52, align 8
  %50 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %50(ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, i32 29), !dbg !2872
  unreachable, !dbg !2872

panic56:                                          ; preds = %checkok53
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.file.146, i64 14 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.func.147, i64 14 }, ptr %indirectarg59, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, i32 31), !dbg !2874
  unreachable, !dbg !2874

panic67:                                          ; preds = %checkok60
  store %"char[]" { ptr @.panic_msg.3, i64 45 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.file.146, i64 14 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.func.147, i64 14 }, ptr %indirectarg70, align 8
  %52 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %52(ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, i32 30), !dbg !2876
  unreachable, !dbg !2876
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
declare void @std.core.builtin.panicf(ptr align 8, ptr align 8, ptr align 8, i32, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @std.core.mem.aligned_offset(i64, i64) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @std.core.mem.ptr_is_aligned(ptr, i64) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3

define weak ptr @.dyn_search(ptr %0, ptr %1) unnamed_addr comdat {
entry:
  br label %check

check:                                            ; preds = %no_match, %entry
  %2 = phi ptr [ %0, %entry ], [ %9, %no_match ]
  %3 = icmp eq ptr %2, null
  br i1 %3, label %missing_function, label %compare

missing_function:                                 ; preds = %check
  ret ptr null

compare:                                          ; preds = %check
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %match, label %no_match

match:                                            ; preds = %compare
  %7 = load ptr, ptr %2, align 8
  ret ptr %7

no_match:                                         ; preds = %compare
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %9 = load ptr, ptr %8, align 8
  br label %check
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #2

; Function Attrs: nounwind ssp uwtable
declare void @std.core.String.copy(ptr noalias sret(%"char[]") align 8, ptr align 8, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @std.io.Formatter.print(ptr, ptr, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare ptr @_aligned_recalloc(ptr, i64, i64, i64) #0

; Function Attrs: nounwind ssp uwtable
declare ptr @calloc(i64, i64) #0

; Function Attrs: nounwind ssp uwtable
declare ptr @_aligned_malloc(i64, i64) #0

; Function Attrs: nounwind ssp uwtable
declare ptr @malloc(i64) #0

; Function Attrs: nounwind ssp uwtable
declare ptr @_aligned_realloc(ptr, i64, i64) #0

; Function Attrs: nounwind ssp uwtable
declare ptr @realloc(ptr, i64) #0

; Function Attrs: nounwind ssp uwtable
declare void @_aligned_free(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare ptr @free(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @std.io.fprintf(ptr, ptr align 8, ptr align 8, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare ptr @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.new_init"(ptr, i32, float, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare void @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.free"(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare void @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.value_tlist"(ptr noalias sret(%"Allocation[]") align 8, ptr) #0

; Function Attrs: nounwind ssp uwtable
declare void @std.os.backtrace.capture_current(ptr noalias sret(%"void*[]") align 8, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.set"(ptr, i64, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.remove"(ptr, i64) #0

; Function Attrs: nounwind ssp uwtable
declare void @"std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap.clear"(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare ptr @std.io.stdout() #0

; Function Attrs: nounwind ssp uwtable
declare i64 @std.io.fprintfn(ptr, ptr align 8, ptr align 8, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare void @"std_collections_list$std.os.backtrace.Backtrace$.List.get"(ptr noalias sret(%Backtrace) align 8, ptr, i64) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @std.os.win32.symbolize_backtrace(ptr, ptr align 8, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @"std_collections_list$std.os.backtrace.Backtrace$.List.len"(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @std.os.backtrace.Backtrace.has_file(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @std.os.backtrace.Backtrace.is_unknown(ptr) #0

declare void @atexit(ptr)

define void @.__c3_atexit_std.core.mem.allocator.destroy_temp_allocators_after_exit() {
entry:
  call void @atexit(ptr @std.core.mem.allocator.destroy_temp_allocators_after_exit)
  ret void
}

define internal void @.c3_dynamic_register() align 8 {
entry:
  %next_val = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.release", i32 0, i32 2), align 8
  %0 = icmp eq ptr %next_val, inttoptr (i64 -1 to ptr)
  br i1 %0, label %dtable_check, label %dtable_skip

dtable_check:                                     ; preds = %dtable_check, %entry
  %dtable_ref = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.ArenaAllocator", i32 0, i32 2), %entry ], [ %next_dtable_ref, %dtable_check ]
  %dtable_ptr = load ptr, ptr %dtable_ref, align 8
  %1 = icmp eq ptr %dtable_ptr, null
  %next_dtable_ref = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr, i32 0, i32 2
  br i1 %1, label %dtable_found, label %dtable_check

dtable_found:                                     ; preds = %dtable_check
  store ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.release", ptr %dtable_ref, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.release", i32 0, i32 2), align 8
  br label %dtable_skip

dtable_skip:                                      ; preds = %dtable_found, %entry
  %next_val1 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.mark", i32 0, i32 2), align 8
  %2 = icmp eq ptr %next_val1, inttoptr (i64 -1 to ptr)
  br i1 %2, label %dtable_check2, label %dtable_skip7

dtable_check2:                                    ; preds = %dtable_check2, %dtable_skip
  %dtable_ref3 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.ArenaAllocator", i32 0, i32 2), %dtable_skip ], [ %next_dtable_ref5, %dtable_check2 ]
  %dtable_ptr4 = load ptr, ptr %dtable_ref3, align 8
  %3 = icmp eq ptr %dtable_ptr4, null
  %next_dtable_ref5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr4, i32 0, i32 2
  br i1 %3, label %dtable_found6, label %dtable_check2

dtable_found6:                                    ; preds = %dtable_check2
  store ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.mark", ptr %dtable_ref3, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.mark", i32 0, i32 2), align 8
  br label %dtable_skip7

dtable_skip7:                                     ; preds = %dtable_found6, %dtable_skip
  %next_val8 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.reset", i32 0, i32 2), align 8
  %4 = icmp eq ptr %next_val8, inttoptr (i64 -1 to ptr)
  br i1 %4, label %dtable_check9, label %dtable_skip14

dtable_check9:                                    ; preds = %dtable_check9, %dtable_skip7
  %dtable_ref10 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.ArenaAllocator", i32 0, i32 2), %dtable_skip7 ], [ %next_dtable_ref12, %dtable_check9 ]
  %dtable_ptr11 = load ptr, ptr %dtable_ref10, align 8
  %5 = icmp eq ptr %dtable_ptr11, null
  %next_dtable_ref12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr11, i32 0, i32 2
  br i1 %5, label %dtable_found13, label %dtable_check9

dtable_found13:                                   ; preds = %dtable_check9
  store ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.reset", ptr %dtable_ref10, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.reset", i32 0, i32 2), align 8
  br label %dtable_skip14

dtable_skip14:                                    ; preds = %dtable_found13, %dtable_skip7
  %next_val15 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.acquire", i32 0, i32 2), align 8
  %6 = icmp eq ptr %next_val15, inttoptr (i64 -1 to ptr)
  br i1 %6, label %dtable_check16, label %dtable_skip21

dtable_check16:                                   ; preds = %dtable_check16, %dtable_skip14
  %dtable_ref17 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.ArenaAllocator", i32 0, i32 2), %dtable_skip14 ], [ %next_dtable_ref19, %dtable_check16 ]
  %dtable_ptr18 = load ptr, ptr %dtable_ref17, align 8
  %7 = icmp eq ptr %dtable_ptr18, null
  %next_dtable_ref19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr18, i32 0, i32 2
  br i1 %7, label %dtable_found20, label %dtable_check16

dtable_found20:                                   ; preds = %dtable_check16
  store ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.acquire", ptr %dtable_ref17, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.acquire", i32 0, i32 2), align 8
  br label %dtable_skip21

dtable_skip21:                                    ; preds = %dtable_found20, %dtable_skip14
  %next_val22 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.resize", i32 0, i32 2), align 8
  %8 = icmp eq ptr %next_val22, inttoptr (i64 -1 to ptr)
  br i1 %8, label %dtable_check23, label %dtable_skip28

dtable_check23:                                   ; preds = %dtable_check23, %dtable_skip21
  %dtable_ref24 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.ArenaAllocator", i32 0, i32 2), %dtable_skip21 ], [ %next_dtable_ref26, %dtable_check23 ]
  %dtable_ptr25 = load ptr, ptr %dtable_ref24, align 8
  %9 = icmp eq ptr %dtable_ptr25, null
  %next_dtable_ref26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr25, i32 0, i32 2
  br i1 %9, label %dtable_found27, label %dtable_check23

dtable_found27:                                   ; preds = %dtable_check23
  store ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.resize", ptr %dtable_ref24, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.ArenaAllocator.resize", i32 0, i32 2), align 8
  br label %dtable_skip28

dtable_skip28:                                    ; preds = %dtable_found27, %dtable_skip21
  %next_val29 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.release", i32 0, i32 2), align 8
  %10 = icmp eq ptr %next_val29, inttoptr (i64 -1 to ptr)
  br i1 %10, label %dtable_check30, label %dtable_skip35

dtable_check30:                                   ; preds = %dtable_check30, %dtable_skip28
  %dtable_ref31 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.DynamicArenaAllocator", i32 0, i32 2), %dtable_skip28 ], [ %next_dtable_ref33, %dtable_check30 ]
  %dtable_ptr32 = load ptr, ptr %dtable_ref31, align 8
  %11 = icmp eq ptr %dtable_ptr32, null
  %next_dtable_ref33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr32, i32 0, i32 2
  br i1 %11, label %dtable_found34, label %dtable_check30

dtable_found34:                                   ; preds = %dtable_check30
  store ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.release", ptr %dtable_ref31, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.release", i32 0, i32 2), align 8
  br label %dtable_skip35

dtable_skip35:                                    ; preds = %dtable_found34, %dtable_skip28
  %next_val36 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.resize", i32 0, i32 2), align 8
  %12 = icmp eq ptr %next_val36, inttoptr (i64 -1 to ptr)
  br i1 %12, label %dtable_check37, label %dtable_skip42

dtable_check37:                                   ; preds = %dtable_check37, %dtable_skip35
  %dtable_ref38 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.DynamicArenaAllocator", i32 0, i32 2), %dtable_skip35 ], [ %next_dtable_ref40, %dtable_check37 ]
  %dtable_ptr39 = load ptr, ptr %dtable_ref38, align 8
  %13 = icmp eq ptr %dtable_ptr39, null
  %next_dtable_ref40 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr39, i32 0, i32 2
  br i1 %13, label %dtable_found41, label %dtable_check37

dtable_found41:                                   ; preds = %dtable_check37
  store ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.resize", ptr %dtable_ref38, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.resize", i32 0, i32 2), align 8
  br label %dtable_skip42

dtable_skip42:                                    ; preds = %dtable_found41, %dtable_skip35
  %next_val43 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.reset", i32 0, i32 2), align 8
  %14 = icmp eq ptr %next_val43, inttoptr (i64 -1 to ptr)
  br i1 %14, label %dtable_check44, label %dtable_skip49

dtable_check44:                                   ; preds = %dtable_check44, %dtable_skip42
  %dtable_ref45 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.DynamicArenaAllocator", i32 0, i32 2), %dtable_skip42 ], [ %next_dtable_ref47, %dtable_check44 ]
  %dtable_ptr46 = load ptr, ptr %dtable_ref45, align 8
  %15 = icmp eq ptr %dtable_ptr46, null
  %next_dtable_ref47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr46, i32 0, i32 2
  br i1 %15, label %dtable_found48, label %dtable_check44

dtable_found48:                                   ; preds = %dtable_check44
  store ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.reset", ptr %dtable_ref45, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.reset", i32 0, i32 2), align 8
  br label %dtable_skip49

dtable_skip49:                                    ; preds = %dtable_found48, %dtable_skip42
  %next_val50 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.acquire", i32 0, i32 2), align 8
  %16 = icmp eq ptr %next_val50, inttoptr (i64 -1 to ptr)
  br i1 %16, label %dtable_check51, label %dtable_skip56

dtable_check51:                                   ; preds = %dtable_check51, %dtable_skip49
  %dtable_ref52 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.DynamicArenaAllocator", i32 0, i32 2), %dtable_skip49 ], [ %next_dtable_ref54, %dtable_check51 ]
  %dtable_ptr53 = load ptr, ptr %dtable_ref52, align 8
  %17 = icmp eq ptr %dtable_ptr53, null
  %next_dtable_ref54 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr53, i32 0, i32 2
  br i1 %17, label %dtable_found55, label %dtable_check51

dtable_found55:                                   ; preds = %dtable_check51
  store ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.acquire", ptr %dtable_ref52, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.DynamicArenaAllocator.acquire", i32 0, i32 2), align 8
  br label %dtable_skip56

dtable_skip56:                                    ; preds = %dtable_found55, %dtable_skip49
  %next_val57 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.acquire", i32 0, i32 2), align 8
  %18 = icmp eq ptr %next_val57, inttoptr (i64 -1 to ptr)
  br i1 %18, label %dtable_check58, label %dtable_skip63

dtable_check58:                                   ; preds = %dtable_check58, %dtable_skip56
  %dtable_ref59 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.SimpleHeapAllocator", i32 0, i32 2), %dtable_skip56 ], [ %next_dtable_ref61, %dtable_check58 ]
  %dtable_ptr60 = load ptr, ptr %dtable_ref59, align 8
  %19 = icmp eq ptr %dtable_ptr60, null
  %next_dtable_ref61 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr60, i32 0, i32 2
  br i1 %19, label %dtable_found62, label %dtable_check58

dtable_found62:                                   ; preds = %dtable_check58
  store ptr @"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.acquire", ptr %dtable_ref59, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.acquire", i32 0, i32 2), align 8
  br label %dtable_skip63

dtable_skip63:                                    ; preds = %dtable_found62, %dtable_skip56
  %next_val64 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.resize", i32 0, i32 2), align 8
  %20 = icmp eq ptr %next_val64, inttoptr (i64 -1 to ptr)
  br i1 %20, label %dtable_check65, label %dtable_skip70

dtable_check65:                                   ; preds = %dtable_check65, %dtable_skip63
  %dtable_ref66 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.SimpleHeapAllocator", i32 0, i32 2), %dtable_skip63 ], [ %next_dtable_ref68, %dtable_check65 ]
  %dtable_ptr67 = load ptr, ptr %dtable_ref66, align 8
  %21 = icmp eq ptr %dtable_ptr67, null
  %next_dtable_ref68 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr67, i32 0, i32 2
  br i1 %21, label %dtable_found69, label %dtable_check65

dtable_found69:                                   ; preds = %dtable_check65
  store ptr @"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.resize", ptr %dtable_ref66, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.resize", i32 0, i32 2), align 8
  br label %dtable_skip70

dtable_skip70:                                    ; preds = %dtable_found69, %dtable_skip63
  %next_val71 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.release", i32 0, i32 2), align 8
  %22 = icmp eq ptr %next_val71, inttoptr (i64 -1 to ptr)
  br i1 %22, label %dtable_check72, label %dtable_skip77

dtable_check72:                                   ; preds = %dtable_check72, %dtable_skip70
  %dtable_ref73 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.SimpleHeapAllocator", i32 0, i32 2), %dtable_skip70 ], [ %next_dtable_ref75, %dtable_check72 ]
  %dtable_ptr74 = load ptr, ptr %dtable_ref73, align 8
  %23 = icmp eq ptr %dtable_ptr74, null
  %next_dtable_ref75 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr74, i32 0, i32 2
  br i1 %23, label %dtable_found76, label %dtable_check72

dtable_found76:                                   ; preds = %dtable_check72
  store ptr @"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.release", ptr %dtable_ref73, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.SimpleHeapAllocator.release", i32 0, i32 2), align 8
  br label %dtable_skip77

dtable_skip77:                                    ; preds = %dtable_found76, %dtable_skip70
  %next_val78 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.to_string", i32 0, i32 2), align 8
  %24 = icmp eq ptr %next_val78, inttoptr (i64 -1 to ptr)
  br i1 %24, label %dtable_check79, label %dtable_skip84

dtable_check79:                                   ; preds = %dtable_check79, %dtable_skip77
  %dtable_ref80 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.LibcAllocator", i32 0, i32 2), %dtable_skip77 ], [ %next_dtable_ref82, %dtable_check79 ]
  %dtable_ptr81 = load ptr, ptr %dtable_ref80, align 8
  %25 = icmp eq ptr %dtable_ptr81, null
  %next_dtable_ref82 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr81, i32 0, i32 2
  br i1 %25, label %dtable_found83, label %dtable_check79

dtable_found83:                                   ; preds = %dtable_check79
  store ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.to_string", ptr %dtable_ref80, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.to_string", i32 0, i32 2), align 8
  br label %dtable_skip84

dtable_skip84:                                    ; preds = %dtable_found83, %dtable_skip77
  %next_val85 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.to_format", i32 0, i32 2), align 8
  %26 = icmp eq ptr %next_val85, inttoptr (i64 -1 to ptr)
  br i1 %26, label %dtable_check86, label %dtable_skip91

dtable_check86:                                   ; preds = %dtable_check86, %dtable_skip84
  %dtable_ref87 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.LibcAllocator", i32 0, i32 2), %dtable_skip84 ], [ %next_dtable_ref89, %dtable_check86 ]
  %dtable_ptr88 = load ptr, ptr %dtable_ref87, align 8
  %27 = icmp eq ptr %dtable_ptr88, null
  %next_dtable_ref89 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr88, i32 0, i32 2
  br i1 %27, label %dtable_found90, label %dtable_check86

dtable_found90:                                   ; preds = %dtable_check86
  store ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.to_format", ptr %dtable_ref87, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.to_format", i32 0, i32 2), align 8
  br label %dtable_skip91

dtable_skip91:                                    ; preds = %dtable_found90, %dtable_skip84
  %next_val92 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.acquire", i32 0, i32 2), align 8
  %28 = icmp eq ptr %next_val92, inttoptr (i64 -1 to ptr)
  br i1 %28, label %dtable_check93, label %dtable_skip98

dtable_check93:                                   ; preds = %dtable_check93, %dtable_skip91
  %dtable_ref94 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.LibcAllocator", i32 0, i32 2), %dtable_skip91 ], [ %next_dtable_ref96, %dtable_check93 ]
  %dtable_ptr95 = load ptr, ptr %dtable_ref94, align 8
  %29 = icmp eq ptr %dtable_ptr95, null
  %next_dtable_ref96 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr95, i32 0, i32 2
  br i1 %29, label %dtable_found97, label %dtable_check93

dtable_found97:                                   ; preds = %dtable_check93
  store ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.acquire", ptr %dtable_ref94, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.acquire", i32 0, i32 2), align 8
  br label %dtable_skip98

dtable_skip98:                                    ; preds = %dtable_found97, %dtable_skip91
  %next_val99 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.resize", i32 0, i32 2), align 8
  %30 = icmp eq ptr %next_val99, inttoptr (i64 -1 to ptr)
  br i1 %30, label %dtable_check100, label %dtable_skip105

dtable_check100:                                  ; preds = %dtable_check100, %dtable_skip98
  %dtable_ref101 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.LibcAllocator", i32 0, i32 2), %dtable_skip98 ], [ %next_dtable_ref103, %dtable_check100 ]
  %dtable_ptr102 = load ptr, ptr %dtable_ref101, align 8
  %31 = icmp eq ptr %dtable_ptr102, null
  %next_dtable_ref103 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr102, i32 0, i32 2
  br i1 %31, label %dtable_found104, label %dtable_check100

dtable_found104:                                  ; preds = %dtable_check100
  store ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.resize", ptr %dtable_ref101, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.resize", i32 0, i32 2), align 8
  br label %dtable_skip105

dtable_skip105:                                   ; preds = %dtable_found104, %dtable_skip98
  %next_val106 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.release", i32 0, i32 2), align 8
  %32 = icmp eq ptr %next_val106, inttoptr (i64 -1 to ptr)
  br i1 %32, label %dtable_check107, label %dtable_skip112

dtable_check107:                                  ; preds = %dtable_check107, %dtable_skip105
  %dtable_ref108 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.LibcAllocator", i32 0, i32 2), %dtable_skip105 ], [ %next_dtable_ref110, %dtable_check107 ]
  %dtable_ptr109 = load ptr, ptr %dtable_ref108, align 8
  %33 = icmp eq ptr %dtable_ptr109, null
  %next_dtable_ref110 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr109, i32 0, i32 2
  br i1 %33, label %dtable_found111, label %dtable_check107

dtable_found111:                                  ; preds = %dtable_check107
  store ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.release", ptr %dtable_ref108, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.LibcAllocator.release", i32 0, i32 2), align 8
  br label %dtable_skip112

dtable_skip112:                                   ; preds = %dtable_found111, %dtable_skip105
  %next_val113 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.OnStackAllocator.release", i32 0, i32 2), align 8
  %34 = icmp eq ptr %next_val113, inttoptr (i64 -1 to ptr)
  br i1 %34, label %dtable_check114, label %dtable_skip119

dtable_check114:                                  ; preds = %dtable_check114, %dtable_skip112
  %dtable_ref115 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.OnStackAllocator", i32 0, i32 2), %dtable_skip112 ], [ %next_dtable_ref117, %dtable_check114 ]
  %dtable_ptr116 = load ptr, ptr %dtable_ref115, align 8
  %35 = icmp eq ptr %dtable_ptr116, null
  %next_dtable_ref117 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr116, i32 0, i32 2
  br i1 %35, label %dtable_found118, label %dtable_check114

dtable_found118:                                  ; preds = %dtable_check114
  store ptr @"$ct.dyn.std.core.mem.allocator.OnStackAllocator.release", ptr %dtable_ref115, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.OnStackAllocator.release", i32 0, i32 2), align 8
  br label %dtable_skip119

dtable_skip119:                                   ; preds = %dtable_found118, %dtable_skip112
  %next_val120 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.OnStackAllocator.resize", i32 0, i32 2), align 8
  %36 = icmp eq ptr %next_val120, inttoptr (i64 -1 to ptr)
  br i1 %36, label %dtable_check121, label %dtable_skip126

dtable_check121:                                  ; preds = %dtable_check121, %dtable_skip119
  %dtable_ref122 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.OnStackAllocator", i32 0, i32 2), %dtable_skip119 ], [ %next_dtable_ref124, %dtable_check121 ]
  %dtable_ptr123 = load ptr, ptr %dtable_ref122, align 8
  %37 = icmp eq ptr %dtable_ptr123, null
  %next_dtable_ref124 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr123, i32 0, i32 2
  br i1 %37, label %dtable_found125, label %dtable_check121

dtable_found125:                                  ; preds = %dtable_check121
  store ptr @"$ct.dyn.std.core.mem.allocator.OnStackAllocator.resize", ptr %dtable_ref122, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.OnStackAllocator.resize", i32 0, i32 2), align 8
  br label %dtable_skip126

dtable_skip126:                                   ; preds = %dtable_found125, %dtable_skip119
  %next_val127 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.OnStackAllocator.acquire", i32 0, i32 2), align 8
  %38 = icmp eq ptr %next_val127, inttoptr (i64 -1 to ptr)
  br i1 %38, label %dtable_check128, label %dtable_skip133

dtable_check128:                                  ; preds = %dtable_check128, %dtable_skip126
  %dtable_ref129 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.OnStackAllocator", i32 0, i32 2), %dtable_skip126 ], [ %next_dtable_ref131, %dtable_check128 ]
  %dtable_ptr130 = load ptr, ptr %dtable_ref129, align 8
  %39 = icmp eq ptr %dtable_ptr130, null
  %next_dtable_ref131 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr130, i32 0, i32 2
  br i1 %39, label %dtable_found132, label %dtable_check128

dtable_found132:                                  ; preds = %dtable_check128
  store ptr @"$ct.dyn.std.core.mem.allocator.OnStackAllocator.acquire", ptr %dtable_ref129, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.OnStackAllocator.acquire", i32 0, i32 2), align 8
  br label %dtable_skip133

dtable_skip133:                                   ; preds = %dtable_found132, %dtable_skip126
  %next_val134 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.mark", i32 0, i32 2), align 8
  %40 = icmp eq ptr %next_val134, inttoptr (i64 -1 to ptr)
  br i1 %40, label %dtable_check135, label %dtable_skip140

dtable_check135:                                  ; preds = %dtable_check135, %dtable_skip133
  %dtable_ref136 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.TempAllocator", i32 0, i32 2), %dtable_skip133 ], [ %next_dtable_ref138, %dtable_check135 ]
  %dtable_ptr137 = load ptr, ptr %dtable_ref136, align 8
  %41 = icmp eq ptr %dtable_ptr137, null
  %next_dtable_ref138 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr137, i32 0, i32 2
  br i1 %41, label %dtable_found139, label %dtable_check135

dtable_found139:                                  ; preds = %dtable_check135
  store ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.mark", ptr %dtable_ref136, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.mark", i32 0, i32 2), align 8
  br label %dtable_skip140

dtable_skip140:                                   ; preds = %dtable_found139, %dtable_skip133
  %next_val141 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.release", i32 0, i32 2), align 8
  %42 = icmp eq ptr %next_val141, inttoptr (i64 -1 to ptr)
  br i1 %42, label %dtable_check142, label %dtable_skip147

dtable_check142:                                  ; preds = %dtable_check142, %dtable_skip140
  %dtable_ref143 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.TempAllocator", i32 0, i32 2), %dtable_skip140 ], [ %next_dtable_ref145, %dtable_check142 ]
  %dtable_ptr144 = load ptr, ptr %dtable_ref143, align 8
  %43 = icmp eq ptr %dtable_ptr144, null
  %next_dtable_ref145 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr144, i32 0, i32 2
  br i1 %43, label %dtable_found146, label %dtable_check142

dtable_found146:                                  ; preds = %dtable_check142
  store ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.release", ptr %dtable_ref143, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.release", i32 0, i32 2), align 8
  br label %dtable_skip147

dtable_skip147:                                   ; preds = %dtable_found146, %dtable_skip140
  %next_val148 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.reset", i32 0, i32 2), align 8
  %44 = icmp eq ptr %next_val148, inttoptr (i64 -1 to ptr)
  br i1 %44, label %dtable_check149, label %dtable_skip154

dtable_check149:                                  ; preds = %dtable_check149, %dtable_skip147
  %dtable_ref150 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.TempAllocator", i32 0, i32 2), %dtable_skip147 ], [ %next_dtable_ref152, %dtable_check149 ]
  %dtable_ptr151 = load ptr, ptr %dtable_ref150, align 8
  %45 = icmp eq ptr %dtable_ptr151, null
  %next_dtable_ref152 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr151, i32 0, i32 2
  br i1 %45, label %dtable_found153, label %dtable_check149

dtable_found153:                                  ; preds = %dtable_check149
  store ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.reset", ptr %dtable_ref150, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.reset", i32 0, i32 2), align 8
  br label %dtable_skip154

dtable_skip154:                                   ; preds = %dtable_found153, %dtable_skip147
  %next_val155 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.resize", i32 0, i32 2), align 8
  %46 = icmp eq ptr %next_val155, inttoptr (i64 -1 to ptr)
  br i1 %46, label %dtable_check156, label %dtable_skip161

dtable_check156:                                  ; preds = %dtable_check156, %dtable_skip154
  %dtable_ref157 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.TempAllocator", i32 0, i32 2), %dtable_skip154 ], [ %next_dtable_ref159, %dtable_check156 ]
  %dtable_ptr158 = load ptr, ptr %dtable_ref157, align 8
  %47 = icmp eq ptr %dtable_ptr158, null
  %next_dtable_ref159 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr158, i32 0, i32 2
  br i1 %47, label %dtable_found160, label %dtable_check156

dtable_found160:                                  ; preds = %dtable_check156
  store ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.resize", ptr %dtable_ref157, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.resize", i32 0, i32 2), align 8
  br label %dtable_skip161

dtable_skip161:                                   ; preds = %dtable_found160, %dtable_skip154
  %next_val162 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.acquire", i32 0, i32 2), align 8
  %48 = icmp eq ptr %next_val162, inttoptr (i64 -1 to ptr)
  br i1 %48, label %dtable_check163, label %dtable_skip168

dtable_check163:                                  ; preds = %dtable_check163, %dtable_skip161
  %dtable_ref164 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.TempAllocator", i32 0, i32 2), %dtable_skip161 ], [ %next_dtable_ref166, %dtable_check163 ]
  %dtable_ptr165 = load ptr, ptr %dtable_ref164, align 8
  %49 = icmp eq ptr %dtable_ptr165, null
  %next_dtable_ref166 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr165, i32 0, i32 2
  br i1 %49, label %dtable_found167, label %dtable_check163

dtable_found167:                                  ; preds = %dtable_check163
  store ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.acquire", ptr %dtable_ref164, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TempAllocator.acquire", i32 0, i32 2), align 8
  br label %dtable_skip168

dtable_skip168:                                   ; preds = %dtable_found167, %dtable_skip161
  %next_val169 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TrackingAllocator.acquire", i32 0, i32 2), align 8
  %50 = icmp eq ptr %next_val169, inttoptr (i64 -1 to ptr)
  br i1 %50, label %dtable_check170, label %dtable_skip175

dtable_check170:                                  ; preds = %dtable_check170, %dtable_skip168
  %dtable_ref171 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.TrackingAllocator", i32 0, i32 2), %dtable_skip168 ], [ %next_dtable_ref173, %dtable_check170 ]
  %dtable_ptr172 = load ptr, ptr %dtable_ref171, align 8
  %51 = icmp eq ptr %dtable_ptr172, null
  %next_dtable_ref173 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr172, i32 0, i32 2
  br i1 %51, label %dtable_found174, label %dtable_check170

dtable_found174:                                  ; preds = %dtable_check170
  store ptr @"$ct.dyn.std.core.mem.allocator.TrackingAllocator.acquire", ptr %dtable_ref171, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TrackingAllocator.acquire", i32 0, i32 2), align 8
  br label %dtable_skip175

dtable_skip175:                                   ; preds = %dtable_found174, %dtable_skip168
  %next_val176 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TrackingAllocator.resize", i32 0, i32 2), align 8
  %52 = icmp eq ptr %next_val176, inttoptr (i64 -1 to ptr)
  br i1 %52, label %dtable_check177, label %dtable_skip182

dtable_check177:                                  ; preds = %dtable_check177, %dtable_skip175
  %dtable_ref178 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.TrackingAllocator", i32 0, i32 2), %dtable_skip175 ], [ %next_dtable_ref180, %dtable_check177 ]
  %dtable_ptr179 = load ptr, ptr %dtable_ref178, align 8
  %53 = icmp eq ptr %dtable_ptr179, null
  %next_dtable_ref180 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr179, i32 0, i32 2
  br i1 %53, label %dtable_found181, label %dtable_check177

dtable_found181:                                  ; preds = %dtable_check177
  store ptr @"$ct.dyn.std.core.mem.allocator.TrackingAllocator.resize", ptr %dtable_ref178, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TrackingAllocator.resize", i32 0, i32 2), align 8
  br label %dtable_skip182

dtable_skip182:                                   ; preds = %dtable_found181, %dtable_skip175
  %next_val183 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TrackingAllocator.release", i32 0, i32 2), align 8
  %54 = icmp eq ptr %next_val183, inttoptr (i64 -1 to ptr)
  br i1 %54, label %dtable_check184, label %dtable_skip189

dtable_check184:                                  ; preds = %dtable_check184, %dtable_skip182
  %dtable_ref185 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.TrackingAllocator", i32 0, i32 2), %dtable_skip182 ], [ %next_dtable_ref187, %dtable_check184 ]
  %dtable_ptr186 = load ptr, ptr %dtable_ref185, align 8
  %55 = icmp eq ptr %dtable_ptr186, null
  %next_dtable_ref187 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr186, i32 0, i32 2
  br i1 %55, label %dtable_found188, label %dtable_check184

dtable_found188:                                  ; preds = %dtable_check184
  store ptr @"$ct.dyn.std.core.mem.allocator.TrackingAllocator.release", ptr %dtable_ref185, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.TrackingAllocator.release", i32 0, i32 2), align 8
  br label %dtable_skip189

dtable_skip189:                                   ; preds = %dtable_found188, %dtable_skip182
  %next_val190 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.NullAllocator.acquire", i32 0, i32 2), align 8
  %56 = icmp eq ptr %next_val190, inttoptr (i64 -1 to ptr)
  br i1 %56, label %dtable_check191, label %dtable_skip196

dtable_check191:                                  ; preds = %dtable_check191, %dtable_skip189
  %dtable_ref192 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.NullAllocator", i32 0, i32 2), %dtable_skip189 ], [ %next_dtable_ref194, %dtable_check191 ]
  %dtable_ptr193 = load ptr, ptr %dtable_ref192, align 8
  %57 = icmp eq ptr %dtable_ptr193, null
  %next_dtable_ref194 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr193, i32 0, i32 2
  br i1 %57, label %dtable_found195, label %dtable_check191

dtable_found195:                                  ; preds = %dtable_check191
  store ptr @"$ct.dyn.std.core.mem.allocator.NullAllocator.acquire", ptr %dtable_ref192, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.NullAllocator.acquire", i32 0, i32 2), align 8
  br label %dtable_skip196

dtable_skip196:                                   ; preds = %dtable_found195, %dtable_skip189
  %next_val197 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.NullAllocator.resize", i32 0, i32 2), align 8
  %58 = icmp eq ptr %next_val197, inttoptr (i64 -1 to ptr)
  br i1 %58, label %dtable_check198, label %dtable_skip203

dtable_check198:                                  ; preds = %dtable_check198, %dtable_skip196
  %dtable_ref199 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.NullAllocator", i32 0, i32 2), %dtable_skip196 ], [ %next_dtable_ref201, %dtable_check198 ]
  %dtable_ptr200 = load ptr, ptr %dtable_ref199, align 8
  %59 = icmp eq ptr %dtable_ptr200, null
  %next_dtable_ref201 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr200, i32 0, i32 2
  br i1 %59, label %dtable_found202, label %dtable_check198

dtable_found202:                                  ; preds = %dtable_check198
  store ptr @"$ct.dyn.std.core.mem.allocator.NullAllocator.resize", ptr %dtable_ref199, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.NullAllocator.resize", i32 0, i32 2), align 8
  br label %dtable_skip203

dtable_skip203:                                   ; preds = %dtable_found202, %dtable_skip196
  %next_val204 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.NullAllocator.release", i32 0, i32 2), align 8
  %60 = icmp eq ptr %next_val204, inttoptr (i64 -1 to ptr)
  br i1 %60, label %dtable_check205, label %dtable_skip210

dtable_check205:                                  ; preds = %dtable_check205, %dtable_skip203
  %dtable_ref206 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.core.mem.allocator.NullAllocator", i32 0, i32 2), %dtable_skip203 ], [ %next_dtable_ref208, %dtable_check205 ]
  %dtable_ptr207 = load ptr, ptr %dtable_ref206, align 8
  %61 = icmp eq ptr %dtable_ptr207, null
  %next_dtable_ref208 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr207, i32 0, i32 2
  br i1 %61, label %dtable_found209, label %dtable_check205

dtable_found209:                                  ; preds = %dtable_check205
  store ptr @"$ct.dyn.std.core.mem.allocator.NullAllocator.release", ptr %dtable_ref206, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.core.mem.allocator.NullAllocator.release", i32 0, i32 2), align 8
  br label %dtable_skip210

dtable_skip210:                                   ; preds = %dtable_found209, %dtable_skip203
  ret void
}

attributes #0 = { nounwind ssp uwtable "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { alwaysinline }

!llvm.module.flags = !{!69, !70, !71}
!llvm.dbg.cu = !{!72}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "LIBC_ALLOCATOR", linkageName: "std.core.mem.allocator.LIBC_ALLOCATOR", scope: !2, file: !2, line: 9, type: !3, isLocal: false, isDefinition: true, align: 8)
!2 = !DIFile(filename: "libc_allocator.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core/allocators")
!3 = !DIDerivedType(tag: DW_TAG_typedef, name: "LibcAllocator", scope: !2, file: !2, line: 10, baseType: !4, align: 8)
!4 = !DIBasicType(name: "ulong", size: 64, encoding: DW_ATE_unsigned)
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "PAGE_IS_ALIGNED", linkageName: "std.core.mem.allocator.PAGE_IS_ALIGNED", scope: !7, file: !7, line: 19, type: !8, isLocal: true, isDefinition: true, align: 8)
!7 = !DIFile(filename: "temp_allocator.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core/allocators")
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "usz", baseType: !4)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(name: "MAX_BACKTRACE", linkageName: "std.core.mem.allocator.MAX_BACKTRACE", scope: !11, file: !11, line: 8, type: !12, isLocal: false, isDefinition: true, align: 4)
!11 = !DIFile(filename: "tracking_allocator.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core/allocators")
!12 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!13 = !DIGlobalVariableExpression(var: !14, expr: !DIExpression())
!14 = distinct !DIGlobalVariable(name: "DEFAULT_SIZE_PREFIX", linkageName: "std.core.mem.allocator.DEFAULT_SIZE_PREFIX", scope: !15, file: !15, line: 3, type: !8, isLocal: false, isDefinition: true, align: 8)
!15 = !DIFile(filename: "mem_allocator.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core")
!16 = !DIGlobalVariableExpression(var: !17, expr: !DIExpression())
!17 = distinct !DIGlobalVariable(name: "DEFAULT_SIZE_PREFIX_ALIGNMENT", linkageName: "std.core.mem.allocator.DEFAULT_SIZE_PREFIX_ALIGNMENT", scope: !15, file: !15, line: 4, type: !8, isLocal: false, isDefinition: true, align: 8)
!18 = !DIGlobalVariableExpression(var: !19, expr: !DIExpression())
!19 = distinct !DIGlobalVariable(name: "thread_allocator", linkageName: "std.core.mem.allocator.thread_allocator", scope: !15, file: !15, line: 363, type: !20, isLocal: false, isDefinition: true, align: 8)
!20 = !DICompositeType(tag: DW_TAG_structure_type, name: "Allocator", size: 128, align: 64, elements: !21, identifier: "Allocator")
!21 = !{!22, !24}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !20, baseType: !23, size: 64, align: 64)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "void*", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !20, baseType: !25, size: 64, align: 64, offset: 64)
!25 = !DIBasicType(name: "typeid", size: 64, encoding: DW_ATE_address)
!26 = !DIGlobalVariableExpression(var: !27, expr: !DIExpression())
!27 = distinct !DIGlobalVariable(name: "temp_base_allocator", linkageName: "std.core.mem.allocator.temp_base_allocator", scope: !15, file: !15, line: 364, type: !20, isLocal: true, isDefinition: true, align: 8)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "thread_temp_allocator", linkageName: "std.core.mem.allocator.thread_temp_allocator", scope: !15, file: !15, line: 366, type: !30, isLocal: false, isDefinition: true, align: 8)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "TempAllocator*", baseType: !31, size: 64, align: 64, dwarfAddressSpace: 0)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "TempAllocator", scope: !7, file: !7, line: 10, size: 320, align: 64, elements: !32, identifier: "std.core.mem.allocator.TempAllocator")
!32 = !{!33, !34, !48, !49, !50}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "backing_allocator", scope: !31, file: !7, line: 12, baseType: !20, size: 128, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "last_page", scope: !31, file: !7, line: 13, baseType: !35, size: 64, align: 64, offset: 128)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "TempAllocatorPage*", baseType: !36, size: 64, align: 64, dwarfAddressSpace: 0)
!36 = !DICompositeType(tag: DW_TAG_structure_type, name: "TempAllocatorPage", scope: !7, file: !7, line: 22, size: 320, align: 64, elements: !37, identifier: "std.core.mem.allocator.TempAllocatorPage")
!37 = !{!38, !39, !40, !41, !42, !43}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "prev_page", scope: !36, file: !7, line: 24, baseType: !35, size: 64, align: 64)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !36, file: !7, line: 25, baseType: !23, size: 64, align: 64, offset: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !36, file: !7, line: 26, baseType: !8, size: 64, align: 64, offset: 128)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !36, file: !7, line: 27, baseType: !8, size: 64, align: 64, offset: 192)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !36, file: !7, line: 28, baseType: !8, size: 64, align: 64, offset: 256)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !36, file: !7, line: 29, baseType: !44, align: 8, offset: 320)
!44 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, align: 8, elements: !46)
!45 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!46 = !{!47}
!47 = !DISubrange(count: 0, lowerBound: 0)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !31, file: !7, line: 14, baseType: !8, size: 64, align: 64, offset: 192)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !31, file: !7, line: 15, baseType: !8, size: 64, align: 64, offset: 256)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !31, file: !7, line: 16, baseType: !44, align: 8, offset: 320)
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(name: "temp_allocator_pair", linkageName: "std.core.mem.allocator.temp_allocator_pair", scope: !15, file: !15, line: 367, type: !53, isLocal: true, isDefinition: true, align: 16)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 128, align: 64, elements: !54)
!54 = !{!55}
!55 = !DISubrange(count: 2, lowerBound: 0)
!56 = !DIGlobalVariableExpression(var: !57, expr: !DIExpression())
!57 = distinct !DIGlobalVariable(name: "NULL_ALLOCATOR", linkageName: "std.core.mem.allocator.NULL_ALLOCATOR", scope: !15, file: !15, line: 438, type: !58, isLocal: false, isDefinition: true, align: 8)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "NullAllocator", scope: !15, file: !15, line: 439, baseType: !4, align: 8)
!59 = !DIGlobalVariableExpression(var: !60, expr: !DIExpression())
!60 = distinct !DIGlobalVariable(name: "WASM_BLOCK_SIZE", linkageName: "std.core.mem.allocator.WASM_BLOCK_SIZE", scope: !61, file: !61, line: 4, type: !8, isLocal: false, isDefinition: true, align: 8)
!61 = !DIFile(filename: "wasm_memory.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core/os")
!62 = !DIGlobalVariableExpression(var: !63, expr: !DIExpression())
!63 = distinct !DIGlobalVariable(name: "wasm_memory", linkageName: "std.core.mem.allocator.wasm_memory", scope: !61, file: !61, line: 6, type: !64, isLocal: false, isDefinition: true, align: 8)
!64 = !DICompositeType(tag: DW_TAG_structure_type, name: "WasmMemory", scope: !61, file: !61, line: 8, size: 128, align: 64, elements: !65, identifier: "std.core.mem.allocator.WasmMemory")
!65 = !{!66, !67}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "allocation", scope: !64, file: !61, line: 10, baseType: !8, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !64, file: !61, line: 11, baseType: !68, size: 64, align: 64, offset: 64)
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "uptr", baseType: !4)
!69 = !{i32 4, !"PIC Level", i32 2}
!70 = !{i32 1, !"CodeView", i32 1}
!71 = !{i32 1, !"uwtable", i32 2}
!72 = distinct !DICompileUnit(language: DW_LANG_C11, file: !73, producer: "c3c", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !74, globals: !79, splitDebugInlining: false)
!73 = !DIFile(filename: "arena_allocator.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core/allocators")
!74 = !{!75}
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInitType", scope: !73, file: !73, line: 13, baseType: !12, size: 32, align: 32, elements: !76)
!76 = !{!77, !78}
!77 = !DIEnumerator(name: "NO_ZERO", value: 0)
!78 = !DIEnumerator(name: "ZERO", value: 1)
!79 = !{!0, !5, !9, !13, !16, !18, !26, !28, !51, !56, !59, !62}
!80 = distinct !DISubprogram(name: "init", linkageName: "std.core.mem.allocator.ArenaAllocator.init", scope: !73, file: !73, line: 16, type: !81, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!81 = !DISubroutineType(types: !82)
!82 = !{!83, !83, !87}
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ArenaAllocator*", baseType: !84, size: 64, align: 64, dwarfAddressSpace: 0)
!84 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArenaAllocator", scope: !73, file: !73, line: 7, size: 192, align: 64, elements: !85, identifier: "std.core.mem.allocator.ArenaAllocator")
!85 = !{!86, !92}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !84, file: !73, line: 9, baseType: !87, size: 128, align: 64)
!87 = !DICompositeType(tag: DW_TAG_structure_type, name: "char[]", size: 128, align: 64, elements: !88, identifier: "char[]")
!88 = !{!89, !91}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !87, baseType: !90, size: 64, align: 64)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "char*", baseType: !45, size: 64, align: 64, dwarfAddressSpace: 0)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !87, baseType: !8, size: 64, align: 64, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !84, file: !73, line: 10, baseType: !8, size: 64, align: 64, offset: 128)
!93 = !{}
!94 = !DILocation(line: 17, column: 1, scope: !80)
!95 = !DILocalVariable(name: "self", arg: 1, scope: !80, file: !73, line: 16, type: !83)
!96 = !DILocation(line: 16, column: 40, scope: !80)
!97 = !DILocalVariable(name: "data", arg: 2, scope: !80, file: !73, line: 16, type: !87)
!98 = !DILocation(line: 16, column: 54, scope: !80)
!99 = !DILocation(line: 18, column: 2, scope: !80)
!100 = !DILocation(line: 18, column: 14, scope: !80)
!101 = !DILocation(line: 19, column: 2, scope: !80)
!102 = !DILocation(line: 19, column: 14, scope: !80)
!103 = !DILocation(line: 20, column: 9, scope: !80)
!104 = distinct !DISubprogram(name: "clear", linkageName: "std.core.mem.allocator.ArenaAllocator.clear", scope: !73, file: !73, line: 23, type: !105, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!105 = !DISubroutineType(types: !106)
!106 = !{null, !83}
!107 = !DILocation(line: 24, column: 1, scope: !104)
!108 = !DILocalVariable(name: "self", arg: 1, scope: !104, file: !73, line: 23, type: !83)
!109 = !DILocation(line: 23, column: 30, scope: !104)
!110 = !DILocation(line: 25, column: 2, scope: !104)
!111 = !DILocation(line: 25, column: 14, scope: !104)
!112 = distinct !DISubprogram(name: "release", linkageName: "std.core.mem.allocator.ArenaAllocator.release", scope: !73, file: !73, line: 37, type: !113, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!113 = !DISubroutineType(types: !114)
!114 = !{null, !83, !23, !115}
!115 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!116 = !DILocation(line: 38, column: 1, scope: !112)
!117 = !DILocalVariable(name: "self", arg: 1, scope: !112, file: !73, line: 37, type: !83)
!118 = !DILocation(line: 37, column: 32, scope: !112)
!119 = !DILocalVariable(name: "ptr", arg: 2, scope: !112, file: !73, line: 37, type: !23)
!120 = !DILocation(line: 37, column: 45, scope: !112)
!121 = !DILocalVariable(name: ".anon", arg: 3, scope: !112, file: !73, line: 37, type: !115)
!122 = !DILocation(line: 37, column: 50, scope: !112)
!123 = !DILocation(line: 35, column: 11, scope: !124)
!124 = distinct !DILexicalBlock(scope: !112, file: !73, line: 38, column: 1)
!125 = !DILocation(line: 39, column: 10, scope: !112)
!126 = !DILocation(line: 39, column: 28, scope: !112)
!127 = !DILocalVariable(name: "header", scope: !112, file: !73, line: 40, type: !128, align: 8)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ArenaAllocatorHeader*", baseType: !129, size: 64, align: 64, dwarfAddressSpace: 0)
!129 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArenaAllocatorHeader", scope: !73, file: !73, line: 28, size: 64, align: 64, elements: !130, identifier: "std.core.mem.allocator.ArenaAllocatorHeader")
!130 = !{!131, !132}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !129, file: !73, line: 30, baseType: !8, size: 64, align: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !129, file: !73, line: 31, baseType: !44, align: 8, offset: 64)
!133 = !DILocation(line: 40, column: 24, scope: !112)
!134 = !DILocation(line: 40, column: 33, scope: !112)
!135 = !DILocation(line: 40, column: 39, scope: !112)
!136 = !DILocation(line: 42, column: 6, scope: !112)
!137 = !DILocation(line: 42, column: 12, scope: !112)
!138 = !DILocation(line: 42, column: 28, scope: !112)
!139 = !DILocation(line: 42, column: 38, scope: !112)
!140 = !DILocation(line: 44, column: 3, scope: !141)
!141 = distinct !DILexicalBlock(scope: !112, file: !73, line: 43, column: 2)
!142 = !DILocation(line: 44, column: 16, scope: !141)
!143 = distinct !DISubprogram(name: "mark", linkageName: "std.core.mem.allocator.ArenaAllocator.mark", scope: !73, file: !73, line: 48, type: !144, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!144 = !DISubroutineType(types: !145)
!145 = !{!8, !83}
!146 = !DILocation(line: 48, column: 47, scope: !143)
!147 = !DILocalVariable(name: "self", arg: 1, scope: !143, file: !73, line: 48, type: !83)
!148 = !DILocation(line: 48, column: 28, scope: !143)
!149 = distinct !DISubprogram(name: "reset", linkageName: "std.core.mem.allocator.ArenaAllocator.reset", scope: !73, file: !73, line: 49, type: !150, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!150 = !DISubroutineType(types: !151)
!151 = !{null, !83, !4}
!152 = !DILocation(line: 49, column: 59, scope: !149)
!153 = !DILocalVariable(name: "self", arg: 1, scope: !149, file: !73, line: 49, type: !83)
!154 = !DILocation(line: 49, column: 30, scope: !149)
!155 = !DILocalVariable(name: "mark", arg: 2, scope: !149, file: !73, line: 49, type: !8)
!156 = !DILocation(line: 49, column: 41, scope: !149)
!157 = !DILocation(line: 49, column: 71, scope: !149)
!158 = distinct !DISubprogram(name: "acquire", linkageName: "std.core.mem.allocator.ArenaAllocator.acquire", scope: !73, file: !73, line: 56, type: !159, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!159 = !DISubroutineType(types: !160)
!160 = !{!161, !163, !83, !4, !75, !4}
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "anyfault", baseType: !162)
!162 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "void**", baseType: !23, size: 64, align: 64, dwarfAddressSpace: 0)
!164 = !DILocation(line: 57, column: 1, scope: !158)
!165 = !DILocalVariable(name: "self", arg: 1, scope: !158, file: !73, line: 56, type: !83)
!166 = !DILocation(line: 56, column: 34, scope: !158)
!167 = !DILocalVariable(name: "size", arg: 2, scope: !158, file: !73, line: 56, type: !8)
!168 = !DILocation(line: 56, column: 45, scope: !158)
!169 = !DILocalVariable(name: "init_type", arg: 3, scope: !158, file: !73, line: 56, type: !75)
!170 = !DILocation(line: 56, column: 65, scope: !158)
!171 = !DILocalVariable(name: "alignment", arg: 4, scope: !158, file: !73, line: 56, type: !8)
!172 = !DILocation(line: 56, column: 80, scope: !158)
!173 = !DILocation(line: 52, column: 12, scope: !174)
!174 = distinct !DILexicalBlock(scope: !158, file: !73, line: 57, column: 1)
!175 = !DILocation(line: 999, column: 9, scope: !176, inlinedAt: !178)
!176 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !177, file: !177, line: 997, scopeLine: 997, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!177 = !DIFile(filename: "math.c3", directory: "C:/Dev/C3/c3-windows/lib/std/math")
!178 = !DILocation(line: 52, column: 31, scope: !174)
!179 = !DILocation(line: 999, column: 20, scope: !176, inlinedAt: !178)
!180 = !DILocation(line: 999, column: 25, scope: !176, inlinedAt: !178)
!181 = !DILocation(line: 52, column: 11, scope: !174)
!182 = !DILocation(line: 53, column: 11, scope: !174)
!183 = !DILocation(line: 54, column: 11, scope: !174)
!184 = !DILocation(line: 58, column: 39, scope: !158)
!185 = !DILocation(line: 58, column: 14, scope: !158)
!186 = !DILocalVariable(name: "total_len", scope: !158, file: !73, line: 59, type: !8, align: 8)
!187 = !DILocation(line: 59, column: 6, scope: !158)
!188 = !DILocation(line: 59, column: 18, scope: !158)
!189 = !DILocation(line: 60, column: 6, scope: !158)
!190 = !DILocation(line: 60, column: 13, scope: !158)
!191 = !DILocation(line: 60, column: 31, scope: !158)
!192 = !DILocalVariable(name: "start_mem", scope: !158, file: !73, line: 61, type: !23, align: 8)
!193 = !DILocation(line: 61, column: 8, scope: !158)
!194 = !DILocation(line: 61, column: 20, scope: !158)
!195 = !DILocalVariable(name: "unaligned_pointer_to_offset", scope: !158, file: !73, line: 62, type: !23, align: 8)
!196 = !DILocation(line: 62, column: 8, scope: !158)
!197 = !DILocation(line: 62, column: 38, scope: !158)
!198 = !DILocation(line: 62, column: 50, scope: !158)
!199 = !DILocalVariable(name: "mem", scope: !158, file: !73, line: 63, type: !23, align: 8)
!200 = !DILocation(line: 63, column: 8, scope: !158)
!201 = !DILocation(line: 273, column: 38, scope: !202, inlinedAt: !204)
!202 = distinct !DISubprogram(name: "aligned_pointer", linkageName: "aligned_pointer", scope: !203, file: !203, line: 271, scopeLine: 271, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!203 = !DIFile(filename: "mem.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core")
!204 = !DILocation(line: 63, column: 19, scope: !158)
!205 = !DILocation(line: 273, column: 48, scope: !202, inlinedAt: !204)
!206 = !DILocation(line: 273, column: 10, scope: !202, inlinedAt: !204)
!207 = !DILocalVariable(name: "end", scope: !158, file: !73, line: 64, type: !8, align: 8)
!208 = !DILocation(line: 64, column: 6, scope: !158)
!209 = !DILocation(line: 64, column: 18, scope: !158)
!210 = !DILocation(line: 64, column: 24, scope: !158)
!211 = !DILocation(line: 64, column: 13, scope: !158)
!212 = !DILocation(line: 64, column: 41, scope: !158)
!213 = !DILocation(line: 65, column: 6, scope: !158)
!214 = !DILocation(line: 65, column: 12, scope: !158)
!215 = !DILocation(line: 65, column: 30, scope: !158)
!216 = !DILocation(line: 66, column: 2, scope: !158)
!217 = !DILocation(line: 66, column: 14, scope: !158)
!218 = !DILocalVariable(name: "header", scope: !158, file: !73, line: 67, type: !128, align: 8)
!219 = !DILocation(line: 67, column: 24, scope: !158)
!220 = !DILocation(line: 67, column: 33, scope: !158)
!221 = !DILocation(line: 67, column: 39, scope: !158)
!222 = !DILocation(line: 68, column: 2, scope: !158)
!223 = !DILocation(line: 68, column: 16, scope: !158)
!224 = !DILocation(line: 69, column: 6, scope: !158)
!225 = !DILocation(line: 291, column: 11, scope: !226, inlinedAt: !227)
!226 = distinct !DISubprogram(name: "clear", linkageName: "clear", scope: !203, file: !203, line: 289, scopeLine: 289, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!227 = !DILocation(line: 69, column: 30, scope: !158)
!228 = !DILocation(line: 291, column: 25, scope: !226, inlinedAt: !227)
!229 = !DILocation(line: 291, column: 30, scope: !226, inlinedAt: !227)
!230 = !DILocation(line: 70, column: 9, scope: !158)
!231 = distinct !DISubprogram(name: "resize", linkageName: "std.core.mem.allocator.ArenaAllocator.resize", scope: !73, file: !73, line: 79, type: !232, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!232 = !DISubroutineType(types: !233)
!233 = !{!161, !163, !83, !23, !4, !4}
!234 = !DILocation(line: 80, column: 1, scope: !231)
!235 = !DILocalVariable(name: "self", arg: 1, scope: !231, file: !73, line: 79, type: !83)
!236 = !DILocation(line: 79, column: 33, scope: !231)
!237 = !DILocalVariable(name: "old_pointer", arg: 2, scope: !231, file: !73, line: 79, type: !23)
!238 = !DILocation(line: 79, column: 46, scope: !231)
!239 = !DILocalVariable(name: "size", arg: 3, scope: !231, file: !73, line: 79, type: !8)
!240 = !DILocation(line: 79, column: 63, scope: !231)
!241 = !DILocalVariable(name: "alignment", arg: 4, scope: !231, file: !73, line: 79, type: !8)
!242 = !DILocation(line: 79, column: 73, scope: !231)
!243 = !DILocation(line: 74, column: 12, scope: !244)
!244 = distinct !DILexicalBlock(scope: !231, file: !73, line: 80, column: 1)
!245 = !DILocation(line: 999, column: 9, scope: !246, inlinedAt: !247)
!246 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !177, file: !177, line: 997, scopeLine: 997, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!247 = !DILocation(line: 74, column: 31, scope: !244)
!248 = !DILocation(line: 999, column: 20, scope: !246, inlinedAt: !247)
!249 = !DILocation(line: 999, column: 25, scope: !246, inlinedAt: !247)
!250 = !DILocation(line: 74, column: 11, scope: !244)
!251 = !DILocation(line: 75, column: 11, scope: !244)
!252 = !DILocation(line: 76, column: 11, scope: !244)
!253 = !DILocation(line: 77, column: 11, scope: !244)
!254 = !DILocation(line: 81, column: 39, scope: !231)
!255 = !DILocation(line: 81, column: 14, scope: !231)
!256 = !DILocation(line: 82, column: 9, scope: !231)
!257 = !DILocation(line: 82, column: 24, scope: !231)
!258 = !DILocalVariable(name: "total_len", scope: !231, file: !73, line: 83, type: !8, align: 8)
!259 = !DILocation(line: 83, column: 6, scope: !231)
!260 = !DILocation(line: 83, column: 18, scope: !231)
!261 = !DILocation(line: 84, column: 6, scope: !231)
!262 = !DILocation(line: 84, column: 13, scope: !231)
!263 = !DILocation(line: 84, column: 31, scope: !231)
!264 = !DILocalVariable(name: "header", scope: !231, file: !73, line: 85, type: !128, align: 8)
!265 = !DILocation(line: 85, column: 24, scope: !231)
!266 = !DILocation(line: 85, column: 33, scope: !231)
!267 = !DILocation(line: 85, column: 47, scope: !231)
!268 = !DILocalVariable(name: "old_size", scope: !231, file: !73, line: 86, type: !8, align: 8)
!269 = !DILocation(line: 86, column: 6, scope: !231)
!270 = !DILocation(line: 86, column: 17, scope: !231)
!271 = !DILocation(line: 88, column: 7, scope: !231)
!272 = !DILocation(line: 88, column: 17, scope: !231)
!273 = !DILocation(line: 88, column: 31, scope: !231)
!274 = !DILocation(line: 88, column: 45, scope: !231)
!275 = !DILocation(line: 88, column: 6, scope: !231)
!276 = !DILocation(line: 88, column: 90, scope: !231)
!277 = !DILocation(line: 88, column: 62, scope: !231)
!278 = !DILocation(line: 90, column: 7, scope: !279)
!279 = distinct !DILexicalBlock(scope: !231, file: !73, line: 89, column: 2)
!280 = !DILocation(line: 90, column: 19, scope: !279)
!281 = !DILocation(line: 92, column: 4, scope: !282)
!282 = distinct !DILexicalBlock(scope: !279, file: !73, line: 91, column: 3)
!283 = !DILocation(line: 92, column: 17, scope: !282)
!284 = !DILocation(line: 92, column: 28, scope: !282)
!285 = !DILocalVariable(name: "new_used", scope: !286, file: !73, line: 96, type: !8, align: 8)
!286 = distinct !DILexicalBlock(scope: !279, file: !73, line: 95, column: 3)
!287 = !DILocation(line: 96, column: 8, scope: !286)
!288 = !DILocation(line: 96, column: 19, scope: !286)
!289 = !DILocation(line: 96, column: 31, scope: !286)
!290 = !DILocation(line: 96, column: 38, scope: !286)
!291 = !DILocation(line: 97, column: 8, scope: !286)
!292 = !DILocation(line: 97, column: 19, scope: !286)
!293 = !DILocation(line: 97, column: 37, scope: !286)
!294 = !DILocation(line: 98, column: 4, scope: !286)
!295 = !DILocation(line: 98, column: 16, scope: !286)
!296 = !DILocation(line: 100, column: 3, scope: !279)
!297 = !DILocation(line: 100, column: 17, scope: !279)
!298 = !DILocation(line: 101, column: 10, scope: !279)
!299 = !DILocalVariable(name: "mem", scope: !231, file: !73, line: 104, type: !23, align: 8)
!300 = !DILocation(line: 104, column: 8, scope: !231)
!301 = !DILocation(line: 104, column: 14, scope: !231)
!302 = !DILocation(line: 309, column: 11, scope: !303, inlinedAt: !305)
!303 = distinct !DILexicalBlock(scope: !304, file: !203, line: 312, column: 1)
!304 = distinct !DISubprogram(name: "copy", linkageName: "copy", scope: !203, file: !203, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!305 = !DILocation(line: 105, column: 7, scope: !231)
!306 = !DILocation(line: 309, column: 23, scope: !303, inlinedAt: !305)
!307 = !DILocation(line: 309, column: 29, scope: !303, inlinedAt: !305)
!308 = !DILocation(line: 309, column: 36, scope: !303, inlinedAt: !305)
!309 = !DILocation(line: 309, column: 43, scope: !303, inlinedAt: !305)
!310 = !DILocation(line: 309, column: 49, scope: !303, inlinedAt: !305)
!311 = !DILocation(line: 309, column: 56, scope: !303, inlinedAt: !305)
!312 = !DILocation(line: 313, column: 11, scope: !304, inlinedAt: !305)
!313 = !DILocation(line: 313, column: 16, scope: !304, inlinedAt: !305)
!314 = !DILocation(line: 313, column: 21, scope: !304, inlinedAt: !305)
!315 = !DILocation(line: 313, column: 26, scope: !304, inlinedAt: !305)
!316 = !DILocation(line: 106, column: 9, scope: !231)
!317 = distinct !DISubprogram(name: "init", linkageName: "std.core.mem.allocator.DynamicArenaAllocator.init", scope: !318, file: !318, line: 19, type: !319, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!318 = !DIFile(filename: "dynamic_arena.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core/allocators")
!319 = !DISubroutineType(types: !320)
!320 = !{null, !321, !4, !20}
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "DynamicArenaAllocator*", baseType: !322, size: 64, align: 64, dwarfAddressSpace: 0)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicArenaAllocator", scope: !318, file: !318, line: 7, size: 320, align: 64, elements: !323, identifier: "std.core.mem.allocator.DynamicArenaAllocator")
!323 = !{!324, !325, !334, !335}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "backing_allocator", scope: !322, file: !318, line: 9, baseType: !20, size: 128, align: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !322, file: !318, line: 10, baseType: !326, size: 64, align: 64, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "DynamicArenaPage*", baseType: !327, size: 64, align: 64, dwarfAddressSpace: 0)
!327 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicArenaPage", scope: !318, file: !318, line: 49, size: 320, align: 64, elements: !328, identifier: "std.core.mem.allocator.DynamicArenaPage")
!328 = !{!329, !330, !331, !332, !333}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !327, file: !318, line: 51, baseType: !23, size: 64, align: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "prev_arena", scope: !327, file: !318, line: 52, baseType: !23, size: 64, align: 64, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !327, file: !318, line: 53, baseType: !8, size: 64, align: 64, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !327, file: !318, line: 54, baseType: !8, size: 64, align: 64, offset: 192)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "current_stack_ptr", scope: !327, file: !318, line: 55, baseType: !23, size: 64, align: 64, offset: 256)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "unused_page", scope: !322, file: !318, line: 11, baseType: !326, size: 64, align: 64, offset: 192)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !322, file: !318, line: 12, baseType: !8, size: 64, align: 64, offset: 256)
!336 = !DILocation(line: 20, column: 1, scope: !317)
!337 = !DILocalVariable(name: "self", arg: 1, scope: !317, file: !318, line: 19, type: !321)
!338 = !DILocation(line: 19, column: 36, scope: !317)
!339 = !DILocalVariable(name: "page_size", arg: 2, scope: !317, file: !318, line: 19, type: !8)
!340 = !DILocation(line: 19, column: 47, scope: !317)
!341 = !DILocalVariable(name: "allocator", arg: 3, scope: !317, file: !318, line: 19, type: !20)
!342 = !DILocation(line: 19, column: 68, scope: !317)
!343 = !DILocation(line: 17, column: 11, scope: !344)
!344 = distinct !DILexicalBlock(scope: !317, file: !318, line: 20, column: 1)
!345 = !DILocation(line: 21, column: 2, scope: !317)
!346 = !DILocation(line: 21, column: 14, scope: !317)
!347 = !DILocation(line: 22, column: 2, scope: !317)
!348 = !DILocation(line: 22, column: 21, scope: !317)
!349 = !DILocation(line: 23, column: 2, scope: !317)
!350 = !DILocation(line: 23, column: 19, scope: !317)
!351 = !DILocation(line: 24, column: 2, scope: !317)
!352 = !DILocation(line: 24, column: 27, scope: !317)
!353 = distinct !DISubprogram(name: "free", linkageName: "std.core.mem.allocator.DynamicArenaAllocator.free", scope: !318, file: !318, line: 27, type: !354, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!354 = !DISubroutineType(types: !355)
!355 = !{null, !321}
!356 = !DILocation(line: 28, column: 1, scope: !353)
!357 = !DILocalVariable(name: "self", arg: 1, scope: !353, file: !318, line: 27, type: !321)
!358 = !DILocation(line: 27, column: 36, scope: !353)
!359 = !DILocalVariable(name: "page", scope: !353, file: !318, line: 29, type: !326, align: 8)
!360 = !DILocation(line: 29, column: 20, scope: !353)
!361 = !DILocation(line: 29, column: 27, scope: !353)
!362 = !DILocation(line: 30, column: 2, scope: !353)
!363 = !DILocation(line: 30, column: 9, scope: !364)
!364 = distinct !DILexicalBlock(scope: !353, file: !318, line: 30, column: 2)
!365 = !DILocalVariable(name: "next_page", scope: !366, file: !318, line: 32, type: !326, align: 8)
!366 = distinct !DILexicalBlock(scope: !364, file: !318, line: 31, column: 2)
!367 = !DILocation(line: 32, column: 21, scope: !366)
!368 = !DILocation(line: 32, column: 33, scope: !366)
!369 = !DILocation(line: 33, column: 19, scope: !366)
!370 = !DILocation(line: 33, column: 43, scope: !366)
!371 = !DILocation(line: 101, column: 7, scope: !372, inlinedAt: !373)
!372 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !15, file: !15, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!373 = !DILocation(line: 33, column: 14, scope: !366)
!374 = !DILocation(line: 101, column: 18, scope: !372, inlinedAt: !373)
!375 = !DILocation(line: 105, column: 25, scope: !372, inlinedAt: !373)
!376 = !DILocation(line: 105, column: 2, scope: !372, inlinedAt: !373)
!377 = !DILocation(line: 34, column: 19, scope: !366)
!378 = !DILocation(line: 34, column: 43, scope: !366)
!379 = !DILocation(line: 101, column: 7, scope: !380, inlinedAt: !381)
!380 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !15, file: !15, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!381 = !DILocation(line: 34, column: 14, scope: !366)
!382 = !DILocation(line: 101, column: 18, scope: !380, inlinedAt: !381)
!383 = !DILocation(line: 105, column: 25, scope: !380, inlinedAt: !381)
!384 = !DILocation(line: 105, column: 2, scope: !380, inlinedAt: !381)
!385 = !DILocation(line: 35, column: 10, scope: !366)
!386 = !DILocation(line: 37, column: 9, scope: !353)
!387 = !DILocation(line: 38, column: 2, scope: !353)
!388 = !DILocation(line: 38, column: 9, scope: !389)
!389 = distinct !DILexicalBlock(scope: !353, file: !318, line: 38, column: 2)
!390 = !DILocalVariable(name: "next_page", scope: !391, file: !318, line: 40, type: !326, align: 8)
!391 = distinct !DILexicalBlock(scope: !389, file: !318, line: 39, column: 2)
!392 = !DILocation(line: 40, column: 21, scope: !391)
!393 = !DILocation(line: 40, column: 33, scope: !391)
!394 = !DILocation(line: 41, column: 19, scope: !391)
!395 = !DILocation(line: 41, column: 43, scope: !391)
!396 = !DILocation(line: 101, column: 7, scope: !397, inlinedAt: !398)
!397 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !15, file: !15, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!398 = !DILocation(line: 41, column: 14, scope: !391)
!399 = !DILocation(line: 101, column: 18, scope: !397, inlinedAt: !398)
!400 = !DILocation(line: 105, column: 25, scope: !397, inlinedAt: !398)
!401 = !DILocation(line: 105, column: 2, scope: !397, inlinedAt: !398)
!402 = !DILocation(line: 42, column: 19, scope: !391)
!403 = !DILocation(line: 42, column: 43, scope: !391)
!404 = !DILocation(line: 101, column: 7, scope: !405, inlinedAt: !406)
!405 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !15, file: !15, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!406 = !DILocation(line: 42, column: 14, scope: !391)
!407 = !DILocation(line: 101, column: 18, scope: !405, inlinedAt: !406)
!408 = !DILocation(line: 105, column: 25, scope: !405, inlinedAt: !406)
!409 = !DILocation(line: 105, column: 2, scope: !405, inlinedAt: !406)
!410 = !DILocation(line: 43, column: 10, scope: !391)
!411 = !DILocation(line: 45, column: 2, scope: !353)
!412 = !DILocation(line: 45, column: 14, scope: !353)
!413 = !DILocation(line: 46, column: 2, scope: !353)
!414 = !DILocation(line: 46, column: 21, scope: !353)
!415 = distinct !DISubprogram(name: "release", linkageName: "std.core.mem.allocator.DynamicArenaAllocator.release", scope: !318, file: !318, line: 67, type: !416, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!416 = !DISubroutineType(types: !417)
!417 = !{null, !321, !23, !115}
!418 = !DILocation(line: 68, column: 1, scope: !415)
!419 = !DILocalVariable(name: "self", arg: 1, scope: !415, file: !318, line: 67, type: !321)
!420 = !DILocation(line: 67, column: 39, scope: !415)
!421 = !DILocalVariable(name: "ptr", arg: 2, scope: !415, file: !318, line: 67, type: !23)
!422 = !DILocation(line: 67, column: 52, scope: !415)
!423 = !DILocalVariable(name: ".anon", arg: 3, scope: !415, file: !318, line: 67, type: !115)
!424 = !DILocation(line: 67, column: 57, scope: !415)
!425 = !DILocation(line: 64, column: 11, scope: !426)
!426 = distinct !DILexicalBlock(scope: !415, file: !318, line: 68, column: 1)
!427 = !DILocation(line: 65, column: 11, scope: !426)
!428 = !DILocalVariable(name: "current_page", scope: !415, file: !318, line: 69, type: !326, align: 8)
!429 = !DILocation(line: 69, column: 20, scope: !415)
!430 = !DILocation(line: 69, column: 35, scope: !415)
!431 = !DILocation(line: 70, column: 6, scope: !415)
!432 = !DILocation(line: 70, column: 13, scope: !415)
!433 = !DILocation(line: 72, column: 3, scope: !434)
!434 = distinct !DILexicalBlock(scope: !415, file: !318, line: 71, column: 2)
!435 = !DILocation(line: 72, column: 30, scope: !434)
!436 = !DILocation(line: 72, column: 36, scope: !434)
!437 = !DILocation(line: 72, column: 59, scope: !434)
!438 = !DILocation(line: 72, column: 24, scope: !434)
!439 = !DILocation(line: 74, column: 2, scope: !415)
!440 = !DILocation(line: 74, column: 35, scope: !415)
!441 = distinct !DISubprogram(name: "resize", linkageName: "std.core.mem.allocator.DynamicArenaAllocator.resize", scope: !318, file: !318, line: 82, type: !442, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!442 = !DISubroutineType(types: !443)
!443 = !{!161, !163, !321, !23, !4, !4}
!444 = !DILocation(line: 83, column: 1, scope: !441)
!445 = !DILocalVariable(name: "self", arg: 1, scope: !441, file: !318, line: 82, type: !321)
!446 = !DILocation(line: 82, column: 40, scope: !441)
!447 = !DILocalVariable(name: "old_pointer", arg: 2, scope: !441, file: !318, line: 82, type: !23)
!448 = !DILocation(line: 82, column: 53, scope: !441)
!449 = !DILocalVariable(name: "size", arg: 3, scope: !441, file: !318, line: 82, type: !8)
!450 = !DILocation(line: 82, column: 70, scope: !441)
!451 = !DILocalVariable(name: "alignment", arg: 4, scope: !441, file: !318, line: 82, type: !8)
!452 = !DILocation(line: 82, column: 80, scope: !441)
!453 = !DILocation(line: 78, column: 11, scope: !454)
!454 = distinct !DILexicalBlock(scope: !441, file: !318, line: 83, column: 1)
!455 = !DILocation(line: 79, column: 11, scope: !454)
!456 = !DILocation(line: 80, column: 11, scope: !454)
!457 = !DILocalVariable(name: "current_page", scope: !441, file: !318, line: 84, type: !326, align: 8)
!458 = !DILocation(line: 84, column: 20, scope: !441)
!459 = !DILocation(line: 84, column: 35, scope: !441)
!460 = !DILocation(line: 85, column: 39, scope: !441)
!461 = !DILocation(line: 85, column: 14, scope: !441)
!462 = !DILocalVariable(name: "old_size_ptr", scope: !441, file: !318, line: 86, type: !463, align: 8)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "usz*", baseType: !8, size: 64, align: 64, dwarfAddressSpace: 0)
!464 = !DILocation(line: 86, column: 7, scope: !441)
!465 = !DILocation(line: 86, column: 22, scope: !441)
!466 = !DILocation(line: 86, column: 36, scope: !441)
!467 = !DILocalVariable(name: "old_size", scope: !441, file: !318, line: 87, type: !8, align: 8)
!468 = !DILocation(line: 87, column: 6, scope: !441)
!469 = !DILocation(line: 87, column: 18, scope: !441)
!470 = !DILocation(line: 89, column: 6, scope: !441)
!471 = !DILocation(line: 89, column: 18, scope: !441)
!472 = !DILocation(line: 89, column: 59, scope: !441)
!473 = !DILocation(line: 89, column: 31, scope: !441)
!474 = !DILocation(line: 91, column: 4, scope: !475)
!475 = distinct !DILexicalBlock(scope: !441, file: !318, line: 90, column: 2)
!476 = !DILocation(line: 91, column: 19, scope: !475)
!477 = !DILocation(line: 92, column: 7, scope: !475)
!478 = !DILocation(line: 92, column: 41, scope: !475)
!479 = !DILocation(line: 94, column: 4, scope: !480)
!480 = distinct !DILexicalBlock(scope: !475, file: !318, line: 93, column: 3)
!481 = !DILocation(line: 94, column: 31, scope: !480)
!482 = !DILocation(line: 94, column: 45, scope: !480)
!483 = !DILocation(line: 94, column: 68, scope: !480)
!484 = !DILocation(line: 94, column: 25, scope: !480)
!485 = !DILocation(line: 96, column: 10, scope: !475)
!486 = !DILocation(line: 98, column: 13, scope: !441)
!487 = !DILocation(line: 98, column: 47, scope: !441)
!488 = !DILocation(line: 98, column: 95, scope: !441)
!489 = !DILocation(line: 98, column: 67, scope: !441)
!490 = !DILocation(line: 100, column: 10, scope: !491)
!491 = distinct !DILexicalBlock(scope: !441, file: !318, line: 99, column: 2)
!492 = !DILocation(line: 100, column: 17, scope: !491)
!493 = !DILocalVariable(name: "add_size", scope: !491, file: !318, line: 101, type: !8, align: 8)
!494 = !DILocation(line: 101, column: 7, scope: !491)
!495 = !DILocation(line: 101, column: 18, scope: !491)
!496 = !DILocation(line: 101, column: 25, scope: !491)
!497 = !DILocation(line: 102, column: 7, scope: !491)
!498 = !DILocation(line: 102, column: 18, scope: !491)
!499 = !DILocation(line: 102, column: 38, scope: !491)
!500 = !DILocation(line: 102, column: 58, scope: !491)
!501 = !DILocation(line: 103, column: 4, scope: !491)
!502 = !DILocation(line: 103, column: 19, scope: !491)
!503 = !DILocation(line: 104, column: 3, scope: !491)
!504 = !DILocation(line: 104, column: 24, scope: !491)
!505 = !DILocation(line: 105, column: 10, scope: !491)
!506 = !DILocalVariable(name: "new_mem", scope: !441, file: !318, line: 107, type: !23, align: 8)
!507 = !DILocation(line: 107, column: 8, scope: !441)
!508 = !DILocation(line: 107, column: 18, scope: !441)
!509 = !DILocation(line: 309, column: 11, scope: !510, inlinedAt: !512)
!510 = distinct !DILexicalBlock(scope: !511, file: !203, line: 312, column: 1)
!511 = distinct !DISubprogram(name: "copy", linkageName: "copy", scope: !203, file: !203, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!512 = !DILocation(line: 108, column: 7, scope: !441)
!513 = !DILocation(line: 309, column: 23, scope: !510, inlinedAt: !512)
!514 = !DILocation(line: 309, column: 29, scope: !510, inlinedAt: !512)
!515 = !DILocation(line: 309, column: 36, scope: !510, inlinedAt: !512)
!516 = !DILocation(line: 309, column: 43, scope: !510, inlinedAt: !512)
!517 = !DILocation(line: 309, column: 49, scope: !510, inlinedAt: !512)
!518 = !DILocation(line: 309, column: 56, scope: !510, inlinedAt: !512)
!519 = !DILocation(line: 313, column: 11, scope: !511, inlinedAt: !512)
!520 = !DILocation(line: 313, column: 16, scope: !511, inlinedAt: !512)
!521 = !DILocation(line: 313, column: 21, scope: !511, inlinedAt: !512)
!522 = !DILocation(line: 313, column: 26, scope: !511, inlinedAt: !512)
!523 = !DILocation(line: 109, column: 9, scope: !441)
!524 = distinct !DISubprogram(name: "reset", linkageName: "std.core.mem.allocator.DynamicArenaAllocator.reset", scope: !318, file: !318, line: 112, type: !525, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!525 = !DISubroutineType(types: !526)
!526 = !{null, !321, !4}
!527 = !DILocation(line: 113, column: 1, scope: !524)
!528 = !DILocalVariable(name: "self", arg: 1, scope: !524, file: !318, line: 112, type: !321)
!529 = !DILocation(line: 112, column: 37, scope: !524)
!530 = !DILocalVariable(name: "mark", arg: 2, scope: !524, file: !318, line: 112, type: !8)
!531 = !DILocation(line: 112, column: 48, scope: !524)
!532 = !DILocation(line: 114, column: 9, scope: !524)
!533 = !DILocation(line: 114, column: 79, scope: !524)
!534 = !DILocalVariable(name: "page", scope: !524, file: !318, line: 115, type: !326, align: 8)
!535 = !DILocation(line: 115, column: 20, scope: !524)
!536 = !DILocation(line: 115, column: 27, scope: !524)
!537 = !DILocalVariable(name: "unused_page_ptr", scope: !524, file: !318, line: 116, type: !538, align: 8)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "DynamicArenaPage**", baseType: !326, size: 64, align: 64, dwarfAddressSpace: 0)
!539 = !DILocation(line: 116, column: 21, scope: !524)
!540 = !DILocation(line: 116, column: 40, scope: !524)
!541 = !DILocation(line: 117, column: 2, scope: !524)
!542 = !DILocation(line: 117, column: 9, scope: !543)
!543 = distinct !DILexicalBlock(scope: !524, file: !318, line: 117, column: 2)
!544 = !DILocalVariable(name: "next_page", scope: !545, file: !318, line: 119, type: !326, align: 8)
!545 = distinct !DILexicalBlock(scope: !543, file: !318, line: 118, column: 2)
!546 = !DILocation(line: 119, column: 21, scope: !545)
!547 = !DILocation(line: 119, column: 33, scope: !545)
!548 = !DILocation(line: 120, column: 3, scope: !545)
!549 = !DILocation(line: 120, column: 15, scope: !545)
!550 = !DILocalVariable(name: "prev_unused", scope: !545, file: !318, line: 121, type: !326, align: 8)
!551 = !DILocation(line: 121, column: 21, scope: !545)
!552 = !DILocation(line: 121, column: 36, scope: !545)
!553 = !DILocation(line: 122, column: 4, scope: !545)
!554 = !DILocation(line: 122, column: 22, scope: !545)
!555 = !DILocation(line: 123, column: 3, scope: !545)
!556 = !DILocation(line: 123, column: 21, scope: !545)
!557 = !DILocation(line: 124, column: 10, scope: !545)
!558 = !DILocation(line: 126, column: 2, scope: !524)
!559 = !DILocation(line: 126, column: 14, scope: !524)
!560 = distinct !DISubprogram(name: "_alloc_new", linkageName: "std.core.mem.allocator.DynamicArenaAllocator._alloc_new", scope: !318, file: !318, line: 133, type: !561, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!561 = !DISubroutineType(types: !562)
!562 = !{!161, !163, !321, !4, !4}
!563 = !DILocation(line: 134, column: 1, scope: !560)
!564 = !DILocalVariable(name: "self", arg: 1, scope: !560, file: !318, line: 133, type: !321)
!565 = !DILocation(line: 133, column: 44, scope: !560)
!566 = !DILocalVariable(name: "size", arg: 2, scope: !560, file: !318, line: 133, type: !8)
!567 = !DILocation(line: 133, column: 55, scope: !560)
!568 = !DILocalVariable(name: "alignment", arg: 3, scope: !560, file: !318, line: 133, type: !8)
!569 = !DILocation(line: 133, column: 65, scope: !560)
!570 = !DILocation(line: 999, column: 9, scope: !571, inlinedAt: !572)
!571 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !177, file: !177, line: 997, scopeLine: 997, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!572 = !DILocation(line: 130, column: 17, scope: !573)
!573 = distinct !DILexicalBlock(scope: !560, file: !318, line: 134, column: 1)
!574 = !DILocation(line: 999, column: 20, scope: !571, inlinedAt: !572)
!575 = !DILocation(line: 999, column: 25, scope: !571, inlinedAt: !572)
!576 = !DILocation(line: 131, column: 11, scope: !573)
!577 = !DILocalVariable(name: "page_size", scope: !560, file: !318, line: 136, type: !8, align: 8)
!578 = !DILocation(line: 136, column: 6, scope: !560)
!579 = !DILocation(line: 136, column: 22, scope: !560)
!580 = !DILocation(line: 136, column: 58, scope: !560)
!581 = !DILocation(line: 136, column: 92, scope: !560)
!582 = !DILocation(line: 136, column: 103, scope: !560)
!583 = !DILocation(line: 136, column: 43, scope: !560)
!584 = !DILocation(line: 47, column: 10, scope: !585, inlinedAt: !587)
!585 = distinct !DISubprogram(name: "greater", linkageName: "greater", scope: !586, file: !586, line: 39, scopeLine: 39, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!586 = !DIFile(filename: "builtin_comparison.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core")
!587 = !DILocation(line: 116, column: 10, scope: !588, inlinedAt: !589)
!588 = distinct !DISubprogram(name: "max", linkageName: "max", scope: !586, file: !586, line: 113, scopeLine: 113, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!589 = !DILocation(line: 136, column: 18, scope: !560)
!590 = !DILocation(line: 47, column: 14, scope: !585, inlinedAt: !587)
!591 = !DILocation(line: 116, column: 34, scope: !588, inlinedAt: !589)
!592 = !DILocation(line: 116, column: 38, scope: !588, inlinedAt: !589)
!593 = !DILocation(line: 137, column: 9, scope: !560)
!594 = !DILocation(line: 137, column: 21, scope: !560)
!595 = !DILocalVariable(name: "mem", scope: !560, file: !318, line: 139, type: !23, align: 8)
!596 = !DILocation(line: 139, column: 8, scope: !560)
!597 = !DILocation(line: 139, column: 36, scope: !560)
!598 = !DILocation(line: 62, column: 7, scope: !599, inlinedAt: !600)
!599 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !15, file: !15, line: 60, scopeLine: 60, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!600 = !DILocation(line: 139, column: 25, scope: !560)
!601 = !DILocation(line: 62, column: 20, scope: !599, inlinedAt: !600)
!602 = !DILocation(line: 28, column: 71, scope: !603, inlinedAt: !604)
!603 = distinct !DISubprogram(name: "[DEFAULT INIT]", linkageName: "[DEFAULT INIT]", scope: !15, file: !15, line: 28, scopeLine: 28, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!604 = !DILocation(line: 68, column: 10, scope: !599, inlinedAt: !600)
!605 = !DILocalVariable(name: "page", scope: !560, file: !318, line: 140, type: !326, align: 8)
!606 = !DILocation(line: 140, column: 21, scope: !560)
!607 = !DILocation(line: 140, column: 47, scope: !560)
!608 = !DILocation(line: 79, column: 7, scope: !609, inlinedAt: !610)
!609 = distinct !DISubprogram(name: "calloc_try", linkageName: "calloc_try", scope: !15, file: !15, line: 77, scopeLine: 77, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!610 = !DILocation(line: 173, column: 11, scope: !611, inlinedAt: !612)
!611 = distinct !DISubprogram(name: "new_try", linkageName: "new_try", scope: !15, file: !15, line: 170, scopeLine: 170, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!612 = !DILocation(line: 140, column: 39, scope: !560)
!613 = !DILocation(line: 79, column: 20, scope: !609, inlinedAt: !610)
!614 = !DILocation(line: 28, column: 71, scope: !615, inlinedAt: !616)
!615 = distinct !DISubprogram(name: "[DEFAULT INIT]", linkageName: "[DEFAULT INIT]", scope: !15, file: !15, line: 28, scopeLine: 28, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!616 = !DILocation(line: 80, column: 9, scope: !609, inlinedAt: !610)
!617 = !DILocalVariable(name: "err", scope: !560, file: !318, line: 141, type: !161, align: 8)
!618 = !DILocation(line: 141, column: 12, scope: !560)
!619 = !DILocation(line: 141, column: 18, scope: !560)
!620 = !DILocation(line: 143, column: 19, scope: !621)
!621 = distinct !DILexicalBlock(scope: !560, file: !318, line: 142, column: 2)
!622 = !DILocation(line: 101, column: 7, scope: !623, inlinedAt: !624)
!623 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !15, file: !15, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!624 = !DILocation(line: 143, column: 14, scope: !621)
!625 = !DILocation(line: 101, column: 18, scope: !623, inlinedAt: !624)
!626 = !DILocation(line: 105, column: 25, scope: !623, inlinedAt: !624)
!627 = !DILocation(line: 105, column: 2, scope: !623, inlinedAt: !624)
!628 = !DILocation(line: 144, column: 10, scope: !621)
!629 = !DILocation(line: 146, column: 2, scope: !560)
!630 = !DILocation(line: 146, column: 16, scope: !560)
!631 = !DILocalVariable(name: "mem_start", scope: !560, file: !318, line: 147, type: !23, align: 8)
!632 = !DILocation(line: 147, column: 8, scope: !560)
!633 = !DILocation(line: 147, column: 41, scope: !560)
!634 = !DILocation(line: 147, column: 47, scope: !560)
!635 = !DILocation(line: 273, column: 38, scope: !636, inlinedAt: !637)
!636 = distinct !DISubprogram(name: "aligned_pointer", linkageName: "aligned_pointer", scope: !203, file: !203, line: 271, scopeLine: 271, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!637 = !DILocation(line: 147, column: 25, scope: !560)
!638 = !DILocation(line: 273, column: 48, scope: !636, inlinedAt: !637)
!639 = !DILocation(line: 273, column: 10, scope: !636, inlinedAt: !637)
!640 = !DILocation(line: 148, column: 9, scope: !560)
!641 = !DILocation(line: 148, column: 21, scope: !560)
!642 = !DILocation(line: 148, column: 28, scope: !560)
!643 = !DILocation(line: 148, column: 34, scope: !560)
!644 = !DILocalVariable(name: "chunk", scope: !560, file: !318, line: 149, type: !645, align: 8)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "DynamicArenaChunk*", baseType: !646, size: 64, align: 64, dwarfAddressSpace: 0)
!646 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicArenaChunk", scope: !318, file: !318, line: 58, size: 64, align: 64, elements: !647, identifier: "std.core.mem.allocator.DynamicArenaChunk")
!647 = !{!648}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !646, file: !318, line: 60, baseType: !8, size: 64, align: 64)
!649 = !DILocation(line: 149, column: 21, scope: !560)
!650 = !DILocation(line: 149, column: 30, scope: !560)
!651 = !DILocation(line: 149, column: 61, scope: !560)
!652 = !DILocation(line: 150, column: 2, scope: !560)
!653 = !DILocation(line: 150, column: 15, scope: !560)
!654 = !DILocation(line: 151, column: 2, scope: !560)
!655 = !DILocation(line: 151, column: 20, scope: !560)
!656 = !DILocation(line: 152, column: 2, scope: !560)
!657 = !DILocation(line: 152, column: 15, scope: !560)
!658 = !DILocation(line: 153, column: 2, scope: !560)
!659 = !DILocation(line: 153, column: 14, scope: !560)
!660 = !DILocation(line: 153, column: 26, scope: !560)
!661 = !DILocation(line: 153, column: 33, scope: !560)
!662 = !DILocation(line: 154, column: 2, scope: !560)
!663 = !DILocation(line: 154, column: 14, scope: !560)
!664 = !DILocation(line: 155, column: 2, scope: !560)
!665 = !DILocation(line: 155, column: 27, scope: !560)
!666 = !DILocation(line: 156, column: 9, scope: !560)
!667 = distinct !DISubprogram(name: "acquire", linkageName: "std.core.mem.allocator.DynamicArenaAllocator.acquire", scope: !318, file: !318, line: 163, type: !668, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!668 = !DISubroutineType(types: !669)
!669 = !{!161, !163, !321, !4, !75, !4}
!670 = !DILocation(line: 164, column: 1, scope: !667)
!671 = !DILocalVariable(name: "self", arg: 1, scope: !667, file: !318, line: 163, type: !321)
!672 = !DILocation(line: 163, column: 41, scope: !667)
!673 = !DILocalVariable(name: "size", arg: 2, scope: !667, file: !318, line: 163, type: !8)
!674 = !DILocation(line: 163, column: 52, scope: !667)
!675 = !DILocalVariable(name: "init_type", arg: 3, scope: !667, file: !318, line: 163, type: !75)
!676 = !DILocation(line: 163, column: 72, scope: !667)
!677 = !DILocalVariable(name: "alignment", arg: 4, scope: !667, file: !318, line: 163, type: !8)
!678 = !DILocation(line: 163, column: 87, scope: !667)
!679 = !DILocation(line: 160, column: 11, scope: !680)
!680 = distinct !DILexicalBlock(scope: !667, file: !318, line: 164, column: 1)
!681 = !DILocation(line: 161, column: 12, scope: !680)
!682 = !DILocation(line: 999, column: 9, scope: !683, inlinedAt: !684)
!683 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !177, file: !177, line: 997, scopeLine: 997, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!684 = !DILocation(line: 161, column: 31, scope: !680)
!685 = !DILocation(line: 999, column: 20, scope: !683, inlinedAt: !684)
!686 = !DILocation(line: 999, column: 25, scope: !683, inlinedAt: !684)
!687 = !DILocation(line: 161, column: 11, scope: !680)
!688 = !DILocation(line: 165, column: 39, scope: !667)
!689 = !DILocation(line: 165, column: 14, scope: !667)
!690 = !DILocalVariable(name: "page", scope: !667, file: !318, line: 166, type: !326, align: 8)
!691 = !DILocation(line: 166, column: 20, scope: !667)
!692 = !DILocation(line: 166, column: 27, scope: !667)
!693 = !DILocalVariable(name: "ptr", scope: !667, file: !318, line: 167, type: !23, align: 8)
!694 = !DILocation(line: 167, column: 8, scope: !667)
!695 = !DILocation(line: 168, column: 8, scope: !696)
!696 = distinct !DILexicalBlock(scope: !667, file: !318, line: 168, column: 3)
!697 = !DILocation(line: 168, column: 16, scope: !696)
!698 = !DILocation(line: 170, column: 4, scope: !699)
!699 = distinct !DILexicalBlock(scope: !696, file: !318, line: 169, column: 3)
!700 = !DILocation(line: 170, column: 23, scope: !699)
!701 = !DILocation(line: 171, column: 4, scope: !699)
!702 = !DILocation(line: 171, column: 23, scope: !699)
!703 = !DILocation(line: 172, column: 4, scope: !699)
!704 = !DILocation(line: 172, column: 22, scope: !699)
!705 = !DILocation(line: 174, column: 8, scope: !696)
!706 = !DILocation(line: 174, column: 21, scope: !696)
!707 = !DILocalVariable(name: "start", scope: !696, file: !318, line: 175, type: !23, align: 8)
!708 = !DILocation(line: 175, column: 9, scope: !696)
!709 = !DILocation(line: 175, column: 38, scope: !696)
!710 = !DILocation(line: 175, column: 52, scope: !696)
!711 = !DILocation(line: 273, column: 38, scope: !712, inlinedAt: !713)
!712 = distinct !DISubprogram(name: "aligned_pointer", linkageName: "aligned_pointer", scope: !203, file: !203, line: 271, scopeLine: 271, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!713 = !DILocation(line: 175, column: 22, scope: !696)
!714 = !DILocation(line: 273, column: 48, scope: !712, inlinedAt: !713)
!715 = !DILocation(line: 273, column: 10, scope: !712, inlinedAt: !713)
!716 = !DILocalVariable(name: "new_used", scope: !696, file: !318, line: 176, type: !8, align: 8)
!717 = !DILocation(line: 176, column: 7, scope: !696)
!718 = !DILocation(line: 176, column: 18, scope: !696)
!719 = !DILocation(line: 176, column: 26, scope: !696)
!720 = !DILocation(line: 176, column: 40, scope: !696)
!721 = !DILocation(line: 177, column: 21, scope: !696)
!722 = !DILocation(line: 177, column: 32, scope: !696)
!723 = !DILocation(line: 179, column: 16, scope: !724)
!724 = distinct !DILexicalBlock(scope: !696, file: !318, line: 178, column: 3)
!725 = !DILocation(line: 181, column: 34, scope: !726)
!726 = distinct !DILexicalBlock(scope: !724, file: !318, line: 180, column: 4)
!727 = !DILocation(line: 181, column: 48, scope: !726)
!728 = !DILocation(line: 273, column: 38, scope: !729, inlinedAt: !730)
!729 = distinct !DISubprogram(name: "aligned_pointer", linkageName: "aligned_pointer", scope: !203, file: !203, line: 271, scopeLine: 271, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!730 = !DILocation(line: 181, column: 18, scope: !726)
!731 = !DILocation(line: 273, column: 48, scope: !729, inlinedAt: !730)
!732 = !DILocation(line: 273, column: 10, scope: !729, inlinedAt: !730)
!733 = !DILocation(line: 182, column: 16, scope: !726)
!734 = !DILocation(line: 182, column: 24, scope: !726)
!735 = !DILocation(line: 182, column: 31, scope: !726)
!736 = !DILocation(line: 183, column: 9, scope: !726)
!737 = !DILocation(line: 183, column: 23, scope: !726)
!738 = !DILocation(line: 185, column: 6, scope: !739)
!739 = distinct !DILexicalBlock(scope: !726, file: !318, line: 184, column: 5)
!740 = !DILocation(line: 185, column: 25, scope: !739)
!741 = !DILocation(line: 186, column: 6, scope: !739)
!742 = !DILocation(line: 186, column: 24, scope: !739)
!743 = !DILocation(line: 187, column: 6, scope: !739)
!744 = !DILocation(line: 187, column: 18, scope: !739)
!745 = !DILocation(line: 188, column: 6, scope: !739)
!746 = !DILocation(line: 191, column: 11, scope: !724)
!747 = !DILocation(line: 193, column: 3, scope: !696)
!748 = !DILocation(line: 193, column: 15, scope: !696)
!749 = !DILocation(line: 194, column: 10, scope: !696)
!750 = !DILocation(line: 194, column: 18, scope: !696)
!751 = !DILocation(line: 194, column: 26, scope: !696)
!752 = !DILocation(line: 194, column: 40, scope: !696)
!753 = !DILocalVariable(name: "mem", scope: !696, file: !318, line: 195, type: !23, align: 8)
!754 = !DILocation(line: 195, column: 9, scope: !696)
!755 = !DILocation(line: 195, column: 15, scope: !696)
!756 = !DILocalVariable(name: "chunk", scope: !696, file: !318, line: 196, type: !645, align: 8)
!757 = !DILocation(line: 196, column: 22, scope: !696)
!758 = !DILocation(line: 196, column: 31, scope: !696)
!759 = !DILocation(line: 196, column: 56, scope: !696)
!760 = !DILocation(line: 197, column: 3, scope: !696)
!761 = !DILocation(line: 197, column: 16, scope: !696)
!762 = !DILocation(line: 198, column: 10, scope: !696)
!763 = !DILocation(line: 200, column: 6, scope: !667)
!764 = !DILocation(line: 291, column: 11, scope: !765, inlinedAt: !766)
!765 = distinct !DISubprogram(name: "clear", linkageName: "clear", scope: !203, file: !203, line: 289, scopeLine: 289, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!766 = !DILocation(line: 200, column: 30, scope: !667)
!767 = !DILocation(line: 291, column: 25, scope: !765, inlinedAt: !766)
!768 = !DILocation(line: 291, column: 30, scope: !765, inlinedAt: !766)
!769 = !DILocation(line: 201, column: 9, scope: !667)
!770 = distinct !DISubprogram(name: "init", linkageName: "std.core.mem.allocator.SimpleHeapAllocator.init", scope: !771, file: !771, line: 18, type: !772, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!771 = !DIFile(filename: "heap_allocator.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core/allocators")
!772 = !DISubroutineType(types: !773)
!773 = !{null, !774, !779}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "SimpleHeapAllocator*", baseType: !775, size: 64, align: 64, dwarfAddressSpace: 0)
!775 = !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleHeapAllocator", scope: !771, file: !771, line: 8, size: 128, align: 64, elements: !776, identifier: "std.core.mem.allocator.SimpleHeapAllocator")
!776 = !{!777, !783}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !775, file: !771, line: 10, baseType: !778, size: 64, align: 64)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryAllocFn", scope: !771, file: !771, line: 42, baseType: !779, align: 8)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "MemoryAllocFn", baseType: !780, size: 64, align: 64, dwarfAddressSpace: 0)
!780 = !DISubroutineType(types: !781)
!781 = !{!161, !782, !4}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "char[]*", baseType: !87, size: 64, align: 64, dwarfAddressSpace: 0)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !775, file: !771, line: 11, baseType: !784, size: 64, align: 64, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Header*", baseType: !785, size: 64, align: 64, dwarfAddressSpace: 0)
!785 = !DICompositeType(tag: DW_TAG_union_type, name: "Header", scope: !771, file: !771, line: 201, size: 128, align: 64, elements: !786, identifier: "std.core.mem.allocator.Header")
!786 = !{!787, !792}
!787 = !DIDerivedType(tag: DW_TAG_member, scope: !785, file: !771, line: 203, baseType: !788, size: 128, align: 64)
!788 = !DICompositeType(tag: DW_TAG_structure_type, name: "$anon", scope: !785, file: !771, line: 203, size: 128, align: 64, elements: !789)
!789 = !{!790, !791}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !788, file: !771, line: 205, baseType: !784, size: 64, align: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !788, file: !771, line: 206, baseType: !8, size: 64, align: 64, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !785, file: !771, line: 208, baseType: !8, size: 64, align: 64)
!793 = !DILocation(line: 19, column: 1, scope: !770)
!794 = !DILocalVariable(name: "self", arg: 1, scope: !770, file: !771, line: 18, type: !774)
!795 = !DILocation(line: 18, column: 34, scope: !770)
!796 = !DILocalVariable(name: "allocator", arg: 2, scope: !770, file: !771, line: 18, type: !778)
!797 = !DILocation(line: 18, column: 55, scope: !770)
!798 = !DILocation(line: 15, column: 11, scope: !799)
!799 = distinct !DILexicalBlock(scope: !770, file: !771, line: 19, column: 1)
!800 = !DILocation(line: 16, column: 12, scope: !799)
!801 = !DILocation(line: 16, column: 11, scope: !799)
!802 = !DILocation(line: 20, column: 2, scope: !770)
!803 = !DILocation(line: 20, column: 18, scope: !770)
!804 = !DILocation(line: 21, column: 2, scope: !770)
!805 = !DILocation(line: 21, column: 19, scope: !770)
!806 = distinct !DISubprogram(name: "acquire", linkageName: "std.core.mem.allocator.SimpleHeapAllocator.acquire", scope: !771, file: !771, line: 24, type: !807, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!807 = !DISubroutineType(types: !808)
!808 = !{!161, !163, !774, !4, !75, !4}
!809 = !DILocation(line: 25, column: 1, scope: !806)
!810 = !DILocalVariable(name: "self", arg: 1, scope: !806, file: !771, line: 24, type: !774)
!811 = !DILocation(line: 24, column: 39, scope: !806)
!812 = !DILocalVariable(name: "size", arg: 2, scope: !806, file: !771, line: 24, type: !8)
!813 = !DILocation(line: 24, column: 50, scope: !806)
!814 = !DILocalVariable(name: "init_type", arg: 3, scope: !806, file: !771, line: 24, type: !75)
!815 = !DILocation(line: 24, column: 70, scope: !806)
!816 = !DILocalVariable(name: "alignment", arg: 4, scope: !806, file: !771, line: 24, type: !8)
!817 = !DILocation(line: 24, column: 85, scope: !806)
!818 = !DILocation(line: 26, column: 6, scope: !806)
!819 = !DILocation(line: 28, column: 10, scope: !820)
!820 = distinct !DILexicalBlock(scope: !806, file: !771, line: 27, column: 2)
!821 = !DILocation(line: 304, column: 11, scope: !822, inlinedAt: !824)
!822 = distinct !DILexicalBlock(scope: !823, file: !15, line: 309, column: 1)
!823 = distinct !DISubprogram(name: "@aligned_alloc", linkageName: "@aligned_alloc", scope: !15, file: !15, line: 308, scopeLine: 308, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!824 = !DILocation(line: 28, column: 26, scope: !820)
!825 = !DILocation(line: 305, column: 11, scope: !822, inlinedAt: !824)
!826 = !DILocation(line: 306, column: 11, scope: !822, inlinedAt: !824)
!827 = !DILocation(line: 310, column: 6, scope: !823, inlinedAt: !824)
!828 = !DILocation(line: 310, column: 45, scope: !823, inlinedAt: !824)
!829 = !DILocalVariable(name: "header", scope: !823, file: !771, line: 311, type: !8, align: 8)
!830 = !DILocation(line: 311, column: 6, scope: !823, inlinedAt: !824)
!831 = !DILocation(line: 311, column: 37, scope: !823, inlinedAt: !824)
!832 = !DILocation(line: 311, column: 15, scope: !823, inlinedAt: !824)
!833 = !DILocalVariable(name: "alignsize", scope: !823, file: !771, line: 312, type: !8, align: 8)
!834 = !DILocation(line: 312, column: 6, scope: !823, inlinedAt: !824)
!835 = !DILocation(line: 312, column: 18, scope: !823, inlinedAt: !824)
!836 = !DILocation(line: 312, column: 26, scope: !823, inlinedAt: !824)
!837 = !DILocalVariable(name: "data", scope: !823, file: !771, line: 314, type: !23, align: 8)
!838 = !DILocation(line: 314, column: 9, scope: !823, inlinedAt: !824)
!839 = !DILocation(line: 314, column: 16, scope: !823, inlinedAt: !824)
!840 = !DILocalVariable(name: "mem", scope: !823, file: !771, line: 318, type: !23, align: 8)
!841 = !DILocation(line: 318, column: 8, scope: !823, inlinedAt: !824)
!842 = !DILocation(line: 318, column: 35, scope: !823, inlinedAt: !824)
!843 = !DILocation(line: 318, column: 42, scope: !823, inlinedAt: !824)
!844 = !DILocation(line: 273, column: 38, scope: !845, inlinedAt: !846)
!845 = distinct !DISubprogram(name: "aligned_pointer", linkageName: "aligned_pointer", scope: !203, file: !203, line: 271, scopeLine: 271, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!846 = !DILocation(line: 318, column: 19, scope: !823, inlinedAt: !824)
!847 = !DILocation(line: 273, column: 48, scope: !845, inlinedAt: !846)
!848 = !DILocation(line: 273, column: 10, scope: !845, inlinedAt: !846)
!849 = !DILocalVariable(name: "desc", scope: !823, file: !771, line: 319, type: !850, align: 8)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "AlignedBlock*", baseType: !851, size: 64, align: 64, dwarfAddressSpace: 0)
!851 = !DICompositeType(tag: DW_TAG_structure_type, name: "AlignedBlock", scope: !771, file: !771, line: 325, size: 128, align: 64, elements: !852, identifier: "std.core.mem.allocator.AlignedBlock")
!852 = !{!853, !854}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !851, file: !771, line: 327, baseType: !8, size: 64, align: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !851, file: !771, line: 328, baseType: !23, size: 64, align: 64, offset: 64)
!855 = !DILocation(line: 319, column: 16, scope: !823, inlinedAt: !824)
!856 = !DILocation(line: 319, column: 24, scope: !823, inlinedAt: !824)
!857 = !DILocation(line: 319, column: 44, scope: !823, inlinedAt: !824)
!858 = !DILocation(line: 320, column: 9, scope: !823, inlinedAt: !824)
!859 = !DILocation(line: 320, column: 15, scope: !823, inlinedAt: !824)
!860 = !DILocation(line: 321, column: 3, scope: !823, inlinedAt: !824)
!861 = !DILocation(line: 321, column: 12, scope: !823, inlinedAt: !824)
!862 = !DILocation(line: 321, column: 19, scope: !823, inlinedAt: !824)
!863 = !DILocation(line: 322, column: 9, scope: !823, inlinedAt: !824)
!864 = !DILocation(line: 28, column: 74, scope: !820)
!865 = !DILocation(line: 30, column: 9, scope: !806)
!866 = !DILocation(line: 304, column: 11, scope: !867, inlinedAt: !869)
!867 = distinct !DILexicalBlock(scope: !868, file: !15, line: 309, column: 1)
!868 = distinct !DISubprogram(name: "@aligned_alloc", linkageName: "@aligned_alloc", scope: !15, file: !15, line: 308, scopeLine: 308, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!869 = !DILocation(line: 30, column: 25, scope: !806)
!870 = !DILocation(line: 305, column: 11, scope: !867, inlinedAt: !869)
!871 = !DILocation(line: 306, column: 11, scope: !867, inlinedAt: !869)
!872 = !DILocation(line: 310, column: 6, scope: !868, inlinedAt: !869)
!873 = !DILocation(line: 310, column: 45, scope: !868, inlinedAt: !869)
!874 = !DILocalVariable(name: "header", scope: !868, file: !771, line: 311, type: !8, align: 8)
!875 = !DILocation(line: 311, column: 6, scope: !868, inlinedAt: !869)
!876 = !DILocation(line: 311, column: 37, scope: !868, inlinedAt: !869)
!877 = !DILocation(line: 311, column: 15, scope: !868, inlinedAt: !869)
!878 = !DILocalVariable(name: "alignsize", scope: !868, file: !771, line: 312, type: !8, align: 8)
!879 = !DILocation(line: 312, column: 6, scope: !868, inlinedAt: !869)
!880 = !DILocation(line: 312, column: 18, scope: !868, inlinedAt: !869)
!881 = !DILocation(line: 312, column: 26, scope: !868, inlinedAt: !869)
!882 = !DILocalVariable(name: "data", scope: !868, file: !771, line: 314, type: !23, align: 8)
!883 = !DILocation(line: 314, column: 9, scope: !868, inlinedAt: !869)
!884 = !DILocation(line: 314, column: 16, scope: !868, inlinedAt: !869)
!885 = !DILocalVariable(name: "mem", scope: !868, file: !771, line: 318, type: !23, align: 8)
!886 = !DILocation(line: 318, column: 8, scope: !868, inlinedAt: !869)
!887 = !DILocation(line: 318, column: 35, scope: !868, inlinedAt: !869)
!888 = !DILocation(line: 318, column: 42, scope: !868, inlinedAt: !869)
!889 = !DILocation(line: 273, column: 38, scope: !890, inlinedAt: !891)
!890 = distinct !DISubprogram(name: "aligned_pointer", linkageName: "aligned_pointer", scope: !203, file: !203, line: 271, scopeLine: 271, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!891 = !DILocation(line: 318, column: 19, scope: !868, inlinedAt: !869)
!892 = !DILocation(line: 273, column: 48, scope: !890, inlinedAt: !891)
!893 = !DILocation(line: 273, column: 10, scope: !890, inlinedAt: !891)
!894 = !DILocalVariable(name: "desc", scope: !868, file: !771, line: 319, type: !850, align: 8)
!895 = !DILocation(line: 319, column: 16, scope: !868, inlinedAt: !869)
!896 = !DILocation(line: 319, column: 24, scope: !868, inlinedAt: !869)
!897 = !DILocation(line: 319, column: 44, scope: !868, inlinedAt: !869)
!898 = !DILocation(line: 320, column: 9, scope: !868, inlinedAt: !869)
!899 = !DILocation(line: 320, column: 15, scope: !868, inlinedAt: !869)
!900 = !DILocation(line: 321, column: 3, scope: !868, inlinedAt: !869)
!901 = !DILocation(line: 321, column: 12, scope: !868, inlinedAt: !869)
!902 = !DILocation(line: 321, column: 19, scope: !868, inlinedAt: !869)
!903 = !DILocation(line: 322, column: 9, scope: !868, inlinedAt: !869)
!904 = !DILocation(line: 30, column: 72, scope: !806)
!905 = distinct !DISubprogram(name: "resize", linkageName: "std.core.mem.allocator.SimpleHeapAllocator.resize", scope: !771, file: !771, line: 33, type: !906, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!906 = !DISubroutineType(types: !907)
!907 = !{!161, !163, !774, !23, !4, !4}
!908 = !DILocation(line: 34, column: 1, scope: !905)
!909 = !DILocalVariable(name: "self", arg: 1, scope: !905, file: !771, line: 33, type: !774)
!910 = !DILocation(line: 33, column: 38, scope: !905)
!911 = !DILocalVariable(name: "old_pointer", arg: 2, scope: !905, file: !771, line: 33, type: !23)
!912 = !DILocation(line: 33, column: 51, scope: !905)
!913 = !DILocalVariable(name: "size", arg: 3, scope: !905, file: !771, line: 33, type: !8)
!914 = !DILocation(line: 33, column: 68, scope: !905)
!915 = !DILocalVariable(name: "alignment", arg: 4, scope: !905, file: !771, line: 33, type: !8)
!916 = !DILocation(line: 33, column: 78, scope: !905)
!917 = !DILocation(line: 35, column: 9, scope: !905)
!918 = !DILocation(line: 342, column: 11, scope: !919, inlinedAt: !921)
!919 = distinct !DILexicalBlock(scope: !920, file: !15, line: 346, column: 1)
!920 = distinct !DISubprogram(name: "@aligned_realloc", linkageName: "@aligned_realloc", scope: !15, file: !15, line: 345, scopeLine: 345, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!921 = !DILocation(line: 36, column: 5, scope: !905)
!922 = !DILocation(line: 343, column: 11, scope: !919, inlinedAt: !921)
!923 = !DILocalVariable(name: "desc", scope: !920, file: !771, line: 347, type: !850, align: 8)
!924 = !DILocation(line: 347, column: 16, scope: !920, inlinedAt: !921)
!925 = !DILocation(line: 347, column: 24, scope: !920, inlinedAt: !921)
!926 = !DILocation(line: 347, column: 52, scope: !920, inlinedAt: !921)
!927 = !DILocalVariable(name: "data_start", scope: !920, file: !771, line: 348, type: !23, align: 8)
!928 = !DILocation(line: 348, column: 8, scope: !920, inlinedAt: !921)
!929 = !DILocation(line: 348, column: 21, scope: !920, inlinedAt: !921)
!930 = !DILocalVariable(name: "new_data", scope: !920, file: !771, line: 349, type: !23, align: 8)
!931 = !DILocation(line: 349, column: 8, scope: !920, inlinedAt: !921)
!932 = !DILocation(line: 304, column: 11, scope: !933, inlinedAt: !935)
!933 = distinct !DILexicalBlock(scope: !934, file: !15, line: 309, column: 1)
!934 = distinct !DISubprogram(name: "@aligned_alloc", linkageName: "@aligned_alloc", scope: !15, file: !15, line: 308, scopeLine: 308, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!935 = !DILocation(line: 349, column: 19, scope: !920, inlinedAt: !921)
!936 = !DILocation(line: 305, column: 11, scope: !933, inlinedAt: !935)
!937 = !DILocation(line: 306, column: 11, scope: !933, inlinedAt: !935)
!938 = !DILocation(line: 310, column: 6, scope: !934, inlinedAt: !935)
!939 = !DILocation(line: 310, column: 45, scope: !934, inlinedAt: !935)
!940 = !DILocalVariable(name: "header", scope: !934, file: !771, line: 311, type: !8, align: 8)
!941 = !DILocation(line: 311, column: 6, scope: !934, inlinedAt: !935)
!942 = !DILocation(line: 311, column: 37, scope: !934, inlinedAt: !935)
!943 = !DILocation(line: 311, column: 15, scope: !934, inlinedAt: !935)
!944 = !DILocalVariable(name: "alignsize", scope: !934, file: !771, line: 312, type: !8, align: 8)
!945 = !DILocation(line: 312, column: 6, scope: !934, inlinedAt: !935)
!946 = !DILocation(line: 312, column: 18, scope: !934, inlinedAt: !935)
!947 = !DILocation(line: 312, column: 26, scope: !934, inlinedAt: !935)
!948 = !DILocalVariable(name: "data", scope: !934, file: !771, line: 314, type: !23, align: 8)
!949 = !DILocation(line: 314, column: 9, scope: !934, inlinedAt: !935)
!950 = !DILocation(line: 314, column: 16, scope: !934, inlinedAt: !935)
!951 = !DILocalVariable(name: "mem", scope: !934, file: !771, line: 318, type: !23, align: 8)
!952 = !DILocation(line: 318, column: 8, scope: !934, inlinedAt: !935)
!953 = !DILocation(line: 318, column: 35, scope: !934, inlinedAt: !935)
!954 = !DILocation(line: 318, column: 42, scope: !934, inlinedAt: !935)
!955 = !DILocation(line: 273, column: 38, scope: !956, inlinedAt: !957)
!956 = distinct !DISubprogram(name: "aligned_pointer", linkageName: "aligned_pointer", scope: !203, file: !203, line: 271, scopeLine: 271, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!957 = !DILocation(line: 318, column: 19, scope: !934, inlinedAt: !935)
!958 = !DILocation(line: 273, column: 48, scope: !956, inlinedAt: !957)
!959 = !DILocation(line: 273, column: 10, scope: !956, inlinedAt: !957)
!960 = !DILocalVariable(name: "desc", scope: !934, file: !771, line: 319, type: !850, align: 8)
!961 = !DILocation(line: 319, column: 16, scope: !934, inlinedAt: !935)
!962 = !DILocation(line: 319, column: 24, scope: !934, inlinedAt: !935)
!963 = !DILocation(line: 319, column: 44, scope: !934, inlinedAt: !935)
!964 = !DILocation(line: 320, column: 9, scope: !934, inlinedAt: !935)
!965 = !DILocation(line: 320, column: 15, scope: !934, inlinedAt: !935)
!966 = !DILocation(line: 321, column: 3, scope: !934, inlinedAt: !935)
!967 = !DILocation(line: 321, column: 12, scope: !934, inlinedAt: !935)
!968 = !DILocation(line: 321, column: 19, scope: !934, inlinedAt: !935)
!969 = !DILocation(line: 322, column: 9, scope: !934, inlinedAt: !935)
!970 = !DILocation(line: 350, column: 35, scope: !920, inlinedAt: !921)
!971 = !DILocation(line: 350, column: 46, scope: !920, inlinedAt: !921)
!972 = !DILocation(line: 350, column: 54, scope: !920, inlinedAt: !921)
!973 = !DILocation(line: 350, column: 65, scope: !920, inlinedAt: !921)
!974 = !DILocation(line: 309, column: 11, scope: !975, inlinedAt: !977)
!975 = distinct !DILexicalBlock(scope: !976, file: !203, line: 312, column: 1)
!976 = distinct !DISubprogram(name: "copy", linkageName: "copy", scope: !203, file: !203, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!977 = !DILocation(line: 350, column: 7, scope: !920, inlinedAt: !921)
!978 = !DILocation(line: 309, column: 23, scope: !975, inlinedAt: !977)
!979 = !DILocation(line: 309, column: 29, scope: !975, inlinedAt: !977)
!980 = !DILocation(line: 309, column: 36, scope: !975, inlinedAt: !977)
!981 = !DILocation(line: 309, column: 43, scope: !975, inlinedAt: !977)
!982 = !DILocation(line: 309, column: 49, scope: !975, inlinedAt: !977)
!983 = !DILocation(line: 309, column: 56, scope: !975, inlinedAt: !977)
!984 = !DILocation(line: 313, column: 11, scope: !976, inlinedAt: !977)
!985 = !DILocation(line: 313, column: 16, scope: !976, inlinedAt: !977)
!986 = !DILocation(line: 313, column: 21, scope: !976, inlinedAt: !977)
!987 = !DILocation(line: 313, column: 26, scope: !976, inlinedAt: !977)
!988 = !DILocation(line: 354, column: 11, scope: !920, inlinedAt: !921)
!989 = !DILocation(line: 354, column: 2, scope: !920, inlinedAt: !921)
!990 = !DILocation(line: 356, column: 9, scope: !920, inlinedAt: !921)
!991 = !DILocation(line: 37, column: 6, scope: !905)
!992 = distinct !DISubprogram(name: "release", linkageName: "std.core.mem.allocator.SimpleHeapAllocator.release", scope: !771, file: !771, line: 40, type: !993, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!993 = !DISubroutineType(types: !994)
!994 = !{null, !774, !23, !115}
!995 = !DILocation(line: 41, column: 1, scope: !992)
!996 = !DILocalVariable(name: "self", arg: 1, scope: !992, file: !771, line: 40, type: !774)
!997 = !DILocation(line: 40, column: 37, scope: !992)
!998 = !DILocalVariable(name: "old_pointer", arg: 2, scope: !992, file: !771, line: 40, type: !23)
!999 = !DILocation(line: 40, column: 50, scope: !992)
!1000 = !DILocalVariable(name: "aligned", arg: 3, scope: !992, file: !771, line: 40, type: !115)
!1001 = !DILocation(line: 40, column: 68, scope: !992)
!1002 = !DILocation(line: 42, column: 6, scope: !992)
!1003 = !DILocalVariable(name: "desc", scope: !1004, file: !771, line: 333, type: !850, align: 8)
!1004 = distinct !DISubprogram(name: "@aligned_free", linkageName: "@aligned_free", scope: !15, file: !15, line: 331, scopeLine: 331, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1005 = !DILocation(line: 333, column: 16, scope: !1004, inlinedAt: !1006)
!1006 = !DILocation(line: 44, column: 3, scope: !1007)
!1007 = distinct !DILexicalBlock(scope: !992, file: !771, line: 43, column: 2)
!1008 = !DILocation(line: 333, column: 24, scope: !1004, inlinedAt: !1006)
!1009 = !DILocation(line: 333, column: 52, scope: !1004, inlinedAt: !1006)
!1010 = !DILocation(line: 337, column: 11, scope: !1004, inlinedAt: !1006)
!1011 = !DILocation(line: 337, column: 2, scope: !1004, inlinedAt: !1006)
!1012 = !DILocation(line: 48, column: 14, scope: !1013)
!1013 = distinct !DILexicalBlock(scope: !992, file: !771, line: 47, column: 2)
!1014 = !DILocation(line: 48, column: 3, scope: !1013)
!1015 = distinct !DISubprogram(name: "_realloc", linkageName: "std.core.mem.allocator.SimpleHeapAllocator._realloc", scope: !771, file: !771, line: 55, type: !1016, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!161, !163, !774, !23, !4}
!1018 = !DILocation(line: 56, column: 1, scope: !1015)
!1019 = !DILocalVariable(name: "self", arg: 1, scope: !1015, file: !771, line: 55, type: !774)
!1020 = !DILocation(line: 55, column: 40, scope: !1015)
!1021 = !DILocalVariable(name: "old_pointer", arg: 2, scope: !1015, file: !771, line: 55, type: !23)
!1022 = !DILocation(line: 55, column: 53, scope: !1015)
!1023 = !DILocalVariable(name: "bytes", arg: 3, scope: !1015, file: !771, line: 55, type: !8)
!1024 = !DILocation(line: 55, column: 70, scope: !1015)
!1025 = !DILocation(line: 53, column: 11, scope: !1026)
!1026 = distinct !DILexicalBlock(scope: !1015, file: !771, line: 56, column: 1)
!1027 = !DILocation(line: 53, column: 26, scope: !1026)
!1028 = !DILocalVariable(name: "block", scope: !1015, file: !771, line: 58, type: !784, align: 8)
!1029 = !DILocation(line: 58, column: 10, scope: !1015)
!1030 = !DILocation(line: 58, column: 19, scope: !1015)
!1031 = !DILocation(line: 58, column: 41, scope: !1015)
!1032 = !DILocation(line: 59, column: 6, scope: !1015)
!1033 = !DILocation(line: 59, column: 20, scope: !1015)
!1034 = !DILocation(line: 59, column: 34, scope: !1015)
!1035 = !DILocalVariable(name: "new", scope: !1015, file: !771, line: 60, type: !23, align: 8)
!1036 = !DILocation(line: 60, column: 8, scope: !1015)
!1037 = !DILocation(line: 60, column: 14, scope: !1015)
!1038 = !DILocalVariable(name: "max_to_copy", scope: !1015, file: !771, line: 61, type: !8, align: 8)
!1039 = !DILocation(line: 61, column: 6, scope: !1015)
!1040 = !DILocation(line: 61, column: 30, scope: !1015)
!1041 = !DILocation(line: 400, column: 16, scope: !1042, inlinedAt: !1043)
!1042 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !177, file: !177, line: 397, scopeLine: 397, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1043 = !DILocation(line: 61, column: 26, scope: !1015)
!1044 = !DILocation(line: 400, column: 19, scope: !1042, inlinedAt: !1043)
!1045 = !DILocation(line: 309, column: 11, scope: !1046, inlinedAt: !1048)
!1046 = distinct !DILexicalBlock(scope: !1047, file: !203, line: 312, column: 1)
!1047 = distinct !DISubprogram(name: "copy", linkageName: "copy", scope: !203, file: !203, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1048 = !DILocation(line: 62, column: 7, scope: !1015)
!1049 = !DILocation(line: 309, column: 23, scope: !1046, inlinedAt: !1048)
!1050 = !DILocation(line: 309, column: 29, scope: !1046, inlinedAt: !1048)
!1051 = !DILocation(line: 309, column: 36, scope: !1046, inlinedAt: !1048)
!1052 = !DILocation(line: 309, column: 43, scope: !1046, inlinedAt: !1048)
!1053 = !DILocation(line: 309, column: 49, scope: !1046, inlinedAt: !1048)
!1054 = !DILocation(line: 309, column: 56, scope: !1046, inlinedAt: !1048)
!1055 = !DILocation(line: 313, column: 11, scope: !1047, inlinedAt: !1048)
!1056 = !DILocation(line: 313, column: 16, scope: !1047, inlinedAt: !1048)
!1057 = !DILocation(line: 313, column: 21, scope: !1047, inlinedAt: !1048)
!1058 = !DILocation(line: 313, column: 26, scope: !1047, inlinedAt: !1048)
!1059 = !DILocation(line: 63, column: 13, scope: !1015)
!1060 = !DILocation(line: 63, column: 2, scope: !1015)
!1061 = !DILocation(line: 64, column: 9, scope: !1015)
!1062 = distinct !DISubprogram(name: "_calloc", linkageName: "std.core.mem.allocator.SimpleHeapAllocator._calloc", scope: !771, file: !771, line: 67, type: !1063, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!161, !163, !774, !4}
!1065 = !DILocation(line: 68, column: 1, scope: !1062)
!1066 = !DILocalVariable(name: "self", arg: 1, scope: !1062, file: !771, line: 67, type: !774)
!1067 = !DILocation(line: 67, column: 39, scope: !1062)
!1068 = !DILocalVariable(name: "bytes", arg: 2, scope: !1062, file: !771, line: 67, type: !8)
!1069 = !DILocation(line: 67, column: 50, scope: !1062)
!1070 = !DILocalVariable(name: "data", scope: !1062, file: !771, line: 69, type: !23, align: 8)
!1071 = !DILocation(line: 69, column: 8, scope: !1062)
!1072 = !DILocation(line: 69, column: 15, scope: !1062)
!1073 = !DILocation(line: 291, column: 11, scope: !1074, inlinedAt: !1075)
!1074 = distinct !DISubprogram(name: "clear", linkageName: "clear", scope: !203, file: !203, line: 289, scopeLine: 289, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1075 = !DILocation(line: 70, column: 7, scope: !1062)
!1076 = !DILocation(line: 291, column: 25, scope: !1074, inlinedAt: !1075)
!1077 = !DILocation(line: 291, column: 30, scope: !1074, inlinedAt: !1075)
!1078 = !DILocation(line: 71, column: 9, scope: !1062)
!1079 = distinct !DISubprogram(name: "_alloc", linkageName: "std.core.mem.allocator.SimpleHeapAllocator._alloc", scope: !771, file: !771, line: 74, type: !1063, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1080 = !DILocation(line: 75, column: 1, scope: !1079)
!1081 = !DILocalVariable(name: "self", arg: 1, scope: !1079, file: !771, line: 74, type: !774)
!1082 = !DILocation(line: 74, column: 38, scope: !1079)
!1083 = !DILocalVariable(name: "bytes", arg: 2, scope: !1079, file: !771, line: 74, type: !8)
!1084 = !DILocation(line: 74, column: 49, scope: !1079)
!1085 = !DILocalVariable(name: "aligned_bytes", scope: !1079, file: !771, line: 76, type: !8, align: 8)
!1086 = !DILocation(line: 76, column: 6, scope: !1079)
!1087 = !DILocation(line: 76, column: 54, scope: !1079)
!1088 = !DILocation(line: 76, column: 27, scope: !1079)
!1089 = !DILocation(line: 77, column: 7, scope: !1079)
!1090 = !DILocation(line: 79, column: 18, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !1079, file: !771, line: 78, column: 2)
!1092 = !DILocation(line: 79, column: 3, scope: !1091)
!1093 = !DILocalVariable(name: "current", scope: !1079, file: !771, line: 82, type: !784, align: 8)
!1094 = !DILocation(line: 82, column: 10, scope: !1079)
!1095 = !DILocation(line: 82, column: 20, scope: !1079)
!1096 = !DILocalVariable(name: "previous", scope: !1079, file: !771, line: 83, type: !784, align: 8)
!1097 = !DILocation(line: 83, column: 10, scope: !1079)
!1098 = !DILocation(line: 83, column: 21, scope: !1079)
!1099 = !DILocation(line: 84, column: 2, scope: !1079)
!1100 = !DILocation(line: 84, column: 9, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1079, file: !771, line: 84, column: 2)
!1102 = !DILocation(line: 88, column: 9, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1104, file: !771, line: 86, column: 3)
!1104 = distinct !DILexicalBlock(scope: !1101, file: !771, line: 85, column: 2)
!1105 = !DILocation(line: 88, column: 25, scope: !1103)
!1106 = !DILocation(line: 88, column: 42, scope: !1103)
!1107 = !DILocation(line: 88, column: 58, scope: !1103)
!1108 = !DILocation(line: 89, column: 9, scope: !1109)
!1109 = distinct !DILexicalBlock(scope: !1103, file: !771, line: 89, column: 5)
!1110 = !DILocation(line: 89, column: 20, scope: !1109)
!1111 = !DILocation(line: 91, column: 6, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1109, file: !771, line: 90, column: 5)
!1113 = !DILocation(line: 91, column: 23, scope: !1112)
!1114 = !DILocation(line: 95, column: 6, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1109, file: !771, line: 94, column: 5)
!1116 = !DILocation(line: 95, column: 22, scope: !1115)
!1117 = !DILocation(line: 97, column: 5, scope: !1109)
!1118 = !DILocation(line: 97, column: 20, scope: !1109)
!1119 = !DILocation(line: 98, column: 12, scope: !1109)
!1120 = !DILocation(line: 98, column: 22, scope: !1109)
!1121 = !DILocation(line: 99, column: 9, scope: !1103)
!1122 = !DILocation(line: 99, column: 24, scope: !1103)
!1123 = !DILocalVariable(name: "unallocated", scope: !1124, file: !771, line: 100, type: !784, align: 8)
!1124 = distinct !DILexicalBlock(scope: !1103, file: !771, line: 100, column: 5)
!1125 = !DILocation(line: 100, column: 13, scope: !1124)
!1126 = !DILocation(line: 100, column: 38, scope: !1124)
!1127 = !DILocation(line: 100, column: 54, scope: !1124)
!1128 = !DILocation(line: 101, column: 5, scope: !1124)
!1129 = !DILocation(line: 101, column: 24, scope: !1124)
!1130 = !DILocation(line: 101, column: 39, scope: !1124)
!1131 = !DILocation(line: 102, column: 5, scope: !1124)
!1132 = !DILocation(line: 102, column: 24, scope: !1124)
!1133 = !DILocation(line: 103, column: 9, scope: !1124)
!1134 = !DILocation(line: 103, column: 20, scope: !1124)
!1135 = !DILocation(line: 105, column: 6, scope: !1136)
!1136 = distinct !DILexicalBlock(scope: !1124, file: !771, line: 104, column: 5)
!1137 = !DILocation(line: 105, column: 23, scope: !1136)
!1138 = !DILocation(line: 109, column: 6, scope: !1139)
!1139 = distinct !DILexicalBlock(scope: !1124, file: !771, line: 108, column: 5)
!1140 = !DILocation(line: 109, column: 22, scope: !1139)
!1141 = !DILocation(line: 111, column: 5, scope: !1124)
!1142 = !DILocation(line: 111, column: 20, scope: !1124)
!1143 = !DILocation(line: 112, column: 5, scope: !1124)
!1144 = !DILocation(line: 112, column: 20, scope: !1124)
!1145 = !DILocation(line: 113, column: 12, scope: !1124)
!1146 = !DILocation(line: 113, column: 22, scope: !1124)
!1147 = !DILocation(line: 115, column: 16, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1103, file: !771, line: 115, column: 5)
!1149 = !DILocation(line: 116, column: 15, scope: !1148)
!1150 = !DILocation(line: 119, column: 17, scope: !1079)
!1151 = !DILocation(line: 119, column: 2, scope: !1079)
!1152 = !DILocation(line: 120, column: 9, scope: !1079)
!1153 = distinct !DISubprogram(name: "add_block", linkageName: "std.core.mem.allocator.SimpleHeapAllocator.add_block", scope: !771, file: !771, line: 123, type: !1154, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!161, !23, !774, !4}
!1156 = !DILocation(line: 124, column: 1, scope: !1153)
!1157 = !DILocalVariable(name: "self", arg: 1, scope: !1153, file: !771, line: 123, type: !774)
!1158 = !DILocation(line: 123, column: 40, scope: !1153)
!1159 = !DILocalVariable(name: "aligned_bytes", arg: 2, scope: !1153, file: !771, line: 123, type: !8)
!1160 = !DILocation(line: 123, column: 51, scope: !1153)
!1161 = !DILocation(line: 125, column: 49, scope: !1153)
!1162 = !DILocation(line: 125, column: 14, scope: !1153)
!1163 = !DILocation(line: 125, column: 75, scope: !1153)
!1164 = !DILocalVariable(name: "result", scope: !1153, file: !771, line: 126, type: !87, align: 8)
!1165 = !DILocation(line: 126, column: 9, scope: !1153)
!1166 = !DILocation(line: 126, column: 18, scope: !1153)
!1167 = !DILocation(line: 126, column: 32, scope: !1153)
!1168 = !DILocalVariable(name: "new_block", scope: !1153, file: !771, line: 127, type: !784, align: 8)
!1169 = !DILocation(line: 127, column: 10, scope: !1153)
!1170 = !DILocation(line: 127, column: 31, scope: !1153)
!1171 = !DILocation(line: 128, column: 2, scope: !1153)
!1172 = !DILocation(line: 128, column: 19, scope: !1153)
!1173 = !DILocation(line: 129, column: 2, scope: !1153)
!1174 = !DILocation(line: 129, column: 19, scope: !1153)
!1175 = !DILocation(line: 130, column: 13, scope: !1153)
!1176 = !DILocation(line: 130, column: 25, scope: !1153)
!1177 = !DILocation(line: 130, column: 2, scope: !1153)
!1178 = distinct !DISubprogram(name: "_free", linkageName: "std.core.mem.allocator.SimpleHeapAllocator._free", scope: !771, file: !771, line: 134, type: !1179, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{null, !774, !23}
!1181 = !DILocation(line: 135, column: 1, scope: !1178)
!1182 = !DILocalVariable(name: "self", arg: 1, scope: !1178, file: !771, line: 134, type: !774)
!1183 = !DILocation(line: 134, column: 35, scope: !1178)
!1184 = !DILocalVariable(name: "ptr", arg: 2, scope: !1178, file: !771, line: 134, type: !23)
!1185 = !DILocation(line: 134, column: 48, scope: !1178)
!1186 = !DILocation(line: 137, column: 7, scope: !1178)
!1187 = !DILocation(line: 137, column: 18, scope: !1178)
!1188 = !DILocalVariable(name: "block", scope: !1178, file: !771, line: 140, type: !784, align: 8)
!1189 = !DILocation(line: 140, column: 10, scope: !1178)
!1190 = !DILocation(line: 140, column: 19, scope: !1178)
!1191 = !DILocation(line: 140, column: 33, scope: !1178)
!1192 = !DILocation(line: 143, column: 7, scope: !1178)
!1193 = !DILocation(line: 145, column: 3, scope: !1194)
!1194 = distinct !DILexicalBlock(scope: !1178, file: !771, line: 144, column: 2)
!1195 = !DILocation(line: 145, column: 20, scope: !1194)
!1196 = !DILocation(line: 146, column: 9, scope: !1194)
!1197 = !DILocalVariable(name: "current", scope: !1178, file: !771, line: 150, type: !784, align: 8)
!1198 = !DILocation(line: 150, column: 10, scope: !1178)
!1199 = !DILocation(line: 150, column: 20, scope: !1178)
!1200 = !DILocalVariable(name: "prev", scope: !1178, file: !771, line: 151, type: !784, align: 8)
!1201 = !DILocation(line: 151, column: 10, scope: !1178)
!1202 = !DILocation(line: 151, column: 17, scope: !1178)
!1203 = !DILocation(line: 152, column: 2, scope: !1178)
!1204 = !DILocation(line: 152, column: 9, scope: !1205)
!1205 = distinct !DILexicalBlock(scope: !1178, file: !771, line: 152, column: 2)
!1206 = !DILocation(line: 154, column: 7, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1205, file: !771, line: 153, column: 2)
!1208 = !DILocation(line: 154, column: 15, scope: !1207)
!1209 = !DILocation(line: 157, column: 8, scope: !1210)
!1210 = distinct !DILexicalBlock(scope: !1207, file: !771, line: 155, column: 3)
!1211 = !DILocation(line: 157, column: 16, scope: !1210)
!1212 = !DILocation(line: 157, column: 22, scope: !1210)
!1213 = !DILocation(line: 159, column: 8, scope: !1210)
!1214 = !DILocation(line: 159, column: 19, scope: !1210)
!1215 = !DILocation(line: 159, column: 25, scope: !1210)
!1216 = !DILocation(line: 161, column: 10, scope: !1207)
!1217 = !DILocation(line: 162, column: 13, scope: !1207)
!1218 = !DILocation(line: 164, column: 6, scope: !1178)
!1219 = !DILocation(line: 168, column: 7, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1178, file: !771, line: 165, column: 2)
!1221 = !DILocation(line: 168, column: 36, scope: !1220)
!1222 = !DILocation(line: 168, column: 44, scope: !1220)
!1223 = !DILocation(line: 168, column: 49, scope: !1220)
!1224 = !DILocation(line: 171, column: 4, scope: !1225)
!1225 = distinct !DILexicalBlock(scope: !1220, file: !771, line: 169, column: 3)
!1226 = !DILocation(line: 171, column: 18, scope: !1225)
!1227 = !DILocation(line: 172, column: 4, scope: !1225)
!1228 = !DILocation(line: 172, column: 17, scope: !1225)
!1229 = !DILocation(line: 177, column: 4, scope: !1230)
!1230 = distinct !DILexicalBlock(scope: !1220, file: !771, line: 175, column: 3)
!1231 = !DILocation(line: 177, column: 17, scope: !1230)
!1232 = !DILocation(line: 180, column: 6, scope: !1178)
!1233 = !DILocation(line: 180, column: 14, scope: !1178)
!1234 = !DILocation(line: 183, column: 3, scope: !1235)
!1235 = distinct !DILexicalBlock(scope: !1178, file: !771, line: 181, column: 2)
!1236 = !DILocation(line: 183, column: 20, scope: !1235)
!1237 = !DILocation(line: 188, column: 7, scope: !1238)
!1238 = distinct !DILexicalBlock(scope: !1178, file: !771, line: 186, column: 2)
!1239 = !DILocation(line: 188, column: 34, scope: !1238)
!1240 = !DILocation(line: 188, column: 41, scope: !1238)
!1241 = !DILocation(line: 188, column: 46, scope: !1238)
!1242 = !DILocation(line: 190, column: 4, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1238, file: !771, line: 189, column: 3)
!1244 = !DILocation(line: 190, column: 17, scope: !1243)
!1245 = !DILocation(line: 191, column: 4, scope: !1243)
!1246 = !DILocation(line: 191, column: 16, scope: !1243)
!1247 = !DILocation(line: 196, column: 4, scope: !1248)
!1248 = distinct !DILexicalBlock(scope: !1238, file: !771, line: 194, column: 3)
!1249 = !DILocation(line: 196, column: 16, scope: !1248)
!1250 = distinct !DISubprogram(name: "to_string", linkageName: "std.core.mem.allocator.LibcAllocator.to_string", scope: !2, file: !2, line: 12, type: !1251, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!1253, !1254, !20}
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "String", baseType: !87)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "LibcAllocator*", baseType: !3, size: 64, align: 64, dwarfAddressSpace: 0)
!1255 = !DILocation(line: 12, column: 75, scope: !1250)
!1256 = !DILocalVariable(name: "self", arg: 1, scope: !1250, file: !2, line: 12, type: !1254)
!1257 = !DILocation(line: 12, column: 35, scope: !1250)
!1258 = !DILocalVariable(name: "allocator", arg: 2, scope: !1250, file: !2, line: 12, type: !20)
!1259 = !DILocation(line: 12, column: 52, scope: !1250)
!1260 = distinct !DISubprogram(name: "to_format", linkageName: "std.core.mem.allocator.LibcAllocator.to_format", scope: !2, file: !2, line: 13, type: !1261, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!161, !463, !1254, !1263}
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Formatter*", baseType: !1264, size: 64, align: 64, dwarfAddressSpace: 0)
!1264 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !2, file: !2, line: 31, size: 384, align: 64, elements: !1265, identifier: "std.io.Formatter")
!1265 = !{!1266, !1267, !1272}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1264, file: !2, line: 33, baseType: !23, size: 64, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "out_fn", scope: !1264, file: !2, line: 34, baseType: !1268, size: 64, align: 64, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputFn", scope: !2, file: !2, line: 23, baseType: !1269, align: 8)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "OutputFn", baseType: !1270, size: 64, align: 64, dwarfAddressSpace: 0)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!161, !23, !23, !45}
!1272 = !DIDerivedType(tag: DW_TAG_member, scope: !1264, file: !2, line: 35, baseType: !1273, size: 256, align: 64, offset: 128)
!1273 = !DICompositeType(tag: DW_TAG_structure_type, name: "$anon", scope: !1264, file: !2, line: 35, size: 256, align: 64, elements: !1274)
!1274 = !{!1275, !1277, !1278, !1279, !1280}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1273, file: !2, line: 37, baseType: !1276, size: 32, align: 32)
!1276 = !DIBasicType(name: "uint", size: 32, encoding: DW_ATE_unsigned)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1273, file: !2, line: 38, baseType: !1276, size: 32, align: 32, offset: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "prec", scope: !1273, file: !2, line: 39, baseType: !1276, size: 32, align: 32, offset: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !1273, file: !2, line: 40, baseType: !8, size: 64, align: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "first_fault", scope: !1273, file: !2, line: 41, baseType: !161, size: 64, align: 64, offset: 192)
!1281 = !DILocation(line: 13, column: 71, scope: !1260)
!1282 = !DILocalVariable(name: "self", arg: 1, scope: !1260, file: !2, line: 13, type: !1254)
!1283 = !DILocation(line: 13, column: 33, scope: !1260)
!1284 = !DILocalVariable(name: "format", arg: 2, scope: !1260, file: !2, line: 13, type: !1263)
!1285 = !DILocation(line: 13, column: 51, scope: !1260)
!1286 = distinct !DISubprogram(name: "acquire", linkageName: "std.core.mem.allocator.LibcAllocator.acquire", scope: !2, file: !2, line: 81, type: !1287, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!161, !163, !1254, !4, !75, !4}
!1289 = !DILocation(line: 82, column: 1, scope: !1286)
!1290 = !DILocalVariable(name: "self", arg: 1, scope: !1286, file: !2, line: 81, type: !1254)
!1291 = !DILocation(line: 81, column: 33, scope: !1286)
!1292 = !DILocalVariable(name: "bytes", arg: 2, scope: !1286, file: !2, line: 81, type: !8)
!1293 = !DILocation(line: 81, column: 44, scope: !1286)
!1294 = !DILocalVariable(name: "init_type", arg: 3, scope: !1286, file: !2, line: 81, type: !75)
!1295 = !DILocation(line: 81, column: 65, scope: !1286)
!1296 = !DILocalVariable(name: "alignment", arg: 4, scope: !1286, file: !2, line: 81, type: !8)
!1297 = !DILocation(line: 81, column: 80, scope: !1286)
!1298 = !DILocation(line: 83, column: 6, scope: !1286)
!1299 = !DILocation(line: 85, column: 7, scope: !1300)
!1300 = distinct !DILexicalBlock(scope: !1286, file: !2, line: 84, column: 2)
!1301 = !DILocation(line: 87, column: 52, scope: !1302)
!1302 = distinct !DILexicalBlock(scope: !1300, file: !2, line: 86, column: 3)
!1303 = !DILocation(line: 87, column: 18, scope: !1302)
!1304 = !DILocation(line: 87, column: 66, scope: !1302)
!1305 = !DILocation(line: 89, column: 26, scope: !1300)
!1306 = !DILocation(line: 89, column: 16, scope: !1300)
!1307 = !DILocation(line: 89, column: 36, scope: !1300)
!1308 = !DILocalVariable(name: "data", scope: !1286, file: !2, line: 91, type: !23, align: 8)
!1309 = !DILocation(line: 91, column: 8, scope: !1286)
!1310 = !DILocation(line: 91, column: 15, scope: !1286)
!1311 = !DILocation(line: 91, column: 61, scope: !1286)
!1312 = !DILocation(line: 91, column: 38, scope: !1286)
!1313 = !DILocation(line: 91, column: 87, scope: !1286)
!1314 = !DILocation(line: 91, column: 80, scope: !1286)
!1315 = !DILocation(line: 92, column: 7, scope: !1286)
!1316 = !DILocation(line: 92, column: 20, scope: !1286)
!1317 = !DILocation(line: 96, column: 9, scope: !1286)
!1318 = distinct !DISubprogram(name: "resize", linkageName: "std.core.mem.allocator.LibcAllocator.resize", scope: !2, file: !2, line: 99, type: !1319, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!161, !163, !1254, !23, !4, !4}
!1321 = !DILocation(line: 100, column: 1, scope: !1318)
!1322 = !DILocalVariable(name: "self", arg: 1, scope: !1318, file: !2, line: 99, type: !1254)
!1323 = !DILocation(line: 99, column: 32, scope: !1318)
!1324 = !DILocalVariable(name: "old_ptr", arg: 2, scope: !1318, file: !2, line: 99, type: !23)
!1325 = !DILocation(line: 99, column: 45, scope: !1318)
!1326 = !DILocalVariable(name: "new_bytes", arg: 3, scope: !1318, file: !2, line: 99, type: !8)
!1327 = !DILocation(line: 99, column: 58, scope: !1318)
!1328 = !DILocalVariable(name: "alignment", arg: 4, scope: !1318, file: !2, line: 99, type: !8)
!1329 = !DILocation(line: 99, column: 73, scope: !1318)
!1330 = !DILocation(line: 101, column: 6, scope: !1318)
!1331 = !DILocation(line: 103, column: 54, scope: !1332)
!1332 = distinct !DILexicalBlock(scope: !1318, file: !2, line: 102, column: 2)
!1333 = !DILocation(line: 103, column: 17, scope: !1332)
!1334 = !DILocation(line: 103, column: 68, scope: !1332)
!1335 = !DILocation(line: 105, column: 32, scope: !1318)
!1336 = !DILocation(line: 105, column: 15, scope: !1318)
!1337 = !DILocation(line: 105, column: 46, scope: !1318)
!1338 = distinct !DISubprogram(name: "release", linkageName: "std.core.mem.allocator.LibcAllocator.release", scope: !2, file: !2, line: 108, type: !1339, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{null, !1254, !23, !115}
!1341 = !DILocation(line: 109, column: 1, scope: !1338)
!1342 = !DILocalVariable(name: "self", arg: 1, scope: !1338, file: !2, line: 108, type: !1254)
!1343 = !DILocation(line: 108, column: 31, scope: !1338)
!1344 = !DILocalVariable(name: "old_ptr", arg: 2, scope: !1338, file: !2, line: 108, type: !23)
!1345 = !DILocation(line: 108, column: 44, scope: !1338)
!1346 = !DILocalVariable(name: "aligned", arg: 3, scope: !1338, file: !2, line: 108, type: !115)
!1347 = !DILocation(line: 108, column: 58, scope: !1338)
!1348 = !DILocation(line: 110, column: 6, scope: !1338)
!1349 = !DILocation(line: 112, column: 24, scope: !1350)
!1350 = distinct !DILexicalBlock(scope: !1338, file: !2, line: 111, column: 2)
!1351 = !DILocation(line: 112, column: 10, scope: !1350)
!1352 = !DILocation(line: 113, column: 9, scope: !1350)
!1353 = !DILocation(line: 115, column: 13, scope: !1338)
!1354 = !DILocation(line: 115, column: 8, scope: !1338)
!1355 = distinct !DISubprogram(name: "init", linkageName: "std.core.mem.allocator.OnStackAllocator.init", scope: !1356, file: !1356, line: 24, type: !1357, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1356 = !DIFile(filename: "on_stack_allocator.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core/allocators")
!1357 = !DISubroutineType(types: !1358)
!1358 = !{null, !1359, !87, !20}
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "OnStackAllocator*", baseType: !1360, size: 64, align: 64, dwarfAddressSpace: 0)
!1360 = !DICompositeType(tag: DW_TAG_structure_type, name: "OnStackAllocator", scope: !1356, file: !1356, line: 3, size: 384, align: 64, elements: !1361, identifier: "std.core.mem.allocator.OnStackAllocator")
!1361 = !{!1362, !1363, !1364, !1365}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "backing_allocator", scope: !1360, file: !1356, line: 5, baseType: !20, size: 128, align: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1360, file: !1356, line: 6, baseType: !87, size: 128, align: 64, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1360, file: !1356, line: 7, baseType: !8, size: 64, align: 64, offset: 256)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1360, file: !1356, line: 8, baseType: !1366, size: 64, align: 64, offset: 320)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "OnStackAllocatorExtraChunk*", baseType: !1367, size: 64, align: 64, dwarfAddressSpace: 0)
!1367 = !DICompositeType(tag: DW_TAG_structure_type, name: "OnStackAllocatorExtraChunk", scope: !1356, file: !1356, line: 12, size: 192, align: 64, elements: !1368, identifier: "std.core.mem.allocator.OnStackAllocatorExtraChunk")
!1368 = !{!1369, !1370, !1371}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "is_aligned", scope: !1367, file: !1356, line: 14, baseType: !115, size: 8, align: 8)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1367, file: !1356, line: 15, baseType: !1366, size: 64, align: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1367, file: !1356, line: 16, baseType: !23, size: 64, align: 64, offset: 128)
!1372 = !DILocation(line: 25, column: 1, scope: !1355)
!1373 = !DILocalVariable(name: "self", arg: 1, scope: !1355, file: !1356, line: 24, type: !1359)
!1374 = !DILocation(line: 24, column: 31, scope: !1355)
!1375 = !DILocalVariable(name: "data", arg: 2, scope: !1355, file: !1356, line: 24, type: !87)
!1376 = !DILocation(line: 24, column: 45, scope: !1355)
!1377 = !DILocalVariable(name: "allocator", arg: 3, scope: !1355, file: !1356, line: 24, type: !20)
!1378 = !DILocation(line: 24, column: 61, scope: !1355)
!1379 = !DILocation(line: 26, column: 2, scope: !1355)
!1380 = !DILocation(line: 26, column: 14, scope: !1355)
!1381 = !DILocation(line: 27, column: 2, scope: !1355)
!1382 = !DILocation(line: 27, column: 27, scope: !1355)
!1383 = !DILocation(line: 28, column: 2, scope: !1355)
!1384 = !DILocation(line: 28, column: 14, scope: !1355)
!1385 = distinct !DISubprogram(name: "free", linkageName: "std.core.mem.allocator.OnStackAllocator.free", scope: !1356, file: !1356, line: 31, type: !1386, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{null, !1359}
!1388 = !DILocation(line: 32, column: 1, scope: !1385)
!1389 = !DILocalVariable(name: "self", arg: 1, scope: !1385, file: !1356, line: 31, type: !1359)
!1390 = !DILocation(line: 31, column: 31, scope: !1385)
!1391 = !DILocalVariable(name: "chunk", scope: !1385, file: !1356, line: 33, type: !1366, align: 8)
!1392 = !DILocation(line: 33, column: 30, scope: !1385)
!1393 = !DILocation(line: 33, column: 38, scope: !1385)
!1394 = !DILocation(line: 34, column: 2, scope: !1385)
!1395 = !DILocation(line: 34, column: 9, scope: !1396)
!1396 = distinct !DILexicalBlock(scope: !1385, file: !1356, line: 34, column: 2)
!1397 = !DILocation(line: 36, column: 7, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1396, file: !1356, line: 35, column: 2)
!1399 = !DILocation(line: 38, column: 28, scope: !1400)
!1400 = distinct !DILexicalBlock(scope: !1398, file: !1356, line: 37, column: 3)
!1401 = !DILocation(line: 38, column: 52, scope: !1400)
!1402 = !DILocation(line: 142, column: 7, scope: !1403, inlinedAt: !1404)
!1403 = distinct !DISubprogram(name: "free_aligned", linkageName: "free_aligned", scope: !15, file: !15, line: 140, scopeLine: 140, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1404 = !DILocation(line: 38, column: 15, scope: !1400)
!1405 = !DILocation(line: 142, column: 18, scope: !1403, inlinedAt: !1404)
!1406 = !DILocation(line: 146, column: 34, scope: !1403, inlinedAt: !1404)
!1407 = !DILocation(line: 146, column: 2, scope: !1403, inlinedAt: !1404)
!1408 = !DILocation(line: 42, column: 20, scope: !1409)
!1409 = distinct !DILexicalBlock(scope: !1398, file: !1356, line: 41, column: 3)
!1410 = !DILocation(line: 42, column: 44, scope: !1409)
!1411 = !DILocation(line: 101, column: 7, scope: !1412, inlinedAt: !1413)
!1412 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !15, file: !15, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1413 = !DILocation(line: 42, column: 15, scope: !1409)
!1414 = !DILocation(line: 101, column: 18, scope: !1412, inlinedAt: !1413)
!1415 = !DILocation(line: 105, column: 25, scope: !1412, inlinedAt: !1413)
!1416 = !DILocation(line: 105, column: 2, scope: !1412, inlinedAt: !1413)
!1417 = !DILocalVariable(name: "old", scope: !1398, file: !1356, line: 44, type: !23, align: 8)
!1418 = !DILocation(line: 44, column: 9, scope: !1398)
!1419 = !DILocation(line: 44, column: 15, scope: !1398)
!1420 = !DILocation(line: 45, column: 11, scope: !1398)
!1421 = !DILocation(line: 46, column: 19, scope: !1398)
!1422 = !DILocation(line: 101, column: 7, scope: !1423, inlinedAt: !1424)
!1423 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !15, file: !15, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1424 = !DILocation(line: 46, column: 14, scope: !1398)
!1425 = !DILocation(line: 101, column: 18, scope: !1423, inlinedAt: !1424)
!1426 = !DILocation(line: 105, column: 25, scope: !1423, inlinedAt: !1424)
!1427 = !DILocation(line: 105, column: 2, scope: !1423, inlinedAt: !1424)
!1428 = !DILocation(line: 48, column: 2, scope: !1385)
!1429 = !DILocation(line: 48, column: 15, scope: !1385)
!1430 = !DILocation(line: 49, column: 2, scope: !1385)
!1431 = !DILocation(line: 49, column: 14, scope: !1385)
!1432 = distinct !DISubprogram(name: "release", linkageName: "std.core.mem.allocator.OnStackAllocator.release", scope: !1356, file: !1356, line: 61, type: !1433, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{null, !1359, !23, !115}
!1435 = !DILocation(line: 62, column: 1, scope: !1432)
!1436 = !DILocalVariable(name: "self", arg: 1, scope: !1432, file: !1356, line: 61, type: !1359)
!1437 = !DILocation(line: 61, column: 34, scope: !1432)
!1438 = !DILocalVariable(name: "old_pointer", arg: 2, scope: !1432, file: !1356, line: 61, type: !23)
!1439 = !DILocation(line: 61, column: 47, scope: !1432)
!1440 = !DILocalVariable(name: "aligned", arg: 3, scope: !1432, file: !1356, line: 61, type: !115)
!1441 = !DILocation(line: 61, column: 65, scope: !1432)
!1442 = !DILocation(line: 59, column: 11, scope: !1443)
!1443 = distinct !DILexicalBlock(scope: !1432, file: !1356, line: 62, column: 1)
!1444 = !DILocation(line: 63, column: 36, scope: !1432)
!1445 = !DILocation(line: 63, column: 6, scope: !1432)
!1446 = !DILocation(line: 63, column: 56, scope: !1432)
!1447 = !DILocation(line: 64, column: 40, scope: !1432)
!1448 = !DILocation(line: 64, column: 2, scope: !1432)
!1449 = !DILocation(line: 65, column: 28, scope: !1432)
!1450 = !DILocation(line: 65, column: 2, scope: !1432)
!1451 = distinct !DISubprogram(name: "resize", linkageName: "std.core.mem.allocator.OnStackAllocator.resize", scope: !1356, file: !1356, line: 107, type: !1452, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!161, !163, !1359, !23, !4, !4}
!1454 = !DILocation(line: 108, column: 1, scope: !1451)
!1455 = !DILocalVariable(name: "self", arg: 1, scope: !1451, file: !1356, line: 107, type: !1359)
!1456 = !DILocation(line: 107, column: 35, scope: !1451)
!1457 = !DILocalVariable(name: "old_pointer", arg: 2, scope: !1451, file: !1356, line: 107, type: !23)
!1458 = !DILocation(line: 107, column: 48, scope: !1451)
!1459 = !DILocalVariable(name: "size", arg: 3, scope: !1451, file: !1356, line: 107, type: !8)
!1460 = !DILocation(line: 107, column: 65, scope: !1451)
!1461 = !DILocalVariable(name: "alignment", arg: 4, scope: !1451, file: !1356, line: 107, type: !8)
!1462 = !DILocation(line: 107, column: 75, scope: !1451)
!1463 = !DILocation(line: 103, column: 11, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1451, file: !1356, line: 108, column: 1)
!1465 = !DILocation(line: 104, column: 11, scope: !1464)
!1466 = !DILocation(line: 105, column: 11, scope: !1464)
!1467 = !DILocation(line: 109, column: 37, scope: !1451)
!1468 = !DILocation(line: 109, column: 7, scope: !1451)
!1469 = !DILocalVariable(name: "chunk", scope: !1470, file: !1356, line: 111, type: !1366, align: 8)
!1470 = distinct !DILexicalBlock(scope: !1451, file: !1356, line: 110, column: 2)
!1471 = !DILocation(line: 111, column: 31, scope: !1470)
!1472 = !DILocation(line: 111, column: 75, scope: !1470)
!1473 = !DILocation(line: 111, column: 39, scope: !1470)
!1474 = !DILocation(line: 112, column: 10, scope: !1470)
!1475 = !DILocation(line: 113, column: 10, scope: !1470)
!1476 = !DILocation(line: 113, column: 23, scope: !1470)
!1477 = !DILocation(line: 113, column: 72, scope: !1470)
!1478 = !DILocalVariable(name: "header", scope: !1451, file: !1356, line: 116, type: !1479, align: 8)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "OnStackAllocatorHeader*", baseType: !1480, size: 64, align: 64, dwarfAddressSpace: 0)
!1480 = !DICompositeType(tag: DW_TAG_structure_type, name: "OnStackAllocatorHeader", scope: !1356, file: !1356, line: 52, size: 64, align: 64, elements: !1481, identifier: "std.core.mem.allocator.OnStackAllocatorHeader")
!1481 = !{!1482, !1483}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1480, file: !1356, line: 54, baseType: !8, size: 64, align: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1480, file: !1356, line: 55, baseType: !44, align: 8, offset: 64)
!1484 = !DILocation(line: 116, column: 26, scope: !1451)
!1485 = !DILocation(line: 116, column: 35, scope: !1451)
!1486 = !DILocation(line: 116, column: 49, scope: !1451)
!1487 = !DILocalVariable(name: "old_size", scope: !1451, file: !1356, line: 117, type: !8, align: 8)
!1488 = !DILocation(line: 117, column: 6, scope: !1451)
!1489 = !DILocation(line: 117, column: 17, scope: !1451)
!1490 = !DILocalVariable(name: "mem", scope: !1451, file: !1356, line: 118, type: !23, align: 8)
!1491 = !DILocation(line: 118, column: 8, scope: !1451)
!1492 = !DILocation(line: 118, column: 14, scope: !1451)
!1493 = !DILocation(line: 309, column: 11, scope: !1494, inlinedAt: !1496)
!1494 = distinct !DILexicalBlock(scope: !1495, file: !203, line: 312, column: 1)
!1495 = distinct !DISubprogram(name: "copy", linkageName: "copy", scope: !203, file: !203, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1496 = !DILocation(line: 119, column: 7, scope: !1451)
!1497 = !DILocation(line: 309, column: 23, scope: !1494, inlinedAt: !1496)
!1498 = !DILocation(line: 309, column: 29, scope: !1494, inlinedAt: !1496)
!1499 = !DILocation(line: 309, column: 36, scope: !1494, inlinedAt: !1496)
!1500 = !DILocation(line: 309, column: 43, scope: !1494, inlinedAt: !1496)
!1501 = !DILocation(line: 309, column: 49, scope: !1494, inlinedAt: !1496)
!1502 = !DILocation(line: 309, column: 56, scope: !1494, inlinedAt: !1496)
!1503 = !DILocation(line: 313, column: 11, scope: !1495, inlinedAt: !1496)
!1504 = !DILocation(line: 313, column: 16, scope: !1495, inlinedAt: !1496)
!1505 = !DILocation(line: 313, column: 21, scope: !1495, inlinedAt: !1496)
!1506 = !DILocation(line: 313, column: 26, scope: !1495, inlinedAt: !1496)
!1507 = !DILocation(line: 120, column: 9, scope: !1451)
!1508 = distinct !DISubprogram(name: "acquire", linkageName: "std.core.mem.allocator.OnStackAllocator.acquire", scope: !1356, file: !1356, line: 127, type: !1509, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!161, !163, !1359, !4, !75, !4}
!1511 = !DILocation(line: 128, column: 1, scope: !1508)
!1512 = !DILocalVariable(name: "self", arg: 1, scope: !1508, file: !1356, line: 127, type: !1359)
!1513 = !DILocation(line: 127, column: 36, scope: !1508)
!1514 = !DILocalVariable(name: "size", arg: 2, scope: !1508, file: !1356, line: 127, type: !8)
!1515 = !DILocation(line: 127, column: 47, scope: !1508)
!1516 = !DILocalVariable(name: "init_type", arg: 3, scope: !1508, file: !1356, line: 127, type: !75)
!1517 = !DILocation(line: 127, column: 67, scope: !1508)
!1518 = !DILocalVariable(name: "alignment", arg: 4, scope: !1508, file: !1356, line: 127, type: !8)
!1519 = !DILocation(line: 127, column: 82, scope: !1508)
!1520 = !DILocation(line: 124, column: 11, scope: !1521)
!1521 = distinct !DILexicalBlock(scope: !1508, file: !1356, line: 128, column: 1)
!1522 = !DILocation(line: 125, column: 11, scope: !1521)
!1523 = !DILocalVariable(name: "aligned", scope: !1508, file: !1356, line: 129, type: !115, align: 1)
!1524 = !DILocation(line: 129, column: 7, scope: !1508)
!1525 = !DILocation(line: 129, column: 17, scope: !1508)
!1526 = !DILocation(line: 130, column: 39, scope: !1508)
!1527 = !DILocation(line: 130, column: 14, scope: !1508)
!1528 = !DILocalVariable(name: "total_len", scope: !1508, file: !1356, line: 131, type: !8, align: 8)
!1529 = !DILocation(line: 131, column: 6, scope: !1508)
!1530 = !DILocation(line: 131, column: 18, scope: !1508)
!1531 = !DILocalVariable(name: "start_mem", scope: !1508, file: !1356, line: 132, type: !23, align: 8)
!1532 = !DILocation(line: 132, column: 8, scope: !1508)
!1533 = !DILocation(line: 132, column: 20, scope: !1508)
!1534 = !DILocalVariable(name: "unaligned_pointer_to_offset", scope: !1508, file: !1356, line: 133, type: !23, align: 8)
!1535 = !DILocation(line: 133, column: 8, scope: !1508)
!1536 = !DILocation(line: 133, column: 38, scope: !1508)
!1537 = !DILocation(line: 133, column: 50, scope: !1508)
!1538 = !DILocalVariable(name: "mem", scope: !1508, file: !1356, line: 134, type: !23, align: 8)
!1539 = !DILocation(line: 134, column: 8, scope: !1508)
!1540 = !DILocation(line: 273, column: 38, scope: !1541, inlinedAt: !1542)
!1541 = distinct !DISubprogram(name: "aligned_pointer", linkageName: "aligned_pointer", scope: !203, file: !203, line: 271, scopeLine: 271, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1542 = !DILocation(line: 134, column: 19, scope: !1508)
!1543 = !DILocation(line: 273, column: 48, scope: !1541, inlinedAt: !1542)
!1544 = !DILocation(line: 273, column: 10, scope: !1541, inlinedAt: !1542)
!1545 = !DILocalVariable(name: "end", scope: !1508, file: !1356, line: 135, type: !8, align: 8)
!1546 = !DILocation(line: 135, column: 6, scope: !1508)
!1547 = !DILocation(line: 135, column: 18, scope: !1508)
!1548 = !DILocation(line: 135, column: 24, scope: !1508)
!1549 = !DILocation(line: 135, column: 13, scope: !1508)
!1550 = !DILocation(line: 135, column: 41, scope: !1508)
!1551 = !DILocalVariable(name: "backing_allocator", scope: !1508, file: !1356, line: 136, type: !20, align: 8)
!1552 = !DILocation(line: 136, column: 12, scope: !1508)
!1553 = !DILocation(line: 136, column: 32, scope: !1508)
!1554 = !DILocation(line: 138, column: 6, scope: !1508)
!1555 = !DILocation(line: 138, column: 12, scope: !1508)
!1556 = !DILocalVariable(name: "chunk", scope: !1557, file: !1356, line: 140, type: !1366, align: 8)
!1557 = distinct !DILexicalBlock(scope: !1508, file: !1356, line: 139, column: 2)
!1558 = !DILocation(line: 140, column: 31, scope: !1557)
!1559 = !DILocation(line: 62, column: 7, scope: !1560, inlinedAt: !1561)
!1560 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !15, file: !15, line: 60, scopeLine: 60, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1561 = !DILocation(line: 219, column: 10, scope: !1562, inlinedAt: !1563)
!1562 = distinct !DISubprogram(name: "alloc_try", linkageName: "alloc_try", scope: !15, file: !15, line: 217, scopeLine: 217, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1563 = !DILocation(line: 140, column: 50, scope: !1557)
!1564 = !DILocation(line: 62, column: 20, scope: !1560, inlinedAt: !1561)
!1565 = !DILocation(line: 28, column: 71, scope: !1566, inlinedAt: !1567)
!1566 = distinct !DISubprogram(name: "[DEFAULT INIT]", linkageName: "[DEFAULT INIT]", scope: !15, file: !15, line: 28, scopeLine: 28, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1567 = !DILocation(line: 68, column: 10, scope: !1560, inlinedAt: !1561)
!1568 = !DILocation(line: 143, column: 4, scope: !1557)
!1569 = !DILocation(line: 143, column: 22, scope: !1557)
!1570 = !DILocation(line: 143, column: 48, scope: !1557)
!1571 = !DILocation(line: 144, column: 10, scope: !1557)
!1572 = !DILocation(line: 144, column: 66, scope: !1557)
!1573 = !DILocation(line: 144, column: 76, scope: !1557)
!1574 = !DILocation(line: 144, column: 88, scope: !1557)
!1575 = !DILocation(line: 144, column: 23, scope: !1557)
!1576 = !DILocation(line: 141, column: 50, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1557, file: !1356, line: 141, column: 26)
!1578 = !DILocation(line: 101, column: 7, scope: !1579, inlinedAt: !1580)
!1579 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !15, file: !15, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1580 = !DILocation(line: 141, column: 26, scope: !1577)
!1581 = !DILocation(line: 101, column: 18, scope: !1579, inlinedAt: !1580)
!1582 = !DILocation(line: 105, column: 25, scope: !1579, inlinedAt: !1580)
!1583 = !DILocation(line: 105, column: 2, scope: !1579, inlinedAt: !1580)
!1584 = !DILocation(line: 142, column: 13, scope: !1585)
!1585 = distinct !DILexicalBlock(scope: !1557, file: !1356, line: 142, column: 13)
!1586 = !DILocation(line: 142, column: 26, scope: !1585)
!1587 = !DILocation(line: 146, column: 2, scope: !1508)
!1588 = !DILocation(line: 146, column: 14, scope: !1508)
!1589 = !DILocalVariable(name: "header", scope: !1508, file: !1356, line: 147, type: !1479, align: 8)
!1590 = !DILocation(line: 147, column: 26, scope: !1508)
!1591 = !DILocation(line: 147, column: 35, scope: !1508)
!1592 = !DILocation(line: 147, column: 41, scope: !1508)
!1593 = !DILocation(line: 148, column: 2, scope: !1508)
!1594 = !DILocation(line: 148, column: 16, scope: !1508)
!1595 = !DILocation(line: 149, column: 9, scope: !1508)
!1596 = distinct !DISubprogram(name: "allocation_in_stack_mem", linkageName: "std.core.mem.allocator.allocation_in_stack_mem", scope: !1356, file: !1356, line: 68, type: !1597, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!115, !1359, !23}
!1599 = !DILocalVariable(name: "a", arg: 1, scope: !1596, file: !1356, line: 68, type: !1359)
!1600 = !DILocation(line: 68, column: 51, scope: !1596)
!1601 = !DILocalVariable(name: "ptr", arg: 2, scope: !1596, file: !1356, line: 68, type: !23)
!1602 = !DILocation(line: 68, column: 60, scope: !1596)
!1603 = !DILocation(line: 70, column: 9, scope: !1596)
!1604 = !DILocation(line: 70, column: 16, scope: !1596)
!1605 = !DILocation(line: 70, column: 30, scope: !1596)
!1606 = !DILocation(line: 70, column: 38, scope: !1596)
!1607 = !DILocation(line: 70, column: 46, scope: !1596)
!1608 = distinct !DISubprogram(name: "on_stack_allocator_remove_chunk", linkageName: "std.core.mem.allocator.on_stack_allocator_remove_chunk", scope: !1356, file: !1356, line: 73, type: !1609, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{null, !1359, !23}
!1611 = !DILocalVariable(name: "a", arg: 1, scope: !1608, file: !1356, line: 73, type: !1359)
!1612 = !DILocation(line: 73, column: 59, scope: !1608)
!1613 = !DILocalVariable(name: "ptr", arg: 2, scope: !1608, file: !1356, line: 73, type: !23)
!1614 = !DILocation(line: 73, column: 68, scope: !1608)
!1615 = !DILocalVariable(name: "chunk", scope: !1608, file: !1356, line: 75, type: !1366, align: 8)
!1616 = !DILocation(line: 75, column: 30, scope: !1608)
!1617 = !DILocation(line: 75, column: 38, scope: !1608)
!1618 = !DILocalVariable(name: "addr", scope: !1608, file: !1356, line: 76, type: !1619, align: 8)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "OnStackAllocatorExtraChunk**", baseType: !1366, size: 64, align: 64, dwarfAddressSpace: 0)
!1620 = !DILocation(line: 76, column: 31, scope: !1608)
!1621 = !DILocation(line: 76, column: 39, scope: !1608)
!1622 = !DILocation(line: 77, column: 2, scope: !1608)
!1623 = !DILocation(line: 77, column: 9, scope: !1624)
!1624 = distinct !DILexicalBlock(scope: !1608, file: !1356, line: 77, column: 2)
!1625 = !DILocation(line: 79, column: 7, scope: !1626)
!1626 = distinct !DILexicalBlock(scope: !1624, file: !1356, line: 78, column: 2)
!1627 = !DILocation(line: 79, column: 21, scope: !1626)
!1628 = !DILocation(line: 81, column: 5, scope: !1629)
!1629 = distinct !DILexicalBlock(scope: !1626, file: !1356, line: 80, column: 3)
!1630 = !DILocation(line: 81, column: 12, scope: !1629)
!1631 = !DILocation(line: 82, column: 20, scope: !1629)
!1632 = !DILocation(line: 82, column: 41, scope: !1629)
!1633 = !DILocation(line: 101, column: 7, scope: !1634, inlinedAt: !1635)
!1634 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !15, file: !15, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1635 = !DILocation(line: 82, column: 15, scope: !1629)
!1636 = !DILocation(line: 101, column: 18, scope: !1634, inlinedAt: !1635)
!1637 = !DILocation(line: 105, column: 25, scope: !1634, inlinedAt: !1635)
!1638 = !DILocation(line: 105, column: 2, scope: !1634, inlinedAt: !1635)
!1639 = !DILocation(line: 83, column: 10, scope: !1629)
!1640 = !DILocation(line: 85, column: 11, scope: !1626)
!1641 = !DILocation(line: 86, column: 12, scope: !1626)
!1642 = !DILocation(line: 164, column: 2, scope: !1643, inlinedAt: !1645)
!1643 = distinct !DISubprogram(name: "unreachable", linkageName: "unreachable", scope: !1644, file: !1644, line: 161, scopeLine: 161, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1644 = !DIFile(filename: "builtin.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core")
!1645 = !DILocation(line: 88, column: 2, scope: !1608)
!1646 = !DILocation(line: 166, column: 2, scope: !1643, inlinedAt: !1645)
!1647 = distinct !DISubprogram(name: "on_stack_allocator_find_chunk", linkageName: "std.core.mem.allocator.on_stack_allocator_find_chunk", scope: !1356, file: !1356, line: 91, type: !1648, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{!1366, !1359, !23}
!1650 = !DILocalVariable(name: "a", arg: 1, scope: !1647, file: !1356, line: 91, type: !1359)
!1651 = !DILocation(line: 91, column: 80, scope: !1647)
!1652 = !DILocalVariable(name: "ptr", arg: 2, scope: !1647, file: !1356, line: 91, type: !23)
!1653 = !DILocation(line: 91, column: 89, scope: !1647)
!1654 = !DILocalVariable(name: "chunk", scope: !1647, file: !1356, line: 93, type: !1366, align: 8)
!1655 = !DILocation(line: 93, column: 30, scope: !1647)
!1656 = !DILocation(line: 93, column: 38, scope: !1647)
!1657 = !DILocation(line: 94, column: 2, scope: !1647)
!1658 = !DILocation(line: 94, column: 9, scope: !1659)
!1659 = distinct !DILexicalBlock(scope: !1647, file: !1356, line: 94, column: 2)
!1660 = !DILocation(line: 96, column: 7, scope: !1661)
!1661 = distinct !DILexicalBlock(scope: !1659, file: !1356, line: 95, column: 2)
!1662 = !DILocation(line: 96, column: 21, scope: !1661)
!1663 = !DILocation(line: 96, column: 33, scope: !1661)
!1664 = !DILocation(line: 97, column: 11, scope: !1661)
!1665 = !DILocation(line: 99, column: 9, scope: !1647)
!1666 = distinct !DISubprogram(name: "destroy", linkageName: "std.core.mem.allocator.TempAllocator.destroy", scope: !7, file: !7, line: 48, type: !1667, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{null, !30}
!1669 = !DILocation(line: 49, column: 1, scope: !1666)
!1670 = !DILocalVariable(name: "self", arg: 1, scope: !1666, file: !7, line: 48, type: !30)
!1671 = !DILocation(line: 48, column: 31, scope: !1666)
!1672 = !DILocation(line: 50, column: 13, scope: !1666)
!1673 = !DILocation(line: 50, column: 2, scope: !1666)
!1674 = !DILocation(line: 51, column: 6, scope: !1666)
!1675 = !DILocation(line: 51, column: 44, scope: !1666)
!1676 = !DILocation(line: 51, column: 23, scope: !1666)
!1677 = !DILocation(line: 52, column: 18, scope: !1666)
!1678 = !DILocation(line: 52, column: 42, scope: !1666)
!1679 = !DILocation(line: 101, column: 7, scope: !1680, inlinedAt: !1681)
!1680 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !15, file: !15, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1681 = !DILocation(line: 52, column: 13, scope: !1666)
!1682 = !DILocation(line: 101, column: 18, scope: !1680, inlinedAt: !1681)
!1683 = !DILocation(line: 105, column: 25, scope: !1680, inlinedAt: !1681)
!1684 = !DILocation(line: 105, column: 2, scope: !1680, inlinedAt: !1681)
!1685 = distinct !DISubprogram(name: "mark", linkageName: "std.core.mem.allocator.TempAllocator.mark", scope: !7, file: !7, line: 55, type: !1686, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!8, !30}
!1688 = !DILocation(line: 55, column: 46, scope: !1685)
!1689 = !DILocalVariable(name: "self", arg: 1, scope: !1685, file: !7, line: 55, type: !30)
!1690 = !DILocation(line: 55, column: 27, scope: !1685)
!1691 = distinct !DISubprogram(name: "release", linkageName: "std.core.mem.allocator.TempAllocator.release", scope: !7, file: !7, line: 57, type: !1692, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{null, !30, !23, !115}
!1694 = !DILocation(line: 58, column: 1, scope: !1691)
!1695 = !DILocalVariable(name: "self", arg: 1, scope: !1691, file: !7, line: 57, type: !30)
!1696 = !DILocation(line: 57, column: 31, scope: !1691)
!1697 = !DILocalVariable(name: "old_pointer", arg: 2, scope: !1691, file: !7, line: 57, type: !23)
!1698 = !DILocation(line: 57, column: 44, scope: !1691)
!1699 = !DILocalVariable(name: ".anon", arg: 3, scope: !1691, file: !7, line: 57, type: !115)
!1700 = !DILocation(line: 57, column: 57, scope: !1691)
!1701 = !DILocalVariable(name: "old_size", scope: !1691, file: !7, line: 59, type: !8, align: 8)
!1702 = !DILocation(line: 59, column: 6, scope: !1691)
!1703 = !DILocation(line: 59, column: 25, scope: !1691)
!1704 = !DILocation(line: 59, column: 39, scope: !1691)
!1705 = !DILocation(line: 59, column: 19, scope: !1691)
!1706 = !DILocation(line: 60, column: 6, scope: !1691)
!1707 = !DILocation(line: 60, column: 20, scope: !1691)
!1708 = !DILocation(line: 60, column: 33, scope: !1691)
!1709 = !DILocation(line: 60, column: 43, scope: !1691)
!1710 = !DILocation(line: 62, column: 3, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1691, file: !7, line: 61, column: 2)
!1712 = !DILocation(line: 62, column: 16, scope: !1711)
!1713 = !DILocation(line: 63, column: 31, scope: !1711)
!1714 = !DILocation(line: 63, column: 41, scope: !1711)
!1715 = !DILocation(line: 34, column: 2, scope: !1716, inlinedAt: !1718)
!1716 = distinct !DISubprogram(name: "poison_memory_region", linkageName: "poison_memory_region", scope: !1717, file: !1717, line: 32, scopeLine: 32, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1717 = !DIFile(filename: "asan.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core/sanitizer")
!1718 = !DILocation(line: 63, column: 9, scope: !1711)
!1719 = distinct !DISubprogram(name: "reset", linkageName: "std.core.mem.allocator.TempAllocator.reset", scope: !7, file: !7, line: 66, type: !1720, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{null, !30, !4}
!1722 = !DILocation(line: 67, column: 1, scope: !1719)
!1723 = !DILocalVariable(name: "self", arg: 1, scope: !1719, file: !7, line: 66, type: !30)
!1724 = !DILocation(line: 66, column: 29, scope: !1719)
!1725 = !DILocalVariable(name: "mark", arg: 2, scope: !1719, file: !7, line: 66, type: !8)
!1726 = !DILocation(line: 66, column: 40, scope: !1719)
!1727 = !DILocalVariable(name: "last_page", scope: !1719, file: !7, line: 68, type: !35, align: 8)
!1728 = !DILocation(line: 68, column: 21, scope: !1719)
!1729 = !DILocation(line: 68, column: 33, scope: !1719)
!1730 = !DILocation(line: 69, column: 2, scope: !1719)
!1731 = !DILocation(line: 69, column: 9, scope: !1732)
!1732 = distinct !DILexicalBlock(scope: !1719, file: !7, line: 69, column: 2)
!1733 = !DILocation(line: 69, column: 22, scope: !1732)
!1734 = !DILocation(line: 69, column: 39, scope: !1732)
!1735 = !DILocation(line: 71, column: 3, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1732, file: !7, line: 70, column: 2)
!1737 = !DILocation(line: 71, column: 15, scope: !1736)
!1738 = !DILocalVariable(name: "to_free", scope: !1736, file: !7, line: 72, type: !35, align: 8)
!1739 = !DILocation(line: 72, column: 22, scope: !1736)
!1740 = !DILocation(line: 72, column: 32, scope: !1736)
!1741 = !DILocation(line: 73, column: 15, scope: !1736)
!1742 = !DILocation(line: 74, column: 19, scope: !1736)
!1743 = !DILocation(line: 74, column: 3, scope: !1736)
!1744 = !DILocation(line: 76, column: 2, scope: !1719)
!1745 = !DILocation(line: 76, column: 19, scope: !1719)
!1746 = !DILocation(line: 78, column: 8, scope: !1719)
!1747 = !DILocalVariable(name: "cleaned", scope: !1748, file: !7, line: 80, type: !8, align: 8)
!1748 = distinct !DILexicalBlock(scope: !1719, file: !7, line: 79, column: 3)
!1749 = !DILocation(line: 80, column: 8, scope: !1748)
!1750 = !DILocation(line: 80, column: 18, scope: !1748)
!1751 = !DILocation(line: 80, column: 30, scope: !1748)
!1752 = !DILocation(line: 81, column: 8, scope: !1748)
!1753 = !DILocation(line: 84, column: 6, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1748, file: !7, line: 82, column: 4)
!1755 = !DILocation(line: 84, column: 16, scope: !1754)
!1756 = !DILocation(line: 84, column: 23, scope: !1754)
!1757 = !DILocation(line: 86, column: 33, scope: !1754)
!1758 = !DILocation(line: 86, column: 43, scope: !1754)
!1759 = !DILocation(line: 34, column: 2, scope: !1760, inlinedAt: !1761)
!1760 = distinct !DISubprogram(name: "poison_memory_region", linkageName: "poison_memory_region", scope: !1717, file: !1717, line: 32, scopeLine: 32, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1761 = !DILocation(line: 86, column: 11, scope: !1754)
!1762 = !DILocation(line: 90, column: 2, scope: !1719)
!1763 = !DILocation(line: 90, column: 14, scope: !1719)
!1764 = distinct !DISubprogram(name: "_free_page", linkageName: "std.core.mem.allocator.TempAllocator._free_page", scope: !7, file: !7, line: 93, type: !1765, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!161, !23, !30, !35}
!1767 = !DILocation(line: 94, column: 1, scope: !1764)
!1768 = !DILocalVariable(name: "self", arg: 1, scope: !1764, file: !7, line: 93, type: !30)
!1769 = !DILocation(line: 93, column: 35, scope: !1764)
!1770 = !DILocalVariable(name: "page", arg: 2, scope: !1764, file: !7, line: 93, type: !35)
!1771 = !DILocation(line: 93, column: 61, scope: !1764)
!1772 = !DILocalVariable(name: "mem", scope: !1764, file: !7, line: 95, type: !23, align: 8)
!1773 = !DILocation(line: 95, column: 8, scope: !1764)
!1774 = !DILocation(line: 95, column: 14, scope: !1764)
!1775 = !DILocation(line: 96, column: 9, scope: !1764)
!1776 = !DILocation(line: 33, column: 51, scope: !1777, inlinedAt: !1778)
!1777 = distinct !DISubprogram(name: "is_aligned", linkageName: "is_aligned", scope: !7, file: !7, line: 33, scopeLine: 33, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1778 = !DILocation(line: 96, column: 45, scope: !1764)
!1779 = distinct !DISubprogram(name: "_realloc_page", linkageName: "std.core.mem.allocator.TempAllocator._realloc_page", scope: !7, file: !7, line: 99, type: !1780, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!161, !163, !30, !35, !4, !4}
!1782 = !DILocation(line: 100, column: 1, scope: !1779)
!1783 = !DILocalVariable(name: "self", arg: 1, scope: !1779, file: !7, line: 99, type: !30)
!1784 = !DILocation(line: 99, column: 39, scope: !1779)
!1785 = !DILocalVariable(name: "page", arg: 2, scope: !1779, file: !7, line: 99, type: !35)
!1786 = !DILocation(line: 99, column: 65, scope: !1779)
!1787 = !DILocalVariable(name: "size", arg: 3, scope: !1779, file: !7, line: 99, type: !8)
!1788 = !DILocation(line: 99, column: 75, scope: !1779)
!1789 = !DILocalVariable(name: "alignment", arg: 4, scope: !1779, file: !7, line: 99, type: !8)
!1790 = !DILocation(line: 99, column: 85, scope: !1779)
!1791 = !DILocalVariable(name: "real_pointer", scope: !1779, file: !7, line: 102, type: !23, align: 8)
!1792 = !DILocation(line: 102, column: 8, scope: !1779)
!1793 = !DILocation(line: 102, column: 23, scope: !1779)
!1794 = !DILocalVariable(name: "pointer_to_prev", scope: !1779, file: !7, line: 105, type: !1795, align: 8)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "TempAllocatorPage**", baseType: !35, size: 64, align: 64, dwarfAddressSpace: 0)
!1796 = !DILocation(line: 105, column: 22, scope: !1779)
!1797 = !DILocation(line: 105, column: 41, scope: !1779)
!1798 = !DILocation(line: 107, column: 2, scope: !1779)
!1799 = !DILocation(line: 107, column: 10, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1779, file: !7, line: 107, column: 2)
!1801 = !DILocation(line: 107, column: 29, scope: !1800)
!1802 = !DILocation(line: 107, column: 9, scope: !1800)
!1803 = !DILocation(line: 109, column: 25, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1800, file: !7, line: 108, column: 2)
!1805 = !DILocation(line: 109, column: 24, scope: !1804)
!1806 = !DILocation(line: 111, column: 3, scope: !1779)
!1807 = !DILocation(line: 111, column: 21, scope: !1779)
!1808 = !DILocalVariable(name: "page_size", scope: !1779, file: !7, line: 112, type: !8, align: 8)
!1809 = !DILocation(line: 112, column: 6, scope: !1779)
!1810 = !DILocation(line: 32, column: 48, scope: !1811, inlinedAt: !1812)
!1811 = distinct !DISubprogram(name: "pagesize", linkageName: "pagesize", scope: !7, file: !7, line: 32, scopeLine: 32, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1812 = !DILocation(line: 112, column: 18, scope: !1779)
!1813 = !DILocalVariable(name: "data", scope: !1779, file: !7, line: 114, type: !23, align: 8)
!1814 = !DILocation(line: 114, column: 8, scope: !1779)
!1815 = !DILocation(line: 114, column: 15, scope: !1779)
!1816 = !DILocation(line: 115, column: 19, scope: !1779)
!1817 = !DILocation(line: 309, column: 11, scope: !1818, inlinedAt: !1820)
!1818 = distinct !DILexicalBlock(scope: !1819, file: !203, line: 312, column: 1)
!1819 = distinct !DISubprogram(name: "copy", linkageName: "copy", scope: !203, file: !203, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1820 = !DILocation(line: 115, column: 7, scope: !1779)
!1821 = !DILocation(line: 309, column: 23, scope: !1818, inlinedAt: !1820)
!1822 = !DILocation(line: 309, column: 29, scope: !1818, inlinedAt: !1820)
!1823 = !DILocation(line: 309, column: 36, scope: !1818, inlinedAt: !1820)
!1824 = !DILocation(line: 309, column: 43, scope: !1818, inlinedAt: !1820)
!1825 = !DILocation(line: 309, column: 49, scope: !1818, inlinedAt: !1820)
!1826 = !DILocation(line: 309, column: 56, scope: !1818, inlinedAt: !1820)
!1827 = !DILocation(line: 313, column: 11, scope: !1819, inlinedAt: !1820)
!1828 = !DILocation(line: 313, column: 16, scope: !1819, inlinedAt: !1820)
!1829 = !DILocation(line: 313, column: 21, scope: !1819, inlinedAt: !1820)
!1830 = !DILocation(line: 313, column: 26, scope: !1819, inlinedAt: !1820)
!1831 = !DILocation(line: 116, column: 2, scope: !1779)
!1832 = !DILocation(line: 33, column: 51, scope: !1833, inlinedAt: !1834)
!1833 = distinct !DISubprogram(name: "is_aligned", linkageName: "is_aligned", scope: !7, file: !7, line: 33, scopeLine: 33, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1834 = !DILocation(line: 116, column: 47, scope: !1779)
!1835 = !DILocation(line: 117, column: 9, scope: !1779)
!1836 = distinct !DISubprogram(name: "resize", linkageName: "std.core.mem.allocator.TempAllocator.resize", scope: !7, file: !7, line: 120, type: !1837, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!161, !163, !30, !23, !4, !4}
!1839 = !DILocation(line: 121, column: 1, scope: !1836)
!1840 = !DILocalVariable(name: "self", arg: 1, scope: !1836, file: !7, line: 120, type: !30)
!1841 = !DILocation(line: 120, column: 32, scope: !1836)
!1842 = !DILocalVariable(name: "pointer", arg: 2, scope: !1836, file: !7, line: 120, type: !23)
!1843 = !DILocation(line: 120, column: 45, scope: !1836)
!1844 = !DILocalVariable(name: "size", arg: 3, scope: !1836, file: !7, line: 120, type: !8)
!1845 = !DILocation(line: 120, column: 58, scope: !1836)
!1846 = !DILocalVariable(name: "alignment", arg: 4, scope: !1836, file: !7, line: 120, type: !8)
!1847 = !DILocation(line: 120, column: 68, scope: !1836)
!1848 = !DILocalVariable(name: "chunk", scope: !1836, file: !7, line: 122, type: !1849, align: 8)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "TempAllocatorChunk*", baseType: !1850, size: 64, align: 64, dwarfAddressSpace: 0)
!1850 = !DICompositeType(tag: DW_TAG_structure_type, name: "TempAllocatorChunk", scope: !7, file: !7, line: 4, size: 64, align: 64, elements: !1851, identifier: "std.core.mem.allocator.TempAllocatorChunk")
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1850, file: !7, line: 6, baseType: !8, size: 64, align: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1850, file: !7, line: 7, baseType: !44, align: 8, offset: 64)
!1854 = !DILocation(line: 122, column: 22, scope: !1836)
!1855 = !DILocation(line: 122, column: 30, scope: !1836)
!1856 = !DILocation(line: 122, column: 40, scope: !1836)
!1857 = !DILocation(line: 123, column: 6, scope: !1836)
!1858 = !DILocation(line: 125, column: 10, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !1836, file: !7, line: 124, column: 2)
!1860 = !DILocalVariable(name: "page", scope: !1859, file: !7, line: 127, type: !35, align: 8)
!1861 = !DILocation(line: 127, column: 22, scope: !1859)
!1862 = !DILocation(line: 127, column: 29, scope: !1859)
!1863 = !DILocation(line: 127, column: 39, scope: !1859)
!1864 = !DILocation(line: 128, column: 10, scope: !1859)
!1865 = !DILocalVariable(name: "data", scope: !1836, file: !7, line: 131, type: !1849, align: 8)
!1866 = !DILocation(line: 131, column: 22, scope: !1836)
!1867 = !DILocation(line: 131, column: 29, scope: !1836)
!1868 = !DILocation(line: 132, column: 12, scope: !1836)
!1869 = !DILocation(line: 132, column: 27, scope: !1836)
!1870 = !DILocation(line: 309, column: 11, scope: !1871, inlinedAt: !1873)
!1871 = distinct !DILexicalBlock(scope: !1872, file: !203, line: 312, column: 1)
!1872 = distinct !DISubprogram(name: "copy", linkageName: "copy", scope: !203, file: !203, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1873 = !DILocation(line: 132, column: 7, scope: !1836)
!1874 = !DILocation(line: 309, column: 23, scope: !1871, inlinedAt: !1873)
!1875 = !DILocation(line: 309, column: 29, scope: !1871, inlinedAt: !1873)
!1876 = !DILocation(line: 309, column: 36, scope: !1871, inlinedAt: !1873)
!1877 = !DILocation(line: 309, column: 43, scope: !1871, inlinedAt: !1873)
!1878 = !DILocation(line: 309, column: 49, scope: !1871, inlinedAt: !1873)
!1879 = !DILocation(line: 309, column: 56, scope: !1871, inlinedAt: !1873)
!1880 = !DILocation(line: 313, column: 11, scope: !1872, inlinedAt: !1873)
!1881 = !DILocation(line: 313, column: 16, scope: !1872, inlinedAt: !1873)
!1882 = !DILocation(line: 313, column: 21, scope: !1872, inlinedAt: !1873)
!1883 = !DILocation(line: 313, column: 26, scope: !1872, inlinedAt: !1873)
!1884 = !DILocation(line: 134, column: 9, scope: !1836)
!1885 = distinct !DISubprogram(name: "acquire", linkageName: "std.core.mem.allocator.TempAllocator.acquire", scope: !7, file: !7, line: 142, type: !1886, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!161, !163, !30, !4, !75, !4}
!1888 = !DILocation(line: 143, column: 1, scope: !1885)
!1889 = !DILocalVariable(name: "self", arg: 1, scope: !1885, file: !7, line: 142, type: !30)
!1890 = !DILocation(line: 142, column: 33, scope: !1885)
!1891 = !DILocalVariable(name: "size", arg: 2, scope: !1885, file: !7, line: 142, type: !8)
!1892 = !DILocation(line: 142, column: 44, scope: !1885)
!1893 = !DILocalVariable(name: "init_type", arg: 3, scope: !1885, file: !7, line: 142, type: !75)
!1894 = !DILocation(line: 142, column: 64, scope: !1885)
!1895 = !DILocalVariable(name: "alignment", arg: 4, scope: !1885, file: !7, line: 142, type: !8)
!1896 = !DILocation(line: 142, column: 79, scope: !1885)
!1897 = !DILocation(line: 138, column: 11, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !1885, file: !7, line: 143, column: 1)
!1899 = !DILocation(line: 139, column: 12, scope: !1898)
!1900 = !DILocation(line: 999, column: 9, scope: !1901, inlinedAt: !1902)
!1901 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !177, file: !177, line: 997, scopeLine: 997, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1902 = !DILocation(line: 139, column: 31, scope: !1898)
!1903 = !DILocation(line: 999, column: 20, scope: !1901, inlinedAt: !1902)
!1904 = !DILocation(line: 999, column: 25, scope: !1901, inlinedAt: !1902)
!1905 = !DILocation(line: 139, column: 11, scope: !1898)
!1906 = !DILocation(line: 140, column: 11, scope: !1898)
!1907 = !DILocation(line: 144, column: 39, scope: !1885)
!1908 = !DILocation(line: 144, column: 14, scope: !1885)
!1909 = !DILocalVariable(name: "start_mem", scope: !1885, file: !7, line: 145, type: !23, align: 8)
!1910 = !DILocation(line: 145, column: 8, scope: !1885)
!1911 = !DILocation(line: 145, column: 21, scope: !1885)
!1912 = !DILocalVariable(name: "starting_ptr", scope: !1885, file: !7, line: 146, type: !23, align: 8)
!1913 = !DILocation(line: 146, column: 8, scope: !1885)
!1914 = !DILocation(line: 146, column: 23, scope: !1885)
!1915 = !DILocation(line: 146, column: 35, scope: !1885)
!1916 = !DILocalVariable(name: "aligned_header_start", scope: !1885, file: !7, line: 147, type: !23, align: 8)
!1917 = !DILocation(line: 147, column: 8, scope: !1885)
!1918 = !DILocation(line: 273, column: 38, scope: !1919, inlinedAt: !1920)
!1919 = distinct !DISubprogram(name: "aligned_pointer", linkageName: "aligned_pointer", scope: !203, file: !203, line: 271, scopeLine: 271, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1920 = !DILocation(line: 147, column: 36, scope: !1885)
!1921 = !DILocation(line: 273, column: 48, scope: !1919, inlinedAt: !1920)
!1922 = !DILocation(line: 273, column: 10, scope: !1919, inlinedAt: !1920)
!1923 = !DILocalVariable(name: "mem", scope: !1885, file: !7, line: 148, type: !23, align: 8)
!1924 = !DILocation(line: 148, column: 8, scope: !1885)
!1925 = !DILocation(line: 148, column: 14, scope: !1885)
!1926 = !DILocation(line: 148, column: 37, scope: !1885)
!1927 = !DILocation(line: 149, column: 6, scope: !1885)
!1928 = !DILocation(line: 273, column: 38, scope: !1929, inlinedAt: !1930)
!1929 = distinct !DISubprogram(name: "aligned_pointer", linkageName: "aligned_pointer", scope: !203, file: !203, line: 271, scopeLine: 271, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1930 = !DILocation(line: 151, column: 14, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1885, file: !7, line: 150, column: 2)
!1932 = !DILocation(line: 273, column: 48, scope: !1929, inlinedAt: !1930)
!1933 = !DILocation(line: 273, column: 10, scope: !1929, inlinedAt: !1930)
!1934 = !DILocalVariable(name: "new_usage", scope: !1885, file: !7, line: 153, type: !8, align: 8)
!1935 = !DILocation(line: 153, column: 6, scope: !1885)
!1936 = !DILocation(line: 153, column: 24, scope: !1885)
!1937 = !DILocation(line: 153, column: 30, scope: !1885)
!1938 = !DILocation(line: 153, column: 19, scope: !1885)
!1939 = !DILocation(line: 153, column: 43, scope: !1885)
!1940 = !DILocation(line: 156, column: 6, scope: !1885)
!1941 = !DILocation(line: 156, column: 19, scope: !1885)
!1942 = !DILocation(line: 158, column: 46, scope: !1943)
!1943 = distinct !DILexicalBlock(scope: !1885, file: !7, line: 157, column: 2)
!1944 = !DILocation(line: 158, column: 58, scope: !1943)
!1945 = !DILocalVariable(name: "chunk_start", scope: !1943, file: !7, line: 159, type: !1849, align: 8)
!1946 = !DILocation(line: 159, column: 23, scope: !1943)
!1947 = !DILocation(line: 159, column: 37, scope: !1943)
!1948 = !DILocation(line: 159, column: 43, scope: !1943)
!1949 = !DILocation(line: 160, column: 3, scope: !1943)
!1950 = !DILocation(line: 160, column: 22, scope: !1943)
!1951 = !DILocation(line: 161, column: 3, scope: !1943)
!1952 = !DILocation(line: 161, column: 15, scope: !1943)
!1953 = !DILocation(line: 162, column: 7, scope: !1943)
!1954 = !DILocation(line: 291, column: 11, scope: !1955, inlinedAt: !1956)
!1955 = distinct !DISubprogram(name: "clear", linkageName: "clear", scope: !203, file: !203, line: 289, scopeLine: 289, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1956 = !DILocation(line: 162, column: 31, scope: !1943)
!1957 = !DILocation(line: 291, column: 25, scope: !1955, inlinedAt: !1956)
!1958 = !DILocation(line: 291, column: 30, scope: !1955, inlinedAt: !1956)
!1959 = !DILocation(line: 163, column: 10, scope: !1943)
!1960 = !DILocalVariable(name: "page", scope: !1885, file: !7, line: 167, type: !35, align: 8)
!1961 = !DILocation(line: 167, column: 21, scope: !1885)
!1962 = !DILocation(line: 170, column: 6, scope: !1885)
!1963 = !DILocalVariable(name: "total_alloc_size", scope: !1964, file: !7, line: 173, type: !8, align: 8)
!1964 = distinct !DILexicalBlock(scope: !1885, file: !7, line: 171, column: 2)
!1965 = !DILocation(line: 173, column: 7, scope: !1964)
!1966 = !DILocation(line: 173, column: 73, scope: !1964)
!1967 = !DILocation(line: 173, column: 46, scope: !1964)
!1968 = !DILocation(line: 173, column: 79, scope: !1964)
!1969 = !DILocation(line: 173, column: 31, scope: !1964)
!1970 = !DILocation(line: 174, column: 7, scope: !1964)
!1971 = !DILocation(line: 176, column: 36, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1964, file: !7, line: 175, column: 3)
!1973 = !DILocation(line: 122, column: 7, scope: !1974, inlinedAt: !1975)
!1974 = distinct !DISubprogram(name: "calloc_aligned", linkageName: "calloc_aligned", scope: !15, file: !15, line: 120, scopeLine: 120, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1975 = !DILocation(line: 176, column: 21, scope: !1972)
!1976 = !DILocation(line: 122, column: 20, scope: !1974, inlinedAt: !1975)
!1977 = !DILocation(line: 123, column: 39, scope: !1974, inlinedAt: !1975)
!1978 = !DILocation(line: 123, column: 9, scope: !1974, inlinedAt: !1975)
!1979 = !DILocation(line: 180, column: 36, scope: !1980)
!1980 = distinct !DILexicalBlock(scope: !1964, file: !7, line: 179, column: 3)
!1981 = !DILocation(line: 110, column: 7, scope: !1982, inlinedAt: !1983)
!1982 = distinct !DISubprogram(name: "malloc_aligned", linkageName: "malloc_aligned", scope: !15, file: !15, line: 108, scopeLine: 108, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!1983 = !DILocation(line: 180, column: 21, scope: !1980)
!1984 = !DILocation(line: 110, column: 20, scope: !1982, inlinedAt: !1983)
!1985 = !DILocation(line: 116, column: 43, scope: !1982, inlinedAt: !1983)
!1986 = !DILocation(line: 116, column: 10, scope: !1982, inlinedAt: !1983)
!1987 = !DILocation(line: 182, column: 11, scope: !1964)
!1988 = !DILocation(line: 182, column: 36, scope: !1964)
!1989 = !DILocation(line: 183, column: 3, scope: !1964)
!1990 = !DILocation(line: 183, column: 16, scope: !1964)
!1991 = !DILocation(line: 184, column: 3, scope: !1964)
!1992 = !DILocation(line: 184, column: 15, scope: !1964)
!1993 = !DILocalVariable(name: "padded_header_size", scope: !1994, file: !7, line: 189, type: !8, align: 8)
!1994 = distinct !DILexicalBlock(scope: !1885, file: !7, line: 187, column: 2)
!1995 = !DILocation(line: 189, column: 7, scope: !1994)
!1996 = !DILocation(line: 189, column: 33, scope: !1994)
!1997 = !DILocalVariable(name: "total_alloc_size", scope: !1994, file: !7, line: 190, type: !8, align: 8)
!1998 = !DILocation(line: 190, column: 7, scope: !1994)
!1999 = !DILocation(line: 190, column: 26, scope: !1994)
!2000 = !DILocation(line: 190, column: 47, scope: !1994)
!2001 = !DILocalVariable(name: "alloc", scope: !1994, file: !7, line: 191, type: !23, align: 8)
!2002 = !DILocation(line: 191, column: 9, scope: !1994)
!2003 = !DILocation(line: 191, column: 17, scope: !1994)
!2004 = !DILocation(line: 191, column: 77, scope: !1994)
!2005 = !DILocation(line: 194, column: 10, scope: !1994)
!2006 = !DILocation(line: 194, column: 18, scope: !1994)
!2007 = !DILocation(line: 195, column: 30, scope: !1994)
!2008 = !DILocation(line: 195, column: 15, scope: !1994)
!2009 = !DILocation(line: 196, column: 31, scope: !1994)
!2010 = !DILocation(line: 196, column: 15, scope: !1994)
!2011 = !DILocation(line: 197, column: 3, scope: !1994)
!2012 = !DILocation(line: 197, column: 16, scope: !1994)
!2013 = !DILocation(line: 198, column: 3, scope: !1994)
!2014 = !DILocation(line: 198, column: 15, scope: !1994)
!2015 = !DILocation(line: 202, column: 2, scope: !1885)
!2016 = !DILocation(line: 202, column: 15, scope: !1885)
!2017 = !DILocation(line: 204, column: 2, scope: !1885)
!2018 = !DILocation(line: 204, column: 16, scope: !1885)
!2019 = !DILocation(line: 206, column: 2, scope: !1885)
!2020 = !DILocation(line: 206, column: 19, scope: !1885)
!2021 = !DILocation(line: 207, column: 2, scope: !1885)
!2022 = !DILocation(line: 207, column: 19, scope: !1885)
!2023 = !DILocation(line: 208, column: 10, scope: !1885)
!2024 = !DILocation(line: 208, column: 20, scope: !1885)
!2025 = distinct !DISubprogram(name: "print_pages", linkageName: "std.core.mem.allocator.TempAllocator.print_pages", scope: !7, file: !7, line: 211, type: !2026, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2026 = !DISubroutineType(types: !2027)
!2027 = !{!161, !23, !30, !2028}
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "File*", baseType: !2029, size: 64, align: 64, dwarfAddressSpace: 0)
!2029 = !DICompositeType(tag: DW_TAG_structure_type, name: "File", scope: !7, file: !7, line: 4, size: 64, align: 64, elements: !2030, identifier: "std.io.File")
!2030 = !{!2031}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2029, file: !7, line: 6, baseType: !2032, size: 64, align: 64)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "CFile", scope: !7, file: !7, line: 360, baseType: !23, align: 8)
!2033 = !DILocation(line: 212, column: 1, scope: !2025)
!2034 = !DILocalVariable(name: "self", arg: 1, scope: !2025, file: !7, line: 211, type: !30)
!2035 = !DILocation(line: 211, column: 36, scope: !2025)
!2036 = !DILocalVariable(name: "f", arg: 2, scope: !2025, file: !7, line: 211, type: !2028)
!2037 = !DILocation(line: 211, column: 49, scope: !2025)
!2038 = !DILocalVariable(name: "last_page", scope: !2025, file: !7, line: 213, type: !35, align: 8)
!2039 = !DILocation(line: 213, column: 21, scope: !2025)
!2040 = !DILocation(line: 213, column: 33, scope: !2025)
!2041 = !DILocation(line: 214, column: 7, scope: !2025)
!2042 = !DILocation(line: 216, column: 15, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !2025, file: !7, line: 215, column: 2)
!2044 = !DILocation(line: 216, column: 7, scope: !2043)
!2045 = !DILocation(line: 219, column: 14, scope: !2025)
!2046 = !DILocation(line: 219, column: 6, scope: !2025)
!2047 = !DILocalVariable(name: "index", scope: !2025, file: !7, line: 220, type: !1276, align: 4)
!2048 = !DILocation(line: 220, column: 7, scope: !2025)
!2049 = !DILocation(line: 220, column: 15, scope: !2025)
!2050 = !DILocation(line: 221, column: 2, scope: !2025)
!2051 = !DILocation(line: 221, column: 9, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !2025, file: !7, line: 221, column: 2)
!2053 = !DILocalVariable(name: "is_not_aligned", scope: !2054, file: !7, line: 223, type: !115, align: 1)
!2054 = distinct !DILexicalBlock(scope: !2052, file: !7, line: 222, column: 2)
!2055 = !DILocation(line: 223, column: 8, scope: !2054)
!2056 = !DILocation(line: 223, column: 27, scope: !2054)
!2057 = !DILocation(line: 224, column: 15, scope: !2054)
!2058 = !DILocation(line: 224, column: 50, scope: !2054)
!2059 = !DILocation(line: 225, column: 5, scope: !2054)
!2060 = !DILocation(line: 225, column: 37, scope: !2054)
!2061 = !DILocation(line: 225, column: 54, scope: !2054)
!2062 = !DILocation(line: 225, column: 73, scope: !2054)
!2063 = !DILocation(line: 225, column: 95, scope: !2054)
!2064 = !DILocation(line: 224, column: 7, scope: !2054)
!2065 = !DILocation(line: 226, column: 15, scope: !2054)
!2066 = distinct !DISubprogram(name: "new_temp_allocator", linkageName: "std.core.mem.allocator.new_temp_allocator", scope: !7, file: !7, line: 38, type: !2067, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{!161, !2069, !4, !20}
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "TempAllocator**", baseType: !30, size: 64, align: 64, dwarfAddressSpace: 0)
!2070 = !DILocalVariable(name: "size", arg: 1, scope: !2066, file: !7, line: 38, type: !8)
!2071 = !DILocation(line: 38, column: 43, scope: !2066)
!2072 = !DILocalVariable(name: "allocator", arg: 2, scope: !2066, file: !7, line: 38, type: !20)
!2073 = !DILocation(line: 38, column: 59, scope: !2066)
!2074 = !DILocation(line: 36, column: 11, scope: !2075)
!2075 = distinct !DILexicalBlock(scope: !2066, file: !7, line: 39, column: 1)
!2076 = !DILocalVariable(name: "temp", scope: !2066, file: !7, line: 40, type: !30, align: 8)
!2077 = !DILocation(line: 40, column: 17, scope: !2066)
!2078 = !DILocation(line: 236, column: 54, scope: !2079, inlinedAt: !2080)
!2079 = distinct !DISubprogram(name: "alloc_with_padding", linkageName: "alloc_with_padding", scope: !15, file: !15, line: 234, scopeLine: 234, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2080 = !DILocation(line: 40, column: 35, scope: !2066)
!2081 = !DILocation(line: 236, column: 39, scope: !2079, inlinedAt: !2080)
!2082 = !DILocation(line: 62, column: 7, scope: !2083, inlinedAt: !2084)
!2083 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !15, file: !15, line: 60, scopeLine: 60, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2084 = !DILocation(line: 236, column: 10, scope: !2079, inlinedAt: !2080)
!2085 = !DILocation(line: 62, column: 20, scope: !2083, inlinedAt: !2084)
!2086 = !DILocation(line: 28, column: 71, scope: !2087, inlinedAt: !2088)
!2087 = distinct !DISubprogram(name: "[DEFAULT INIT]", linkageName: "[DEFAULT INIT]", scope: !15, file: !15, line: 28, scopeLine: 28, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2088 = !DILocation(line: 68, column: 10, scope: !2083, inlinedAt: !2084)
!2089 = !DILocation(line: 41, column: 2, scope: !2066)
!2090 = !DILocation(line: 41, column: 19, scope: !2066)
!2091 = !DILocation(line: 42, column: 2, scope: !2066)
!2092 = !DILocation(line: 42, column: 27, scope: !2066)
!2093 = !DILocation(line: 43, column: 2, scope: !2066)
!2094 = !DILocation(line: 43, column: 14, scope: !2066)
!2095 = !DILocation(line: 44, column: 2, scope: !2066)
!2096 = !DILocation(line: 44, column: 18, scope: !2066)
!2097 = !DILocation(line: 45, column: 9, scope: !2066)
!2098 = distinct !DISubprogram(name: "init", linkageName: "std.core.mem.allocator.TrackingAllocator.init", scope: !11, file: !11, line: 34, type: !2099, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !2101, !20}
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "TrackingAllocator*", baseType: !2102, size: 64, align: 64, dwarfAddressSpace: 0)
!2102 = !DICompositeType(tag: DW_TAG_structure_type, name: "TrackingAllocator", scope: !11, file: !11, line: 21, size: 640, align: 64, elements: !2103, identifier: "std.core.mem.allocator.TrackingAllocator")
!2103 = !{!2104, !2105, !2137, !2138}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "inner_allocator", scope: !2102, file: !11, line: 23, baseType: !20, size: 128, align: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2102, file: !11, line: 24, baseType: !2106, size: 384, align: 64, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocMap", scope: !11, file: !11, line: 16, baseType: !2107, align: 8)
!2107 = !DICompositeType(tag: DW_TAG_structure_type, name: "HashMap", scope: !11, file: !11, line: 7, size: 384, align: 64, elements: !2108, identifier: "std_collections_map$ulong$std.core.mem.allocator.Allocation$.HashMap")
!2108 = !{!2109, !2132, !2133, !2134, !2135}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2107, file: !11, line: 9, baseType: !2110, size: 128, align: 64)
!2110 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry*[]", size: 128, align: 64, elements: !2111, identifier: "Entry*[]")
!2111 = !{!2112, !2131}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2110, baseType: !2113, size: 64, align: 64)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Entry**", baseType: !2114, size: 64, align: 64, dwarfAddressSpace: 0)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Entry*", baseType: !2115, size: 64, align: 64, dwarfAddressSpace: 0)
!2115 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", scope: !11, file: !11, line: 499, size: 1344, align: 64, elements: !2116, identifier: "std_collections_map$ulong$std.core.mem.allocator.Allocation$.Entry")
!2116 = !{!2117, !2118, !2120, !2130}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2115, file: !11, line: 501, baseType: !1276, size: 32, align: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2115, file: !11, line: 502, baseType: !2119, size: 64, align: 64, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key", scope: !11, file: !11, line: 16, baseType: !4, align: 8)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2115, file: !11, line: 503, baseType: !2121, size: 1152, align: 64, offset: 128)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "Value", scope: !11, file: !11, line: 16, baseType: !2122, align: 8)
!2122 = !DICompositeType(tag: DW_TAG_structure_type, name: "Allocation", scope: !11, file: !11, line: 9, size: 1152, align: 64, elements: !2123, identifier: "std.core.mem.allocator.Allocation")
!2123 = !{!2124, !2125, !2126}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2122, file: !11, line: 11, baseType: !23, size: 64, align: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2122, file: !11, line: 12, baseType: !8, size: 64, align: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "backtrace", scope: !2122, file: !11, line: 13, baseType: !2127, size: 1024, align: 64, offset: 128)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 1024, align: 64, elements: !2128)
!2128 = !{!2129}
!2129 = !DISubrange(count: 16, lowerBound: 0)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2115, file: !11, line: 504, baseType: !2114, size: 64, align: 64, offset: 1280)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2110, baseType: !8, size: 64, align: 64, offset: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !2107, file: !11, line: 10, baseType: !20, size: 128, align: 64, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2107, file: !11, line: 11, baseType: !1276, size: 32, align: 32, offset: 256)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "threshold", scope: !2107, file: !11, line: 12, baseType: !1276, size: 32, align: 32, offset: 288)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "load_factor", scope: !2107, file: !11, line: 13, baseType: !2136, size: 32, align: 32, offset: 320)
!2136 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "mem_total", scope: !2102, file: !11, line: 25, baseType: !8, size: 64, align: 64, offset: 512)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "allocs_total", scope: !2102, file: !11, line: 26, baseType: !8, size: 64, align: 64, offset: 576)
!2139 = !DILocation(line: 35, column: 1, scope: !2098)
!2140 = !DILocalVariable(name: "self", arg: 1, scope: !2098, file: !11, line: 34, type: !2101)
!2141 = !DILocation(line: 34, column: 32, scope: !2098)
!2142 = !DILocalVariable(name: "allocator", arg: 2, scope: !2098, file: !11, line: 34, type: !20)
!2143 = !DILocation(line: 34, column: 49, scope: !2098)
!2144 = !DILocation(line: 36, column: 3, scope: !2098)
!2145 = !DILocation(line: 36, column: 31, scope: !2098)
!2146 = !DILocation(line: 37, column: 2, scope: !2098)
!2147 = distinct !DISubprogram(name: "free", linkageName: "std.core.mem.allocator.TrackingAllocator.free", scope: !11, file: !11, line: 43, type: !2148, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{null, !2101}
!2150 = !DILocation(line: 44, column: 1, scope: !2147)
!2151 = !DILocalVariable(name: "self", arg: 1, scope: !2147, file: !11, line: 43, type: !2101)
!2152 = !DILocation(line: 43, column: 32, scope: !2147)
!2153 = !DILocation(line: 45, column: 2, scope: !2147)
!2154 = !DILocation(line: 46, column: 3, scope: !2147)
!2155 = distinct !DISubprogram(name: "allocated", linkageName: "std.core.mem.allocator.TrackingAllocator.allocated", scope: !11, file: !11, line: 52, type: !2156, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!8, !2101}
!2158 = !DILocation(line: 53, column: 1, scope: !2155)
!2159 = !DILocalVariable(name: "self", arg: 1, scope: !2155, file: !11, line: 52, type: !2101)
!2160 = !DILocation(line: 52, column: 36, scope: !2155)
!2161 = !DILocalVariable(name: "allocated", scope: !2155, file: !11, line: 54, type: !8, align: 8)
!2162 = !DILocation(line: 54, column: 6, scope: !2155)
!2163 = !DILocation(line: 54, column: 18, scope: !2155)
!2164 = !DILocalVariable(name: "current", scope: !2165, file: !11, line: 536, type: !30, align: 8)
!2165 = distinct !DISubprogram(name: "@pool", linkageName: "@pool", scope: !203, file: !203, line: 534, scopeLine: 534, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2166 = !DILocation(line: 536, column: 17, scope: !2165, inlinedAt: !2167)
!2167 = !DILocation(line: 55, column: 2, scope: !2155)
!2168 = !DILocation(line: 396, column: 7, scope: !2169, inlinedAt: !2170)
!2169 = distinct !DISubprogram(name: "temp", linkageName: "temp", scope: !15, file: !15, line: 394, scopeLine: 394, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2170 = !DILocation(line: 536, column: 38, scope: !2165, inlinedAt: !2167)
!2171 = !DILocation(line: 398, column: 3, scope: !2172, inlinedAt: !2170)
!2172 = distinct !DILexicalBlock(scope: !2169, file: !15, line: 397, column: 2)
!2173 = !DILocation(line: 400, column: 9, scope: !2169, inlinedAt: !2170)
!2174 = !DILocalVariable(name: "mark", scope: !2165, file: !11, line: 542, type: !8, align: 8)
!2175 = !DILocation(line: 542, column: 6, scope: !2165, inlinedAt: !2167)
!2176 = !DILocation(line: 542, column: 13, scope: !2165, inlinedAt: !2167)
!2177 = !DILocalVariable(name: ".temp", scope: !2178, file: !11, line: 57, type: !2180, align: 8)
!2178 = distinct !DILexicalBlock(scope: !2179, file: !11, line: 57, column: 3)
!2179 = distinct !DILexicalBlock(scope: !2155, file: !11, line: 56, column: 2)
!2180 = !DICompositeType(tag: DW_TAG_structure_type, name: "Value[]", size: 128, align: 64, elements: !2181, identifier: "Value[]")
!2181 = !{!2182, !2184}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2180, baseType: !2183, size: 64, align: 64)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Value*", baseType: !2121, size: 64, align: 64, dwarfAddressSpace: 0)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2180, baseType: !8, size: 64, align: 64, offset: 64)
!2185 = !DILocation(line: 57, column: 26, scope: !2178)
!2186 = !DILocalVariable(name: ".temp", scope: !2178, file: !11, line: 57, type: !8, align: 8)
!2187 = !DILocalVariable(name: "allocation", scope: !2188, file: !11, line: 57, type: !2189, align: 8)
!2188 = distinct !DILexicalBlock(scope: !2178, file: !11, line: 57, column: 50)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Allocation*", baseType: !2122, size: 64, align: 64, dwarfAddressSpace: 0)
!2190 = !DILocation(line: 57, column: 13, scope: !2188)
!2191 = !DILocation(line: 57, column: 26, scope: !2188)
!2192 = !DILocation(line: 57, column: 50, scope: !2188)
!2193 = !DILocation(line: 57, column: 63, scope: !2188)
!2194 = !DILocation(line: 545, column: 17, scope: !2195, inlinedAt: !2167)
!2195 = distinct !DILexicalBlock(scope: !2165, file: !203, line: 544, column: 2)
!2196 = !DILocation(line: 545, column: 3, scope: !2195, inlinedAt: !2167)
!2197 = !DILocation(line: 59, column: 9, scope: !2155)
!2198 = distinct !DISubprogram(name: "total_allocated", linkageName: "std.core.mem.allocator.TrackingAllocator.total_allocated", scope: !11, file: !11, line: 65, type: !2156, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2199 = !DILocation(line: 65, column: 52, scope: !2198)
!2200 = !DILocalVariable(name: "self", arg: 1, scope: !2198, file: !11, line: 65, type: !2101)
!2201 = !DILocation(line: 65, column: 42, scope: !2198)
!2202 = distinct !DISubprogram(name: "total_allocation_count", linkageName: "std.core.mem.allocator.TrackingAllocator.total_allocation_count", scope: !11, file: !11, line: 70, type: !2156, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2203 = !DILocation(line: 70, column: 59, scope: !2202)
!2204 = !DILocalVariable(name: "self", arg: 1, scope: !2202, file: !11, line: 70, type: !2101)
!2205 = !DILocation(line: 70, column: 49, scope: !2202)
!2206 = distinct !DISubprogram(name: "allocations_tlist", linkageName: "std.core.mem.allocator.TrackingAllocator.allocations_tlist", scope: !11, file: !11, line: 72, type: !2207, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!2209, !2101, !20}
!2209 = !DICompositeType(tag: DW_TAG_structure_type, name: "Allocation[]", size: 128, align: 64, elements: !2210, identifier: "Allocation[]")
!2210 = !{!2211, !2212}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2209, baseType: !2189, size: 64, align: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2209, baseType: !8, size: 64, align: 64, offset: 64)
!2213 = !DILocation(line: 73, column: 1, scope: !2206)
!2214 = !DILocalVariable(name: "self", arg: 1, scope: !2206, file: !11, line: 72, type: !2101)
!2215 = !DILocation(line: 72, column: 53, scope: !2206)
!2216 = !DILocalVariable(name: "allocator", arg: 2, scope: !2206, file: !11, line: 72, type: !20)
!2217 = !DILocation(line: 72, column: 70, scope: !2206)
!2218 = !DILocation(line: 74, column: 9, scope: !2206)
!2219 = distinct !DISubprogram(name: "allocation_count", linkageName: "std.core.mem.allocator.TrackingAllocator.allocation_count", scope: !11, file: !11, line: 80, type: !2156, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2220 = !DILocation(line: 80, column: 53, scope: !2219)
!2221 = !DILocalVariable(name: "self", arg: 1, scope: !2219, file: !11, line: 80, type: !2101)
!2222 = !DILocation(line: 80, column: 43, scope: !2219)
!2223 = distinct !DISubprogram(name: "acquire", linkageName: "std.core.mem.allocator.TrackingAllocator.acquire", scope: !11, file: !11, line: 82, type: !2224, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2224 = !DISubroutineType(types: !2225)
!2225 = !{!161, !163, !2101, !4, !75, !4}
!2226 = !DILocation(line: 83, column: 1, scope: !2223)
!2227 = !DILocalVariable(name: "self", arg: 1, scope: !2223, file: !11, line: 82, type: !2101)
!2228 = !DILocation(line: 82, column: 37, scope: !2223)
!2229 = !DILocalVariable(name: "size", arg: 2, scope: !2223, file: !11, line: 82, type: !8)
!2230 = !DILocation(line: 82, column: 48, scope: !2223)
!2231 = !DILocalVariable(name: "init_type", arg: 3, scope: !2223, file: !11, line: 82, type: !75)
!2232 = !DILocation(line: 82, column: 68, scope: !2223)
!2233 = !DILocalVariable(name: "alignment", arg: 4, scope: !2223, file: !11, line: 82, type: !8)
!2234 = !DILocation(line: 82, column: 83, scope: !2223)
!2235 = !DILocalVariable(name: "data", scope: !2223, file: !11, line: 84, type: !23, align: 8)
!2236 = !DILocation(line: 84, column: 8, scope: !2223)
!2237 = !DILocation(line: 84, column: 15, scope: !2223)
!2238 = !DILocation(line: 84, column: 61, scope: !2223)
!2239 = !DILocation(line: 85, column: 2, scope: !2223)
!2240 = !DILocalVariable(name: "bt", scope: !2223, file: !11, line: 86, type: !2127, align: 16)
!2241 = !DILocation(line: 86, column: 23, scope: !2223)
!2242 = !DILocation(line: 87, column: 30, scope: !2223)
!2243 = !DILocation(line: 87, column: 13, scope: !2223)
!2244 = !DILocation(line: 88, column: 2, scope: !2223)
!2245 = !DILocation(line: 88, column: 16, scope: !2223)
!2246 = !DILocation(line: 88, column: 29, scope: !2223)
!2247 = !DILocation(line: 88, column: 35, scope: !2223)
!2248 = !DILocation(line: 88, column: 41, scope: !2223)
!2249 = !DILocation(line: 89, column: 2, scope: !2223)
!2250 = !DILocation(line: 89, column: 20, scope: !2223)
!2251 = !DILocation(line: 90, column: 9, scope: !2223)
!2252 = distinct !DISubprogram(name: "resize", linkageName: "std.core.mem.allocator.TrackingAllocator.resize", scope: !11, file: !11, line: 93, type: !2253, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{!161, !163, !2101, !23, !4, !4}
!2255 = !DILocation(line: 94, column: 1, scope: !2252)
!2256 = !DILocalVariable(name: "self", arg: 1, scope: !2252, file: !11, line: 93, type: !2101)
!2257 = !DILocation(line: 93, column: 36, scope: !2252)
!2258 = !DILocalVariable(name: "old_pointer", arg: 2, scope: !2252, file: !11, line: 93, type: !23)
!2259 = !DILocation(line: 93, column: 49, scope: !2252)
!2260 = !DILocalVariable(name: "size", arg: 3, scope: !2252, file: !11, line: 93, type: !8)
!2261 = !DILocation(line: 93, column: 66, scope: !2252)
!2262 = !DILocalVariable(name: "alignment", arg: 4, scope: !2252, file: !11, line: 93, type: !8)
!2263 = !DILocation(line: 93, column: 76, scope: !2252)
!2264 = !DILocalVariable(name: "data", scope: !2252, file: !11, line: 95, type: !23, align: 8)
!2265 = !DILocation(line: 95, column: 8, scope: !2252)
!2266 = !DILocation(line: 95, column: 15, scope: !2252)
!2267 = !DILocation(line: 95, column: 62, scope: !2252)
!2268 = !DILocation(line: 96, column: 2, scope: !2252)
!2269 = !DILocation(line: 96, column: 19, scope: !2252)
!2270 = !DILocalVariable(name: "bt", scope: !2252, file: !11, line: 97, type: !2127, align: 16)
!2271 = !DILocation(line: 97, column: 23, scope: !2252)
!2272 = !DILocation(line: 98, column: 30, scope: !2252)
!2273 = !DILocation(line: 98, column: 13, scope: !2252)
!2274 = !DILocation(line: 99, column: 2, scope: !2252)
!2275 = !DILocation(line: 99, column: 16, scope: !2252)
!2276 = !DILocation(line: 99, column: 29, scope: !2252)
!2277 = !DILocation(line: 99, column: 35, scope: !2252)
!2278 = !DILocation(line: 99, column: 41, scope: !2252)
!2279 = !DILocation(line: 100, column: 2, scope: !2252)
!2280 = !DILocation(line: 100, column: 20, scope: !2252)
!2281 = !DILocation(line: 101, column: 2, scope: !2252)
!2282 = !DILocation(line: 102, column: 9, scope: !2252)
!2283 = distinct !DISubprogram(name: "release", linkageName: "std.core.mem.allocator.TrackingAllocator.release", scope: !11, file: !11, line: 105, type: !2284, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{null, !2101, !23, !115}
!2286 = !DILocation(line: 106, column: 1, scope: !2283)
!2287 = !DILocalVariable(name: "self", arg: 1, scope: !2283, file: !11, line: 105, type: !2101)
!2288 = !DILocation(line: 105, column: 35, scope: !2283)
!2289 = !DILocalVariable(name: "old_pointer", arg: 2, scope: !2283, file: !11, line: 105, type: !23)
!2290 = !DILocation(line: 105, column: 48, scope: !2283)
!2291 = !DILocalVariable(name: "is_aligned", arg: 3, scope: !2283, file: !11, line: 105, type: !115)
!2292 = !DILocation(line: 105, column: 66, scope: !2283)
!2293 = !DILocation(line: 107, column: 12, scope: !2283)
!2294 = !DILocation(line: 107, column: 29, scope: !2283)
!2295 = !DILocation(line: 109, column: 81, scope: !2296, inlinedAt: !2297)
!2296 = distinct !DISubprogram(name: "unreachable", linkageName: "unreachable", scope: !1644, file: !1644, line: 161, scopeLine: 161, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2297 = !DILocation(line: 109, column: 3, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2283, file: !11, line: 108, column: 2)
!2299 = !DILocation(line: 164, column: 2, scope: !2296, inlinedAt: !2297)
!2300 = !DILocation(line: 166, column: 2, scope: !2296, inlinedAt: !2297)
!2301 = !DILocation(line: 111, column: 2, scope: !2283)
!2302 = !DILocation(line: 111, column: 44, scope: !2283)
!2303 = distinct !DISubprogram(name: "clear", linkageName: "std.core.mem.allocator.TrackingAllocator.clear", scope: !11, file: !11, line: 114, type: !2148, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2304 = !DILocation(line: 115, column: 1, scope: !2303)
!2305 = !DILocalVariable(name: "self", arg: 1, scope: !2303, file: !11, line: 114, type: !2101)
!2306 = !DILocation(line: 114, column: 33, scope: !2303)
!2307 = !DILocation(line: 116, column: 2, scope: !2303)
!2308 = distinct !DISubprogram(name: "print_report", linkageName: "std.core.mem.allocator.TrackingAllocator.print_report", scope: !11, file: !11, line: 119, type: !2148, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2309 = !DILocation(line: 119, column: 50, scope: !2308)
!2310 = !DILocalVariable(name: "self", arg: 1, scope: !2308, file: !11, line: 119, type: !2101)
!2311 = !DILocation(line: 119, column: 40, scope: !2308)
!2312 = !DILocation(line: 119, column: 73, scope: !2308)
!2313 = distinct !DISubprogram(name: "fprint_report", linkageName: "std.core.mem.allocator.TrackingAllocator.fprint_report", scope: !11, file: !11, line: 121, type: !2314, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!161, !23, !2101, !2316}
!2316 = !DICompositeType(tag: DW_TAG_structure_type, name: "OutStream", size: 128, align: 64, elements: !2317, identifier: "OutStream")
!2317 = !{!2318, !2319}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2316, baseType: !23, size: 64, align: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2316, baseType: !25, size: 64, align: 64, offset: 64)
!2320 = !DILocation(line: 122, column: 1, scope: !2313)
!2321 = !DILocalVariable(name: "self", arg: 1, scope: !2313, file: !11, line: 121, type: !2101)
!2322 = !DILocation(line: 121, column: 42, scope: !2313)
!2323 = !DILocalVariable(name: "out", arg: 2, scope: !2313, file: !11, line: 121, type: !2316)
!2324 = !DILocation(line: 121, column: 59, scope: !2313)
!2325 = !DILocalVariable(name: "total", scope: !2313, file: !11, line: 124, type: !8, align: 8)
!2326 = !DILocation(line: 124, column: 6, scope: !2313)
!2327 = !DILocation(line: 124, column: 14, scope: !2313)
!2328 = !DILocalVariable(name: "entries", scope: !2313, file: !11, line: 125, type: !8, align: 8)
!2329 = !DILocation(line: 125, column: 6, scope: !2313)
!2330 = !DILocation(line: 125, column: 16, scope: !2313)
!2331 = !DILocalVariable(name: "leaks", scope: !2313, file: !11, line: 126, type: !115, align: 1)
!2332 = !DILocation(line: 126, column: 7, scope: !2313)
!2333 = !DILocation(line: 126, column: 15, scope: !2313)
!2334 = !DILocalVariable(name: "current", scope: !2335, file: !11, line: 536, type: !30, align: 8)
!2335 = distinct !DISubprogram(name: "@pool", linkageName: "@pool", scope: !203, file: !203, line: 534, scopeLine: 534, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2336 = !DILocation(line: 536, column: 17, scope: !2335, inlinedAt: !2337)
!2337 = !DILocation(line: 127, column: 2, scope: !2313)
!2338 = !DILocation(line: 396, column: 7, scope: !2339, inlinedAt: !2340)
!2339 = distinct !DISubprogram(name: "temp", linkageName: "temp", scope: !15, file: !15, line: 394, scopeLine: 394, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2340 = !DILocation(line: 536, column: 38, scope: !2335, inlinedAt: !2337)
!2341 = !DILocation(line: 398, column: 3, scope: !2342, inlinedAt: !2340)
!2342 = distinct !DILexicalBlock(scope: !2339, file: !15, line: 397, column: 2)
!2343 = !DILocation(line: 400, column: 9, scope: !2339, inlinedAt: !2340)
!2344 = !DILocalVariable(name: "mark", scope: !2335, file: !11, line: 542, type: !8, align: 8)
!2345 = !DILocation(line: 542, column: 6, scope: !2335, inlinedAt: !2337)
!2346 = !DILocation(line: 542, column: 13, scope: !2335, inlinedAt: !2337)
!2347 = !DILocalVariable(name: "allocs", scope: !2348, file: !11, line: 129, type: !2209, align: 8)
!2348 = distinct !DILexicalBlock(scope: !2313, file: !11, line: 128, column: 2)
!2349 = !DILocation(line: 129, column: 16, scope: !2348)
!2350 = !DILocation(line: 129, column: 25, scope: !2348)
!2351 = !DILocation(line: 130, column: 7, scope: !2348)
!2352 = !DILocation(line: 132, column: 9, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2348, file: !11, line: 131, column: 3)
!2354 = !DILocation(line: 132, column: 16, scope: !2353)
!2355 = !DILocation(line: 132, column: 29, scope: !2353)
!2356 = !DILocalVariable(name: "len", scope: !2357, file: !11, line: 168, type: !8, align: 8)
!2357 = distinct !DISubprogram(name: "fprintn", linkageName: "fprintn", scope: !2358, file: !2358, line: 166, scopeLine: 166, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2358 = !DIFile(filename: "io.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io")
!2359 = !DILocation(line: 168, column: 6, scope: !2357, inlinedAt: !2360)
!2360 = !DILocation(line: 134, column: 9, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2353, file: !11, line: 133, column: 4)
!2362 = !DILocation(line: 118, column: 34, scope: !2363, inlinedAt: !2364)
!2363 = distinct !DISubprogram(name: "fprint", linkageName: "fprint", scope: !2358, file: !2358, line: 114, scopeLine: 114, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2364 = !DILocation(line: 168, column: 12, scope: !2357, inlinedAt: !2360)
!2365 = !DILocation(line: 118, column: 24, scope: !2363, inlinedAt: !2364)
!2366 = !DILocation(line: 169, column: 17, scope: !2357, inlinedAt: !2360)
!2367 = !DILocation(line: 169, column: 2, scope: !2357, inlinedAt: !2360)
!2368 = !DILocation(line: 172, column: 9, scope: !2357, inlinedAt: !2360)
!2369 = !DILocation(line: 172, column: 20, scope: !2357, inlinedAt: !2360)
!2370 = !DILocation(line: 176, column: 9, scope: !2357, inlinedAt: !2360)
!2371 = !DILocation(line: 545, column: 17, scope: !2372, inlinedAt: !2337)
!2372 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2373 = !DILocation(line: 545, column: 3, scope: !2372, inlinedAt: !2337)
!2374 = !DILocation(line: 549, column: 2, scope: !2372, inlinedAt: !2337)
!2375 = !DILocalVariable(name: "len", scope: !2376, file: !11, line: 168, type: !8, align: 8)
!2376 = distinct !DISubprogram(name: "fprintn", linkageName: "fprintn", scope: !2358, file: !2358, line: 166, scopeLine: 166, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2377 = !DILocation(line: 168, column: 6, scope: !2376, inlinedAt: !2378)
!2378 = !DILocation(line: 135, column: 9, scope: !2361)
!2379 = !DILocation(line: 118, column: 34, scope: !2380, inlinedAt: !2381)
!2380 = distinct !DISubprogram(name: "fprint", linkageName: "fprint", scope: !2358, file: !2358, line: 114, scopeLine: 114, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2381 = !DILocation(line: 168, column: 12, scope: !2376, inlinedAt: !2378)
!2382 = !DILocation(line: 118, column: 24, scope: !2380, inlinedAt: !2381)
!2383 = !DILocation(line: 169, column: 17, scope: !2376, inlinedAt: !2378)
!2384 = !DILocation(line: 169, column: 2, scope: !2376, inlinedAt: !2378)
!2385 = !DILocation(line: 172, column: 9, scope: !2376, inlinedAt: !2378)
!2386 = !DILocation(line: 172, column: 20, scope: !2376, inlinedAt: !2378)
!2387 = !DILocation(line: 176, column: 9, scope: !2376, inlinedAt: !2378)
!2388 = !DILocation(line: 545, column: 17, scope: !2389, inlinedAt: !2337)
!2389 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2390 = !DILocation(line: 545, column: 3, scope: !2389, inlinedAt: !2337)
!2391 = !DILocation(line: 549, column: 2, scope: !2389, inlinedAt: !2337)
!2392 = !DILocalVariable(name: ".temp", scope: !2393, file: !11, line: 136, type: !8, align: 8)
!2393 = distinct !DILexicalBlock(scope: !2361, file: !11, line: 136, column: 5)
!2394 = !DILocation(line: 136, column: 31, scope: !2393)
!2395 = !DILocation(line: 136, column: 14, scope: !2393)
!2396 = !DILocalVariable(name: "i", scope: !2397, file: !11, line: 136, type: !8, align: 8)
!2397 = distinct !DILexicalBlock(scope: !2393, file: !11, line: 137, column: 5)
!2398 = !DILocation(line: 136, column: 14, scope: !2397)
!2399 = !DILocalVariable(name: "allocation", scope: !2397, file: !11, line: 136, type: !2189, align: 8)
!2400 = !DILocation(line: 136, column: 18, scope: !2397)
!2401 = !DILocation(line: 136, column: 31, scope: !2397)
!2402 = !DILocation(line: 138, column: 6, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2397, file: !11, line: 137, column: 5)
!2404 = !DILocation(line: 139, column: 6, scope: !2403)
!2405 = !DILocation(line: 139, column: 15, scope: !2403)
!2406 = !DILocation(line: 140, column: 37, scope: !2403)
!2407 = !DILocation(line: 140, column: 54, scope: !2403)
!2408 = !DILocation(line: 140, column: 10, scope: !2403)
!2409 = !DILocation(line: 545, column: 17, scope: !2410, inlinedAt: !2337)
!2410 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2411 = !DILocation(line: 545, column: 3, scope: !2410, inlinedAt: !2337)
!2412 = !DILocation(line: 549, column: 2, scope: !2410, inlinedAt: !2337)
!2413 = !DILocalVariable(name: "len", scope: !2414, file: !11, line: 168, type: !8, align: 8)
!2414 = distinct !DISubprogram(name: "fprintn", linkageName: "fprintn", scope: !2358, file: !2358, line: 166, scopeLine: 166, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2415 = !DILocation(line: 168, column: 6, scope: !2414, inlinedAt: !2416)
!2416 = !DILocation(line: 142, column: 9, scope: !2361)
!2417 = !DILocation(line: 118, column: 34, scope: !2418, inlinedAt: !2419)
!2418 = distinct !DISubprogram(name: "fprint", linkageName: "fprint", scope: !2358, file: !2358, line: 114, scopeLine: 114, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2419 = !DILocation(line: 168, column: 12, scope: !2414, inlinedAt: !2416)
!2420 = !DILocation(line: 118, column: 24, scope: !2418, inlinedAt: !2419)
!2421 = !DILocation(line: 169, column: 17, scope: !2414, inlinedAt: !2416)
!2422 = !DILocation(line: 169, column: 2, scope: !2414, inlinedAt: !2416)
!2423 = !DILocation(line: 172, column: 9, scope: !2414, inlinedAt: !2416)
!2424 = !DILocation(line: 172, column: 20, scope: !2414, inlinedAt: !2416)
!2425 = !DILocation(line: 176, column: 9, scope: !2414, inlinedAt: !2416)
!2426 = !DILocation(line: 545, column: 17, scope: !2427, inlinedAt: !2337)
!2427 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2428 = !DILocation(line: 545, column: 3, scope: !2427, inlinedAt: !2337)
!2429 = !DILocation(line: 549, column: 2, scope: !2427, inlinedAt: !2337)
!2430 = !DILocalVariable(name: "len", scope: !2431, file: !11, line: 168, type: !8, align: 8)
!2431 = distinct !DISubprogram(name: "fprintn", linkageName: "fprintn", scope: !2358, file: !2358, line: 166, scopeLine: 166, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2432 = !DILocation(line: 168, column: 6, scope: !2431, inlinedAt: !2433)
!2433 = !DILocation(line: 147, column: 9, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2353, file: !11, line: 146, column: 4)
!2435 = !DILocation(line: 118, column: 34, scope: !2436, inlinedAt: !2437)
!2436 = distinct !DISubprogram(name: "fprint", linkageName: "fprint", scope: !2358, file: !2358, line: 114, scopeLine: 114, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2437 = !DILocation(line: 168, column: 12, scope: !2431, inlinedAt: !2433)
!2438 = !DILocation(line: 118, column: 24, scope: !2436, inlinedAt: !2437)
!2439 = !DILocation(line: 169, column: 17, scope: !2431, inlinedAt: !2433)
!2440 = !DILocation(line: 169, column: 2, scope: !2431, inlinedAt: !2433)
!2441 = !DILocation(line: 172, column: 9, scope: !2431, inlinedAt: !2433)
!2442 = !DILocation(line: 172, column: 20, scope: !2431, inlinedAt: !2433)
!2443 = !DILocation(line: 176, column: 9, scope: !2431, inlinedAt: !2433)
!2444 = !DILocation(line: 545, column: 17, scope: !2445, inlinedAt: !2337)
!2445 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2446 = !DILocation(line: 545, column: 3, scope: !2445, inlinedAt: !2337)
!2447 = !DILocation(line: 549, column: 2, scope: !2445, inlinedAt: !2337)
!2448 = !DILocalVariable(name: "len", scope: !2449, file: !11, line: 168, type: !8, align: 8)
!2449 = distinct !DISubprogram(name: "fprintn", linkageName: "fprintn", scope: !2358, file: !2358, line: 166, scopeLine: 166, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2450 = !DILocation(line: 168, column: 6, scope: !2449, inlinedAt: !2451)
!2451 = !DILocation(line: 148, column: 9, scope: !2434)
!2452 = !DILocation(line: 118, column: 34, scope: !2453, inlinedAt: !2454)
!2453 = distinct !DISubprogram(name: "fprint", linkageName: "fprint", scope: !2358, file: !2358, line: 114, scopeLine: 114, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2454 = !DILocation(line: 168, column: 12, scope: !2449, inlinedAt: !2451)
!2455 = !DILocation(line: 118, column: 24, scope: !2453, inlinedAt: !2454)
!2456 = !DILocation(line: 169, column: 17, scope: !2449, inlinedAt: !2451)
!2457 = !DILocation(line: 169, column: 2, scope: !2449, inlinedAt: !2451)
!2458 = !DILocation(line: 172, column: 9, scope: !2449, inlinedAt: !2451)
!2459 = !DILocation(line: 172, column: 20, scope: !2449, inlinedAt: !2451)
!2460 = !DILocation(line: 176, column: 9, scope: !2449, inlinedAt: !2451)
!2461 = !DILocation(line: 545, column: 17, scope: !2462, inlinedAt: !2337)
!2462 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2463 = !DILocation(line: 545, column: 3, scope: !2462, inlinedAt: !2337)
!2464 = !DILocation(line: 549, column: 2, scope: !2462, inlinedAt: !2337)
!2465 = !DILocalVariable(name: ".temp", scope: !2466, file: !11, line: 149, type: !8, align: 8)
!2466 = distinct !DILexicalBlock(scope: !2434, file: !11, line: 149, column: 5)
!2467 = !DILocation(line: 149, column: 31, scope: !2466)
!2468 = !DILocation(line: 149, column: 14, scope: !2466)
!2469 = !DILocalVariable(name: "i", scope: !2470, file: !11, line: 149, type: !8, align: 8)
!2470 = distinct !DILexicalBlock(scope: !2466, file: !11, line: 150, column: 5)
!2471 = !DILocation(line: 149, column: 14, scope: !2470)
!2472 = !DILocalVariable(name: "allocation", scope: !2470, file: !11, line: 149, type: !2189, align: 8)
!2473 = !DILocation(line: 149, column: 18, scope: !2470)
!2474 = !DILocation(line: 149, column: 31, scope: !2470)
!2475 = !DILocation(line: 151, column: 6, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2470, file: !11, line: 150, column: 5)
!2477 = !DILocation(line: 152, column: 6, scope: !2476)
!2478 = !DILocation(line: 152, column: 15, scope: !2476)
!2479 = !DILocalVariable(name: "backtraces", scope: !2476, file: !11, line: 153, type: !2480, align: 8)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "BacktraceList", scope: !11, file: !11, line: 94, baseType: !2481, align: 8)
!2481 = !DICompositeType(tag: DW_TAG_structure_type, name: "List", scope: !11, file: !11, line: 14, size: 320, align: 64, elements: !2482, identifier: "std_collections_list$std.os.backtrace.Backtrace$.List")
!2482 = !{!2483, !2484, !2485, !2486}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2481, file: !11, line: 16, baseType: !8, size: 64, align: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2481, file: !11, line: 17, baseType: !8, size: 64, align: 64, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !2481, file: !11, line: 18, baseType: !20, size: 128, align: 64, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2481, file: !11, line: 19, baseType: !2487, size: 64, align: 64, offset: 256)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Type*", baseType: !2488, size: 64, align: 64, dwarfAddressSpace: 0)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "Type", scope: !11, file: !11, line: 94, baseType: !2489, align: 8)
!2489 = !DICompositeType(tag: DW_TAG_structure_type, name: "Backtrace", scope: !11, file: !11, line: 15, size: 704, align: 64, elements: !2490, identifier: "std.os.backtrace.Backtrace")
!2490 = !{!2491, !2492, !2493, !2494, !2495, !2496, !2497}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2489, file: !11, line: 17, baseType: !68, size: 64, align: 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2489, file: !11, line: 18, baseType: !1253, size: 128, align: 64, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "object_file", scope: !2489, file: !11, line: 19, baseType: !1253, size: 128, align: 64, offset: 192)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2489, file: !11, line: 20, baseType: !1253, size: 128, align: 64, offset: 320)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !2489, file: !11, line: 21, baseType: !1276, size: 32, align: 32, offset: 448)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !2489, file: !11, line: 22, baseType: !20, size: 128, align: 64, offset: 512)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "is_inline", scope: !2489, file: !11, line: 23, baseType: !115, size: 8, align: 8, offset: 640)
!2498 = !DILocation(line: 153, column: 20, scope: !2476)
!2499 = !DILocalVariable(name: "trace", scope: !2476, file: !11, line: 154, type: !2489, align: 8)
!2500 = !DILocation(line: 154, column: 16, scope: !2476)
!2501 = !DILocation(line: 154, column: 35, scope: !2476)
!2502 = !DILocation(line: 155, column: 10, scope: !2476)
!2503 = !DILocation(line: 155, column: 31, scope: !2476)
!2504 = !DILocation(line: 157, column: 46, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2476, file: !11, line: 156, column: 6)
!2506 = !DILocation(line: 396, column: 7, scope: !2507, inlinedAt: !2508)
!2507 = distinct !DISubprogram(name: "temp", linkageName: "temp", scope: !15, file: !15, line: 394, scopeLine: 394, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2508 = !DILocation(line: 157, column: 84, scope: !2505)
!2509 = !DILocation(line: 398, column: 3, scope: !2510, inlinedAt: !2508)
!2510 = distinct !DILexicalBlock(scope: !2507, file: !15, line: 397, column: 2)
!2511 = !DILocation(line: 400, column: 9, scope: !2507, inlinedAt: !2508)
!2512 = !DILocation(line: 157, column: 26, scope: !2505)
!2513 = !DILocation(line: 157, column: 113, scope: !2505)
!2514 = !DILocation(line: 159, column: 10, scope: !2476)
!2515 = !DILocation(line: 159, column: 38, scope: !2476)
!2516 = !DILocation(line: 160, column: 45, scope: !2476)
!2517 = !DILocation(line: 161, column: 7, scope: !2476)
!2518 = !DILocation(line: 161, column: 23, scope: !2476)
!2519 = !DILocation(line: 161, column: 44, scope: !2476)
!2520 = !DILocation(line: 161, column: 61, scope: !2476)
!2521 = !DILocation(line: 162, column: 7, scope: !2476)
!2522 = !DILocation(line: 162, column: 20, scope: !2476)
!2523 = !DILocation(line: 162, column: 33, scope: !2476)
!2524 = !DILocation(line: 160, column: 10, scope: !2476)
!2525 = !DILocation(line: 545, column: 17, scope: !2526, inlinedAt: !2337)
!2526 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2527 = !DILocation(line: 545, column: 3, scope: !2526, inlinedAt: !2337)
!2528 = !DILocation(line: 549, column: 2, scope: !2526, inlinedAt: !2337)
!2529 = !DILocalVariable(name: "len", scope: !2530, file: !11, line: 168, type: !8, align: 8)
!2530 = distinct !DISubprogram(name: "fprintn", linkageName: "fprintn", scope: !2358, file: !2358, line: 166, scopeLine: 166, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2531 = !DILocation(line: 168, column: 6, scope: !2530, inlinedAt: !2532)
!2532 = !DILocation(line: 164, column: 9, scope: !2434)
!2533 = !DILocation(line: 118, column: 34, scope: !2534, inlinedAt: !2535)
!2534 = distinct !DISubprogram(name: "fprint", linkageName: "fprint", scope: !2358, file: !2358, line: 114, scopeLine: 114, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2535 = !DILocation(line: 168, column: 12, scope: !2530, inlinedAt: !2532)
!2536 = !DILocation(line: 118, column: 24, scope: !2534, inlinedAt: !2535)
!2537 = !DILocation(line: 169, column: 17, scope: !2530, inlinedAt: !2532)
!2538 = !DILocation(line: 169, column: 2, scope: !2530, inlinedAt: !2532)
!2539 = !DILocation(line: 172, column: 9, scope: !2530, inlinedAt: !2532)
!2540 = !DILocation(line: 172, column: 20, scope: !2530, inlinedAt: !2532)
!2541 = !DILocation(line: 176, column: 9, scope: !2530, inlinedAt: !2532)
!2542 = !DILocation(line: 545, column: 17, scope: !2543, inlinedAt: !2337)
!2543 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2544 = !DILocation(line: 545, column: 3, scope: !2543, inlinedAt: !2337)
!2545 = !DILocation(line: 549, column: 2, scope: !2543, inlinedAt: !2337)
!2546 = !DILocalVariable(name: "len", scope: !2547, file: !11, line: 168, type: !8, align: 8)
!2547 = distinct !DISubprogram(name: "fprintn", linkageName: "fprintn", scope: !2358, file: !2358, line: 166, scopeLine: 166, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2548 = !DILocation(line: 168, column: 6, scope: !2547, inlinedAt: !2549)
!2549 = !DILocation(line: 169, column: 8, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2348, file: !11, line: 168, column: 3)
!2551 = !DILocation(line: 118, column: 34, scope: !2552, inlinedAt: !2553)
!2552 = distinct !DISubprogram(name: "fprint", linkageName: "fprint", scope: !2358, file: !2358, line: 114, scopeLine: 114, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2553 = !DILocation(line: 168, column: 12, scope: !2547, inlinedAt: !2549)
!2554 = !DILocation(line: 118, column: 24, scope: !2552, inlinedAt: !2553)
!2555 = !DILocation(line: 169, column: 17, scope: !2547, inlinedAt: !2549)
!2556 = !DILocation(line: 169, column: 2, scope: !2547, inlinedAt: !2549)
!2557 = !DILocation(line: 172, column: 9, scope: !2547, inlinedAt: !2549)
!2558 = !DILocation(line: 172, column: 20, scope: !2547, inlinedAt: !2549)
!2559 = !DILocation(line: 176, column: 9, scope: !2547, inlinedAt: !2549)
!2560 = !DILocation(line: 545, column: 17, scope: !2561, inlinedAt: !2337)
!2561 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2562 = !DILocation(line: 545, column: 3, scope: !2561, inlinedAt: !2337)
!2563 = !DILocation(line: 549, column: 2, scope: !2561, inlinedAt: !2337)
!2564 = !DILocation(line: 171, column: 74, scope: !2348)
!2565 = !DILocation(line: 171, column: 7, scope: !2348)
!2566 = !DILocation(line: 545, column: 17, scope: !2567, inlinedAt: !2337)
!2567 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2568 = !DILocation(line: 545, column: 3, scope: !2567, inlinedAt: !2337)
!2569 = !DILocation(line: 549, column: 2, scope: !2567, inlinedAt: !2337)
!2570 = !DILocation(line: 172, column: 74, scope: !2348)
!2571 = !DILocation(line: 172, column: 7, scope: !2348)
!2572 = !DILocation(line: 545, column: 17, scope: !2573, inlinedAt: !2337)
!2573 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2574 = !DILocation(line: 545, column: 3, scope: !2573, inlinedAt: !2337)
!2575 = !DILocation(line: 549, column: 2, scope: !2573, inlinedAt: !2337)
!2576 = !DILocation(line: 173, column: 74, scope: !2348)
!2577 = !DILocation(line: 173, column: 7, scope: !2348)
!2578 = !DILocation(line: 545, column: 17, scope: !2579, inlinedAt: !2337)
!2579 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2580 = !DILocation(line: 545, column: 3, scope: !2579, inlinedAt: !2337)
!2581 = !DILocation(line: 549, column: 2, scope: !2579, inlinedAt: !2337)
!2582 = !DILocation(line: 174, column: 74, scope: !2348)
!2583 = !DILocation(line: 174, column: 7, scope: !2348)
!2584 = !DILocation(line: 545, column: 17, scope: !2585, inlinedAt: !2337)
!2585 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2586 = !DILocation(line: 545, column: 3, scope: !2585, inlinedAt: !2337)
!2587 = !DILocation(line: 549, column: 2, scope: !2585, inlinedAt: !2337)
!2588 = !DILocation(line: 175, column: 7, scope: !2348)
!2589 = !DILocalVariable(name: "len", scope: !2590, file: !11, line: 168, type: !8, align: 8)
!2590 = distinct !DISubprogram(name: "fprintn", linkageName: "fprintn", scope: !2358, file: !2358, line: 166, scopeLine: 166, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2591 = !DILocation(line: 168, column: 6, scope: !2590, inlinedAt: !2592)
!2592 = !DILocation(line: 177, column: 8, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2348, file: !11, line: 176, column: 3)
!2594 = !DILocation(line: 118, column: 34, scope: !2595, inlinedAt: !2596)
!2595 = distinct !DISubprogram(name: "fprint", linkageName: "fprint", scope: !2358, file: !2358, line: 114, scopeLine: 114, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2596 = !DILocation(line: 168, column: 12, scope: !2590, inlinedAt: !2592)
!2597 = !DILocation(line: 118, column: 24, scope: !2595, inlinedAt: !2596)
!2598 = !DILocation(line: 169, column: 17, scope: !2590, inlinedAt: !2592)
!2599 = !DILocation(line: 169, column: 2, scope: !2590, inlinedAt: !2592)
!2600 = !DILocation(line: 172, column: 9, scope: !2590, inlinedAt: !2592)
!2601 = !DILocation(line: 172, column: 20, scope: !2590, inlinedAt: !2592)
!2602 = !DILocation(line: 176, column: 9, scope: !2590, inlinedAt: !2592)
!2603 = !DILocation(line: 545, column: 17, scope: !2604, inlinedAt: !2337)
!2604 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2605 = !DILocation(line: 545, column: 3, scope: !2604, inlinedAt: !2337)
!2606 = !DILocation(line: 549, column: 2, scope: !2604, inlinedAt: !2337)
!2607 = !DILocalVariable(name: "len", scope: !2608, file: !11, line: 168, type: !8, align: 8)
!2608 = distinct !DISubprogram(name: "fprintn", linkageName: "fprintn", scope: !2358, file: !2358, line: 166, scopeLine: 166, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2609 = !DILocation(line: 168, column: 6, scope: !2608, inlinedAt: !2610)
!2610 = !DILocation(line: 178, column: 8, scope: !2593)
!2611 = !DILocation(line: 118, column: 34, scope: !2612, inlinedAt: !2613)
!2612 = distinct !DISubprogram(name: "fprint", linkageName: "fprint", scope: !2358, file: !2358, line: 114, scopeLine: 114, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2613 = !DILocation(line: 168, column: 12, scope: !2608, inlinedAt: !2610)
!2614 = !DILocation(line: 118, column: 24, scope: !2612, inlinedAt: !2613)
!2615 = !DILocation(line: 169, column: 17, scope: !2608, inlinedAt: !2610)
!2616 = !DILocation(line: 169, column: 2, scope: !2608, inlinedAt: !2610)
!2617 = !DILocation(line: 172, column: 9, scope: !2608, inlinedAt: !2610)
!2618 = !DILocation(line: 172, column: 20, scope: !2608, inlinedAt: !2610)
!2619 = !DILocation(line: 176, column: 9, scope: !2608, inlinedAt: !2610)
!2620 = !DILocation(line: 545, column: 17, scope: !2621, inlinedAt: !2337)
!2621 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2622 = !DILocation(line: 545, column: 3, scope: !2621, inlinedAt: !2337)
!2623 = !DILocation(line: 549, column: 2, scope: !2621, inlinedAt: !2337)
!2624 = !DILocalVariable(name: ".temp", scope: !2625, file: !11, line: 179, type: !8, align: 8)
!2625 = distinct !DILexicalBlock(scope: !2593, file: !11, line: 179, column: 4)
!2626 = !DILocation(line: 179, column: 30, scope: !2625)
!2627 = !DILocation(line: 179, column: 13, scope: !2625)
!2628 = !DILocalVariable(name: "i", scope: !2629, file: !11, line: 179, type: !8, align: 8)
!2629 = distinct !DILexicalBlock(scope: !2625, file: !11, line: 180, column: 4)
!2630 = !DILocation(line: 179, column: 13, scope: !2629)
!2631 = !DILocalVariable(name: "allocation", scope: !2629, file: !11, line: 179, type: !2189, align: 8)
!2632 = !DILocation(line: 179, column: 17, scope: !2629)
!2633 = !DILocation(line: 179, column: 30, scope: !2629)
!2634 = !DILocation(line: 181, column: 10, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2629, file: !11, line: 180, column: 4)
!2636 = !DILocation(line: 181, column: 31, scope: !2635)
!2637 = !DILocation(line: 183, column: 78, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2635, file: !11, line: 182, column: 5)
!2639 = !DILocation(line: 183, column: 85, scope: !2638)
!2640 = !DILocation(line: 183, column: 10, scope: !2638)
!2641 = !DILocation(line: 545, column: 17, scope: !2642, inlinedAt: !2337)
!2642 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2643 = !DILocation(line: 545, column: 3, scope: !2642, inlinedAt: !2337)
!2644 = !DILocation(line: 549, column: 2, scope: !2642, inlinedAt: !2337)
!2645 = !DILocation(line: 184, column: 6, scope: !2638)
!2646 = !DILocalVariable(name: "backtraces", scope: !2635, file: !11, line: 186, type: !2480, align: 8)
!2647 = !DILocation(line: 186, column: 19, scope: !2635)
!2648 = !DILocalVariable(name: "end", scope: !2635, file: !11, line: 187, type: !8, align: 8)
!2649 = !DILocation(line: 187, column: 9, scope: !2635)
!2650 = !DILocation(line: 187, column: 15, scope: !2635)
!2651 = !DILocalVariable(name: ".temp", scope: !2652, file: !11, line: 188, type: !2653, align: 8)
!2652 = distinct !DILexicalBlock(scope: !2635, file: !11, line: 188, column: 5)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "void*[16]*", baseType: !2127, size: 64, align: 64, dwarfAddressSpace: 0)
!2654 = !DILocation(line: 188, column: 23, scope: !2652)
!2655 = !DILocalVariable(name: ".temp", scope: !2652, file: !11, line: 188, type: !8, align: 8)
!2656 = !DILocation(line: 188, column: 14, scope: !2652)
!2657 = !DILocalVariable(name: "j", scope: !2658, file: !11, line: 188, type: !8, align: 8)
!2658 = distinct !DILexicalBlock(scope: !2652, file: !11, line: 189, column: 5)
!2659 = !DILocation(line: 188, column: 14, scope: !2658)
!2660 = !DILocalVariable(name: "val", scope: !2658, file: !11, line: 188, type: !23, align: 8)
!2661 = !DILocation(line: 188, column: 17, scope: !2658)
!2662 = !DILocation(line: 188, column: 23, scope: !2658)
!2663 = !DILocation(line: 190, column: 11, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2658, file: !11, line: 189, column: 5)
!2665 = !DILocation(line: 192, column: 13, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2664, file: !11, line: 191, column: 6)
!2667 = !DILocation(line: 193, column: 7, scope: !2666)
!2668 = !DILocalVariable(name: "list", scope: !2635, file: !11, line: 196, type: !2480, align: 8)
!2669 = !DILocation(line: 196, column: 19, scope: !2635)
!2670 = !DILocation(line: 196, column: 57, scope: !2635)
!2671 = !DILocation(line: 196, column: 82, scope: !2635)
!2672 = !DILocation(line: 396, column: 7, scope: !2673, inlinedAt: !2674)
!2673 = distinct !DISubprogram(name: "temp", linkageName: "temp", scope: !15, file: !15, line: 394, scopeLine: 394, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2674 = !DILocation(line: 196, column: 104, scope: !2635)
!2675 = !DILocation(line: 398, column: 3, scope: !2676, inlinedAt: !2674)
!2676 = distinct !DILexicalBlock(scope: !2673, file: !15, line: 397, column: 2)
!2677 = !DILocation(line: 400, column: 9, scope: !2673, inlinedAt: !2674)
!2678 = !DILocation(line: 196, column: 37, scope: !2635)
!2679 = !DILocation(line: 545, column: 17, scope: !2680, inlinedAt: !2337)
!2680 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2681 = !DILocation(line: 545, column: 3, scope: !2680, inlinedAt: !2337)
!2682 = !DILocation(line: 549, column: 2, scope: !2680, inlinedAt: !2337)
!2683 = !DILocation(line: 197, column: 53, scope: !2635)
!2684 = !DILocation(line: 197, column: 60, scope: !2635)
!2685 = !DILocation(line: 197, column: 9, scope: !2635)
!2686 = !DILocation(line: 545, column: 17, scope: !2687, inlinedAt: !2337)
!2687 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2688 = !DILocation(line: 545, column: 3, scope: !2687, inlinedAt: !2337)
!2689 = !DILocation(line: 549, column: 2, scope: !2687, inlinedAt: !2337)
!2690 = !DILocalVariable(name: ".temp", scope: !2691, file: !11, line: 198, type: !8, align: 8)
!2691 = distinct !DILexicalBlock(scope: !2635, file: !11, line: 198, column: 5)
!2692 = !DILocation(line: 198, column: 22, scope: !2691)
!2693 = !DILocalVariable(name: "trace", scope: !2694, file: !11, line: 198, type: !2488, align: 8)
!2694 = distinct !DILexicalBlock(scope: !2691, file: !11, line: 199, column: 5)
!2695 = !DILocation(line: 198, column: 14, scope: !2694)
!2696 = !DILocation(line: 366, column: 9, scope: !2697, inlinedAt: !2695)
!2697 = distinct !DISubprogram(name: "@item_at", linkageName: "@item_at", scope: !2698, file: !2698, line: 364, scopeLine: 364, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2698 = !DIFile(filename: "list.c3", directory: "C:/Dev/C3/c3-windows/lib/std/collections")
!2699 = !DILocation(line: 366, column: 22, scope: !2697, inlinedAt: !2695)
!2700 = !DILocation(line: 200, column: 10, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2694, file: !11, line: 199, column: 5)
!2702 = !DILocation(line: 202, column: 45, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2701, file: !11, line: 201, column: 6)
!2704 = !DILocation(line: 202, column: 61, scope: !2703)
!2705 = !DILocation(line: 202, column: 73, scope: !2703)
!2706 = !DILocation(line: 202, column: 11, scope: !2703)
!2707 = !DILocation(line: 203, column: 7, scope: !2703)
!2708 = !DILocation(line: 205, column: 10, scope: !2701)
!2709 = !DILocation(line: 207, column: 11, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2701, file: !11, line: 206, column: 6)
!2711 = !DILocation(line: 208, column: 7, scope: !2710)
!2712 = !DILocation(line: 210, column: 54, scope: !2701)
!2713 = !DILocation(line: 210, column: 10, scope: !2701)
!2714 = !DILocation(line: 545, column: 17, scope: !2715, inlinedAt: !2337)
!2715 = distinct !DILexicalBlock(scope: !2335, file: !203, line: 544, column: 2)
!2716 = !DILocation(line: 545, column: 3, scope: !2715, inlinedAt: !2337)
!2717 = !DILocation(line: 549, column: 2, scope: !2715, inlinedAt: !2337)
!2718 = distinct !DISubprogram(name: "acquire", linkageName: "std.core.mem.allocator.NullAllocator.acquire", scope: !15, file: !15, line: 441, type: !2719, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{!161, !163, !2721, !4, !75, !4}
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "NullAllocator*", baseType: !58, size: 64, align: 64, dwarfAddressSpace: 0)
!2722 = !DILocation(line: 442, column: 1, scope: !2718)
!2723 = !DILocalVariable(name: "self", arg: 1, scope: !2718, file: !15, line: 441, type: !2721)
!2724 = !DILocation(line: 441, column: 33, scope: !2718)
!2725 = !DILocalVariable(name: "bytes", arg: 2, scope: !2718, file: !15, line: 441, type: !8)
!2726 = !DILocation(line: 441, column: 44, scope: !2718)
!2727 = !DILocalVariable(name: "init_type", arg: 3, scope: !2718, file: !15, line: 441, type: !75)
!2728 = !DILocation(line: 441, column: 65, scope: !2718)
!2729 = !DILocalVariable(name: "alignment", arg: 4, scope: !2718, file: !15, line: 441, type: !8)
!2730 = !DILocation(line: 441, column: 80, scope: !2718)
!2731 = !DILocation(line: 443, column: 9, scope: !2718)
!2732 = distinct !DISubprogram(name: "resize", linkageName: "std.core.mem.allocator.NullAllocator.resize", scope: !15, file: !15, line: 446, type: !2733, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{!161, !163, !2721, !23, !4, !4}
!2735 = !DILocation(line: 447, column: 1, scope: !2732)
!2736 = !DILocalVariable(name: "self", arg: 1, scope: !2732, file: !15, line: 446, type: !2721)
!2737 = !DILocation(line: 446, column: 32, scope: !2732)
!2738 = !DILocalVariable(name: "old_ptr", arg: 2, scope: !2732, file: !15, line: 446, type: !23)
!2739 = !DILocation(line: 446, column: 45, scope: !2732)
!2740 = !DILocalVariable(name: "new_bytes", arg: 3, scope: !2732, file: !15, line: 446, type: !8)
!2741 = !DILocation(line: 446, column: 58, scope: !2732)
!2742 = !DILocalVariable(name: "alignment", arg: 4, scope: !2732, file: !15, line: 446, type: !8)
!2743 = !DILocation(line: 446, column: 73, scope: !2732)
!2744 = !DILocation(line: 448, column: 9, scope: !2732)
!2745 = distinct !DISubprogram(name: "release", linkageName: "std.core.mem.allocator.NullAllocator.release", scope: !15, file: !15, line: 451, type: !2746, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{null, !2721, !23, !115}
!2748 = !DILocation(line: 452, column: 1, scope: !2745)
!2749 = !DILocalVariable(name: "self", arg: 1, scope: !2745, file: !15, line: 451, type: !2721)
!2750 = !DILocation(line: 451, column: 31, scope: !2745)
!2751 = !DILocalVariable(name: "old_ptr", arg: 2, scope: !2745, file: !15, line: 451, type: !23)
!2752 = !DILocation(line: 451, column: 44, scope: !2745)
!2753 = !DILocalVariable(name: "aligned", arg: 3, scope: !2745, file: !15, line: 451, type: !115)
!2754 = !DILocation(line: 451, column: 58, scope: !2745)
!2755 = distinct !DISubprogram(name: "alignment_for_allocation", linkageName: "std.core.mem.allocator.alignment_for_allocation", scope: !15, file: !15, line: 50, type: !2756, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!8, !4}
!2758 = !DILocalVariable(name: "alignment", arg: 1, scope: !2755, file: !15, line: 50, type: !8)
!2759 = !DILocation(line: 50, column: 37, scope: !2755)
!2760 = !DILocation(line: 52, column: 9, scope: !2755)
!2761 = !DILocation(line: 52, column: 55, scope: !2755)
!2762 = !DILocation(line: 52, column: 79, scope: !2755)
!2763 = distinct !DISubprogram(name: "clone_any", linkageName: "std.core.mem.allocator.clone_any", scope: !15, file: !15, line: 294, type: !2764, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2764 = !DISubroutineType(types: !2765)
!2765 = !{!2766, !20, !2766}
!2766 = !DICompositeType(tag: DW_TAG_structure_type, name: "any", size: 128, align: 64, elements: !2767, identifier: "any")
!2767 = !{!2768, !2769}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2766, baseType: !23, size: 64, align: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2766, baseType: !25, size: 64, align: 64, offset: 64)
!2770 = !DILocation(line: 296, column: 13, scope: !2763)
!2771 = !DILocalVariable(name: "allocator", arg: 1, scope: !2763, file: !15, line: 294, type: !20)
!2772 = !DILocation(line: 294, column: 28, scope: !2763)
!2773 = !DILocalVariable(name: "value", arg: 2, scope: !2763, file: !15, line: 294, type: !2766)
!2774 = !DILocation(line: 294, column: 43, scope: !2763)
!2775 = !DILocalVariable(name: "size", scope: !2763, file: !15, line: 296, type: !8, align: 8)
!2776 = !DILocation(line: 296, column: 6, scope: !2763)
!2777 = !DILocalVariable(name: "data", scope: !2763, file: !15, line: 297, type: !23, align: 8)
!2778 = !DILocation(line: 297, column: 8, scope: !2763)
!2779 = !DILocation(line: 62, column: 7, scope: !2780, inlinedAt: !2781)
!2780 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !15, file: !15, line: 60, scopeLine: 60, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2781 = !DILocation(line: 57, column: 9, scope: !2782, inlinedAt: !2783)
!2782 = distinct !DISubprogram(name: "malloc", linkageName: "malloc", scope: !15, file: !15, line: 55, scopeLine: 55, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2783 = !DILocation(line: 297, column: 15, scope: !2763)
!2784 = !DILocation(line: 62, column: 20, scope: !2780, inlinedAt: !2781)
!2785 = !DILocation(line: 28, column: 71, scope: !2786, inlinedAt: !2787)
!2786 = distinct !DISubprogram(name: "[DEFAULT INIT]", linkageName: "[DEFAULT INIT]", scope: !15, file: !15, line: 28, scopeLine: 28, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2787 = !DILocation(line: 68, column: 10, scope: !2780, inlinedAt: !2781)
!2788 = !DILocation(line: 309, column: 11, scope: !2789, inlinedAt: !2791)
!2789 = distinct !DILexicalBlock(scope: !2790, file: !203, line: 312, column: 1)
!2790 = distinct !DISubprogram(name: "copy", linkageName: "copy", scope: !203, file: !203, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2791 = !DILocation(line: 298, column: 7, scope: !2763)
!2792 = !DILocation(line: 309, column: 23, scope: !2789, inlinedAt: !2791)
!2793 = !DILocation(line: 309, column: 29, scope: !2789, inlinedAt: !2791)
!2794 = !DILocation(line: 309, column: 36, scope: !2789, inlinedAt: !2791)
!2795 = !DILocation(line: 309, column: 43, scope: !2789, inlinedAt: !2791)
!2796 = !DILocation(line: 309, column: 49, scope: !2789, inlinedAt: !2791)
!2797 = !DILocation(line: 309, column: 56, scope: !2789, inlinedAt: !2791)
!2798 = !DILocation(line: 313, column: 11, scope: !2790, inlinedAt: !2791)
!2799 = !DILocation(line: 313, column: 16, scope: !2790, inlinedAt: !2791)
!2800 = !DILocation(line: 313, column: 21, scope: !2790, inlinedAt: !2791)
!2801 = !DILocation(line: 313, column: 26, scope: !2790, inlinedAt: !2791)
!2802 = !DILocation(line: 299, column: 24, scope: !2763)
!2803 = !DILocation(line: 189, column: 20, scope: !2804, inlinedAt: !2805)
!2804 = distinct !DISubprogram(name: "any_make", linkageName: "any_make", scope: !1644, file: !1644, line: 187, scopeLine: 187, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2805 = !DILocation(line: 299, column: 9, scope: !2763)
!2806 = !DILocation(line: 189, column: 25, scope: !2804, inlinedAt: !2805)
!2807 = distinct !DISubprogram(name: "init_default_temp_allocators", linkageName: "std.core.mem.allocator.init_default_temp_allocators", scope: !15, file: !15, line: 403, type: !2808, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{null}
!2810 = !DILocation(line: 382, column: 10, scope: !2811, inlinedAt: !2812)
!2811 = distinct !DISubprogram(name: "create_default_sized_temp_allocator", linkageName: "create_default_sized_temp_allocator", scope: !15, file: !15, line: 378, scopeLine: 378, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2812 = !DILocation(line: 405, column: 27, scope: !2807)
!2813 = !DILocation(line: 382, column: 10, scope: !2814, inlinedAt: !2815)
!2814 = distinct !DISubprogram(name: "create_default_sized_temp_allocator", linkageName: "create_default_sized_temp_allocator", scope: !15, file: !15, line: 378, scopeLine: 378, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2815 = !DILocation(line: 406, column: 27, scope: !2807)
!2816 = !DILocation(line: 407, column: 46, scope: !2807)
!2817 = distinct !DISubprogram(name: "destroy_temp_allocators", linkageName: "std.core.mem.allocator.destroy_temp_allocators", scope: !15, file: !15, line: 418, type: !2808, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72)
!2818 = !DILocation(line: 420, column: 7, scope: !2817)
!2819 = !DILocation(line: 420, column: 36, scope: !2817)
!2820 = !DILocation(line: 421, column: 22, scope: !2817)
!2821 = !DILocation(line: 421, column: 2, scope: !2817)
!2822 = !DILocation(line: 422, column: 22, scope: !2817)
!2823 = !DILocation(line: 422, column: 2, scope: !2817)
!2824 = !DILocation(line: 423, column: 2, scope: !2817)
!2825 = !DILocation(line: 424, column: 26, scope: !2817)
!2826 = distinct !DISubprogram(name: "temp_allocator_next", linkageName: "std.core.mem.allocator.temp_allocator_next", scope: !15, file: !15, line: 427, type: !2827, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2827 = !DISubroutineType(types: !2828)
!2828 = !{!30}
!2829 = !DILocation(line: 429, column: 7, scope: !2826)
!2830 = !DILocation(line: 431, column: 3, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2826, file: !15, line: 430, column: 2)
!2832 = !DILocation(line: 432, column: 10, scope: !2831)
!2833 = !DILocalVariable(name: "index", scope: !2826, file: !15, line: 434, type: !8, align: 8)
!2834 = !DILocation(line: 434, column: 6, scope: !2826)
!2835 = !DILocation(line: 434, column: 14, scope: !2826)
!2836 = !DILocation(line: 434, column: 59, scope: !2826)
!2837 = !DILocation(line: 434, column: 68, scope: !2826)
!2838 = !DILocation(line: 435, column: 53, scope: !2826)
!2839 = distinct !DISubprogram(name: "destroy_temp_allocators_after_exit", linkageName: "std.core.mem.allocator.destroy_temp_allocators_after_exit", scope: !15, file: !15, line: 410, type: !2808, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !72)
!2840 = !DILocation(line: 412, column: 2, scope: !2839)
!2841 = distinct !DISubprogram(name: "allocate_block", linkageName: "std.core.mem.allocator.WasmMemory.allocate_block", scope: !61, file: !61, line: 14, type: !2842, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !72, retainedNodes: !93)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{!161, !782, !2844, !4}
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "WasmMemory*", baseType: !64, size: 64, align: 64, dwarfAddressSpace: 0)
!2845 = !DILocation(line: 15, column: 1, scope: !2841)
!2846 = !DILocalVariable(name: "self", arg: 1, scope: !2841, file: !61, line: 14, type: !2844)
!2847 = !DILocation(line: 14, column: 38, scope: !2841)
!2848 = !DILocalVariable(name: "bytes", arg: 2, scope: !2841, file: !61, line: 14, type: !8)
!2849 = !DILocation(line: 14, column: 49, scope: !2841)
!2850 = !DILocation(line: 16, column: 7, scope: !2841)
!2851 = !DILocation(line: 18, column: 3, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2841, file: !61, line: 17, column: 2)
!2853 = !DILocation(line: 18, column: 21, scope: !2852)
!2854 = !DILocalVariable(name: "bytes_required", scope: !2841, file: !61, line: 20, type: !2855, align: 8)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "isz", baseType: !162)
!2856 = !DILocation(line: 20, column: 6, scope: !2841)
!2857 = !DILocation(line: 20, column: 23, scope: !2841)
!2858 = !DILocation(line: 20, column: 31, scope: !2841)
!2859 = !DILocation(line: 20, column: 42, scope: !2841)
!2860 = !DILocation(line: 21, column: 6, scope: !2841)
!2861 = !DILocation(line: 24, column: 18, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2841, file: !61, line: 22, column: 2)
!2863 = !DILocation(line: 24, column: 29, scope: !2862)
!2864 = !DILocation(line: 23, column: 9, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2862, file: !61, line: 23, column: 9)
!2866 = !DILocation(line: 23, column: 21, scope: !2865)
!2867 = !DILocalVariable(name: "blocks_required", scope: !2841, file: !61, line: 27, type: !8, align: 8)
!2868 = !DILocation(line: 27, column: 6, scope: !2841)
!2869 = !DILocation(line: 27, column: 25, scope: !2841)
!2870 = !DILocation(line: 28, column: 6, scope: !2841)
!2871 = !DILocation(line: 28, column: 59, scope: !2841)
!2872 = !DILocation(line: 29, column: 2, scope: !2841)
!2873 = !DILocation(line: 29, column: 20, scope: !2841)
!2874 = !DILocation(line: 31, column: 17, scope: !2841)
!2875 = !DILocation(line: 31, column: 28, scope: !2841)
!2876 = !DILocation(line: 30, column: 8, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2841, file: !61, line: 30, column: 8)
!2878 = !DILocation(line: 30, column: 20, scope: !2877)
