; ModuleID = 'std::io'
source_filename = "std::io"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%.introspect = type { i8, i64, ptr, i64, i64, i64, [0 x i64] }
%.fault = type { i64, %"char[]", i64 }
%"char[]" = type { ptr, i64 }
%any = type { ptr, i64 }
%File = type { ptr }
%BitReader = type { %any, i32, i32 }
%"any[]" = type { ptr, i64 }
%BitWriter = type { %any, i32, i32 }
%Formatter = type { ptr, ptr, %.anon }
%.anon = type { i32, i32, i32, i64, i64 }
%OnStackAllocator = type { %any, %"char[]", i64, ptr }
%"char[][]" = type { ptr, i64 }
%BufferData = type { %"char[]", i64 }
%ReadBuffer = type { %any, %"char[]", i64, i64 }
%WriteBuffer = type { %any, %"char[]", i64 }
%ByteBuffer = type { %any, i64, %"char[]", i64, i64, i8 }
%ByteReader = type { %"char[]", i64 }
%ByteWriter = type { %"char[]", i64, %any }
%LimitReader = type { %any, i64 }
%Scanner = type { %any, %"char[]", i64, i64 }

$std.io.BitReader.init = comdat any

$std.io.BitReader.clear = comdat any

$std.io.BitReader.read_bits = comdat any

$std.io.BitWriter.init = comdat any

$std.io.BitWriter.flush = comdat any

$std.io.BitWriter.write_bits = comdat any

$std.io.Formatter.printf = comdat any

$std.io.Formatter.init = comdat any

$std.io.Formatter.print_with_function = comdat any

$std.io.Formatter.vprintf = comdat any

$std.io.Formatter.print = comdat any

$std.io.Formatter.pad = comdat any

$std.io.Formatter.out_chars = comdat any

$std.io.Formatter.etoa = comdat any

$std.io.Formatter.ftoa = comdat any

$std.io.Formatter.gtoa = comdat any

$std.io.Formatter.atoa = comdat any

$std.io.fmt_u = comdat any

$std.io.fprintf = comdat any

$std.io.fprintfn = comdat any

$std.io.printf = comdat any

$std.io.printfn = comdat any

$std.io.eprintf = comdat any

$std.io.eprintfn = comdat any

$std.io.bprintf = comdat any

$std.io.putchar = comdat any

$std.io.stdout = comdat any

$std.io.stderr = comdat any

$std.io.stdin = comdat any

$std.io.ReadBuffer.init = comdat any

$std.io.ReadBuffer.str_view = comdat any

$std.io.ReadBuffer.close = comdat any

$std.io.ReadBuffer.read = comdat any

$std.io.ReadBuffer.read_byte = comdat any

$std.io.WriteBuffer.init = comdat any

$std.io.WriteBuffer.str_view = comdat any

$std.io.WriteBuffer.close = comdat any

$std.io.WriteBuffer.flush = comdat any

$std.io.WriteBuffer.write = comdat any

$std.io.WriteBuffer.write_byte = comdat any

$std.io.ByteBuffer.new_init = comdat any

$std.io.ByteBuffer.temp_init = comdat any

$std.io.ByteBuffer.init_with_buffer = comdat any

$std.io.ByteBuffer.free = comdat any

$std.io.ByteBuffer.write = comdat any

$std.io.ByteBuffer.write_byte = comdat any

$std.io.ByteBuffer.read = comdat any

$std.io.ByteBuffer.read_byte = comdat any

$std.io.ByteBuffer.pushback_byte = comdat any

$std.io.ByteBuffer.seek = comdat any

$std.io.ByteBuffer.available = comdat any

$std.io.ByteBuffer.grow = comdat any

$std.io.ByteReader.len = comdat any

$std.io.ByteReader.init = comdat any

$std.io.ByteReader.read = comdat any

$std.io.ByteReader.read_byte = comdat any

$std.io.ByteReader.pushback_byte = comdat any

$std.io.ByteReader.seek = comdat any

$std.io.ByteReader.write_to = comdat any

$std.io.ByteReader.available = comdat any

$std.io.ByteWriter.new_init = comdat any

$std.io.ByteWriter.temp_init = comdat any

$std.io.ByteWriter.init_with_buffer = comdat any

$std.io.ByteWriter.destroy = comdat any

$std.io.ByteWriter.str_view = comdat any

$std.io.ByteWriter.ensure_capacity = comdat any

$std.io.ByteWriter.write = comdat any

$std.io.ByteWriter.write_byte = comdat any

$std.io.ByteWriter.read_from = comdat any

$std.io.LimitReader.init = comdat any

$std.io.LimitReader.close = comdat any

$std.io.LimitReader.read = comdat any

$std.io.LimitReader.read_byte = comdat any

$std.io.LimitReader.available = comdat any

$std.io.Scanner.init = comdat any

$std.io.Scanner.flush = comdat any

$std.io.Scanner.close = comdat any

$std.io.Scanner.scan = comdat any

$std.io.Scanner.read = comdat any

$std.io.Scanner.read_byte = comdat any

$std.io.available = comdat any

$std.io.copy_to = comdat any

$std.io.wrap_bytes = comdat any

$.dyn_search = comdat any

$"$ct.std.io.BitReader" = comdat any

$"$ct.std.io.BitWriter" = comdat any

$"$ct.std.io.File" = comdat any

$"std.io.PrintFault$BUFFER_EXCEEDED" = comdat any

$"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" = comdat any

$"std.io.PrintFault$INVALID_FORMAT" = comdat any

$"std.io.PrintFault$NOT_ENOUGH_ARGUMENTS" = comdat any

$"std.io.PrintFault$INVALID_ARGUMENT" = comdat any

$"$ct.std.io.PrintFault" = comdat any

$"$ct.std.io.$anon" = comdat any

$"$ct.std.io.Formatter" = comdat any

$"$ct.std.io.PrintFlags" = comdat any

$"$ct.uint" = comdat any

$"std.io.FormattingFault$BAD_FORMAT" = comdat any

$"$ct.std.io.FormattingFault" = comdat any

$"$ct.int" = comdat any

$"$ct.std.io.FloatFormatting" = comdat any

$"std.io.IoError$ALREADY_EXISTS" = comdat any

$"std.io.IoError$BUSY" = comdat any

$"std.io.IoError$CANNOT_READ_DIR" = comdat any

$"std.io.IoError$DIR_NOT_EMPTY" = comdat any

$"std.io.IoError$EOF" = comdat any

$"std.io.IoError$FILE_CANNOT_DELETE" = comdat any

$"std.io.IoError$FILE_IS_DIR" = comdat any

$"std.io.IoError$FILE_IS_PIPE" = comdat any

$"std.io.IoError$FILE_NOT_DIR" = comdat any

$"std.io.IoError$FILE_NOT_FOUND" = comdat any

$"std.io.IoError$FILE_NOT_VALID" = comdat any

$"std.io.IoError$GENERAL_ERROR" = comdat any

$"std.io.IoError$ILLEGAL_ARGUMENT" = comdat any

$"std.io.IoError$INCOMPLETE_WRITE" = comdat any

$"std.io.IoError$INTERRUPTED" = comdat any

$"std.io.IoError$INVALID_POSITION" = comdat any

$"std.io.IoError$INVALID_PUSHBACK" = comdat any

$"std.io.IoError$NAME_TOO_LONG" = comdat any

$"std.io.IoError$NOT_SEEKABLE" = comdat any

$"std.io.IoError$NO_PERMISSION" = comdat any

$"std.io.IoError$OUT_OF_SPACE" = comdat any

$"std.io.IoError$OVERFLOW" = comdat any

$"std.io.IoError$READ_ONLY" = comdat any

$"std.io.IoError$SYMLINK_FAILED" = comdat any

$"std.io.IoError$TOO_MANY_DESCRIPTORS" = comdat any

$"std.io.IoError$UNEXPECTED_EOF" = comdat any

$"std.io.IoError$UNKNOWN_ERROR" = comdat any

$"std.io.IoError$UNSUPPORTED_OPERATION" = comdat any

$"std.io.IoError$WOULD_BLOCK" = comdat any

$"$ct.std.io.IoError" = comdat any

$"$ct.std.io.BufferData" = comdat any

$"$ct.std.io.Seek" = comdat any

$"$ct.std.io.ReadBuffer" = comdat any

$"$ct.std.io.WriteBuffer" = comdat any

$"$ct.std.io.ByteBuffer" = comdat any

$"$ct.std.io.ByteReader" = comdat any

$"$ct.std.io.ByteWriter" = comdat any

$"$ct.std.io.LimitReader" = comdat any

$"$ct.std.io.Scanner" = comdat any

$"$sel.read_byte" = comdat any

$"$ct.ulong" = comdat any

$"$sel.write" = comdat any

$std.io.PRINTF_NTOA_BUFFER_SIZE = comdat any

$"$sel.to_format" = comdat any

$"$sel.to_string" = comdat any

$"$ct.std.core.mem.allocator.OnStackAllocator" = comdat any

$"std.core.builtin.SearchResult$MISSING" = comdat any

$"$ct.std.core.builtin.SearchResult" = comdat any

$"$ct.ichar" = comdat any

$"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" = comdat any

$"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" = comdat any

$"$ct.std.core.types.ConversionResult" = comdat any

$"$ct.short" = comdat any

$"$ct.long" = comdat any

$"$ct.int128" = comdat any

$"$ct.char" = comdat any

$"$ct.ushort" = comdat any

$"$ct.uint128" = comdat any

$"$ct.anyfault" = comdat any

$"$ct.ReflectedParam" = comdat any

$"$ct.String" = comdat any

$"$ct.sa$char" = comdat any

$"$ct.std.core.string.ZString" = comdat any

$"$ct.p$char" = comdat any

$"$ct.std.core.dstring.DString" = comdat any

$"$ct.p$void" = comdat any

$"$ct.void" = comdat any

$std.io.XDIGITS_H = comdat any

$std.io.XDIGITS_L = comdat any

$"$ct.bool" = comdat any

$"$ct.float" = comdat any

$"$ct.double" = comdat any

$"$sel.write_byte" = comdat any

$"$sel.flush" = comdat any

$"$sel.close" = comdat any

$"$sel.read" = comdat any

$"$ct.std.core.mem.allocator.TempAllocator" = comdat any

$"$sel.release" = comdat any

$"$sel.acquire" = comdat any

$"$sel.resize" = comdat any

$"$sel.available" = comdat any

$"$sel.seek" = comdat any

$"$sel.write_to" = comdat any

$"$sel.read_to" = comdat any

$"$sel.pushback_byte" = comdat any

$"$sel.len" = comdat any

$"$sel.destroy" = comdat any

$"$sel.read_from" = comdat any

@"$ct.std.io.BitReader" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 24, i64 0, i64 3, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.BitWriter" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 24, i64 0, i64 3, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.File" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 8, i64 0, i64 1, [0 x i64] zeroinitializer }, comdat, align 8
@"std.io.PrintFault$BUFFER_EXCEEDED" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.PrintFault" to i64), %"char[]" { ptr @.fault, i64 15 }, i64 1 }, comdat, align 8
@.fault = internal constant [16 x i8] c"BUFFER_EXCEEDED\00", align 1
@"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.PrintFault" to i64), %"char[]" { ptr @.fault.1, i64 24 }, i64 2 }, comdat, align 8
@.fault.1 = internal constant [25 x i8] c"INTERNAL_BUFFER_EXCEEDED\00", align 1
@"std.io.PrintFault$INVALID_FORMAT" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.PrintFault" to i64), %"char[]" { ptr @.fault.2, i64 14 }, i64 3 }, comdat, align 8
@.fault.2 = internal constant [15 x i8] c"INVALID_FORMAT\00", align 1
@"std.io.PrintFault$NOT_ENOUGH_ARGUMENTS" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.PrintFault" to i64), %"char[]" { ptr @.fault.3, i64 20 }, i64 4 }, comdat, align 8
@.fault.3 = internal constant [21 x i8] c"NOT_ENOUGH_ARGUMENTS\00", align 1
@"std.io.PrintFault$INVALID_ARGUMENT" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.PrintFault" to i64), %"char[]" { ptr @.fault.4, i64 16 }, i64 5 }, comdat, align 8
@.fault.4 = internal constant [17 x i8] c"INVALID_ARGUMENT\00", align 1
@"$ct.std.io.PrintFault" = linkonce global %.introspect { i8 9, i64 0, ptr null, i64 8, i64 0, i64 5, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.$anon" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 32, i64 0, i64 5, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.Formatter" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 48, i64 0, i64 3, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.PrintFlags" = linkonce global %.introspect { i8 12, i64 0, ptr null, i64 4, i64 ptrtoint (ptr @"$ct.uint" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.uint" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 4, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"std.io.FormattingFault$BAD_FORMAT" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.FormattingFault" to i64), %"char[]" { ptr @.fault.6, i64 10 }, i64 1 }, comdat, align 8
@.fault.6 = internal constant [11 x i8] c"BAD_FORMAT\00", align 1
@"$ct.std.io.FormattingFault" = linkonce global %.introspect { i8 9, i64 0, ptr null, i64 8, i64 0, i64 1, [0 x i64] zeroinitializer }, comdat, align 8
@.enum.FLOAT = internal constant [6 x i8] c"FLOAT\00", align 1
@.enum.EXPONENTIAL = internal constant [12 x i8] c"EXPONENTIAL\00", align 1
@.enum.ADAPTIVE = internal constant [9 x i8] c"ADAPTIVE\00", align 1
@.enum.HEX = internal constant [4 x i8] c"HEX\00", align 1
@"$ct.int" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 4, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.FloatFormatting" = linkonce global { i8, i64, ptr, i64, i64, i64, [4 x %"char[]"] } { i8 8, i64 0, ptr null, i64 4, i64 ptrtoint (ptr @"$ct.int" to i64), i64 4, [4 x %"char[]"] [%"char[]" { ptr @.enum.FLOAT, i64 5 }, %"char[]" { ptr @.enum.EXPONENTIAL, i64 11 }, %"char[]" { ptr @.enum.ADAPTIVE, i64 8 }, %"char[]" { ptr @.enum.HEX, i64 3 }] }, comdat, align 8
@"std.io.IoError$ALREADY_EXISTS" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.7, i64 14 }, i64 1 }, comdat, align 8
@.fault.7 = internal constant [15 x i8] c"ALREADY_EXISTS\00", align 1
@"std.io.IoError$BUSY" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.8, i64 4 }, i64 2 }, comdat, align 8
@.fault.8 = internal constant [5 x i8] c"BUSY\00", align 1
@"std.io.IoError$CANNOT_READ_DIR" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.9, i64 15 }, i64 3 }, comdat, align 8
@.fault.9 = internal constant [16 x i8] c"CANNOT_READ_DIR\00", align 1
@"std.io.IoError$DIR_NOT_EMPTY" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.10, i64 13 }, i64 4 }, comdat, align 8
@.fault.10 = internal constant [14 x i8] c"DIR_NOT_EMPTY\00", align 1
@"std.io.IoError$EOF" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.11, i64 3 }, i64 5 }, comdat, align 8
@.fault.11 = internal constant [4 x i8] c"EOF\00", align 1
@"std.io.IoError$FILE_CANNOT_DELETE" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.12, i64 18 }, i64 6 }, comdat, align 8
@.fault.12 = internal constant [19 x i8] c"FILE_CANNOT_DELETE\00", align 1
@"std.io.IoError$FILE_IS_DIR" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.13, i64 11 }, i64 7 }, comdat, align 8
@.fault.13 = internal constant [12 x i8] c"FILE_IS_DIR\00", align 1
@"std.io.IoError$FILE_IS_PIPE" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.14, i64 12 }, i64 8 }, comdat, align 8
@.fault.14 = internal constant [13 x i8] c"FILE_IS_PIPE\00", align 1
@"std.io.IoError$FILE_NOT_DIR" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.15, i64 12 }, i64 9 }, comdat, align 8
@.fault.15 = internal constant [13 x i8] c"FILE_NOT_DIR\00", align 1
@"std.io.IoError$FILE_NOT_FOUND" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.16, i64 14 }, i64 10 }, comdat, align 8
@.fault.16 = internal constant [15 x i8] c"FILE_NOT_FOUND\00", align 1
@"std.io.IoError$FILE_NOT_VALID" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.17, i64 14 }, i64 11 }, comdat, align 8
@.fault.17 = internal constant [15 x i8] c"FILE_NOT_VALID\00", align 1
@"std.io.IoError$GENERAL_ERROR" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.18, i64 13 }, i64 12 }, comdat, align 8
@.fault.18 = internal constant [14 x i8] c"GENERAL_ERROR\00", align 1
@"std.io.IoError$ILLEGAL_ARGUMENT" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.19, i64 16 }, i64 13 }, comdat, align 8
@.fault.19 = internal constant [17 x i8] c"ILLEGAL_ARGUMENT\00", align 1
@"std.io.IoError$INCOMPLETE_WRITE" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.20, i64 16 }, i64 14 }, comdat, align 8
@.fault.20 = internal constant [17 x i8] c"INCOMPLETE_WRITE\00", align 1
@"std.io.IoError$INTERRUPTED" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.21, i64 11 }, i64 15 }, comdat, align 8
@.fault.21 = internal constant [12 x i8] c"INTERRUPTED\00", align 1
@"std.io.IoError$INVALID_POSITION" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.22, i64 16 }, i64 16 }, comdat, align 8
@.fault.22 = internal constant [17 x i8] c"INVALID_POSITION\00", align 1
@"std.io.IoError$INVALID_PUSHBACK" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.23, i64 16 }, i64 17 }, comdat, align 8
@.fault.23 = internal constant [17 x i8] c"INVALID_PUSHBACK\00", align 1
@"std.io.IoError$NAME_TOO_LONG" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.24, i64 13 }, i64 18 }, comdat, align 8
@.fault.24 = internal constant [14 x i8] c"NAME_TOO_LONG\00", align 1
@"std.io.IoError$NOT_SEEKABLE" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.25, i64 12 }, i64 19 }, comdat, align 8
@.fault.25 = internal constant [13 x i8] c"NOT_SEEKABLE\00", align 1
@"std.io.IoError$NO_PERMISSION" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.26, i64 13 }, i64 20 }, comdat, align 8
@.fault.26 = internal constant [14 x i8] c"NO_PERMISSION\00", align 1
@"std.io.IoError$OUT_OF_SPACE" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.27, i64 12 }, i64 21 }, comdat, align 8
@.fault.27 = internal constant [13 x i8] c"OUT_OF_SPACE\00", align 1
@"std.io.IoError$OVERFLOW" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.28, i64 8 }, i64 22 }, comdat, align 8
@.fault.28 = internal constant [9 x i8] c"OVERFLOW\00", align 1
@"std.io.IoError$READ_ONLY" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.29, i64 9 }, i64 23 }, comdat, align 8
@.fault.29 = internal constant [10 x i8] c"READ_ONLY\00", align 1
@"std.io.IoError$SYMLINK_FAILED" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.30, i64 14 }, i64 24 }, comdat, align 8
@.fault.30 = internal constant [15 x i8] c"SYMLINK_FAILED\00", align 1
@"std.io.IoError$TOO_MANY_DESCRIPTORS" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.31, i64 20 }, i64 25 }, comdat, align 8
@.fault.31 = internal constant [21 x i8] c"TOO_MANY_DESCRIPTORS\00", align 1
@"std.io.IoError$UNEXPECTED_EOF" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.32, i64 14 }, i64 26 }, comdat, align 8
@.fault.32 = internal constant [15 x i8] c"UNEXPECTED_EOF\00", align 1
@"std.io.IoError$UNKNOWN_ERROR" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.33, i64 13 }, i64 27 }, comdat, align 8
@.fault.33 = internal constant [14 x i8] c"UNKNOWN_ERROR\00", align 1
@"std.io.IoError$UNSUPPORTED_OPERATION" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.34, i64 21 }, i64 28 }, comdat, align 8
@.fault.34 = internal constant [22 x i8] c"UNSUPPORTED_OPERATION\00", align 1
@"std.io.IoError$WOULD_BLOCK" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.io.IoError" to i64), %"char[]" { ptr @.fault.35, i64 11 }, i64 29 }, comdat, align 8
@.fault.35 = internal constant [12 x i8] c"WOULD_BLOCK\00", align 1
@"$ct.std.io.IoError" = linkonce global %.introspect { i8 9, i64 0, ptr null, i64 8, i64 0, i64 29, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.BufferData" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 24, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@.enum.SET = internal constant [4 x i8] c"SET\00", align 1
@.enum.CURSOR = internal constant [7 x i8] c"CURSOR\00", align 1
@.enum.END = internal constant [4 x i8] c"END\00", align 1
@"$ct.std.io.Seek" = linkonce global { i8, i64, ptr, i64, i64, i64, [3 x %"char[]"] } { i8 8, i64 0, ptr null, i64 4, i64 ptrtoint (ptr @"$ct.int" to i64), i64 3, [3 x %"char[]"] [%"char[]" { ptr @.enum.SET, i64 3 }, %"char[]" { ptr @.enum.CURSOR, i64 6 }, %"char[]" { ptr @.enum.END, i64 3 }] }, comdat, align 8
@"$ct.std.io.ReadBuffer" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 48, i64 0, i64 4, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.WriteBuffer" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 40, i64 0, i64 3, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.ByteBuffer" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 64, i64 0, i64 6, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.ByteReader" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 24, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.ByteWriter" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 40, i64 0, i64 3, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.LimitReader" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 24, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.std.io.Scanner" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 48, i64 0, i64 4, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg = internal constant [63 x i8] c"Reference parameter 'self' was passed a null pointer argument.\00", align 1
@.file = internal constant [8 x i8] c"bits.c3\00", align 1
@.func = internal constant [5 x i8] c"init\00", align 1
@std.core.builtin.panic = external global ptr, align 8
@.panic_msg.36 = internal constant [46 x i8] c"Dereference of null pointer, 'self' was null.\00", align 1
@.func.37 = internal constant [6 x i8] c"clear\00", align 1
@.func.38 = internal constant [10 x i8] c"read_bits\00", align 1
@.panic_msg.39 = internal constant [32 x i8] c"@require \22nbits <= 8\22 violated.\00", align 1
@.panic_msg.40 = internal constant [57 x i8] c"@require \22self.len + nbits <= uint.sizeof * 8\22 violated.\00", align 1
@"$sel.read_byte" = linkonce_odr constant [10 x i8] c"read_byte\00", comdat, align 1
@.panic_msg.41 = internal constant [47 x i8] c"No method 'read_byte' could be found on target\00", align 1
@.panic_msg.42 = internal constant [36 x i8] c"Shift amount out of range (was %s).\00", align 1
@.func.43 = internal constant [6 x i8] c"flush\00", align 1
@.panic_msg.44 = internal constant [118 x i8] c"@require \22is_arrayptr_or_slice_of_char(bytes)\22 violated: 'argument must be a pointer to an array or a slice of char'.\00", align 1
@.file.45 = internal constant [12 x i8] c"bitorder.c3\00", align 1
@.panic_msg.46 = internal constant [47 x i8] c"Dereference of null pointer, 'bytes' was null.\00", align 1
@.panic_msg.47 = internal constant [59 x i8] c"Dereference of null pointer, '$typeof(x)*)s.ptr' was null.\00", align 1
@.panic_msg.48 = internal constant [54 x i8] c"Dereference of null pointer, '$Type*)&expr' was null.\00", align 1
@.file.49 = internal constant [11 x i8] c"builtin.c3\00", align 1
@"$ct.ulong" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.50 = internal constant [61 x i8] c"End index out of bounds (end index of %d exceeds size of %d)\00", align 1
@"$sel.write" = linkonce_odr constant [6 x i8] c"write\00", comdat, align 1
@.panic_msg.51 = internal constant [43 x i8] c"No method 'write' could be found on target\00", align 1
@.file.52 = internal constant [10 x i8] c"stream.c3\00", align 1
@.func.53 = internal constant [11 x i8] c"write_bits\00", align 1
@std.io.PRINTF_NTOA_BUFFER_SIZE = weak local_unnamed_addr constant i32 256, comdat, align 4, !dbg !0
@.file.54 = internal constant [13 x i8] c"formatter.c3\00", align 1
@.func.55 = internal constant [7 x i8] c"printf\00", align 1
@.func.56 = internal constant [4 x i8] c"out\00", align 1
@.func.57 = internal constant [20 x i8] c"print_with_function\00", align 1
@"$sel.to_format" = linkonce_odr constant [10 x i8] c"to_format\00", comdat, align 1
@.str = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.panic_msg.58 = internal constant [47 x i8] c"No method 'to_format' could be found on target\00", align 1
@"$sel.to_string" = linkonce_odr constant [10 x i8] c"to_string\00", comdat, align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@std.core.mem.allocator.thread_allocator = external thread_local global %any, align 8
@"$ct.std.core.mem.allocator.OnStackAllocator" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 48, i64 0, i64 4, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.60 = internal constant [47 x i8] c"No method 'to_string' could be found on target\00", align 1
@"std.core.builtin.SearchResult$MISSING" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.core.builtin.SearchResult" to i64), %"char[]" { ptr @.fault.61, i64 7 }, i64 1 }, comdat, align 8
@.fault.61 = internal constant [8 x i8] c"MISSING\00", align 1
@"$ct.std.core.builtin.SearchResult" = linkonce global %.introspect { i8 9, i64 0, ptr null, i64 8, i64 0, i64 1, [0 x i64] zeroinitializer }, comdat, align 8
@.func.62 = internal constant [8 x i8] c"out_str\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"typeid\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.panic_msg.65 = internal constant [59 x i8] c"Dereference of null pointer, 'anyfault*)arg.ptr' was null.\00", align 1
@.panic_msg.66 = internal constant [50 x i8] c"Dereference of null pointer, 'any*)arg' was null.\00", align 1
@.str.67 = private unnamed_addr constant [31 x i8] c"Unreachable statement reached.\00", align 1
@.str.68 = private unnamed_addr constant [13 x i8] c"formatter.c3\00", align 1
@.str.69 = private unnamed_addr constant [18 x i8] c"Formatter.out_str\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c"<INVALID>\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"ERR\00", align 1
@.panic_msg.72 = internal constant [55 x i8] c"Dereference of null pointer, 'bool*)arg.ptr' was null.\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.panic_msg.75 = internal constant [107 x i8] c"@require \22$Type.kindof.is_int() || $Type.kindof == TypeKind.ENUM\22 violated: 'Argument was not an integer'.\00", align 1
@.file.76 = internal constant [9 x i8] c"types.c3\00", align 1
@.panic_msg.77 = internal constant [50 x i8] c"Attempted to access 'inner' on non composite type\00", align 1
@"$ct.ichar" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 1, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.78 = internal constant [53 x i8] c"Dereference of null pointer, 'char*)v.ptr' was null.\00", align 1
@"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.core.types.ConversionResult" to i64), %"char[]" { ptr @.fault.79, i64 18 }, i64 1 }, comdat, align 8
@.fault.79 = internal constant [19 x i8] c"VALUE_OUT_OF_RANGE\00", align 1
@"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" = linkonce constant %.fault { i64 ptrtoint (ptr @"$ct.std.core.types.ConversionResult" to i64), %"char[]" { ptr @.fault.80, i64 27 }, i64 2 }, comdat, align 8
@.fault.80 = internal constant [28 x i8] c"VALUE_OUT_OF_UNSIGNED_RANGE\00", align 1
@"$ct.std.core.types.ConversionResult" = linkonce global %.introspect { i8 9, i64 0, ptr null, i64 8, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.short" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 2, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.81 = internal constant [54 x i8] c"Dereference of null pointer, 'short*)v.ptr' was null.\00", align 1
@.panic_msg.82 = internal constant [52 x i8] c"Dereference of null pointer, 'int*)v.ptr' was null.\00", align 1
@"$ct.long" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.83 = internal constant [53 x i8] c"Dereference of null pointer, 'long*)v.ptr' was null.\00", align 1
@"$ct.int128" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 16, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.84 = internal constant [55 x i8] c"Dereference of null pointer, 'int128*)v.ptr' was null.\00", align 1
@"$ct.char" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 1, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.ushort" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 2, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.85 = internal constant [55 x i8] c"Dereference of null pointer, 'ushort*)v.ptr' was null.\00", align 1
@.panic_msg.86 = internal constant [53 x i8] c"Dereference of null pointer, 'uint*)v.ptr' was null.\00", align 1
@.panic_msg.87 = internal constant [54 x i8] c"Dereference of null pointer, 'ulong*)v.ptr' was null.\00", align 1
@"$ct.uint128" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 16, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.88 = internal constant [56 x i8] c"Dereference of null pointer, 'uint128*)v.ptr' was null.\00", align 1
@.str.89 = private unnamed_addr constant [31 x i8] c"Unreachable statement reached.\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"formatter.c3\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"Formatter.out_str\00", align 1
@"$ct.anyfault" = linkonce global %.introspect { i8 6, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.92 = internal constant [37 x i8] c"Unexpected fault '%s' was unwrapped!\00", align 1
@.panic_msg.93 = internal constant [52 x i8] c"Attempted to access 'names' on non enum/fault type.\00", align 1
@.panic_msg.94 = internal constant [50 x i8] c"Illegal enum value found, numerical value was %d.\00", align 1
@.panic_msg.95 = internal constant [60 x i8] c"Array index out of bounds (array had size %d, index was %d)\00", align 1
@"$ct.ReflectedParam" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 24, i64 0, i64 2, [0 x i64] zeroinitializer }, comdat, align 8
@.str.96 = private unnamed_addr constant [13 x i8] c"[Parameter '\00", align 1
@.panic_msg.97 = internal constant [47 x i8] c"Dereference of null pointer, 'param' was null.\00", align 1
@.str.98 = private unnamed_addr constant [3 x i8] c"']\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"<struct>\00", align 1
@.str.100 = private unnamed_addr constant [8 x i8] c"<union>\00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"<bitstruct>\00", align 1
@.str.102 = private unnamed_addr constant [11 x i8] c"<function>\00", align 1
@"$ct.String" = linkonce global %.introspect { i8 18, i64 ptrtoint (ptr @"$ct.sa$char" to i64), ptr null, i64 16, i64 ptrtoint (ptr @"$ct.sa$char" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.sa$char" = linkonce global %.introspect { i8 16, i64 0, ptr null, i64 16, i64 ptrtoint (ptr @"$ct.char" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.103 = internal constant [53 x i8] c"Dereference of null pointer, 'String*)arg' was null.\00", align 1
@"$ct.std.core.string.ZString" = linkonce global %.introspect { i8 18, i64 ptrtoint (ptr @"$ct.p$char" to i64), ptr null, i64 8, i64 ptrtoint (ptr @"$ct.p$char" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.p$char" = linkonce global %.introspect { i8 19, i64 0, ptr null, i64 8, i64 ptrtoint (ptr @"$ct.char" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.104 = internal constant [54 x i8] c"Dereference of null pointer, 'ZString*)arg' was null.\00", align 1
@.panic_msg.105 = internal constant [55 x i8] c"Dereference of null pointer, 'ZString*)arg)' was null.\00", align 1
@.str.106 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@"$ct.std.core.dstring.DString" = linkonce global %.introspect { i8 18, i64 0, ptr null, i64 8, i64 ptrtoint (ptr @"$ct.p$void" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.p$void" = linkonce global %.introspect { i8 19, i64 0, ptr null, i64 8, i64 ptrtoint (ptr @"$ct.void" to i64), i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.void" = linkonce global %.introspect { i8 0, i64 0, ptr null, i64 1, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.107 = internal constant [54 x i8] c"Dereference of null pointer, 'DString*)arg' was null.\00", align 1
@.panic_msg.108 = internal constant [55 x i8] c"Dereference of null pointer, 'DString*)arg)' was null.\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.panic_msg.110 = internal constant [49 x i8] c"Dereference of null pointer, 'pointer' was null.\00", align 1
@.str.111 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.panic_msg.112 = internal constant [44 x i8] c"Attempted to access 'len' on non array type\00", align 1
@.str.113 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.114 = private unnamed_addr constant [3 x i8] c"[<\00", align 1
@.str.115 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.116 = private unnamed_addr constant [3 x i8] c">]\00", align 1
@.panic_msg.117 = internal constant [46 x i8] c"Dereference of null pointer, 'temp' was null.\00", align 1
@.str.118 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.119 = private unnamed_addr constant [16 x i8] c"Already handled\00", align 1
@.str.120 = private unnamed_addr constant [13 x i8] c"formatter.c3\00", align 1
@.str.121 = private unnamed_addr constant [18 x i8] c"Formatter.out_str\00", align 1
@.str.122 = private unnamed_addr constant [13 x i8] c"Invalid type\00", align 1
@.func.123 = internal constant [8 x i8] c"vprintf\00", align 1
@.str.124 = private unnamed_addr constant [5 x i8] c"%ERR\00", align 1
@.str.125 = private unnamed_addr constant [5 x i8] c"%ERR\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"%ERR\00", align 1
@.str.127 = private unnamed_addr constant [13 x i8] c"<BAD FORMAT>\00", align 1
@.str.128 = private unnamed_addr constant [13 x i8] c"<BAD FORMAT>\00", align 1
@.file.129 = internal constant [21 x i8] c"formatter_private.c3\00", align 1
@.str.130 = private unnamed_addr constant [10 x i8] c"<MISSING>\00", align 1
@.str.131 = private unnamed_addr constant [10 x i8] c"<INVALID>\00", align 1
@.str.132 = private unnamed_addr constant [10 x i8] c"<INVALID>\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"<INVALID>\00", align 1
@.str.134 = private unnamed_addr constant [10 x i8] c"<INVALID>\00", align 1
@.str.135 = private unnamed_addr constant [13 x i8] c"<BAD FORMAT>\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"<INVALID>\00", align 1
@.func.137 = internal constant [6 x i8] c"print\00", align 1
@std.io.XDIGITS_H = weak constant [16 x i8] c"0123456789ABCDEF", comdat, align 16, !dbg !4
@std.io.XDIGITS_L = weak constant [16 x i8] c"0123456789abcdef", comdat, align 16, !dbg !11
@.panic_msg.139 = internal constant [48 x i8] c"Dereference of null pointer, 'is_neg' was null.\00", align 1
@.func.140 = internal constant [13 x i8] c"int_from_any\00", align 1
@.panic_msg.141 = internal constant [56 x i8] c"Dereference of null pointer, 'void**)arg.ptr' was null.\00", align 1
@"$ct.bool" = linkonce global %.introspect { i8 1, i64 0, ptr null, i64 1, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.142 = internal constant [45 x i8] c"Dereference of null pointer, 'arg' was null.\00", align 1
@"$ct.float" = linkonce global %.introspect { i8 4, i64 0, ptr null, i64 4, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.double" = linkonce global %.introspect { i8 4, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.func.143 = internal constant [15 x i8] c"float_from_any\00", align 1
@.panic_msg.144 = internal constant [49 x i8] c"Dereference of null pointer, 'len_ptr' was null.\00", align 1
@.func.145 = internal constant [12 x i8] c"simple_atoi\00", align 1
@.panic_msg.146 = internal constant [45 x i8] c"Dereference of null pointer, '--s' was null.\00", align 1
@.func.147 = internal constant [6 x i8] c"fmt_u\00", align 1
@.panic_msg.148 = internal constant [51 x i8] c"Dereference of null pointer, 'index_ptr' was null.\00", align 1
@.func.149 = internal constant [26 x i8] c"printf_parse_format_field\00", align 1
@.panic_msg.150 = internal constant [56 x i8] c"Dereference of null pointer, 'args_index_ptr' was null.\00", align 1
@.str.151 = private unnamed_addr constant [31 x i8] c"Unreachable statement reached.\00", align 1
@.str.152 = private unnamed_addr constant [21 x i8] c"formatter_private.c3\00", align 1
@.str.153 = private unnamed_addr constant [26 x i8] c"printf_parse_format_field\00", align 1
@.func.154 = internal constant [7 x i8] c"adjust\00", align 1
@.func.155 = internal constant [11 x i8] c"out_substr\00", align 1
@.func.156 = internal constant [4 x i8] c"pad\00", align 1
@.func.157 = internal constant [10 x i8] c"out_chars\00", align 1
@.func.158 = internal constant [5 x i8] c"etoa\00", align 1
@.func.159 = internal constant [5 x i8] c"ftoa\00", align 1
@.func.160 = internal constant [5 x i8] c"gtoa\00", align 1
@.func.161 = internal constant [5 x i8] c"atoa\00", align 1
@.func.162 = internal constant [12 x i8] c"floatformat\00", align 1
@floatformat.BUF_SIZE = internal unnamed_addr constant i32 126, align 4, !dbg !13
@.str.163 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.164 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.165 = private unnamed_addr constant [4 x i8] c"NAN\00", align 1
@.str.166 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.panic_msg.167 = internal constant [48 x i8] c"Dereference of null pointer, '--estr' was null.\00", align 1
@.panic_msg.168 = internal constant [45 x i8] c"Dereference of null pointer, 's++' was null.\00", align 1
@.str.169 = private unnamed_addr constant [3 x i8] c"0X\00", align 1
@.str.170 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.panic_msg.171 = internal constant [43 x i8] c"Dereference of null pointer, 'd' was null.\00", align 1
@.panic_msg.172 = internal constant [45 x i8] c"Dereference of null pointer, '--a' was null.\00", align 1
@.panic_msg.173 = internal constant [43 x i8] c"Dereference of null pointer, 'a' was null.\00", align 1
@.panic_msg.174 = internal constant [11 x i8] c"% by zero.\00", align 1
@.panic_msg.175 = internal constant [18 x i8] c"Division by zero.\00", align 1
@.panic_msg.176 = internal constant [45 x i8] c"Dereference of null pointer, 'd--' was null.\00", align 1
@.func.177 = internal constant [5 x i8] c"ntoa\00", align 1
@.func.178 = internal constant [12 x i8] c"ntoa_format\00", align 1
@.str.179 = private unnamed_addr constant [31 x i8] c"Unreachable statement reached.\00", align 1
@.str.180 = private unnamed_addr constant [21 x i8] c"formatter_private.c3\00", align 1
@.str.181 = private unnamed_addr constant [22 x i8] c"Formatter.ntoa_format\00", align 1
@.panic_msg.182 = internal constant [62 x i8] c"Index exceeds array length (array had size %d, index was %d).\00", align 1
@.func.183 = internal constant [9 x i8] c"ntoa_any\00", align 1
@.func.184 = internal constant [9 x i8] c"out_char\00", align 1
@.str.185 = private unnamed_addr constant [31 x i8] c"Unreachable statement reached.\00", align 1
@.str.186 = private unnamed_addr constant [21 x i8] c"formatter_private.c3\00", align 1
@.str.187 = private unnamed_addr constant [19 x i8] c"Formatter.out_char\00", align 1
@.func.188 = internal constant [12 x i8] c"out_reverse\00", align 1
@"$sel.write_byte" = linkonce_odr constant [11 x i8] c"write_byte\00", comdat, align 1
@.panic_msg.189 = internal constant [48 x i8] c"No method 'write_byte' could be found on target\00", align 1
@.file.190 = internal constant [6 x i8] c"io.c3\00", align 1
@.func.191 = internal constant [9 x i8] c"fprintfn\00", align 1
@"$sel.flush" = linkonce_odr constant [6 x i8] c"flush\00", comdat, align 1
@.panic_msg.192 = internal constant [43 x i8] c"No method 'flush' could be found on target\00", align 1
@.panic_msg.193 = internal constant [48 x i8] c"Dereference of null pointer, 'stream' was null.\00", align 1
@.func.194 = internal constant [17 x i8] c"out_putstream_fn\00", align 1
@.func.195 = internal constant [8 x i8] c"bprintf\00", align 1
@.panic_msg.196 = internal constant [53 x i8] c"Dereference of null pointer, 'buffer_data' was null.\00", align 1
@.func.197 = internal constant [14 x i8] c"out_buffer_fn\00", align 1
@stdout.file = internal global %File zeroinitializer, align 8, !dbg !15
@stderr.file = internal global %File zeroinitializer, align 8, !dbg !23
@stdin.file = internal global %File zeroinitializer, align 8, !dbg !25
@.file.198 = internal constant [10 x i8] c"buffer.c3\00", align 1
@.panic_msg.199 = internal constant [35 x i8] c"@require \22bytes.len > 0\22 violated.\00", align 1
@.panic_msg.200 = internal constant [89 x i8] c"@require \22self.bytes.len == 0\22 violated: 'Init may not run on already initialized data'.\00", align 1
@.func.201 = internal constant [9 x i8] c"str_view\00", align 1
@.func.202 = internal constant [6 x i8] c"close\00", align 1
@"$sel.close" = linkonce_odr constant [6 x i8] c"close\00", comdat, align 1
@.panic_msg.203 = internal constant [43 x i8] c"No method 'close' could be found on target\00", align 1
@.func.204 = internal constant [5 x i8] c"read\00", align 1
@"$sel.read" = linkonce_odr constant [5 x i8] c"read\00", comdat, align 1
@.panic_msg.205 = internal constant [42 x i8] c"No method 'read' could be found on target\00", align 1
@.panic_msg.206 = internal constant [39 x i8] c"Slice copy length mismatch (%d != %d).\00", align 1
@.func.207 = internal constant [10 x i8] c"read_byte\00", align 1
@.func.208 = internal constant [7 x i8] c"refill\00", align 1
@.panic_msg.209 = internal constant [64 x i8] c"@require \22bytes.len > 0\22 violated: 'Non-empty buffer required'.\00", align 1
@.func.210 = internal constant [6 x i8] c"write\00", align 1
@.func.211 = internal constant [11 x i8] c"write_byte\00", align 1
@.func.212 = internal constant [14 x i8] c"write_pending\00", align 1
@.file.213 = internal constant [14 x i8] c"bytebuffer.c3\00", align 1
@.func.214 = internal constant [9 x i8] c"new_init\00", align 1
@.panic_msg.215 = internal constant [72 x i8] c"@require \22self.bytes.len == 0\22 violated: 'Buffer already initialized.'.\00", align 1
@.func.216 = internal constant [10 x i8] c"temp_init\00", align 1
@std.core.mem.allocator.thread_temp_allocator = external thread_local global ptr, align 8
@"$ct.std.core.mem.allocator.TempAllocator" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 40, i64 0, i64 5, [0 x i64] zeroinitializer }, comdat, align 8
@.func.217 = internal constant [17 x i8] c"init_with_buffer\00", align 1
@.panic_msg.218 = internal constant [33 x i8] c"@require \22buf.len > 0\22 violated.\00", align 1
@.func.219 = internal constant [5 x i8] c"free\00", align 1
@"$sel.release" = linkonce_odr constant [8 x i8] c"release\00", comdat, align 1
@.panic_msg.220 = internal constant [45 x i8] c"No method 'release' could be found on target\00", align 1
@.file.221 = internal constant [17 x i8] c"mem_allocator.c3\00", align 1
@.panic_msg.222 = internal constant [23 x i8] c"Negative indexing (%d)\00", align 1
@.func.223 = internal constant [14 x i8] c"pushback_byte\00", align 1
@.panic_msg.224 = internal constant [17 x i8] c"Assert violation\00", align 1
@.func.225 = internal constant [5 x i8] c"seek\00", align 1
@.func.226 = internal constant [10 x i8] c"available\00", align 1
@.func.227 = internal constant [5 x i8] c"grow\00", align 1
@"$sel.acquire" = linkonce_odr constant [8 x i8] c"acquire\00", comdat, align 1
@.panic_msg.228 = internal constant [45 x i8] c"No method 'acquire' could be found on target\00", align 1
@"$sel.resize" = linkonce_odr constant [7 x i8] c"resize\00", comdat, align 1
@.panic_msg.229 = internal constant [44 x i8] c"No method 'resize' could be found on target\00", align 1
@.file.230 = internal constant [14 x i8] c"bytereader.c3\00", align 1
@.func.231 = internal constant [4 x i8] c"len\00", align 1
@.panic_msg.232 = internal constant [96 x i8] c"@require \22len == 0 || dst + len <= src || src + len <= dst\22 violated: 'Ranges may not overlap'.\00", align 1
@.file.233 = internal constant [7 x i8] c"mem.c3\00", align 1
@.func.234 = internal constant [9 x i8] c"write_to\00", align 1
@.file.235 = internal constant [14 x i8] c"bytewriter.c3\00", align 1
@.panic_msg.236 = internal constant [53 x i8] c"@ensure \22(bool)allocator, self.index == 0\22 violated.\00", align 1
@.panic_msg.237 = internal constant [36 x i8] c"@ensure \22self.index == 0\22 violated.\00", align 1
@.func.238 = internal constant [8 x i8] c"destroy\00", align 1
@.func.239 = internal constant [16 x i8] c"ensure_capacity\00", align 1
@.func.240 = internal constant [10 x i8] c"read_from\00", align 1
@"$sel.available" = linkonce_odr constant [10 x i8] c"available\00", comdat, align 1
@.panic_msg.241 = internal constant [47 x i8] c"No method 'available' could be found on target\00", align 1
@.file.242 = internal constant [15 x i8] c"limitreader.c3\00", align 1
@.file.243 = internal constant [11 x i8] c"scanner.c3\00", align 1
@.panic_msg.244 = internal constant [66 x i8] c"@require \22buffer.len > 0\22 violated: 'Non-empty buffer required.'.\00", align 1
@.func.245 = internal constant [5 x i8] c"scan\00", align 1
@.panic_msg.246 = internal constant [68 x i8] c"@require \22pattern.len > 0\22 violated: 'Non-empty pattern required.'.\00", align 1
@.panic_msg.247 = internal constant [70 x i8] c"@require \22self.buf.len > pattern.len\22 violated: 'Pattern too large.'.\00", align 1
@std.io.MAX_VARS = internal unnamed_addr constant { [2 x i8], i8, i8, i8, [3 x i8], i8 } { [2 x i8] zeroinitializer, i8 3, i8 0, i8 5, [3 x i8] zeroinitializer, i8 10 }, align 1, !dbg !27
@"$sel.seek" = linkonce_odr constant [5 x i8] c"seek\00", comdat, align 1
@.panic_msg.248 = internal constant [42 x i8] c"No method 'seek' could be found on target\00", align 1
@.func.249 = internal constant [8 x i8] c"copy_to\00", align 1
@"$sel.write_to" = linkonce_odr constant [9 x i8] c"write_to\00", comdat, align 1
@.panic_msg.250 = internal constant [46 x i8] c"No method 'write_to' could be found on target\00", align 1
@"$sel.read_to" = linkonce_odr constant [8 x i8] c"read_to\00", comdat, align 1
@.panic_msg.251 = internal constant [45 x i8] c"No method 'read_to' could be found on target\00", align 1
@"$ct.dyn.std.io.ReadBuffer.close" = global { ptr, ptr, ptr } { ptr @std.io.ReadBuffer.close, ptr @"$sel.close", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ReadBuffer.read" = global { ptr, ptr, ptr } { ptr @std.io.ReadBuffer.read, ptr @"$sel.read", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ReadBuffer.read_byte" = global { ptr, ptr, ptr } { ptr @std.io.ReadBuffer.read_byte, ptr @"$sel.read_byte", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.WriteBuffer.close" = global { ptr, ptr, ptr } { ptr @std.io.WriteBuffer.close, ptr @"$sel.close", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.WriteBuffer.flush" = global { ptr, ptr, ptr } { ptr @std.io.WriteBuffer.flush, ptr @"$sel.flush", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.WriteBuffer.write" = global { ptr, ptr, ptr } { ptr @std.io.WriteBuffer.write, ptr @"$sel.write", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.WriteBuffer.write_byte" = global { ptr, ptr, ptr } { ptr @std.io.WriteBuffer.write_byte, ptr @"$sel.write_byte", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteBuffer.write" = global { ptr, ptr, ptr } { ptr @std.io.ByteBuffer.write, ptr @"$sel.write", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteBuffer.write_byte" = global { ptr, ptr, ptr } { ptr @std.io.ByteBuffer.write_byte, ptr @"$sel.write_byte", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteBuffer.read" = global { ptr, ptr, ptr } { ptr @std.io.ByteBuffer.read, ptr @"$sel.read", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteBuffer.read_byte" = global { ptr, ptr, ptr } { ptr @std.io.ByteBuffer.read_byte, ptr @"$sel.read_byte", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteBuffer.pushback_byte" = global { ptr, ptr, ptr } { ptr @std.io.ByteBuffer.pushback_byte, ptr @"$sel.pushback_byte", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$sel.pushback_byte" = linkonce_odr constant [14 x i8] c"pushback_byte\00", comdat, align 1
@"$ct.dyn.std.io.ByteBuffer.seek" = global { ptr, ptr, ptr } { ptr @std.io.ByteBuffer.seek, ptr @"$sel.seek", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteBuffer.available" = global { ptr, ptr, ptr } { ptr @std.io.ByteBuffer.available, ptr @"$sel.available", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteReader.len" = global { ptr, ptr, ptr } { ptr @std.io.ByteReader.len, ptr @"$sel.len", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$sel.len" = linkonce_odr constant [4 x i8] c"len\00", comdat, align 1
@"$ct.dyn.std.io.ByteReader.read" = global { ptr, ptr, ptr } { ptr @std.io.ByteReader.read, ptr @"$sel.read", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteReader.read_byte" = global { ptr, ptr, ptr } { ptr @std.io.ByteReader.read_byte, ptr @"$sel.read_byte", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteReader.pushback_byte" = global { ptr, ptr, ptr } { ptr @std.io.ByteReader.pushback_byte, ptr @"$sel.pushback_byte", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteReader.seek" = global { ptr, ptr, ptr } { ptr @std.io.ByteReader.seek, ptr @"$sel.seek", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteReader.write_to" = global { ptr, ptr, ptr } { ptr @std.io.ByteReader.write_to, ptr @"$sel.write_to", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteReader.available" = global { ptr, ptr, ptr } { ptr @std.io.ByteReader.available, ptr @"$sel.available", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteWriter.destroy" = global { ptr, ptr, ptr } { ptr @std.io.ByteWriter.destroy, ptr @"$sel.destroy", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$sel.destroy" = linkonce_odr constant [8 x i8] c"destroy\00", comdat, align 1
@"$ct.dyn.std.io.ByteWriter.write" = global { ptr, ptr, ptr } { ptr @std.io.ByteWriter.write, ptr @"$sel.write", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteWriter.write_byte" = global { ptr, ptr, ptr } { ptr @std.io.ByteWriter.write_byte, ptr @"$sel.write_byte", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.ByteWriter.read_from" = global { ptr, ptr, ptr } { ptr @std.io.ByteWriter.read_from, ptr @"$sel.read_from", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$sel.read_from" = linkonce_odr constant [10 x i8] c"read_from\00", comdat, align 1
@"$ct.dyn.std.io.LimitReader.close" = global { ptr, ptr, ptr } { ptr @std.io.LimitReader.close, ptr @"$sel.close", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.LimitReader.read" = global { ptr, ptr, ptr } { ptr @std.io.LimitReader.read, ptr @"$sel.read", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.LimitReader.read_byte" = global { ptr, ptr, ptr } { ptr @std.io.LimitReader.read_byte, ptr @"$sel.read_byte", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.LimitReader.available" = global { ptr, ptr, ptr } { ptr @std.io.LimitReader.available, ptr @"$sel.available", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.Scanner.flush" = global { ptr, ptr, ptr } { ptr @std.io.Scanner.flush, ptr @"$sel.flush", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.Scanner.close" = global { ptr, ptr, ptr } { ptr @std.io.Scanner.close, ptr @"$sel.close", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.Scanner.read" = global { ptr, ptr, ptr } { ptr @std.io.Scanner.read, ptr @"$sel.read", ptr inttoptr (i64 -1 to ptr) }, align 8
@"$ct.dyn.std.io.Scanner.read_byte" = global { ptr, ptr, ptr } { ptr @std.io.Scanner.read_byte, ptr @"$sel.read_byte", ptr inttoptr (i64 -1 to ptr) }, align 8
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @.c3_dynamic_register, ptr null }]

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.BitReader.init(ptr %0, ptr align 8 %1) #0 comdat !dbg !75 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.assign_list = alloca %BitReader, align 8
  %2 = icmp eq ptr %0, null, !dbg !91
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !91
  br i1 %3, label %panic, label %checkok, !dbg !91

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !92, metadata !DIExpression()), !dbg !93
  call void @llvm.dbg.declare(metadata ptr %1, metadata !94, metadata !DIExpression()), !dbg !95
  %4 = load ptr, ptr %self, align 8, !dbg !96
  %checknull = icmp eq ptr %4, null, !dbg !96
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !96
  br i1 %5, label %panic3, label %checkok7, !dbg !96

checkok7:                                         ; preds = %checkok
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %.assign_list, ptr align 8 %1, i32 16, i1 false), !dbg !97
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %4, ptr align 8 %.assign_list, i32 24, i1 false), !dbg !97
  ret void, !dbg !97

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 10), !dbg !93
  unreachable, !dbg !93

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg6, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 12), !dbg !96
  unreachable, !dbg !96
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.BitReader.clear(ptr %0) #0 comdat !dbg !98 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !101
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !101
  br i1 %2, label %panic, label %checkok, !dbg !101

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !102, metadata !DIExpression()), !dbg !103
  %3 = load ptr, ptr %self, align 8, !dbg !104
  %checknull = icmp eq ptr %3, null, !dbg !104
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !104
  br i1 %4, label %panic3, label %checkok7, !dbg !104

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 20, !dbg !104
  store i32 0, ptr %ptradd, align 4, !dbg !105
  ret void, !dbg !105

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.37, i64 5 }, ptr %indirectarg2, align 8
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 15), !dbg !103
  unreachable, !dbg !103

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.37, i64 5 }, ptr %indirectarg6, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 17), !dbg !104
  unreachable, !dbg !104
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.BitReader.read_bits(ptr %0, ptr %1, i32 %2) #0 comdat !dbg !106 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %nbits = alloca i32, align 4
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %bits = alloca i32, align 4
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %c = alloca i8, align 1
  %error_var = alloca i64, align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %retparam = alloca i8, align 1
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %mask = alloca i32, align 4
  %taddr = alloca i32, align 4
  %indirectarg66 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg69 = alloca %"any[]", align 8
  %taddr72 = alloca i32, align 4
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %varargslots76 = alloca [1 x %any], align 16
  %indirectarg78 = alloca %"any[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %taddr91 = alloca i32, align 4
  %indirectarg92 = alloca %"char[]", align 8
  %indirectarg93 = alloca %"char[]", align 8
  %indirectarg94 = alloca %"char[]", align 8
  %varargslots95 = alloca [1 x %any], align 16
  %indirectarg97 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !112
  %3 = icmp eq ptr %1, null, !dbg !112
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !112
  br i1 %4, label %panic, label %checkok, !dbg !112

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !113, metadata !DIExpression()), !dbg !114
  store i32 %2, ptr %nbits, align 4
  call void @llvm.dbg.declare(metadata ptr %nbits, metadata !115, metadata !DIExpression()), !dbg !116
  %5 = load i32, ptr %nbits, align 4, !dbg !117
  %ge = icmp uge i32 8, %5, !dbg !117
  br i1 %ge, label %assert_ok, label %assert_fail, !dbg !117

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.39, i64 31 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 21), !dbg !117
  unreachable, !dbg !117

assert_ok:                                        ; preds = %checkok
  %7 = load ptr, ptr %self, align 8, !dbg !119
  %checknull = icmp eq ptr %7, null, !dbg !119
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !119
  br i1 %8, label %panic6, label %checkok10, !dbg !119

checkok10:                                        ; preds = %assert_ok
  %ptradd = getelementptr inbounds i8, ptr %7, i64 20, !dbg !119
  %9 = load i32, ptr %ptradd, align 4, !dbg !119
  %10 = load i32, ptr %nbits, align 4, !dbg !120
  %add = add i32 %9, %10, !dbg !119
  %zext = zext i32 %add to i64, !dbg !119
  %ge11 = icmp uge i64 32, %zext, !dbg !119
  br i1 %ge11, label %assert_ok16, label %assert_fail12, !dbg !119

assert_fail12:                                    ; preds = %checkok10
  store %"char[]" { ptr @.panic_msg.40, i64 56 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg15, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 22), !dbg !119
  unreachable, !dbg !119

assert_ok16:                                      ; preds = %checkok10
  call void @llvm.dbg.declare(metadata ptr %bits, metadata !121, metadata !DIExpression()), !dbg !122
  %12 = load ptr, ptr %self, align 8, !dbg !123
  %checknull17 = icmp eq ptr %12, null, !dbg !123
  %13 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !123
  br i1 %13, label %panic18, label %checkok22, !dbg !123

checkok22:                                        ; preds = %assert_ok16
  %ptradd23 = getelementptr inbounds i8, ptr %12, i64 16, !dbg !123
  %14 = load i32, ptr %ptradd23, align 8, !dbg !123
  store i32 %14, ptr %bits, align 4, !dbg !123
  %15 = load ptr, ptr %self, align 8, !dbg !124
  %checknull24 = icmp eq ptr %15, null, !dbg !124
  %16 = call i1 @llvm.expect.i1(i1 %checknull24, i1 false), !dbg !124
  br i1 %16, label %panic25, label %checkok29, !dbg !124

checkok29:                                        ; preds = %checkok22
  %ptradd30 = getelementptr inbounds i8, ptr %15, i64 20, !dbg !124
  %17 = load i32, ptr %ptradd30, align 4, !dbg !124
  %18 = load i32, ptr %nbits, align 4, !dbg !125
  %lt = icmp ult i32 %17, %18, !dbg !124
  br i1 %lt, label %if.then, label %if.exit, !dbg !124

if.then:                                          ; preds = %checkok29
  call void @llvm.dbg.declare(metadata ptr %c, metadata !126, metadata !DIExpression()), !dbg !128
  %19 = load ptr, ptr %self, align 8, !dbg !129
  %checknull31 = icmp eq ptr %19, null, !dbg !129
  %20 = call i1 @llvm.expect.i1(i1 %checknull31, i1 false), !dbg !129
  br i1 %20, label %panic32, label %checkok36, !dbg !129

checkok36:                                        ; preds = %if.then
  %ptradd37 = getelementptr inbounds i8, ptr %19, i64 8, !dbg !129
  %21 = load i64, ptr %ptradd37, align 8, !dbg !129
  %22 = inttoptr i64 %21 to ptr, !dbg !129
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !112
  %23 = icmp eq ptr %22, %type, !dbg !112
  br i1 %23, label %cache_hit, label %cache_miss, !dbg !112

cache_miss:                                       ; preds = %checkok36
  %ptradd38 = getelementptr inbounds i8, ptr %22, i64 16, !dbg !112
  %24 = load ptr, ptr %ptradd38, align 8, !dbg !112
  %25 = call ptr @.dyn_search(ptr %24, ptr @"$sel.read_byte"), !dbg !112
  store ptr %25, ptr %.inlinecache, align 8, !dbg !112
  store ptr %22, ptr %.cachedtype, align 8, !dbg !112
  br label %26, !dbg !112

cache_hit:                                        ; preds = %checkok36
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !112
  br label %26, !dbg !112

26:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %25, %cache_miss ], !dbg !112
  %27 = icmp eq ptr %fn_phi, null, !dbg !112
  br i1 %27, label %missing_function, label %match, !dbg !112

missing_function:                                 ; preds = %26
  store %"char[]" { ptr @.panic_msg.41, i64 46 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg41, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 30), !dbg !129
  unreachable, !dbg !129

match:                                            ; preds = %26
  %29 = load ptr, ptr %19, align 8
  %30 = call i64 %fn_phi(ptr %retparam, ptr %29), !dbg !129
  %not_err = icmp eq i64 %30, 0, !dbg !129
  %31 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !129
  br i1 %31, label %after_check, label %assign_optional, !dbg !129

assign_optional:                                  ; preds = %match
  store i64 %30, ptr %error_var, align 8, !dbg !129
  br label %guard_block, !dbg !129

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !129

guard_block:                                      ; preds = %assign_optional
  %32 = load i64, ptr %error_var, align 8, !dbg !129
  ret i64 %32, !dbg !129

noerr_block:                                      ; preds = %after_check
  %33 = load i8, ptr %retparam, align 1, !dbg !129
  store i8 %33, ptr %c, align 1, !dbg !129
  %34 = load i32, ptr %bits, align 4, !dbg !130
  %shl = shl i32 %34, 8, !dbg !130
  %35 = freeze i32 %shl, !dbg !130
  store i32 %35, ptr %bits, align 4, !dbg !130
  %36 = load i32, ptr %bits, align 4, !dbg !131
  %37 = load i8, ptr %c, align 1, !dbg !132
  %zext42 = zext i8 %37 to i32, !dbg !132
  %or = or i32 %36, %zext42, !dbg !131
  store i32 %or, ptr %bits, align 4, !dbg !131
  %38 = load ptr, ptr %self, align 8, !dbg !133
  %checknull43 = icmp eq ptr %38, null, !dbg !133
  %39 = call i1 @llvm.expect.i1(i1 %checknull43, i1 false), !dbg !133
  br i1 %39, label %panic44, label %checkok48, !dbg !133

checkok48:                                        ; preds = %noerr_block
  %ptradd49 = getelementptr inbounds i8, ptr %38, i64 16, !dbg !133
  %40 = load i32, ptr %bits, align 4, !dbg !134
  store i32 %40, ptr %ptradd49, align 8, !dbg !134
  %41 = load ptr, ptr %self, align 8, !dbg !135
  %checknull50 = icmp eq ptr %41, null, !dbg !135
  %42 = call i1 @llvm.expect.i1(i1 %checknull50, i1 false), !dbg !135
  br i1 %42, label %panic51, label %checkok55, !dbg !135

checkok55:                                        ; preds = %checkok48
  %ptradd56 = getelementptr inbounds i8, ptr %41, i64 20, !dbg !135
  %43 = load i32, ptr %ptradd56, align 4, !dbg !135
  %add57 = add i32 %43, 8, !dbg !135
  store i32 %add57, ptr %ptradd56, align 4, !dbg !135
  br label %if.exit, !dbg !135

if.exit:                                          ; preds = %checkok55, %checkok29
  %44 = load ptr, ptr %self, align 8, !dbg !136
  %checknull58 = icmp eq ptr %44, null, !dbg !136
  %45 = call i1 @llvm.expect.i1(i1 %checknull58, i1 false), !dbg !136
  br i1 %45, label %panic59, label %checkok63, !dbg !136

checkok63:                                        ; preds = %if.exit
  %ptradd64 = getelementptr inbounds i8, ptr %44, i64 20, !dbg !136
  %46 = load i32, ptr %ptradd64, align 4, !dbg !136
  %47 = load i32, ptr %nbits, align 4, !dbg !137
  %sub = sub i32 %46, %47, !dbg !136
  store i32 %sub, ptr %ptradd64, align 4, !dbg !136
  call void @llvm.dbg.declare(metadata ptr %mask, metadata !138, metadata !DIExpression()), !dbg !139
  %48 = load i32, ptr %nbits, align 4, !dbg !140
  %shift_underflow = icmp slt i32 %48, 0, !dbg !141
  %49 = call i1 @llvm.expect.i1(i1 %shift_underflow, i1 false), !dbg !141
  br i1 %49, label %panic65, label %checkok70, !dbg !141

checkok70:                                        ; preds = %checkok63
  %shift_exceeds = icmp sge i32 %48, 32, !dbg !141
  %50 = call i1 @llvm.expect.i1(i1 %shift_exceeds, i1 false), !dbg !141
  br i1 %50, label %panic71, label %checkok79, !dbg !141

checkok79:                                        ; preds = %checkok70
  %shl80 = shl i32 1, %48, !dbg !141
  %51 = freeze i32 %shl80, !dbg !141
  %sub81 = sub i32 %51, 1, !dbg !141
  store i32 %sub81, ptr %mask, align 4, !dbg !141
  %52 = load i32, ptr %bits, align 4, !dbg !142
  %53 = load ptr, ptr %self, align 8, !dbg !143
  %checknull82 = icmp eq ptr %53, null, !dbg !143
  %54 = call i1 @llvm.expect.i1(i1 %checknull82, i1 false), !dbg !143
  br i1 %54, label %panic83, label %checkok87, !dbg !143

checkok87:                                        ; preds = %checkok79
  %ptradd88 = getelementptr inbounds i8, ptr %53, i64 20, !dbg !143
  %55 = load i32, ptr %ptradd88, align 4, !dbg !143
  %shift_exceeds89 = icmp uge i32 %55, 32, !dbg !142
  %56 = call i1 @llvm.expect.i1(i1 %shift_exceeds89, i1 false), !dbg !142
  br i1 %56, label %panic90, label %checkok98, !dbg !142

checkok98:                                        ; preds = %checkok87
  %lshr = lshr i32 %52, %55, !dbg !142
  %57 = freeze i32 %lshr, !dbg !142
  %58 = load i32, ptr %mask, align 4, !dbg !144
  %and = and i32 %57, %58, !dbg !145
  %trunc = trunc i32 %and to i8, !dbg !145
  store i8 %trunc, ptr %0, align 1, !dbg !145
  ret i64 0, !dbg !145

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg2, align 8
  %59 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %59(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 24), !dbg !114
  unreachable, !dbg !114

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg9, align 8
  %60 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %60(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 22), !dbg !119
  unreachable, !dbg !119

panic18:                                          ; preds = %assert_ok16
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg21, align 8
  %61 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %61(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 26), !dbg !123
  unreachable, !dbg !123

panic25:                                          ; preds = %checkok22
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg28, align 8
  %62 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %62(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 27), !dbg !124
  unreachable, !dbg !124

panic32:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg35, align 8
  %63 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %63(ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, i32 30), !dbg !129
  unreachable, !dbg !129

panic44:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg47, align 8
  %64 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %64(ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, i32 33), !dbg !133
  unreachable, !dbg !133

panic51:                                          ; preds = %checkok48
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg54, align 8
  %65 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %65(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 34), !dbg !135
  unreachable, !dbg !135

panic59:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg62, align 8
  %66 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %66(ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, i32 36), !dbg !136
  unreachable, !dbg !136

panic65:                                          ; preds = %checkok63
  store i32 %48, ptr %taddr, align 4
  %67 = insertvalue %any undef, ptr %taddr, 0
  %68 = insertvalue %any %67, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg66, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg67, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg68, align 8
  store %any %68, ptr %varargslots, align 16
  %69 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %69, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg69, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg66, ptr align 8 %indirectarg67, ptr align 8 %indirectarg68, i32 37, ptr align 8 %indirectarg69), !dbg !141
  unreachable, !dbg !141

panic71:                                          ; preds = %checkok70
  store i32 %48, ptr %taddr72, align 4
  %70 = insertvalue %any undef, ptr %taddr72, 0
  %71 = insertvalue %any %70, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg75, align 8
  store %any %71, ptr %varargslots76, align 16
  %72 = insertvalue %"any[]" undef, ptr %varargslots76, 0
  %"$$temp77" = insertvalue %"any[]" %72, i64 1, 1
  store %"any[]" %"$$temp77", ptr %indirectarg78, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, i32 37, ptr align 8 %indirectarg78), !dbg !141
  unreachable, !dbg !141

panic83:                                          ; preds = %checkok79
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg86, align 8
  %73 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %73(ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, i32 38), !dbg !143
  unreachable, !dbg !143

panic90:                                          ; preds = %checkok87
  store i32 %55, ptr %taddr91, align 4
  %74 = insertvalue %any undef, ptr %taddr91, 0
  %75 = insertvalue %any %74, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg92, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg93, align 8
  store %"char[]" { ptr @.func.38, i64 9 }, ptr %indirectarg94, align 8
  store %any %75, ptr %varargslots95, align 16
  %76 = insertvalue %"any[]" undef, ptr %varargslots95, 0
  %"$$temp96" = insertvalue %"any[]" %76, i64 1, 1
  store %"any[]" %"$$temp96", ptr %indirectarg97, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg92, ptr align 8 %indirectarg93, ptr align 8 %indirectarg94, i32 38, ptr align 8 %indirectarg97), !dbg !142
  unreachable, !dbg !142
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.BitWriter.init(ptr %0, ptr align 8 %1) #0 comdat !dbg !146 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.assign_list = alloca %BitWriter, align 8
  %2 = icmp eq ptr %0, null, !dbg !159
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !159
  br i1 %3, label %panic, label %checkok, !dbg !159

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !160, metadata !DIExpression()), !dbg !161
  call void @llvm.dbg.declare(metadata ptr %1, metadata !162, metadata !DIExpression()), !dbg !163
  %4 = load ptr, ptr %self, align 8, !dbg !164
  %checknull = icmp eq ptr %4, null, !dbg !164
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !164
  br i1 %5, label %panic3, label %checkok7, !dbg !164

checkok7:                                         ; preds = %checkok
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %.assign_list, ptr align 8 %1, i32 16, i1 false), !dbg !165
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %4, ptr align 8 %.assign_list, i32 24, i1 false), !dbg !165
  ret void, !dbg !165

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 48), !dbg !161
  unreachable, !dbg !161

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg6, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 50), !dbg !164
  unreachable, !dbg !164
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.BitWriter.flush(ptr %0) #0 comdat !dbg !166 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %bits = alloca i32, align 4
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %taddr = alloca i32, align 4
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg26 = alloca %"any[]", align 8
  %n = alloca i32, align 4
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %buffer = alloca [4 x i8], align 1
  %x = alloca i32, align 4
  %bytes = alloca ptr, align 8
  %bytes38 = alloca ptr, align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %s = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %expr = alloca i32, align 4
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %stream = alloca %any, align 8
  %taddr69 = alloca i64, align 8
  %taddr70 = alloca i64, align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %varargslots74 = alloca [2 x %any], align 16
  %indirectarg77 = alloca %"any[]", align 8
  %buffer79 = alloca %"char[]", align 8
  %blockret = alloca i64, align 8
  %n84 = alloca i64, align 8
  %error_var85 = alloca i64, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg88 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg91 = alloca %"char[]", align 8
  %indirectarg99 = alloca %"char[]", align 8
  %indirectarg100 = alloca %"char[]", align 8
  %indirectarg101 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !169
  %1 = icmp eq ptr %0, null, !dbg !169
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !169
  br i1 %2, label %panic, label %checkok, !dbg !169

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !170, metadata !DIExpression()), !dbg !171
  %3 = load ptr, ptr %self, align 8, !dbg !172
  %checknull = icmp eq ptr %3, null, !dbg !172
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !172
  br i1 %4, label %panic3, label %checkok7, !dbg !172

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 20, !dbg !172
  %5 = load i32, ptr %ptradd, align 4, !dbg !172
  %eq = icmp eq i32 0, %5, !dbg !172
  br i1 %eq, label %if.then, label %if.exit, !dbg !172

if.then:                                          ; preds = %checkok7
  ret i64 0

if.exit:                                          ; preds = %checkok7
  call void @llvm.dbg.declare(metadata ptr %bits, metadata !173, metadata !DIExpression()), !dbg !174
  %6 = load ptr, ptr %self, align 8, !dbg !175
  %checknull8 = icmp eq ptr %6, null, !dbg !175
  %7 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !175
  br i1 %7, label %panic9, label %checkok13, !dbg !175

checkok13:                                        ; preds = %if.exit
  %ptradd14 = getelementptr inbounds i8, ptr %6, i64 16, !dbg !175
  %8 = load i32, ptr %ptradd14, align 8, !dbg !175
  %9 = load ptr, ptr %self, align 8, !dbg !176
  %checknull15 = icmp eq ptr %9, null, !dbg !176
  %10 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !176
  br i1 %10, label %panic16, label %checkok20, !dbg !176

checkok20:                                        ; preds = %checkok13
  %ptradd21 = getelementptr inbounds i8, ptr %9, i64 20, !dbg !176
  %11 = load i32, ptr %ptradd21, align 4, !dbg !176
  %sub = sub i32 32, %11, !dbg !177
  %shift_exceeds = icmp uge i32 %sub, 32, !dbg !175
  %12 = call i1 @llvm.expect.i1(i1 %shift_exceeds, i1 false), !dbg !175
  br i1 %12, label %panic22, label %checkok27, !dbg !175

checkok27:                                        ; preds = %checkok20
  %shl = shl i32 %8, %sub, !dbg !175
  %13 = freeze i32 %shl, !dbg !175
  store i32 %13, ptr %bits, align 4, !dbg !175
  call void @llvm.dbg.declare(metadata ptr %n, metadata !178, metadata !DIExpression()), !dbg !179
  %14 = load ptr, ptr %self, align 8, !dbg !180
  %checknull28 = icmp eq ptr %14, null, !dbg !180
  %15 = call i1 @llvm.expect.i1(i1 %checknull28, i1 false), !dbg !180
  br i1 %15, label %panic29, label %checkok33, !dbg !180

checkok33:                                        ; preds = %checkok27
  %ptradd34 = getelementptr inbounds i8, ptr %14, i64 20, !dbg !180
  %16 = load i32, ptr %ptradd34, align 4, !dbg !180
  %add = add i32 %16, 7, !dbg !180
  %sdiv = sdiv i32 %add, 8, !dbg !180
  store i32 %sdiv, ptr %n, align 4, !dbg !180
  call void @llvm.dbg.declare(metadata ptr %buffer, metadata !181, metadata !DIExpression()), !dbg !185
  store i8 0, ptr %buffer, align 1, !dbg !185
  %ptradd35 = getelementptr inbounds i8, ptr %buffer, i64 1, !dbg !185
  store i8 0, ptr %ptradd35, align 1, !dbg !185
  %ptradd36 = getelementptr inbounds i8, ptr %buffer, i64 2, !dbg !185
  store i8 0, ptr %ptradd36, align 1, !dbg !185
  %ptradd37 = getelementptr inbounds i8, ptr %buffer, i64 3, !dbg !185
  store i8 0, ptr %ptradd37, align 1, !dbg !185
  %17 = load i32, ptr %bits, align 4
  store i32 %17, ptr %x, align 4
  store ptr %buffer, ptr %bytes, align 8
  %18 = load ptr, ptr %bytes, align 8
  store ptr %18, ptr %bytes38, align 8
  br i1 true, label %assert_ok, label %assert_fail, !dbg !186

assert_fail:                                      ; preds = %checkok33
  store %"char[]" { ptr @.panic_msg.44, i64 117 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.45, i64 11 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg41, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 107), !dbg !189
  unreachable, !dbg !189

assert_ok:                                        ; preds = %checkok33
  call void @llvm.dbg.declare(metadata ptr %s, metadata !193, metadata !DIExpression()), !dbg !200
  call void @llvm.memset.p0.i64(ptr align 8 %s, i8 0, i64 16, i1 false), !dbg !200
  %20 = load ptr, ptr %bytes, align 8, !dbg !201
  %checknull42 = icmp eq ptr %20, null, !dbg !201
  %21 = call i1 @llvm.expect.i1(i1 %checknull42, i1 false), !dbg !201
  br i1 %21, label %panic43, label %checkok47, !dbg !201

checkok47:                                        ; preds = %assert_ok
  %22 = insertvalue %"char[]" undef, ptr %20, 0, !dbg !201
  %23 = insertvalue %"char[]" %22, i64 4, 1, !dbg !201
  store %"char[]" %23, ptr %s, align 8, !dbg !201
  %24 = load ptr, ptr %s, align 8, !dbg !202
  %checknull48 = icmp eq ptr %24, null, !dbg !202
  %25 = call i1 @llvm.expect.i1(i1 %checknull48, i1 false), !dbg !202
  br i1 %25, label %panic49, label %checkok53, !dbg !202

checkok53:                                        ; preds = %checkok47
  %26 = load i32, ptr %x, align 4
  store i32 %26, ptr %expr, align 4
  %checknull54 = icmp eq ptr %expr, null, !dbg !203
  %27 = call i1 @llvm.expect.i1(i1 %checknull54, i1 false), !dbg !203
  br i1 %27, label %panic55, label %checkok59, !dbg !203

checkok59:                                        ; preds = %checkok53
  %28 = load i32, ptr %expr, align 4, !dbg !207
  %29 = call i32 @llvm.bswap.i32(i32 %28), !dbg !207
  store i32 %29, ptr %24, align 4, !dbg !207
  %30 = load ptr, ptr %self, align 8, !dbg !208
  %checknull60 = icmp eq ptr %30, null, !dbg !208
  %31 = call i1 @llvm.expect.i1(i1 %checknull60, i1 false), !dbg !208
  br i1 %31, label %panic61, label %checkok65, !dbg !208

checkok65:                                        ; preds = %checkok59
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %stream, ptr align 8 %30, i32 16, i1 false)
  %32 = load i32, ptr %n, align 4, !dbg !209
  %zext = zext i32 %32 to i64, !dbg !209
  %add66 = add i64 0, %zext, !dbg !209
  %lt = icmp ult i64 4, %add66, !dbg !209
  %sub67 = sub i64 %add66, 1, !dbg !209
  %33 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !209
  br i1 %33, label %panic68, label %checkok78, !dbg !209

checkok78:                                        ; preds = %checkok65
  %size = sub i64 %add66, 0, !dbg !210
  %34 = insertvalue %"char[]" undef, ptr %buffer, 0, !dbg !210
  %35 = insertvalue %"char[]" %34, i64 %size, 1, !dbg !210
  store %"char[]" %35, ptr %buffer79, align 8
  %ptradd80 = getelementptr inbounds i8, ptr %buffer79, i64 8, !dbg !211
  %36 = load i64, ptr %ptradd80, align 8, !dbg !211
  %eq81 = icmp eq i64 0, %36, !dbg !211
  br i1 %eq81, label %if.then82, label %if.exit83, !dbg !211

if.then82:                                        ; preds = %checkok78
  store i64 0, ptr %blockret, align 8, !dbg !214
  br label %expr_block.exit, !dbg !214

if.exit83:                                        ; preds = %checkok78
  call void @llvm.dbg.declare(metadata ptr %n84, metadata !215, metadata !DIExpression()), !dbg !216
  %ptradd86 = getelementptr inbounds i8, ptr %stream, i64 8, !dbg !217
  %37 = load i64, ptr %ptradd86, align 8, !dbg !217
  %38 = inttoptr i64 %37 to ptr, !dbg !217
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !169
  %39 = icmp eq ptr %38, %type, !dbg !169
  br i1 %39, label %cache_hit, label %cache_miss, !dbg !169

cache_miss:                                       ; preds = %if.exit83
  %ptradd87 = getelementptr inbounds i8, ptr %38, i64 16, !dbg !169
  %40 = load ptr, ptr %ptradd87, align 8, !dbg !169
  %41 = call ptr @.dyn_search(ptr %40, ptr @"$sel.write"), !dbg !169
  store ptr %41, ptr %.inlinecache, align 8, !dbg !169
  store ptr %38, ptr %.cachedtype, align 8, !dbg !169
  br label %42, !dbg !169

cache_hit:                                        ; preds = %if.exit83
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !169
  br label %42, !dbg !169

42:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %41, %cache_miss ], !dbg !169
  %43 = icmp eq ptr %fn_phi, null, !dbg !169
  br i1 %43, label %missing_function, label %match, !dbg !169

missing_function:                                 ; preds = %42
  store %"char[]" { ptr @.panic_msg.51, i64 42 }, ptr %indirectarg88, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg90, align 8
  %44 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %44(ptr align 8 %indirectarg88, ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, i32 102), !dbg !218
  unreachable, !dbg !218

match:                                            ; preds = %42
  %45 = load ptr, ptr %stream, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg91, ptr align 8 %buffer79, i32 16, i1 false)
  %46 = call i64 %fn_phi(ptr %retparam, ptr %45, ptr align 8 %indirectarg91), !dbg !218
  %not_err = icmp eq i64 %46, 0, !dbg !218
  %47 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !218
  br i1 %47, label %after_check, label %assign_optional, !dbg !218

assign_optional:                                  ; preds = %match
  store i64 %46, ptr %error_var85, align 8, !dbg !218
  br label %guard_block, !dbg !218

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !218

guard_block:                                      ; preds = %assign_optional
  %48 = load i64, ptr %error_var85, align 8, !dbg !218
  store i64 %48, ptr %error_var, align 8, !dbg !218
  br label %guard_block95, !dbg !218

noerr_block:                                      ; preds = %after_check
  %49 = load i64, ptr %retparam, align 8, !dbg !218
  store i64 %49, ptr %n84, align 8, !dbg !218
  %50 = load i64, ptr %n84, align 8, !dbg !219
  %ptradd92 = getelementptr inbounds i8, ptr %buffer79, i64 8, !dbg !220
  %51 = load i64, ptr %ptradd92, align 8, !dbg !220
  %neq = icmp ne i64 %50, %51, !dbg !219
  br i1 %neq, label %if.then93, label %if.exit94, !dbg !219

if.then93:                                        ; preds = %noerr_block
  store i64 ptrtoint (ptr @"std.io.IoError$INCOMPLETE_WRITE" to i64), ptr %error_var, align 8, !dbg !221
  br label %guard_block95, !dbg !221

if.exit94:                                        ; preds = %noerr_block
  %52 = load i64, ptr %n84, align 8, !dbg !222
  store i64 %52, ptr %blockret, align 8, !dbg !222
  br label %expr_block.exit, !dbg !222

expr_block.exit:                                  ; preds = %if.exit94, %if.then82
  br label %noerr_block96, !dbg !222

guard_block95:                                    ; preds = %if.then93, %guard_block
  %53 = load i64, ptr %error_var, align 8, !dbg !222
  ret i64 %53, !dbg !222

noerr_block96:                                    ; preds = %expr_block.exit
  %54 = load ptr, ptr %self, align 8, !dbg !223
  %checknull97 = icmp eq ptr %54, null, !dbg !223
  %55 = call i1 @llvm.expect.i1(i1 %checknull97, i1 false), !dbg !223
  br i1 %55, label %panic98, label %checkok102, !dbg !223

checkok102:                                       ; preds = %noerr_block96
  %ptradd103 = getelementptr inbounds i8, ptr %54, i64 20, !dbg !223
  store i32 0, ptr %ptradd103, align 4, !dbg !224
  ret i64 0, !dbg !224

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg2, align 8
  %56 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %56(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 53), !dbg !171
  unreachable, !dbg !171

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg6, align 8
  %57 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %57(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 55), !dbg !172
  unreachable, !dbg !172

panic9:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg12, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 56), !dbg !175
  unreachable, !dbg !175

panic16:                                          ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg19, align 8
  %59 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %59(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 56), !dbg !176
  unreachable, !dbg !176

panic22:                                          ; preds = %checkok20
  store i32 %sub, ptr %taddr, align 4
  %60 = insertvalue %any undef, ptr %taddr, 0
  %61 = insertvalue %any %60, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg25, align 8
  store %any %61, ptr %varargslots, align 16
  %62 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %62, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg26, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 56, ptr align 8 %indirectarg26), !dbg !175
  unreachable, !dbg !175

panic29:                                          ; preds = %checkok27
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg32, align 8
  %63 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %63(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 57), !dbg !180
  unreachable, !dbg !180

panic43:                                          ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.46, i64 46 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.file.45, i64 11 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg46, align 8
  %64 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %64(ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, i32 115), !dbg !201
  unreachable, !dbg !201

panic49:                                          ; preds = %checkok47
  store %"char[]" { ptr @.panic_msg.47, i64 58 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.file.45, i64 11 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg52, align 8
  %65 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %65(ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, i32 119), !dbg !225
  unreachable, !dbg !225

panic55:                                          ; preds = %checkok53
  store %"char[]" { ptr @.panic_msg.48, i64 53 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg58, align 8
  %66 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %66(ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, i32 212), !dbg !207
  unreachable, !dbg !207

panic61:                                          ; preds = %checkok59
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg64, align 8
  %67 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %67(ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, i32 60), !dbg !208
  unreachable, !dbg !208

panic68:                                          ; preds = %checkok65
  store i64 %sub67, ptr %taddr69, align 8
  %68 = insertvalue %any undef, ptr %taddr69, 0
  %69 = insertvalue %any %68, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 4, ptr %taddr70, align 8
  %70 = insertvalue %any undef, ptr %taddr70, 0
  %71 = insertvalue %any %70, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg72, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg73, align 8
  store %any %69, ptr %varargslots74, align 16
  %ptradd75 = getelementptr inbounds i8, ptr %varargslots74, i64 16
  store %any %71, ptr %ptradd75, align 16
  %72 = insertvalue %"any[]" undef, ptr %varargslots74, 0
  %"$$temp76" = insertvalue %"any[]" %72, i64 2, 1
  store %"any[]" %"$$temp76", ptr %indirectarg77, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, ptr align 8 %indirectarg73, i32 60, ptr align 8 %indirectarg77), !dbg !210
  unreachable, !dbg !210

panic98:                                          ; preds = %noerr_block96
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg99, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg100, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg101, align 8
  %73 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %73(ptr align 8 %indirectarg99, ptr align 8 %indirectarg100, ptr align 8 %indirectarg101, i32 61), !dbg !223
  unreachable, !dbg !223
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.BitWriter.write_bits(ptr %0, i32 %1, i32 %2) #0 comdat !dbg !226 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %bits = alloca i32, align 4
  %nbits = alloca i32, align 4
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %n = alloca i32, align 4
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %to_write = alloca i32, align 4
  %left = alloca i32, align 4
  %lbits = alloca i64, align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg40 = alloca %"any[]", align 8
  %taddr45 = alloca i32, align 4
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %varargslots49 = alloca [1 x %any], align 16
  %indirectarg51 = alloca %"any[]", align 8
  %taddr59 = alloca i64, align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %varargslots63 = alloca [1 x %any], align 16
  %indirectarg65 = alloca %"any[]", align 8
  %buffer = alloca [8 x i8], align 1
  %x = alloca i64, align 8
  %bytes = alloca ptr, align 8
  %bytes75 = alloca ptr, align 8
  %indirectarg77 = alloca %"char[]", align 8
  %indirectarg78 = alloca %"char[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %s = alloca %"char[]", align 8
  %indirectarg83 = alloca %"char[]", align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg91 = alloca %"char[]", align 8
  %expr = alloca i64, align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg101 = alloca %"char[]", align 8
  %indirectarg102 = alloca %"char[]", align 8
  %indirectarg103 = alloca %"char[]", align 8
  %stream = alloca %any, align 8
  %taddr110 = alloca i64, align 8
  %taddr111 = alloca i64, align 8
  %indirectarg112 = alloca %"char[]", align 8
  %indirectarg113 = alloca %"char[]", align 8
  %indirectarg114 = alloca %"char[]", align 8
  %varargslots115 = alloca [2 x %any], align 16
  %indirectarg118 = alloca %"any[]", align 8
  %buffer120 = alloca %"char[]", align 8
  %blockret = alloca i64, align 8
  %n125 = alloca i64, align 8
  %error_var126 = alloca i64, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg129 = alloca %"char[]", align 8
  %indirectarg130 = alloca %"char[]", align 8
  %indirectarg131 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg132 = alloca %"char[]", align 8
  %indirectarg141 = alloca %"char[]", align 8
  %indirectarg142 = alloca %"char[]", align 8
  %indirectarg143 = alloca %"char[]", align 8
  %taddr148 = alloca i32, align 4
  %indirectarg149 = alloca %"char[]", align 8
  %indirectarg150 = alloca %"char[]", align 8
  %indirectarg151 = alloca %"char[]", align 8
  %varargslots152 = alloca [1 x %any], align 16
  %indirectarg154 = alloca %"any[]", align 8
  %indirectarg159 = alloca %"char[]", align 8
  %indirectarg160 = alloca %"char[]", align 8
  %indirectarg161 = alloca %"char[]", align 8
  %taddr165 = alloca i32, align 4
  %indirectarg166 = alloca %"char[]", align 8
  %indirectarg167 = alloca %"char[]", align 8
  %indirectarg168 = alloca %"char[]", align 8
  %varargslots169 = alloca [1 x %any], align 16
  %indirectarg171 = alloca %"any[]", align 8
  %taddr175 = alloca i32, align 4
  %indirectarg176 = alloca %"char[]", align 8
  %indirectarg177 = alloca %"char[]", align 8
  %indirectarg178 = alloca %"char[]", align 8
  %varargslots179 = alloca [1 x %any], align 16
  %indirectarg181 = alloca %"any[]", align 8
  %indirectarg188 = alloca %"char[]", align 8
  %indirectarg189 = alloca %"char[]", align 8
  %indirectarg190 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !229
  %3 = icmp eq ptr %0, null, !dbg !229
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !229
  br i1 %4, label %panic, label %checkok, !dbg !229

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !230, metadata !DIExpression()), !dbg !231
  store i32 %1, ptr %bits, align 4
  call void @llvm.dbg.declare(metadata ptr %bits, metadata !232, metadata !DIExpression()), !dbg !233
  store i32 %2, ptr %nbits, align 4
  call void @llvm.dbg.declare(metadata ptr %nbits, metadata !234, metadata !DIExpression()), !dbg !235
  %5 = load i32, ptr %nbits, align 4, !dbg !236
  %ge = icmp uge i32 8, %5, !dbg !236
  br i1 %ge, label %assert_ok, label %assert_fail, !dbg !236

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.39, i64 31 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 65), !dbg !236
  unreachable, !dbg !236

assert_ok:                                        ; preds = %checkok
  %7 = load i32, ptr %nbits, align 4, !dbg !238
  %eq = icmp eq i32 0, %7, !dbg !238
  br i1 %eq, label %if.then, label %if.exit, !dbg !238

if.then:                                          ; preds = %assert_ok
  ret i64 0

if.exit:                                          ; preds = %assert_ok
  call void @llvm.dbg.declare(metadata ptr %n, metadata !239, metadata !DIExpression()), !dbg !240
  %8 = load ptr, ptr %self, align 8, !dbg !241
  %checknull = icmp eq ptr %8, null, !dbg !241
  %9 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !241
  br i1 %9, label %panic6, label %checkok10, !dbg !241

checkok10:                                        ; preds = %if.exit
  %ptradd = getelementptr inbounds i8, ptr %8, i64 20, !dbg !241
  %10 = load i32, ptr %ptradd, align 4, !dbg !241
  %11 = load i32, ptr %nbits, align 4, !dbg !242
  %add = add i32 %10, %11, !dbg !241
  store i32 %add, ptr %n, align 4, !dbg !241
  call void @llvm.dbg.declare(metadata ptr %to_write, metadata !243, metadata !DIExpression()), !dbg !244
  %12 = load i32, ptr %n, align 4, !dbg !245
  %sdiv = sdiv i32 %12, 8, !dbg !245
  store i32 %sdiv, ptr %to_write, align 4, !dbg !245
  call void @llvm.dbg.declare(metadata ptr %left, metadata !246, metadata !DIExpression()), !dbg !247
  %13 = load i32, ptr %n, align 4, !dbg !248
  %smod = srem i32 %13, 8, !dbg !248
  store i32 %smod, ptr %left, align 4, !dbg !248
  %14 = load i32, ptr %to_write, align 4, !dbg !249
  %lt = icmp ult i32 0, %14, !dbg !249
  br i1 %lt, label %if.then11, label %if.exit138, !dbg !249

if.then11:                                        ; preds = %checkok10
  call void @llvm.dbg.declare(metadata ptr %lbits, metadata !250, metadata !DIExpression()), !dbg !252
  store i64 0, ptr %lbits, align 8, !dbg !252
  %15 = load ptr, ptr %self, align 8, !dbg !253
  %checknull12 = icmp eq ptr %15, null, !dbg !253
  %16 = call i1 @llvm.expect.i1(i1 %checknull12, i1 false), !dbg !253
  br i1 %16, label %panic13, label %checkok17, !dbg !253

checkok17:                                        ; preds = %if.then11
  %ptradd18 = getelementptr inbounds i8, ptr %15, i64 20, !dbg !253
  %17 = load i32, ptr %ptradd18, align 4, !dbg !253
  %lt19 = icmp ult i32 0, %17, !dbg !253
  br i1 %lt19, label %if.then20, label %if.exit42, !dbg !253

if.then20:                                        ; preds = %checkok17
  %18 = load ptr, ptr %self, align 8, !dbg !254
  %checknull21 = icmp eq ptr %18, null, !dbg !254
  %19 = call i1 @llvm.expect.i1(i1 %checknull21, i1 false), !dbg !254
  br i1 %19, label %panic22, label %checkok26, !dbg !254

checkok26:                                        ; preds = %if.then20
  %ptradd27 = getelementptr inbounds i8, ptr %18, i64 16, !dbg !254
  %20 = load i32, ptr %ptradd27, align 8, !dbg !254
  %zext = zext i32 %20 to i64, !dbg !254
  %21 = load ptr, ptr %self, align 8, !dbg !255
  %checknull28 = icmp eq ptr %21, null, !dbg !255
  %22 = call i1 @llvm.expect.i1(i1 %checknull28, i1 false), !dbg !255
  br i1 %22, label %panic29, label %checkok33, !dbg !255

checkok33:                                        ; preds = %checkok26
  %ptradd34 = getelementptr inbounds i8, ptr %21, i64 20, !dbg !255
  %23 = load i32, ptr %ptradd34, align 4, !dbg !255
  %sub = sub i32 64, %23, !dbg !256
  %zext35 = zext i32 %sub to i64, !dbg !257
  %shift_exceeds = icmp uge i64 %zext35, 64, !dbg !257
  %24 = call i1 @llvm.expect.i1(i1 %shift_exceeds, i1 false), !dbg !257
  br i1 %24, label %panic36, label %checkok41, !dbg !257

checkok41:                                        ; preds = %checkok33
  %shl = shl i64 %zext, %zext35, !dbg !257
  %25 = freeze i64 %shl, !dbg !257
  store i64 %25, ptr %lbits, align 8, !dbg !257
  br label %if.exit42, !dbg !257

if.exit42:                                        ; preds = %checkok41, %checkok17
  %26 = load i64, ptr %lbits, align 8, !dbg !258
  %27 = load i32, ptr %bits, align 4, !dbg !259
  %28 = load i32, ptr %left, align 4, !dbg !260
  %shift_exceeds43 = icmp uge i32 %28, 32, !dbg !261
  %29 = call i1 @llvm.expect.i1(i1 %shift_exceeds43, i1 false), !dbg !261
  br i1 %29, label %panic44, label %checkok52, !dbg !261

checkok52:                                        ; preds = %if.exit42
  %lshr = lshr i32 %27, %28, !dbg !261
  %30 = freeze i32 %lshr, !dbg !261
  %zext53 = zext i32 %30 to i64, !dbg !261
  %31 = load i32, ptr %n, align 4, !dbg !262
  %32 = load i32, ptr %left, align 4, !dbg !263
  %sub54 = sub i32 %31, %32, !dbg !262
  %sub55 = sub i32 64, %sub54, !dbg !264
  %zext56 = zext i32 %sub55 to i64, !dbg !261
  %shift_exceeds57 = icmp uge i64 %zext56, 64, !dbg !261
  %33 = call i1 @llvm.expect.i1(i1 %shift_exceeds57, i1 false), !dbg !261
  br i1 %33, label %panic58, label %checkok66, !dbg !261

checkok66:                                        ; preds = %checkok52
  %shl67 = shl i64 %zext53, %zext56, !dbg !261
  %34 = freeze i64 %shl67, !dbg !261
  %or = or i64 %26, %34, !dbg !258
  store i64 %or, ptr %lbits, align 8, !dbg !258
  call void @llvm.dbg.declare(metadata ptr %buffer, metadata !265, metadata !DIExpression()), !dbg !269
  store i8 0, ptr %buffer, align 1, !dbg !269
  %ptradd68 = getelementptr inbounds i8, ptr %buffer, i64 1, !dbg !269
  store i8 0, ptr %ptradd68, align 1, !dbg !269
  %ptradd69 = getelementptr inbounds i8, ptr %buffer, i64 2, !dbg !269
  store i8 0, ptr %ptradd69, align 1, !dbg !269
  %ptradd70 = getelementptr inbounds i8, ptr %buffer, i64 3, !dbg !269
  store i8 0, ptr %ptradd70, align 1, !dbg !269
  %ptradd71 = getelementptr inbounds i8, ptr %buffer, i64 4, !dbg !269
  store i8 0, ptr %ptradd71, align 1, !dbg !269
  %ptradd72 = getelementptr inbounds i8, ptr %buffer, i64 5, !dbg !269
  store i8 0, ptr %ptradd72, align 1, !dbg !269
  %ptradd73 = getelementptr inbounds i8, ptr %buffer, i64 6, !dbg !269
  store i8 0, ptr %ptradd73, align 1, !dbg !269
  %ptradd74 = getelementptr inbounds i8, ptr %buffer, i64 7, !dbg !269
  store i8 0, ptr %ptradd74, align 1, !dbg !269
  %35 = load i64, ptr %lbits, align 8
  store i64 %35, ptr %x, align 8
  store ptr %buffer, ptr %bytes, align 8
  %36 = load ptr, ptr %bytes, align 8
  store ptr %36, ptr %bytes75, align 8
  br i1 true, label %assert_ok80, label %assert_fail76, !dbg !270

assert_fail76:                                    ; preds = %checkok66
  store %"char[]" { ptr @.panic_msg.44, i64 117 }, ptr %indirectarg77, align 8
  store %"char[]" { ptr @.file.45, i64 11 }, ptr %indirectarg78, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg79, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg77, ptr align 8 %indirectarg78, ptr align 8 %indirectarg79, i32 107), !dbg !272
  unreachable, !dbg !272

assert_ok80:                                      ; preds = %checkok66
  call void @llvm.dbg.declare(metadata ptr %s, metadata !276, metadata !DIExpression()), !dbg !277
  call void @llvm.memset.p0.i64(ptr align 8 %s, i8 0, i64 16, i1 false), !dbg !277
  %38 = load ptr, ptr %bytes, align 8, !dbg !278
  %checknull81 = icmp eq ptr %38, null, !dbg !278
  %39 = call i1 @llvm.expect.i1(i1 %checknull81, i1 false), !dbg !278
  br i1 %39, label %panic82, label %checkok86, !dbg !278

checkok86:                                        ; preds = %assert_ok80
  %40 = insertvalue %"char[]" undef, ptr %38, 0, !dbg !278
  %41 = insertvalue %"char[]" %40, i64 8, 1, !dbg !278
  store %"char[]" %41, ptr %s, align 8, !dbg !278
  %42 = load ptr, ptr %s, align 8, !dbg !279
  %checknull87 = icmp eq ptr %42, null, !dbg !279
  %43 = call i1 @llvm.expect.i1(i1 %checknull87, i1 false), !dbg !279
  br i1 %43, label %panic88, label %checkok92, !dbg !279

checkok92:                                        ; preds = %checkok86
  %44 = load i64, ptr %x, align 8
  store i64 %44, ptr %expr, align 8
  %checknull93 = icmp eq ptr %expr, null, !dbg !280
  %45 = call i1 @llvm.expect.i1(i1 %checknull93, i1 false), !dbg !280
  br i1 %45, label %panic94, label %checkok98, !dbg !280

checkok98:                                        ; preds = %checkok92
  %46 = load i64, ptr %expr, align 8, !dbg !283
  %47 = call i64 @llvm.bswap.i64(i64 %46), !dbg !283
  store i64 %47, ptr %42, align 8, !dbg !283
  %48 = load ptr, ptr %self, align 8, !dbg !284
  %checknull99 = icmp eq ptr %48, null, !dbg !284
  %49 = call i1 @llvm.expect.i1(i1 %checknull99, i1 false), !dbg !284
  br i1 %49, label %panic100, label %checkok104, !dbg !284

checkok104:                                       ; preds = %checkok98
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %stream, ptr align 8 %48, i32 16, i1 false)
  %50 = load i32, ptr %to_write, align 4, !dbg !285
  %zext105 = zext i32 %50 to i64, !dbg !285
  %add106 = add i64 0, %zext105, !dbg !285
  %lt107 = icmp ult i64 8, %add106, !dbg !285
  %sub108 = sub i64 %add106, 1, !dbg !285
  %51 = call i1 @llvm.expect.i1(i1 %lt107, i1 false), !dbg !285
  br i1 %51, label %panic109, label %checkok119, !dbg !285

checkok119:                                       ; preds = %checkok104
  %size = sub i64 %add106, 0, !dbg !286
  %52 = insertvalue %"char[]" undef, ptr %buffer, 0, !dbg !286
  %53 = insertvalue %"char[]" %52, i64 %size, 1, !dbg !286
  store %"char[]" %53, ptr %buffer120, align 8
  %ptradd121 = getelementptr inbounds i8, ptr %buffer120, i64 8, !dbg !287
  %54 = load i64, ptr %ptradd121, align 8, !dbg !287
  %eq122 = icmp eq i64 0, %54, !dbg !287
  br i1 %eq122, label %if.then123, label %if.exit124, !dbg !287

if.then123:                                       ; preds = %checkok119
  store i64 0, ptr %blockret, align 8, !dbg !290
  br label %expr_block.exit, !dbg !290

if.exit124:                                       ; preds = %checkok119
  call void @llvm.dbg.declare(metadata ptr %n125, metadata !291, metadata !DIExpression()), !dbg !292
  %ptradd127 = getelementptr inbounds i8, ptr %stream, i64 8, !dbg !293
  %55 = load i64, ptr %ptradd127, align 8, !dbg !293
  %56 = inttoptr i64 %55 to ptr, !dbg !293
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !229
  %57 = icmp eq ptr %56, %type, !dbg !229
  br i1 %57, label %cache_hit, label %cache_miss, !dbg !229

cache_miss:                                       ; preds = %if.exit124
  %ptradd128 = getelementptr inbounds i8, ptr %56, i64 16, !dbg !229
  %58 = load ptr, ptr %ptradd128, align 8, !dbg !229
  %59 = call ptr @.dyn_search(ptr %58, ptr @"$sel.write"), !dbg !229
  store ptr %59, ptr %.inlinecache, align 8, !dbg !229
  store ptr %56, ptr %.cachedtype, align 8, !dbg !229
  br label %60, !dbg !229

cache_hit:                                        ; preds = %if.exit124
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !229
  br label %60, !dbg !229

60:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %59, %cache_miss ], !dbg !229
  %61 = icmp eq ptr %fn_phi, null, !dbg !229
  br i1 %61, label %missing_function, label %match, !dbg !229

missing_function:                                 ; preds = %60
  store %"char[]" { ptr @.panic_msg.51, i64 42 }, ptr %indirectarg129, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg130, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg131, align 8
  %62 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %62(ptr align 8 %indirectarg129, ptr align 8 %indirectarg130, ptr align 8 %indirectarg131, i32 102), !dbg !294
  unreachable, !dbg !294

match:                                            ; preds = %60
  %63 = load ptr, ptr %stream, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg132, ptr align 8 %buffer120, i32 16, i1 false)
  %64 = call i64 %fn_phi(ptr %retparam, ptr %63, ptr align 8 %indirectarg132), !dbg !294
  %not_err = icmp eq i64 %64, 0, !dbg !294
  %65 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !294
  br i1 %65, label %after_check, label %assign_optional, !dbg !294

assign_optional:                                  ; preds = %match
  store i64 %64, ptr %error_var126, align 8, !dbg !294
  br label %guard_block, !dbg !294

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !294

guard_block:                                      ; preds = %assign_optional
  %66 = load i64, ptr %error_var126, align 8, !dbg !294
  store i64 %66, ptr %error_var, align 8, !dbg !294
  br label %guard_block136, !dbg !294

noerr_block:                                      ; preds = %after_check
  %67 = load i64, ptr %retparam, align 8, !dbg !294
  store i64 %67, ptr %n125, align 8, !dbg !294
  %68 = load i64, ptr %n125, align 8, !dbg !295
  %ptradd133 = getelementptr inbounds i8, ptr %buffer120, i64 8, !dbg !296
  %69 = load i64, ptr %ptradd133, align 8, !dbg !296
  %neq = icmp ne i64 %68, %69, !dbg !295
  br i1 %neq, label %if.then134, label %if.exit135, !dbg !295

if.then134:                                       ; preds = %noerr_block
  store i64 ptrtoint (ptr @"std.io.IoError$INCOMPLETE_WRITE" to i64), ptr %error_var, align 8, !dbg !297
  br label %guard_block136, !dbg !297

if.exit135:                                       ; preds = %noerr_block
  %70 = load i64, ptr %n125, align 8, !dbg !298
  store i64 %70, ptr %blockret, align 8, !dbg !298
  br label %expr_block.exit, !dbg !298

expr_block.exit:                                  ; preds = %if.exit135, %if.then123
  br label %noerr_block137, !dbg !298

guard_block136:                                   ; preds = %if.then134, %guard_block
  %71 = load i64, ptr %error_var, align 8, !dbg !298
  ret i64 %71, !dbg !298

noerr_block137:                                   ; preds = %expr_block.exit
  br label %if.exit138, !dbg !298

if.exit138:                                       ; preds = %noerr_block137, %checkok10
  %72 = load ptr, ptr %self, align 8, !dbg !299
  %checknull139 = icmp eq ptr %72, null, !dbg !299
  %73 = call i1 @llvm.expect.i1(i1 %checknull139, i1 false), !dbg !299
  br i1 %73, label %panic140, label %checkok144, !dbg !299

checkok144:                                       ; preds = %if.exit138
  %ptradd145 = getelementptr inbounds i8, ptr %72, i64 16, !dbg !299
  %74 = load i32, ptr %ptradd145, align 8, !dbg !299
  %75 = load i32, ptr %left, align 4, !dbg !300
  %shift_exceeds146 = icmp uge i32 %75, 32, !dbg !299
  %76 = call i1 @llvm.expect.i1(i1 %shift_exceeds146, i1 false), !dbg !299
  br i1 %76, label %panic147, label %checkok155, !dbg !299

checkok155:                                       ; preds = %checkok144
  %shl156 = shl i32 %74, %75, !dbg !299
  %77 = freeze i32 %shl156, !dbg !299
  store i32 %77, ptr %ptradd145, align 8, !dbg !299
  %78 = load ptr, ptr %self, align 8, !dbg !301
  %checknull157 = icmp eq ptr %78, null, !dbg !301
  %79 = call i1 @llvm.expect.i1(i1 %checknull157, i1 false), !dbg !301
  br i1 %79, label %panic158, label %checkok162, !dbg !301

checkok162:                                       ; preds = %checkok155
  %ptradd163 = getelementptr inbounds i8, ptr %78, i64 16, !dbg !301
  %80 = load i32, ptr %ptradd163, align 8, !dbg !301
  %81 = load i32, ptr %bits, align 4, !dbg !302
  %82 = load i32, ptr %left, align 4, !dbg !303
  %shift_underflow = icmp slt i32 %82, 0, !dbg !304
  %83 = call i1 @llvm.expect.i1(i1 %shift_underflow, i1 false), !dbg !304
  br i1 %83, label %panic164, label %checkok172, !dbg !304

checkok172:                                       ; preds = %checkok162
  %shift_exceeds173 = icmp sge i32 %82, 32, !dbg !304
  %84 = call i1 @llvm.expect.i1(i1 %shift_exceeds173, i1 false), !dbg !304
  br i1 %84, label %panic174, label %checkok182, !dbg !304

checkok182:                                       ; preds = %checkok172
  %shl183 = shl i32 1, %82, !dbg !304
  %85 = freeze i32 %shl183, !dbg !304
  %sub184 = sub i32 %85, 1, !dbg !304
  %and = and i32 %81, %sub184, !dbg !302
  %or185 = or i32 %80, %and, !dbg !301
  store i32 %or185, ptr %ptradd163, align 8, !dbg !301
  %86 = load ptr, ptr %self, align 8, !dbg !305
  %checknull186 = icmp eq ptr %86, null, !dbg !305
  %87 = call i1 @llvm.expect.i1(i1 %checknull186, i1 false), !dbg !305
  br i1 %87, label %panic187, label %checkok191, !dbg !305

checkok191:                                       ; preds = %checkok182
  %ptradd192 = getelementptr inbounds i8, ptr %86, i64 20, !dbg !305
  %88 = load i32, ptr %left, align 4, !dbg !306
  store i32 %88, ptr %ptradd192, align 4, !dbg !306
  ret i64 0, !dbg !306

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg2, align 8
  %89 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %89(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 67), !dbg !231
  unreachable, !dbg !231

panic6:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg9, align 8
  %90 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %90(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 70), !dbg !241
  unreachable, !dbg !241

panic13:                                          ; preds = %if.then11
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg16, align 8
  %91 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %91(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 76), !dbg !253
  unreachable, !dbg !253

panic22:                                          ; preds = %if.then20
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg25, align 8
  %92 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %92(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 76), !dbg !254
  unreachable, !dbg !254

panic29:                                          ; preds = %checkok26
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg32, align 8
  %93 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %93(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 76), !dbg !255
  unreachable, !dbg !255

panic36:                                          ; preds = %checkok33
  store i64 %zext35, ptr %taddr, align 8
  %94 = insertvalue %any undef, ptr %taddr, 0
  %95 = insertvalue %any %94, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg39, align 8
  store %any %95, ptr %varargslots, align 16
  %96 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %96, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg40, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, i32 76, ptr align 8 %indirectarg40), !dbg !257
  unreachable, !dbg !257

panic44:                                          ; preds = %if.exit42
  store i32 %28, ptr %taddr45, align 4
  %97 = insertvalue %any undef, ptr %taddr45, 0
  %98 = insertvalue %any %97, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg48, align 8
  store %any %98, ptr %varargslots49, align 16
  %99 = insertvalue %"any[]" undef, ptr %varargslots49, 0
  %"$$temp50" = insertvalue %"any[]" %99, i64 1, 1
  store %"any[]" %"$$temp50", ptr %indirectarg51, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, i32 77, ptr align 8 %indirectarg51), !dbg !261
  unreachable, !dbg !261

panic58:                                          ; preds = %checkok52
  store i64 %zext56, ptr %taddr59, align 8
  %100 = insertvalue %any undef, ptr %taddr59, 0
  %101 = insertvalue %any %100, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg62, align 8
  store %any %101, ptr %varargslots63, align 16
  %102 = insertvalue %"any[]" undef, ptr %varargslots63, 0
  %"$$temp64" = insertvalue %"any[]" %102, i64 1, 1
  store %"any[]" %"$$temp64", ptr %indirectarg65, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, i32 77, ptr align 8 %indirectarg65), !dbg !261
  unreachable, !dbg !261

panic82:                                          ; preds = %assert_ok80
  store %"char[]" { ptr @.panic_msg.46, i64 46 }, ptr %indirectarg83, align 8
  store %"char[]" { ptr @.file.45, i64 11 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg85, align 8
  %103 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %103(ptr align 8 %indirectarg83, ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, i32 115), !dbg !278
  unreachable, !dbg !278

panic88:                                          ; preds = %checkok86
  store %"char[]" { ptr @.panic_msg.47, i64 58 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.file.45, i64 11 }, ptr %indirectarg90, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg91, align 8
  %104 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %104(ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, ptr align 8 %indirectarg91, i32 119), !dbg !307
  unreachable, !dbg !307

panic94:                                          ; preds = %checkok92
  store %"char[]" { ptr @.panic_msg.48, i64 53 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg97, align 8
  %105 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %105(ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, i32 212), !dbg !283
  unreachable, !dbg !283

panic100:                                         ; preds = %checkok98
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg101, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg102, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg103, align 8
  %106 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %106(ptr align 8 %indirectarg101, ptr align 8 %indirectarg102, ptr align 8 %indirectarg103, i32 80), !dbg !284
  unreachable, !dbg !284

panic109:                                         ; preds = %checkok104
  store i64 %sub108, ptr %taddr110, align 8
  %107 = insertvalue %any undef, ptr %taddr110, 0
  %108 = insertvalue %any %107, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 8, ptr %taddr111, align 8
  %109 = insertvalue %any undef, ptr %taddr111, 0
  %110 = insertvalue %any %109, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg112, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg113, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg114, align 8
  store %any %108, ptr %varargslots115, align 16
  %ptradd116 = getelementptr inbounds i8, ptr %varargslots115, i64 16
  store %any %110, ptr %ptradd116, align 16
  %111 = insertvalue %"any[]" undef, ptr %varargslots115, 0
  %"$$temp117" = insertvalue %"any[]" %111, i64 2, 1
  store %"any[]" %"$$temp117", ptr %indirectarg118, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg112, ptr align 8 %indirectarg113, ptr align 8 %indirectarg114, i32 80, ptr align 8 %indirectarg118), !dbg !286
  unreachable, !dbg !286

panic140:                                         ; preds = %if.exit138
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg141, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg142, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg143, align 8
  %112 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %112(ptr align 8 %indirectarg141, ptr align 8 %indirectarg142, ptr align 8 %indirectarg143, i32 82), !dbg !299
  unreachable, !dbg !299

panic147:                                         ; preds = %checkok144
  store i32 %75, ptr %taddr148, align 4
  %113 = insertvalue %any undef, ptr %taddr148, 0
  %114 = insertvalue %any %113, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg149, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg150, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg151, align 8
  store %any %114, ptr %varargslots152, align 16
  %115 = insertvalue %"any[]" undef, ptr %varargslots152, 0
  %"$$temp153" = insertvalue %"any[]" %115, i64 1, 1
  store %"any[]" %"$$temp153", ptr %indirectarg154, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg149, ptr align 8 %indirectarg150, ptr align 8 %indirectarg151, i32 82, ptr align 8 %indirectarg154), !dbg !299
  unreachable, !dbg !299

panic158:                                         ; preds = %checkok155
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg159, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg160, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg161, align 8
  %116 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %116(ptr align 8 %indirectarg159, ptr align 8 %indirectarg160, ptr align 8 %indirectarg161, i32 83), !dbg !301
  unreachable, !dbg !301

panic164:                                         ; preds = %checkok162
  store i32 %82, ptr %taddr165, align 4
  %117 = insertvalue %any undef, ptr %taddr165, 0
  %118 = insertvalue %any %117, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg166, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg167, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg168, align 8
  store %any %118, ptr %varargslots169, align 16
  %119 = insertvalue %"any[]" undef, ptr %varargslots169, 0
  %"$$temp170" = insertvalue %"any[]" %119, i64 1, 1
  store %"any[]" %"$$temp170", ptr %indirectarg171, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg166, ptr align 8 %indirectarg167, ptr align 8 %indirectarg168, i32 83, ptr align 8 %indirectarg171), !dbg !304
  unreachable, !dbg !304

panic174:                                         ; preds = %checkok172
  store i32 %82, ptr %taddr175, align 4
  %120 = insertvalue %any undef, ptr %taddr175, 0
  %121 = insertvalue %any %120, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg176, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg177, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg178, align 8
  store %any %121, ptr %varargslots179, align 16
  %122 = insertvalue %"any[]" undef, ptr %varargslots179, 0
  %"$$temp180" = insertvalue %"any[]" %122, i64 1, 1
  store %"any[]" %"$$temp180", ptr %indirectarg181, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg176, ptr align 8 %indirectarg177, ptr align 8 %indirectarg178, i32 83, ptr align 8 %indirectarg181), !dbg !304
  unreachable, !dbg !304

panic187:                                         ; preds = %checkok182
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg188, align 8
  store %"char[]" { ptr @.file, i64 7 }, ptr %indirectarg189, align 8
  store %"char[]" { ptr @.func.53, i64 10 }, ptr %indirectarg190, align 8
  %123 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %123(ptr align 8 %indirectarg188, ptr align 8 %indirectarg189, ptr align 8 %indirectarg190, i32 84), !dbg !305
  unreachable, !dbg !305
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Formatter.printf(ptr %0, ptr %1, ptr align 8 %2, ptr align 8 %3) #0 comdat !dbg !308 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"any[]", align 8
  %4 = icmp eq ptr %1, null, !dbg !339
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !339
  br i1 %5, label %panic, label %checkok, !dbg !339

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !340, metadata !DIExpression()), !dbg !341
  call void @llvm.dbg.declare(metadata ptr %2, metadata !342, metadata !DIExpression()), !dbg !343
  call void @llvm.dbg.declare(metadata ptr %3, metadata !344, metadata !DIExpression()), !dbg !345
  %6 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg4, ptr align 8 %3, i32 16, i1 false)
  %7 = call i64 @std.io.Formatter.vprintf(ptr %retparam, ptr %6, ptr align 8 %indirectarg3, ptr align 8 %indirectarg4) #5, !dbg !346
  %not_err = icmp eq i64 %7, 0, !dbg !346
  %8 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !346
  br i1 %8, label %after_check, label %assign_optional, !dbg !346

assign_optional:                                  ; preds = %checkok
  store i64 %7, ptr %reterr, align 8, !dbg !346
  br label %err_retblock, !dbg !346

after_check:                                      ; preds = %checkok
  %9 = load i64, ptr %retparam, align 8, !dbg !346
  store i64 %9, ptr %0, align 8, !dbg !346
  ret i64 0, !dbg !346

err_retblock:                                     ; preds = %assign_optional
  %10 = load i64, ptr %reterr, align 8, !dbg !346
  ret i64 %10, !dbg !346

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.55, i64 6 }, ptr %indirectarg2, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 26), !dbg !341
  unreachable, !dbg !341
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.Formatter.init(ptr %0, ptr %1, ptr %2) #0 comdat !dbg !347 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %out_fn = alloca ptr, align 8
  %data = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.assign_list = alloca %Formatter, align 8
  %3 = icmp eq ptr %0, null, !dbg !350
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !350
  br i1 %4, label %panic, label %checkok, !dbg !350

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !351, metadata !DIExpression()), !dbg !352
  store ptr %1, ptr %out_fn, align 8
  call void @llvm.dbg.declare(metadata ptr %out_fn, metadata !353, metadata !DIExpression()), !dbg !354
  store ptr %2, ptr %data, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !355, metadata !DIExpression()), !dbg !356
  %5 = load ptr, ptr %self, align 8, !dbg !357
  %checknull = icmp eq ptr %5, null, !dbg !357
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !357
  br i1 %6, label %panic3, label %checkok7, !dbg !357

checkok7:                                         ; preds = %checkok
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 48, i1 false)
  %7 = load ptr, ptr %data, align 8, !dbg !358
  store ptr %7, ptr %.assign_list, align 8, !dbg !358
  %ptradd = getelementptr inbounds i8, ptr %.assign_list, i64 8, !dbg !358
  %8 = load ptr, ptr %out_fn, align 8, !dbg !359
  store ptr %8, ptr %ptradd, align 8, !dbg !359
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %5, ptr align 8 %.assign_list, i32 48, i1 false), !dbg !359
  ret void, !dbg !359

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 56), !dbg !352
  unreachable, !dbg !352

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg6, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 58), !dbg !357
  unreachable, !dbg !357
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.Formatter.out(ptr %0, ptr %1, i8 %2) #0 !dbg !360 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %c = alloca i8, align 1
  %err = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !363
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !363
  br i1 %4, label %panic, label %checkok, !dbg !363

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !364, metadata !DIExpression()), !dbg !365
  store i8 %2, ptr %c, align 1
  call void @llvm.dbg.declare(metadata ptr %c, metadata !366, metadata !DIExpression()), !dbg !367
  call void @llvm.dbg.declare(metadata ptr %err, metadata !368, metadata !DIExpression()), !dbg !369
  br label %testblock, !dbg !369

testblock:                                        ; preds = %checkok
  %5 = load ptr, ptr %self, align 8, !dbg !370
  %checknull = icmp eq ptr %5, null, !dbg !370
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !370
  br i1 %6, label %panic3, label %checkok7, !dbg !370

checkok7:                                         ; preds = %testblock
  %ptradd = getelementptr inbounds i8, ptr %5, i64 8, !dbg !370
  %7 = load ptr, ptr %ptradd, align 8, !dbg !370
  %8 = load ptr, ptr %self, align 8, !dbg !371
  %checknull8 = icmp eq ptr %8, null, !dbg !371
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !371
  br i1 %9, label %panic9, label %checkok13, !dbg !371

checkok13:                                        ; preds = %checkok7
  %10 = load ptr, ptr %8, align 8, !dbg !372
  %11 = load i8, ptr %c, align 1, !dbg !372
  %12 = call i64 %7(ptr %10, i8 %11), !dbg !370
  %not_err = icmp eq i64 %12, 0, !dbg !370
  %13 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !370
  br i1 %13, label %after_check, label %assign_optional, !dbg !370

assign_optional:                                  ; preds = %checkok13
  store i64 %12, ptr %err, align 8, !dbg !370
  br label %end_block, !dbg !370

after_check:                                      ; preds = %checkok13
  store i64 0, ptr %err, align 8, !dbg !370
  br label %end_block, !dbg !370

end_block:                                        ; preds = %after_check, %assign_optional
  %14 = load i64, ptr %err, align 8, !dbg !370
  %neq = icmp ne i64 %14, 0, !dbg !370
  br i1 %neq, label %if.then, label %if.exit40, !dbg !370

if.then:                                          ; preds = %end_block
  %15 = load ptr, ptr %self, align 8, !dbg !373
  %checknull14 = icmp eq ptr %15, null, !dbg !373
  %16 = call i1 @llvm.expect.i1(i1 %checknull14, i1 false), !dbg !373
  br i1 %16, label %panic15, label %checkok19, !dbg !373

checkok19:                                        ; preds = %if.then
  %ptradd20 = getelementptr inbounds i8, ptr %15, i64 16, !dbg !373
  %ptradd21 = getelementptr inbounds i8, ptr %ptradd20, i64 24, !dbg !373
  %17 = load i64, ptr %ptradd21, align 8, !dbg !373
  %neq22 = icmp ne i64 %17, 0, !dbg !373
  br i1 %neq22, label %if.then23, label %if.exit, !dbg !373

if.then23:                                        ; preds = %checkok19
  %18 = load ptr, ptr %self, align 8, !dbg !375
  %checknull24 = icmp eq ptr %18, null, !dbg !375
  %19 = call i1 @llvm.expect.i1(i1 %checknull24, i1 false), !dbg !375
  br i1 %19, label %panic25, label %checkok29, !dbg !375

checkok29:                                        ; preds = %if.then23
  %ptradd30 = getelementptr inbounds i8, ptr %18, i64 16, !dbg !375
  %ptradd31 = getelementptr inbounds i8, ptr %ptradd30, i64 24, !dbg !375
  %20 = load i64, ptr %ptradd31, align 8, !dbg !375
  ret i64 %20, !dbg !375

if.exit:                                          ; preds = %checkok19
  %21 = load ptr, ptr %self, align 8, !dbg !376
  %checknull32 = icmp eq ptr %21, null, !dbg !376
  %22 = call i1 @llvm.expect.i1(i1 %checknull32, i1 false), !dbg !376
  br i1 %22, label %panic33, label %checkok37, !dbg !376

checkok37:                                        ; preds = %if.exit
  %ptradd38 = getelementptr inbounds i8, ptr %21, i64 16, !dbg !376
  %ptradd39 = getelementptr inbounds i8, ptr %ptradd38, i64 24, !dbg !376
  %23 = load i64, ptr %err, align 8, !dbg !377
  store i64 %23, ptr %ptradd39, align 8, !dbg !377
  %24 = load i64, ptr %err, align 8, !dbg !378
  ret i64 %24, !dbg !378

if.exit40:                                        ; preds = %end_block
  store i64 1, ptr %0, align 8, !dbg !379
  ret i64 0, !dbg !379

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.56, i64 3 }, ptr %indirectarg2, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 61), !dbg !365
  unreachable, !dbg !365

panic3:                                           ; preds = %testblock
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.56, i64 3 }, ptr %indirectarg6, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 63), !dbg !370
  unreachable, !dbg !370

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.56, i64 3 }, ptr %indirectarg12, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 63), !dbg !371
  unreachable, !dbg !371

panic15:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func.56, i64 3 }, ptr %indirectarg18, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 65), !dbg !373
  unreachable, !dbg !373

panic25:                                          ; preds = %if.then23
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.56, i64 3 }, ptr %indirectarg28, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 65), !dbg !375
  unreachable, !dbg !375

panic33:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.56, i64 3 }, ptr %indirectarg36, align 8
  %30 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %30(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 66), !dbg !376
  unreachable, !dbg !376
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Formatter.print_with_function(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !380 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %old = alloca i32, align 4
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %old_width = alloca i32, align 4
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %old_prec = alloca i32, align 4
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %reterr74 = alloca i64, align 8
  %.inlinecache76 = alloca ptr, align 8
  %.cachedtype77 = alloca ptr, align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %retparam87 = alloca i64, align 8
  %indirectarg93 = alloca %"char[]", align 8
  %indirectarg94 = alloca %"char[]", align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg100 = alloca %"char[]", align 8
  %indirectarg101 = alloca %"char[]", align 8
  %indirectarg102 = alloca %"char[]", align 8
  %indirectarg108 = alloca %"char[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %indirectarg110 = alloca %"char[]", align 8
  %indirectarg117 = alloca %"char[]", align 8
  %indirectarg118 = alloca %"char[]", align 8
  %indirectarg119 = alloca %"char[]", align 8
  %indirectarg124 = alloca %"char[]", align 8
  %indirectarg125 = alloca %"char[]", align 8
  %indirectarg126 = alloca %"char[]", align 8
  %indirectarg132 = alloca %"char[]", align 8
  %indirectarg133 = alloca %"char[]", align 8
  %indirectarg134 = alloca %"char[]", align 8
  %.inlinecache140 = alloca ptr, align 8
  %.cachedtype141 = alloca ptr, align 8
  %old150 = alloca i32, align 4
  %indirectarg153 = alloca %"char[]", align 8
  %indirectarg154 = alloca %"char[]", align 8
  %indirectarg155 = alloca %"char[]", align 8
  %old_width158 = alloca i32, align 4
  %indirectarg161 = alloca %"char[]", align 8
  %indirectarg162 = alloca %"char[]", align 8
  %indirectarg163 = alloca %"char[]", align 8
  %old_prec167 = alloca i32, align 4
  %indirectarg170 = alloca %"char[]", align 8
  %indirectarg171 = alloca %"char[]", align 8
  %indirectarg172 = alloca %"char[]", align 8
  %reterr178 = alloca i64, align 8
  %retparam179 = alloca i64, align 8
  %indirectarg180 = alloca %"char[]", align 8
  %indirectarg186 = alloca %"char[]", align 8
  %indirectarg187 = alloca %"char[]", align 8
  %indirectarg188 = alloca %"char[]", align 8
  %indirectarg193 = alloca %"char[]", align 8
  %indirectarg194 = alloca %"char[]", align 8
  %indirectarg195 = alloca %"char[]", align 8
  %indirectarg201 = alloca %"char[]", align 8
  %indirectarg202 = alloca %"char[]", align 8
  %indirectarg203 = alloca %"char[]", align 8
  %indirectarg210 = alloca %"char[]", align 8
  %indirectarg211 = alloca %"char[]", align 8
  %indirectarg212 = alloca %"char[]", align 8
  %indirectarg217 = alloca %"char[]", align 8
  %indirectarg218 = alloca %"char[]", align 8
  %indirectarg219 = alloca %"char[]", align 8
  %indirectarg225 = alloca %"char[]", align 8
  %indirectarg226 = alloca %"char[]", align 8
  %indirectarg227 = alloca %"char[]", align 8
  %buffer = alloca [1024 x i8], align 16
  %allocator = alloca %OnStackAllocator, align 8
  %indirectarg232 = alloca %"char[]", align 8
  %indirectarg233 = alloca %any, align 8
  %mem = alloca %any, align 8
  %reterr234 = alloca i64, align 8
  %.inlinecache236 = alloca ptr, align 8
  %.cachedtype237 = alloca ptr, align 8
  %indirectarg245 = alloca %"char[]", align 8
  %indirectarg246 = alloca %"char[]", align 8
  %indirectarg247 = alloca %"char[]", align 8
  %sretparam = alloca %"char[]", align 8
  %indirectarg249 = alloca %any, align 8
  %retparam250 = alloca i64, align 8
  %indirectarg251 = alloca %"char[]", align 8
  %indirectarg257 = alloca %"char[]", align 8
  %indirectarg258 = alloca %"char[]", align 8
  %indirectarg259 = alloca %"char[]", align 8
  %indirectarg264 = alloca %"char[]", align 8
  %indirectarg265 = alloca %"char[]", align 8
  %indirectarg266 = alloca %"char[]", align 8
  %indirectarg272 = alloca %"char[]", align 8
  %indirectarg273 = alloca %"char[]", align 8
  %indirectarg274 = alloca %"char[]", align 8
  %indirectarg281 = alloca %"char[]", align 8
  %indirectarg282 = alloca %"char[]", align 8
  %indirectarg283 = alloca %"char[]", align 8
  %indirectarg288 = alloca %"char[]", align 8
  %indirectarg289 = alloca %"char[]", align 8
  %indirectarg290 = alloca %"char[]", align 8
  %indirectarg296 = alloca %"char[]", align 8
  %indirectarg297 = alloca %"char[]", align 8
  %indirectarg298 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype237, align 8, !dbg !387
  store ptr null, ptr %.cachedtype141, align 8, !dbg !387
  store ptr null, ptr %.cachedtype77, align 8, !dbg !387
  store ptr null, ptr %.cachedtype, align 8, !dbg !387
  %3 = icmp eq ptr %1, null, !dbg !387
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !387
  br i1 %4, label %panic, label %checkok, !dbg !387

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !388, metadata !DIExpression()), !dbg !389
  call void @llvm.dbg.declare(metadata ptr %2, metadata !390, metadata !DIExpression()), !dbg !391
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !392
  %5 = load i64, ptr %ptradd, align 8, !dbg !392
  %6 = inttoptr i64 %5 to ptr, !dbg !392
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !387
  %7 = icmp eq ptr %6, %type, !dbg !387
  br i1 %7, label %cache_hit, label %cache_miss, !dbg !387

cache_miss:                                       ; preds = %checkok
  %ptradd3 = getelementptr inbounds i8, ptr %6, i64 16, !dbg !387
  %8 = load ptr, ptr %ptradd3, align 8, !dbg !387
  %9 = call ptr @.dyn_search(ptr %8, ptr @"$sel.to_format"), !dbg !387
  store ptr %9, ptr %.inlinecache, align 8, !dbg !387
  store ptr %6, ptr %.cachedtype, align 8, !dbg !387
  br label %10, !dbg !387

cache_hit:                                        ; preds = %checkok
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !387
  br label %10, !dbg !387

10:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %9, %cache_miss ], !dbg !387
  %ptrbool = icmp ne ptr %fn_phi, null, !dbg !387
  br i1 %ptrbool, label %if.then, label %if.exit138, !dbg !387

if.then:                                          ; preds = %10
  call void @llvm.dbg.declare(metadata ptr %old, metadata !393, metadata !DIExpression()), !dbg !395
  %11 = load ptr, ptr %self, align 8, !dbg !396
  %checknull = icmp eq ptr %11, null, !dbg !396
  %12 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !396
  br i1 %12, label %panic4, label %checkok8, !dbg !396

checkok8:                                         ; preds = %if.then
  %ptradd9 = getelementptr inbounds i8, ptr %11, i64 16, !dbg !396
  %13 = load i32, ptr %ptradd9, align 8, !dbg !396
  store i32 %13, ptr %old, align 4, !dbg !396
  call void @llvm.dbg.declare(metadata ptr %old_width, metadata !397, metadata !DIExpression()), !dbg !398
  %14 = load ptr, ptr %self, align 8, !dbg !399
  %checknull10 = icmp eq ptr %14, null, !dbg !399
  %15 = call i1 @llvm.expect.i1(i1 %checknull10, i1 false), !dbg !399
  br i1 %15, label %panic11, label %checkok15, !dbg !399

checkok15:                                        ; preds = %checkok8
  %ptradd16 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !399
  %ptradd17 = getelementptr inbounds i8, ptr %ptradd16, i64 4, !dbg !399
  %16 = load i32, ptr %ptradd17, align 4, !dbg !399
  store i32 %16, ptr %old_width, align 4, !dbg !399
  call void @llvm.dbg.declare(metadata ptr %old_prec, metadata !400, metadata !DIExpression()), !dbg !401
  %17 = load ptr, ptr %self, align 8, !dbg !402
  %checknull18 = icmp eq ptr %17, null, !dbg !402
  %18 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !402
  br i1 %18, label %panic19, label %checkok23, !dbg !402

checkok23:                                        ; preds = %checkok15
  %ptradd24 = getelementptr inbounds i8, ptr %17, i64 16, !dbg !402
  %ptradd25 = getelementptr inbounds i8, ptr %ptradd24, i64 8, !dbg !402
  %19 = load i32, ptr %ptradd25, align 8, !dbg !402
  store i32 %19, ptr %old_prec, align 4, !dbg !402
  %20 = load ptr, ptr %2, align 8, !dbg !403
  %not = icmp eq ptr %20, null, !dbg !403
  br i1 %not, label %if.then26, label %if.exit, !dbg !403

if.then26:                                        ; preds = %checkok23
  %21 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str, i64 6 }, ptr %indirectarg27, align 8
  %22 = call i64 @std.io.Formatter.out_substr(ptr %retparam, ptr %21, ptr align 8 %indirectarg27), !dbg !404
  %not_err = icmp eq i64 %22, 0, !dbg !404
  %23 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !404
  br i1 %23, label %after_check, label %assign_optional, !dbg !404

assign_optional:                                  ; preds = %if.then26
  store i64 %22, ptr %reterr, align 8, !dbg !404
  br label %err_retblock, !dbg !404

after_check:                                      ; preds = %if.then26
  %24 = load i64, ptr %retparam, align 8, !dbg !404
  %25 = load ptr, ptr %self, align 8, !dbg !405
  %checknull28 = icmp eq ptr %25, null, !dbg !405
  %26 = call i1 @llvm.expect.i1(i1 %checknull28, i1 false), !dbg !405
  br i1 %26, label %panic29, label %checkok33, !dbg !405

checkok33:                                        ; preds = %after_check
  %ptradd34 = getelementptr inbounds i8, ptr %25, i64 16, !dbg !405
  %27 = load i32, ptr %old, align 4, !dbg !407
  store i32 %27, ptr %ptradd34, align 8, !dbg !407
  %28 = load ptr, ptr %self, align 8, !dbg !408
  %checknull35 = icmp eq ptr %28, null, !dbg !408
  %29 = call i1 @llvm.expect.i1(i1 %checknull35, i1 false), !dbg !408
  br i1 %29, label %panic36, label %checkok40, !dbg !408

checkok40:                                        ; preds = %checkok33
  %ptradd41 = getelementptr inbounds i8, ptr %28, i64 16, !dbg !408
  %ptradd42 = getelementptr inbounds i8, ptr %ptradd41, i64 4, !dbg !408
  %30 = load i32, ptr %old_width, align 4, !dbg !409
  store i32 %30, ptr %ptradd42, align 4, !dbg !409
  %31 = load ptr, ptr %self, align 8, !dbg !410
  %checknull43 = icmp eq ptr %31, null, !dbg !410
  %32 = call i1 @llvm.expect.i1(i1 %checknull43, i1 false), !dbg !410
  br i1 %32, label %panic44, label %checkok48, !dbg !410

checkok48:                                        ; preds = %checkok40
  %ptradd49 = getelementptr inbounds i8, ptr %31, i64 16, !dbg !410
  %ptradd50 = getelementptr inbounds i8, ptr %ptradd49, i64 8, !dbg !410
  %33 = load i32, ptr %old_prec, align 4, !dbg !411
  store i32 %33, ptr %ptradd50, align 8, !dbg !411
  store i64 %24, ptr %0, align 8, !dbg !411
  ret i64 0, !dbg !411

err_retblock:                                     ; preds = %assign_optional
  %34 = load ptr, ptr %self, align 8, !dbg !412
  %checknull51 = icmp eq ptr %34, null, !dbg !412
  %35 = call i1 @llvm.expect.i1(i1 %checknull51, i1 false), !dbg !412
  br i1 %35, label %panic52, label %checkok56, !dbg !412

checkok56:                                        ; preds = %err_retblock
  %ptradd57 = getelementptr inbounds i8, ptr %34, i64 16, !dbg !412
  %36 = load i32, ptr %old, align 4, !dbg !414
  store i32 %36, ptr %ptradd57, align 8, !dbg !414
  %37 = load ptr, ptr %self, align 8, !dbg !415
  %checknull58 = icmp eq ptr %37, null, !dbg !415
  %38 = call i1 @llvm.expect.i1(i1 %checknull58, i1 false), !dbg !415
  br i1 %38, label %panic59, label %checkok63, !dbg !415

checkok63:                                        ; preds = %checkok56
  %ptradd64 = getelementptr inbounds i8, ptr %37, i64 16, !dbg !415
  %ptradd65 = getelementptr inbounds i8, ptr %ptradd64, i64 4, !dbg !415
  %39 = load i32, ptr %old_width, align 4, !dbg !416
  store i32 %39, ptr %ptradd65, align 4, !dbg !416
  %40 = load ptr, ptr %self, align 8, !dbg !417
  %checknull66 = icmp eq ptr %40, null, !dbg !417
  %41 = call i1 @llvm.expect.i1(i1 %checknull66, i1 false), !dbg !417
  br i1 %41, label %panic67, label %checkok71, !dbg !417

checkok71:                                        ; preds = %checkok63
  %ptradd72 = getelementptr inbounds i8, ptr %40, i64 16, !dbg !417
  %ptradd73 = getelementptr inbounds i8, ptr %ptradd72, i64 8, !dbg !417
  %42 = load i32, ptr %old_prec, align 4, !dbg !418
  store i32 %42, ptr %ptradd73, align 8, !dbg !418
  %43 = load i64, ptr %reterr, align 8, !dbg !418
  ret i64 %43, !dbg !418

if.exit:                                          ; preds = %checkok23
  %ptradd75 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !419
  %44 = load i64, ptr %ptradd75, align 8, !dbg !419
  %45 = inttoptr i64 %44 to ptr, !dbg !419
  %type78 = load ptr, ptr %.cachedtype77, align 8, !dbg !387
  %46 = icmp eq ptr %45, %type78, !dbg !387
  br i1 %46, label %cache_hit81, label %cache_miss79, !dbg !387

cache_miss79:                                     ; preds = %if.exit
  %ptradd80 = getelementptr inbounds i8, ptr %45, i64 16, !dbg !387
  %47 = load ptr, ptr %ptradd80, align 8, !dbg !387
  %48 = call ptr @.dyn_search(ptr %47, ptr @"$sel.to_format"), !dbg !387
  store ptr %48, ptr %.inlinecache76, align 8, !dbg !387
  store ptr %45, ptr %.cachedtype77, align 8, !dbg !387
  br label %49, !dbg !387

cache_hit81:                                      ; preds = %if.exit
  %cache_hit_fn82 = load ptr, ptr %.inlinecache76, align 8, !dbg !387
  br label %49, !dbg !387

49:                                               ; preds = %cache_hit81, %cache_miss79
  %fn_phi83 = phi ptr [ %cache_hit_fn82, %cache_hit81 ], [ %48, %cache_miss79 ], !dbg !387
  %50 = icmp eq ptr %fn_phi83, null, !dbg !387
  br i1 %50, label %missing_function, label %match, !dbg !387

missing_function:                                 ; preds = %49
  store %"char[]" { ptr @.panic_msg.58, i64 46 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg86, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, i32 86), !dbg !420
  unreachable, !dbg !420

match:                                            ; preds = %49
  %52 = load ptr, ptr %2, align 8
  %53 = load ptr, ptr %self, align 8
  %54 = call i64 %fn_phi83(ptr %retparam87, ptr %52, ptr %53), !dbg !420
  %not_err88 = icmp eq i64 %54, 0, !dbg !420
  %55 = call i1 @llvm.expect.i1(i1 %not_err88, i1 true), !dbg !420
  br i1 %55, label %after_check90, label %assign_optional89, !dbg !420

assign_optional89:                                ; preds = %match
  store i64 %54, ptr %reterr74, align 8, !dbg !420
  br label %err_retblock114, !dbg !420

after_check90:                                    ; preds = %match
  %56 = load i64, ptr %retparam87, align 8, !dbg !420
  %57 = load ptr, ptr %self, align 8, !dbg !421
  %checknull91 = icmp eq ptr %57, null, !dbg !421
  %58 = call i1 @llvm.expect.i1(i1 %checknull91, i1 false), !dbg !421
  br i1 %58, label %panic92, label %checkok96, !dbg !421

checkok96:                                        ; preds = %after_check90
  %ptradd97 = getelementptr inbounds i8, ptr %57, i64 16, !dbg !421
  %59 = load i32, ptr %old, align 4, !dbg !423
  store i32 %59, ptr %ptradd97, align 8, !dbg !423
  %60 = load ptr, ptr %self, align 8, !dbg !424
  %checknull98 = icmp eq ptr %60, null, !dbg !424
  %61 = call i1 @llvm.expect.i1(i1 %checknull98, i1 false), !dbg !424
  br i1 %61, label %panic99, label %checkok103, !dbg !424

checkok103:                                       ; preds = %checkok96
  %ptradd104 = getelementptr inbounds i8, ptr %60, i64 16, !dbg !424
  %ptradd105 = getelementptr inbounds i8, ptr %ptradd104, i64 4, !dbg !424
  %62 = load i32, ptr %old_width, align 4, !dbg !425
  store i32 %62, ptr %ptradd105, align 4, !dbg !425
  %63 = load ptr, ptr %self, align 8, !dbg !426
  %checknull106 = icmp eq ptr %63, null, !dbg !426
  %64 = call i1 @llvm.expect.i1(i1 %checknull106, i1 false), !dbg !426
  br i1 %64, label %panic107, label %checkok111, !dbg !426

checkok111:                                       ; preds = %checkok103
  %ptradd112 = getelementptr inbounds i8, ptr %63, i64 16, !dbg !426
  %ptradd113 = getelementptr inbounds i8, ptr %ptradd112, i64 8, !dbg !426
  %65 = load i32, ptr %old_prec, align 4, !dbg !427
  store i32 %65, ptr %ptradd113, align 8, !dbg !427
  store i64 %56, ptr %0, align 8, !dbg !427
  ret i64 0, !dbg !427

err_retblock114:                                  ; preds = %assign_optional89
  %66 = load ptr, ptr %self, align 8, !dbg !428
  %checknull115 = icmp eq ptr %66, null, !dbg !428
  %67 = call i1 @llvm.expect.i1(i1 %checknull115, i1 false), !dbg !428
  br i1 %67, label %panic116, label %checkok120, !dbg !428

checkok120:                                       ; preds = %err_retblock114
  %ptradd121 = getelementptr inbounds i8, ptr %66, i64 16, !dbg !428
  %68 = load i32, ptr %old, align 4, !dbg !430
  store i32 %68, ptr %ptradd121, align 8, !dbg !430
  %69 = load ptr, ptr %self, align 8, !dbg !431
  %checknull122 = icmp eq ptr %69, null, !dbg !431
  %70 = call i1 @llvm.expect.i1(i1 %checknull122, i1 false), !dbg !431
  br i1 %70, label %panic123, label %checkok127, !dbg !431

checkok127:                                       ; preds = %checkok120
  %ptradd128 = getelementptr inbounds i8, ptr %69, i64 16, !dbg !431
  %ptradd129 = getelementptr inbounds i8, ptr %ptradd128, i64 4, !dbg !431
  %71 = load i32, ptr %old_width, align 4, !dbg !432
  store i32 %71, ptr %ptradd129, align 4, !dbg !432
  %72 = load ptr, ptr %self, align 8, !dbg !433
  %checknull130 = icmp eq ptr %72, null, !dbg !433
  %73 = call i1 @llvm.expect.i1(i1 %checknull130, i1 false), !dbg !433
  br i1 %73, label %panic131, label %checkok135, !dbg !433

checkok135:                                       ; preds = %checkok127
  %ptradd136 = getelementptr inbounds i8, ptr %72, i64 16, !dbg !433
  %ptradd137 = getelementptr inbounds i8, ptr %ptradd136, i64 8, !dbg !433
  %74 = load i32, ptr %old_prec, align 4, !dbg !434
  store i32 %74, ptr %ptradd137, align 8, !dbg !434
  %75 = load i64, ptr %reterr74, align 8, !dbg !434
  ret i64 %75, !dbg !434

if.exit138:                                       ; preds = %10
  %ptradd139 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !435
  %76 = load i64, ptr %ptradd139, align 8, !dbg !435
  %77 = inttoptr i64 %76 to ptr, !dbg !435
  %type142 = load ptr, ptr %.cachedtype141, align 8, !dbg !387
  %78 = icmp eq ptr %77, %type142, !dbg !387
  br i1 %78, label %cache_hit145, label %cache_miss143, !dbg !387

cache_miss143:                                    ; preds = %if.exit138
  %ptradd144 = getelementptr inbounds i8, ptr %77, i64 16, !dbg !387
  %79 = load ptr, ptr %ptradd144, align 8, !dbg !387
  %80 = call ptr @.dyn_search(ptr %79, ptr @"$sel.to_string"), !dbg !387
  store ptr %80, ptr %.inlinecache140, align 8, !dbg !387
  store ptr %77, ptr %.cachedtype141, align 8, !dbg !387
  br label %81, !dbg !387

cache_hit145:                                     ; preds = %if.exit138
  %cache_hit_fn146 = load ptr, ptr %.inlinecache140, align 8, !dbg !387
  br label %81, !dbg !387

81:                                               ; preds = %cache_hit145, %cache_miss143
  %fn_phi147 = phi ptr [ %cache_hit_fn146, %cache_hit145 ], [ %80, %cache_miss143 ], !dbg !387
  %ptrbool148 = icmp ne ptr %fn_phi147, null, !dbg !387
  br i1 %ptrbool148, label %if.then149, label %if.exit302, !dbg !387

if.then149:                                       ; preds = %81
  call void @llvm.dbg.declare(metadata ptr %old150, metadata !436, metadata !DIExpression()), !dbg !438
  %82 = load ptr, ptr %self, align 8, !dbg !439
  %checknull151 = icmp eq ptr %82, null, !dbg !439
  %83 = call i1 @llvm.expect.i1(i1 %checknull151, i1 false), !dbg !439
  br i1 %83, label %panic152, label %checkok156, !dbg !439

checkok156:                                       ; preds = %if.then149
  %ptradd157 = getelementptr inbounds i8, ptr %82, i64 16, !dbg !439
  %84 = load i32, ptr %ptradd157, align 8, !dbg !439
  store i32 %84, ptr %old150, align 4, !dbg !439
  call void @llvm.dbg.declare(metadata ptr %old_width158, metadata !440, metadata !DIExpression()), !dbg !441
  %85 = load ptr, ptr %self, align 8, !dbg !442
  %checknull159 = icmp eq ptr %85, null, !dbg !442
  %86 = call i1 @llvm.expect.i1(i1 %checknull159, i1 false), !dbg !442
  br i1 %86, label %panic160, label %checkok164, !dbg !442

checkok164:                                       ; preds = %checkok156
  %ptradd165 = getelementptr inbounds i8, ptr %85, i64 16, !dbg !442
  %ptradd166 = getelementptr inbounds i8, ptr %ptradd165, i64 4, !dbg !442
  %87 = load i32, ptr %ptradd166, align 4, !dbg !442
  store i32 %87, ptr %old_width158, align 4, !dbg !442
  call void @llvm.dbg.declare(metadata ptr %old_prec167, metadata !443, metadata !DIExpression()), !dbg !444
  %88 = load ptr, ptr %self, align 8, !dbg !445
  %checknull168 = icmp eq ptr %88, null, !dbg !445
  %89 = call i1 @llvm.expect.i1(i1 %checknull168, i1 false), !dbg !445
  br i1 %89, label %panic169, label %checkok173, !dbg !445

checkok173:                                       ; preds = %checkok164
  %ptradd174 = getelementptr inbounds i8, ptr %88, i64 16, !dbg !445
  %ptradd175 = getelementptr inbounds i8, ptr %ptradd174, i64 8, !dbg !445
  %90 = load i32, ptr %ptradd175, align 8, !dbg !445
  store i32 %90, ptr %old_prec167, align 4, !dbg !445
  %91 = load ptr, ptr %2, align 8, !dbg !446
  %not176 = icmp eq ptr %91, null, !dbg !446
  br i1 %not176, label %if.then177, label %if.exit231, !dbg !446

if.then177:                                       ; preds = %checkok173
  %92 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.59, i64 6 }, ptr %indirectarg180, align 8
  %93 = call i64 @std.io.Formatter.out_substr(ptr %retparam179, ptr %92, ptr align 8 %indirectarg180), !dbg !447
  %not_err181 = icmp eq i64 %93, 0, !dbg !447
  %94 = call i1 @llvm.expect.i1(i1 %not_err181, i1 true), !dbg !447
  br i1 %94, label %after_check183, label %assign_optional182, !dbg !447

assign_optional182:                               ; preds = %if.then177
  store i64 %93, ptr %reterr178, align 8, !dbg !447
  br label %err_retblock207, !dbg !447

after_check183:                                   ; preds = %if.then177
  %95 = load i64, ptr %retparam179, align 8, !dbg !447
  %96 = load ptr, ptr %self, align 8, !dbg !448
  %checknull184 = icmp eq ptr %96, null, !dbg !448
  %97 = call i1 @llvm.expect.i1(i1 %checknull184, i1 false), !dbg !448
  br i1 %97, label %panic185, label %checkok189, !dbg !448

checkok189:                                       ; preds = %after_check183
  %ptradd190 = getelementptr inbounds i8, ptr %96, i64 16, !dbg !448
  %98 = load i32, ptr %old150, align 4, !dbg !450
  store i32 %98, ptr %ptradd190, align 8, !dbg !450
  %99 = load ptr, ptr %self, align 8, !dbg !451
  %checknull191 = icmp eq ptr %99, null, !dbg !451
  %100 = call i1 @llvm.expect.i1(i1 %checknull191, i1 false), !dbg !451
  br i1 %100, label %panic192, label %checkok196, !dbg !451

checkok196:                                       ; preds = %checkok189
  %ptradd197 = getelementptr inbounds i8, ptr %99, i64 16, !dbg !451
  %ptradd198 = getelementptr inbounds i8, ptr %ptradd197, i64 4, !dbg !451
  %101 = load i32, ptr %old_width158, align 4, !dbg !452
  store i32 %101, ptr %ptradd198, align 4, !dbg !452
  %102 = load ptr, ptr %self, align 8, !dbg !453
  %checknull199 = icmp eq ptr %102, null, !dbg !453
  %103 = call i1 @llvm.expect.i1(i1 %checknull199, i1 false), !dbg !453
  br i1 %103, label %panic200, label %checkok204, !dbg !453

checkok204:                                       ; preds = %checkok196
  %ptradd205 = getelementptr inbounds i8, ptr %102, i64 16, !dbg !453
  %ptradd206 = getelementptr inbounds i8, ptr %ptradd205, i64 8, !dbg !453
  %104 = load i32, ptr %old_prec167, align 4, !dbg !454
  store i32 %104, ptr %ptradd206, align 8, !dbg !454
  store i64 %95, ptr %0, align 8, !dbg !454
  ret i64 0, !dbg !454

err_retblock207:                                  ; preds = %assign_optional182
  %105 = load ptr, ptr %self, align 8, !dbg !455
  %checknull208 = icmp eq ptr %105, null, !dbg !455
  %106 = call i1 @llvm.expect.i1(i1 %checknull208, i1 false), !dbg !455
  br i1 %106, label %panic209, label %checkok213, !dbg !455

checkok213:                                       ; preds = %err_retblock207
  %ptradd214 = getelementptr inbounds i8, ptr %105, i64 16, !dbg !455
  %107 = load i32, ptr %old150, align 4, !dbg !457
  store i32 %107, ptr %ptradd214, align 8, !dbg !457
  %108 = load ptr, ptr %self, align 8, !dbg !458
  %checknull215 = icmp eq ptr %108, null, !dbg !458
  %109 = call i1 @llvm.expect.i1(i1 %checknull215, i1 false), !dbg !458
  br i1 %109, label %panic216, label %checkok220, !dbg !458

checkok220:                                       ; preds = %checkok213
  %ptradd221 = getelementptr inbounds i8, ptr %108, i64 16, !dbg !458
  %ptradd222 = getelementptr inbounds i8, ptr %ptradd221, i64 4, !dbg !458
  %110 = load i32, ptr %old_width158, align 4, !dbg !459
  store i32 %110, ptr %ptradd222, align 4, !dbg !459
  %111 = load ptr, ptr %self, align 8, !dbg !460
  %checknull223 = icmp eq ptr %111, null, !dbg !460
  %112 = call i1 @llvm.expect.i1(i1 %checknull223, i1 false), !dbg !460
  br i1 %112, label %panic224, label %checkok228, !dbg !460

checkok228:                                       ; preds = %checkok220
  %ptradd229 = getelementptr inbounds i8, ptr %111, i64 16, !dbg !460
  %ptradd230 = getelementptr inbounds i8, ptr %ptradd229, i64 8, !dbg !460
  %113 = load i32, ptr %old_prec167, align 4, !dbg !461
  store i32 %113, ptr %ptradd230, align 8, !dbg !461
  %114 = load i64, ptr %reterr178, align 8, !dbg !461
  ret i64 %114, !dbg !461

if.exit231:                                       ; preds = %checkok173
  call void @llvm.dbg.declare(metadata ptr %buffer, metadata !462, metadata !DIExpression()), !dbg !468
  call void @llvm.memset.p0.i64(ptr align 16 %buffer, i8 0, i64 1024, i1 false), !dbg !468
  call void @llvm.dbg.declare(metadata ptr %allocator, metadata !470, metadata !DIExpression()), !dbg !488
  call void @llvm.memset.p0.i64(ptr align 8 %allocator, i8 0, i64 48, i1 false), !dbg !488
  %115 = insertvalue %"char[]" undef, ptr %buffer, 0, !dbg !489
  %116 = insertvalue %"char[]" %115, i64 1024, 1, !dbg !489
  store %"char[]" %116, ptr %indirectarg232, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg233, ptr align 8 @std.core.mem.allocator.thread_allocator, i32 16, i1 false)
  call void @std.core.mem.allocator.OnStackAllocator.init(ptr %allocator, ptr align 8 %indirectarg232, ptr align 8 %indirectarg233), !dbg !490
  call void @llvm.dbg.declare(metadata ptr %mem, metadata !491, metadata !DIExpression()), !dbg !492
  %117 = insertvalue %any undef, ptr %allocator, 0, !dbg !493
  %118 = insertvalue %any %117, i64 ptrtoint (ptr @"$ct.std.core.mem.allocator.OnStackAllocator" to i64), 1, !dbg !493
  store %any %118, ptr %mem, align 8, !dbg !493
  %ptradd235 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !495
  %119 = load i64, ptr %ptradd235, align 8, !dbg !495
  %120 = inttoptr i64 %119 to ptr, !dbg !495
  %type238 = load ptr, ptr %.cachedtype237, align 8, !dbg !387
  %121 = icmp eq ptr %120, %type238, !dbg !387
  br i1 %121, label %cache_hit241, label %cache_miss239, !dbg !387

cache_miss239:                                    ; preds = %if.exit231
  %ptradd240 = getelementptr inbounds i8, ptr %120, i64 16, !dbg !387
  %122 = load ptr, ptr %ptradd240, align 8, !dbg !387
  %123 = call ptr @.dyn_search(ptr %122, ptr @"$sel.to_string"), !dbg !387
  store ptr %123, ptr %.inlinecache236, align 8, !dbg !387
  store ptr %120, ptr %.cachedtype237, align 8, !dbg !387
  br label %124, !dbg !387

cache_hit241:                                     ; preds = %if.exit231
  %cache_hit_fn242 = load ptr, ptr %.inlinecache236, align 8, !dbg !387
  br label %124, !dbg !387

124:                                              ; preds = %cache_hit241, %cache_miss239
  %fn_phi243 = phi ptr [ %cache_hit_fn242, %cache_hit241 ], [ %123, %cache_miss239 ], !dbg !387
  %125 = icmp eq ptr %fn_phi243, null, !dbg !387
  br i1 %125, label %missing_function244, label %match248, !dbg !387

missing_function244:                              ; preds = %124
  store %"char[]" { ptr @.panic_msg.60, i64 46 }, ptr %indirectarg245, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg246, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg247, align 8
  %126 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %126(ptr align 8 %indirectarg245, ptr align 8 %indirectarg246, ptr align 8 %indirectarg247, i32 102), !dbg !497
  unreachable, !dbg !497

match248:                                         ; preds = %124
  %127 = load ptr, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg249, ptr align 8 %mem, i32 16, i1 false)
  call void %fn_phi243(ptr sret(%"char[]") align 8 %sretparam, ptr %127, ptr align 8 %indirectarg249), !dbg !497
  %128 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg251, ptr align 8 %sretparam, i32 16, i1 false)
  %129 = call i64 @std.io.Formatter.out_substr(ptr %retparam250, ptr %128, ptr align 8 %indirectarg251), !dbg !498
  %not_err252 = icmp eq i64 %129, 0, !dbg !498
  %130 = call i1 @llvm.expect.i1(i1 %not_err252, i1 true), !dbg !498
  br i1 %130, label %after_check254, label %assign_optional253, !dbg !498

assign_optional253:                               ; preds = %match248
  store i64 %129, ptr %reterr234, align 8, !dbg !498
  br label %err_retblock278, !dbg !498

after_check254:                                   ; preds = %match248
  %131 = load i64, ptr %retparam250, align 8, !dbg !498
  call void @std.core.mem.allocator.OnStackAllocator.free(ptr %allocator), !dbg !499
  %132 = load ptr, ptr %self, align 8, !dbg !501
  %checknull255 = icmp eq ptr %132, null, !dbg !501
  %133 = call i1 @llvm.expect.i1(i1 %checknull255, i1 false), !dbg !501
  br i1 %133, label %panic256, label %checkok260, !dbg !501

checkok260:                                       ; preds = %after_check254
  %ptradd261 = getelementptr inbounds i8, ptr %132, i64 16, !dbg !501
  %134 = load i32, ptr %old150, align 4, !dbg !503
  store i32 %134, ptr %ptradd261, align 8, !dbg !503
  %135 = load ptr, ptr %self, align 8, !dbg !504
  %checknull262 = icmp eq ptr %135, null, !dbg !504
  %136 = call i1 @llvm.expect.i1(i1 %checknull262, i1 false), !dbg !504
  br i1 %136, label %panic263, label %checkok267, !dbg !504

checkok267:                                       ; preds = %checkok260
  %ptradd268 = getelementptr inbounds i8, ptr %135, i64 16, !dbg !504
  %ptradd269 = getelementptr inbounds i8, ptr %ptradd268, i64 4, !dbg !504
  %137 = load i32, ptr %old_width158, align 4, !dbg !505
  store i32 %137, ptr %ptradd269, align 4, !dbg !505
  %138 = load ptr, ptr %self, align 8, !dbg !506
  %checknull270 = icmp eq ptr %138, null, !dbg !506
  %139 = call i1 @llvm.expect.i1(i1 %checknull270, i1 false), !dbg !506
  br i1 %139, label %panic271, label %checkok275, !dbg !506

checkok275:                                       ; preds = %checkok267
  %ptradd276 = getelementptr inbounds i8, ptr %138, i64 16, !dbg !506
  %ptradd277 = getelementptr inbounds i8, ptr %ptradd276, i64 8, !dbg !506
  %140 = load i32, ptr %old_prec167, align 4, !dbg !507
  store i32 %140, ptr %ptradd277, align 8, !dbg !507
  store i64 %131, ptr %0, align 8, !dbg !507
  ret i64 0, !dbg !507

err_retblock278:                                  ; preds = %assign_optional253
  call void @std.core.mem.allocator.OnStackAllocator.free(ptr %allocator), !dbg !508
  %141 = load ptr, ptr %self, align 8, !dbg !510
  %checknull279 = icmp eq ptr %141, null, !dbg !510
  %142 = call i1 @llvm.expect.i1(i1 %checknull279, i1 false), !dbg !510
  br i1 %142, label %panic280, label %checkok284, !dbg !510

checkok284:                                       ; preds = %err_retblock278
  %ptradd285 = getelementptr inbounds i8, ptr %141, i64 16, !dbg !510
  %143 = load i32, ptr %old150, align 4, !dbg !512
  store i32 %143, ptr %ptradd285, align 8, !dbg !512
  %144 = load ptr, ptr %self, align 8, !dbg !513
  %checknull286 = icmp eq ptr %144, null, !dbg !513
  %145 = call i1 @llvm.expect.i1(i1 %checknull286, i1 false), !dbg !513
  br i1 %145, label %panic287, label %checkok291, !dbg !513

checkok291:                                       ; preds = %checkok284
  %ptradd292 = getelementptr inbounds i8, ptr %144, i64 16, !dbg !513
  %ptradd293 = getelementptr inbounds i8, ptr %ptradd292, i64 4, !dbg !513
  %146 = load i32, ptr %old_width158, align 4, !dbg !514
  store i32 %146, ptr %ptradd293, align 4, !dbg !514
  %147 = load ptr, ptr %self, align 8, !dbg !515
  %checknull294 = icmp eq ptr %147, null, !dbg !515
  %148 = call i1 @llvm.expect.i1(i1 %checknull294, i1 false), !dbg !515
  br i1 %148, label %panic295, label %checkok299, !dbg !515

checkok299:                                       ; preds = %checkok291
  %ptradd300 = getelementptr inbounds i8, ptr %147, i64 16, !dbg !515
  %ptradd301 = getelementptr inbounds i8, ptr %ptradd300, i64 8, !dbg !515
  %149 = load i32, ptr %old_prec167, align 4, !dbg !516
  store i32 %149, ptr %ptradd301, align 8, !dbg !516
  %150 = load i64, ptr %reterr234, align 8, !dbg !516
  ret i64 %150, !dbg !516

if.exit302:                                       ; preds = %81
  ret i64 ptrtoint (ptr @"std.core.builtin.SearchResult$MISSING" to i64), !dbg !517

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg2, align 8
  %151 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %151(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 72), !dbg !389
  unreachable, !dbg !389

panic4:                                           ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg7, align 8
  %152 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %152(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 76), !dbg !396
  unreachable, !dbg !396

panic11:                                          ; preds = %checkok8
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg14, align 8
  %153 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %153(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 77), !dbg !399
  unreachable, !dbg !399

panic19:                                          ; preds = %checkok15
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg22, align 8
  %154 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %154(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 78), !dbg !402
  unreachable, !dbg !402

panic29:                                          ; preds = %after_check
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg32, align 8
  %155 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %155(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 81), !dbg !405
  unreachable, !dbg !405

panic36:                                          ; preds = %checkok33
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg39, align 8
  %156 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %156(ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, i32 82), !dbg !408
  unreachable, !dbg !408

panic44:                                          ; preds = %checkok40
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg47, align 8
  %157 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %157(ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, i32 83), !dbg !410
  unreachable, !dbg !410

panic52:                                          ; preds = %err_retblock
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg55, align 8
  %158 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %158(ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, i32 81), !dbg !412
  unreachable, !dbg !412

panic59:                                          ; preds = %checkok56
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg62, align 8
  %159 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %159(ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, i32 82), !dbg !415
  unreachable, !dbg !415

panic67:                                          ; preds = %checkok63
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg70, align 8
  %160 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %160(ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, i32 83), !dbg !417
  unreachable, !dbg !417

panic92:                                          ; preds = %after_check90
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg93, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg94, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg95, align 8
  %161 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %161(ptr align 8 %indirectarg93, ptr align 8 %indirectarg94, ptr align 8 %indirectarg95, i32 81), !dbg !421
  unreachable, !dbg !421

panic99:                                          ; preds = %checkok96
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg100, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg101, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg102, align 8
  %162 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %162(ptr align 8 %indirectarg100, ptr align 8 %indirectarg101, ptr align 8 %indirectarg102, i32 82), !dbg !424
  unreachable, !dbg !424

panic107:                                         ; preds = %checkok103
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg108, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg109, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg110, align 8
  %163 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %163(ptr align 8 %indirectarg108, ptr align 8 %indirectarg109, ptr align 8 %indirectarg110, i32 83), !dbg !426
  unreachable, !dbg !426

panic116:                                         ; preds = %err_retblock114
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg117, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg118, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg119, align 8
  %164 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %164(ptr align 8 %indirectarg117, ptr align 8 %indirectarg118, ptr align 8 %indirectarg119, i32 81), !dbg !428
  unreachable, !dbg !428

panic123:                                         ; preds = %checkok120
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg124, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg125, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg126, align 8
  %165 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %165(ptr align 8 %indirectarg124, ptr align 8 %indirectarg125, ptr align 8 %indirectarg126, i32 82), !dbg !431
  unreachable, !dbg !431

panic131:                                         ; preds = %checkok127
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg132, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg133, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg134, align 8
  %166 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %166(ptr align 8 %indirectarg132, ptr align 8 %indirectarg133, ptr align 8 %indirectarg134, i32 83), !dbg !433
  unreachable, !dbg !433

panic152:                                         ; preds = %if.then149
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg153, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg154, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg155, align 8
  %167 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %167(ptr align 8 %indirectarg153, ptr align 8 %indirectarg154, ptr align 8 %indirectarg155, i32 90), !dbg !439
  unreachable, !dbg !439

panic160:                                         ; preds = %checkok156
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg161, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg162, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg163, align 8
  %168 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %168(ptr align 8 %indirectarg161, ptr align 8 %indirectarg162, ptr align 8 %indirectarg163, i32 91), !dbg !442
  unreachable, !dbg !442

panic169:                                         ; preds = %checkok164
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg170, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg171, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg172, align 8
  %169 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %169(ptr align 8 %indirectarg170, ptr align 8 %indirectarg171, ptr align 8 %indirectarg172, i32 92), !dbg !445
  unreachable, !dbg !445

panic185:                                         ; preds = %after_check183
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg186, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg187, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg188, align 8
  %170 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %170(ptr align 8 %indirectarg186, ptr align 8 %indirectarg187, ptr align 8 %indirectarg188, i32 95), !dbg !448
  unreachable, !dbg !448

panic192:                                         ; preds = %checkok189
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg193, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg194, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg195, align 8
  %171 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %171(ptr align 8 %indirectarg193, ptr align 8 %indirectarg194, ptr align 8 %indirectarg195, i32 96), !dbg !451
  unreachable, !dbg !451

panic200:                                         ; preds = %checkok196
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg201, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg202, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg203, align 8
  %172 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %172(ptr align 8 %indirectarg201, ptr align 8 %indirectarg202, ptr align 8 %indirectarg203, i32 97), !dbg !453
  unreachable, !dbg !453

panic209:                                         ; preds = %err_retblock207
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg210, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg211, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg212, align 8
  %173 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %173(ptr align 8 %indirectarg210, ptr align 8 %indirectarg211, ptr align 8 %indirectarg212, i32 95), !dbg !455
  unreachable, !dbg !455

panic216:                                         ; preds = %checkok213
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg217, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg218, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg219, align 8
  %174 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %174(ptr align 8 %indirectarg217, ptr align 8 %indirectarg218, ptr align 8 %indirectarg219, i32 96), !dbg !458
  unreachable, !dbg !458

panic224:                                         ; preds = %checkok220
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg225, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg226, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg227, align 8
  %175 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %175(ptr align 8 %indirectarg225, ptr align 8 %indirectarg226, ptr align 8 %indirectarg227, i32 97), !dbg !460
  unreachable, !dbg !460

panic256:                                         ; preds = %after_check254
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg257, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg258, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg259, align 8
  %176 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %176(ptr align 8 %indirectarg257, ptr align 8 %indirectarg258, ptr align 8 %indirectarg259, i32 95), !dbg !501
  unreachable, !dbg !501

panic263:                                         ; preds = %checkok260
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg264, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg265, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg266, align 8
  %177 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %177(ptr align 8 %indirectarg264, ptr align 8 %indirectarg265, ptr align 8 %indirectarg266, i32 96), !dbg !504
  unreachable, !dbg !504

panic271:                                         ; preds = %checkok267
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg272, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg273, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg274, align 8
  %178 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %178(ptr align 8 %indirectarg272, ptr align 8 %indirectarg273, ptr align 8 %indirectarg274, i32 97), !dbg !506
  unreachable, !dbg !506

panic280:                                         ; preds = %err_retblock278
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg281, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg282, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg283, align 8
  %179 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %179(ptr align 8 %indirectarg281, ptr align 8 %indirectarg282, ptr align 8 %indirectarg283, i32 95), !dbg !510
  unreachable, !dbg !510

panic287:                                         ; preds = %checkok284
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg288, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg289, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg290, align 8
  %180 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %180(ptr align 8 %indirectarg288, ptr align 8 %indirectarg289, ptr align 8 %indirectarg290, i32 96), !dbg !513
  unreachable, !dbg !513

panic295:                                         ; preds = %checkok291
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg296, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg297, align 8
  store %"char[]" { ptr @.func.57, i64 19 }, ptr %indirectarg298, align 8
  %181 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %181(ptr align 8 %indirectarg296, ptr align 8 %indirectarg297, ptr align 8 %indirectarg298, i32 97), !dbg !515
  unreachable, !dbg !515
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.Formatter.out_str(ptr %0, ptr %1, ptr align 8 %2) #0 !dbg !518 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %switch = alloca i8, align 1
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %reterr5 = alloca i64, align 8
  %retparam6 = alloca i64, align 8
  %indirectarg7 = alloca %"char[]", align 8
  %reterr13 = alloca i64, align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %faultname_zero = alloca %"char[]", align 8
  %retparam19 = alloca i64, align 8
  %indirectarg20 = alloca %"char[]", align 8
  %reterr26 = alloca i64, align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %retparam33 = alloca i64, align 8
  %indirectarg34 = alloca %any, align 8
  %string = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"any[]", align 8
  %flags = alloca i32, align 4
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %width = alloca i32, align 4
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %reterr75 = alloca i64, align 8
  %retparam76 = alloca i64, align 8
  %indirectarg77 = alloca %any, align 8
  %retparam80 = alloca i64, align 8
  %indirectarg81 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %indirectarg88 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg94 = alloca %"char[]", align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg103 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg105 = alloca %"char[]", align 8
  %indirectarg110 = alloca %"char[]", align 8
  %indirectarg111 = alloca %"char[]", align 8
  %indirectarg112 = alloca %"char[]", align 8
  %flags117 = alloca i32, align 4
  %indirectarg120 = alloca %"char[]", align 8
  %indirectarg121 = alloca %"char[]", align 8
  %indirectarg122 = alloca %"char[]", align 8
  %width125 = alloca i32, align 4
  %indirectarg128 = alloca %"char[]", align 8
  %indirectarg129 = alloca %"char[]", align 8
  %indirectarg130 = alloca %"char[]", align 8
  %indirectarg136 = alloca %"char[]", align 8
  %indirectarg137 = alloca %"char[]", align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg143 = alloca %"char[]", align 8
  %indirectarg144 = alloca %"char[]", align 8
  %indirectarg145 = alloca %"char[]", align 8
  %reterr149 = alloca i64, align 8
  %retparam150 = alloca double, align 8
  %indirectarg151 = alloca %any, align 8
  %retparam154 = alloca i64, align 8
  %retparam158 = alloca i64, align 8
  %indirectarg159 = alloca %"char[]", align 8
  %indirectarg167 = alloca %"char[]", align 8
  %indirectarg168 = alloca %"char[]", align 8
  %indirectarg169 = alloca %"char[]", align 8
  %indirectarg174 = alloca %"char[]", align 8
  %indirectarg175 = alloca %"char[]", align 8
  %indirectarg176 = alloca %"char[]", align 8
  %indirectarg183 = alloca %"char[]", align 8
  %indirectarg184 = alloca %"char[]", align 8
  %indirectarg185 = alloca %"char[]", align 8
  %indirectarg190 = alloca %"char[]", align 8
  %indirectarg191 = alloca %"char[]", align 8
  %indirectarg192 = alloca %"char[]", align 8
  %reterr197 = alloca i64, align 8
  %indirectarg200 = alloca %"char[]", align 8
  %indirectarg201 = alloca %"char[]", align 8
  %indirectarg202 = alloca %"char[]", align 8
  %retparam204 = alloca i64, align 8
  %indirectarg205 = alloca %"char[]", align 8
  %n = alloca i64, align 8
  %n.f = alloca i64, align 8
  %retparam210 = alloca i64, align 8
  %indirectarg211 = alloca %any, align 8
  %reterr215 = alloca i64, align 8
  %blockret = alloca i64, align 8
  %f = alloca i64, align 8
  %error_var = alloca i64, align 8
  %switch231 = alloca i8, align 1
  %i = alloca i64, align 8
  %error_var234 = alloca i64, align 8
  %v = alloca %any, align 8
  %blockret235 = alloca i64, align 8
  %indirectarg237 = alloca %"char[]", align 8
  %indirectarg238 = alloca %"char[]", align 8
  %indirectarg239 = alloca %"char[]", align 8
  %any_type = alloca i64, align 8
  %kind = alloca i8, align 1
  %indirectarg262 = alloca %"char[]", align 8
  %indirectarg263 = alloca %"char[]", align 8
  %indirectarg264 = alloca %"char[]", align 8
  %is_mixed_signed = alloca i8, align 1
  %max = alloca i64, align 8
  %min = alloca i64, align 8
  %switch272 = alloca i64, align 8
  %c = alloca i8, align 1
  %indirectarg279 = alloca %"char[]", align 8
  %indirectarg280 = alloca %"char[]", align 8
  %indirectarg281 = alloca %"char[]", align 8
  %s = alloca i16, align 2
  %indirectarg296 = alloca %"char[]", align 8
  %indirectarg297 = alloca %"char[]", align 8
  %indirectarg298 = alloca %"char[]", align 8
  %i325 = alloca i32, align 4
  %indirectarg328 = alloca %"char[]", align 8
  %indirectarg329 = alloca %"char[]", align 8
  %indirectarg330 = alloca %"char[]", align 8
  %l = alloca i64, align 8
  %indirectarg362 = alloca %"char[]", align 8
  %indirectarg363 = alloca %"char[]", align 8
  %indirectarg364 = alloca %"char[]", align 8
  %i391 = alloca i128, align 16
  %indirectarg394 = alloca %"char[]", align 8
  %indirectarg395 = alloca %"char[]", align 8
  %indirectarg396 = alloca %"char[]", align 8
  %c424 = alloca i8, align 1
  %indirectarg427 = alloca %"char[]", align 8
  %indirectarg428 = alloca %"char[]", align 8
  %indirectarg429 = alloca %"char[]", align 8
  %s444 = alloca i16, align 2
  %indirectarg447 = alloca %"char[]", align 8
  %indirectarg448 = alloca %"char[]", align 8
  %indirectarg449 = alloca %"char[]", align 8
  %i469 = alloca i32, align 4
  %indirectarg472 = alloca %"char[]", align 8
  %indirectarg473 = alloca %"char[]", align 8
  %indirectarg474 = alloca %"char[]", align 8
  %l494 = alloca i64, align 8
  %indirectarg497 = alloca %"char[]", align 8
  %indirectarg498 = alloca %"char[]", align 8
  %indirectarg499 = alloca %"char[]", align 8
  %i516 = alloca i128, align 16
  %indirectarg519 = alloca %"char[]", align 8
  %indirectarg520 = alloca %"char[]", align 8
  %indirectarg521 = alloca %"char[]", align 8
  %string534 = alloca %"char[]", align 8
  %indirectarg535 = alloca %"char[]", align 8
  %indirectarg536 = alloca %"char[]", align 8
  %indirectarg537 = alloca %"char[]", align 8
  %indirectarg538 = alloca %"any[]", align 8
  %indirectarg541 = alloca %"char[]", align 8
  %indirectarg542 = alloca %"char[]", align 8
  %indirectarg543 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg544 = alloca %"any[]", align 8
  %indirectarg551 = alloca %"char[]", align 8
  %indirectarg552 = alloca %"char[]", align 8
  %indirectarg553 = alloca %"char[]", align 8
  %indirectarg559 = alloca %"char[]", align 8
  %indirectarg560 = alloca %"char[]", align 8
  %indirectarg561 = alloca %"char[]", align 8
  %varargslots562 = alloca [1 x %any], align 16
  %indirectarg564 = alloca %"any[]", align 8
  %reterr566 = alloca i64, align 8
  %indirectarg572 = alloca %"char[]", align 8
  %indirectarg573 = alloca %"char[]", align 8
  %indirectarg574 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr580 = alloca i64, align 8
  %indirectarg581 = alloca %"char[]", align 8
  %indirectarg582 = alloca %"char[]", align 8
  %indirectarg583 = alloca %"char[]", align 8
  %varargslots584 = alloca [2 x %any], align 16
  %indirectarg587 = alloca %"any[]", align 8
  %retparam589 = alloca i64, align 8
  %indirectarg590 = alloca %"char[]", align 8
  %param = alloca ptr, align 8
  %reterr599 = alloca i64, align 8
  %retparam600 = alloca i64, align 8
  %indirectarg601 = alloca %"char[]", align 8
  %indirectarg607 = alloca %"char[]", align 8
  %indirectarg608 = alloca %"char[]", align 8
  %indirectarg609 = alloca %"char[]", align 8
  %retparam611 = alloca i64, align 8
  %indirectarg612 = alloca %"char[]", align 8
  %retparam616 = alloca i64, align 8
  %indirectarg617 = alloca %"char[]", align 8
  %reterr624 = alloca i64, align 8
  %retparam625 = alloca i64, align 8
  %indirectarg626 = alloca %"char[]", align 8
  %reterr632 = alloca i64, align 8
  %retparam633 = alloca i64, align 8
  %indirectarg634 = alloca %"char[]", align 8
  %reterr640 = alloca i64, align 8
  %retparam641 = alloca i64, align 8
  %indirectarg642 = alloca %"char[]", align 8
  %reterr648 = alloca i64, align 8
  %retparam649 = alloca i64, align 8
  %indirectarg650 = alloca %"char[]", align 8
  %reterr659 = alloca i64, align 8
  %indirectarg662 = alloca %"char[]", align 8
  %indirectarg663 = alloca %"char[]", align 8
  %indirectarg664 = alloca %"char[]", align 8
  %retparam666 = alloca i64, align 8
  %indirectarg667 = alloca %"char[]", align 8
  %reterr676 = alloca i64, align 8
  %indirectarg679 = alloca %"char[]", align 8
  %indirectarg680 = alloca %"char[]", align 8
  %indirectarg681 = alloca %"char[]", align 8
  %indirectarg685 = alloca %"char[]", align 8
  %indirectarg686 = alloca %"char[]", align 8
  %indirectarg687 = alloca %"char[]", align 8
  %sretparam = alloca %"char[]", align 8
  %retparam690 = alloca i64, align 8
  %indirectarg691 = alloca %"char[]", align 8
  %reterr700 = alloca i64, align 8
  %indirectarg703 = alloca %"char[]", align 8
  %indirectarg704 = alloca %"char[]", align 8
  %indirectarg705 = alloca %"char[]", align 8
  %indirectarg711 = alloca %"char[]", align 8
  %indirectarg712 = alloca %"char[]", align 8
  %indirectarg713 = alloca %"char[]", align 8
  %sretparam715 = alloca %"char[]", align 8
  %retparam719 = alloca i64, align 8
  %indirectarg720 = alloca %"char[]", align 8
  %reterr726 = alloca i64, align 8
  %self727 = alloca ptr, align 8
  %indirectarg730 = alloca %"char[]", align 8
  %indirectarg731 = alloca %"char[]", align 8
  %indirectarg732 = alloca %"char[]", align 8
  %indirectarg736 = alloca %"char[]", align 8
  %indirectarg737 = alloca %"char[]", align 8
  %indirectarg738 = alloca %"char[]", align 8
  %indirectarg759 = alloca %"char[]", align 8
  %indirectarg760 = alloca %"char[]", align 8
  %indirectarg761 = alloca %"char[]", align 8
  %retparam765 = alloca i64, align 8
  %indirectarg766 = alloca %any, align 8
  %inner = alloca i64, align 8
  %indirectarg791 = alloca %"char[]", align 8
  %indirectarg792 = alloca %"char[]", align 8
  %indirectarg793 = alloca %"char[]", align 8
  %pointer = alloca ptr, align 8
  %indirectarg816 = alloca %"char[]", align 8
  %indirectarg817 = alloca %"char[]", align 8
  %indirectarg818 = alloca %"char[]", align 8
  %deref = alloca %any, align 8
  %indirectarg826 = alloca %"char[]", align 8
  %indirectarg827 = alloca %"char[]", align 8
  %indirectarg828 = alloca %"char[]", align 8
  %ptr = alloca ptr, align 8
  %type = alloca i64, align 8
  %retparam830 = alloca i64, align 8
  %indirectarg831 = alloca %any, align 8
  %reterr839 = alloca i64, align 8
  %blockret841 = alloca i64, align 8
  %f842 = alloca i64, align 8
  %error_var855 = alloca i64, align 8
  %flags864 = alloca i32, align 4
  %indirectarg867 = alloca %"char[]", align 8
  %indirectarg868 = alloca %"char[]", align 8
  %indirectarg869 = alloca %"char[]", align 8
  %width872 = alloca i32, align 4
  %indirectarg875 = alloca %"char[]", align 8
  %indirectarg876 = alloca %"char[]", align 8
  %indirectarg877 = alloca %"char[]", align 8
  %indirectarg883 = alloca %"char[]", align 8
  %indirectarg884 = alloca %"char[]", align 8
  %indirectarg885 = alloca %"char[]", align 8
  %error_var889 = alloca i64, align 8
  %retparam890 = alloca i64, align 8
  %indirectarg891 = alloca %"char[]", align 8
  %indirectarg898 = alloca %"char[]", align 8
  %indirectarg899 = alloca %"char[]", align 8
  %indirectarg900 = alloca %"char[]", align 8
  %indirectarg905 = alloca %"char[]", align 8
  %indirectarg906 = alloca %"char[]", align 8
  %indirectarg907 = alloca %"char[]", align 8
  %reterr912 = alloca i64, align 8
  %retparam913 = alloca i64, align 8
  %indirectarg914 = alloca %any, align 8
  %indirectarg920 = alloca %"char[]", align 8
  %indirectarg921 = alloca %"char[]", align 8
  %indirectarg922 = alloca %"char[]", align 8
  %indirectarg927 = alloca %"char[]", align 8
  %indirectarg928 = alloca %"char[]", align 8
  %indirectarg929 = alloca %"char[]", align 8
  %indirectarg936 = alloca %"char[]", align 8
  %indirectarg937 = alloca %"char[]", align 8
  %indirectarg938 = alloca %"char[]", align 8
  %indirectarg943 = alloca %"char[]", align 8
  %indirectarg944 = alloca %"char[]", align 8
  %indirectarg945 = alloca %"char[]", align 8
  %flags950 = alloca i32, align 4
  %indirectarg953 = alloca %"char[]", align 8
  %indirectarg954 = alloca %"char[]", align 8
  %indirectarg955 = alloca %"char[]", align 8
  %width958 = alloca i32, align 4
  %indirectarg961 = alloca %"char[]", align 8
  %indirectarg962 = alloca %"char[]", align 8
  %indirectarg963 = alloca %"char[]", align 8
  %indirectarg969 = alloca %"char[]", align 8
  %indirectarg970 = alloca %"char[]", align 8
  %indirectarg971 = alloca %"char[]", align 8
  %indirectarg976 = alloca %"char[]", align 8
  %indirectarg977 = alloca %"char[]", align 8
  %indirectarg978 = alloca %"char[]", align 8
  %inner982 = alloca i64, align 8
  %indirectarg1002 = alloca %"char[]", align 8
  %indirectarg1003 = alloca %"char[]", align 8
  %indirectarg1004 = alloca %"char[]", align 8
  %size = alloca i64, align 8
  %alen = alloca i64, align 8
  %indirectarg1022 = alloca %"char[]", align 8
  %indirectarg1023 = alloca %"char[]", align 8
  %indirectarg1024 = alloca %"char[]", align 8
  %ptr1027 = alloca ptr, align 8
  %len = alloca i64, align 8
  %error_var1028 = alloca i64, align 8
  %retparam1029 = alloca i64, align 8
  %indirectarg1036 = alloca %"char[]", align 8
  %indirectarg1037 = alloca %"char[]", align 8
  %indirectarg1038 = alloca %"char[]", align 8
  %indirectarg1043 = alloca %"char[]", align 8
  %indirectarg1044 = alloca %"char[]", align 8
  %indirectarg1045 = alloca %"char[]", align 8
  %i1050 = alloca i64, align 8
  %error_var1054 = alloca i64, align 8
  %retparam1055 = alloca i64, align 8
  %indirectarg1056 = alloca %"char[]", align 8
  %indirectarg1063 = alloca %"char[]", align 8
  %indirectarg1064 = alloca %"char[]", align 8
  %indirectarg1065 = alloca %"char[]", align 8
  %indirectarg1070 = alloca %"char[]", align 8
  %indirectarg1071 = alloca %"char[]", align 8
  %indirectarg1072 = alloca %"char[]", align 8
  %error_var1079 = alloca i64, align 8
  %ptr1080 = alloca ptr, align 8
  %type1081 = alloca i64, align 8
  %retparam1082 = alloca i64, align 8
  %indirectarg1083 = alloca %any, align 8
  %indirectarg1090 = alloca %"char[]", align 8
  %indirectarg1091 = alloca %"char[]", align 8
  %indirectarg1092 = alloca %"char[]", align 8
  %indirectarg1097 = alloca %"char[]", align 8
  %indirectarg1098 = alloca %"char[]", align 8
  %indirectarg1099 = alloca %"char[]", align 8
  %error_var1106 = alloca i64, align 8
  %retparam1107 = alloca i64, align 8
  %indirectarg1114 = alloca %"char[]", align 8
  %indirectarg1115 = alloca %"char[]", align 8
  %indirectarg1116 = alloca %"char[]", align 8
  %indirectarg1121 = alloca %"char[]", align 8
  %indirectarg1122 = alloca %"char[]", align 8
  %indirectarg1123 = alloca %"char[]", align 8
  %reterr1129 = alloca i64, align 8
  %indirectarg1132 = alloca %"char[]", align 8
  %indirectarg1133 = alloca %"char[]", align 8
  %indirectarg1134 = alloca %"char[]", align 8
  %indirectarg1139 = alloca %"char[]", align 8
  %indirectarg1140 = alloca %"char[]", align 8
  %indirectarg1141 = alloca %"char[]", align 8
  %flags1146 = alloca i32, align 4
  %indirectarg1149 = alloca %"char[]", align 8
  %indirectarg1150 = alloca %"char[]", align 8
  %indirectarg1151 = alloca %"char[]", align 8
  %width1154 = alloca i32, align 4
  %indirectarg1157 = alloca %"char[]", align 8
  %indirectarg1158 = alloca %"char[]", align 8
  %indirectarg1159 = alloca %"char[]", align 8
  %indirectarg1165 = alloca %"char[]", align 8
  %indirectarg1166 = alloca %"char[]", align 8
  %indirectarg1167 = alloca %"char[]", align 8
  %indirectarg1172 = alloca %"char[]", align 8
  %indirectarg1173 = alloca %"char[]", align 8
  %indirectarg1174 = alloca %"char[]", align 8
  %inner1178 = alloca i64, align 8
  %indirectarg1198 = alloca %"char[]", align 8
  %indirectarg1199 = alloca %"char[]", align 8
  %indirectarg1200 = alloca %"char[]", align 8
  %size1204 = alloca i64, align 8
  %vlen = alloca i64, align 8
  %indirectarg1220 = alloca %"char[]", align 8
  %indirectarg1221 = alloca %"char[]", align 8
  %indirectarg1222 = alloca %"char[]", align 8
  %ptr1226 = alloca ptr, align 8
  %len1227 = alloca i64, align 8
  %error_var1228 = alloca i64, align 8
  %retparam1229 = alloca i64, align 8
  %indirectarg1230 = alloca %"char[]", align 8
  %indirectarg1237 = alloca %"char[]", align 8
  %indirectarg1238 = alloca %"char[]", align 8
  %indirectarg1239 = alloca %"char[]", align 8
  %indirectarg1244 = alloca %"char[]", align 8
  %indirectarg1245 = alloca %"char[]", align 8
  %indirectarg1246 = alloca %"char[]", align 8
  %i1251 = alloca i64, align 8
  %error_var1257 = alloca i64, align 8
  %retparam1258 = alloca i64, align 8
  %indirectarg1259 = alloca %"char[]", align 8
  %indirectarg1266 = alloca %"char[]", align 8
  %indirectarg1267 = alloca %"char[]", align 8
  %indirectarg1268 = alloca %"char[]", align 8
  %indirectarg1273 = alloca %"char[]", align 8
  %indirectarg1274 = alloca %"char[]", align 8
  %indirectarg1275 = alloca %"char[]", align 8
  %error_var1282 = alloca i64, align 8
  %ptr1283 = alloca ptr, align 8
  %type1284 = alloca i64, align 8
  %retparam1285 = alloca i64, align 8
  %indirectarg1286 = alloca %any, align 8
  %indirectarg1293 = alloca %"char[]", align 8
  %indirectarg1294 = alloca %"char[]", align 8
  %indirectarg1295 = alloca %"char[]", align 8
  %indirectarg1300 = alloca %"char[]", align 8
  %indirectarg1301 = alloca %"char[]", align 8
  %indirectarg1302 = alloca %"char[]", align 8
  %error_var1311 = alloca i64, align 8
  %retparam1312 = alloca i64, align 8
  %indirectarg1313 = alloca %"char[]", align 8
  %indirectarg1320 = alloca %"char[]", align 8
  %indirectarg1321 = alloca %"char[]", align 8
  %indirectarg1322 = alloca %"char[]", align 8
  %indirectarg1327 = alloca %"char[]", align 8
  %indirectarg1328 = alloca %"char[]", align 8
  %indirectarg1329 = alloca %"char[]", align 8
  %reterr1335 = alloca i64, align 8
  %indirectarg1338 = alloca %"char[]", align 8
  %indirectarg1339 = alloca %"char[]", align 8
  %indirectarg1340 = alloca %"char[]", align 8
  %indirectarg1345 = alloca %"char[]", align 8
  %indirectarg1346 = alloca %"char[]", align 8
  %indirectarg1347 = alloca %"char[]", align 8
  %inner1352 = alloca i64, align 8
  %indirectarg1372 = alloca %"char[]", align 8
  %indirectarg1373 = alloca %"char[]", align 8
  %indirectarg1374 = alloca %"char[]", align 8
  %flags1381 = alloca i32, align 4
  %indirectarg1384 = alloca %"char[]", align 8
  %indirectarg1385 = alloca %"char[]", align 8
  %indirectarg1386 = alloca %"char[]", align 8
  %width1389 = alloca i32, align 4
  %indirectarg1392 = alloca %"char[]", align 8
  %indirectarg1393 = alloca %"char[]", align 8
  %indirectarg1394 = alloca %"char[]", align 8
  %indirectarg1400 = alloca %"char[]", align 8
  %indirectarg1401 = alloca %"char[]", align 8
  %indirectarg1402 = alloca %"char[]", align 8
  %indirectarg1407 = alloca %"char[]", align 8
  %indirectarg1408 = alloca %"char[]", align 8
  %indirectarg1409 = alloca %"char[]", align 8
  %size1413 = alloca i64, align 8
  %temp = alloca ptr, align 8
  %ptr1418 = alloca ptr, align 8
  %indirectarg1421 = alloca %"char[]", align 8
  %indirectarg1422 = alloca %"char[]", align 8
  %indirectarg1423 = alloca %"char[]", align 8
  %slen = alloca i64, align 8
  %indirectarg1427 = alloca %"char[]", align 8
  %indirectarg1428 = alloca %"char[]", align 8
  %indirectarg1429 = alloca %"char[]", align 8
  %len1432 = alloca i64, align 8
  %error_var1433 = alloca i64, align 8
  %retparam1434 = alloca i64, align 8
  %indirectarg1441 = alloca %"char[]", align 8
  %indirectarg1442 = alloca %"char[]", align 8
  %indirectarg1443 = alloca %"char[]", align 8
  %indirectarg1448 = alloca %"char[]", align 8
  %indirectarg1449 = alloca %"char[]", align 8
  %indirectarg1450 = alloca %"char[]", align 8
  %i1455 = alloca i64, align 8
  %error_var1461 = alloca i64, align 8
  %retparam1462 = alloca i64, align 8
  %indirectarg1463 = alloca %"char[]", align 8
  %indirectarg1470 = alloca %"char[]", align 8
  %indirectarg1471 = alloca %"char[]", align 8
  %indirectarg1472 = alloca %"char[]", align 8
  %indirectarg1477 = alloca %"char[]", align 8
  %indirectarg1478 = alloca %"char[]", align 8
  %indirectarg1479 = alloca %"char[]", align 8
  %error_var1486 = alloca i64, align 8
  %ptr1487 = alloca ptr, align 8
  %type1488 = alloca i64, align 8
  %retparam1489 = alloca i64, align 8
  %indirectarg1490 = alloca %any, align 8
  %indirectarg1497 = alloca %"char[]", align 8
  %indirectarg1498 = alloca %"char[]", align 8
  %indirectarg1499 = alloca %"char[]", align 8
  %indirectarg1504 = alloca %"char[]", align 8
  %indirectarg1505 = alloca %"char[]", align 8
  %indirectarg1506 = alloca %"char[]", align 8
  %error_var1515 = alloca i64, align 8
  %retparam1516 = alloca i64, align 8
  %indirectarg1523 = alloca %"char[]", align 8
  %indirectarg1524 = alloca %"char[]", align 8
  %indirectarg1525 = alloca %"char[]", align 8
  %indirectarg1530 = alloca %"char[]", align 8
  %indirectarg1531 = alloca %"char[]", align 8
  %indirectarg1532 = alloca %"char[]", align 8
  %reterr1538 = alloca i64, align 8
  %indirectarg1541 = alloca %"char[]", align 8
  %indirectarg1542 = alloca %"char[]", align 8
  %indirectarg1543 = alloca %"char[]", align 8
  %indirectarg1548 = alloca %"char[]", align 8
  %indirectarg1549 = alloca %"char[]", align 8
  %indirectarg1550 = alloca %"char[]", align 8
  %string1555 = alloca %"char[]", align 8
  %indirectarg1556 = alloca %"char[]", align 8
  %indirectarg1557 = alloca %"char[]", align 8
  %indirectarg1558 = alloca %"char[]", align 8
  %indirectarg1559 = alloca %"any[]", align 8
  %reterr1561 = alloca i64, align 8
  %retparam1562 = alloca i64, align 8
  %indirectarg1563 = alloca %"char[]", align 8
  %3 = icmp eq ptr %1, null, !dbg !521
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !521
  br i1 %4, label %panic, label %checkok, !dbg !521

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !522, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.declare(metadata ptr %2, metadata !524, metadata !DIExpression()), !dbg !525
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !526
  %5 = load i64, ptr %ptradd, align 8, !dbg !526
  %"introspect*" = inttoptr i64 %5 to ptr, !dbg !526
  %typeid.kind = load i8, ptr %"introspect*", align 8, !dbg !526
  store i8 %typeid.kind, ptr %switch, align 1
  br label %switch.entry

switch.entry:                                     ; preds = %checkok
  %6 = load i8, ptr %switch, align 1
  switch i8 %6, label %switch.exit [
    i8 5, label %switch.case
    i8 0, label %switch.case4
    i8 6, label %switch.case12
    i8 9, label %switch.case12
    i8 20, label %switch.case25
    i8 7, label %switch.case25
    i8 14, label %switch.case39
    i8 2, label %switch.case44
    i8 3, label %switch.case44
    i8 4, label %switch.case116
    i8 1, label %switch.case196
  ]

switch.case:                                      ; preds = %switch.entry
  %7 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.63, i64 6 }, ptr %indirectarg3, align 8
  %8 = call i64 @std.io.Formatter.out_substr(ptr %retparam, ptr %7, ptr align 8 %indirectarg3), !dbg !528
  %not_err = icmp eq i64 %8, 0, !dbg !528
  %9 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !528
  br i1 %9, label %after_check, label %assign_optional, !dbg !528

assign_optional:                                  ; preds = %switch.case
  store i64 %8, ptr %reterr, align 8, !dbg !528
  br label %err_retblock, !dbg !528

after_check:                                      ; preds = %switch.case
  %10 = load i64, ptr %retparam, align 8, !dbg !528
  store i64 %10, ptr %0, align 8, !dbg !528
  ret i64 0, !dbg !528

err_retblock:                                     ; preds = %assign_optional
  %11 = load i64, ptr %reterr, align 8, !dbg !528
  ret i64 %11, !dbg !528

switch.case4:                                     ; preds = %switch.entry
  %12 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.64, i64 4 }, ptr %indirectarg7, align 8
  %13 = call i64 @std.io.Formatter.out_substr(ptr %retparam6, ptr %12, ptr align 8 %indirectarg7), !dbg !530
  %not_err8 = icmp eq i64 %13, 0, !dbg !530
  %14 = call i1 @llvm.expect.i1(i1 %not_err8, i1 true), !dbg !530
  br i1 %14, label %after_check10, label %assign_optional9, !dbg !530

assign_optional9:                                 ; preds = %switch.case4
  store i64 %13, ptr %reterr5, align 8, !dbg !530
  br label %err_retblock11, !dbg !530

after_check10:                                    ; preds = %switch.case4
  %15 = load i64, ptr %retparam6, align 8, !dbg !530
  store i64 %15, ptr %0, align 8, !dbg !530
  ret i64 0, !dbg !530

err_retblock11:                                   ; preds = %assign_optional9
  %16 = load i64, ptr %reterr5, align 8, !dbg !530
  ret i64 %16, !dbg !530

switch.case12:                                    ; preds = %switch.entry, %switch.entry
  %17 = load ptr, ptr %2, align 8, !dbg !532
  %checknull = icmp eq ptr %17, null, !dbg !532
  %18 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !532
  br i1 %18, label %panic14, label %checkok18, !dbg !532

checkok18:                                        ; preds = %switch.case12
  %19 = load i64, ptr %17, align 8, !dbg !534
  %eq = icmp eq i64 %19, 0
  br i1 %eq, label %faultname_no, label %faultname_ok

faultname_no:                                     ; preds = %checkok18
  call void @llvm.memset.p0.i64(ptr align 8 %faultname_zero, i8 0, i64 16, i1 false)
  br label %faultname_exit

faultname_ok:                                     ; preds = %checkok18
  %20 = inttoptr i64 %19 to ptr
  %21 = getelementptr inbounds %.fault, ptr %20, i32 0, i32 1
  br label %faultname_exit

faultname_exit:                                   ; preds = %faultname_ok, %faultname_no
  %faultname = phi ptr [ %faultname_zero, %faultname_no ], [ %21, %faultname_ok ]
  %22 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg20, ptr align 8 %faultname, i32 16, i1 false)
  %23 = call i64 @std.io.Formatter.out_substr(ptr %retparam19, ptr %22, ptr align 8 %indirectarg20), !dbg !535
  %not_err21 = icmp eq i64 %23, 0, !dbg !535
  %24 = call i1 @llvm.expect.i1(i1 %not_err21, i1 true), !dbg !535
  br i1 %24, label %after_check23, label %assign_optional22, !dbg !535

assign_optional22:                                ; preds = %faultname_exit
  store i64 %23, ptr %reterr13, align 8, !dbg !535
  br label %err_retblock24, !dbg !535

after_check23:                                    ; preds = %faultname_exit
  %25 = load i64, ptr %retparam19, align 8, !dbg !535
  store i64 %25, ptr %0, align 8, !dbg !535
  ret i64 0, !dbg !535

err_retblock24:                                   ; preds = %assign_optional22
  %26 = load i64, ptr %reterr13, align 8, !dbg !535
  ret i64 %26, !dbg !535

switch.case25:                                    ; preds = %switch.entry, %switch.entry
  %27 = load ptr, ptr %2, align 8, !dbg !536
  %checknull27 = icmp eq ptr %27, null, !dbg !536
  %28 = call i1 @llvm.expect.i1(i1 %checknull27, i1 false), !dbg !536
  br i1 %28, label %panic28, label %checkok32, !dbg !536

checkok32:                                        ; preds = %switch.case25
  %29 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg34, ptr align 8 %27, i32 16, i1 false)
  %30 = call i64 @std.io.Formatter.out_str(ptr %retparam33, ptr %29, ptr align 8 %indirectarg34), !dbg !538
  %not_err35 = icmp eq i64 %30, 0, !dbg !538
  %31 = call i1 @llvm.expect.i1(i1 %not_err35, i1 true), !dbg !538
  br i1 %31, label %after_check37, label %assign_optional36, !dbg !538

assign_optional36:                                ; preds = %checkok32
  store i64 %30, ptr %reterr26, align 8, !dbg !538
  br label %err_retblock38, !dbg !538

after_check37:                                    ; preds = %checkok32
  %32 = load i64, ptr %retparam33, align 8, !dbg !538
  store i64 %32, ptr %0, align 8, !dbg !538
  ret i64 0, !dbg !538

err_retblock38:                                   ; preds = %assign_optional36
  %33 = load i64, ptr %reterr26, align 8, !dbg !538
  ret i64 %33, !dbg !538

switch.case39:                                    ; preds = %switch.entry
  store %"char[]" { ptr @.str.67, i64 30 }, ptr %string, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg40, ptr align 8 %string, i32 16, i1 false)
  store %"char[]" { ptr @.str.68, i64 12 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.str.69, i64 17 }, ptr %indirectarg42, align 8
  store %"any[]" zeroinitializer, ptr %indirectarg43, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, i32 124, ptr align 8 %indirectarg43), !dbg !539
  unreachable, !dbg !543

switch.case44:                                    ; preds = %switch.entry, %switch.entry
  call void @llvm.dbg.declare(metadata ptr %flags, metadata !544, metadata !DIExpression()), !dbg !546
  %34 = load ptr, ptr %self, align 8, !dbg !547
  %checknull45 = icmp eq ptr %34, null, !dbg !547
  %35 = call i1 @llvm.expect.i1(i1 %checknull45, i1 false), !dbg !547
  br i1 %35, label %panic46, label %checkok50, !dbg !547

checkok50:                                        ; preds = %switch.case44
  %ptradd51 = getelementptr inbounds i8, ptr %34, i64 16, !dbg !547
  %36 = load i32, ptr %ptradd51, align 8, !dbg !547
  store i32 %36, ptr %flags, align 4, !dbg !547
  call void @llvm.dbg.declare(metadata ptr %width, metadata !548, metadata !DIExpression()), !dbg !549
  %37 = load ptr, ptr %self, align 8, !dbg !550
  %checknull52 = icmp eq ptr %37, null, !dbg !550
  %38 = call i1 @llvm.expect.i1(i1 %checknull52, i1 false), !dbg !550
  br i1 %38, label %panic53, label %checkok57, !dbg !550

checkok57:                                        ; preds = %checkok50
  %ptradd58 = getelementptr inbounds i8, ptr %37, i64 16, !dbg !550
  %ptradd59 = getelementptr inbounds i8, ptr %ptradd58, i64 4, !dbg !550
  %39 = load i32, ptr %ptradd59, align 4, !dbg !550
  store i32 %39, ptr %width, align 4, !dbg !550
  %40 = load ptr, ptr %self, align 8, !dbg !551
  %checknull60 = icmp eq ptr %40, null, !dbg !551
  %41 = call i1 @llvm.expect.i1(i1 %checknull60, i1 false), !dbg !551
  br i1 %41, label %panic61, label %checkok65, !dbg !551

checkok65:                                        ; preds = %checkok57
  %ptradd66 = getelementptr inbounds i8, ptr %40, i64 16, !dbg !551
  store i32 0, ptr %ptradd66, align 8, !dbg !551
  %42 = load ptr, ptr %self, align 8, !dbg !552
  %checknull67 = icmp eq ptr %42, null, !dbg !552
  %43 = call i1 @llvm.expect.i1(i1 %checknull67, i1 false), !dbg !552
  br i1 %43, label %panic68, label %checkok72, !dbg !552

checkok72:                                        ; preds = %checkok65
  %ptradd73 = getelementptr inbounds i8, ptr %42, i64 16, !dbg !552
  %ptradd74 = getelementptr inbounds i8, ptr %ptradd73, i64 4, !dbg !552
  store i32 0, ptr %ptradd74, align 4, !dbg !553
  %44 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg77, ptr align 8 %2, i32 16, i1 false)
  %45 = call i64 @std.io.Formatter.ntoa_any(ptr %retparam76, ptr %44, ptr align 8 %indirectarg77, i32 10), !dbg !554
  %not_err78 = icmp eq i64 %45, 0, !dbg !554
  %46 = call i1 @llvm.expect.i1(i1 %not_err78, i1 true), !dbg !554
  br i1 %46, label %after_check79, label %else_block, !dbg !554

after_check79:                                    ; preds = %checkok72
  %47 = load i64, ptr %retparam76, align 8, !dbg !554
  br label %phi_block, !dbg !554

else_block:                                       ; preds = %checkok72
  %48 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.70, i64 9 }, ptr %indirectarg81, align 8
  %49 = call i64 @std.io.Formatter.out_substr(ptr %retparam80, ptr %48, ptr align 8 %indirectarg81), !dbg !555
  %not_err82 = icmp eq i64 %49, 0, !dbg !555
  %50 = call i1 @llvm.expect.i1(i1 %not_err82, i1 true), !dbg !555
  br i1 %50, label %after_check84, label %assign_optional83, !dbg !555

assign_optional83:                                ; preds = %else_block
  store i64 %49, ptr %reterr75, align 8, !dbg !555
  br label %err_retblock100, !dbg !555

after_check84:                                    ; preds = %else_block
  %51 = load i64, ptr %retparam80, align 8, !dbg !555
  br label %phi_block, !dbg !555

phi_block:                                        ; preds = %after_check84, %after_check79
  %val = phi i64 [ %47, %after_check79 ], [ %51, %after_check84 ], !dbg !555
  %52 = load ptr, ptr %self, align 8, !dbg !556
  %checknull85 = icmp eq ptr %52, null, !dbg !556
  %53 = call i1 @llvm.expect.i1(i1 %checknull85, i1 false), !dbg !556
  br i1 %53, label %panic86, label %checkok90, !dbg !556

checkok90:                                        ; preds = %phi_block
  %ptradd91 = getelementptr inbounds i8, ptr %52, i64 16, !dbg !556
  %54 = load i32, ptr %flags, align 4, !dbg !558
  store i32 %54, ptr %ptradd91, align 8, !dbg !558
  %55 = load ptr, ptr %self, align 8, !dbg !559
  %checknull92 = icmp eq ptr %55, null, !dbg !559
  %56 = call i1 @llvm.expect.i1(i1 %checknull92, i1 false), !dbg !559
  br i1 %56, label %panic93, label %checkok97, !dbg !559

checkok97:                                        ; preds = %checkok90
  %ptradd98 = getelementptr inbounds i8, ptr %55, i64 16, !dbg !559
  %ptradd99 = getelementptr inbounds i8, ptr %ptradd98, i64 4, !dbg !559
  %57 = load i32, ptr %width, align 4, !dbg !560
  store i32 %57, ptr %ptradd99, align 4, !dbg !560
  store i64 %val, ptr %0, align 8, !dbg !560
  ret i64 0, !dbg !560

err_retblock100:                                  ; preds = %assign_optional83
  %58 = load ptr, ptr %self, align 8, !dbg !561
  %checknull101 = icmp eq ptr %58, null, !dbg !561
  %59 = call i1 @llvm.expect.i1(i1 %checknull101, i1 false), !dbg !561
  br i1 %59, label %panic102, label %checkok106, !dbg !561

checkok106:                                       ; preds = %err_retblock100
  %ptradd107 = getelementptr inbounds i8, ptr %58, i64 16, !dbg !561
  %60 = load i32, ptr %flags, align 4, !dbg !563
  store i32 %60, ptr %ptradd107, align 8, !dbg !563
  %61 = load ptr, ptr %self, align 8, !dbg !564
  %checknull108 = icmp eq ptr %61, null, !dbg !564
  %62 = call i1 @llvm.expect.i1(i1 %checknull108, i1 false), !dbg !564
  br i1 %62, label %panic109, label %checkok113, !dbg !564

checkok113:                                       ; preds = %checkok106
  %ptradd114 = getelementptr inbounds i8, ptr %61, i64 16, !dbg !564
  %ptradd115 = getelementptr inbounds i8, ptr %ptradd114, i64 4, !dbg !564
  %63 = load i32, ptr %width, align 4, !dbg !565
  store i32 %63, ptr %ptradd115, align 4, !dbg !565
  %64 = load i64, ptr %reterr75, align 8, !dbg !565
  ret i64 %64, !dbg !565

switch.case116:                                   ; preds = %switch.entry
  call void @llvm.dbg.declare(metadata ptr %flags117, metadata !566, metadata !DIExpression()), !dbg !568
  %65 = load ptr, ptr %self, align 8, !dbg !569
  %checknull118 = icmp eq ptr %65, null, !dbg !569
  %66 = call i1 @llvm.expect.i1(i1 %checknull118, i1 false), !dbg !569
  br i1 %66, label %panic119, label %checkok123, !dbg !569

checkok123:                                       ; preds = %switch.case116
  %ptradd124 = getelementptr inbounds i8, ptr %65, i64 16, !dbg !569
  %67 = load i32, ptr %ptradd124, align 8, !dbg !569
  store i32 %67, ptr %flags117, align 4, !dbg !569
  call void @llvm.dbg.declare(metadata ptr %width125, metadata !570, metadata !DIExpression()), !dbg !571
  %68 = load ptr, ptr %self, align 8, !dbg !572
  %checknull126 = icmp eq ptr %68, null, !dbg !572
  %69 = call i1 @llvm.expect.i1(i1 %checknull126, i1 false), !dbg !572
  br i1 %69, label %panic127, label %checkok131, !dbg !572

checkok131:                                       ; preds = %checkok123
  %ptradd132 = getelementptr inbounds i8, ptr %68, i64 16, !dbg !572
  %ptradd133 = getelementptr inbounds i8, ptr %ptradd132, i64 4, !dbg !572
  %70 = load i32, ptr %ptradd133, align 4, !dbg !572
  store i32 %70, ptr %width125, align 4, !dbg !572
  %71 = load ptr, ptr %self, align 8, !dbg !573
  %checknull134 = icmp eq ptr %71, null, !dbg !573
  %72 = call i1 @llvm.expect.i1(i1 %checknull134, i1 false), !dbg !573
  br i1 %72, label %panic135, label %checkok139, !dbg !573

checkok139:                                       ; preds = %checkok131
  %ptradd140 = getelementptr inbounds i8, ptr %71, i64 16, !dbg !573
  store i32 0, ptr %ptradd140, align 8, !dbg !573
  %73 = load ptr, ptr %self, align 8, !dbg !574
  %checknull141 = icmp eq ptr %73, null, !dbg !574
  %74 = call i1 @llvm.expect.i1(i1 %checknull141, i1 false), !dbg !574
  br i1 %74, label %panic142, label %checkok146, !dbg !574

checkok146:                                       ; preds = %checkok139
  %ptradd147 = getelementptr inbounds i8, ptr %73, i64 16, !dbg !574
  %ptradd148 = getelementptr inbounds i8, ptr %ptradd147, i64 4, !dbg !574
  store i32 0, ptr %ptradd148, align 4, !dbg !575
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg151, ptr align 8 %2, i32 16, i1 false)
  %75 = call i64 @std.io.float_from_any(ptr %retparam150, ptr align 8 %indirectarg151), !dbg !576
  %not_err152 = icmp eq i64 %75, 0, !dbg !576
  %76 = call i1 @llvm.expect.i1(i1 %not_err152, i1 true), !dbg !576
  br i1 %76, label %after_check153, label %else_block157, !dbg !576

after_check153:                                   ; preds = %checkok146
  %77 = load ptr, ptr %self, align 8
  %78 = load double, ptr %retparam150, align 8
  %79 = call i64 @std.io.Formatter.ftoa(ptr %retparam154, ptr %77, double %78), !dbg !577
  %not_err155 = icmp eq i64 %79, 0, !dbg !577
  %80 = call i1 @llvm.expect.i1(i1 %not_err155, i1 true), !dbg !577
  br i1 %80, label %after_check156, label %else_block157, !dbg !577

after_check156:                                   ; preds = %after_check153
  %81 = load i64, ptr %retparam154, align 8, !dbg !577
  br label %phi_block163, !dbg !577

else_block157:                                    ; preds = %after_check153, %checkok146
  %82 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.71, i64 3 }, ptr %indirectarg159, align 8
  %83 = call i64 @std.io.Formatter.out_substr(ptr %retparam158, ptr %82, ptr align 8 %indirectarg159), !dbg !578
  %not_err160 = icmp eq i64 %83, 0, !dbg !578
  %84 = call i1 @llvm.expect.i1(i1 %not_err160, i1 true), !dbg !578
  br i1 %84, label %after_check162, label %assign_optional161, !dbg !578

assign_optional161:                               ; preds = %else_block157
  store i64 %83, ptr %reterr149, align 8, !dbg !578
  br label %err_retblock180, !dbg !578

after_check162:                                   ; preds = %else_block157
  %85 = load i64, ptr %retparam158, align 8, !dbg !578
  br label %phi_block163, !dbg !578

phi_block163:                                     ; preds = %after_check162, %after_check156
  %val164 = phi i64 [ %81, %after_check156 ], [ %85, %after_check162 ], !dbg !578
  %86 = load ptr, ptr %self, align 8, !dbg !579
  %checknull165 = icmp eq ptr %86, null, !dbg !579
  %87 = call i1 @llvm.expect.i1(i1 %checknull165, i1 false), !dbg !579
  br i1 %87, label %panic166, label %checkok170, !dbg !579

checkok170:                                       ; preds = %phi_block163
  %ptradd171 = getelementptr inbounds i8, ptr %86, i64 16, !dbg !579
  %88 = load i32, ptr %flags117, align 4, !dbg !581
  store i32 %88, ptr %ptradd171, align 8, !dbg !581
  %89 = load ptr, ptr %self, align 8, !dbg !582
  %checknull172 = icmp eq ptr %89, null, !dbg !582
  %90 = call i1 @llvm.expect.i1(i1 %checknull172, i1 false), !dbg !582
  br i1 %90, label %panic173, label %checkok177, !dbg !582

checkok177:                                       ; preds = %checkok170
  %ptradd178 = getelementptr inbounds i8, ptr %89, i64 16, !dbg !582
  %ptradd179 = getelementptr inbounds i8, ptr %ptradd178, i64 4, !dbg !582
  %91 = load i32, ptr %width125, align 4, !dbg !583
  store i32 %91, ptr %ptradd179, align 4, !dbg !583
  store i64 %val164, ptr %0, align 8, !dbg !583
  ret i64 0, !dbg !583

err_retblock180:                                  ; preds = %assign_optional161
  %92 = load ptr, ptr %self, align 8, !dbg !584
  %checknull181 = icmp eq ptr %92, null, !dbg !584
  %93 = call i1 @llvm.expect.i1(i1 %checknull181, i1 false), !dbg !584
  br i1 %93, label %panic182, label %checkok186, !dbg !584

checkok186:                                       ; preds = %err_retblock180
  %ptradd187 = getelementptr inbounds i8, ptr %92, i64 16, !dbg !584
  %94 = load i32, ptr %flags117, align 4, !dbg !586
  store i32 %94, ptr %ptradd187, align 8, !dbg !586
  %95 = load ptr, ptr %self, align 8, !dbg !587
  %checknull188 = icmp eq ptr %95, null, !dbg !587
  %96 = call i1 @llvm.expect.i1(i1 %checknull188, i1 false), !dbg !587
  br i1 %96, label %panic189, label %checkok193, !dbg !587

checkok193:                                       ; preds = %checkok186
  %ptradd194 = getelementptr inbounds i8, ptr %95, i64 16, !dbg !587
  %ptradd195 = getelementptr inbounds i8, ptr %ptradd194, i64 4, !dbg !587
  %97 = load i32, ptr %width125, align 4, !dbg !588
  store i32 %97, ptr %ptradd195, align 4, !dbg !588
  %98 = load i64, ptr %reterr149, align 8, !dbg !588
  ret i64 %98, !dbg !588

switch.case196:                                   ; preds = %switch.entry
  %99 = load ptr, ptr %2, align 8, !dbg !589
  %checknull198 = icmp eq ptr %99, null, !dbg !589
  %100 = call i1 @llvm.expect.i1(i1 %checknull198, i1 false), !dbg !589
  br i1 %100, label %panic199, label %checkok203, !dbg !589

checkok203:                                       ; preds = %switch.case196
  %101 = load i8, ptr %99, align 1, !dbg !591
  %102 = trunc i8 %101 to i1, !dbg !591
  %ternary = select i1 %102, %"char[]" { ptr @.str.73, i64 4 }, %"char[]" { ptr @.str.74, i64 5 }, !dbg !592
  %103 = load ptr, ptr %self, align 8
  store %"char[]" %ternary, ptr %indirectarg205, align 8
  %104 = call i64 @std.io.Formatter.out_substr(ptr %retparam204, ptr %103, ptr align 8 %indirectarg205), !dbg !593
  %not_err206 = icmp eq i64 %104, 0, !dbg !593
  %105 = call i1 @llvm.expect.i1(i1 %not_err206, i1 true), !dbg !593
  br i1 %105, label %after_check208, label %assign_optional207, !dbg !593

assign_optional207:                               ; preds = %checkok203
  store i64 %104, ptr %reterr197, align 8, !dbg !593
  br label %err_retblock209, !dbg !593

after_check208:                                   ; preds = %checkok203
  %106 = load i64, ptr %retparam204, align 8, !dbg !593
  store i64 %106, ptr %0, align 8, !dbg !593
  ret i64 0, !dbg !593

err_retblock209:                                  ; preds = %assign_optional207
  %107 = load i64, ptr %reterr197, align 8, !dbg !593
  ret i64 %107, !dbg !593

switch.exit:                                      ; preds = %switch.entry
  call void @llvm.dbg.declare(metadata ptr %n, metadata !594, metadata !DIExpression()), !dbg !595
  %108 = load %any, ptr %2, align 8, !dbg !596
  %109 = load ptr, ptr %self, align 8
  store %any %108, ptr %indirectarg211, align 8
  %110 = call i64 @std.io.Formatter.print_with_function(ptr %retparam210, ptr %109, ptr align 8 %indirectarg211), !dbg !597
  %not_err212 = icmp eq i64 %110, 0, !dbg !597
  %111 = call i1 @llvm.expect.i1(i1 %not_err212, i1 true), !dbg !597
  br i1 %111, label %after_check214, label %assign_optional213, !dbg !597

assign_optional213:                               ; preds = %switch.exit
  store i64 %110, ptr %n.f, align 8, !dbg !597
  br label %after_assign, !dbg !597

after_check214:                                   ; preds = %switch.exit
  %112 = load i64, ptr %retparam210, align 8, !dbg !597
  store i64 %112, ptr %n, align 8, !dbg !597
  store i64 0, ptr %n.f, align 8, !dbg !597
  br label %after_assign, !dbg !597

after_assign:                                     ; preds = %after_check214, %assign_optional213
  %load.err = load i64, ptr %n.f, align 8, !dbg !598
  %result = icmp eq i64 %load.err, 0, !dbg !598
  br i1 %result, label %if.then, label %if.exit, !dbg !598

if.then:                                          ; preds = %after_assign
  %113 = load i64, ptr %n, align 8, !dbg !599
  store i64 %113, ptr %0, align 8, !dbg !599
  ret i64 0, !dbg !599

if.exit:                                          ; preds = %after_assign
  call void @llvm.dbg.declare(metadata ptr %f, metadata !600, metadata !DIExpression()), !dbg !602
  br label %testblock, !dbg !602

testblock:                                        ; preds = %if.exit
  %optval = load i64, ptr %n.f, align 8, !dbg !604
  %not_err216 = icmp eq i64 %optval, 0, !dbg !604
  %114 = call i1 @llvm.expect.i1(i1 %not_err216, i1 true), !dbg !604
  br i1 %114, label %after_check218, label %assign_optional217, !dbg !604

assign_optional217:                               ; preds = %testblock
  store i64 %optval, ptr %f, align 8, !dbg !604
  br label %end_block, !dbg !604

after_check218:                                   ; preds = %testblock
  store i64 0, ptr %f, align 8, !dbg !604
  br label %end_block, !dbg !604

end_block:                                        ; preds = %after_check218, %assign_optional217
  %115 = load i64, ptr %f, align 8, !dbg !604
  %neq = icmp ne i64 %115, 0, !dbg !604
  br i1 %neq, label %if.then219, label %if.exit220, !dbg !604

if.then219:                                       ; preds = %end_block
  %116 = load i64, ptr %f, align 8, !dbg !605
  store i64 %116, ptr %blockret, align 8, !dbg !605
  br label %expr_block.exit, !dbg !605

if.exit220:                                       ; preds = %end_block
  store i64 0, ptr %blockret, align 8, !dbg !606
  br label %expr_block.exit, !dbg !606

expr_block.exit:                                  ; preds = %if.exit220, %if.then219
  %117 = load i64, ptr %blockret, align 8, !dbg !606
  %neq221 = icmp ne i64 %117, ptrtoint (ptr @"std.core.builtin.SearchResult$MISSING" to i64), !dbg !603
  br i1 %neq221, label %if.then222, label %if.exit227, !dbg !603

if.then222:                                       ; preds = %expr_block.exit
  %optval223 = load i64, ptr %n.f, align 8, !dbg !607
  %not_err224 = icmp eq i64 %optval223, 0, !dbg !607
  %118 = call i1 @llvm.expect.i1(i1 %not_err224, i1 true), !dbg !607
  br i1 %118, label %after_check226, label %assign_optional225, !dbg !607

assign_optional225:                               ; preds = %if.then222
  store i64 %optval223, ptr %error_var, align 8, !dbg !607
  br label %guard_block, !dbg !607

after_check226:                                   ; preds = %if.then222
  br label %noerr_block, !dbg !607

guard_block:                                      ; preds = %assign_optional225
  %119 = load i64, ptr %error_var, align 8, !dbg !607
  ret i64 %119, !dbg !607

noerr_block:                                      ; preds = %after_check226
  br label %if.exit227, !dbg !607

if.exit227:                                       ; preds = %noerr_block, %expr_block.exit
  %ptradd228 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !608
  %120 = load i64, ptr %ptradd228, align 8, !dbg !608
  %"introspect*229" = inttoptr i64 %120 to ptr, !dbg !608
  %typeid.kind230 = load i8, ptr %"introspect*229", align 8, !dbg !608
  store i8 %typeid.kind230, ptr %switch231, align 1
  br label %switch.entry232

switch.entry232:                                  ; preds = %if.exit227
  %121 = load i8, ptr %switch231, align 1
  switch i8 %121, label %switch.exit1560 [
    i8 8, label %switch.case233
    i8 10, label %switch.case595
    i8 11, label %switch.case631
    i8 12, label %switch.case639
    i8 13, label %switch.case647
    i8 18, label %switch.case655
    i8 19, label %switch.case771
    i8 15, label %switch.case949
    i8 17, label %switch.case1145
    i8 16, label %switch.case1351
    i8 7, label %switch.case1554
    i8 20, label %switch.case1554
  ]

switch.case233:                                   ; preds = %switch.entry232
  call void @llvm.dbg.declare(metadata ptr %i, metadata !610, metadata !DIExpression()), !dbg !612
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %v, ptr align 8 %2, i32 16, i1 false)
  %122 = call i8 @std.core.types.TypeKind.is_int(i8 3) #5, !dbg !613
  %123 = trunc i8 %122 to i1, !dbg !613
  br i1 %123, label %or.phi, label %or.rhs, !dbg !613

or.rhs:                                           ; preds = %switch.case233
  br label %or.phi, !dbg !618

or.phi:                                           ; preds = %or.rhs, %switch.case233
  %val236 = phi i1 [ true, %switch.case233 ], [ false, %or.rhs ], !dbg !618
  br i1 %val236, label %assert_ok, label %assert_fail, !dbg !618

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.75, i64 106 }, ptr %indirectarg237, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg238, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg239, align 8
  %124 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %124(ptr align 8 %indirectarg237, ptr align 8 %indirectarg238, ptr align 8 %indirectarg239, i32 12), !dbg !613
  unreachable, !dbg !613

assert_ok:                                        ; preds = %or.phi
  call void @llvm.dbg.declare(metadata ptr %any_type, metadata !619, metadata !DIExpression()), !dbg !620
  %ptradd240 = getelementptr inbounds i8, ptr %v, i64 8, !dbg !621
  %125 = load i64, ptr %ptradd240, align 8, !dbg !621
  store i64 %125, ptr %any_type, align 8, !dbg !621
  call void @llvm.dbg.declare(metadata ptr %kind, metadata !622, metadata !DIExpression()), !dbg !623
  %126 = load i64, ptr %any_type, align 8, !dbg !624
  %"introspect*241" = inttoptr i64 %126 to ptr, !dbg !624
  %typeid.kind242 = load i8, ptr %"introspect*241", align 8, !dbg !624
  store i8 %typeid.kind242, ptr %kind, align 1, !dbg !624
  %127 = load i8, ptr %kind, align 1, !dbg !625
  %eq243 = icmp eq i8 %127, 8, !dbg !625
  br i1 %eq243, label %if.then244, label %if.exit268, !dbg !625

if.then244:                                       ; preds = %assert_ok
  %128 = load i64, ptr %any_type, align 8, !dbg !626
  %"introspect*245" = inttoptr i64 %128 to ptr, !dbg !626
  %typeid.kind246 = load i8, ptr %"introspect*245", align 8, !dbg !626
  %eq247 = icmp eq i8 %typeid.kind246, 15, !dbg !626
  br i1 %eq247, label %check_type_ok, label %check_next, !dbg !626

check_next:                                       ; preds = %if.then244
  %eq248 = icmp eq i8 %typeid.kind246, 19, !dbg !626
  br i1 %eq248, label %check_type_ok, label %check_next249, !dbg !626

check_next249:                                    ; preds = %check_next
  %eq250 = icmp eq i8 %typeid.kind246, 17, !dbg !626
  br i1 %eq250, label %check_type_ok, label %check_next251, !dbg !626

check_next251:                                    ; preds = %check_next249
  %eq252 = icmp eq i8 %typeid.kind246, 8, !dbg !626
  br i1 %eq252, label %check_type_ok, label %check_next253, !dbg !626

check_next253:                                    ; preds = %check_next251
  %eq254 = icmp eq i8 %typeid.kind246, 16, !dbg !626
  br i1 %eq254, label %check_type_ok, label %check_next255, !dbg !626

check_next255:                                    ; preds = %check_next253
  %eq256 = icmp eq i8 %typeid.kind246, 18, !dbg !626
  br i1 %eq256, label %check_type_ok, label %check_next257, !dbg !626

check_next257:                                    ; preds = %check_next255
  %eq258 = icmp eq i8 %typeid.kind246, 14, !dbg !626
  br i1 %eq258, label %check_type_ok, label %check_next259, !dbg !626

check_next259:                                    ; preds = %check_next257
  %eq260 = icmp eq i8 %typeid.kind246, 12, !dbg !626
  br i1 %eq260, label %check_type_ok, label %check_next261, !dbg !626

check_next261:                                    ; preds = %check_next259
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg262, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg263, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg264, align 8
  %129 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %129(ptr align 8 %indirectarg262, ptr align 8 %indirectarg263, ptr align 8 %indirectarg264, i32 20), !dbg !626
  unreachable, !dbg !626

check_type_ok:                                    ; preds = %check_next259, %check_next257, %check_next255, %check_next253, %check_next251, %check_next249, %check_next, %if.then244
  %ptradd265 = getelementptr inbounds i8, ptr %"introspect*245", i64 32, !dbg !626
  %typeid.inner = load i64, ptr %ptradd265, align 8, !dbg !626
  store i64 %typeid.inner, ptr %any_type, align 8, !dbg !626
  %130 = load i64, ptr %any_type, align 8, !dbg !628
  %"introspect*266" = inttoptr i64 %130 to ptr, !dbg !628
  %typeid.kind267 = load i8, ptr %"introspect*266", align 8, !dbg !628
  store i8 %typeid.kind267, ptr %kind, align 1, !dbg !628
  br label %if.exit268, !dbg !628

if.exit268:                                       ; preds = %check_type_ok, %assert_ok
  call void @llvm.dbg.declare(metadata ptr %is_mixed_signed, metadata !629, metadata !DIExpression()), !dbg !630
  %131 = load i64, ptr %any_type, align 8, !dbg !631
  %"introspect*269" = inttoptr i64 %131 to ptr, !dbg !631
  %typeid.kind270 = load i8, ptr %"introspect*269", align 8, !dbg !631
  %neq271 = icmp ne i8 3, %typeid.kind270, !dbg !632
  %132 = zext i1 %neq271 to i8, !dbg !632
  store i8 %132, ptr %is_mixed_signed, align 1, !dbg !632
  call void @llvm.dbg.declare(metadata ptr %max, metadata !633, metadata !DIExpression()), !dbg !634
  store i64 -1, ptr %max, align 8, !dbg !635
  call void @llvm.dbg.declare(metadata ptr %min, metadata !636, metadata !DIExpression()), !dbg !637
  store i64 0, ptr %min, align 8, !dbg !638
  %133 = load i64, ptr %any_type, align 8
  store i64 %133, ptr %switch272, align 8
  br label %switch.entry273

switch.entry273:                                  ; preds = %if.exit268
  %134 = load i64, ptr %switch272, align 8
  br label %check_subtype, !dbg !639

check_subtype:                                    ; preds = %parent_type_block, %switch.entry273
  %135 = phi i64 [ %134, %switch.entry273 ], [ %typeid.parent, %parent_type_block ], !dbg !639
  %eq274 = icmp eq i64 ptrtoint (ptr @"$ct.ichar" to i64), %135, !dbg !639
  br i1 %eq274, label %result_block, label %parent_type_block, !dbg !639

parent_type_block:                                ; preds = %check_subtype
  %136 = inttoptr i64 %135 to ptr, !dbg !639
  %ptradd275 = getelementptr inbounds i8, ptr %136, i64 8, !dbg !639
  %typeid.parent = load i64, ptr %ptradd275, align 8, !dbg !639
  %137 = icmp eq i64 %typeid.parent, 0, !dbg !639
  br i1 %137, label %result_block, label %check_subtype, !dbg !639

result_block:                                     ; preds = %parent_type_block, %check_subtype
  %138 = phi i1 [ false, %parent_type_block ], [ true, %check_subtype ], !dbg !639
  br i1 %138, label %switch.case276, label %next_if, !dbg !639

switch.case276:                                   ; preds = %result_block
  call void @llvm.dbg.declare(metadata ptr %c, metadata !641, metadata !DIExpression()), !dbg !644
  %139 = load ptr, ptr %v, align 8, !dbg !645
  %checknull277 = icmp eq ptr %139, null, !dbg !645
  %140 = call i1 @llvm.expect.i1(i1 %checknull277, i1 false), !dbg !645
  br i1 %140, label %panic278, label %checkok282, !dbg !645

checkok282:                                       ; preds = %switch.case276
  %141 = load i8, ptr %139, align 1, !dbg !646
  store i8 %141, ptr %c, align 1, !dbg !646
  %142 = load i8, ptr %is_mixed_signed, align 1, !dbg !647
  %143 = trunc i8 %142 to i1, !dbg !647
  br i1 %143, label %and.rhs, label %and.phi, !dbg !647

and.rhs:                                          ; preds = %checkok282
  %144 = load i8, ptr %c, align 1, !dbg !648
  %sext = sext i8 %144 to i32, !dbg !648
  %lt = icmp slt i32 %sext, 0, !dbg !648
  br label %and.phi, !dbg !648

and.phi:                                          ; preds = %and.rhs, %checkok282
  %val283 = phi i1 [ false, %checkok282 ], [ %lt, %and.rhs ], !dbg !648
  br i1 %val283, label %if.then284, label %if.exit285, !dbg !648

if.then284:                                       ; preds = %and.phi
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" to i64), ptr %error_var234, align 8, !dbg !649
  br label %panic_block, !dbg !649

if.exit285:                                       ; preds = %and.phi
  %145 = load i8, ptr %c, align 1, !dbg !650
  %sext286 = sext i8 %145 to i64, !dbg !650
  store i64 %sext286, ptr %blockret235, align 8, !dbg !650
  br label %expr_block.exit540, !dbg !650

next_if:                                          ; preds = %result_block
  br label %check_subtype287, !dbg !651

check_subtype287:                                 ; preds = %parent_type_block289, %next_if
  %146 = phi i64 [ %134, %next_if ], [ %typeid.parent291, %parent_type_block289 ], !dbg !651
  %eq288 = icmp eq i64 ptrtoint (ptr @"$ct.short" to i64), %146, !dbg !651
  br i1 %eq288, label %result_block292, label %parent_type_block289, !dbg !651

parent_type_block289:                             ; preds = %check_subtype287
  %147 = inttoptr i64 %146 to ptr, !dbg !651
  %ptradd290 = getelementptr inbounds i8, ptr %147, i64 8, !dbg !651
  %typeid.parent291 = load i64, ptr %ptradd290, align 8, !dbg !651
  %148 = icmp eq i64 %typeid.parent291, 0, !dbg !651
  br i1 %148, label %result_block292, label %check_subtype287, !dbg !651

result_block292:                                  ; preds = %parent_type_block289, %check_subtype287
  %149 = phi i1 [ false, %parent_type_block289 ], [ true, %check_subtype287 ], !dbg !651
  br i1 %149, label %switch.case293, label %next_if317, !dbg !651

switch.case293:                                   ; preds = %result_block292
  call void @llvm.dbg.declare(metadata ptr %s, metadata !652, metadata !DIExpression()), !dbg !655
  %150 = load ptr, ptr %v, align 8, !dbg !656
  %checknull294 = icmp eq ptr %150, null, !dbg !656
  %151 = call i1 @llvm.expect.i1(i1 %checknull294, i1 false), !dbg !656
  br i1 %151, label %panic295, label %checkok299, !dbg !656

checkok299:                                       ; preds = %switch.case293
  %152 = load i16, ptr %150, align 2, !dbg !657
  store i16 %152, ptr %s, align 2, !dbg !657
  %153 = load i8, ptr %is_mixed_signed, align 1, !dbg !658
  %154 = trunc i8 %153 to i1, !dbg !658
  br i1 %154, label %and.rhs300, label %and.phi303, !dbg !658

and.rhs300:                                       ; preds = %checkok299
  %155 = load i16, ptr %s, align 2, !dbg !659
  %sext301 = sext i16 %155 to i32, !dbg !659
  %lt302 = icmp slt i32 %sext301, 0, !dbg !659
  br label %and.phi303, !dbg !659

and.phi303:                                       ; preds = %and.rhs300, %checkok299
  %val304 = phi i1 [ false, %checkok299 ], [ %lt302, %and.rhs300 ], !dbg !659
  br i1 %val304, label %if.then305, label %if.exit306, !dbg !659

if.then305:                                       ; preds = %and.phi303
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" to i64), ptr %error_var234, align 8, !dbg !660
  br label %panic_block, !dbg !660

if.exit306:                                       ; preds = %and.phi303
  %156 = load i16, ptr %s, align 2, !dbg !661
  %sext307 = sext i16 %156 to i64, !dbg !661
  %157 = load i64, ptr %max, align 8, !dbg !662
  %gt = icmp sgt i64 %sext307, %157, !dbg !661
  %check = icmp sge i64 %157, 0, !dbg !661
  %siui-gt = and i1 %check, %gt, !dbg !661
  br i1 %siui-gt, label %or.phi312, label %or.rhs308, !dbg !661

or.rhs308:                                        ; preds = %if.exit306
  %158 = load i16, ptr %s, align 2, !dbg !663
  %sext309 = sext i16 %158 to i64, !dbg !663
  %159 = load i64, ptr %min, align 8, !dbg !664
  %lt310 = icmp slt i64 %sext309, %159, !dbg !663
  %check311 = icmp slt i64 %159, 0, !dbg !663
  %siui-lt = or i1 %check311, %lt310, !dbg !663
  br label %or.phi312, !dbg !663

or.phi312:                                        ; preds = %or.rhs308, %if.exit306
  %val313 = phi i1 [ true, %if.exit306 ], [ %siui-lt, %or.rhs308 ], !dbg !663
  br i1 %val313, label %if.then314, label %if.exit315, !dbg !663

if.then314:                                       ; preds = %or.phi312
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %error_var234, align 8, !dbg !665
  br label %panic_block, !dbg !665

if.exit315:                                       ; preds = %or.phi312
  %160 = load i16, ptr %s, align 2, !dbg !666
  %sext316 = sext i16 %160 to i64, !dbg !666
  store i64 %sext316, ptr %blockret235, align 8, !dbg !666
  br label %expr_block.exit540, !dbg !666

next_if317:                                       ; preds = %result_block292
  br label %check_subtype318, !dbg !667

check_subtype318:                                 ; preds = %parent_type_block320, %next_if317
  %161 = phi i64 [ %134, %next_if317 ], [ %typeid.parent322, %parent_type_block320 ], !dbg !667
  %eq319 = icmp eq i64 ptrtoint (ptr @"$ct.int" to i64), %161, !dbg !667
  br i1 %eq319, label %result_block323, label %parent_type_block320, !dbg !667

parent_type_block320:                             ; preds = %check_subtype318
  %162 = inttoptr i64 %161 to ptr, !dbg !667
  %ptradd321 = getelementptr inbounds i8, ptr %162, i64 8, !dbg !667
  %typeid.parent322 = load i64, ptr %ptradd321, align 8, !dbg !667
  %163 = icmp eq i64 %typeid.parent322, 0, !dbg !667
  br i1 %163, label %result_block323, label %check_subtype318, !dbg !667

result_block323:                                  ; preds = %parent_type_block320, %check_subtype318
  %164 = phi i1 [ false, %parent_type_block320 ], [ true, %check_subtype318 ], !dbg !667
  br i1 %164, label %switch.case324, label %next_if352, !dbg !667

switch.case324:                                   ; preds = %result_block323
  call void @llvm.dbg.declare(metadata ptr %i325, metadata !668, metadata !DIExpression()), !dbg !670
  %165 = load ptr, ptr %v, align 8, !dbg !671
  %checknull326 = icmp eq ptr %165, null, !dbg !671
  %166 = call i1 @llvm.expect.i1(i1 %checknull326, i1 false), !dbg !671
  br i1 %166, label %panic327, label %checkok331, !dbg !671

checkok331:                                       ; preds = %switch.case324
  %167 = load i32, ptr %165, align 4, !dbg !672
  store i32 %167, ptr %i325, align 4, !dbg !672
  %168 = load i8, ptr %is_mixed_signed, align 1, !dbg !673
  %169 = trunc i8 %168 to i1, !dbg !673
  br i1 %169, label %and.rhs332, label %and.phi334, !dbg !673

and.rhs332:                                       ; preds = %checkok331
  %170 = load i32, ptr %i325, align 4, !dbg !674
  %lt333 = icmp slt i32 %170, 0, !dbg !674
  br label %and.phi334, !dbg !674

and.phi334:                                       ; preds = %and.rhs332, %checkok331
  %val335 = phi i1 [ false, %checkok331 ], [ %lt333, %and.rhs332 ], !dbg !674
  br i1 %val335, label %if.then336, label %if.exit337, !dbg !674

if.then336:                                       ; preds = %and.phi334
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" to i64), ptr %error_var234, align 8, !dbg !675
  br label %panic_block, !dbg !675

if.exit337:                                       ; preds = %and.phi334
  %171 = load i32, ptr %i325, align 4, !dbg !676
  %sext338 = sext i32 %171 to i64, !dbg !676
  %172 = load i64, ptr %max, align 8, !dbg !677
  %gt339 = icmp sgt i64 %sext338, %172, !dbg !676
  %check340 = icmp sge i64 %172, 0, !dbg !676
  %siui-gt341 = and i1 %check340, %gt339, !dbg !676
  br i1 %siui-gt341, label %or.phi347, label %or.rhs342, !dbg !676

or.rhs342:                                        ; preds = %if.exit337
  %173 = load i32, ptr %i325, align 4, !dbg !678
  %sext343 = sext i32 %173 to i64, !dbg !678
  %174 = load i64, ptr %min, align 8, !dbg !679
  %lt344 = icmp slt i64 %sext343, %174, !dbg !678
  %check345 = icmp slt i64 %174, 0, !dbg !678
  %siui-lt346 = or i1 %check345, %lt344, !dbg !678
  br label %or.phi347, !dbg !678

or.phi347:                                        ; preds = %or.rhs342, %if.exit337
  %val348 = phi i1 [ true, %if.exit337 ], [ %siui-lt346, %or.rhs342 ], !dbg !678
  br i1 %val348, label %if.then349, label %if.exit350, !dbg !678

if.then349:                                       ; preds = %or.phi347
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %error_var234, align 8, !dbg !680
  br label %panic_block, !dbg !680

if.exit350:                                       ; preds = %or.phi347
  %175 = load i32, ptr %i325, align 4, !dbg !681
  %sext351 = sext i32 %175 to i64, !dbg !681
  store i64 %sext351, ptr %blockret235, align 8, !dbg !681
  br label %expr_block.exit540, !dbg !681

next_if352:                                       ; preds = %result_block323
  br label %check_subtype353, !dbg !682

check_subtype353:                                 ; preds = %parent_type_block355, %next_if352
  %176 = phi i64 [ %134, %next_if352 ], [ %typeid.parent357, %parent_type_block355 ], !dbg !682
  %eq354 = icmp eq i64 ptrtoint (ptr @"$ct.long" to i64), %176, !dbg !682
  br i1 %eq354, label %result_block358, label %parent_type_block355, !dbg !682

parent_type_block355:                             ; preds = %check_subtype353
  %177 = inttoptr i64 %176 to ptr, !dbg !682
  %ptradd356 = getelementptr inbounds i8, ptr %177, i64 8, !dbg !682
  %typeid.parent357 = load i64, ptr %ptradd356, align 8, !dbg !682
  %178 = icmp eq i64 %typeid.parent357, 0, !dbg !682
  br i1 %178, label %result_block358, label %check_subtype353, !dbg !682

result_block358:                                  ; preds = %parent_type_block355, %check_subtype353
  %179 = phi i1 [ false, %parent_type_block355 ], [ true, %check_subtype353 ], !dbg !682
  br i1 %179, label %switch.case359, label %next_if383, !dbg !682

switch.case359:                                   ; preds = %result_block358
  call void @llvm.dbg.declare(metadata ptr %l, metadata !683, metadata !DIExpression()), !dbg !685
  %180 = load ptr, ptr %v, align 8, !dbg !686
  %checknull360 = icmp eq ptr %180, null, !dbg !686
  %181 = call i1 @llvm.expect.i1(i1 %checknull360, i1 false), !dbg !686
  br i1 %181, label %panic361, label %checkok365, !dbg !686

checkok365:                                       ; preds = %switch.case359
  %182 = load i64, ptr %180, align 8, !dbg !687
  store i64 %182, ptr %l, align 8, !dbg !687
  %183 = load i8, ptr %is_mixed_signed, align 1, !dbg !688
  %184 = trunc i8 %183 to i1, !dbg !688
  br i1 %184, label %and.rhs366, label %and.phi368, !dbg !688

and.rhs366:                                       ; preds = %checkok365
  %185 = load i64, ptr %l, align 8, !dbg !689
  %lt367 = icmp slt i64 %185, 0, !dbg !689
  br label %and.phi368, !dbg !689

and.phi368:                                       ; preds = %and.rhs366, %checkok365
  %val369 = phi i1 [ false, %checkok365 ], [ %lt367, %and.rhs366 ], !dbg !689
  br i1 %val369, label %if.then370, label %if.exit371, !dbg !689

if.then370:                                       ; preds = %and.phi368
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" to i64), ptr %error_var234, align 8, !dbg !690
  br label %panic_block, !dbg !690

if.exit371:                                       ; preds = %and.phi368
  %186 = load i64, ptr %l, align 8, !dbg !691
  %187 = load i64, ptr %max, align 8, !dbg !692
  %gt372 = icmp sgt i64 %186, %187, !dbg !691
  %check373 = icmp sge i64 %187, 0, !dbg !691
  %siui-gt374 = and i1 %check373, %gt372, !dbg !691
  br i1 %siui-gt374, label %or.phi379, label %or.rhs375, !dbg !691

or.rhs375:                                        ; preds = %if.exit371
  %188 = load i64, ptr %l, align 8, !dbg !693
  %189 = load i64, ptr %min, align 8, !dbg !694
  %lt376 = icmp slt i64 %188, %189, !dbg !693
  %check377 = icmp slt i64 %189, 0, !dbg !693
  %siui-lt378 = or i1 %check377, %lt376, !dbg !693
  br label %or.phi379, !dbg !693

or.phi379:                                        ; preds = %or.rhs375, %if.exit371
  %val380 = phi i1 [ true, %if.exit371 ], [ %siui-lt378, %or.rhs375 ], !dbg !693
  br i1 %val380, label %if.then381, label %if.exit382, !dbg !693

if.then381:                                       ; preds = %or.phi379
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %error_var234, align 8, !dbg !695
  br label %panic_block, !dbg !695

if.exit382:                                       ; preds = %or.phi379
  %190 = load i64, ptr %l, align 8, !dbg !696
  store i64 %190, ptr %blockret235, align 8, !dbg !696
  br label %expr_block.exit540, !dbg !696

next_if383:                                       ; preds = %result_block358
  br label %check_subtype384, !dbg !697

check_subtype384:                                 ; preds = %parent_type_block386, %next_if383
  %191 = phi i64 [ %134, %next_if383 ], [ %typeid.parent388, %parent_type_block386 ], !dbg !697
  %eq385 = icmp eq i64 ptrtoint (ptr @"$ct.int128" to i64), %191, !dbg !697
  br i1 %eq385, label %result_block389, label %parent_type_block386, !dbg !697

parent_type_block386:                             ; preds = %check_subtype384
  %192 = inttoptr i64 %191 to ptr, !dbg !697
  %ptradd387 = getelementptr inbounds i8, ptr %192, i64 8, !dbg !697
  %typeid.parent388 = load i64, ptr %ptradd387, align 8, !dbg !697
  %193 = icmp eq i64 %typeid.parent388, 0, !dbg !697
  br i1 %193, label %result_block389, label %check_subtype384, !dbg !697

result_block389:                                  ; preds = %parent_type_block386, %check_subtype384
  %194 = phi i1 [ false, %parent_type_block386 ], [ true, %check_subtype384 ], !dbg !697
  br i1 %194, label %switch.case390, label %next_if416, !dbg !697

switch.case390:                                   ; preds = %result_block389
  call void @llvm.dbg.declare(metadata ptr %i391, metadata !698, metadata !DIExpression()), !dbg !701
  %195 = load ptr, ptr %v, align 8, !dbg !702
  %checknull392 = icmp eq ptr %195, null, !dbg !702
  %196 = call i1 @llvm.expect.i1(i1 %checknull392, i1 false), !dbg !702
  br i1 %196, label %panic393, label %checkok397, !dbg !702

checkok397:                                       ; preds = %switch.case390
  %197 = load i128, ptr %195, align 16, !dbg !703
  store i128 %197, ptr %i391, align 16, !dbg !703
  %198 = load i8, ptr %is_mixed_signed, align 1, !dbg !704
  %199 = trunc i8 %198 to i1, !dbg !704
  br i1 %199, label %and.rhs398, label %and.phi400, !dbg !704

and.rhs398:                                       ; preds = %checkok397
  %200 = load i128, ptr %i391, align 16, !dbg !705
  %lt399 = icmp slt i128 %200, 0, !dbg !705
  br label %and.phi400, !dbg !705

and.phi400:                                       ; preds = %and.rhs398, %checkok397
  %val401 = phi i1 [ false, %checkok397 ], [ %lt399, %and.rhs398 ], !dbg !705
  br i1 %val401, label %if.then402, label %if.exit403, !dbg !705

if.then402:                                       ; preds = %and.phi400
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" to i64), ptr %error_var234, align 8, !dbg !706
  br label %panic_block, !dbg !706

if.exit403:                                       ; preds = %and.phi400
  %201 = load i128, ptr %i391, align 16, !dbg !707
  %202 = load i64, ptr %max, align 8, !dbg !708
  %zext = zext i64 %202 to i128, !dbg !708
  %gt404 = icmp sgt i128 %201, %zext, !dbg !707
  %check405 = icmp sge i128 %zext, 0, !dbg !707
  %siui-gt406 = and i1 %check405, %gt404, !dbg !707
  br i1 %siui-gt406, label %or.phi412, label %or.rhs407, !dbg !707

or.rhs407:                                        ; preds = %if.exit403
  %203 = load i128, ptr %i391, align 16, !dbg !709
  %204 = load i64, ptr %min, align 8, !dbg !710
  %zext408 = zext i64 %204 to i128, !dbg !710
  %lt409 = icmp slt i128 %203, %zext408, !dbg !709
  %check410 = icmp slt i128 %zext408, 0, !dbg !709
  %siui-lt411 = or i1 %check410, %lt409, !dbg !709
  br label %or.phi412, !dbg !709

or.phi412:                                        ; preds = %or.rhs407, %if.exit403
  %val413 = phi i1 [ true, %if.exit403 ], [ %siui-lt411, %or.rhs407 ], !dbg !709
  br i1 %val413, label %if.then414, label %if.exit415, !dbg !709

if.then414:                                       ; preds = %or.phi412
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %error_var234, align 8, !dbg !711
  br label %panic_block, !dbg !711

if.exit415:                                       ; preds = %or.phi412
  %205 = load i128, ptr %i391, align 16, !dbg !712
  %trunc = trunc i128 %205 to i64, !dbg !712
  store i64 %trunc, ptr %blockret235, align 8, !dbg !712
  br label %expr_block.exit540, !dbg !712

next_if416:                                       ; preds = %result_block389
  br label %check_subtype417, !dbg !713

check_subtype417:                                 ; preds = %parent_type_block419, %next_if416
  %206 = phi i64 [ %134, %next_if416 ], [ %typeid.parent421, %parent_type_block419 ], !dbg !713
  %eq418 = icmp eq i64 ptrtoint (ptr @"$ct.char" to i64), %206, !dbg !713
  br i1 %eq418, label %result_block422, label %parent_type_block419, !dbg !713

parent_type_block419:                             ; preds = %check_subtype417
  %207 = inttoptr i64 %206 to ptr, !dbg !713
  %ptradd420 = getelementptr inbounds i8, ptr %207, i64 8, !dbg !713
  %typeid.parent421 = load i64, ptr %ptradd420, align 8, !dbg !713
  %208 = icmp eq i64 %typeid.parent421, 0, !dbg !713
  br i1 %208, label %result_block422, label %check_subtype417, !dbg !713

result_block422:                                  ; preds = %parent_type_block419, %check_subtype417
  %209 = phi i1 [ false, %parent_type_block419 ], [ true, %check_subtype417 ], !dbg !713
  br i1 %209, label %switch.case423, label %next_if436, !dbg !713

switch.case423:                                   ; preds = %result_block422
  call void @llvm.dbg.declare(metadata ptr %c424, metadata !714, metadata !DIExpression()), !dbg !716
  %210 = load ptr, ptr %v, align 8, !dbg !717
  %checknull425 = icmp eq ptr %210, null, !dbg !717
  %211 = call i1 @llvm.expect.i1(i1 %checknull425, i1 false), !dbg !717
  br i1 %211, label %panic426, label %checkok430, !dbg !717

checkok430:                                       ; preds = %switch.case423
  %212 = load i8, ptr %210, align 1, !dbg !718
  store i8 %212, ptr %c424, align 1, !dbg !718
  %213 = load i8, ptr %c424, align 1, !dbg !719
  %zext431 = zext i8 %213 to i64, !dbg !719
  %214 = load i64, ptr %max, align 8, !dbg !720
  %gt432 = icmp ugt i64 %zext431, %214, !dbg !719
  br i1 %gt432, label %if.then433, label %if.exit434, !dbg !719

if.then433:                                       ; preds = %checkok430
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %error_var234, align 8, !dbg !721
  br label %panic_block, !dbg !721

if.exit434:                                       ; preds = %checkok430
  %215 = load i8, ptr %c424, align 1, !dbg !722
  %zext435 = zext i8 %215 to i64, !dbg !722
  store i64 %zext435, ptr %blockret235, align 8, !dbg !722
  br label %expr_block.exit540, !dbg !722

next_if436:                                       ; preds = %result_block422
  br label %check_subtype437, !dbg !723

check_subtype437:                                 ; preds = %parent_type_block439, %next_if436
  %216 = phi i64 [ %134, %next_if436 ], [ %typeid.parent441, %parent_type_block439 ], !dbg !723
  %eq438 = icmp eq i64 ptrtoint (ptr @"$ct.ushort" to i64), %216, !dbg !723
  br i1 %eq438, label %result_block442, label %parent_type_block439, !dbg !723

parent_type_block439:                             ; preds = %check_subtype437
  %217 = inttoptr i64 %216 to ptr, !dbg !723
  %ptradd440 = getelementptr inbounds i8, ptr %217, i64 8, !dbg !723
  %typeid.parent441 = load i64, ptr %ptradd440, align 8, !dbg !723
  %218 = icmp eq i64 %typeid.parent441, 0, !dbg !723
  br i1 %218, label %result_block442, label %check_subtype437, !dbg !723

result_block442:                                  ; preds = %parent_type_block439, %check_subtype437
  %219 = phi i1 [ false, %parent_type_block439 ], [ true, %check_subtype437 ], !dbg !723
  br i1 %219, label %switch.case443, label %next_if461, !dbg !723

switch.case443:                                   ; preds = %result_block442
  call void @llvm.dbg.declare(metadata ptr %s444, metadata !724, metadata !DIExpression()), !dbg !727
  %220 = load ptr, ptr %v, align 8, !dbg !728
  %checknull445 = icmp eq ptr %220, null, !dbg !728
  %221 = call i1 @llvm.expect.i1(i1 %checknull445, i1 false), !dbg !728
  br i1 %221, label %panic446, label %checkok450, !dbg !728

checkok450:                                       ; preds = %switch.case443
  %222 = load i16, ptr %220, align 2, !dbg !729
  store i16 %222, ptr %s444, align 2, !dbg !729
  %223 = load i16, ptr %s444, align 2, !dbg !730
  %zext451 = zext i16 %223 to i64, !dbg !730
  %224 = load i64, ptr %max, align 8, !dbg !731
  %gt452 = icmp ugt i64 %zext451, %224, !dbg !730
  br i1 %gt452, label %or.phi456, label %or.rhs453, !dbg !730

or.rhs453:                                        ; preds = %checkok450
  %225 = load i16, ptr %s444, align 2, !dbg !732
  %zext454 = zext i16 %225 to i64, !dbg !732
  %226 = load i64, ptr %min, align 8, !dbg !733
  %lt455 = icmp ult i64 %zext454, %226, !dbg !732
  br label %or.phi456, !dbg !732

or.phi456:                                        ; preds = %or.rhs453, %checkok450
  %val457 = phi i1 [ true, %checkok450 ], [ %lt455, %or.rhs453 ], !dbg !732
  br i1 %val457, label %if.then458, label %if.exit459, !dbg !732

if.then458:                                       ; preds = %or.phi456
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %error_var234, align 8, !dbg !734
  br label %panic_block, !dbg !734

if.exit459:                                       ; preds = %or.phi456
  %227 = load i16, ptr %s444, align 2, !dbg !735
  %zext460 = zext i16 %227 to i64, !dbg !735
  store i64 %zext460, ptr %blockret235, align 8, !dbg !735
  br label %expr_block.exit540, !dbg !735

next_if461:                                       ; preds = %result_block442
  br label %check_subtype462, !dbg !736

check_subtype462:                                 ; preds = %parent_type_block464, %next_if461
  %228 = phi i64 [ %134, %next_if461 ], [ %typeid.parent466, %parent_type_block464 ], !dbg !736
  %eq463 = icmp eq i64 ptrtoint (ptr @"$ct.uint" to i64), %228, !dbg !736
  br i1 %eq463, label %result_block467, label %parent_type_block464, !dbg !736

parent_type_block464:                             ; preds = %check_subtype462
  %229 = inttoptr i64 %228 to ptr, !dbg !736
  %ptradd465 = getelementptr inbounds i8, ptr %229, i64 8, !dbg !736
  %typeid.parent466 = load i64, ptr %ptradd465, align 8, !dbg !736
  %230 = icmp eq i64 %typeid.parent466, 0, !dbg !736
  br i1 %230, label %result_block467, label %check_subtype462, !dbg !736

result_block467:                                  ; preds = %parent_type_block464, %check_subtype462
  %231 = phi i1 [ false, %parent_type_block464 ], [ true, %check_subtype462 ], !dbg !736
  br i1 %231, label %switch.case468, label %next_if486, !dbg !736

switch.case468:                                   ; preds = %result_block467
  call void @llvm.dbg.declare(metadata ptr %i469, metadata !737, metadata !DIExpression()), !dbg !739
  %232 = load ptr, ptr %v, align 8, !dbg !740
  %checknull470 = icmp eq ptr %232, null, !dbg !740
  %233 = call i1 @llvm.expect.i1(i1 %checknull470, i1 false), !dbg !740
  br i1 %233, label %panic471, label %checkok475, !dbg !740

checkok475:                                       ; preds = %switch.case468
  %234 = load i32, ptr %232, align 4, !dbg !741
  store i32 %234, ptr %i469, align 4, !dbg !741
  %235 = load i32, ptr %i469, align 4, !dbg !742
  %zext476 = zext i32 %235 to i64, !dbg !742
  %236 = load i64, ptr %max, align 8, !dbg !743
  %gt477 = icmp ugt i64 %zext476, %236, !dbg !742
  br i1 %gt477, label %or.phi481, label %or.rhs478, !dbg !742

or.rhs478:                                        ; preds = %checkok475
  %237 = load i32, ptr %i469, align 4, !dbg !744
  %zext479 = zext i32 %237 to i64, !dbg !744
  %238 = load i64, ptr %min, align 8, !dbg !745
  %lt480 = icmp ult i64 %zext479, %238, !dbg !744
  br label %or.phi481, !dbg !744

or.phi481:                                        ; preds = %or.rhs478, %checkok475
  %val482 = phi i1 [ true, %checkok475 ], [ %lt480, %or.rhs478 ], !dbg !744
  br i1 %val482, label %if.then483, label %if.exit484, !dbg !744

if.then483:                                       ; preds = %or.phi481
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %error_var234, align 8, !dbg !746
  br label %panic_block, !dbg !746

if.exit484:                                       ; preds = %or.phi481
  %239 = load i32, ptr %i469, align 4, !dbg !747
  %zext485 = zext i32 %239 to i64, !dbg !747
  store i64 %zext485, ptr %blockret235, align 8, !dbg !747
  br label %expr_block.exit540, !dbg !747

next_if486:                                       ; preds = %result_block467
  br label %check_subtype487, !dbg !748

check_subtype487:                                 ; preds = %parent_type_block489, %next_if486
  %240 = phi i64 [ %134, %next_if486 ], [ %typeid.parent491, %parent_type_block489 ], !dbg !748
  %eq488 = icmp eq i64 ptrtoint (ptr @"$ct.ulong" to i64), %240, !dbg !748
  br i1 %eq488, label %result_block492, label %parent_type_block489, !dbg !748

parent_type_block489:                             ; preds = %check_subtype487
  %241 = inttoptr i64 %240 to ptr, !dbg !748
  %ptradd490 = getelementptr inbounds i8, ptr %241, i64 8, !dbg !748
  %typeid.parent491 = load i64, ptr %ptradd490, align 8, !dbg !748
  %242 = icmp eq i64 %typeid.parent491, 0, !dbg !748
  br i1 %242, label %result_block492, label %check_subtype487, !dbg !748

result_block492:                                  ; preds = %parent_type_block489, %check_subtype487
  %243 = phi i1 [ false, %parent_type_block489 ], [ true, %check_subtype487 ], !dbg !748
  br i1 %243, label %switch.case493, label %next_if508, !dbg !748

switch.case493:                                   ; preds = %result_block492
  call void @llvm.dbg.declare(metadata ptr %l494, metadata !749, metadata !DIExpression()), !dbg !751
  %244 = load ptr, ptr %v, align 8, !dbg !752
  %checknull495 = icmp eq ptr %244, null, !dbg !752
  %245 = call i1 @llvm.expect.i1(i1 %checknull495, i1 false), !dbg !752
  br i1 %245, label %panic496, label %checkok500, !dbg !752

checkok500:                                       ; preds = %switch.case493
  %246 = load i64, ptr %244, align 8, !dbg !753
  store i64 %246, ptr %l494, align 8, !dbg !753
  %247 = load i64, ptr %l494, align 8, !dbg !754
  %248 = load i64, ptr %max, align 8, !dbg !755
  %gt501 = icmp ugt i64 %247, %248, !dbg !754
  br i1 %gt501, label %or.phi504, label %or.rhs502, !dbg !754

or.rhs502:                                        ; preds = %checkok500
  %249 = load i64, ptr %l494, align 8, !dbg !756
  %250 = load i64, ptr %min, align 8, !dbg !757
  %lt503 = icmp ult i64 %249, %250, !dbg !756
  br label %or.phi504, !dbg !756

or.phi504:                                        ; preds = %or.rhs502, %checkok500
  %val505 = phi i1 [ true, %checkok500 ], [ %lt503, %or.rhs502 ], !dbg !756
  br i1 %val505, label %if.then506, label %if.exit507, !dbg !756

if.then506:                                       ; preds = %or.phi504
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %error_var234, align 8, !dbg !758
  br label %panic_block, !dbg !758

if.exit507:                                       ; preds = %or.phi504
  %251 = load i64, ptr %l494, align 8, !dbg !759
  store i64 %251, ptr %blockret235, align 8, !dbg !759
  br label %expr_block.exit540, !dbg !759

next_if508:                                       ; preds = %result_block492
  br label %check_subtype509, !dbg !760

check_subtype509:                                 ; preds = %parent_type_block511, %next_if508
  %252 = phi i64 [ %134, %next_if508 ], [ %typeid.parent513, %parent_type_block511 ], !dbg !760
  %eq510 = icmp eq i64 ptrtoint (ptr @"$ct.uint128" to i64), %252, !dbg !760
  br i1 %eq510, label %result_block514, label %parent_type_block511, !dbg !760

parent_type_block511:                             ; preds = %check_subtype509
  %253 = inttoptr i64 %252 to ptr, !dbg !760
  %ptradd512 = getelementptr inbounds i8, ptr %253, i64 8, !dbg !760
  %typeid.parent513 = load i64, ptr %ptradd512, align 8, !dbg !760
  %254 = icmp eq i64 %typeid.parent513, 0, !dbg !760
  br i1 %254, label %result_block514, label %check_subtype509, !dbg !760

result_block514:                                  ; preds = %parent_type_block511, %check_subtype509
  %255 = phi i1 [ false, %parent_type_block511 ], [ true, %check_subtype509 ], !dbg !760
  br i1 %255, label %switch.case515, label %next_if533, !dbg !760

switch.case515:                                   ; preds = %result_block514
  call void @llvm.dbg.declare(metadata ptr %i516, metadata !761, metadata !DIExpression()), !dbg !764
  %256 = load ptr, ptr %v, align 8, !dbg !765
  %checknull517 = icmp eq ptr %256, null, !dbg !765
  %257 = call i1 @llvm.expect.i1(i1 %checknull517, i1 false), !dbg !765
  br i1 %257, label %panic518, label %checkok522, !dbg !765

checkok522:                                       ; preds = %switch.case515
  %258 = load i128, ptr %256, align 16, !dbg !766
  store i128 %258, ptr %i516, align 16, !dbg !766
  %259 = load i128, ptr %i516, align 16, !dbg !767
  %260 = load i64, ptr %max, align 8, !dbg !768
  %zext523 = zext i64 %260 to i128, !dbg !768
  %gt524 = icmp ugt i128 %259, %zext523, !dbg !767
  br i1 %gt524, label %or.phi528, label %or.rhs525, !dbg !767

or.rhs525:                                        ; preds = %checkok522
  %261 = load i128, ptr %i516, align 16, !dbg !769
  %262 = load i64, ptr %min, align 8, !dbg !770
  %zext526 = zext i64 %262 to i128, !dbg !770
  %lt527 = icmp ult i128 %261, %zext526, !dbg !769
  br label %or.phi528, !dbg !769

or.phi528:                                        ; preds = %or.rhs525, %checkok522
  %val529 = phi i1 [ true, %checkok522 ], [ %lt527, %or.rhs525 ], !dbg !769
  br i1 %val529, label %if.then530, label %if.exit531, !dbg !769

if.then530:                                       ; preds = %or.phi528
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %error_var234, align 8, !dbg !771
  br label %panic_block, !dbg !771

if.exit531:                                       ; preds = %or.phi528
  %263 = load i128, ptr %i516, align 16, !dbg !772
  %trunc532 = trunc i128 %263 to i64, !dbg !772
  store i64 %trunc532, ptr %blockret235, align 8, !dbg !772
  br label %expr_block.exit540, !dbg !772

next_if533:                                       ; preds = %result_block514
  br label %switch.default, !dbg !772

switch.default:                                   ; preds = %next_if533
  store %"char[]" { ptr @.str.89, i64 30 }, ptr %string534, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg535, ptr align 8 %string534, i32 16, i1 false)
  store %"char[]" { ptr @.str.90, i64 12 }, ptr %indirectarg536, align 8
  store %"char[]" { ptr @.str.91, i64 17 }, ptr %indirectarg537, align 8
  store %"any[]" zeroinitializer, ptr %indirectarg538, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg535, ptr align 8 %indirectarg536, ptr align 8 %indirectarg537, i32 158, ptr align 8 %indirectarg538), !dbg !773
  unreachable, !dbg !777

expr_block.exit540:                               ; preds = %if.exit531, %if.exit507, %if.exit484, %if.exit459, %if.exit434, %if.exit415, %if.exit382, %if.exit350, %if.exit315, %if.exit285
  br label %noerr_block545, !dbg !777

panic_block:                                      ; preds = %if.then530, %if.then506, %if.then483, %if.then458, %if.then433, %if.then414, %if.then402, %if.then381, %if.then370, %if.then349, %if.then336, %if.then314, %if.then305, %if.then284
  %264 = insertvalue %any undef, ptr %error_var234, 0, !dbg !777
  %265 = insertvalue %any %264, i64 ptrtoint (ptr @"$ct.anyfault" to i64), 1, !dbg !777
  store %"char[]" { ptr @.panic_msg.92, i64 36 }, ptr %indirectarg541, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg542, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg543, align 8
  store %any %265, ptr %varargslots, align 16
  %266 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %266, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg544, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg541, ptr align 8 %indirectarg542, ptr align 8 %indirectarg543, i32 158, ptr align 8 %indirectarg544), !dbg !617
  unreachable, !dbg !617

noerr_block545:                                   ; preds = %expr_block.exit540
  %267 = load i64, ptr %blockret235, align 8, !dbg !617
  store i64 %267, ptr %i, align 8, !dbg !617
  %268 = load i64, ptr %i, align 8, !dbg !778
  %ptradd546 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !779
  %269 = load i64, ptr %ptradd546, align 8, !dbg !779
  %"introspect*547" = inttoptr i64 %269 to ptr, !dbg !779
  %typeid.kind548 = load i8, ptr %"introspect*547", align 8, !dbg !779
  %eq549 = icmp eq i8 %typeid.kind548, 8, !dbg !779
  br i1 %eq549, label %check_type_ok554, label %check_next550, !dbg !779

check_next550:                                    ; preds = %noerr_block545
  store %"char[]" { ptr @.panic_msg.93, i64 51 }, ptr %indirectarg551, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg552, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg553, align 8
  %270 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %270(ptr align 8 %indirectarg551, ptr align 8 %indirectarg552, ptr align 8 %indirectarg553, i32 159), !dbg !779
  unreachable, !dbg !779

check_type_ok554:                                 ; preds = %noerr_block545
  %ptradd555 = getelementptr inbounds i8, ptr %"introspect*547", i64 40, !dbg !779
  %namelen = load i64, ptr %ptradd555, align 8, !dbg !779
  %ptradd556 = getelementptr inbounds i8, ptr %"introspect*547", i64 48, !dbg !779
  %271 = insertvalue %"char[][]" undef, ptr %ptradd556, 0, !dbg !779
  %272 = insertvalue %"char[][]" %271, i64 %namelen, 1, !dbg !779
  %273 = extractvalue %"char[][]" %272, 1, !dbg !779
  %lt557 = icmp ult i64 %268, %273, !dbg !778
  br i1 %lt557, label %assert_ok565, label %assert_fail558, !dbg !778

assert_fail558:                                   ; preds = %check_type_ok554
  %274 = insertvalue %any undef, ptr %i, 0, !dbg !780
  %275 = insertvalue %any %274, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1, !dbg !780
  store %"char[]" { ptr @.panic_msg.94, i64 49 }, ptr %indirectarg559, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg560, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg561, align 8
  store %any %275, ptr %varargslots562, align 16
  %276 = insertvalue %"any[]" undef, ptr %varargslots562, 0
  %"$$temp563" = insertvalue %"any[]" %276, i64 1, 1
  store %"any[]" %"$$temp563", ptr %indirectarg564, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg559, ptr align 8 %indirectarg560, ptr align 8 %indirectarg561, i32 159, ptr align 8 %indirectarg564), !dbg !778
  unreachable, !dbg !778

assert_ok565:                                     ; preds = %check_type_ok554
  %ptradd567 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !781
  %277 = load i64, ptr %ptradd567, align 8, !dbg !781
  %"introspect*568" = inttoptr i64 %277 to ptr, !dbg !781
  %typeid.kind569 = load i8, ptr %"introspect*568", align 8, !dbg !781
  %eq570 = icmp eq i8 %typeid.kind569, 8, !dbg !781
  br i1 %eq570, label %check_type_ok575, label %check_next571, !dbg !781

check_next571:                                    ; preds = %assert_ok565
  store %"char[]" { ptr @.panic_msg.93, i64 51 }, ptr %indirectarg572, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg573, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg574, align 8
  %278 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %278(ptr align 8 %indirectarg572, ptr align 8 %indirectarg573, ptr align 8 %indirectarg574, i32 160), !dbg !781
  unreachable, !dbg !781

check_type_ok575:                                 ; preds = %assert_ok565
  %ptradd576 = getelementptr inbounds i8, ptr %"introspect*568", i64 40, !dbg !781
  %namelen577 = load i64, ptr %ptradd576, align 8, !dbg !781
  %ptradd578 = getelementptr inbounds i8, ptr %"introspect*568", i64 48, !dbg !781
  %279 = insertvalue %"char[][]" undef, ptr %ptradd578, 0, !dbg !781
  %280 = insertvalue %"char[][]" %279, i64 %namelen577, 1, !dbg !781
  %281 = extractvalue %"char[][]" %280, 1, !dbg !781
  %282 = extractvalue %"char[][]" %280, 0, !dbg !781
  %283 = load i64, ptr %i, align 8, !dbg !782
  %ge = icmp uge i64 %283, %281, !dbg !782
  %284 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !782
  br i1 %284, label %panic579, label %checkok588, !dbg !782

checkok588:                                       ; preds = %check_type_ok575
  %ptroffset = getelementptr inbounds [16 x i8], ptr %282, i64 %283, !dbg !782
  %285 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg590, ptr align 8 %ptroffset, i32 16, i1 false)
  %286 = call i64 @std.io.Formatter.out_substr(ptr %retparam589, ptr %285, ptr align 8 %indirectarg590), !dbg !783
  %not_err591 = icmp eq i64 %286, 0, !dbg !783
  %287 = call i1 @llvm.expect.i1(i1 %not_err591, i1 true), !dbg !783
  br i1 %287, label %after_check593, label %assign_optional592, !dbg !783

assign_optional592:                               ; preds = %checkok588
  store i64 %286, ptr %reterr566, align 8, !dbg !783
  br label %err_retblock594, !dbg !783

after_check593:                                   ; preds = %checkok588
  %288 = load i64, ptr %retparam589, align 8, !dbg !783
  store i64 %288, ptr %0, align 8, !dbg !783
  ret i64 0, !dbg !783

err_retblock594:                                  ; preds = %assign_optional592
  %289 = load i64, ptr %reterr566, align 8, !dbg !783
  ret i64 %289, !dbg !783

switch.case595:                                   ; preds = %switch.entry232
  %ptradd596 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !784
  %290 = load i64, ptr %ptradd596, align 8, !dbg !784
  %eq597 = icmp eq i64 %290, ptrtoint (ptr @"$ct.ReflectedParam" to i64), !dbg !784
  br i1 %eq597, label %if.then598, label %if.exit623, !dbg !784

if.then598:                                       ; preds = %switch.case595
  call void @llvm.dbg.declare(metadata ptr %param, metadata !786, metadata !DIExpression()), !dbg !793
  %291 = load ptr, ptr %2, align 8, !dbg !794
  store ptr %291, ptr %param, align 8, !dbg !794
  %292 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.96, i64 12 }, ptr %indirectarg601, align 8
  %293 = call i64 @std.io.Formatter.out_substr(ptr %retparam600, ptr %292, ptr align 8 %indirectarg601), !dbg !795
  %not_err602 = icmp eq i64 %293, 0, !dbg !795
  %294 = call i1 @llvm.expect.i1(i1 %not_err602, i1 true), !dbg !795
  br i1 %294, label %after_check604, label %assign_optional603, !dbg !795

assign_optional603:                               ; preds = %if.then598
  store i64 %293, ptr %reterr599, align 8, !dbg !795
  br label %err_retblock622, !dbg !795

after_check604:                                   ; preds = %if.then598
  %295 = load i64, ptr %retparam600, align 8, !dbg !795
  %296 = load ptr, ptr %param, align 8, !dbg !796
  %checknull605 = icmp eq ptr %296, null, !dbg !796
  %297 = call i1 @llvm.expect.i1(i1 %checknull605, i1 false), !dbg !796
  br i1 %297, label %panic606, label %checkok610, !dbg !796

checkok610:                                       ; preds = %after_check604
  %298 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg612, ptr align 8 %296, i32 16, i1 false)
  %299 = call i64 @std.io.Formatter.out_substr(ptr %retparam611, ptr %298, ptr align 8 %indirectarg612), !dbg !797
  %not_err613 = icmp eq i64 %299, 0, !dbg !797
  %300 = call i1 @llvm.expect.i1(i1 %not_err613, i1 true), !dbg !797
  br i1 %300, label %after_check615, label %assign_optional614, !dbg !797

assign_optional614:                               ; preds = %checkok610
  store i64 %299, ptr %reterr599, align 8, !dbg !797
  br label %err_retblock622, !dbg !797

after_check615:                                   ; preds = %checkok610
  %301 = load i64, ptr %retparam611, align 8, !dbg !797
  %add = add i64 %295, %301, !dbg !795
  %302 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.98, i64 2 }, ptr %indirectarg617, align 8
  %303 = call i64 @std.io.Formatter.out_substr(ptr %retparam616, ptr %302, ptr align 8 %indirectarg617), !dbg !798
  %not_err618 = icmp eq i64 %303, 0, !dbg !798
  %304 = call i1 @llvm.expect.i1(i1 %not_err618, i1 true), !dbg !798
  br i1 %304, label %after_check620, label %assign_optional619, !dbg !798

assign_optional619:                               ; preds = %after_check615
  store i64 %303, ptr %reterr599, align 8, !dbg !798
  br label %err_retblock622, !dbg !798

after_check620:                                   ; preds = %after_check615
  %305 = load i64, ptr %retparam616, align 8, !dbg !798
  %add621 = add i64 %add, %305, !dbg !795
  store i64 %add621, ptr %0, align 8, !dbg !795
  ret i64 0, !dbg !795

err_retblock622:                                  ; preds = %assign_optional619, %assign_optional614, %assign_optional603
  %306 = load i64, ptr %reterr599, align 8, !dbg !795
  ret i64 %306, !dbg !795

if.exit623:                                       ; preds = %switch.case595
  %307 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.99, i64 8 }, ptr %indirectarg626, align 8
  %308 = call i64 @std.io.Formatter.out_substr(ptr %retparam625, ptr %307, ptr align 8 %indirectarg626), !dbg !799
  %not_err627 = icmp eq i64 %308, 0, !dbg !799
  %309 = call i1 @llvm.expect.i1(i1 %not_err627, i1 true), !dbg !799
  br i1 %309, label %after_check629, label %assign_optional628, !dbg !799

assign_optional628:                               ; preds = %if.exit623
  store i64 %308, ptr %reterr624, align 8, !dbg !799
  br label %err_retblock630, !dbg !799

after_check629:                                   ; preds = %if.exit623
  %310 = load i64, ptr %retparam625, align 8, !dbg !799
  store i64 %310, ptr %0, align 8, !dbg !799
  ret i64 0, !dbg !799

err_retblock630:                                  ; preds = %assign_optional628
  %311 = load i64, ptr %reterr624, align 8, !dbg !799
  ret i64 %311, !dbg !799

switch.case631:                                   ; preds = %switch.entry232
  %312 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.100, i64 7 }, ptr %indirectarg634, align 8
  %313 = call i64 @std.io.Formatter.out_substr(ptr %retparam633, ptr %312, ptr align 8 %indirectarg634), !dbg !800
  %not_err635 = icmp eq i64 %313, 0, !dbg !800
  %314 = call i1 @llvm.expect.i1(i1 %not_err635, i1 true), !dbg !800
  br i1 %314, label %after_check637, label %assign_optional636, !dbg !800

assign_optional636:                               ; preds = %switch.case631
  store i64 %313, ptr %reterr632, align 8, !dbg !800
  br label %err_retblock638, !dbg !800

after_check637:                                   ; preds = %switch.case631
  %315 = load i64, ptr %retparam633, align 8, !dbg !800
  store i64 %315, ptr %0, align 8, !dbg !800
  ret i64 0, !dbg !800

err_retblock638:                                  ; preds = %assign_optional636
  %316 = load i64, ptr %reterr632, align 8, !dbg !800
  ret i64 %316, !dbg !800

switch.case639:                                   ; preds = %switch.entry232
  %317 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.101, i64 11 }, ptr %indirectarg642, align 8
  %318 = call i64 @std.io.Formatter.out_substr(ptr %retparam641, ptr %317, ptr align 8 %indirectarg642), !dbg !802
  %not_err643 = icmp eq i64 %318, 0, !dbg !802
  %319 = call i1 @llvm.expect.i1(i1 %not_err643, i1 true), !dbg !802
  br i1 %319, label %after_check645, label %assign_optional644, !dbg !802

assign_optional644:                               ; preds = %switch.case639
  store i64 %318, ptr %reterr640, align 8, !dbg !802
  br label %err_retblock646, !dbg !802

after_check645:                                   ; preds = %switch.case639
  %320 = load i64, ptr %retparam641, align 8, !dbg !802
  store i64 %320, ptr %0, align 8, !dbg !802
  ret i64 0, !dbg !802

err_retblock646:                                  ; preds = %assign_optional644
  %321 = load i64, ptr %reterr640, align 8, !dbg !802
  ret i64 %321, !dbg !802

switch.case647:                                   ; preds = %switch.entry232
  %322 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.102, i64 10 }, ptr %indirectarg650, align 8
  %323 = call i64 @std.io.Formatter.out_substr(ptr %retparam649, ptr %322, ptr align 8 %indirectarg650), !dbg !804
  %not_err651 = icmp eq i64 %323, 0, !dbg !804
  %324 = call i1 @llvm.expect.i1(i1 %not_err651, i1 true), !dbg !804
  br i1 %324, label %after_check653, label %assign_optional652, !dbg !804

assign_optional652:                               ; preds = %switch.case647
  store i64 %323, ptr %reterr648, align 8, !dbg !804
  br label %err_retblock654, !dbg !804

after_check653:                                   ; preds = %switch.case647
  %325 = load i64, ptr %retparam649, align 8, !dbg !804
  store i64 %325, ptr %0, align 8, !dbg !804
  ret i64 0, !dbg !804

err_retblock654:                                  ; preds = %assign_optional652
  %326 = load i64, ptr %reterr648, align 8, !dbg !804
  ret i64 %326, !dbg !804

switch.case655:                                   ; preds = %switch.entry232
  %ptradd656 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !806
  %327 = load i64, ptr %ptradd656, align 8, !dbg !806
  %eq657 = icmp eq i64 %327, ptrtoint (ptr @"$ct.String" to i64), !dbg !806
  br i1 %eq657, label %if.then658, label %if.exit672, !dbg !806

if.then658:                                       ; preds = %switch.case655
  %328 = load ptr, ptr %2, align 8, !dbg !808
  %checknull660 = icmp eq ptr %328, null, !dbg !808
  %329 = call i1 @llvm.expect.i1(i1 %checknull660, i1 false), !dbg !808
  br i1 %329, label %panic661, label %checkok665, !dbg !808

checkok665:                                       ; preds = %if.then658
  %330 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg667, ptr align 8 %328, i32 16, i1 false)
  %331 = call i64 @std.io.Formatter.out_substr(ptr %retparam666, ptr %330, ptr align 8 %indirectarg667), !dbg !810
  %not_err668 = icmp eq i64 %331, 0, !dbg !810
  %332 = call i1 @llvm.expect.i1(i1 %not_err668, i1 true), !dbg !810
  br i1 %332, label %after_check670, label %assign_optional669, !dbg !810

assign_optional669:                               ; preds = %checkok665
  store i64 %331, ptr %reterr659, align 8, !dbg !810
  br label %err_retblock671, !dbg !810

after_check670:                                   ; preds = %checkok665
  %333 = load i64, ptr %retparam666, align 8, !dbg !810
  store i64 %333, ptr %0, align 8, !dbg !810
  ret i64 0, !dbg !810

err_retblock671:                                  ; preds = %assign_optional669
  %334 = load i64, ptr %reterr659, align 8, !dbg !810
  ret i64 %334, !dbg !810

if.exit672:                                       ; preds = %switch.case655
  %ptradd673 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !811
  %335 = load i64, ptr %ptradd673, align 8, !dbg !811
  %eq674 = icmp eq i64 %335, ptrtoint (ptr @"$ct.std.core.string.ZString" to i64), !dbg !811
  br i1 %eq674, label %if.then675, label %if.exit696, !dbg !811

if.then675:                                       ; preds = %if.exit672
  %336 = load ptr, ptr %2, align 8, !dbg !812
  %checknull677 = icmp eq ptr %336, null, !dbg !812
  %337 = call i1 @llvm.expect.i1(i1 %checknull677, i1 false), !dbg !812
  br i1 %337, label %panic678, label %checkok682, !dbg !812

checkok682:                                       ; preds = %if.then675
  %338 = load ptr, ptr %336, align 8, !dbg !812
  %ptrbool = icmp ne ptr %338, null, !dbg !812
  br i1 %ptrbool, label %cond.lhs, label %cond.rhs, !dbg !812

cond.lhs:                                         ; preds = %checkok682
  %339 = load ptr, ptr %2, align 8, !dbg !814
  %checknull683 = icmp eq ptr %339, null, !dbg !814
  %340 = call i1 @llvm.expect.i1(i1 %checknull683, i1 false), !dbg !814
  br i1 %340, label %panic684, label %checkok688, !dbg !814

checkok688:                                       ; preds = %cond.lhs
  %341 = load ptr, ptr %339, align 8
  call void @std.core.string.ZString.str_view(ptr sret(%"char[]") align 8 %sretparam, ptr %341), !dbg !814
  %342 = load %"char[]", ptr %sretparam, align 8, !dbg !814
  br label %cond.phi, !dbg !814

cond.rhs:                                         ; preds = %checkok682
  br label %cond.phi, !dbg !815

cond.phi:                                         ; preds = %cond.rhs, %checkok688
  %val689 = phi %"char[]" [ %342, %checkok688 ], [ { ptr @.str.106, i64 6 }, %cond.rhs ], !dbg !815
  %343 = load ptr, ptr %self, align 8
  store %"char[]" %val689, ptr %indirectarg691, align 8
  %344 = call i64 @std.io.Formatter.out_substr(ptr %retparam690, ptr %343, ptr align 8 %indirectarg691), !dbg !816
  %not_err692 = icmp eq i64 %344, 0, !dbg !816
  %345 = call i1 @llvm.expect.i1(i1 %not_err692, i1 true), !dbg !816
  br i1 %345, label %after_check694, label %assign_optional693, !dbg !816

assign_optional693:                               ; preds = %cond.phi
  store i64 %344, ptr %reterr676, align 8, !dbg !816
  br label %err_retblock695, !dbg !816

after_check694:                                   ; preds = %cond.phi
  %346 = load i64, ptr %retparam690, align 8, !dbg !816
  store i64 %346, ptr %0, align 8, !dbg !816
  ret i64 0, !dbg !816

err_retblock695:                                  ; preds = %assign_optional693
  %347 = load i64, ptr %reterr676, align 8, !dbg !816
  ret i64 %347, !dbg !816

if.exit696:                                       ; preds = %if.exit672
  %ptradd697 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !817
  %348 = load i64, ptr %ptradd697, align 8, !dbg !817
  %eq698 = icmp eq i64 %348, ptrtoint (ptr @"$ct.std.core.dstring.DString" to i64), !dbg !817
  br i1 %eq698, label %if.then699, label %if.exit725, !dbg !817

if.then699:                                       ; preds = %if.exit696
  %349 = load ptr, ptr %2, align 8, !dbg !818
  %checknull701 = icmp eq ptr %349, null, !dbg !818
  %350 = call i1 @llvm.expect.i1(i1 %checknull701, i1 false), !dbg !818
  br i1 %350, label %panic702, label %checkok706, !dbg !818

checkok706:                                       ; preds = %if.then699
  %351 = load ptr, ptr %349, align 8, !dbg !818
  %ptrbool707 = icmp ne ptr %351, null, !dbg !818
  br i1 %ptrbool707, label %cond.lhs708, label %cond.rhs716, !dbg !818

cond.lhs708:                                      ; preds = %checkok706
  %352 = load ptr, ptr %2, align 8, !dbg !820
  %checknull709 = icmp eq ptr %352, null, !dbg !820
  %353 = call i1 @llvm.expect.i1(i1 %checknull709, i1 false), !dbg !820
  br i1 %353, label %panic710, label %checkok714, !dbg !820

checkok714:                                       ; preds = %cond.lhs708
  %354 = load ptr, ptr %352, align 8
  call void @std.core.dstring.DString.str_view(ptr sret(%"char[]") align 8 %sretparam715, ptr %354), !dbg !820
  %355 = load %"char[]", ptr %sretparam715, align 8, !dbg !820
  br label %cond.phi717, !dbg !820

cond.rhs716:                                      ; preds = %checkok706
  br label %cond.phi717, !dbg !821

cond.phi717:                                      ; preds = %cond.rhs716, %checkok714
  %val718 = phi %"char[]" [ %355, %checkok714 ], [ { ptr @.str.109, i64 6 }, %cond.rhs716 ], !dbg !821
  %356 = load ptr, ptr %self, align 8
  store %"char[]" %val718, ptr %indirectarg720, align 8
  %357 = call i64 @std.io.Formatter.out_substr(ptr %retparam719, ptr %356, ptr align 8 %indirectarg720), !dbg !822
  %not_err721 = icmp eq i64 %357, 0, !dbg !822
  %358 = call i1 @llvm.expect.i1(i1 %not_err721, i1 true), !dbg !822
  br i1 %358, label %after_check723, label %assign_optional722, !dbg !822

assign_optional722:                               ; preds = %cond.phi717
  store i64 %357, ptr %reterr700, align 8, !dbg !822
  br label %err_retblock724, !dbg !822

after_check723:                                   ; preds = %cond.phi717
  %359 = load i64, ptr %retparam719, align 8, !dbg !822
  store i64 %359, ptr %0, align 8, !dbg !822
  ret i64 0, !dbg !822

err_retblock724:                                  ; preds = %assign_optional722
  %360 = load i64, ptr %reterr700, align 8, !dbg !822
  ret i64 %360, !dbg !822

if.exit725:                                       ; preds = %if.exit696
  store ptr %2, ptr %self727, align 8
  %361 = load ptr, ptr %self727, align 8, !dbg !823
  %checknull728 = icmp eq ptr %361, null, !dbg !823
  %362 = call i1 @llvm.expect.i1(i1 %checknull728, i1 false), !dbg !823
  br i1 %362, label %panic729, label %checkok733, !dbg !823

checkok733:                                       ; preds = %if.exit725
  %363 = load ptr, ptr %361, align 8, !dbg !823
  %364 = load ptr, ptr %self727, align 8, !dbg !826
  %checknull734 = icmp eq ptr %364, null, !dbg !826
  %365 = call i1 @llvm.expect.i1(i1 %checknull734, i1 false), !dbg !826
  br i1 %365, label %panic735, label %checkok739, !dbg !826

checkok739:                                       ; preds = %checkok733
  %ptradd740 = getelementptr inbounds i8, ptr %364, i64 8, !dbg !826
  %366 = load i64, ptr %ptradd740, align 8, !dbg !826
  %"introspect*741" = inttoptr i64 %366 to ptr, !dbg !826
  %typeid.kind742 = load i8, ptr %"introspect*741", align 8, !dbg !826
  %eq743 = icmp eq i8 %typeid.kind742, 15, !dbg !826
  br i1 %eq743, label %check_type_ok762, label %check_next744, !dbg !826

check_next744:                                    ; preds = %checkok739
  %eq745 = icmp eq i8 %typeid.kind742, 19, !dbg !826
  br i1 %eq745, label %check_type_ok762, label %check_next746, !dbg !826

check_next746:                                    ; preds = %check_next744
  %eq747 = icmp eq i8 %typeid.kind742, 17, !dbg !826
  br i1 %eq747, label %check_type_ok762, label %check_next748, !dbg !826

check_next748:                                    ; preds = %check_next746
  %eq749 = icmp eq i8 %typeid.kind742, 8, !dbg !826
  br i1 %eq749, label %check_type_ok762, label %check_next750, !dbg !826

check_next750:                                    ; preds = %check_next748
  %eq751 = icmp eq i8 %typeid.kind742, 16, !dbg !826
  br i1 %eq751, label %check_type_ok762, label %check_next752, !dbg !826

check_next752:                                    ; preds = %check_next750
  %eq753 = icmp eq i8 %typeid.kind742, 18, !dbg !826
  br i1 %eq753, label %check_type_ok762, label %check_next754, !dbg !826

check_next754:                                    ; preds = %check_next752
  %eq755 = icmp eq i8 %typeid.kind742, 14, !dbg !826
  br i1 %eq755, label %check_type_ok762, label %check_next756, !dbg !826

check_next756:                                    ; preds = %check_next754
  %eq757 = icmp eq i8 %typeid.kind742, 12, !dbg !826
  br i1 %eq757, label %check_type_ok762, label %check_next758, !dbg !826

check_next758:                                    ; preds = %check_next756
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg759, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg760, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg761, align 8
  %367 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %367(ptr align 8 %indirectarg759, ptr align 8 %indirectarg760, ptr align 8 %indirectarg761, i32 199), !dbg !826
  unreachable, !dbg !826

check_type_ok762:                                 ; preds = %check_next756, %check_next754, %check_next752, %check_next750, %check_next748, %check_next746, %check_next744, %checkok739
  %ptradd763 = getelementptr inbounds i8, ptr %"introspect*741", i64 32, !dbg !826
  %typeid.inner764 = load i64, ptr %ptradd763, align 8, !dbg !826
  %368 = insertvalue %any undef, ptr %363, 0, !dbg !826
  %369 = insertvalue %any %368, i64 %typeid.inner764, 1, !dbg !826
  %370 = load ptr, ptr %self, align 8
  store %any %369, ptr %indirectarg766, align 8
  %371 = call i64 @std.io.Formatter.out_str(ptr %retparam765, ptr %370, ptr align 8 %indirectarg766), !dbg !827
  %not_err767 = icmp eq i64 %371, 0, !dbg !827
  %372 = call i1 @llvm.expect.i1(i1 %not_err767, i1 true), !dbg !827
  br i1 %372, label %after_check769, label %assign_optional768, !dbg !827

assign_optional768:                               ; preds = %check_type_ok762
  store i64 %371, ptr %reterr726, align 8, !dbg !827
  br label %err_retblock770, !dbg !827

after_check769:                                   ; preds = %check_type_ok762
  %373 = load i64, ptr %retparam765, align 8, !dbg !827
  store i64 %373, ptr %0, align 8, !dbg !827
  ret i64 0, !dbg !827

err_retblock770:                                  ; preds = %assign_optional768
  %374 = load i64, ptr %reterr726, align 8, !dbg !827
  ret i64 %374, !dbg !827

switch.case771:                                   ; preds = %switch.entry232
  call void @llvm.dbg.declare(metadata ptr %inner, metadata !828, metadata !DIExpression()), !dbg !830
  %ptradd772 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !831
  %375 = load i64, ptr %ptradd772, align 8, !dbg !831
  %"introspect*773" = inttoptr i64 %375 to ptr, !dbg !831
  %typeid.kind774 = load i8, ptr %"introspect*773", align 8, !dbg !831
  %eq775 = icmp eq i8 %typeid.kind774, 15, !dbg !831
  br i1 %eq775, label %check_type_ok794, label %check_next776, !dbg !831

check_next776:                                    ; preds = %switch.case771
  %eq777 = icmp eq i8 %typeid.kind774, 19, !dbg !831
  br i1 %eq777, label %check_type_ok794, label %check_next778, !dbg !831

check_next778:                                    ; preds = %check_next776
  %eq779 = icmp eq i8 %typeid.kind774, 17, !dbg !831
  br i1 %eq779, label %check_type_ok794, label %check_next780, !dbg !831

check_next780:                                    ; preds = %check_next778
  %eq781 = icmp eq i8 %typeid.kind774, 8, !dbg !831
  br i1 %eq781, label %check_type_ok794, label %check_next782, !dbg !831

check_next782:                                    ; preds = %check_next780
  %eq783 = icmp eq i8 %typeid.kind774, 16, !dbg !831
  br i1 %eq783, label %check_type_ok794, label %check_next784, !dbg !831

check_next784:                                    ; preds = %check_next782
  %eq785 = icmp eq i8 %typeid.kind774, 18, !dbg !831
  br i1 %eq785, label %check_type_ok794, label %check_next786, !dbg !831

check_next786:                                    ; preds = %check_next784
  %eq787 = icmp eq i8 %typeid.kind774, 14, !dbg !831
  br i1 %eq787, label %check_type_ok794, label %check_next788, !dbg !831

check_next788:                                    ; preds = %check_next786
  %eq789 = icmp eq i8 %typeid.kind774, 12, !dbg !831
  br i1 %eq789, label %check_type_ok794, label %check_next790, !dbg !831

check_next790:                                    ; preds = %check_next788
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg791, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg792, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg793, align 8
  %376 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %376(ptr align 8 %indirectarg791, ptr align 8 %indirectarg792, ptr align 8 %indirectarg793, i32 190), !dbg !831
  unreachable, !dbg !831

check_type_ok794:                                 ; preds = %check_next788, %check_next786, %check_next784, %check_next782, %check_next780, %check_next778, %check_next776, %switch.case771
  %ptradd795 = getelementptr inbounds i8, ptr %"introspect*773", i64 32, !dbg !831
  %typeid.inner796 = load i64, ptr %ptradd795, align 8, !dbg !831
  store i64 %typeid.inner796, ptr %inner, align 8, !dbg !831
  call void @llvm.dbg.declare(metadata ptr %pointer, metadata !832, metadata !DIExpression()), !dbg !834
  %377 = load ptr, ptr %2, align 8, !dbg !835
  store ptr %377, ptr %pointer, align 8, !dbg !835
  %ptradd797 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !836
  %378 = load i64, ptr %ptradd797, align 8, !dbg !836
  %"introspect*798" = inttoptr i64 %378 to ptr, !dbg !836
  %typeid.kind799 = load i8, ptr %"introspect*798", align 8, !dbg !836
  %eq800 = icmp eq i8 %typeid.kind799, 15, !dbg !836
  br i1 %eq800, label %check_type_ok819, label %check_next801, !dbg !836

check_next801:                                    ; preds = %check_type_ok794
  %eq802 = icmp eq i8 %typeid.kind799, 19, !dbg !836
  br i1 %eq802, label %check_type_ok819, label %check_next803, !dbg !836

check_next803:                                    ; preds = %check_next801
  %eq804 = icmp eq i8 %typeid.kind799, 17, !dbg !836
  br i1 %eq804, label %check_type_ok819, label %check_next805, !dbg !836

check_next805:                                    ; preds = %check_next803
  %eq806 = icmp eq i8 %typeid.kind799, 8, !dbg !836
  br i1 %eq806, label %check_type_ok819, label %check_next807, !dbg !836

check_next807:                                    ; preds = %check_next805
  %eq808 = icmp eq i8 %typeid.kind799, 16, !dbg !836
  br i1 %eq808, label %check_type_ok819, label %check_next809, !dbg !836

check_next809:                                    ; preds = %check_next807
  %eq810 = icmp eq i8 %typeid.kind799, 18, !dbg !836
  br i1 %eq810, label %check_type_ok819, label %check_next811, !dbg !836

check_next811:                                    ; preds = %check_next809
  %eq812 = icmp eq i8 %typeid.kind799, 14, !dbg !836
  br i1 %eq812, label %check_type_ok819, label %check_next813, !dbg !836

check_next813:                                    ; preds = %check_next811
  %eq814 = icmp eq i8 %typeid.kind799, 12, !dbg !836
  br i1 %eq814, label %check_type_ok819, label %check_next815, !dbg !836

check_next815:                                    ; preds = %check_next813
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg816, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg817, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg818, align 8
  %379 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %379(ptr align 8 %indirectarg816, ptr align 8 %indirectarg817, ptr align 8 %indirectarg818, i32 192), !dbg !836
  unreachable, !dbg !836

check_type_ok819:                                 ; preds = %check_next813, %check_next811, %check_next809, %check_next807, %check_next805, %check_next803, %check_next801, %check_type_ok794
  %ptradd820 = getelementptr inbounds i8, ptr %"introspect*798", i64 32, !dbg !836
  %typeid.inner821 = load i64, ptr %ptradd820, align 8, !dbg !836
  %neq822 = icmp ne i64 %typeid.inner821, ptrtoint (ptr @"$ct.void" to i64), !dbg !836
  br i1 %neq822, label %if.then823, label %if.exit863, !dbg !836

if.then823:                                       ; preds = %check_type_ok819
  call void @llvm.dbg.declare(metadata ptr %deref, metadata !837, metadata !DIExpression()), !dbg !839
  %380 = load ptr, ptr %pointer, align 8, !dbg !840
  %checknull824 = icmp eq ptr %380, null, !dbg !840
  %381 = call i1 @llvm.expect.i1(i1 %checknull824, i1 false), !dbg !840
  br i1 %381, label %panic825, label %checkok829, !dbg !840

checkok829:                                       ; preds = %if.then823
  %382 = load ptr, ptr %380, align 8
  store ptr %382, ptr %ptr, align 8
  %383 = load i64, ptr %inner, align 8
  store i64 %383, ptr %type, align 8
  %384 = load ptr, ptr %ptr, align 8, !dbg !841
  %385 = load i64, ptr %type, align 8, !dbg !844
  %386 = insertvalue %any undef, ptr %384, 0, !dbg !844
  %387 = insertvalue %any %386, i64 %385, 1, !dbg !844
  store %any %387, ptr %deref, align 8, !dbg !844
  %388 = load %any, ptr %deref, align 8, !dbg !845
  %389 = load ptr, ptr %self, align 8
  store %any %388, ptr %indirectarg831, align 8
  %390 = call i64 @std.io.Formatter.print_with_function(ptr %retparam830, ptr %389, ptr align 8 %indirectarg831), !dbg !846
  %not_err832 = icmp eq i64 %390, 0, !dbg !846
  %391 = call i1 @llvm.expect.i1(i1 %not_err832, i1 true), !dbg !846
  br i1 %391, label %after_check834, label %assign_optional833, !dbg !846

assign_optional833:                               ; preds = %checkok829
  store i64 %390, ptr %n.f, align 8, !dbg !846
  br label %after_assign835, !dbg !846

after_check834:                                   ; preds = %checkok829
  %392 = load i64, ptr %retparam830, align 8, !dbg !846
  store i64 %392, ptr %n, align 8, !dbg !846
  store i64 0, ptr %n.f, align 8, !dbg !846
  br label %after_assign835, !dbg !846

after_assign835:                                  ; preds = %after_check834, %assign_optional833
  %load.err836 = load i64, ptr %n.f, align 8, !dbg !847
  %result837 = icmp eq i64 %load.err836, 0, !dbg !847
  br i1 %result837, label %if.then838, label %if.exit840, !dbg !847

if.then838:                                       ; preds = %after_assign835
  %393 = load i64, ptr %n, align 8, !dbg !848
  store i64 %393, ptr %0, align 8, !dbg !848
  ret i64 0, !dbg !848

if.exit840:                                       ; preds = %after_assign835
  call void @llvm.dbg.declare(metadata ptr %f842, metadata !849, metadata !DIExpression()), !dbg !851
  br label %testblock843, !dbg !851

testblock843:                                     ; preds = %if.exit840
  %optval844 = load i64, ptr %n.f, align 8, !dbg !853
  %not_err845 = icmp eq i64 %optval844, 0, !dbg !853
  %394 = call i1 @llvm.expect.i1(i1 %not_err845, i1 true), !dbg !853
  br i1 %394, label %after_check847, label %assign_optional846, !dbg !853

assign_optional846:                               ; preds = %testblock843
  store i64 %optval844, ptr %f842, align 8, !dbg !853
  br label %end_block848, !dbg !853

after_check847:                                   ; preds = %testblock843
  store i64 0, ptr %f842, align 8, !dbg !853
  br label %end_block848, !dbg !853

end_block848:                                     ; preds = %after_check847, %assign_optional846
  %395 = load i64, ptr %f842, align 8, !dbg !853
  %neq849 = icmp ne i64 %395, 0, !dbg !853
  br i1 %neq849, label %if.then850, label %if.exit851, !dbg !853

if.then850:                                       ; preds = %end_block848
  %396 = load i64, ptr %f842, align 8, !dbg !854
  store i64 %396, ptr %blockret841, align 8, !dbg !854
  br label %expr_block.exit852, !dbg !854

if.exit851:                                       ; preds = %end_block848
  store i64 0, ptr %blockret841, align 8, !dbg !855
  br label %expr_block.exit852, !dbg !855

expr_block.exit852:                               ; preds = %if.exit851, %if.then850
  %397 = load i64, ptr %blockret841, align 8, !dbg !855
  %neq853 = icmp ne i64 %397, ptrtoint (ptr @"std.core.builtin.SearchResult$MISSING" to i64), !dbg !852
  br i1 %neq853, label %if.then854, label %if.exit862, !dbg !852

if.then854:                                       ; preds = %expr_block.exit852
  %optval856 = load i64, ptr %n.f, align 8, !dbg !856
  %not_err857 = icmp eq i64 %optval856, 0, !dbg !856
  %398 = call i1 @llvm.expect.i1(i1 %not_err857, i1 true), !dbg !856
  br i1 %398, label %after_check859, label %assign_optional858, !dbg !856

assign_optional858:                               ; preds = %if.then854
  store i64 %optval856, ptr %error_var855, align 8, !dbg !856
  br label %guard_block860, !dbg !856

after_check859:                                   ; preds = %if.then854
  br label %noerr_block861, !dbg !856

guard_block860:                                   ; preds = %assign_optional858
  %399 = load i64, ptr %error_var855, align 8, !dbg !856
  ret i64 %399, !dbg !856

noerr_block861:                                   ; preds = %after_check859
  br label %if.exit862, !dbg !856

if.exit862:                                       ; preds = %noerr_block861, %expr_block.exit852
  br label %if.exit863, !dbg !856

if.exit863:                                       ; preds = %if.exit862, %check_type_ok819
  call void @llvm.dbg.declare(metadata ptr %flags864, metadata !857, metadata !DIExpression()), !dbg !858
  %400 = load ptr, ptr %self, align 8, !dbg !859
  %checknull865 = icmp eq ptr %400, null, !dbg !859
  %401 = call i1 @llvm.expect.i1(i1 %checknull865, i1 false), !dbg !859
  br i1 %401, label %panic866, label %checkok870, !dbg !859

checkok870:                                       ; preds = %if.exit863
  %ptradd871 = getelementptr inbounds i8, ptr %400, i64 16, !dbg !859
  %402 = load i32, ptr %ptradd871, align 8, !dbg !859
  store i32 %402, ptr %flags864, align 4, !dbg !859
  call void @llvm.dbg.declare(metadata ptr %width872, metadata !860, metadata !DIExpression()), !dbg !861
  %403 = load ptr, ptr %self, align 8, !dbg !862
  %checknull873 = icmp eq ptr %403, null, !dbg !862
  %404 = call i1 @llvm.expect.i1(i1 %checknull873, i1 false), !dbg !862
  br i1 %404, label %panic874, label %checkok878, !dbg !862

checkok878:                                       ; preds = %checkok870
  %ptradd879 = getelementptr inbounds i8, ptr %403, i64 16, !dbg !862
  %ptradd880 = getelementptr inbounds i8, ptr %ptradd879, i64 4, !dbg !862
  %405 = load i32, ptr %ptradd880, align 4, !dbg !862
  store i32 %405, ptr %width872, align 4, !dbg !862
  %406 = load ptr, ptr %self, align 8, !dbg !863
  %checknull881 = icmp eq ptr %406, null, !dbg !863
  %407 = call i1 @llvm.expect.i1(i1 %checknull881, i1 false), !dbg !863
  br i1 %407, label %panic882, label %checkok886, !dbg !863

checkok886:                                       ; preds = %checkok878
  %ptradd887 = getelementptr inbounds i8, ptr %406, i64 16, !dbg !863
  %ptradd888 = getelementptr inbounds i8, ptr %ptradd887, i64 4, !dbg !863
  store i32 0, ptr %ptradd888, align 4, !dbg !864
  %408 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.111, i64 2 }, ptr %indirectarg891, align 8
  %409 = call i64 @std.io.Formatter.out_substr(ptr %retparam890, ptr %408, ptr align 8 %indirectarg891), !dbg !865
  %not_err892 = icmp eq i64 %409, 0, !dbg !865
  %410 = call i1 @llvm.expect.i1(i1 %not_err892, i1 true), !dbg !865
  br i1 %410, label %after_check894, label %assign_optional893, !dbg !865

assign_optional893:                               ; preds = %checkok886
  store i64 %409, ptr %error_var889, align 8, !dbg !865
  br label %guard_block895, !dbg !865

after_check894:                                   ; preds = %checkok886
  br label %noerr_block911, !dbg !865

guard_block895:                                   ; preds = %assign_optional893
  %411 = load ptr, ptr %self, align 8, !dbg !866
  %checknull896 = icmp eq ptr %411, null, !dbg !866
  %412 = call i1 @llvm.expect.i1(i1 %checknull896, i1 false), !dbg !866
  br i1 %412, label %panic897, label %checkok901, !dbg !866

checkok901:                                       ; preds = %guard_block895
  %ptradd902 = getelementptr inbounds i8, ptr %411, i64 16, !dbg !866
  %413 = load i32, ptr %flags864, align 4, !dbg !868
  store i32 %413, ptr %ptradd902, align 8, !dbg !868
  %414 = load ptr, ptr %self, align 8, !dbg !869
  %checknull903 = icmp eq ptr %414, null, !dbg !869
  %415 = call i1 @llvm.expect.i1(i1 %checknull903, i1 false), !dbg !869
  br i1 %415, label %panic904, label %checkok908, !dbg !869

checkok908:                                       ; preds = %checkok901
  %ptradd909 = getelementptr inbounds i8, ptr %414, i64 16, !dbg !869
  %ptradd910 = getelementptr inbounds i8, ptr %ptradd909, i64 4, !dbg !869
  %416 = load i32, ptr %width872, align 4, !dbg !870
  store i32 %416, ptr %ptradd910, align 4, !dbg !870
  %417 = load i64, ptr %error_var889, align 8, !dbg !870
  ret i64 %417, !dbg !870

noerr_block911:                                   ; preds = %after_check894
  %418 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg914, ptr align 8 %2, i32 16, i1 false)
  %419 = call i64 @std.io.Formatter.ntoa_any(ptr %retparam913, ptr %418, ptr align 8 %indirectarg914, i32 16), !dbg !871
  %not_err915 = icmp eq i64 %419, 0, !dbg !871
  %420 = call i1 @llvm.expect.i1(i1 %not_err915, i1 true), !dbg !871
  br i1 %420, label %after_check917, label %assign_optional916, !dbg !871

assign_optional916:                               ; preds = %noerr_block911
  store i64 %419, ptr %reterr912, align 8, !dbg !871
  br label %err_retblock933, !dbg !871

after_check917:                                   ; preds = %noerr_block911
  %421 = load i64, ptr %retparam913, align 8, !dbg !871
  %422 = load ptr, ptr %self, align 8, !dbg !872
  %checknull918 = icmp eq ptr %422, null, !dbg !872
  %423 = call i1 @llvm.expect.i1(i1 %checknull918, i1 false), !dbg !872
  br i1 %423, label %panic919, label %checkok923, !dbg !872

checkok923:                                       ; preds = %after_check917
  %ptradd924 = getelementptr inbounds i8, ptr %422, i64 16, !dbg !872
  %424 = load i32, ptr %flags864, align 4, !dbg !874
  store i32 %424, ptr %ptradd924, align 8, !dbg !874
  %425 = load ptr, ptr %self, align 8, !dbg !875
  %checknull925 = icmp eq ptr %425, null, !dbg !875
  %426 = call i1 @llvm.expect.i1(i1 %checknull925, i1 false), !dbg !875
  br i1 %426, label %panic926, label %checkok930, !dbg !875

checkok930:                                       ; preds = %checkok923
  %ptradd931 = getelementptr inbounds i8, ptr %425, i64 16, !dbg !875
  %ptradd932 = getelementptr inbounds i8, ptr %ptradd931, i64 4, !dbg !875
  %427 = load i32, ptr %width872, align 4, !dbg !876
  store i32 %427, ptr %ptradd932, align 4, !dbg !876
  store i64 %421, ptr %0, align 8, !dbg !876
  ret i64 0, !dbg !876

err_retblock933:                                  ; preds = %assign_optional916
  %428 = load ptr, ptr %self, align 8, !dbg !877
  %checknull934 = icmp eq ptr %428, null, !dbg !877
  %429 = call i1 @llvm.expect.i1(i1 %checknull934, i1 false), !dbg !877
  br i1 %429, label %panic935, label %checkok939, !dbg !877

checkok939:                                       ; preds = %err_retblock933
  %ptradd940 = getelementptr inbounds i8, ptr %428, i64 16, !dbg !877
  %430 = load i32, ptr %flags864, align 4, !dbg !879
  store i32 %430, ptr %ptradd940, align 8, !dbg !879
  %431 = load ptr, ptr %self, align 8, !dbg !880
  %checknull941 = icmp eq ptr %431, null, !dbg !880
  %432 = call i1 @llvm.expect.i1(i1 %checknull941, i1 false), !dbg !880
  br i1 %432, label %panic942, label %checkok946, !dbg !880

checkok946:                                       ; preds = %checkok939
  %ptradd947 = getelementptr inbounds i8, ptr %431, i64 16, !dbg !880
  %ptradd948 = getelementptr inbounds i8, ptr %ptradd947, i64 4, !dbg !880
  %433 = load i32, ptr %width872, align 4, !dbg !881
  store i32 %433, ptr %ptradd948, align 4, !dbg !881
  %434 = load i64, ptr %reterr912, align 8, !dbg !881
  ret i64 %434, !dbg !881

switch.case949:                                   ; preds = %switch.entry232
  call void @llvm.dbg.declare(metadata ptr %flags950, metadata !882, metadata !DIExpression()), !dbg !884
  %435 = load ptr, ptr %self, align 8, !dbg !885
  %checknull951 = icmp eq ptr %435, null, !dbg !885
  %436 = call i1 @llvm.expect.i1(i1 %checknull951, i1 false), !dbg !885
  br i1 %436, label %panic952, label %checkok956, !dbg !885

checkok956:                                       ; preds = %switch.case949
  %ptradd957 = getelementptr inbounds i8, ptr %435, i64 16, !dbg !885
  %437 = load i32, ptr %ptradd957, align 8, !dbg !885
  store i32 %437, ptr %flags950, align 4, !dbg !885
  call void @llvm.dbg.declare(metadata ptr %width958, metadata !886, metadata !DIExpression()), !dbg !887
  %438 = load ptr, ptr %self, align 8, !dbg !888
  %checknull959 = icmp eq ptr %438, null, !dbg !888
  %439 = call i1 @llvm.expect.i1(i1 %checknull959, i1 false), !dbg !888
  br i1 %439, label %panic960, label %checkok964, !dbg !888

checkok964:                                       ; preds = %checkok956
  %ptradd965 = getelementptr inbounds i8, ptr %438, i64 16, !dbg !888
  %ptradd966 = getelementptr inbounds i8, ptr %ptradd965, i64 4, !dbg !888
  %440 = load i32, ptr %ptradd966, align 4, !dbg !888
  store i32 %440, ptr %width958, align 4, !dbg !888
  %441 = load ptr, ptr %self, align 8, !dbg !889
  %checknull967 = icmp eq ptr %441, null, !dbg !889
  %442 = call i1 @llvm.expect.i1(i1 %checknull967, i1 false), !dbg !889
  br i1 %442, label %panic968, label %checkok972, !dbg !889

checkok972:                                       ; preds = %checkok964
  %ptradd973 = getelementptr inbounds i8, ptr %441, i64 16, !dbg !889
  store i32 0, ptr %ptradd973, align 8, !dbg !889
  %443 = load ptr, ptr %self, align 8, !dbg !890
  %checknull974 = icmp eq ptr %443, null, !dbg !890
  %444 = call i1 @llvm.expect.i1(i1 %checknull974, i1 false), !dbg !890
  br i1 %444, label %panic975, label %checkok979, !dbg !890

checkok979:                                       ; preds = %checkok972
  %ptradd980 = getelementptr inbounds i8, ptr %443, i64 16, !dbg !890
  %ptradd981 = getelementptr inbounds i8, ptr %ptradd980, i64 4, !dbg !890
  store i32 0, ptr %ptradd981, align 4, !dbg !891
  call void @llvm.dbg.declare(metadata ptr %inner982, metadata !892, metadata !DIExpression()), !dbg !893
  %ptradd983 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !894
  %445 = load i64, ptr %ptradd983, align 8, !dbg !894
  %"introspect*984" = inttoptr i64 %445 to ptr, !dbg !894
  %typeid.kind985 = load i8, ptr %"introspect*984", align 8, !dbg !894
  %eq986 = icmp eq i8 %typeid.kind985, 15, !dbg !894
  br i1 %eq986, label %check_type_ok1005, label %check_next987, !dbg !894

check_next987:                                    ; preds = %checkok979
  %eq988 = icmp eq i8 %typeid.kind985, 19, !dbg !894
  br i1 %eq988, label %check_type_ok1005, label %check_next989, !dbg !894

check_next989:                                    ; preds = %check_next987
  %eq990 = icmp eq i8 %typeid.kind985, 17, !dbg !894
  br i1 %eq990, label %check_type_ok1005, label %check_next991, !dbg !894

check_next991:                                    ; preds = %check_next989
  %eq992 = icmp eq i8 %typeid.kind985, 8, !dbg !894
  br i1 %eq992, label %check_type_ok1005, label %check_next993, !dbg !894

check_next993:                                    ; preds = %check_next991
  %eq994 = icmp eq i8 %typeid.kind985, 16, !dbg !894
  br i1 %eq994, label %check_type_ok1005, label %check_next995, !dbg !894

check_next995:                                    ; preds = %check_next993
  %eq996 = icmp eq i8 %typeid.kind985, 18, !dbg !894
  br i1 %eq996, label %check_type_ok1005, label %check_next997, !dbg !894

check_next997:                                    ; preds = %check_next995
  %eq998 = icmp eq i8 %typeid.kind985, 14, !dbg !894
  br i1 %eq998, label %check_type_ok1005, label %check_next999, !dbg !894

check_next999:                                    ; preds = %check_next997
  %eq1000 = icmp eq i8 %typeid.kind985, 12, !dbg !894
  br i1 %eq1000, label %check_type_ok1005, label %check_next1001, !dbg !894

check_next1001:                                   ; preds = %check_next999
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg1002, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1003, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1004, align 8
  %446 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %446(ptr align 8 %indirectarg1002, ptr align 8 %indirectarg1003, ptr align 8 %indirectarg1004, i32 220), !dbg !894
  unreachable, !dbg !894

check_type_ok1005:                                ; preds = %check_next999, %check_next997, %check_next995, %check_next993, %check_next991, %check_next989, %check_next987, %checkok979
  %ptradd1006 = getelementptr inbounds i8, ptr %"introspect*984", i64 32, !dbg !894
  %typeid.inner1007 = load i64, ptr %ptradd1006, align 8, !dbg !894
  store i64 %typeid.inner1007, ptr %inner982, align 8, !dbg !894
  call void @llvm.dbg.declare(metadata ptr %size, metadata !895, metadata !DIExpression()), !dbg !896
  %447 = load i64, ptr %inner982, align 8, !dbg !897
  %"introspect*1008" = inttoptr i64 %447 to ptr, !dbg !897
  %typeid.kind1009 = load i8, ptr %"introspect*1008", align 8, !dbg !897
  %ptradd1010 = getelementptr inbounds i8, ptr %"introspect*1008", i64 24, !dbg !897
  %typeid.size = load i64, ptr %ptradd1010, align 8, !dbg !897
  store i64 %typeid.size, ptr %size, align 8, !dbg !897
  call void @llvm.dbg.declare(metadata ptr %alen, metadata !898, metadata !DIExpression()), !dbg !899
  %ptradd1011 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !900
  %448 = load i64, ptr %ptradd1011, align 8, !dbg !900
  %"introspect*1012" = inttoptr i64 %448 to ptr, !dbg !900
  %typeid.kind1013 = load i8, ptr %"introspect*1012", align 8, !dbg !900
  %eq1014 = icmp eq i8 %typeid.kind1013, 15, !dbg !900
  br i1 %eq1014, label %check_type_ok1025, label %check_next1015, !dbg !900

check_next1015:                                   ; preds = %check_type_ok1005
  %eq1016 = icmp eq i8 %typeid.kind1013, 17, !dbg !900
  br i1 %eq1016, label %check_type_ok1025, label %check_next1017, !dbg !900

check_next1017:                                   ; preds = %check_next1015
  %eq1018 = icmp eq i8 %typeid.kind1013, 8, !dbg !900
  br i1 %eq1018, label %check_type_ok1025, label %check_next1019, !dbg !900

check_next1019:                                   ; preds = %check_next1017
  %eq1020 = icmp eq i8 %typeid.kind1013, 16, !dbg !900
  br i1 %eq1020, label %check_type_ok1025, label %check_next1021, !dbg !900

check_next1021:                                   ; preds = %check_next1019
  store %"char[]" { ptr @.panic_msg.112, i64 43 }, ptr %indirectarg1022, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1023, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1024, align 8
  %449 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %449(ptr align 8 %indirectarg1022, ptr align 8 %indirectarg1023, ptr align 8 %indirectarg1024, i32 222), !dbg !900
  unreachable, !dbg !900

check_type_ok1025:                                ; preds = %check_next1019, %check_next1017, %check_next1015, %check_type_ok1005
  %ptradd1026 = getelementptr inbounds i8, ptr %"introspect*1012", i64 40, !dbg !900
  %typeid.len = load i64, ptr %ptradd1026, align 8, !dbg !900
  store i64 %typeid.len, ptr %alen, align 8, !dbg !900
  call void @llvm.dbg.declare(metadata ptr %ptr1027, metadata !901, metadata !DIExpression()), !dbg !902
  %450 = load ptr, ptr %2, align 8, !dbg !903
  store ptr %450, ptr %ptr1027, align 8, !dbg !903
  call void @llvm.dbg.declare(metadata ptr %len, metadata !904, metadata !DIExpression()), !dbg !905
  %451 = load ptr, ptr %self, align 8
  %452 = call i64 @std.io.Formatter.out(ptr %retparam1029, ptr %451, i8 91), !dbg !906
  %not_err1030 = icmp eq i64 %452, 0, !dbg !906
  %453 = call i1 @llvm.expect.i1(i1 %not_err1030, i1 true), !dbg !906
  br i1 %453, label %after_check1032, label %assign_optional1031, !dbg !906

assign_optional1031:                              ; preds = %check_type_ok1025
  store i64 %452, ptr %error_var1028, align 8, !dbg !906
  br label %guard_block1033, !dbg !906

after_check1032:                                  ; preds = %check_type_ok1025
  br label %noerr_block1049, !dbg !906

guard_block1033:                                  ; preds = %assign_optional1031
  %454 = load ptr, ptr %self, align 8, !dbg !907
  %checknull1034 = icmp eq ptr %454, null, !dbg !907
  %455 = call i1 @llvm.expect.i1(i1 %checknull1034, i1 false), !dbg !907
  br i1 %455, label %panic1035, label %checkok1039, !dbg !907

checkok1039:                                      ; preds = %guard_block1033
  %ptradd1040 = getelementptr inbounds i8, ptr %454, i64 16, !dbg !907
  %456 = load i32, ptr %flags950, align 4, !dbg !909
  store i32 %456, ptr %ptradd1040, align 8, !dbg !909
  %457 = load ptr, ptr %self, align 8, !dbg !910
  %checknull1041 = icmp eq ptr %457, null, !dbg !910
  %458 = call i1 @llvm.expect.i1(i1 %checknull1041, i1 false), !dbg !910
  br i1 %458, label %panic1042, label %checkok1046, !dbg !910

checkok1046:                                      ; preds = %checkok1039
  %ptradd1047 = getelementptr inbounds i8, ptr %457, i64 16, !dbg !910
  %ptradd1048 = getelementptr inbounds i8, ptr %ptradd1047, i64 4, !dbg !910
  %459 = load i32, ptr %width958, align 4, !dbg !911
  store i32 %459, ptr %ptradd1048, align 4, !dbg !911
  %460 = load i64, ptr %error_var1028, align 8, !dbg !911
  ret i64 %460, !dbg !911

noerr_block1049:                                  ; preds = %after_check1032
  %461 = load i64, ptr %retparam1029, align 8, !dbg !911
  store i64 %461, ptr %len, align 8, !dbg !911
  call void @llvm.dbg.declare(metadata ptr %i1050, metadata !912, metadata !DIExpression()), !dbg !914
  store i64 0, ptr %i1050, align 8, !dbg !915
  br label %loop.cond, !dbg !915

loop.cond:                                        ; preds = %noerr_block1103, %noerr_block1049
  %462 = load i64, ptr %i1050, align 8, !dbg !916
  %463 = load i64, ptr %alen, align 8, !dbg !917
  %lt1051 = icmp ult i64 %462, %463, !dbg !916
  br i1 %lt1051, label %loop.body, label %loop.exit, !dbg !916

loop.body:                                        ; preds = %loop.cond
  %464 = load i64, ptr %i1050, align 8, !dbg !918
  %neq1052 = icmp ne i64 0, %464, !dbg !918
  br i1 %neq1052, label %if.then1053, label %if.exit1078, !dbg !918

if.then1053:                                      ; preds = %loop.body
  %465 = load i64, ptr %len, align 8, !dbg !920
  %466 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.113, i64 2 }, ptr %indirectarg1056, align 8
  %467 = call i64 @std.io.Formatter.out_substr(ptr %retparam1055, ptr %466, ptr align 8 %indirectarg1056), !dbg !921
  %not_err1057 = icmp eq i64 %467, 0, !dbg !921
  %468 = call i1 @llvm.expect.i1(i1 %not_err1057, i1 true), !dbg !921
  br i1 %468, label %after_check1059, label %assign_optional1058, !dbg !921

assign_optional1058:                              ; preds = %if.then1053
  store i64 %467, ptr %error_var1054, align 8, !dbg !921
  br label %guard_block1060, !dbg !921

after_check1059:                                  ; preds = %if.then1053
  br label %noerr_block1076, !dbg !921

guard_block1060:                                  ; preds = %assign_optional1058
  %469 = load ptr, ptr %self, align 8, !dbg !922
  %checknull1061 = icmp eq ptr %469, null, !dbg !922
  %470 = call i1 @llvm.expect.i1(i1 %checknull1061, i1 false), !dbg !922
  br i1 %470, label %panic1062, label %checkok1066, !dbg !922

checkok1066:                                      ; preds = %guard_block1060
  %ptradd1067 = getelementptr inbounds i8, ptr %469, i64 16, !dbg !922
  %471 = load i32, ptr %flags950, align 4, !dbg !924
  store i32 %471, ptr %ptradd1067, align 8, !dbg !924
  %472 = load ptr, ptr %self, align 8, !dbg !925
  %checknull1068 = icmp eq ptr %472, null, !dbg !925
  %473 = call i1 @llvm.expect.i1(i1 %checknull1068, i1 false), !dbg !925
  br i1 %473, label %panic1069, label %checkok1073, !dbg !925

checkok1073:                                      ; preds = %checkok1066
  %ptradd1074 = getelementptr inbounds i8, ptr %472, i64 16, !dbg !925
  %ptradd1075 = getelementptr inbounds i8, ptr %ptradd1074, i64 4, !dbg !925
  %474 = load i32, ptr %width958, align 4, !dbg !926
  store i32 %474, ptr %ptradd1075, align 4, !dbg !926
  %475 = load i64, ptr %error_var1054, align 8, !dbg !926
  ret i64 %475, !dbg !926

noerr_block1076:                                  ; preds = %after_check1059
  %476 = load i64, ptr %retparam1055, align 8, !dbg !926
  %add1077 = add i64 %465, %476, !dbg !920
  store i64 %add1077, ptr %len, align 8, !dbg !920
  br label %if.exit1078, !dbg !920

if.exit1078:                                      ; preds = %noerr_block1076, %loop.body
  %477 = load i64, ptr %len, align 8, !dbg !927
  %478 = load ptr, ptr %ptr1027, align 8
  store ptr %478, ptr %ptr1080, align 8
  %479 = load i64, ptr %inner982, align 8
  store i64 %479, ptr %type1081, align 8
  %480 = load ptr, ptr %ptr1080, align 8, !dbg !928
  %481 = load i64, ptr %type1081, align 8, !dbg !931
  %482 = insertvalue %any undef, ptr %480, 0, !dbg !931
  %483 = insertvalue %any %482, i64 %481, 1, !dbg !931
  %484 = load ptr, ptr %self, align 8
  store %any %483, ptr %indirectarg1083, align 8
  %485 = call i64 @std.io.Formatter.out_str(ptr %retparam1082, ptr %484, ptr align 8 %indirectarg1083), !dbg !932
  %not_err1084 = icmp eq i64 %485, 0, !dbg !932
  %486 = call i1 @llvm.expect.i1(i1 %not_err1084, i1 true), !dbg !932
  br i1 %486, label %after_check1086, label %assign_optional1085, !dbg !932

assign_optional1085:                              ; preds = %if.exit1078
  store i64 %485, ptr %error_var1079, align 8, !dbg !932
  br label %guard_block1087, !dbg !932

after_check1086:                                  ; preds = %if.exit1078
  br label %noerr_block1103, !dbg !932

guard_block1087:                                  ; preds = %assign_optional1085
  %487 = load ptr, ptr %self, align 8, !dbg !933
  %checknull1088 = icmp eq ptr %487, null, !dbg !933
  %488 = call i1 @llvm.expect.i1(i1 %checknull1088, i1 false), !dbg !933
  br i1 %488, label %panic1089, label %checkok1093, !dbg !933

checkok1093:                                      ; preds = %guard_block1087
  %ptradd1094 = getelementptr inbounds i8, ptr %487, i64 16, !dbg !933
  %489 = load i32, ptr %flags950, align 4, !dbg !935
  store i32 %489, ptr %ptradd1094, align 8, !dbg !935
  %490 = load ptr, ptr %self, align 8, !dbg !936
  %checknull1095 = icmp eq ptr %490, null, !dbg !936
  %491 = call i1 @llvm.expect.i1(i1 %checknull1095, i1 false), !dbg !936
  br i1 %491, label %panic1096, label %checkok1100, !dbg !936

checkok1100:                                      ; preds = %checkok1093
  %ptradd1101 = getelementptr inbounds i8, ptr %490, i64 16, !dbg !936
  %ptradd1102 = getelementptr inbounds i8, ptr %ptradd1101, i64 4, !dbg !936
  %492 = load i32, ptr %width958, align 4, !dbg !937
  store i32 %492, ptr %ptradd1102, align 4, !dbg !937
  %493 = load i64, ptr %error_var1079, align 8, !dbg !937
  ret i64 %493, !dbg !937

noerr_block1103:                                  ; preds = %after_check1086
  %494 = load i64, ptr %retparam1082, align 8, !dbg !937
  %add1104 = add i64 %477, %494, !dbg !927
  store i64 %add1104, ptr %len, align 8, !dbg !927
  %495 = load ptr, ptr %ptr1027, align 8, !dbg !938
  %496 = load i64, ptr %size, align 8, !dbg !939
  %ptradd_any = getelementptr i8, ptr %495, i64 %496, !dbg !938
  store ptr %ptradd_any, ptr %ptr1027, align 8, !dbg !938
  %497 = load i64, ptr %i1050, align 8, !dbg !940
  %add1105 = add i64 %497, 1, !dbg !940
  store i64 %add1105, ptr %i1050, align 8, !dbg !940
  br label %loop.cond, !dbg !940

loop.exit:                                        ; preds = %loop.cond
  %498 = load i64, ptr %len, align 8, !dbg !941
  %499 = load ptr, ptr %self, align 8
  %500 = call i64 @std.io.Formatter.out(ptr %retparam1107, ptr %499, i8 93), !dbg !942
  %not_err1108 = icmp eq i64 %500, 0, !dbg !942
  %501 = call i1 @llvm.expect.i1(i1 %not_err1108, i1 true), !dbg !942
  br i1 %501, label %after_check1110, label %assign_optional1109, !dbg !942

assign_optional1109:                              ; preds = %loop.exit
  store i64 %500, ptr %error_var1106, align 8, !dbg !942
  br label %guard_block1111, !dbg !942

after_check1110:                                  ; preds = %loop.exit
  br label %noerr_block1127, !dbg !942

guard_block1111:                                  ; preds = %assign_optional1109
  %502 = load ptr, ptr %self, align 8, !dbg !943
  %checknull1112 = icmp eq ptr %502, null, !dbg !943
  %503 = call i1 @llvm.expect.i1(i1 %checknull1112, i1 false), !dbg !943
  br i1 %503, label %panic1113, label %checkok1117, !dbg !943

checkok1117:                                      ; preds = %guard_block1111
  %ptradd1118 = getelementptr inbounds i8, ptr %502, i64 16, !dbg !943
  %504 = load i32, ptr %flags950, align 4, !dbg !945
  store i32 %504, ptr %ptradd1118, align 8, !dbg !945
  %505 = load ptr, ptr %self, align 8, !dbg !946
  %checknull1119 = icmp eq ptr %505, null, !dbg !946
  %506 = call i1 @llvm.expect.i1(i1 %checknull1119, i1 false), !dbg !946
  br i1 %506, label %panic1120, label %checkok1124, !dbg !946

checkok1124:                                      ; preds = %checkok1117
  %ptradd1125 = getelementptr inbounds i8, ptr %505, i64 16, !dbg !946
  %ptradd1126 = getelementptr inbounds i8, ptr %ptradd1125, i64 4, !dbg !946
  %507 = load i32, ptr %width958, align 4, !dbg !947
  store i32 %507, ptr %ptradd1126, align 4, !dbg !947
  %508 = load i64, ptr %error_var1106, align 8, !dbg !947
  ret i64 %508, !dbg !947

noerr_block1127:                                  ; preds = %after_check1110
  %509 = load i64, ptr %retparam1107, align 8, !dbg !947
  %add1128 = add i64 %498, %509, !dbg !941
  store i64 %add1128, ptr %len, align 8, !dbg !941
  %510 = load i64, ptr %len, align 8, !dbg !948
  %511 = load ptr, ptr %self, align 8, !dbg !949
  %checknull1130 = icmp eq ptr %511, null, !dbg !949
  %512 = call i1 @llvm.expect.i1(i1 %checknull1130, i1 false), !dbg !949
  br i1 %512, label %panic1131, label %checkok1135, !dbg !949

checkok1135:                                      ; preds = %noerr_block1127
  %ptradd1136 = getelementptr inbounds i8, ptr %511, i64 16, !dbg !949
  %513 = load i32, ptr %flags950, align 4, !dbg !951
  store i32 %513, ptr %ptradd1136, align 8, !dbg !951
  %514 = load ptr, ptr %self, align 8, !dbg !952
  %checknull1137 = icmp eq ptr %514, null, !dbg !952
  %515 = call i1 @llvm.expect.i1(i1 %checknull1137, i1 false), !dbg !952
  br i1 %515, label %panic1138, label %checkok1142, !dbg !952

checkok1142:                                      ; preds = %checkok1135
  %ptradd1143 = getelementptr inbounds i8, ptr %514, i64 16, !dbg !952
  %ptradd1144 = getelementptr inbounds i8, ptr %ptradd1143, i64 4, !dbg !952
  %516 = load i32, ptr %width958, align 4, !dbg !953
  store i32 %516, ptr %ptradd1144, align 4, !dbg !953
  store i64 %510, ptr %0, align 8, !dbg !953
  ret i64 0, !dbg !953

switch.case1145:                                  ; preds = %switch.entry232
  call void @llvm.dbg.declare(metadata ptr %flags1146, metadata !954, metadata !DIExpression()), !dbg !956
  %517 = load ptr, ptr %self, align 8, !dbg !957
  %checknull1147 = icmp eq ptr %517, null, !dbg !957
  %518 = call i1 @llvm.expect.i1(i1 %checknull1147, i1 false), !dbg !957
  br i1 %518, label %panic1148, label %checkok1152, !dbg !957

checkok1152:                                      ; preds = %switch.case1145
  %ptradd1153 = getelementptr inbounds i8, ptr %517, i64 16, !dbg !957
  %519 = load i32, ptr %ptradd1153, align 8, !dbg !957
  store i32 %519, ptr %flags1146, align 4, !dbg !957
  call void @llvm.dbg.declare(metadata ptr %width1154, metadata !958, metadata !DIExpression()), !dbg !959
  %520 = load ptr, ptr %self, align 8, !dbg !960
  %checknull1155 = icmp eq ptr %520, null, !dbg !960
  %521 = call i1 @llvm.expect.i1(i1 %checknull1155, i1 false), !dbg !960
  br i1 %521, label %panic1156, label %checkok1160, !dbg !960

checkok1160:                                      ; preds = %checkok1152
  %ptradd1161 = getelementptr inbounds i8, ptr %520, i64 16, !dbg !960
  %ptradd1162 = getelementptr inbounds i8, ptr %ptradd1161, i64 4, !dbg !960
  %522 = load i32, ptr %ptradd1162, align 4, !dbg !960
  store i32 %522, ptr %width1154, align 4, !dbg !960
  %523 = load ptr, ptr %self, align 8, !dbg !961
  %checknull1163 = icmp eq ptr %523, null, !dbg !961
  %524 = call i1 @llvm.expect.i1(i1 %checknull1163, i1 false), !dbg !961
  br i1 %524, label %panic1164, label %checkok1168, !dbg !961

checkok1168:                                      ; preds = %checkok1160
  %ptradd1169 = getelementptr inbounds i8, ptr %523, i64 16, !dbg !961
  store i32 0, ptr %ptradd1169, align 8, !dbg !961
  %525 = load ptr, ptr %self, align 8, !dbg !962
  %checknull1170 = icmp eq ptr %525, null, !dbg !962
  %526 = call i1 @llvm.expect.i1(i1 %checknull1170, i1 false), !dbg !962
  br i1 %526, label %panic1171, label %checkok1175, !dbg !962

checkok1175:                                      ; preds = %checkok1168
  %ptradd1176 = getelementptr inbounds i8, ptr %525, i64 16, !dbg !962
  %ptradd1177 = getelementptr inbounds i8, ptr %ptradd1176, i64 4, !dbg !962
  store i32 0, ptr %ptradd1177, align 4, !dbg !963
  call void @llvm.dbg.declare(metadata ptr %inner1178, metadata !964, metadata !DIExpression()), !dbg !965
  %ptradd1179 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !966
  %527 = load i64, ptr %ptradd1179, align 8, !dbg !966
  %"introspect*1180" = inttoptr i64 %527 to ptr, !dbg !966
  %typeid.kind1181 = load i8, ptr %"introspect*1180", align 8, !dbg !966
  %eq1182 = icmp eq i8 %typeid.kind1181, 15, !dbg !966
  br i1 %eq1182, label %check_type_ok1201, label %check_next1183, !dbg !966

check_next1183:                                   ; preds = %checkok1175
  %eq1184 = icmp eq i8 %typeid.kind1181, 19, !dbg !966
  br i1 %eq1184, label %check_type_ok1201, label %check_next1185, !dbg !966

check_next1185:                                   ; preds = %check_next1183
  %eq1186 = icmp eq i8 %typeid.kind1181, 17, !dbg !966
  br i1 %eq1186, label %check_type_ok1201, label %check_next1187, !dbg !966

check_next1187:                                   ; preds = %check_next1185
  %eq1188 = icmp eq i8 %typeid.kind1181, 8, !dbg !966
  br i1 %eq1188, label %check_type_ok1201, label %check_next1189, !dbg !966

check_next1189:                                   ; preds = %check_next1187
  %eq1190 = icmp eq i8 %typeid.kind1181, 16, !dbg !966
  br i1 %eq1190, label %check_type_ok1201, label %check_next1191, !dbg !966

check_next1191:                                   ; preds = %check_next1189
  %eq1192 = icmp eq i8 %typeid.kind1181, 18, !dbg !966
  br i1 %eq1192, label %check_type_ok1201, label %check_next1193, !dbg !966

check_next1193:                                   ; preds = %check_next1191
  %eq1194 = icmp eq i8 %typeid.kind1181, 14, !dbg !966
  br i1 %eq1194, label %check_type_ok1201, label %check_next1195, !dbg !966

check_next1195:                                   ; preds = %check_next1193
  %eq1196 = icmp eq i8 %typeid.kind1181, 12, !dbg !966
  br i1 %eq1196, label %check_type_ok1201, label %check_next1197, !dbg !966

check_next1197:                                   ; preds = %check_next1195
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg1198, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1199, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1200, align 8
  %528 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %528(ptr align 8 %indirectarg1198, ptr align 8 %indirectarg1199, ptr align 8 %indirectarg1200, i32 245), !dbg !966
  unreachable, !dbg !966

check_type_ok1201:                                ; preds = %check_next1195, %check_next1193, %check_next1191, %check_next1189, %check_next1187, %check_next1185, %check_next1183, %checkok1175
  %ptradd1202 = getelementptr inbounds i8, ptr %"introspect*1180", i64 32, !dbg !966
  %typeid.inner1203 = load i64, ptr %ptradd1202, align 8, !dbg !966
  store i64 %typeid.inner1203, ptr %inner1178, align 8, !dbg !966
  call void @llvm.dbg.declare(metadata ptr %size1204, metadata !967, metadata !DIExpression()), !dbg !968
  %529 = load i64, ptr %inner1178, align 8, !dbg !969
  %"introspect*1205" = inttoptr i64 %529 to ptr, !dbg !969
  %typeid.kind1206 = load i8, ptr %"introspect*1205", align 8, !dbg !969
  %ptradd1207 = getelementptr inbounds i8, ptr %"introspect*1205", i64 24, !dbg !969
  %typeid.size1208 = load i64, ptr %ptradd1207, align 8, !dbg !969
  store i64 %typeid.size1208, ptr %size1204, align 8, !dbg !969
  call void @llvm.dbg.declare(metadata ptr %vlen, metadata !970, metadata !DIExpression()), !dbg !971
  %ptradd1209 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !972
  %530 = load i64, ptr %ptradd1209, align 8, !dbg !972
  %"introspect*1210" = inttoptr i64 %530 to ptr, !dbg !972
  %typeid.kind1211 = load i8, ptr %"introspect*1210", align 8, !dbg !972
  %eq1212 = icmp eq i8 %typeid.kind1211, 15, !dbg !972
  br i1 %eq1212, label %check_type_ok1223, label %check_next1213, !dbg !972

check_next1213:                                   ; preds = %check_type_ok1201
  %eq1214 = icmp eq i8 %typeid.kind1211, 17, !dbg !972
  br i1 %eq1214, label %check_type_ok1223, label %check_next1215, !dbg !972

check_next1215:                                   ; preds = %check_next1213
  %eq1216 = icmp eq i8 %typeid.kind1211, 8, !dbg !972
  br i1 %eq1216, label %check_type_ok1223, label %check_next1217, !dbg !972

check_next1217:                                   ; preds = %check_next1215
  %eq1218 = icmp eq i8 %typeid.kind1211, 16, !dbg !972
  br i1 %eq1218, label %check_type_ok1223, label %check_next1219, !dbg !972

check_next1219:                                   ; preds = %check_next1217
  store %"char[]" { ptr @.panic_msg.112, i64 43 }, ptr %indirectarg1220, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1221, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1222, align 8
  %531 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %531(ptr align 8 %indirectarg1220, ptr align 8 %indirectarg1221, ptr align 8 %indirectarg1222, i32 247), !dbg !972
  unreachable, !dbg !972

check_type_ok1223:                                ; preds = %check_next1217, %check_next1215, %check_next1213, %check_type_ok1201
  %ptradd1224 = getelementptr inbounds i8, ptr %"introspect*1210", i64 40, !dbg !972
  %typeid.len1225 = load i64, ptr %ptradd1224, align 8, !dbg !972
  store i64 %typeid.len1225, ptr %vlen, align 8, !dbg !972
  call void @llvm.dbg.declare(metadata ptr %ptr1226, metadata !973, metadata !DIExpression()), !dbg !974
  %532 = load ptr, ptr %2, align 8, !dbg !975
  store ptr %532, ptr %ptr1226, align 8, !dbg !975
  call void @llvm.dbg.declare(metadata ptr %len1227, metadata !976, metadata !DIExpression()), !dbg !977
  %533 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.114, i64 2 }, ptr %indirectarg1230, align 8
  %534 = call i64 @std.io.Formatter.out_substr(ptr %retparam1229, ptr %533, ptr align 8 %indirectarg1230), !dbg !978
  %not_err1231 = icmp eq i64 %534, 0, !dbg !978
  %535 = call i1 @llvm.expect.i1(i1 %not_err1231, i1 true), !dbg !978
  br i1 %535, label %after_check1233, label %assign_optional1232, !dbg !978

assign_optional1232:                              ; preds = %check_type_ok1223
  store i64 %534, ptr %error_var1228, align 8, !dbg !978
  br label %guard_block1234, !dbg !978

after_check1233:                                  ; preds = %check_type_ok1223
  br label %noerr_block1250, !dbg !978

guard_block1234:                                  ; preds = %assign_optional1232
  %536 = load ptr, ptr %self, align 8, !dbg !979
  %checknull1235 = icmp eq ptr %536, null, !dbg !979
  %537 = call i1 @llvm.expect.i1(i1 %checknull1235, i1 false), !dbg !979
  br i1 %537, label %panic1236, label %checkok1240, !dbg !979

checkok1240:                                      ; preds = %guard_block1234
  %ptradd1241 = getelementptr inbounds i8, ptr %536, i64 16, !dbg !979
  %538 = load i32, ptr %flags1146, align 4, !dbg !981
  store i32 %538, ptr %ptradd1241, align 8, !dbg !981
  %539 = load ptr, ptr %self, align 8, !dbg !982
  %checknull1242 = icmp eq ptr %539, null, !dbg !982
  %540 = call i1 @llvm.expect.i1(i1 %checknull1242, i1 false), !dbg !982
  br i1 %540, label %panic1243, label %checkok1247, !dbg !982

checkok1247:                                      ; preds = %checkok1240
  %ptradd1248 = getelementptr inbounds i8, ptr %539, i64 16, !dbg !982
  %ptradd1249 = getelementptr inbounds i8, ptr %ptradd1248, i64 4, !dbg !982
  %541 = load i32, ptr %width1154, align 4, !dbg !983
  store i32 %541, ptr %ptradd1249, align 4, !dbg !983
  %542 = load i64, ptr %error_var1228, align 8, !dbg !983
  ret i64 %542, !dbg !983

noerr_block1250:                                  ; preds = %after_check1233
  %543 = load i64, ptr %retparam1229, align 8, !dbg !983
  store i64 %543, ptr %len1227, align 8, !dbg !983
  call void @llvm.dbg.declare(metadata ptr %i1251, metadata !984, metadata !DIExpression()), !dbg !986
  store i64 0, ptr %i1251, align 8, !dbg !987
  br label %loop.cond1252, !dbg !987

loop.cond1252:                                    ; preds = %noerr_block1306, %noerr_block1250
  %544 = load i64, ptr %i1251, align 8, !dbg !988
  %545 = load i64, ptr %vlen, align 8, !dbg !989
  %lt1253 = icmp ult i64 %544, %545, !dbg !988
  br i1 %lt1253, label %loop.body1254, label %loop.exit1310, !dbg !988

loop.body1254:                                    ; preds = %loop.cond1252
  %546 = load i64, ptr %i1251, align 8, !dbg !990
  %neq1255 = icmp ne i64 0, %546, !dbg !990
  br i1 %neq1255, label %if.then1256, label %if.exit1281, !dbg !990

if.then1256:                                      ; preds = %loop.body1254
  %547 = load i64, ptr %len1227, align 8, !dbg !992
  %548 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.115, i64 2 }, ptr %indirectarg1259, align 8
  %549 = call i64 @std.io.Formatter.out_substr(ptr %retparam1258, ptr %548, ptr align 8 %indirectarg1259), !dbg !993
  %not_err1260 = icmp eq i64 %549, 0, !dbg !993
  %550 = call i1 @llvm.expect.i1(i1 %not_err1260, i1 true), !dbg !993
  br i1 %550, label %after_check1262, label %assign_optional1261, !dbg !993

assign_optional1261:                              ; preds = %if.then1256
  store i64 %549, ptr %error_var1257, align 8, !dbg !993
  br label %guard_block1263, !dbg !993

after_check1262:                                  ; preds = %if.then1256
  br label %noerr_block1279, !dbg !993

guard_block1263:                                  ; preds = %assign_optional1261
  %551 = load ptr, ptr %self, align 8, !dbg !994
  %checknull1264 = icmp eq ptr %551, null, !dbg !994
  %552 = call i1 @llvm.expect.i1(i1 %checknull1264, i1 false), !dbg !994
  br i1 %552, label %panic1265, label %checkok1269, !dbg !994

checkok1269:                                      ; preds = %guard_block1263
  %ptradd1270 = getelementptr inbounds i8, ptr %551, i64 16, !dbg !994
  %553 = load i32, ptr %flags1146, align 4, !dbg !996
  store i32 %553, ptr %ptradd1270, align 8, !dbg !996
  %554 = load ptr, ptr %self, align 8, !dbg !997
  %checknull1271 = icmp eq ptr %554, null, !dbg !997
  %555 = call i1 @llvm.expect.i1(i1 %checknull1271, i1 false), !dbg !997
  br i1 %555, label %panic1272, label %checkok1276, !dbg !997

checkok1276:                                      ; preds = %checkok1269
  %ptradd1277 = getelementptr inbounds i8, ptr %554, i64 16, !dbg !997
  %ptradd1278 = getelementptr inbounds i8, ptr %ptradd1277, i64 4, !dbg !997
  %556 = load i32, ptr %width1154, align 4, !dbg !998
  store i32 %556, ptr %ptradd1278, align 4, !dbg !998
  %557 = load i64, ptr %error_var1257, align 8, !dbg !998
  ret i64 %557, !dbg !998

noerr_block1279:                                  ; preds = %after_check1262
  %558 = load i64, ptr %retparam1258, align 8, !dbg !998
  %add1280 = add i64 %547, %558, !dbg !992
  store i64 %add1280, ptr %len1227, align 8, !dbg !992
  br label %if.exit1281, !dbg !992

if.exit1281:                                      ; preds = %noerr_block1279, %loop.body1254
  %559 = load i64, ptr %len1227, align 8, !dbg !999
  %560 = load ptr, ptr %ptr1226, align 8
  store ptr %560, ptr %ptr1283, align 8
  %561 = load i64, ptr %inner1178, align 8
  store i64 %561, ptr %type1284, align 8
  %562 = load ptr, ptr %ptr1283, align 8, !dbg !1000
  %563 = load i64, ptr %type1284, align 8, !dbg !1003
  %564 = insertvalue %any undef, ptr %562, 0, !dbg !1003
  %565 = insertvalue %any %564, i64 %563, 1, !dbg !1003
  %566 = load ptr, ptr %self, align 8
  store %any %565, ptr %indirectarg1286, align 8
  %567 = call i64 @std.io.Formatter.out_str(ptr %retparam1285, ptr %566, ptr align 8 %indirectarg1286), !dbg !1004
  %not_err1287 = icmp eq i64 %567, 0, !dbg !1004
  %568 = call i1 @llvm.expect.i1(i1 %not_err1287, i1 true), !dbg !1004
  br i1 %568, label %after_check1289, label %assign_optional1288, !dbg !1004

assign_optional1288:                              ; preds = %if.exit1281
  store i64 %567, ptr %error_var1282, align 8, !dbg !1004
  br label %guard_block1290, !dbg !1004

after_check1289:                                  ; preds = %if.exit1281
  br label %noerr_block1306, !dbg !1004

guard_block1290:                                  ; preds = %assign_optional1288
  %569 = load ptr, ptr %self, align 8, !dbg !1005
  %checknull1291 = icmp eq ptr %569, null, !dbg !1005
  %570 = call i1 @llvm.expect.i1(i1 %checknull1291, i1 false), !dbg !1005
  br i1 %570, label %panic1292, label %checkok1296, !dbg !1005

checkok1296:                                      ; preds = %guard_block1290
  %ptradd1297 = getelementptr inbounds i8, ptr %569, i64 16, !dbg !1005
  %571 = load i32, ptr %flags1146, align 4, !dbg !1007
  store i32 %571, ptr %ptradd1297, align 8, !dbg !1007
  %572 = load ptr, ptr %self, align 8, !dbg !1008
  %checknull1298 = icmp eq ptr %572, null, !dbg !1008
  %573 = call i1 @llvm.expect.i1(i1 %checknull1298, i1 false), !dbg !1008
  br i1 %573, label %panic1299, label %checkok1303, !dbg !1008

checkok1303:                                      ; preds = %checkok1296
  %ptradd1304 = getelementptr inbounds i8, ptr %572, i64 16, !dbg !1008
  %ptradd1305 = getelementptr inbounds i8, ptr %ptradd1304, i64 4, !dbg !1008
  %574 = load i32, ptr %width1154, align 4, !dbg !1009
  store i32 %574, ptr %ptradd1305, align 4, !dbg !1009
  %575 = load i64, ptr %error_var1282, align 8, !dbg !1009
  ret i64 %575, !dbg !1009

noerr_block1306:                                  ; preds = %after_check1289
  %576 = load i64, ptr %retparam1285, align 8, !dbg !1009
  %add1307 = add i64 %559, %576, !dbg !999
  store i64 %add1307, ptr %len1227, align 8, !dbg !999
  %577 = load ptr, ptr %ptr1226, align 8, !dbg !1010
  %578 = load i64, ptr %size1204, align 8, !dbg !1011
  %ptradd_any1308 = getelementptr i8, ptr %577, i64 %578, !dbg !1010
  store ptr %ptradd_any1308, ptr %ptr1226, align 8, !dbg !1010
  %579 = load i64, ptr %i1251, align 8, !dbg !1012
  %add1309 = add i64 %579, 1, !dbg !1012
  store i64 %add1309, ptr %i1251, align 8, !dbg !1012
  br label %loop.cond1252, !dbg !1012

loop.exit1310:                                    ; preds = %loop.cond1252
  %580 = load i64, ptr %len1227, align 8, !dbg !1013
  %581 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.116, i64 2 }, ptr %indirectarg1313, align 8
  %582 = call i64 @std.io.Formatter.out_substr(ptr %retparam1312, ptr %581, ptr align 8 %indirectarg1313), !dbg !1014
  %not_err1314 = icmp eq i64 %582, 0, !dbg !1014
  %583 = call i1 @llvm.expect.i1(i1 %not_err1314, i1 true), !dbg !1014
  br i1 %583, label %after_check1316, label %assign_optional1315, !dbg !1014

assign_optional1315:                              ; preds = %loop.exit1310
  store i64 %582, ptr %error_var1311, align 8, !dbg !1014
  br label %guard_block1317, !dbg !1014

after_check1316:                                  ; preds = %loop.exit1310
  br label %noerr_block1333, !dbg !1014

guard_block1317:                                  ; preds = %assign_optional1315
  %584 = load ptr, ptr %self, align 8, !dbg !1015
  %checknull1318 = icmp eq ptr %584, null, !dbg !1015
  %585 = call i1 @llvm.expect.i1(i1 %checknull1318, i1 false), !dbg !1015
  br i1 %585, label %panic1319, label %checkok1323, !dbg !1015

checkok1323:                                      ; preds = %guard_block1317
  %ptradd1324 = getelementptr inbounds i8, ptr %584, i64 16, !dbg !1015
  %586 = load i32, ptr %flags1146, align 4, !dbg !1017
  store i32 %586, ptr %ptradd1324, align 8, !dbg !1017
  %587 = load ptr, ptr %self, align 8, !dbg !1018
  %checknull1325 = icmp eq ptr %587, null, !dbg !1018
  %588 = call i1 @llvm.expect.i1(i1 %checknull1325, i1 false), !dbg !1018
  br i1 %588, label %panic1326, label %checkok1330, !dbg !1018

checkok1330:                                      ; preds = %checkok1323
  %ptradd1331 = getelementptr inbounds i8, ptr %587, i64 16, !dbg !1018
  %ptradd1332 = getelementptr inbounds i8, ptr %ptradd1331, i64 4, !dbg !1018
  %589 = load i32, ptr %width1154, align 4, !dbg !1019
  store i32 %589, ptr %ptradd1332, align 4, !dbg !1019
  %590 = load i64, ptr %error_var1311, align 8, !dbg !1019
  ret i64 %590, !dbg !1019

noerr_block1333:                                  ; preds = %after_check1316
  %591 = load i64, ptr %retparam1312, align 8, !dbg !1019
  %add1334 = add i64 %580, %591, !dbg !1013
  store i64 %add1334, ptr %len1227, align 8, !dbg !1013
  %592 = load i64, ptr %len1227, align 8, !dbg !1020
  %593 = load ptr, ptr %self, align 8, !dbg !1021
  %checknull1336 = icmp eq ptr %593, null, !dbg !1021
  %594 = call i1 @llvm.expect.i1(i1 %checknull1336, i1 false), !dbg !1021
  br i1 %594, label %panic1337, label %checkok1341, !dbg !1021

checkok1341:                                      ; preds = %noerr_block1333
  %ptradd1342 = getelementptr inbounds i8, ptr %593, i64 16, !dbg !1021
  %595 = load i32, ptr %flags1146, align 4, !dbg !1023
  store i32 %595, ptr %ptradd1342, align 8, !dbg !1023
  %596 = load ptr, ptr %self, align 8, !dbg !1024
  %checknull1343 = icmp eq ptr %596, null, !dbg !1024
  %597 = call i1 @llvm.expect.i1(i1 %checknull1343, i1 false), !dbg !1024
  br i1 %597, label %panic1344, label %checkok1348, !dbg !1024

checkok1348:                                      ; preds = %checkok1341
  %ptradd1349 = getelementptr inbounds i8, ptr %596, i64 16, !dbg !1024
  %ptradd1350 = getelementptr inbounds i8, ptr %ptradd1349, i64 4, !dbg !1024
  %598 = load i32, ptr %width1154, align 4, !dbg !1025
  store i32 %598, ptr %ptradd1350, align 4, !dbg !1025
  store i64 %592, ptr %0, align 8, !dbg !1025
  ret i64 0, !dbg !1025

switch.case1351:                                  ; preds = %switch.entry232
  call void @llvm.dbg.declare(metadata ptr %inner1352, metadata !1026, metadata !DIExpression()), !dbg !1028
  %ptradd1353 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1029
  %599 = load i64, ptr %ptradd1353, align 8, !dbg !1029
  %"introspect*1354" = inttoptr i64 %599 to ptr, !dbg !1029
  %typeid.kind1355 = load i8, ptr %"introspect*1354", align 8, !dbg !1029
  %eq1356 = icmp eq i8 %typeid.kind1355, 15, !dbg !1029
  br i1 %eq1356, label %check_type_ok1375, label %check_next1357, !dbg !1029

check_next1357:                                   ; preds = %switch.case1351
  %eq1358 = icmp eq i8 %typeid.kind1355, 19, !dbg !1029
  br i1 %eq1358, label %check_type_ok1375, label %check_next1359, !dbg !1029

check_next1359:                                   ; preds = %check_next1357
  %eq1360 = icmp eq i8 %typeid.kind1355, 17, !dbg !1029
  br i1 %eq1360, label %check_type_ok1375, label %check_next1361, !dbg !1029

check_next1361:                                   ; preds = %check_next1359
  %eq1362 = icmp eq i8 %typeid.kind1355, 8, !dbg !1029
  br i1 %eq1362, label %check_type_ok1375, label %check_next1363, !dbg !1029

check_next1363:                                   ; preds = %check_next1361
  %eq1364 = icmp eq i8 %typeid.kind1355, 16, !dbg !1029
  br i1 %eq1364, label %check_type_ok1375, label %check_next1365, !dbg !1029

check_next1365:                                   ; preds = %check_next1363
  %eq1366 = icmp eq i8 %typeid.kind1355, 18, !dbg !1029
  br i1 %eq1366, label %check_type_ok1375, label %check_next1367, !dbg !1029

check_next1367:                                   ; preds = %check_next1365
  %eq1368 = icmp eq i8 %typeid.kind1355, 14, !dbg !1029
  br i1 %eq1368, label %check_type_ok1375, label %check_next1369, !dbg !1029

check_next1369:                                   ; preds = %check_next1367
  %eq1370 = icmp eq i8 %typeid.kind1355, 12, !dbg !1029
  br i1 %eq1370, label %check_type_ok1375, label %check_next1371, !dbg !1029

check_next1371:                                   ; preds = %check_next1369
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg1372, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1373, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1374, align 8
  %600 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %600(ptr align 8 %indirectarg1372, ptr align 8 %indirectarg1373, ptr align 8 %indirectarg1374, i32 261), !dbg !1029
  unreachable, !dbg !1029

check_type_ok1375:                                ; preds = %check_next1369, %check_next1367, %check_next1365, %check_next1363, %check_next1361, %check_next1359, %check_next1357, %switch.case1351
  %ptradd1376 = getelementptr inbounds i8, ptr %"introspect*1354", i64 32, !dbg !1029
  %typeid.inner1377 = load i64, ptr %ptradd1376, align 8, !dbg !1029
  store i64 %typeid.inner1377, ptr %inner1352, align 8, !dbg !1029
  %601 = load i64, ptr %inner1352, align 8, !dbg !1030
  %eq1378 = icmp eq i64 %601, ptrtoint (ptr @"$ct.void" to i64), !dbg !1030
  br i1 %eq1378, label %if.then1379, label %if.exit1380, !dbg !1030

if.then1379:                                      ; preds = %check_type_ok1375
  store i64 ptrtoint (ptr @"$ct.char" to i64), ptr %inner1352, align 8, !dbg !1031
  br label %if.exit1380, !dbg !1031

if.exit1380:                                      ; preds = %if.then1379, %check_type_ok1375
  call void @llvm.dbg.declare(metadata ptr %flags1381, metadata !1032, metadata !DIExpression()), !dbg !1033
  %602 = load ptr, ptr %self, align 8, !dbg !1034
  %checknull1382 = icmp eq ptr %602, null, !dbg !1034
  %603 = call i1 @llvm.expect.i1(i1 %checknull1382, i1 false), !dbg !1034
  br i1 %603, label %panic1383, label %checkok1387, !dbg !1034

checkok1387:                                      ; preds = %if.exit1380
  %ptradd1388 = getelementptr inbounds i8, ptr %602, i64 16, !dbg !1034
  %604 = load i32, ptr %ptradd1388, align 8, !dbg !1034
  store i32 %604, ptr %flags1381, align 4, !dbg !1034
  call void @llvm.dbg.declare(metadata ptr %width1389, metadata !1035, metadata !DIExpression()), !dbg !1036
  %605 = load ptr, ptr %self, align 8, !dbg !1037
  %checknull1390 = icmp eq ptr %605, null, !dbg !1037
  %606 = call i1 @llvm.expect.i1(i1 %checknull1390, i1 false), !dbg !1037
  br i1 %606, label %panic1391, label %checkok1395, !dbg !1037

checkok1395:                                      ; preds = %checkok1387
  %ptradd1396 = getelementptr inbounds i8, ptr %605, i64 16, !dbg !1037
  %ptradd1397 = getelementptr inbounds i8, ptr %ptradd1396, i64 4, !dbg !1037
  %607 = load i32, ptr %ptradd1397, align 4, !dbg !1037
  store i32 %607, ptr %width1389, align 4, !dbg !1037
  %608 = load ptr, ptr %self, align 8, !dbg !1038
  %checknull1398 = icmp eq ptr %608, null, !dbg !1038
  %609 = call i1 @llvm.expect.i1(i1 %checknull1398, i1 false), !dbg !1038
  br i1 %609, label %panic1399, label %checkok1403, !dbg !1038

checkok1403:                                      ; preds = %checkok1395
  %ptradd1404 = getelementptr inbounds i8, ptr %608, i64 16, !dbg !1038
  store i32 0, ptr %ptradd1404, align 8, !dbg !1038
  %610 = load ptr, ptr %self, align 8, !dbg !1039
  %checknull1405 = icmp eq ptr %610, null, !dbg !1039
  %611 = call i1 @llvm.expect.i1(i1 %checknull1405, i1 false), !dbg !1039
  br i1 %611, label %panic1406, label %checkok1410, !dbg !1039

checkok1410:                                      ; preds = %checkok1403
  %ptradd1411 = getelementptr inbounds i8, ptr %610, i64 16, !dbg !1039
  %ptradd1412 = getelementptr inbounds i8, ptr %ptradd1411, i64 4, !dbg !1039
  store i32 0, ptr %ptradd1412, align 4, !dbg !1040
  call void @llvm.dbg.declare(metadata ptr %size1413, metadata !1041, metadata !DIExpression()), !dbg !1042
  %612 = load i64, ptr %inner1352, align 8, !dbg !1043
  %"introspect*1414" = inttoptr i64 %612 to ptr, !dbg !1043
  %typeid.kind1415 = load i8, ptr %"introspect*1414", align 8, !dbg !1043
  %ptradd1416 = getelementptr inbounds i8, ptr %"introspect*1414", i64 24, !dbg !1043
  %typeid.size1417 = load i64, ptr %ptradd1416, align 8, !dbg !1043
  store i64 %typeid.size1417, ptr %size1413, align 8, !dbg !1043
  call void @llvm.dbg.declare(metadata ptr %temp, metadata !1044, metadata !DIExpression()), !dbg !1046
  %613 = load ptr, ptr %2, align 8, !dbg !1047
  store ptr %613, ptr %temp, align 8, !dbg !1047
  call void @llvm.dbg.declare(metadata ptr %ptr1418, metadata !1048, metadata !DIExpression()), !dbg !1049
  %614 = load ptr, ptr %temp, align 8, !dbg !1050
  %checknull1419 = icmp eq ptr %614, null, !dbg !1050
  %615 = call i1 @llvm.expect.i1(i1 %checknull1419, i1 false), !dbg !1050
  br i1 %615, label %panic1420, label %checkok1424, !dbg !1050

checkok1424:                                      ; preds = %checkok1410
  %616 = load ptr, ptr %614, align 8, !dbg !1050
  store ptr %616, ptr %ptr1418, align 8, !dbg !1050
  call void @llvm.dbg.declare(metadata ptr %slen, metadata !1051, metadata !DIExpression()), !dbg !1052
  %617 = load ptr, ptr %temp, align 8, !dbg !1053
  %checknull1425 = icmp eq ptr %617, null, !dbg !1053
  %618 = call i1 @llvm.expect.i1(i1 %checknull1425, i1 false), !dbg !1053
  br i1 %618, label %panic1426, label %checkok1430, !dbg !1053

checkok1430:                                      ; preds = %checkok1424
  %ptradd1431 = getelementptr inbounds i8, ptr %617, i64 8, !dbg !1053
  %619 = load i64, ptr %ptradd1431, align 8, !dbg !1053
  store i64 %619, ptr %slen, align 8, !dbg !1053
  call void @llvm.dbg.declare(metadata ptr %len1432, metadata !1054, metadata !DIExpression()), !dbg !1055
  %620 = load ptr, ptr %self, align 8
  %621 = call i64 @std.io.Formatter.out(ptr %retparam1434, ptr %620, i8 91), !dbg !1056
  %not_err1435 = icmp eq i64 %621, 0, !dbg !1056
  %622 = call i1 @llvm.expect.i1(i1 %not_err1435, i1 true), !dbg !1056
  br i1 %622, label %after_check1437, label %assign_optional1436, !dbg !1056

assign_optional1436:                              ; preds = %checkok1430
  store i64 %621, ptr %error_var1433, align 8, !dbg !1056
  br label %guard_block1438, !dbg !1056

after_check1437:                                  ; preds = %checkok1430
  br label %noerr_block1454, !dbg !1056

guard_block1438:                                  ; preds = %assign_optional1436
  %623 = load ptr, ptr %self, align 8, !dbg !1057
  %checknull1439 = icmp eq ptr %623, null, !dbg !1057
  %624 = call i1 @llvm.expect.i1(i1 %checknull1439, i1 false), !dbg !1057
  br i1 %624, label %panic1440, label %checkok1444, !dbg !1057

checkok1444:                                      ; preds = %guard_block1438
  %ptradd1445 = getelementptr inbounds i8, ptr %623, i64 16, !dbg !1057
  %625 = load i32, ptr %flags1381, align 4, !dbg !1059
  store i32 %625, ptr %ptradd1445, align 8, !dbg !1059
  %626 = load ptr, ptr %self, align 8, !dbg !1060
  %checknull1446 = icmp eq ptr %626, null, !dbg !1060
  %627 = call i1 @llvm.expect.i1(i1 %checknull1446, i1 false), !dbg !1060
  br i1 %627, label %panic1447, label %checkok1451, !dbg !1060

checkok1451:                                      ; preds = %checkok1444
  %ptradd1452 = getelementptr inbounds i8, ptr %626, i64 16, !dbg !1060
  %ptradd1453 = getelementptr inbounds i8, ptr %ptradd1452, i64 4, !dbg !1060
  %628 = load i32, ptr %width1389, align 4, !dbg !1061
  store i32 %628, ptr %ptradd1453, align 4, !dbg !1061
  %629 = load i64, ptr %error_var1433, align 8, !dbg !1061
  ret i64 %629, !dbg !1061

noerr_block1454:                                  ; preds = %after_check1437
  %630 = load i64, ptr %retparam1434, align 8, !dbg !1061
  store i64 %630, ptr %len1432, align 8, !dbg !1061
  call void @llvm.dbg.declare(metadata ptr %i1455, metadata !1062, metadata !DIExpression()), !dbg !1064
  store i64 0, ptr %i1455, align 8, !dbg !1065
  br label %loop.cond1456, !dbg !1065

loop.cond1456:                                    ; preds = %noerr_block1510, %noerr_block1454
  %631 = load i64, ptr %i1455, align 8, !dbg !1066
  %632 = load i64, ptr %slen, align 8, !dbg !1067
  %lt1457 = icmp ult i64 %631, %632, !dbg !1066
  br i1 %lt1457, label %loop.body1458, label %loop.exit1514, !dbg !1066

loop.body1458:                                    ; preds = %loop.cond1456
  %633 = load i64, ptr %i1455, align 8, !dbg !1068
  %neq1459 = icmp ne i64 0, %633, !dbg !1068
  br i1 %neq1459, label %if.then1460, label %if.exit1485, !dbg !1068

if.then1460:                                      ; preds = %loop.body1458
  %634 = load i64, ptr %len1432, align 8, !dbg !1070
  %635 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.118, i64 2 }, ptr %indirectarg1463, align 8
  %636 = call i64 @std.io.Formatter.out_substr(ptr %retparam1462, ptr %635, ptr align 8 %indirectarg1463), !dbg !1071
  %not_err1464 = icmp eq i64 %636, 0, !dbg !1071
  %637 = call i1 @llvm.expect.i1(i1 %not_err1464, i1 true), !dbg !1071
  br i1 %637, label %after_check1466, label %assign_optional1465, !dbg !1071

assign_optional1465:                              ; preds = %if.then1460
  store i64 %636, ptr %error_var1461, align 8, !dbg !1071
  br label %guard_block1467, !dbg !1071

after_check1466:                                  ; preds = %if.then1460
  br label %noerr_block1483, !dbg !1071

guard_block1467:                                  ; preds = %assign_optional1465
  %638 = load ptr, ptr %self, align 8, !dbg !1072
  %checknull1468 = icmp eq ptr %638, null, !dbg !1072
  %639 = call i1 @llvm.expect.i1(i1 %checknull1468, i1 false), !dbg !1072
  br i1 %639, label %panic1469, label %checkok1473, !dbg !1072

checkok1473:                                      ; preds = %guard_block1467
  %ptradd1474 = getelementptr inbounds i8, ptr %638, i64 16, !dbg !1072
  %640 = load i32, ptr %flags1381, align 4, !dbg !1074
  store i32 %640, ptr %ptradd1474, align 8, !dbg !1074
  %641 = load ptr, ptr %self, align 8, !dbg !1075
  %checknull1475 = icmp eq ptr %641, null, !dbg !1075
  %642 = call i1 @llvm.expect.i1(i1 %checknull1475, i1 false), !dbg !1075
  br i1 %642, label %panic1476, label %checkok1480, !dbg !1075

checkok1480:                                      ; preds = %checkok1473
  %ptradd1481 = getelementptr inbounds i8, ptr %641, i64 16, !dbg !1075
  %ptradd1482 = getelementptr inbounds i8, ptr %ptradd1481, i64 4, !dbg !1075
  %643 = load i32, ptr %width1389, align 4, !dbg !1076
  store i32 %643, ptr %ptradd1482, align 4, !dbg !1076
  %644 = load i64, ptr %error_var1461, align 8, !dbg !1076
  ret i64 %644, !dbg !1076

noerr_block1483:                                  ; preds = %after_check1466
  %645 = load i64, ptr %retparam1462, align 8, !dbg !1076
  %add1484 = add i64 %634, %645, !dbg !1070
  store i64 %add1484, ptr %len1432, align 8, !dbg !1070
  br label %if.exit1485, !dbg !1070

if.exit1485:                                      ; preds = %noerr_block1483, %loop.body1458
  %646 = load i64, ptr %len1432, align 8, !dbg !1077
  %647 = load ptr, ptr %ptr1418, align 8
  store ptr %647, ptr %ptr1487, align 8
  %648 = load i64, ptr %inner1352, align 8
  store i64 %648, ptr %type1488, align 8
  %649 = load ptr, ptr %ptr1487, align 8, !dbg !1078
  %650 = load i64, ptr %type1488, align 8, !dbg !1081
  %651 = insertvalue %any undef, ptr %649, 0, !dbg !1081
  %652 = insertvalue %any %651, i64 %650, 1, !dbg !1081
  %653 = load ptr, ptr %self, align 8
  store %any %652, ptr %indirectarg1490, align 8
  %654 = call i64 @std.io.Formatter.out_str(ptr %retparam1489, ptr %653, ptr align 8 %indirectarg1490), !dbg !1082
  %not_err1491 = icmp eq i64 %654, 0, !dbg !1082
  %655 = call i1 @llvm.expect.i1(i1 %not_err1491, i1 true), !dbg !1082
  br i1 %655, label %after_check1493, label %assign_optional1492, !dbg !1082

assign_optional1492:                              ; preds = %if.exit1485
  store i64 %654, ptr %error_var1486, align 8, !dbg !1082
  br label %guard_block1494, !dbg !1082

after_check1493:                                  ; preds = %if.exit1485
  br label %noerr_block1510, !dbg !1082

guard_block1494:                                  ; preds = %assign_optional1492
  %656 = load ptr, ptr %self, align 8, !dbg !1083
  %checknull1495 = icmp eq ptr %656, null, !dbg !1083
  %657 = call i1 @llvm.expect.i1(i1 %checknull1495, i1 false), !dbg !1083
  br i1 %657, label %panic1496, label %checkok1500, !dbg !1083

checkok1500:                                      ; preds = %guard_block1494
  %ptradd1501 = getelementptr inbounds i8, ptr %656, i64 16, !dbg !1083
  %658 = load i32, ptr %flags1381, align 4, !dbg !1085
  store i32 %658, ptr %ptradd1501, align 8, !dbg !1085
  %659 = load ptr, ptr %self, align 8, !dbg !1086
  %checknull1502 = icmp eq ptr %659, null, !dbg !1086
  %660 = call i1 @llvm.expect.i1(i1 %checknull1502, i1 false), !dbg !1086
  br i1 %660, label %panic1503, label %checkok1507, !dbg !1086

checkok1507:                                      ; preds = %checkok1500
  %ptradd1508 = getelementptr inbounds i8, ptr %659, i64 16, !dbg !1086
  %ptradd1509 = getelementptr inbounds i8, ptr %ptradd1508, i64 4, !dbg !1086
  %661 = load i32, ptr %width1389, align 4, !dbg !1087
  store i32 %661, ptr %ptradd1509, align 4, !dbg !1087
  %662 = load i64, ptr %error_var1486, align 8, !dbg !1087
  ret i64 %662, !dbg !1087

noerr_block1510:                                  ; preds = %after_check1493
  %663 = load i64, ptr %retparam1489, align 8, !dbg !1087
  %add1511 = add i64 %646, %663, !dbg !1077
  store i64 %add1511, ptr %len1432, align 8, !dbg !1077
  %664 = load ptr, ptr %ptr1418, align 8, !dbg !1088
  %665 = load i64, ptr %size1413, align 8, !dbg !1089
  %ptradd_any1512 = getelementptr i8, ptr %664, i64 %665, !dbg !1088
  store ptr %ptradd_any1512, ptr %ptr1418, align 8, !dbg !1088
  %666 = load i64, ptr %i1455, align 8, !dbg !1090
  %add1513 = add i64 %666, 1, !dbg !1090
  store i64 %add1513, ptr %i1455, align 8, !dbg !1090
  br label %loop.cond1456, !dbg !1090

loop.exit1514:                                    ; preds = %loop.cond1456
  %667 = load i64, ptr %len1432, align 8, !dbg !1091
  %668 = load ptr, ptr %self, align 8
  %669 = call i64 @std.io.Formatter.out(ptr %retparam1516, ptr %668, i8 93), !dbg !1092
  %not_err1517 = icmp eq i64 %669, 0, !dbg !1092
  %670 = call i1 @llvm.expect.i1(i1 %not_err1517, i1 true), !dbg !1092
  br i1 %670, label %after_check1519, label %assign_optional1518, !dbg !1092

assign_optional1518:                              ; preds = %loop.exit1514
  store i64 %669, ptr %error_var1515, align 8, !dbg !1092
  br label %guard_block1520, !dbg !1092

after_check1519:                                  ; preds = %loop.exit1514
  br label %noerr_block1536, !dbg !1092

guard_block1520:                                  ; preds = %assign_optional1518
  %671 = load ptr, ptr %self, align 8, !dbg !1093
  %checknull1521 = icmp eq ptr %671, null, !dbg !1093
  %672 = call i1 @llvm.expect.i1(i1 %checknull1521, i1 false), !dbg !1093
  br i1 %672, label %panic1522, label %checkok1526, !dbg !1093

checkok1526:                                      ; preds = %guard_block1520
  %ptradd1527 = getelementptr inbounds i8, ptr %671, i64 16, !dbg !1093
  %673 = load i32, ptr %flags1381, align 4, !dbg !1095
  store i32 %673, ptr %ptradd1527, align 8, !dbg !1095
  %674 = load ptr, ptr %self, align 8, !dbg !1096
  %checknull1528 = icmp eq ptr %674, null, !dbg !1096
  %675 = call i1 @llvm.expect.i1(i1 %checknull1528, i1 false), !dbg !1096
  br i1 %675, label %panic1529, label %checkok1533, !dbg !1096

checkok1533:                                      ; preds = %checkok1526
  %ptradd1534 = getelementptr inbounds i8, ptr %674, i64 16, !dbg !1096
  %ptradd1535 = getelementptr inbounds i8, ptr %ptradd1534, i64 4, !dbg !1096
  %676 = load i32, ptr %width1389, align 4, !dbg !1097
  store i32 %676, ptr %ptradd1535, align 4, !dbg !1097
  %677 = load i64, ptr %error_var1515, align 8, !dbg !1097
  ret i64 %677, !dbg !1097

noerr_block1536:                                  ; preds = %after_check1519
  %678 = load i64, ptr %retparam1516, align 8, !dbg !1097
  %add1537 = add i64 %667, %678, !dbg !1091
  store i64 %add1537, ptr %len1432, align 8, !dbg !1091
  %679 = load i64, ptr %len1432, align 8, !dbg !1098
  %680 = load ptr, ptr %self, align 8, !dbg !1099
  %checknull1539 = icmp eq ptr %680, null, !dbg !1099
  %681 = call i1 @llvm.expect.i1(i1 %checknull1539, i1 false), !dbg !1099
  br i1 %681, label %panic1540, label %checkok1544, !dbg !1099

checkok1544:                                      ; preds = %noerr_block1536
  %ptradd1545 = getelementptr inbounds i8, ptr %680, i64 16, !dbg !1099
  %682 = load i32, ptr %flags1381, align 4, !dbg !1101
  store i32 %682, ptr %ptradd1545, align 8, !dbg !1101
  %683 = load ptr, ptr %self, align 8, !dbg !1102
  %checknull1546 = icmp eq ptr %683, null, !dbg !1102
  %684 = call i1 @llvm.expect.i1(i1 %checknull1546, i1 false), !dbg !1102
  br i1 %684, label %panic1547, label %checkok1551, !dbg !1102

checkok1551:                                      ; preds = %checkok1544
  %ptradd1552 = getelementptr inbounds i8, ptr %683, i64 16, !dbg !1102
  %ptradd1553 = getelementptr inbounds i8, ptr %ptradd1552, i64 4, !dbg !1102
  %685 = load i32, ptr %width1389, align 4, !dbg !1103
  store i32 %685, ptr %ptradd1553, align 4, !dbg !1103
  store i64 %679, ptr %0, align 8, !dbg !1103
  ret i64 0, !dbg !1103

switch.case1554:                                  ; preds = %switch.entry232, %switch.entry232
  store %"char[]" { ptr @.str.119, i64 15 }, ptr %string1555, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1556, ptr align 8 %string1555, i32 16, i1 false)
  store %"char[]" { ptr @.str.120, i64 12 }, ptr %indirectarg1557, align 8
  store %"char[]" { ptr @.str.121, i64 17 }, ptr %indirectarg1558, align 8
  store %"any[]" zeroinitializer, ptr %indirectarg1559, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg1556, ptr align 8 %indirectarg1557, ptr align 8 %indirectarg1558, i32 288, ptr align 8 %indirectarg1559), !dbg !1104
  unreachable, !dbg !1108

switch.exit1560:                                  ; preds = %switch.entry232
  %686 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.122, i64 12 }, ptr %indirectarg1563, align 8
  %687 = call i64 @std.io.Formatter.out_substr(ptr %retparam1562, ptr %686, ptr align 8 %indirectarg1563), !dbg !1109
  %not_err1564 = icmp eq i64 %687, 0, !dbg !1109
  %688 = call i1 @llvm.expect.i1(i1 %not_err1564, i1 true), !dbg !1109
  br i1 %688, label %after_check1566, label %assign_optional1565, !dbg !1109

assign_optional1565:                              ; preds = %switch.exit1560
  store i64 %687, ptr %reterr1561, align 8, !dbg !1109
  br label %err_retblock1567, !dbg !1109

after_check1566:                                  ; preds = %switch.exit1560
  %689 = load i64, ptr %retparam1562, align 8, !dbg !1109
  store i64 %689, ptr %0, align 8, !dbg !1109
  ret i64 0, !dbg !1109

err_retblock1567:                                 ; preds = %assign_optional1565
  %690 = load i64, ptr %reterr1561, align 8, !dbg !1109
  ret i64 %690, !dbg !1109

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg2, align 8
  %691 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %691(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 109), !dbg !523
  unreachable, !dbg !523

panic14:                                          ; preds = %switch.case12
  store %"char[]" { ptr @.panic_msg.65, i64 58 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg17, align 8
  %692 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %692(ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, i32 119), !dbg !534
  unreachable, !dbg !534

panic28:                                          ; preds = %switch.case25
  store %"char[]" { ptr @.panic_msg.66, i64 49 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg31, align 8
  %693 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %693(ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, i32 122), !dbg !536
  unreachable, !dbg !536

panic46:                                          ; preds = %switch.case44
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg49, align 8
  %694 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %694(ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, i32 127), !dbg !547
  unreachable, !dbg !547

panic53:                                          ; preds = %checkok50
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg56, align 8
  %695 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %695(ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, i32 128), !dbg !550
  unreachable, !dbg !550

panic61:                                          ; preds = %checkok57
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg64, align 8
  %696 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %696(ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, i32 134), !dbg !551
  unreachable, !dbg !551

panic68:                                          ; preds = %checkok65
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg71, align 8
  %697 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %697(ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, i32 135), !dbg !552
  unreachable, !dbg !552

panic86:                                          ; preds = %phi_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg87, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg88, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg89, align 8
  %698 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %698(ptr align 8 %indirectarg87, ptr align 8 %indirectarg88, ptr align 8 %indirectarg89, i32 131), !dbg !556
  unreachable, !dbg !556

panic93:                                          ; preds = %checkok90
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg94, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg96, align 8
  %699 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %699(ptr align 8 %indirectarg94, ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, i32 132), !dbg !559
  unreachable, !dbg !559

panic102:                                         ; preds = %err_retblock100
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg103, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg104, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg105, align 8
  %700 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %700(ptr align 8 %indirectarg103, ptr align 8 %indirectarg104, ptr align 8 %indirectarg105, i32 131), !dbg !561
  unreachable, !dbg !561

panic109:                                         ; preds = %checkok106
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg110, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg111, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg112, align 8
  %701 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %701(ptr align 8 %indirectarg110, ptr align 8 %indirectarg111, ptr align 8 %indirectarg112, i32 132), !dbg !564
  unreachable, !dbg !564

panic119:                                         ; preds = %switch.case116
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg120, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg121, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg122, align 8
  %702 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %702(ptr align 8 %indirectarg120, ptr align 8 %indirectarg121, ptr align 8 %indirectarg122, i32 138), !dbg !569
  unreachable, !dbg !569

panic127:                                         ; preds = %checkok123
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg128, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg129, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg130, align 8
  %703 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %703(ptr align 8 %indirectarg128, ptr align 8 %indirectarg129, ptr align 8 %indirectarg130, i32 139), !dbg !572
  unreachable, !dbg !572

panic135:                                         ; preds = %checkok131
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg136, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg137, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg138, align 8
  %704 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %704(ptr align 8 %indirectarg136, ptr align 8 %indirectarg137, ptr align 8 %indirectarg138, i32 145), !dbg !573
  unreachable, !dbg !573

panic142:                                         ; preds = %checkok139
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg143, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg144, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg145, align 8
  %705 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %705(ptr align 8 %indirectarg143, ptr align 8 %indirectarg144, ptr align 8 %indirectarg145, i32 146), !dbg !574
  unreachable, !dbg !574

panic166:                                         ; preds = %phi_block163
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg167, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg168, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg169, align 8
  %706 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %706(ptr align 8 %indirectarg167, ptr align 8 %indirectarg168, ptr align 8 %indirectarg169, i32 142), !dbg !579
  unreachable, !dbg !579

panic173:                                         ; preds = %checkok170
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg174, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg175, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg176, align 8
  %707 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %707(ptr align 8 %indirectarg174, ptr align 8 %indirectarg175, ptr align 8 %indirectarg176, i32 143), !dbg !582
  unreachable, !dbg !582

panic182:                                         ; preds = %err_retblock180
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg183, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg184, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg185, align 8
  %708 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %708(ptr align 8 %indirectarg183, ptr align 8 %indirectarg184, ptr align 8 %indirectarg185, i32 142), !dbg !584
  unreachable, !dbg !584

panic189:                                         ; preds = %checkok186
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg190, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg191, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg192, align 8
  %709 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %709(ptr align 8 %indirectarg190, ptr align 8 %indirectarg191, ptr align 8 %indirectarg192, i32 143), !dbg !587
  unreachable, !dbg !587

panic199:                                         ; preds = %switch.case196
  store %"char[]" { ptr @.panic_msg.72, i64 54 }, ptr %indirectarg200, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg201, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg202, align 8
  %710 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %710(ptr align 8 %indirectarg200, ptr align 8 %indirectarg201, ptr align 8 %indirectarg202, i32 149), !dbg !591
  unreachable, !dbg !591

panic278:                                         ; preds = %switch.case276
  store %"char[]" { ptr @.panic_msg.78, i64 52 }, ptr %indirectarg279, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg280, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg281, align 8
  %711 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %711(ptr align 8 %indirectarg279, ptr align 8 %indirectarg280, ptr align 8 %indirectarg281, i32 29), !dbg !646
  unreachable, !dbg !646

panic295:                                         ; preds = %switch.case293
  store %"char[]" { ptr @.panic_msg.81, i64 53 }, ptr %indirectarg296, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg297, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg298, align 8
  %712 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %712(ptr align 8 %indirectarg296, ptr align 8 %indirectarg297, ptr align 8 %indirectarg298, i32 33), !dbg !657
  unreachable, !dbg !657

panic327:                                         ; preds = %switch.case324
  store %"char[]" { ptr @.panic_msg.82, i64 51 }, ptr %indirectarg328, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg329, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg330, align 8
  %713 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %713(ptr align 8 %indirectarg328, ptr align 8 %indirectarg329, ptr align 8 %indirectarg330, i32 38), !dbg !672
  unreachable, !dbg !672

panic361:                                         ; preds = %switch.case359
  store %"char[]" { ptr @.panic_msg.83, i64 52 }, ptr %indirectarg362, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg363, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg364, align 8
  %714 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %714(ptr align 8 %indirectarg362, ptr align 8 %indirectarg363, ptr align 8 %indirectarg364, i32 43), !dbg !687
  unreachable, !dbg !687

panic393:                                         ; preds = %switch.case390
  store %"char[]" { ptr @.panic_msg.84, i64 54 }, ptr %indirectarg394, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg395, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg396, align 8
  %715 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %715(ptr align 8 %indirectarg394, ptr align 8 %indirectarg395, ptr align 8 %indirectarg396, i32 48), !dbg !703
  unreachable, !dbg !703

panic426:                                         ; preds = %switch.case423
  store %"char[]" { ptr @.panic_msg.78, i64 52 }, ptr %indirectarg427, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg428, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg429, align 8
  %716 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %716(ptr align 8 %indirectarg427, ptr align 8 %indirectarg428, ptr align 8 %indirectarg429, i32 53), !dbg !718
  unreachable, !dbg !718

panic446:                                         ; preds = %switch.case443
  store %"char[]" { ptr @.panic_msg.85, i64 54 }, ptr %indirectarg447, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg448, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg449, align 8
  %717 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %717(ptr align 8 %indirectarg447, ptr align 8 %indirectarg448, ptr align 8 %indirectarg449, i32 57), !dbg !729
  unreachable, !dbg !729

panic471:                                         ; preds = %switch.case468
  store %"char[]" { ptr @.panic_msg.86, i64 52 }, ptr %indirectarg472, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg473, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg474, align 8
  %718 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %718(ptr align 8 %indirectarg472, ptr align 8 %indirectarg473, ptr align 8 %indirectarg474, i32 61), !dbg !741
  unreachable, !dbg !741

panic496:                                         ; preds = %switch.case493
  store %"char[]" { ptr @.panic_msg.87, i64 53 }, ptr %indirectarg497, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg498, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg499, align 8
  %719 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %719(ptr align 8 %indirectarg497, ptr align 8 %indirectarg498, ptr align 8 %indirectarg499, i32 65), !dbg !753
  unreachable, !dbg !753

panic518:                                         ; preds = %switch.case515
  store %"char[]" { ptr @.panic_msg.88, i64 55 }, ptr %indirectarg519, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg520, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg521, align 8
  %720 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %720(ptr align 8 %indirectarg519, ptr align 8 %indirectarg520, ptr align 8 %indirectarg521, i32 69), !dbg !766
  unreachable, !dbg !766

panic579:                                         ; preds = %check_type_ok575
  store i64 %281, ptr %taddr, align 8
  %721 = insertvalue %any undef, ptr %taddr, 0
  %722 = insertvalue %any %721, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %283, ptr %taddr580, align 8
  %723 = insertvalue %any undef, ptr %taddr580, 0
  %724 = insertvalue %any %723, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg581, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg582, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg583, align 8
  store %any %722, ptr %varargslots584, align 16
  %ptradd585 = getelementptr inbounds i8, ptr %varargslots584, i64 16
  store %any %724, ptr %ptradd585, align 16
  %725 = insertvalue %"any[]" undef, ptr %varargslots584, 0
  %"$$temp586" = insertvalue %"any[]" %725, i64 2, 1
  store %"any[]" %"$$temp586", ptr %indirectarg587, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg581, ptr align 8 %indirectarg582, ptr align 8 %indirectarg583, i32 160, ptr align 8 %indirectarg587), !dbg !782
  unreachable, !dbg !782

panic606:                                         ; preds = %after_check604
  store %"char[]" { ptr @.panic_msg.97, i64 46 }, ptr %indirectarg607, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg608, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg609, align 8
  %726 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %726(ptr align 8 %indirectarg607, ptr align 8 %indirectarg608, ptr align 8 %indirectarg609, i32 166), !dbg !796
  unreachable, !dbg !796

panic661:                                         ; preds = %if.then658
  store %"char[]" { ptr @.panic_msg.103, i64 52 }, ptr %indirectarg662, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg663, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg664, align 8
  %727 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %727(ptr align 8 %indirectarg662, ptr align 8 %indirectarg663, ptr align 8 %indirectarg664, i32 178), !dbg !808
  unreachable, !dbg !808

panic678:                                         ; preds = %if.then675
  store %"char[]" { ptr @.panic_msg.104, i64 53 }, ptr %indirectarg679, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg680, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg681, align 8
  %728 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %728(ptr align 8 %indirectarg679, ptr align 8 %indirectarg680, ptr align 8 %indirectarg681, i32 182), !dbg !812
  unreachable, !dbg !812

panic684:                                         ; preds = %cond.lhs
  store %"char[]" { ptr @.panic_msg.105, i64 54 }, ptr %indirectarg685, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg686, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg687, align 8
  %729 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %729(ptr align 8 %indirectarg685, ptr align 8 %indirectarg686, ptr align 8 %indirectarg687, i32 182), !dbg !814
  unreachable, !dbg !814

panic702:                                         ; preds = %if.then699
  store %"char[]" { ptr @.panic_msg.107, i64 53 }, ptr %indirectarg703, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg704, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg705, align 8
  %730 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %730(ptr align 8 %indirectarg703, ptr align 8 %indirectarg704, ptr align 8 %indirectarg705, i32 186), !dbg !818
  unreachable, !dbg !818

panic710:                                         ; preds = %cond.lhs708
  store %"char[]" { ptr @.panic_msg.108, i64 54 }, ptr %indirectarg711, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg712, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg713, align 8
  %731 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %731(ptr align 8 %indirectarg711, ptr align 8 %indirectarg712, ptr align 8 %indirectarg713, i32 186), !dbg !820
  unreachable, !dbg !820

panic729:                                         ; preds = %if.exit725
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg730, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg731, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg732, align 8
  %732 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %732(ptr align 8 %indirectarg730, ptr align 8 %indirectarg731, ptr align 8 %indirectarg732, i32 199), !dbg !823
  unreachable, !dbg !823

panic735:                                         ; preds = %checkok733
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg736, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg737, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg738, align 8
  %733 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %733(ptr align 8 %indirectarg736, ptr align 8 %indirectarg737, ptr align 8 %indirectarg738, i32 199), !dbg !826
  unreachable, !dbg !826

panic825:                                         ; preds = %if.then823
  store %"char[]" { ptr @.panic_msg.110, i64 48 }, ptr %indirectarg826, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg827, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg828, align 8
  %734 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %734(ptr align 8 %indirectarg826, ptr align 8 %indirectarg827, ptr align 8 %indirectarg828, i32 194), !dbg !840
  unreachable, !dbg !840

panic866:                                         ; preds = %if.exit863
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg867, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg868, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg869, align 8
  %735 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %735(ptr align 8 %indirectarg867, ptr align 8 %indirectarg868, ptr align 8 %indirectarg869, i32 199), !dbg !859
  unreachable, !dbg !859

panic874:                                         ; preds = %checkok870
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg875, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg876, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg877, align 8
  %736 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %736(ptr align 8 %indirectarg875, ptr align 8 %indirectarg876, ptr align 8 %indirectarg877, i32 200), !dbg !862
  unreachable, !dbg !862

panic882:                                         ; preds = %checkok878
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg883, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg884, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg885, align 8
  %737 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %737(ptr align 8 %indirectarg883, ptr align 8 %indirectarg884, ptr align 8 %indirectarg885, i32 206), !dbg !863
  unreachable, !dbg !863

panic897:                                         ; preds = %guard_block895
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg898, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg899, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg900, align 8
  %738 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %738(ptr align 8 %indirectarg898, ptr align 8 %indirectarg899, ptr align 8 %indirectarg900, i32 203), !dbg !866
  unreachable, !dbg !866

panic904:                                         ; preds = %checkok901
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg905, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg906, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg907, align 8
  %739 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %739(ptr align 8 %indirectarg905, ptr align 8 %indirectarg906, ptr align 8 %indirectarg907, i32 204), !dbg !869
  unreachable, !dbg !869

panic919:                                         ; preds = %after_check917
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg920, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg921, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg922, align 8
  %740 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %740(ptr align 8 %indirectarg920, ptr align 8 %indirectarg921, ptr align 8 %indirectarg922, i32 203), !dbg !872
  unreachable, !dbg !872

panic926:                                         ; preds = %checkok923
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg927, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg928, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg929, align 8
  %741 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %741(ptr align 8 %indirectarg927, ptr align 8 %indirectarg928, ptr align 8 %indirectarg929, i32 204), !dbg !875
  unreachable, !dbg !875

panic935:                                         ; preds = %err_retblock933
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg936, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg937, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg938, align 8
  %742 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %742(ptr align 8 %indirectarg936, ptr align 8 %indirectarg937, ptr align 8 %indirectarg938, i32 203), !dbg !877
  unreachable, !dbg !877

panic942:                                         ; preds = %checkok939
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg943, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg944, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg945, align 8
  %743 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %743(ptr align 8 %indirectarg943, ptr align 8 %indirectarg944, ptr align 8 %indirectarg945, i32 204), !dbg !880
  unreachable, !dbg !880

panic952:                                         ; preds = %switch.case949
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg953, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg954, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg955, align 8
  %744 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %744(ptr align 8 %indirectarg953, ptr align 8 %indirectarg954, ptr align 8 %indirectarg955, i32 211), !dbg !885
  unreachable, !dbg !885

panic960:                                         ; preds = %checkok956
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg961, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg962, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg963, align 8
  %745 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %745(ptr align 8 %indirectarg961, ptr align 8 %indirectarg962, ptr align 8 %indirectarg963, i32 212), !dbg !888
  unreachable, !dbg !888

panic968:                                         ; preds = %checkok964
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg969, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg970, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg971, align 8
  %746 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %746(ptr align 8 %indirectarg969, ptr align 8 %indirectarg970, ptr align 8 %indirectarg971, i32 218), !dbg !889
  unreachable, !dbg !889

panic975:                                         ; preds = %checkok972
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg976, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg977, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg978, align 8
  %747 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %747(ptr align 8 %indirectarg976, ptr align 8 %indirectarg977, ptr align 8 %indirectarg978, i32 219), !dbg !890
  unreachable, !dbg !890

panic1035:                                        ; preds = %guard_block1033
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1036, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1037, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1038, align 8
  %748 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %748(ptr align 8 %indirectarg1036, ptr align 8 %indirectarg1037, ptr align 8 %indirectarg1038, i32 215), !dbg !907
  unreachable, !dbg !907

panic1042:                                        ; preds = %checkok1039
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1043, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1044, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1045, align 8
  %749 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %749(ptr align 8 %indirectarg1043, ptr align 8 %indirectarg1044, ptr align 8 %indirectarg1045, i32 216), !dbg !910
  unreachable, !dbg !910

panic1062:                                        ; preds = %guard_block1060
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1063, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1064, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1065, align 8
  %750 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %750(ptr align 8 %indirectarg1063, ptr align 8 %indirectarg1064, ptr align 8 %indirectarg1065, i32 215), !dbg !922
  unreachable, !dbg !922

panic1069:                                        ; preds = %checkok1066
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1070, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1071, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1072, align 8
  %751 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %751(ptr align 8 %indirectarg1070, ptr align 8 %indirectarg1071, ptr align 8 %indirectarg1072, i32 216), !dbg !925
  unreachable, !dbg !925

panic1089:                                        ; preds = %guard_block1087
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1090, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1091, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1092, align 8
  %752 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %752(ptr align 8 %indirectarg1090, ptr align 8 %indirectarg1091, ptr align 8 %indirectarg1092, i32 215), !dbg !933
  unreachable, !dbg !933

panic1096:                                        ; preds = %checkok1093
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1097, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1098, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1099, align 8
  %753 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %753(ptr align 8 %indirectarg1097, ptr align 8 %indirectarg1098, ptr align 8 %indirectarg1099, i32 216), !dbg !936
  unreachable, !dbg !936

panic1113:                                        ; preds = %guard_block1111
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1114, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1115, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1116, align 8
  %754 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %754(ptr align 8 %indirectarg1114, ptr align 8 %indirectarg1115, ptr align 8 %indirectarg1116, i32 215), !dbg !943
  unreachable, !dbg !943

panic1120:                                        ; preds = %checkok1117
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1121, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1122, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1123, align 8
  %755 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %755(ptr align 8 %indirectarg1121, ptr align 8 %indirectarg1122, ptr align 8 %indirectarg1123, i32 216), !dbg !946
  unreachable, !dbg !946

panic1131:                                        ; preds = %noerr_block1127
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1132, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1133, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1134, align 8
  %756 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %756(ptr align 8 %indirectarg1132, ptr align 8 %indirectarg1133, ptr align 8 %indirectarg1134, i32 215), !dbg !949
  unreachable, !dbg !949

panic1138:                                        ; preds = %checkok1135
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1139, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1140, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1141, align 8
  %757 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %757(ptr align 8 %indirectarg1139, ptr align 8 %indirectarg1140, ptr align 8 %indirectarg1141, i32 216), !dbg !952
  unreachable, !dbg !952

panic1148:                                        ; preds = %switch.case1145
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1149, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1150, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1151, align 8
  %758 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %758(ptr align 8 %indirectarg1149, ptr align 8 %indirectarg1150, ptr align 8 %indirectarg1151, i32 235), !dbg !957
  unreachable, !dbg !957

panic1156:                                        ; preds = %checkok1152
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1157, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1158, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1159, align 8
  %759 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %759(ptr align 8 %indirectarg1157, ptr align 8 %indirectarg1158, ptr align 8 %indirectarg1159, i32 236), !dbg !960
  unreachable, !dbg !960

panic1164:                                        ; preds = %checkok1160
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1165, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1166, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1167, align 8
  %760 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %760(ptr align 8 %indirectarg1165, ptr align 8 %indirectarg1166, ptr align 8 %indirectarg1167, i32 242), !dbg !961
  unreachable, !dbg !961

panic1171:                                        ; preds = %checkok1168
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1172, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1173, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1174, align 8
  %761 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %761(ptr align 8 %indirectarg1172, ptr align 8 %indirectarg1173, ptr align 8 %indirectarg1174, i32 243), !dbg !962
  unreachable, !dbg !962

panic1236:                                        ; preds = %guard_block1234
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1237, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1238, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1239, align 8
  %762 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %762(ptr align 8 %indirectarg1237, ptr align 8 %indirectarg1238, ptr align 8 %indirectarg1239, i32 239), !dbg !979
  unreachable, !dbg !979

panic1243:                                        ; preds = %checkok1240
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1244, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1245, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1246, align 8
  %763 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %763(ptr align 8 %indirectarg1244, ptr align 8 %indirectarg1245, ptr align 8 %indirectarg1246, i32 240), !dbg !982
  unreachable, !dbg !982

panic1265:                                        ; preds = %guard_block1263
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1266, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1267, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1268, align 8
  %764 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %764(ptr align 8 %indirectarg1266, ptr align 8 %indirectarg1267, ptr align 8 %indirectarg1268, i32 239), !dbg !994
  unreachable, !dbg !994

panic1272:                                        ; preds = %checkok1269
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1273, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1274, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1275, align 8
  %765 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %765(ptr align 8 %indirectarg1273, ptr align 8 %indirectarg1274, ptr align 8 %indirectarg1275, i32 240), !dbg !997
  unreachable, !dbg !997

panic1292:                                        ; preds = %guard_block1290
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1293, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1294, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1295, align 8
  %766 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %766(ptr align 8 %indirectarg1293, ptr align 8 %indirectarg1294, ptr align 8 %indirectarg1295, i32 239), !dbg !1005
  unreachable, !dbg !1005

panic1299:                                        ; preds = %checkok1296
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1300, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1301, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1302, align 8
  %767 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %767(ptr align 8 %indirectarg1300, ptr align 8 %indirectarg1301, ptr align 8 %indirectarg1302, i32 240), !dbg !1008
  unreachable, !dbg !1008

panic1319:                                        ; preds = %guard_block1317
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1320, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1321, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1322, align 8
  %768 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %768(ptr align 8 %indirectarg1320, ptr align 8 %indirectarg1321, ptr align 8 %indirectarg1322, i32 239), !dbg !1015
  unreachable, !dbg !1015

panic1326:                                        ; preds = %checkok1323
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1327, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1328, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1329, align 8
  %769 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %769(ptr align 8 %indirectarg1327, ptr align 8 %indirectarg1328, ptr align 8 %indirectarg1329, i32 240), !dbg !1018
  unreachable, !dbg !1018

panic1337:                                        ; preds = %noerr_block1333
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1338, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1339, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1340, align 8
  %770 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %770(ptr align 8 %indirectarg1338, ptr align 8 %indirectarg1339, ptr align 8 %indirectarg1340, i32 239), !dbg !1021
  unreachable, !dbg !1021

panic1344:                                        ; preds = %checkok1341
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1345, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1346, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1347, align 8
  %771 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %771(ptr align 8 %indirectarg1345, ptr align 8 %indirectarg1346, ptr align 8 %indirectarg1347, i32 240), !dbg !1024
  unreachable, !dbg !1024

panic1383:                                        ; preds = %if.exit1380
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1384, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1385, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1386, align 8
  %772 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %772(ptr align 8 %indirectarg1384, ptr align 8 %indirectarg1385, ptr align 8 %indirectarg1386, i32 263), !dbg !1034
  unreachable, !dbg !1034

panic1391:                                        ; preds = %checkok1387
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1392, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1393, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1394, align 8
  %773 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %773(ptr align 8 %indirectarg1392, ptr align 8 %indirectarg1393, ptr align 8 %indirectarg1394, i32 264), !dbg !1037
  unreachable, !dbg !1037

panic1399:                                        ; preds = %checkok1395
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1400, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1401, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1402, align 8
  %774 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %774(ptr align 8 %indirectarg1400, ptr align 8 %indirectarg1401, ptr align 8 %indirectarg1402, i32 270), !dbg !1038
  unreachable, !dbg !1038

panic1406:                                        ; preds = %checkok1403
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1407, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1408, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1409, align 8
  %775 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %775(ptr align 8 %indirectarg1407, ptr align 8 %indirectarg1408, ptr align 8 %indirectarg1409, i32 271), !dbg !1039
  unreachable, !dbg !1039

panic1420:                                        ; preds = %checkok1410
  store %"char[]" { ptr @.panic_msg.117, i64 45 }, ptr %indirectarg1421, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1422, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1423, align 8
  %776 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %776(ptr align 8 %indirectarg1421, ptr align 8 %indirectarg1422, ptr align 8 %indirectarg1423, i32 275), !dbg !1050
  unreachable, !dbg !1050

panic1426:                                        ; preds = %checkok1424
  store %"char[]" { ptr @.panic_msg.117, i64 45 }, ptr %indirectarg1427, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1428, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1429, align 8
  %777 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %777(ptr align 8 %indirectarg1427, ptr align 8 %indirectarg1428, ptr align 8 %indirectarg1429, i32 276), !dbg !1053
  unreachable, !dbg !1053

panic1440:                                        ; preds = %guard_block1438
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1441, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1442, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1443, align 8
  %778 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %778(ptr align 8 %indirectarg1441, ptr align 8 %indirectarg1442, ptr align 8 %indirectarg1443, i32 267), !dbg !1057
  unreachable, !dbg !1057

panic1447:                                        ; preds = %checkok1444
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1448, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1449, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1450, align 8
  %779 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %779(ptr align 8 %indirectarg1448, ptr align 8 %indirectarg1449, ptr align 8 %indirectarg1450, i32 268), !dbg !1060
  unreachable, !dbg !1060

panic1469:                                        ; preds = %guard_block1467
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1470, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1471, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1472, align 8
  %780 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %780(ptr align 8 %indirectarg1470, ptr align 8 %indirectarg1471, ptr align 8 %indirectarg1472, i32 267), !dbg !1072
  unreachable, !dbg !1072

panic1476:                                        ; preds = %checkok1473
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1477, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1478, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1479, align 8
  %781 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %781(ptr align 8 %indirectarg1477, ptr align 8 %indirectarg1478, ptr align 8 %indirectarg1479, i32 268), !dbg !1075
  unreachable, !dbg !1075

panic1496:                                        ; preds = %guard_block1494
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1497, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1498, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1499, align 8
  %782 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %782(ptr align 8 %indirectarg1497, ptr align 8 %indirectarg1498, ptr align 8 %indirectarg1499, i32 267), !dbg !1083
  unreachable, !dbg !1083

panic1503:                                        ; preds = %checkok1500
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1504, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1505, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1506, align 8
  %783 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %783(ptr align 8 %indirectarg1504, ptr align 8 %indirectarg1505, ptr align 8 %indirectarg1506, i32 268), !dbg !1086
  unreachable, !dbg !1086

panic1522:                                        ; preds = %guard_block1520
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1523, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1524, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1525, align 8
  %784 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %784(ptr align 8 %indirectarg1523, ptr align 8 %indirectarg1524, ptr align 8 %indirectarg1525, i32 267), !dbg !1093
  unreachable, !dbg !1093

panic1529:                                        ; preds = %checkok1526
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1530, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1531, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1532, align 8
  %785 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %785(ptr align 8 %indirectarg1530, ptr align 8 %indirectarg1531, ptr align 8 %indirectarg1532, i32 268), !dbg !1096
  unreachable, !dbg !1096

panic1540:                                        ; preds = %noerr_block1536
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1541, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1542, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1543, align 8
  %786 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %786(ptr align 8 %indirectarg1541, ptr align 8 %indirectarg1542, ptr align 8 %indirectarg1543, i32 267), !dbg !1099
  unreachable, !dbg !1099

panic1547:                                        ; preds = %checkok1544
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1548, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1549, align 8
  store %"char[]" { ptr @.func.62, i64 7 }, ptr %indirectarg1550, align 8
  %787 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %787(ptr align 8 %indirectarg1548, ptr align 8 %indirectarg1549, ptr align 8 %indirectarg1550, i32 268), !dbg !1102
  unreachable, !dbg !1102
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Formatter.vprintf(ptr %0, ptr %1, ptr align 8 %2, ptr align 8 %3) #0 comdat !dbg !1110 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %total_len = alloca i64, align 8
  %format_len = alloca i64, align 8
  %variant_index = alloca i64, align 8
  %i = alloca i64, align 8
  %c = alloca i8, align 1
  %taddr = alloca i64, align 8
  %taddr26 = alloca i64, align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg31 = alloca %"any[]", align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %reterr = alloca i64, align 8
  %f = alloca ptr, align 8
  %retparam39 = alloca i64, align 8
  %indirectarg40 = alloca %"char[]", align 8
  %taddr47 = alloca i64, align 8
  %taddr48 = alloca i64, align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %varargslots52 = alloca [2 x %any], align 16
  %indirectarg55 = alloca %"any[]", align 8
  %error_var59 = alloca i64, align 8
  %retparam60 = alloca i64, align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %switch = alloca i8, align 1
  %indirectarg78 = alloca %"char[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %indirectarg80 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %indirectarg88 = alloca %"char[]", align 8
  %indirectarg94 = alloca %"char[]", align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg102 = alloca %"char[]", align 8
  %indirectarg103 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg110 = alloca %"char[]", align 8
  %indirectarg111 = alloca %"char[]", align 8
  %indirectarg112 = alloca %"char[]", align 8
  %reterr118 = alloca i64, align 8
  %f119 = alloca ptr, align 8
  %retparam120 = alloca i64, align 8
  %indirectarg121 = alloca %"char[]", align 8
  %taddr129 = alloca i64, align 8
  %taddr130 = alloca i64, align 8
  %indirectarg131 = alloca %"char[]", align 8
  %indirectarg132 = alloca %"char[]", align 8
  %indirectarg133 = alloca %"char[]", align 8
  %varargslots134 = alloca [2 x %any], align 16
  %indirectarg137 = alloca %"any[]", align 8
  %w = alloca i32, align 4
  %w.f = alloca i64, align 8
  %retparam142 = alloca i32, align 4
  %temp_err = alloca i64, align 8
  %reterr151 = alloca i64, align 8
  %f152 = alloca ptr, align 8
  %retparam153 = alloca i64, align 8
  %indirectarg154 = alloca %"char[]", align 8
  %taddr162 = alloca i64, align 8
  %taddr163 = alloca i64, align 8
  %indirectarg164 = alloca %"char[]", align 8
  %indirectarg165 = alloca %"char[]", align 8
  %indirectarg166 = alloca %"char[]", align 8
  %varargslots167 = alloca [2 x %any], align 16
  %indirectarg170 = alloca %"any[]", align 8
  %indirectarg177 = alloca %"char[]", align 8
  %indirectarg178 = alloca %"char[]", align 8
  %indirectarg179 = alloca %"char[]", align 8
  %indirectarg185 = alloca %"char[]", align 8
  %indirectarg186 = alloca %"char[]", align 8
  %indirectarg187 = alloca %"char[]", align 8
  %indirectarg193 = alloca %"char[]", align 8
  %indirectarg194 = alloca %"char[]", align 8
  %indirectarg195 = alloca %"char[]", align 8
  %indirectarg203 = alloca %"char[]", align 8
  %indirectarg204 = alloca %"char[]", align 8
  %indirectarg205 = alloca %"char[]", align 8
  %reterr211 = alloca i64, align 8
  %f212 = alloca ptr, align 8
  %retparam213 = alloca i64, align 8
  %indirectarg214 = alloca %"char[]", align 8
  %prec = alloca i32, align 4
  %prec.f = alloca i64, align 8
  %retparam221 = alloca i32, align 4
  %temp_err226 = alloca i64, align 8
  %reterr235 = alloca i64, align 8
  %f236 = alloca ptr, align 8
  %retparam237 = alloca i64, align 8
  %indirectarg238 = alloca %"char[]", align 8
  %indirectarg245 = alloca %"char[]", align 8
  %indirectarg246 = alloca %"char[]", align 8
  %indirectarg247 = alloca %"char[]", align 8
  %taddr255 = alloca i64, align 8
  %taddr256 = alloca i64, align 8
  %indirectarg257 = alloca %"char[]", align 8
  %indirectarg258 = alloca %"char[]", align 8
  %indirectarg259 = alloca %"char[]", align 8
  %varargslots260 = alloca [2 x %any], align 16
  %indirectarg263 = alloca %"any[]", align 8
  %base = alloca i32, align 4
  %self270 = alloca ptr, align 8
  %f271 = alloca i64, align 8
  %blockret = alloca i64, align 8
  %indirectarg274 = alloca %"char[]", align 8
  %indirectarg275 = alloca %"char[]", align 8
  %indirectarg276 = alloca %"char[]", align 8
  %indirectarg284 = alloca %"char[]", align 8
  %indirectarg285 = alloca %"char[]", align 8
  %indirectarg286 = alloca %"char[]", align 8
  %indirectarg293 = alloca %"char[]", align 8
  %indirectarg294 = alloca %"char[]", align 8
  %indirectarg295 = alloca %"char[]", align 8
  %error_var299 = alloca i64, align 8
  %retparam300 = alloca i64, align 8
  %indirectarg301 = alloca %"char[]", align 8
  %current = alloca %any, align 8
  %taddr313 = alloca i64, align 8
  %taddr314 = alloca i64, align 8
  %indirectarg315 = alloca %"char[]", align 8
  %indirectarg316 = alloca %"char[]", align 8
  %indirectarg317 = alloca %"char[]", align 8
  %varargslots318 = alloca [2 x %any], align 16
  %indirectarg321 = alloca %"any[]", align 8
  %switch323 = alloca i8, align 1
  %indirectarg328 = alloca %"char[]", align 8
  %indirectarg329 = alloca %"char[]", align 8
  %indirectarg330 = alloca %"char[]", align 8
  %indirectarg336 = alloca %"char[]", align 8
  %indirectarg337 = alloca %"char[]", align 8
  %indirectarg338 = alloca %"char[]", align 8
  %indirectarg345 = alloca %"char[]", align 8
  %indirectarg346 = alloca %"char[]", align 8
  %indirectarg347 = alloca %"char[]", align 8
  %indirectarg354 = alloca %"char[]", align 8
  %indirectarg355 = alloca %"char[]", align 8
  %indirectarg356 = alloca %"char[]", align 8
  %indirectarg363 = alloca %"char[]", align 8
  %indirectarg364 = alloca %"char[]", align 8
  %indirectarg365 = alloca %"char[]", align 8
  %error_var369 = alloca i64, align 8
  %f370 = alloca ptr, align 8
  %len = alloca i64, align 8
  %len.f = alloca i64, align 8
  %retparam372 = alloca double, align 8
  %indirectarg373 = alloca %any, align 8
  %retparam377 = alloca i64, align 8
  %err = alloca i64, align 8
  %switch390 = alloca i64, align 8
  %self395 = alloca ptr, align 8
  %f396 = alloca i64, align 8
  %blockret397 = alloca i64, align 8
  %indirectarg400 = alloca %"char[]", align 8
  %indirectarg401 = alloca %"char[]", align 8
  %indirectarg402 = alloca %"char[]", align 8
  %indirectarg410 = alloca %"char[]", align 8
  %indirectarg411 = alloca %"char[]", align 8
  %indirectarg412 = alloca %"char[]", align 8
  %indirectarg419 = alloca %"char[]", align 8
  %indirectarg420 = alloca %"char[]", align 8
  %indirectarg421 = alloca %"char[]", align 8
  %self428 = alloca ptr, align 8
  %f429 = alloca i64, align 8
  %blockret430 = alloca i64, align 8
  %indirectarg433 = alloca %"char[]", align 8
  %indirectarg434 = alloca %"char[]", align 8
  %indirectarg435 = alloca %"char[]", align 8
  %indirectarg443 = alloca %"char[]", align 8
  %indirectarg444 = alloca %"char[]", align 8
  %indirectarg445 = alloca %"char[]", align 8
  %indirectarg452 = alloca %"char[]", align 8
  %indirectarg453 = alloca %"char[]", align 8
  %indirectarg454 = alloca %"char[]", align 8
  %error_var459 = alloca i64, align 8
  %retparam460 = alloca i64, align 8
  %indirectarg461 = alloca %"char[]", align 8
  %indirectarg475 = alloca %"char[]", align 8
  %indirectarg476 = alloca %"char[]", align 8
  %indirectarg477 = alloca %"char[]", align 8
  %error_var481 = alloca i64, align 8
  %f482 = alloca ptr, align 8
  %len484 = alloca i64, align 8
  %len.f485 = alloca i64, align 8
  %retparam486 = alloca double, align 8
  %indirectarg487 = alloca %any, align 8
  %retparam491 = alloca i64, align 8
  %err496 = alloca i64, align 8
  %switch505 = alloca i64, align 8
  %self511 = alloca ptr, align 8
  %f512 = alloca i64, align 8
  %blockret513 = alloca i64, align 8
  %indirectarg516 = alloca %"char[]", align 8
  %indirectarg517 = alloca %"char[]", align 8
  %indirectarg518 = alloca %"char[]", align 8
  %indirectarg526 = alloca %"char[]", align 8
  %indirectarg527 = alloca %"char[]", align 8
  %indirectarg528 = alloca %"char[]", align 8
  %indirectarg535 = alloca %"char[]", align 8
  %indirectarg536 = alloca %"char[]", align 8
  %indirectarg537 = alloca %"char[]", align 8
  %self544 = alloca ptr, align 8
  %f545 = alloca i64, align 8
  %blockret546 = alloca i64, align 8
  %indirectarg549 = alloca %"char[]", align 8
  %indirectarg550 = alloca %"char[]", align 8
  %indirectarg551 = alloca %"char[]", align 8
  %indirectarg559 = alloca %"char[]", align 8
  %indirectarg560 = alloca %"char[]", align 8
  %indirectarg561 = alloca %"char[]", align 8
  %indirectarg568 = alloca %"char[]", align 8
  %indirectarg569 = alloca %"char[]", align 8
  %indirectarg570 = alloca %"char[]", align 8
  %error_var575 = alloca i64, align 8
  %retparam576 = alloca i64, align 8
  %indirectarg577 = alloca %"char[]", align 8
  %indirectarg591 = alloca %"char[]", align 8
  %indirectarg592 = alloca %"char[]", align 8
  %indirectarg593 = alloca %"char[]", align 8
  %error_var597 = alloca i64, align 8
  %f598 = alloca ptr, align 8
  %len600 = alloca i64, align 8
  %len.f601 = alloca i64, align 8
  %retparam602 = alloca double, align 8
  %indirectarg603 = alloca %any, align 8
  %retparam607 = alloca i64, align 8
  %err612 = alloca i64, align 8
  %switch621 = alloca i64, align 8
  %self627 = alloca ptr, align 8
  %f628 = alloca i64, align 8
  %blockret629 = alloca i64, align 8
  %indirectarg632 = alloca %"char[]", align 8
  %indirectarg633 = alloca %"char[]", align 8
  %indirectarg634 = alloca %"char[]", align 8
  %indirectarg642 = alloca %"char[]", align 8
  %indirectarg643 = alloca %"char[]", align 8
  %indirectarg644 = alloca %"char[]", align 8
  %indirectarg651 = alloca %"char[]", align 8
  %indirectarg652 = alloca %"char[]", align 8
  %indirectarg653 = alloca %"char[]", align 8
  %self660 = alloca ptr, align 8
  %f661 = alloca i64, align 8
  %blockret662 = alloca i64, align 8
  %indirectarg665 = alloca %"char[]", align 8
  %indirectarg666 = alloca %"char[]", align 8
  %indirectarg667 = alloca %"char[]", align 8
  %indirectarg675 = alloca %"char[]", align 8
  %indirectarg676 = alloca %"char[]", align 8
  %indirectarg677 = alloca %"char[]", align 8
  %indirectarg684 = alloca %"char[]", align 8
  %indirectarg685 = alloca %"char[]", align 8
  %indirectarg686 = alloca %"char[]", align 8
  %error_var691 = alloca i64, align 8
  %retparam692 = alloca i64, align 8
  %indirectarg693 = alloca %"char[]", align 8
  %indirectarg707 = alloca %"char[]", align 8
  %indirectarg708 = alloca %"char[]", align 8
  %indirectarg709 = alloca %"char[]", align 8
  %error_var713 = alloca i64, align 8
  %f714 = alloca ptr, align 8
  %len716 = alloca i64, align 8
  %len.f717 = alloca i64, align 8
  %retparam718 = alloca double, align 8
  %indirectarg719 = alloca %any, align 8
  %retparam723 = alloca i64, align 8
  %err728 = alloca i64, align 8
  %switch737 = alloca i64, align 8
  %self743 = alloca ptr, align 8
  %f744 = alloca i64, align 8
  %blockret745 = alloca i64, align 8
  %indirectarg748 = alloca %"char[]", align 8
  %indirectarg749 = alloca %"char[]", align 8
  %indirectarg750 = alloca %"char[]", align 8
  %indirectarg758 = alloca %"char[]", align 8
  %indirectarg759 = alloca %"char[]", align 8
  %indirectarg760 = alloca %"char[]", align 8
  %indirectarg767 = alloca %"char[]", align 8
  %indirectarg768 = alloca %"char[]", align 8
  %indirectarg769 = alloca %"char[]", align 8
  %self776 = alloca ptr, align 8
  %f777 = alloca i64, align 8
  %blockret778 = alloca i64, align 8
  %indirectarg781 = alloca %"char[]", align 8
  %indirectarg782 = alloca %"char[]", align 8
  %indirectarg783 = alloca %"char[]", align 8
  %indirectarg791 = alloca %"char[]", align 8
  %indirectarg792 = alloca %"char[]", align 8
  %indirectarg793 = alloca %"char[]", align 8
  %indirectarg800 = alloca %"char[]", align 8
  %indirectarg801 = alloca %"char[]", align 8
  %indirectarg802 = alloca %"char[]", align 8
  %error_var807 = alloca i64, align 8
  %retparam808 = alloca i64, align 8
  %indirectarg809 = alloca %"char[]", align 8
  %error_var821 = alloca i64, align 8
  %retparam822 = alloca i64, align 8
  %indirectarg823 = alloca %any, align 8
  %indirectarg833 = alloca %"char[]", align 8
  %indirectarg834 = alloca %"char[]", align 8
  %indirectarg835 = alloca %"char[]", align 8
  %len839 = alloca i64, align 8
  %error_var840 = alloca i64, align 8
  %retparam841 = alloca i64, align 8
  %indirectarg842 = alloca %any, align 8
  %error_var849 = alloca i64, align 8
  %indirectarg852 = alloca %"char[]", align 8
  %indirectarg853 = alloca %"char[]", align 8
  %indirectarg854 = alloca %"char[]", align 8
  %retparam858 = alloca i64, align 8
  %out_fn = alloca ptr, align 8
  %indirectarg868 = alloca %"char[]", align 8
  %indirectarg869 = alloca %"char[]", align 8
  %indirectarg870 = alloca %"char[]", align 8
  %indirectarg875 = alloca %"char[]", align 8
  %indirectarg876 = alloca %"char[]", align 8
  %indirectarg877 = alloca %"char[]", align 8
  %len880 = alloca i64, align 8
  %error_var881 = alloca i64, align 8
  %retparam882 = alloca i64, align 8
  %indirectarg883 = alloca %any, align 8
  %indirectarg891 = alloca %"char[]", align 8
  %indirectarg892 = alloca %"char[]", align 8
  %indirectarg893 = alloca %"char[]", align 8
  %error_var896 = alloca i64, align 8
  %indirectarg899 = alloca %"char[]", align 8
  %indirectarg900 = alloca %"char[]", align 8
  %indirectarg901 = alloca %"char[]", align 8
  %retparam906 = alloca i64, align 8
  %error_var913 = alloca i64, align 8
  %retparam914 = alloca i64, align 8
  %indirectarg915 = alloca %any, align 8
  %indirectarg925 = alloca %"char[]", align 8
  %indirectarg926 = alloca %"char[]", align 8
  %indirectarg927 = alloca %"char[]", align 8
  %indirectarg932 = alloca %"char[]", align 8
  %indirectarg933 = alloca %"char[]", align 8
  %indirectarg934 = alloca %"char[]", align 8
  %self938 = alloca ptr, align 8
  %f939 = alloca i64, align 8
  %blockret940 = alloca i64, align 8
  %indirectarg943 = alloca %"char[]", align 8
  %indirectarg944 = alloca %"char[]", align 8
  %indirectarg945 = alloca %"char[]", align 8
  %indirectarg953 = alloca %"char[]", align 8
  %indirectarg954 = alloca %"char[]", align 8
  %indirectarg955 = alloca %"char[]", align 8
  %indirectarg962 = alloca %"char[]", align 8
  %indirectarg963 = alloca %"char[]", align 8
  %indirectarg964 = alloca %"char[]", align 8
  %error_var969 = alloca i64, align 8
  %retparam970 = alloca i64, align 8
  %indirectarg971 = alloca %"char[]", align 8
  %indirectarg983 = alloca %"char[]", align 8
  %indirectarg984 = alloca %"char[]", align 8
  %indirectarg985 = alloca %"char[]", align 8
  %indirectarg990 = alloca %"char[]", align 8
  %indirectarg991 = alloca %"char[]", align 8
  %indirectarg992 = alloca %"char[]", align 8
  %indirectarg998 = alloca %"char[]", align 8
  %indirectarg999 = alloca %"char[]", align 8
  %indirectarg1000 = alloca %"char[]", align 8
  %indirectarg1008 = alloca %"char[]", align 8
  %indirectarg1009 = alloca %"char[]", align 8
  %indirectarg1010 = alloca %"char[]", align 8
  %is_neg = alloca i8, align 1
  %error_var1014 = alloca i64, align 8
  %f1015 = alloca ptr, align 8
  %len1017 = alloca i64, align 8
  %len.f1018 = alloca i64, align 8
  %retparam1019 = alloca i128, align 16
  %indirectarg1020 = alloca %any, align 8
  %retparam1024 = alloca i64, align 8
  %indirectarg1025 = alloca i128, align 16
  %err1030 = alloca i64, align 8
  %switch1039 = alloca i64, align 8
  %self1045 = alloca ptr, align 8
  %f1046 = alloca i64, align 8
  %blockret1047 = alloca i64, align 8
  %indirectarg1050 = alloca %"char[]", align 8
  %indirectarg1051 = alloca %"char[]", align 8
  %indirectarg1052 = alloca %"char[]", align 8
  %indirectarg1060 = alloca %"char[]", align 8
  %indirectarg1061 = alloca %"char[]", align 8
  %indirectarg1062 = alloca %"char[]", align 8
  %indirectarg1069 = alloca %"char[]", align 8
  %indirectarg1070 = alloca %"char[]", align 8
  %indirectarg1071 = alloca %"char[]", align 8
  %self1078 = alloca ptr, align 8
  %f1079 = alloca i64, align 8
  %blockret1080 = alloca i64, align 8
  %indirectarg1083 = alloca %"char[]", align 8
  %indirectarg1084 = alloca %"char[]", align 8
  %indirectarg1085 = alloca %"char[]", align 8
  %indirectarg1093 = alloca %"char[]", align 8
  %indirectarg1094 = alloca %"char[]", align 8
  %indirectarg1095 = alloca %"char[]", align 8
  %indirectarg1102 = alloca %"char[]", align 8
  %indirectarg1103 = alloca %"char[]", align 8
  %indirectarg1104 = alloca %"char[]", align 8
  %error_var1109 = alloca i64, align 8
  %retparam1110 = alloca i64, align 8
  %indirectarg1111 = alloca %"char[]", align 8
  %indirectarg1126 = alloca %"char[]", align 8
  %indirectarg1127 = alloca %"char[]", align 8
  %indirectarg1128 = alloca %"char[]", align 8
  %indirectarg1136 = alloca %"char[]", align 8
  %indirectarg1137 = alloca %"char[]", align 8
  %indirectarg1138 = alloca %"char[]", align 8
  %reterr1143 = alloca i64, align 8
  %4 = icmp eq ptr %1, null, !dbg !1111
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !1111
  br i1 %5, label %panic, label %checkok, !dbg !1111

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1112, metadata !DIExpression()), !dbg !1113
  call void @llvm.dbg.declare(metadata ptr %2, metadata !1114, metadata !DIExpression()), !dbg !1115
  call void @llvm.dbg.declare(metadata ptr %3, metadata !1116, metadata !DIExpression()), !dbg !1117
  %6 = load ptr, ptr %self, align 8, !dbg !1118
  %checknull = icmp eq ptr %6, null, !dbg !1118
  %7 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1118
  br i1 %7, label %panic3, label %checkok7, !dbg !1118

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %6, i64 16, !dbg !1118
  %ptradd8 = getelementptr inbounds i8, ptr %ptradd, i64 24, !dbg !1118
  store i64 0, ptr %ptradd8, align 8, !dbg !1119
  %8 = load ptr, ptr %self, align 8, !dbg !1120
  %checknull9 = icmp eq ptr %8, null, !dbg !1120
  %9 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !1120
  br i1 %9, label %panic10, label %checkok14, !dbg !1120

checkok14:                                        ; preds = %checkok7
  %ptradd15 = getelementptr inbounds i8, ptr %8, i64 8, !dbg !1120
  %10 = load ptr, ptr %ptradd15, align 8, !dbg !1120
  %not = icmp eq ptr %10, null, !dbg !1120
  br i1 %not, label %if.then, label %if.exit, !dbg !1120

if.then:                                          ; preds = %checkok14
  %11 = load ptr, ptr %self, align 8, !dbg !1121
  %checknull16 = icmp eq ptr %11, null, !dbg !1121
  %12 = call i1 @llvm.expect.i1(i1 %checknull16, i1 false), !dbg !1121
  br i1 %12, label %panic17, label %checkok21, !dbg !1121

checkok21:                                        ; preds = %if.then
  %ptradd22 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !1121
  store ptr @std.io.out_null_fn, ptr %ptradd22, align 8, !dbg !1123
  br label %if.exit, !dbg !1123

if.exit:                                          ; preds = %checkok21, %checkok14
  call void @llvm.dbg.declare(metadata ptr %total_len, metadata !1124, metadata !DIExpression()), !dbg !1125
  store i64 0, ptr %total_len, align 8, !dbg !1125
  call void @llvm.dbg.declare(metadata ptr %format_len, metadata !1126, metadata !DIExpression()), !dbg !1127
  %ptradd23 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1128
  %13 = load i64, ptr %ptradd23, align 8, !dbg !1128
  store i64 %13, ptr %format_len, align 8, !dbg !1128
  call void @llvm.dbg.declare(metadata ptr %variant_index, metadata !1129, metadata !DIExpression()), !dbg !1130
  store i64 0, ptr %variant_index, align 8, !dbg !1131
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1132, metadata !DIExpression()), !dbg !1134
  store i64 0, ptr %i, align 8, !dbg !1135
  br label %loop.cond, !dbg !1135

loop.cond:                                        ; preds = %loop.inc, %if.exit
  %14 = load i64, ptr %i, align 8, !dbg !1136
  %15 = load i64, ptr %format_len, align 8, !dbg !1137
  %lt = icmp ult i64 %14, %15, !dbg !1136
  br i1 %lt, label %loop.body, label %loop.exit1123, !dbg !1136

loop.body:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %c, metadata !1138, metadata !DIExpression()), !dbg !1140
  %ptradd24 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1141
  %16 = load i64, ptr %ptradd24, align 8, !dbg !1141
  %17 = load ptr, ptr %2, align 8, !dbg !1141
  %18 = load i64, ptr %i, align 8, !dbg !1142
  %ge = icmp uge i64 %18, %16, !dbg !1142
  %19 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1142
  br i1 %19, label %panic25, label %checkok32, !dbg !1142

checkok32:                                        ; preds = %loop.body
  %ptradd33 = getelementptr inbounds i8, ptr %17, i64 %18, !dbg !1142
  %20 = load i8, ptr %ptradd33, align 1, !dbg !1142
  store i8 %20, ptr %c, align 1, !dbg !1142
  %21 = load i8, ptr %c, align 1, !dbg !1143
  %neq = icmp ne i8 %21, 37, !dbg !1143
  br i1 %neq, label %if.then34, label %if.exit35, !dbg !1143

if.then34:                                        ; preds = %checkok32
  %22 = load i64, ptr %total_len, align 8, !dbg !1144
  %23 = load ptr, ptr %self, align 8
  %24 = load i8, ptr %c, align 1
  %25 = call i64 @std.io.Formatter.out(ptr %retparam, ptr %23, i8 %24), !dbg !1146
  %not_err = icmp eq i64 %25, 0, !dbg !1146
  %26 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1146
  br i1 %26, label %after_check, label %assign_optional, !dbg !1146

assign_optional:                                  ; preds = %if.then34
  store i64 %25, ptr %error_var, align 8, !dbg !1146
  br label %guard_block, !dbg !1146

after_check:                                      ; preds = %if.then34
  br label %noerr_block, !dbg !1146

guard_block:                                      ; preds = %assign_optional
  %27 = load i64, ptr %error_var, align 8, !dbg !1146
  ret i64 %27, !dbg !1146

noerr_block:                                      ; preds = %after_check
  %28 = load i64, ptr %retparam, align 8, !dbg !1146
  %add = add i64 %22, %28, !dbg !1144
  store i64 %add, ptr %total_len, align 8, !dbg !1144
  br label %loop.inc, !dbg !1147

if.exit35:                                        ; preds = %checkok32
  %29 = load i64, ptr %i, align 8, !dbg !1148
  %add36 = add i64 %29, 1, !dbg !1148
  store i64 %add36, ptr %i, align 8, !dbg !1148
  %30 = load i64, ptr %i, align 8, !dbg !1149
  %31 = load i64, ptr %format_len, align 8, !dbg !1150
  %ge37 = icmp uge i64 %30, %31, !dbg !1149
  br i1 %ge37, label %if.then38, label %if.exit43, !dbg !1149

if.then38:                                        ; preds = %if.exit35
  %32 = load ptr, ptr %self, align 8
  store ptr %32, ptr %f, align 8
  %33 = load ptr, ptr %f, align 8
  store %"char[]" { ptr @.str.124, i64 4 }, ptr %indirectarg40, align 8
  %34 = call i64 @std.io.Formatter.out_substr(ptr %retparam39, ptr %33, ptr align 8 %indirectarg40), !dbg !1151
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_FORMAT" to i64), ptr %reterr, align 8, !dbg !1154
  br label %err_retblock, !dbg !1154

err_retblock:                                     ; preds = %if.then38
  %35 = load i64, ptr %reterr, align 8, !dbg !1154
  ret i64 %35, !dbg !1154

if.exit43:                                        ; preds = %if.exit35
  %ptradd44 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1155
  %36 = load i64, ptr %ptradd44, align 8, !dbg !1155
  %37 = load ptr, ptr %2, align 8, !dbg !1155
  %38 = load i64, ptr %i, align 8, !dbg !1156
  %ge45 = icmp uge i64 %38, %36, !dbg !1156
  %39 = call i1 @llvm.expect.i1(i1 %ge45, i1 false), !dbg !1156
  br i1 %39, label %panic46, label %checkok56, !dbg !1156

checkok56:                                        ; preds = %if.exit43
  %ptradd57 = getelementptr inbounds i8, ptr %37, i64 %38, !dbg !1156
  %40 = load i8, ptr %ptradd57, align 1, !dbg !1156
  store i8 %40, ptr %c, align 1, !dbg !1156
  %41 = load i8, ptr %c, align 1, !dbg !1157
  %eq = icmp eq i8 %41, 37, !dbg !1157
  br i1 %eq, label %if.then58, label %if.exit67, !dbg !1157

if.then58:                                        ; preds = %checkok56
  %42 = load i64, ptr %total_len, align 8, !dbg !1158
  %43 = load ptr, ptr %self, align 8
  %44 = load i8, ptr %c, align 1
  %45 = call i64 @std.io.Formatter.out(ptr %retparam60, ptr %43, i8 %44), !dbg !1160
  %not_err61 = icmp eq i64 %45, 0, !dbg !1160
  %46 = call i1 @llvm.expect.i1(i1 %not_err61, i1 true), !dbg !1160
  br i1 %46, label %after_check63, label %assign_optional62, !dbg !1160

assign_optional62:                                ; preds = %if.then58
  store i64 %45, ptr %error_var59, align 8, !dbg !1160
  br label %guard_block64, !dbg !1160

after_check63:                                    ; preds = %if.then58
  br label %noerr_block65, !dbg !1160

guard_block64:                                    ; preds = %assign_optional62
  %47 = load i64, ptr %error_var59, align 8, !dbg !1160
  ret i64 %47, !dbg !1160

noerr_block65:                                    ; preds = %after_check63
  %48 = load i64, ptr %retparam60, align 8, !dbg !1160
  %add66 = add i64 %42, %48, !dbg !1158
  store i64 %add66, ptr %total_len, align 8, !dbg !1158
  br label %loop.inc, !dbg !1161

if.exit67:                                        ; preds = %checkok56
  %49 = load ptr, ptr %self, align 8, !dbg !1162
  %checknull68 = icmp eq ptr %49, null, !dbg !1162
  %50 = call i1 @llvm.expect.i1(i1 %checknull68, i1 false), !dbg !1162
  br i1 %50, label %panic69, label %checkok73, !dbg !1162

checkok73:                                        ; preds = %if.exit67
  %ptradd74 = getelementptr inbounds i8, ptr %49, i64 16, !dbg !1162
  store i32 0, ptr %ptradd74, align 8, !dbg !1162
  br label %loop.body75, !dbg !1163

loop.body75:                                      ; preds = %checkok138, %checkok73
  %51 = load i8, ptr %c, align 1
  store i8 %51, ptr %switch, align 1
  br label %switch.entry

switch.entry:                                     ; preds = %loop.body75
  %52 = load i8, ptr %switch, align 1
  switch i8 %52, label %switch.default [
    i8 48, label %switch.case
    i8 45, label %switch.case83
    i8 43, label %switch.case91
    i8 32, label %switch.case99
    i8 35, label %switch.case107
  ]

switch.case:                                      ; preds = %switch.entry
  %53 = load ptr, ptr %self, align 8, !dbg !1164
  %checknull76 = icmp eq ptr %53, null, !dbg !1164
  %54 = call i1 @llvm.expect.i1(i1 %checknull76, i1 false), !dbg !1164
  br i1 %54, label %panic77, label %checkok81, !dbg !1164

checkok81:                                        ; preds = %switch.case
  %ptradd82 = getelementptr inbounds i8, ptr %53, i64 16, !dbg !1164
  %55 = load i32, ptr %ptradd82, align 8, !dbg !1169
  %56 = and i32 %55, -2, !dbg !1169
  %57 = or i32 %56, 1, !dbg !1169
  store i32 %57, ptr %ptradd82, align 8, !dbg !1169
  br label %switch.exit, !dbg !1169

switch.case83:                                    ; preds = %switch.entry
  %58 = load ptr, ptr %self, align 8, !dbg !1170
  %checknull84 = icmp eq ptr %58, null, !dbg !1170
  %59 = call i1 @llvm.expect.i1(i1 %checknull84, i1 false), !dbg !1170
  br i1 %59, label %panic85, label %checkok89, !dbg !1170

checkok89:                                        ; preds = %switch.case83
  %ptradd90 = getelementptr inbounds i8, ptr %58, i64 16, !dbg !1170
  %60 = load i32, ptr %ptradd90, align 8, !dbg !1172
  %61 = and i32 %60, -3, !dbg !1172
  %62 = or i32 %61, 2, !dbg !1172
  store i32 %62, ptr %ptradd90, align 8, !dbg !1172
  br label %switch.exit, !dbg !1172

switch.case91:                                    ; preds = %switch.entry
  %63 = load ptr, ptr %self, align 8, !dbg !1173
  %checknull92 = icmp eq ptr %63, null, !dbg !1173
  %64 = call i1 @llvm.expect.i1(i1 %checknull92, i1 false), !dbg !1173
  br i1 %64, label %panic93, label %checkok97, !dbg !1173

checkok97:                                        ; preds = %switch.case91
  %ptradd98 = getelementptr inbounds i8, ptr %63, i64 16, !dbg !1173
  %65 = load i32, ptr %ptradd98, align 8, !dbg !1175
  %66 = and i32 %65, -5, !dbg !1175
  %67 = or i32 %66, 4, !dbg !1175
  store i32 %67, ptr %ptradd98, align 8, !dbg !1175
  br label %switch.exit, !dbg !1175

switch.case99:                                    ; preds = %switch.entry
  %68 = load ptr, ptr %self, align 8, !dbg !1176
  %checknull100 = icmp eq ptr %68, null, !dbg !1176
  %69 = call i1 @llvm.expect.i1(i1 %checknull100, i1 false), !dbg !1176
  br i1 %69, label %panic101, label %checkok105, !dbg !1176

checkok105:                                       ; preds = %switch.case99
  %ptradd106 = getelementptr inbounds i8, ptr %68, i64 16, !dbg !1176
  %70 = load i32, ptr %ptradd106, align 8, !dbg !1178
  %71 = and i32 %70, -9, !dbg !1178
  %72 = or i32 %71, 8, !dbg !1178
  store i32 %72, ptr %ptradd106, align 8, !dbg !1178
  br label %switch.exit, !dbg !1178

switch.case107:                                   ; preds = %switch.entry
  %73 = load ptr, ptr %self, align 8, !dbg !1179
  %checknull108 = icmp eq ptr %73, null, !dbg !1179
  %74 = call i1 @llvm.expect.i1(i1 %checknull108, i1 false), !dbg !1179
  br i1 %74, label %panic109, label %checkok113, !dbg !1179

checkok113:                                       ; preds = %switch.case107
  %ptradd114 = getelementptr inbounds i8, ptr %73, i64 16, !dbg !1179
  %75 = load i32, ptr %ptradd114, align 8, !dbg !1181
  %76 = and i32 %75, -17, !dbg !1181
  %77 = or i32 %76, 16, !dbg !1181
  store i32 %77, ptr %ptradd114, align 8, !dbg !1181
  br label %switch.exit, !dbg !1181

switch.default:                                   ; preds = %switch.entry
  br label %loop.exit, !dbg !1182

switch.exit:                                      ; preds = %checkok113, %checkok105, %checkok97, %checkok89, %checkok81
  %78 = load i64, ptr %i, align 8, !dbg !1184
  %add115 = add i64 %78, 1, !dbg !1184
  store i64 %add115, ptr %i, align 8, !dbg !1184
  %79 = load i64, ptr %format_len, align 8, !dbg !1185
  %ge116 = icmp uge i64 %add115, %79, !dbg !1186
  br i1 %ge116, label %if.then117, label %if.exit125, !dbg !1186

if.then117:                                       ; preds = %switch.exit
  %80 = load ptr, ptr %self, align 8
  store ptr %80, ptr %f119, align 8
  %81 = load ptr, ptr %f119, align 8
  store %"char[]" { ptr @.str.125, i64 4 }, ptr %indirectarg121, align 8
  %82 = call i64 @std.io.Formatter.out_substr(ptr %retparam120, ptr %81, ptr align 8 %indirectarg121), !dbg !1187
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_FORMAT" to i64), ptr %reterr118, align 8, !dbg !1190
  br label %err_retblock124, !dbg !1190

err_retblock124:                                  ; preds = %if.then117
  %83 = load i64, ptr %reterr118, align 8, !dbg !1190
  ret i64 %83, !dbg !1190

if.exit125:                                       ; preds = %switch.exit
  %ptradd126 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1191
  %84 = load i64, ptr %ptradd126, align 8, !dbg !1191
  %85 = load ptr, ptr %2, align 8, !dbg !1191
  %86 = load i64, ptr %i, align 8, !dbg !1192
  %ge127 = icmp uge i64 %86, %84, !dbg !1192
  %87 = call i1 @llvm.expect.i1(i1 %ge127, i1 false), !dbg !1192
  br i1 %87, label %panic128, label %checkok138, !dbg !1192

checkok138:                                       ; preds = %if.exit125
  %ptradd139 = getelementptr inbounds i8, ptr %85, i64 %86, !dbg !1192
  %88 = load i8, ptr %ptradd139, align 1, !dbg !1192
  store i8 %88, ptr %c, align 1, !dbg !1192
  br label %loop.body75, !dbg !1192

loop.exit:                                        ; preds = %switch.default
  call void @llvm.dbg.declare(metadata ptr %w, metadata !1193, metadata !DIExpression()), !dbg !1194
  %ptradd140 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !1195
  %ptradd141 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1196
  %89 = load ptr, ptr %3, align 8
  %90 = load i64, ptr %ptradd140, align 8
  %91 = load ptr, ptr %2, align 8
  %92 = load i64, ptr %ptradd141, align 8
  %93 = call i64 @std.io.printf_parse_format_field(ptr %retparam142, ptr %89, i64 %90, ptr %variant_index, ptr %91, i64 %92, ptr %i) #5, !dbg !1197
  %not_err143 = icmp eq i64 %93, 0, !dbg !1197
  %94 = call i1 @llvm.expect.i1(i1 %not_err143, i1 true), !dbg !1197
  br i1 %94, label %after_check145, label %assign_optional144, !dbg !1197

assign_optional144:                               ; preds = %loop.exit
  store i64 %93, ptr %w.f, align 8, !dbg !1197
  br label %after_assign, !dbg !1197

after_check145:                                   ; preds = %loop.exit
  %95 = load i32, ptr %retparam142, align 4, !dbg !1197
  store i32 %95, ptr %w, align 4, !dbg !1197
  store i64 0, ptr %w.f, align 8, !dbg !1197
  br label %after_assign, !dbg !1197

after_assign:                                     ; preds = %after_check145, %assign_optional144
  br label %testblock

testblock:                                        ; preds = %after_assign
  %optval = load i64, ptr %w.f, align 8, !dbg !1198
  %not_err146 = icmp eq i64 %optval, 0, !dbg !1198
  %96 = call i1 @llvm.expect.i1(i1 %not_err146, i1 true), !dbg !1198
  br i1 %96, label %after_check148, label %assign_optional147, !dbg !1198

assign_optional147:                               ; preds = %testblock
  store i64 %optval, ptr %temp_err, align 8, !dbg !1198
  br label %end_block, !dbg !1198

after_check148:                                   ; preds = %testblock
  store i64 0, ptr %temp_err, align 8, !dbg !1198
  br label %end_block, !dbg !1198

end_block:                                        ; preds = %after_check148, %assign_optional147
  %97 = load i64, ptr %temp_err, align 8, !dbg !1198
  %neq149 = icmp ne i64 %97, 0, !dbg !1198
  br i1 %neq149, label %if.then150, label %if.exit158, !dbg !1198

if.then150:                                       ; preds = %end_block
  %98 = load ptr, ptr %self, align 8
  store ptr %98, ptr %f152, align 8
  %99 = load ptr, ptr %f152, align 8
  store %"char[]" { ptr @.str.126, i64 4 }, ptr %indirectarg154, align 8
  %100 = call i64 @std.io.Formatter.out_substr(ptr %retparam153, ptr %99, ptr align 8 %indirectarg154), !dbg !1199
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_FORMAT" to i64), ptr %reterr151, align 8, !dbg !1202
  br label %err_retblock157, !dbg !1202

err_retblock157:                                  ; preds = %if.then150
  %101 = load i64, ptr %reterr151, align 8, !dbg !1202
  ret i64 %101, !dbg !1202

if.exit158:                                       ; preds = %end_block
  %ptradd159 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1203
  %102 = load i64, ptr %ptradd159, align 8, !dbg !1203
  %103 = load ptr, ptr %2, align 8, !dbg !1203
  %104 = load i64, ptr %i, align 8, !dbg !1204
  %ge160 = icmp uge i64 %104, %102, !dbg !1204
  %105 = call i1 @llvm.expect.i1(i1 %ge160, i1 false), !dbg !1204
  br i1 %105, label %panic161, label %checkok171, !dbg !1204

checkok171:                                       ; preds = %if.exit158
  %ptradd172 = getelementptr inbounds i8, ptr %103, i64 %104, !dbg !1204
  %106 = load i8, ptr %ptradd172, align 1, !dbg !1204
  store i8 %106, ptr %c, align 1, !dbg !1204
  %107 = load i32, ptr %w, align 4, !dbg !1205
  %lt173 = icmp slt i32 %107, 0, !dbg !1205
  br i1 %lt173, label %if.then174, label %if.exit182, !dbg !1205

if.then174:                                       ; preds = %checkok171
  %108 = load ptr, ptr %self, align 8, !dbg !1206
  %checknull175 = icmp eq ptr %108, null, !dbg !1206
  %109 = call i1 @llvm.expect.i1(i1 %checknull175, i1 false), !dbg !1206
  br i1 %109, label %panic176, label %checkok180, !dbg !1206

checkok180:                                       ; preds = %if.then174
  %ptradd181 = getelementptr inbounds i8, ptr %108, i64 16, !dbg !1206
  %110 = load i32, ptr %ptradd181, align 8, !dbg !1208
  %111 = and i32 %110, -3, !dbg !1208
  %112 = or i32 %111, 2, !dbg !1208
  store i32 %112, ptr %ptradd181, align 8, !dbg !1208
  %113 = load i32, ptr %w, align 4, !dbg !1209
  %neg = sub i32 0, %113, !dbg !1209
  store i32 %neg, ptr %w, align 4, !dbg !1209
  store i64 0, ptr %w.f, align 8, !dbg !1209
  br label %if.exit182, !dbg !1209

if.exit182:                                       ; preds = %checkok180, %checkok171
  %114 = load ptr, ptr %self, align 8, !dbg !1210
  %checknull183 = icmp eq ptr %114, null, !dbg !1210
  %115 = call i1 @llvm.expect.i1(i1 %checknull183, i1 false), !dbg !1210
  br i1 %115, label %panic184, label %checkok188, !dbg !1210

checkok188:                                       ; preds = %if.exit182
  %ptradd189 = getelementptr inbounds i8, ptr %114, i64 16, !dbg !1210
  %ptradd190 = getelementptr inbounds i8, ptr %ptradd189, i64 4, !dbg !1210
  %116 = load i32, ptr %w, align 4, !dbg !1211
  store i32 %116, ptr %ptradd190, align 4, !dbg !1211
  %117 = load ptr, ptr %self, align 8, !dbg !1212
  %checknull191 = icmp eq ptr %117, null, !dbg !1212
  %118 = call i1 @llvm.expect.i1(i1 %checknull191, i1 false), !dbg !1212
  br i1 %118, label %panic192, label %checkok196, !dbg !1212

checkok196:                                       ; preds = %checkok188
  %ptradd197 = getelementptr inbounds i8, ptr %117, i64 16, !dbg !1212
  %ptradd198 = getelementptr inbounds i8, ptr %ptradd197, i64 8, !dbg !1212
  store i32 0, ptr %ptradd198, align 8, !dbg !1213
  %119 = load i8, ptr %c, align 1, !dbg !1214
  %eq199 = icmp eq i8 %119, 46, !dbg !1214
  br i1 %eq199, label %if.then200, label %if.exit266, !dbg !1214

if.then200:                                       ; preds = %checkok196
  %120 = load ptr, ptr %self, align 8, !dbg !1215
  %checknull201 = icmp eq ptr %120, null, !dbg !1215
  %121 = call i1 @llvm.expect.i1(i1 %checknull201, i1 false), !dbg !1215
  br i1 %121, label %panic202, label %checkok206, !dbg !1215

checkok206:                                       ; preds = %if.then200
  %ptradd207 = getelementptr inbounds i8, ptr %120, i64 16, !dbg !1215
  %122 = load i32, ptr %ptradd207, align 8, !dbg !1217
  %123 = and i32 %122, -65, !dbg !1217
  %124 = or i32 %123, 64, !dbg !1217
  store i32 %124, ptr %ptradd207, align 8, !dbg !1217
  %125 = load i64, ptr %i, align 8, !dbg !1218
  %add208 = add i64 %125, 1, !dbg !1218
  store i64 %add208, ptr %i, align 8, !dbg !1218
  %126 = load i64, ptr %format_len, align 8, !dbg !1219
  %ge209 = icmp uge i64 %add208, %126, !dbg !1220
  br i1 %ge209, label %if.then210, label %if.exit218, !dbg !1220

if.then210:                                       ; preds = %checkok206
  %127 = load ptr, ptr %self, align 8
  store ptr %127, ptr %f212, align 8
  %128 = load ptr, ptr %f212, align 8
  store %"char[]" { ptr @.str.127, i64 12 }, ptr %indirectarg214, align 8
  %129 = call i64 @std.io.Formatter.out_substr(ptr %retparam213, ptr %128, ptr align 8 %indirectarg214), !dbg !1221
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_FORMAT" to i64), ptr %reterr211, align 8, !dbg !1224
  br label %err_retblock217, !dbg !1224

err_retblock217:                                  ; preds = %if.then210
  %130 = load i64, ptr %reterr211, align 8, !dbg !1224
  ret i64 %130, !dbg !1224

if.exit218:                                       ; preds = %checkok206
  call void @llvm.dbg.declare(metadata ptr %prec, metadata !1225, metadata !DIExpression()), !dbg !1226
  %ptradd219 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !1227
  %ptradd220 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1228
  %131 = load ptr, ptr %3, align 8
  %132 = load i64, ptr %ptradd219, align 8
  %133 = load ptr, ptr %2, align 8
  %134 = load i64, ptr %ptradd220, align 8
  %135 = call i64 @std.io.printf_parse_format_field(ptr %retparam221, ptr %131, i64 %132, ptr %variant_index, ptr %133, i64 %134, ptr %i) #5, !dbg !1229
  %not_err222 = icmp eq i64 %135, 0, !dbg !1229
  %136 = call i1 @llvm.expect.i1(i1 %not_err222, i1 true), !dbg !1229
  br i1 %136, label %after_check224, label %assign_optional223, !dbg !1229

assign_optional223:                               ; preds = %if.exit218
  store i64 %135, ptr %prec.f, align 8, !dbg !1229
  br label %after_assign225, !dbg !1229

after_check224:                                   ; preds = %if.exit218
  %137 = load i32, ptr %retparam221, align 4, !dbg !1229
  store i32 %137, ptr %prec, align 4, !dbg !1229
  store i64 0, ptr %prec.f, align 8, !dbg !1229
  br label %after_assign225, !dbg !1229

after_assign225:                                  ; preds = %after_check224, %assign_optional223
  br label %testblock227

testblock227:                                     ; preds = %after_assign225
  %optval228 = load i64, ptr %prec.f, align 8, !dbg !1230
  %not_err229 = icmp eq i64 %optval228, 0, !dbg !1230
  %138 = call i1 @llvm.expect.i1(i1 %not_err229, i1 true), !dbg !1230
  br i1 %138, label %after_check231, label %assign_optional230, !dbg !1230

assign_optional230:                               ; preds = %testblock227
  store i64 %optval228, ptr %temp_err226, align 8, !dbg !1230
  br label %end_block232, !dbg !1230

after_check231:                                   ; preds = %testblock227
  store i64 0, ptr %temp_err226, align 8, !dbg !1230
  br label %end_block232, !dbg !1230

end_block232:                                     ; preds = %after_check231, %assign_optional230
  %139 = load i64, ptr %temp_err226, align 8, !dbg !1230
  %neq233 = icmp ne i64 %139, 0, !dbg !1230
  br i1 %neq233, label %if.then234, label %if.exit242, !dbg !1230

if.then234:                                       ; preds = %end_block232
  %140 = load ptr, ptr %self, align 8
  store ptr %140, ptr %f236, align 8
  %141 = load ptr, ptr %f236, align 8
  store %"char[]" { ptr @.str.128, i64 12 }, ptr %indirectarg238, align 8
  %142 = call i64 @std.io.Formatter.out_substr(ptr %retparam237, ptr %141, ptr align 8 %indirectarg238), !dbg !1231
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_FORMAT" to i64), ptr %reterr235, align 8, !dbg !1234
  br label %err_retblock241, !dbg !1234

err_retblock241:                                  ; preds = %if.then234
  %143 = load i64, ptr %reterr235, align 8, !dbg !1234
  ret i64 %143, !dbg !1234

if.exit242:                                       ; preds = %end_block232
  %144 = load ptr, ptr %self, align 8, !dbg !1235
  %checknull243 = icmp eq ptr %144, null, !dbg !1235
  %145 = call i1 @llvm.expect.i1(i1 %checknull243, i1 false), !dbg !1235
  br i1 %145, label %panic244, label %checkok248, !dbg !1235

checkok248:                                       ; preds = %if.exit242
  %ptradd249 = getelementptr inbounds i8, ptr %144, i64 16, !dbg !1235
  %ptradd250 = getelementptr inbounds i8, ptr %ptradd249, i64 8, !dbg !1235
  %146 = load i32, ptr %prec, align 4, !dbg !1236
  %lt251 = icmp slt i32 %146, 0, !dbg !1236
  br i1 %lt251, label %cond.lhs, label %cond.rhs, !dbg !1236

cond.lhs:                                         ; preds = %checkok248
  br label %cond.phi, !dbg !1237

cond.rhs:                                         ; preds = %checkok248
  %147 = load i32, ptr %prec, align 4, !dbg !1238
  br label %cond.phi, !dbg !1238

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i32 [ 0, %cond.lhs ], [ %147, %cond.rhs ], !dbg !1238
  store i32 %val, ptr %ptradd250, align 8, !dbg !1238
  %ptradd252 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1239
  %148 = load i64, ptr %ptradd252, align 8, !dbg !1239
  %149 = load ptr, ptr %2, align 8, !dbg !1239
  %150 = load i64, ptr %i, align 8, !dbg !1240
  %ge253 = icmp uge i64 %150, %148, !dbg !1240
  %151 = call i1 @llvm.expect.i1(i1 %ge253, i1 false), !dbg !1240
  br i1 %151, label %panic254, label %checkok264, !dbg !1240

checkok264:                                       ; preds = %cond.phi
  %ptradd265 = getelementptr inbounds i8, ptr %149, i64 %150, !dbg !1240
  %152 = load i8, ptr %ptradd265, align 1, !dbg !1240
  store i8 %152, ptr %c, align 1, !dbg !1240
  br label %if.exit266, !dbg !1240

if.exit266:                                       ; preds = %checkok264, %checkok196
  call void @llvm.dbg.declare(metadata ptr %base, metadata !1241, metadata !DIExpression()), !dbg !1242
  store i32 0, ptr %base, align 4, !dbg !1243
  %153 = load i64, ptr %variant_index, align 8, !dbg !1244
  %ptradd267 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !1245
  %154 = load i64, ptr %ptradd267, align 8, !dbg !1245
  %ge268 = icmp uge i64 %153, %154, !dbg !1244
  br i1 %ge268, label %if.then269, label %if.exit308, !dbg !1244

if.then269:                                       ; preds = %if.exit266
  %155 = load ptr, ptr %self, align 8
  store ptr %155, ptr %self270, align 8
  store i64 ptrtoint (ptr @"std.io.PrintFault$NOT_ENOUGH_ARGUMENTS" to i64), ptr %f271, align 8
  %156 = load ptr, ptr %self270, align 8, !dbg !1246
  %checknull272 = icmp eq ptr %156, null, !dbg !1246
  %157 = call i1 @llvm.expect.i1(i1 %checknull272, i1 false), !dbg !1246
  br i1 %157, label %panic273, label %checkok277, !dbg !1246

checkok277:                                       ; preds = %if.then269
  %ptradd278 = getelementptr inbounds i8, ptr %156, i64 16, !dbg !1246
  %ptradd279 = getelementptr inbounds i8, ptr %ptradd278, i64 24, !dbg !1246
  %158 = load i64, ptr %ptradd279, align 8, !dbg !1246
  %neq280 = icmp ne i64 %158, 0, !dbg !1246
  br i1 %neq280, label %if.then281, label %if.exit290, !dbg !1246

if.then281:                                       ; preds = %checkok277
  %159 = load ptr, ptr %self270, align 8, !dbg !1250
  %checknull282 = icmp eq ptr %159, null, !dbg !1250
  %160 = call i1 @llvm.expect.i1(i1 %checknull282, i1 false), !dbg !1250
  br i1 %160, label %panic283, label %checkok287, !dbg !1250

checkok287:                                       ; preds = %if.then281
  %ptradd288 = getelementptr inbounds i8, ptr %159, i64 16, !dbg !1250
  %ptradd289 = getelementptr inbounds i8, ptr %ptradd288, i64 24, !dbg !1250
  %161 = load i64, ptr %ptradd289, align 8, !dbg !1250
  store i64 %161, ptr %blockret, align 8, !dbg !1250
  br label %expr_block.exit, !dbg !1250

if.exit290:                                       ; preds = %checkok277
  %162 = load ptr, ptr %self270, align 8, !dbg !1251
  %checknull291 = icmp eq ptr %162, null, !dbg !1251
  %163 = call i1 @llvm.expect.i1(i1 %checknull291, i1 false), !dbg !1251
  br i1 %163, label %panic292, label %checkok296, !dbg !1251

checkok296:                                       ; preds = %if.exit290
  %ptradd297 = getelementptr inbounds i8, ptr %162, i64 16, !dbg !1251
  %ptradd298 = getelementptr inbounds i8, ptr %ptradd297, i64 24, !dbg !1251
  %164 = load i64, ptr %f271, align 8, !dbg !1252
  store i64 %164, ptr %ptradd298, align 8, !dbg !1252
  %165 = load i64, ptr %f271, align 8, !dbg !1253
  store i64 %165, ptr %blockret, align 8, !dbg !1253
  br label %expr_block.exit, !dbg !1253

expr_block.exit:                                  ; preds = %checkok296, %checkok287
  %166 = load i64, ptr %total_len, align 8, !dbg !1254
  %167 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.130, i64 9 }, ptr %indirectarg301, align 8
  %168 = call i64 @std.io.Formatter.out_substr(ptr %retparam300, ptr %167, ptr align 8 %indirectarg301), !dbg !1255
  %not_err302 = icmp eq i64 %168, 0, !dbg !1255
  %169 = call i1 @llvm.expect.i1(i1 %not_err302, i1 true), !dbg !1255
  br i1 %169, label %after_check304, label %assign_optional303, !dbg !1255

assign_optional303:                               ; preds = %expr_block.exit
  store i64 %168, ptr %error_var299, align 8, !dbg !1255
  br label %guard_block305, !dbg !1255

after_check304:                                   ; preds = %expr_block.exit
  br label %noerr_block306, !dbg !1255

guard_block305:                                   ; preds = %assign_optional303
  %170 = load i64, ptr %error_var299, align 8, !dbg !1255
  ret i64 %170, !dbg !1255

noerr_block306:                                   ; preds = %after_check304
  %171 = load i64, ptr %retparam300, align 8, !dbg !1255
  %add307 = add i64 %166, %171, !dbg !1254
  store i64 %add307, ptr %total_len, align 8, !dbg !1254
  br label %loop.inc, !dbg !1256

if.exit308:                                       ; preds = %if.exit266
  call void @llvm.dbg.declare(metadata ptr %current, metadata !1257, metadata !DIExpression()), !dbg !1258
  %ptradd309 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !1259
  %172 = load i64, ptr %ptradd309, align 8, !dbg !1259
  %173 = load ptr, ptr %3, align 8, !dbg !1259
  %174 = load i64, ptr %variant_index, align 8, !dbg !1260
  %add310 = add i64 %174, 1, !dbg !1260
  store i64 %add310, ptr %variant_index, align 8, !dbg !1260
  %ge311 = icmp uge i64 %174, %172, !dbg !1260
  %175 = call i1 @llvm.expect.i1(i1 %ge311, i1 false), !dbg !1260
  br i1 %175, label %panic312, label %checkok322, !dbg !1260

checkok322:                                       ; preds = %if.exit308
  %ptroffset = getelementptr inbounds [16 x i8], ptr %173, i64 %174, !dbg !1260
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %current, ptr align 8 %ptroffset, i32 16, i1 false), !dbg !1260
  %176 = load i8, ptr %c, align 1
  store i8 %176, ptr %switch323, align 1
  br label %switch.entry324

switch.entry324:                                  ; preds = %checkok322
  %177 = load i8, ptr %switch323, align 1
  switch i8 %177, label %switch.default937 [
    i8 100, label %switch.case325
    i8 88, label %switch.case333
    i8 120, label %switch.case341
    i8 79, label %switch.case342
    i8 111, label %switch.case350
    i8 66, label %switch.case351
    i8 98, label %switch.case359
    i8 65, label %switch.case360
    i8 97, label %switch.case368
    i8 70, label %switch.case472
    i8 102, label %switch.case480
    i8 69, label %switch.case588
    i8 101, label %switch.case596
    i8 71, label %switch.case704
    i8 103, label %switch.case712
    i8 99, label %switch.case820
    i8 115, label %switch.case830
    i8 112, label %switch.case922
  ]

switch.case325:                                   ; preds = %switch.entry324
  store i32 10, ptr %base, align 4, !dbg !1261
  %178 = load ptr, ptr %self, align 8, !dbg !1264
  %checknull326 = icmp eq ptr %178, null, !dbg !1264
  %179 = call i1 @llvm.expect.i1(i1 %checknull326, i1 false), !dbg !1264
  br i1 %179, label %panic327, label %checkok331, !dbg !1264

checkok331:                                       ; preds = %switch.case325
  %ptradd332 = getelementptr inbounds i8, ptr %178, i64 16, !dbg !1264
  %180 = load i32, ptr %ptradd332, align 8, !dbg !1265
  %181 = and i32 %180, -17, !dbg !1265
  store i32 %181, ptr %ptradd332, align 8, !dbg !1265
  br label %switch.exit978, !dbg !1265

switch.case333:                                   ; preds = %switch.entry324
  %182 = load ptr, ptr %self, align 8, !dbg !1266
  %checknull334 = icmp eq ptr %182, null, !dbg !1266
  %183 = call i1 @llvm.expect.i1(i1 %checknull334, i1 false), !dbg !1266
  br i1 %183, label %panic335, label %checkok339, !dbg !1266

checkok339:                                       ; preds = %switch.case333
  %ptradd340 = getelementptr inbounds i8, ptr %182, i64 16, !dbg !1266
  %184 = load i32, ptr %ptradd340, align 8, !dbg !1268
  %185 = and i32 %184, -33, !dbg !1268
  %186 = or i32 %185, 32, !dbg !1268
  store i32 %186, ptr %ptradd340, align 8, !dbg !1268
  br label %switch.case341, !dbg !1269

switch.case341:                                   ; preds = %switch.entry324, %checkok339
  store i32 16, ptr %base, align 4, !dbg !1270
  br label %switch.exit978, !dbg !1270

switch.case342:                                   ; preds = %switch.entry324
  %187 = load ptr, ptr %self, align 8, !dbg !1272
  %checknull343 = icmp eq ptr %187, null, !dbg !1272
  %188 = call i1 @llvm.expect.i1(i1 %checknull343, i1 false), !dbg !1272
  br i1 %188, label %panic344, label %checkok348, !dbg !1272

checkok348:                                       ; preds = %switch.case342
  %ptradd349 = getelementptr inbounds i8, ptr %187, i64 16, !dbg !1272
  %189 = load i32, ptr %ptradd349, align 8, !dbg !1274
  %190 = and i32 %189, -33, !dbg !1274
  %191 = or i32 %190, 32, !dbg !1274
  store i32 %191, ptr %ptradd349, align 8, !dbg !1274
  br label %switch.case350, !dbg !1275

switch.case350:                                   ; preds = %switch.entry324, %checkok348
  store i32 8, ptr %base, align 4, !dbg !1276
  br label %switch.exit978, !dbg !1276

switch.case351:                                   ; preds = %switch.entry324
  %192 = load ptr, ptr %self, align 8, !dbg !1278
  %checknull352 = icmp eq ptr %192, null, !dbg !1278
  %193 = call i1 @llvm.expect.i1(i1 %checknull352, i1 false), !dbg !1278
  br i1 %193, label %panic353, label %checkok357, !dbg !1278

checkok357:                                       ; preds = %switch.case351
  %ptradd358 = getelementptr inbounds i8, ptr %192, i64 16, !dbg !1278
  %194 = load i32, ptr %ptradd358, align 8, !dbg !1280
  %195 = and i32 %194, -33, !dbg !1280
  %196 = or i32 %195, 32, !dbg !1280
  store i32 %196, ptr %ptradd358, align 8, !dbg !1280
  br label %switch.case359, !dbg !1281

switch.case359:                                   ; preds = %switch.entry324, %checkok357
  store i32 2, ptr %base, align 4, !dbg !1282
  br label %switch.exit978, !dbg !1282

switch.case360:                                   ; preds = %switch.entry324
  %197 = load ptr, ptr %self, align 8, !dbg !1284
  %checknull361 = icmp eq ptr %197, null, !dbg !1284
  %198 = call i1 @llvm.expect.i1(i1 %checknull361, i1 false), !dbg !1284
  br i1 %198, label %panic362, label %checkok366, !dbg !1284

checkok366:                                       ; preds = %switch.case360
  %ptradd367 = getelementptr inbounds i8, ptr %197, i64 16, !dbg !1284
  %199 = load i32, ptr %ptradd367, align 8, !dbg !1286
  %200 = and i32 %199, -33, !dbg !1286
  %201 = or i32 %200, 32, !dbg !1286
  store i32 %201, ptr %ptradd367, align 8, !dbg !1286
  br label %switch.case368, !dbg !1287

switch.case368:                                   ; preds = %switch.entry324, %checkok366
  %202 = load i64, ptr %total_len, align 8, !dbg !1288
  %203 = load ptr, ptr %self, align 8
  store ptr %203, ptr %f370, align 8
  call void @llvm.dbg.declare(metadata ptr %len, metadata !1290, metadata !DIExpression()), !dbg !1292
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg373, ptr align 8 %current, i32 16, i1 false)
  %204 = call i64 @std.io.float_from_any(ptr %retparam372, ptr align 8 %indirectarg373), !dbg !1294
  %not_err374 = icmp eq i64 %204, 0, !dbg !1294
  %205 = call i1 @llvm.expect.i1(i1 %not_err374, i1 true), !dbg !1294
  br i1 %205, label %after_check376, label %assign_optional375, !dbg !1294

assign_optional375:                               ; preds = %switch.case368
  store i64 %204, ptr %len.f, align 8, !dbg !1294
  br label %after_assign381, !dbg !1294

after_check376:                                   ; preds = %switch.case368
  %206 = load ptr, ptr %self, align 8
  %207 = load double, ptr %retparam372, align 8
  %208 = call i64 @std.io.Formatter.atoa(ptr %retparam377, ptr %206, double %207), !dbg !1295
  %not_err378 = icmp eq i64 %208, 0, !dbg !1295
  %209 = call i1 @llvm.expect.i1(i1 %not_err378, i1 true), !dbg !1295
  br i1 %209, label %after_check380, label %assign_optional379, !dbg !1295

assign_optional379:                               ; preds = %after_check376
  store i64 %208, ptr %len.f, align 8, !dbg !1295
  br label %after_assign381, !dbg !1295

after_check380:                                   ; preds = %after_check376
  %210 = load i64, ptr %retparam377, align 8, !dbg !1295
  store i64 %210, ptr %len, align 8, !dbg !1295
  store i64 0, ptr %len.f, align 8, !dbg !1295
  br label %after_assign381, !dbg !1295

after_assign381:                                  ; preds = %after_check380, %assign_optional379, %assign_optional375
  call void @llvm.dbg.declare(metadata ptr %err, metadata !1296, metadata !DIExpression()), !dbg !1297
  br label %testblock382, !dbg !1297

testblock382:                                     ; preds = %after_assign381
  %optval383 = load i64, ptr %len.f, align 8, !dbg !1298
  %not_err384 = icmp eq i64 %optval383, 0, !dbg !1298
  %211 = call i1 @llvm.expect.i1(i1 %not_err384, i1 true), !dbg !1298
  br i1 %211, label %after_check386, label %assign_optional385, !dbg !1298

assign_optional385:                               ; preds = %testblock382
  store i64 %optval383, ptr %err, align 8, !dbg !1298
  br label %end_block387, !dbg !1298

after_check386:                                   ; preds = %testblock382
  store i64 0, ptr %err, align 8, !dbg !1298
  br label %end_block387, !dbg !1298

end_block387:                                     ; preds = %after_check386, %assign_optional385
  %212 = load i64, ptr %err, align 8, !dbg !1298
  %neq388 = icmp ne i64 %212, 0, !dbg !1298
  br i1 %neq388, label %if.then389, label %if.exit468, !dbg !1298

if.then389:                                       ; preds = %end_block387
  store i64 %212, ptr %switch390, align 8
  br label %switch.entry391

switch.entry391:                                  ; preds = %if.then389
  %213 = load i64, ptr %switch390, align 8
  %eq392 = icmp eq i64 ptrtoint (ptr @"std.io.PrintFault$BUFFER_EXCEEDED" to i64), %213, !dbg !1299
  br i1 %eq392, label %switch.case394, label %next_if, !dbg !1299

next_if:                                          ; preds = %switch.entry391
  %eq393 = icmp eq i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), %213, !dbg !1300
  br i1 %eq393, label %switch.case394, label %next_if426, !dbg !1300

switch.case394:                                   ; preds = %next_if, %switch.entry391
  %214 = load ptr, ptr %f370, align 8
  store ptr %214, ptr %self395, align 8
  %215 = load i64, ptr %err, align 8
  store i64 %215, ptr %f396, align 8
  %216 = load ptr, ptr %self395, align 8, !dbg !1301
  %checknull398 = icmp eq ptr %216, null, !dbg !1301
  %217 = call i1 @llvm.expect.i1(i1 %checknull398, i1 false), !dbg !1301
  br i1 %217, label %panic399, label %checkok403, !dbg !1301

checkok403:                                       ; preds = %switch.case394
  %ptradd404 = getelementptr inbounds i8, ptr %216, i64 16, !dbg !1301
  %ptradd405 = getelementptr inbounds i8, ptr %ptradd404, i64 24, !dbg !1301
  %218 = load i64, ptr %ptradd405, align 8, !dbg !1301
  %neq406 = icmp ne i64 %218, 0, !dbg !1301
  br i1 %neq406, label %if.then407, label %if.exit416, !dbg !1301

if.then407:                                       ; preds = %checkok403
  %219 = load ptr, ptr %self395, align 8, !dbg !1305
  %checknull408 = icmp eq ptr %219, null, !dbg !1305
  %220 = call i1 @llvm.expect.i1(i1 %checknull408, i1 false), !dbg !1305
  br i1 %220, label %panic409, label %checkok413, !dbg !1305

checkok413:                                       ; preds = %if.then407
  %ptradd414 = getelementptr inbounds i8, ptr %219, i64 16, !dbg !1305
  %ptradd415 = getelementptr inbounds i8, ptr %ptradd414, i64 24, !dbg !1305
  %221 = load i64, ptr %ptradd415, align 8, !dbg !1305
  store i64 %221, ptr %blockret397, align 8, !dbg !1305
  br label %expr_block.exit425, !dbg !1305

if.exit416:                                       ; preds = %checkok403
  %222 = load ptr, ptr %self395, align 8, !dbg !1306
  %checknull417 = icmp eq ptr %222, null, !dbg !1306
  %223 = call i1 @llvm.expect.i1(i1 %checknull417, i1 false), !dbg !1306
  br i1 %223, label %panic418, label %checkok422, !dbg !1306

checkok422:                                       ; preds = %if.exit416
  %ptradd423 = getelementptr inbounds i8, ptr %222, i64 16, !dbg !1306
  %ptradd424 = getelementptr inbounds i8, ptr %ptradd423, i64 24, !dbg !1306
  %224 = load i64, ptr %f396, align 8, !dbg !1307
  store i64 %224, ptr %ptradd424, align 8, !dbg !1307
  %225 = load i64, ptr %f396, align 8, !dbg !1308
  store i64 %225, ptr %blockret397, align 8, !dbg !1308
  br label %expr_block.exit425, !dbg !1308

expr_block.exit425:                               ; preds = %checkok422, %checkok413
  %226 = load i64, ptr %blockret397, align 8, !dbg !1308
  store i64 %226, ptr %error_var369, align 8, !dbg !1308
  br label %guard_block469, !dbg !1308

next_if426:                                       ; preds = %next_if
  br label %switch.default427, !dbg !1308

switch.default427:                                ; preds = %next_if426
  %227 = load ptr, ptr %f370, align 8
  store ptr %227, ptr %self428, align 8
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_ARGUMENT" to i64), ptr %f429, align 8
  %228 = load ptr, ptr %self428, align 8, !dbg !1309
  %checknull431 = icmp eq ptr %228, null, !dbg !1309
  %229 = call i1 @llvm.expect.i1(i1 %checknull431, i1 false), !dbg !1309
  br i1 %229, label %panic432, label %checkok436, !dbg !1309

checkok436:                                       ; preds = %switch.default427
  %ptradd437 = getelementptr inbounds i8, ptr %228, i64 16, !dbg !1309
  %ptradd438 = getelementptr inbounds i8, ptr %ptradd437, i64 24, !dbg !1309
  %230 = load i64, ptr %ptradd438, align 8, !dbg !1309
  %neq439 = icmp ne i64 %230, 0, !dbg !1309
  br i1 %neq439, label %if.then440, label %if.exit449, !dbg !1309

if.then440:                                       ; preds = %checkok436
  %231 = load ptr, ptr %self428, align 8, !dbg !1313
  %checknull441 = icmp eq ptr %231, null, !dbg !1313
  %232 = call i1 @llvm.expect.i1(i1 %checknull441, i1 false), !dbg !1313
  br i1 %232, label %panic442, label %checkok446, !dbg !1313

checkok446:                                       ; preds = %if.then440
  %ptradd447 = getelementptr inbounds i8, ptr %231, i64 16, !dbg !1313
  %ptradd448 = getelementptr inbounds i8, ptr %ptradd447, i64 24, !dbg !1313
  %233 = load i64, ptr %ptradd448, align 8, !dbg !1313
  store i64 %233, ptr %blockret430, align 8, !dbg !1313
  br label %expr_block.exit458, !dbg !1313

if.exit449:                                       ; preds = %checkok436
  %234 = load ptr, ptr %self428, align 8, !dbg !1314
  %checknull450 = icmp eq ptr %234, null, !dbg !1314
  %235 = call i1 @llvm.expect.i1(i1 %checknull450, i1 false), !dbg !1314
  br i1 %235, label %panic451, label %checkok455, !dbg !1314

checkok455:                                       ; preds = %if.exit449
  %ptradd456 = getelementptr inbounds i8, ptr %234, i64 16, !dbg !1314
  %ptradd457 = getelementptr inbounds i8, ptr %ptradd456, i64 24, !dbg !1314
  %236 = load i64, ptr %f429, align 8, !dbg !1315
  store i64 %236, ptr %ptradd457, align 8, !dbg !1315
  %237 = load i64, ptr %f429, align 8, !dbg !1316
  store i64 %237, ptr %blockret430, align 8, !dbg !1316
  br label %expr_block.exit458, !dbg !1316

expr_block.exit458:                               ; preds = %checkok455, %checkok446
  %238 = load i64, ptr %blockret430, align 8, !dbg !1316
  store i64 %238, ptr %err, align 8, !dbg !1316
  %239 = load ptr, ptr %f370, align 8
  store %"char[]" { ptr @.str.131, i64 9 }, ptr %indirectarg461, align 8
  %240 = call i64 @std.io.Formatter.out_substr(ptr %retparam460, ptr %239, ptr align 8 %indirectarg461), !dbg !1317
  %not_err462 = icmp eq i64 %240, 0, !dbg !1317
  %241 = call i1 @llvm.expect.i1(i1 %not_err462, i1 true), !dbg !1317
  br i1 %241, label %after_check464, label %assign_optional463, !dbg !1317

assign_optional463:                               ; preds = %expr_block.exit458
  store i64 %240, ptr %error_var459, align 8, !dbg !1317
  br label %guard_block465, !dbg !1317

after_check464:                                   ; preds = %expr_block.exit458
  br label %noerr_block466, !dbg !1317

guard_block465:                                   ; preds = %assign_optional463
  %242 = load i64, ptr %error_var459, align 8, !dbg !1317
  store i64 %242, ptr %error_var369, align 8, !dbg !1317
  br label %guard_block469, !dbg !1317

noerr_block466:                                   ; preds = %after_check464
  %243 = load i64, ptr %err, align 8, !dbg !1318
  store i64 %243, ptr %error_var369, align 8, !dbg !1318
  br label %guard_block469, !dbg !1318

if.exit468:                                       ; preds = %end_block387
  br label %noerr_block470, !dbg !1319

guard_block469:                                   ; preds = %noerr_block466, %guard_block465, %expr_block.exit425
  %244 = load i64, ptr %error_var369, align 8, !dbg !1319
  ret i64 %244, !dbg !1319

noerr_block470:                                   ; preds = %if.exit468
  %245 = load i64, ptr %len, align 8, !dbg !1319
  %add471 = add i64 %202, %245, !dbg !1288
  store i64 %add471, ptr %total_len, align 8, !dbg !1288
  br label %loop.inc, !dbg !1320

switch.case472:                                   ; preds = %switch.entry324
  %246 = load ptr, ptr %self, align 8, !dbg !1321
  %checknull473 = icmp eq ptr %246, null, !dbg !1321
  %247 = call i1 @llvm.expect.i1(i1 %checknull473, i1 false), !dbg !1321
  br i1 %247, label %panic474, label %checkok478, !dbg !1321

checkok478:                                       ; preds = %switch.case472
  %ptradd479 = getelementptr inbounds i8, ptr %246, i64 16, !dbg !1321
  %248 = load i32, ptr %ptradd479, align 8, !dbg !1323
  %249 = and i32 %248, -33, !dbg !1323
  %250 = or i32 %249, 32, !dbg !1323
  store i32 %250, ptr %ptradd479, align 8, !dbg !1323
  br label %switch.case480, !dbg !1324

switch.case480:                                   ; preds = %switch.entry324, %checkok478
  %251 = load i64, ptr %total_len, align 8, !dbg !1325
  %252 = load ptr, ptr %self, align 8
  store ptr %252, ptr %f482, align 8
  call void @llvm.dbg.declare(metadata ptr %len484, metadata !1327, metadata !DIExpression()), !dbg !1329
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg487, ptr align 8 %current, i32 16, i1 false)
  %253 = call i64 @std.io.float_from_any(ptr %retparam486, ptr align 8 %indirectarg487), !dbg !1331
  %not_err488 = icmp eq i64 %253, 0, !dbg !1331
  %254 = call i1 @llvm.expect.i1(i1 %not_err488, i1 true), !dbg !1331
  br i1 %254, label %after_check490, label %assign_optional489, !dbg !1331

assign_optional489:                               ; preds = %switch.case480
  store i64 %253, ptr %len.f485, align 8, !dbg !1331
  br label %after_assign495, !dbg !1331

after_check490:                                   ; preds = %switch.case480
  %255 = load ptr, ptr %self, align 8
  %256 = load double, ptr %retparam486, align 8
  %257 = call i64 @std.io.Formatter.ftoa(ptr %retparam491, ptr %255, double %256), !dbg !1332
  %not_err492 = icmp eq i64 %257, 0, !dbg !1332
  %258 = call i1 @llvm.expect.i1(i1 %not_err492, i1 true), !dbg !1332
  br i1 %258, label %after_check494, label %assign_optional493, !dbg !1332

assign_optional493:                               ; preds = %after_check490
  store i64 %257, ptr %len.f485, align 8, !dbg !1332
  br label %after_assign495, !dbg !1332

after_check494:                                   ; preds = %after_check490
  %259 = load i64, ptr %retparam491, align 8, !dbg !1332
  store i64 %259, ptr %len484, align 8, !dbg !1332
  store i64 0, ptr %len.f485, align 8, !dbg !1332
  br label %after_assign495, !dbg !1332

after_assign495:                                  ; preds = %after_check494, %assign_optional493, %assign_optional489
  call void @llvm.dbg.declare(metadata ptr %err496, metadata !1333, metadata !DIExpression()), !dbg !1334
  br label %testblock497, !dbg !1334

testblock497:                                     ; preds = %after_assign495
  %optval498 = load i64, ptr %len.f485, align 8, !dbg !1335
  %not_err499 = icmp eq i64 %optval498, 0, !dbg !1335
  %260 = call i1 @llvm.expect.i1(i1 %not_err499, i1 true), !dbg !1335
  br i1 %260, label %after_check501, label %assign_optional500, !dbg !1335

assign_optional500:                               ; preds = %testblock497
  store i64 %optval498, ptr %err496, align 8, !dbg !1335
  br label %end_block502, !dbg !1335

after_check501:                                   ; preds = %testblock497
  store i64 0, ptr %err496, align 8, !dbg !1335
  br label %end_block502, !dbg !1335

end_block502:                                     ; preds = %after_check501, %assign_optional500
  %261 = load i64, ptr %err496, align 8, !dbg !1335
  %neq503 = icmp ne i64 %261, 0, !dbg !1335
  br i1 %neq503, label %if.then504, label %if.exit584, !dbg !1335

if.then504:                                       ; preds = %end_block502
  store i64 %261, ptr %switch505, align 8
  br label %switch.entry506

switch.entry506:                                  ; preds = %if.then504
  %262 = load i64, ptr %switch505, align 8
  %eq507 = icmp eq i64 ptrtoint (ptr @"std.io.PrintFault$BUFFER_EXCEEDED" to i64), %262, !dbg !1336
  br i1 %eq507, label %switch.case510, label %next_if508, !dbg !1336

next_if508:                                       ; preds = %switch.entry506
  %eq509 = icmp eq i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), %262, !dbg !1337
  br i1 %eq509, label %switch.case510, label %next_if542, !dbg !1337

switch.case510:                                   ; preds = %next_if508, %switch.entry506
  %263 = load ptr, ptr %f482, align 8
  store ptr %263, ptr %self511, align 8
  %264 = load i64, ptr %err496, align 8
  store i64 %264, ptr %f512, align 8
  %265 = load ptr, ptr %self511, align 8, !dbg !1338
  %checknull514 = icmp eq ptr %265, null, !dbg !1338
  %266 = call i1 @llvm.expect.i1(i1 %checknull514, i1 false), !dbg !1338
  br i1 %266, label %panic515, label %checkok519, !dbg !1338

checkok519:                                       ; preds = %switch.case510
  %ptradd520 = getelementptr inbounds i8, ptr %265, i64 16, !dbg !1338
  %ptradd521 = getelementptr inbounds i8, ptr %ptradd520, i64 24, !dbg !1338
  %267 = load i64, ptr %ptradd521, align 8, !dbg !1338
  %neq522 = icmp ne i64 %267, 0, !dbg !1338
  br i1 %neq522, label %if.then523, label %if.exit532, !dbg !1338

if.then523:                                       ; preds = %checkok519
  %268 = load ptr, ptr %self511, align 8, !dbg !1342
  %checknull524 = icmp eq ptr %268, null, !dbg !1342
  %269 = call i1 @llvm.expect.i1(i1 %checknull524, i1 false), !dbg !1342
  br i1 %269, label %panic525, label %checkok529, !dbg !1342

checkok529:                                       ; preds = %if.then523
  %ptradd530 = getelementptr inbounds i8, ptr %268, i64 16, !dbg !1342
  %ptradd531 = getelementptr inbounds i8, ptr %ptradd530, i64 24, !dbg !1342
  %270 = load i64, ptr %ptradd531, align 8, !dbg !1342
  store i64 %270, ptr %blockret513, align 8, !dbg !1342
  br label %expr_block.exit541, !dbg !1342

if.exit532:                                       ; preds = %checkok519
  %271 = load ptr, ptr %self511, align 8, !dbg !1343
  %checknull533 = icmp eq ptr %271, null, !dbg !1343
  %272 = call i1 @llvm.expect.i1(i1 %checknull533, i1 false), !dbg !1343
  br i1 %272, label %panic534, label %checkok538, !dbg !1343

checkok538:                                       ; preds = %if.exit532
  %ptradd539 = getelementptr inbounds i8, ptr %271, i64 16, !dbg !1343
  %ptradd540 = getelementptr inbounds i8, ptr %ptradd539, i64 24, !dbg !1343
  %273 = load i64, ptr %f512, align 8, !dbg !1344
  store i64 %273, ptr %ptradd540, align 8, !dbg !1344
  %274 = load i64, ptr %f512, align 8, !dbg !1345
  store i64 %274, ptr %blockret513, align 8, !dbg !1345
  br label %expr_block.exit541, !dbg !1345

expr_block.exit541:                               ; preds = %checkok538, %checkok529
  %275 = load i64, ptr %blockret513, align 8, !dbg !1345
  store i64 %275, ptr %error_var481, align 8, !dbg !1345
  br label %guard_block585, !dbg !1345

next_if542:                                       ; preds = %next_if508
  br label %switch.default543, !dbg !1345

switch.default543:                                ; preds = %next_if542
  %276 = load ptr, ptr %f482, align 8
  store ptr %276, ptr %self544, align 8
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_ARGUMENT" to i64), ptr %f545, align 8
  %277 = load ptr, ptr %self544, align 8, !dbg !1346
  %checknull547 = icmp eq ptr %277, null, !dbg !1346
  %278 = call i1 @llvm.expect.i1(i1 %checknull547, i1 false), !dbg !1346
  br i1 %278, label %panic548, label %checkok552, !dbg !1346

checkok552:                                       ; preds = %switch.default543
  %ptradd553 = getelementptr inbounds i8, ptr %277, i64 16, !dbg !1346
  %ptradd554 = getelementptr inbounds i8, ptr %ptradd553, i64 24, !dbg !1346
  %279 = load i64, ptr %ptradd554, align 8, !dbg !1346
  %neq555 = icmp ne i64 %279, 0, !dbg !1346
  br i1 %neq555, label %if.then556, label %if.exit565, !dbg !1346

if.then556:                                       ; preds = %checkok552
  %280 = load ptr, ptr %self544, align 8, !dbg !1350
  %checknull557 = icmp eq ptr %280, null, !dbg !1350
  %281 = call i1 @llvm.expect.i1(i1 %checknull557, i1 false), !dbg !1350
  br i1 %281, label %panic558, label %checkok562, !dbg !1350

checkok562:                                       ; preds = %if.then556
  %ptradd563 = getelementptr inbounds i8, ptr %280, i64 16, !dbg !1350
  %ptradd564 = getelementptr inbounds i8, ptr %ptradd563, i64 24, !dbg !1350
  %282 = load i64, ptr %ptradd564, align 8, !dbg !1350
  store i64 %282, ptr %blockret546, align 8, !dbg !1350
  br label %expr_block.exit574, !dbg !1350

if.exit565:                                       ; preds = %checkok552
  %283 = load ptr, ptr %self544, align 8, !dbg !1351
  %checknull566 = icmp eq ptr %283, null, !dbg !1351
  %284 = call i1 @llvm.expect.i1(i1 %checknull566, i1 false), !dbg !1351
  br i1 %284, label %panic567, label %checkok571, !dbg !1351

checkok571:                                       ; preds = %if.exit565
  %ptradd572 = getelementptr inbounds i8, ptr %283, i64 16, !dbg !1351
  %ptradd573 = getelementptr inbounds i8, ptr %ptradd572, i64 24, !dbg !1351
  %285 = load i64, ptr %f545, align 8, !dbg !1352
  store i64 %285, ptr %ptradd573, align 8, !dbg !1352
  %286 = load i64, ptr %f545, align 8, !dbg !1353
  store i64 %286, ptr %blockret546, align 8, !dbg !1353
  br label %expr_block.exit574, !dbg !1353

expr_block.exit574:                               ; preds = %checkok571, %checkok562
  %287 = load i64, ptr %blockret546, align 8, !dbg !1353
  store i64 %287, ptr %err496, align 8, !dbg !1353
  %288 = load ptr, ptr %f482, align 8
  store %"char[]" { ptr @.str.132, i64 9 }, ptr %indirectarg577, align 8
  %289 = call i64 @std.io.Formatter.out_substr(ptr %retparam576, ptr %288, ptr align 8 %indirectarg577), !dbg !1354
  %not_err578 = icmp eq i64 %289, 0, !dbg !1354
  %290 = call i1 @llvm.expect.i1(i1 %not_err578, i1 true), !dbg !1354
  br i1 %290, label %after_check580, label %assign_optional579, !dbg !1354

assign_optional579:                               ; preds = %expr_block.exit574
  store i64 %289, ptr %error_var575, align 8, !dbg !1354
  br label %guard_block581, !dbg !1354

after_check580:                                   ; preds = %expr_block.exit574
  br label %noerr_block582, !dbg !1354

guard_block581:                                   ; preds = %assign_optional579
  %291 = load i64, ptr %error_var575, align 8, !dbg !1354
  store i64 %291, ptr %error_var481, align 8, !dbg !1354
  br label %guard_block585, !dbg !1354

noerr_block582:                                   ; preds = %after_check580
  %292 = load i64, ptr %err496, align 8, !dbg !1355
  store i64 %292, ptr %error_var481, align 8, !dbg !1355
  br label %guard_block585, !dbg !1355

if.exit584:                                       ; preds = %end_block502
  br label %noerr_block586, !dbg !1356

guard_block585:                                   ; preds = %noerr_block582, %guard_block581, %expr_block.exit541
  %293 = load i64, ptr %error_var481, align 8, !dbg !1356
  ret i64 %293, !dbg !1356

noerr_block586:                                   ; preds = %if.exit584
  %294 = load i64, ptr %len484, align 8, !dbg !1356
  %add587 = add i64 %251, %294, !dbg !1325
  store i64 %add587, ptr %total_len, align 8, !dbg !1325
  br label %loop.inc, !dbg !1357

switch.case588:                                   ; preds = %switch.entry324
  %295 = load ptr, ptr %self, align 8, !dbg !1358
  %checknull589 = icmp eq ptr %295, null, !dbg !1358
  %296 = call i1 @llvm.expect.i1(i1 %checknull589, i1 false), !dbg !1358
  br i1 %296, label %panic590, label %checkok594, !dbg !1358

checkok594:                                       ; preds = %switch.case588
  %ptradd595 = getelementptr inbounds i8, ptr %295, i64 16, !dbg !1358
  %297 = load i32, ptr %ptradd595, align 8, !dbg !1360
  %298 = and i32 %297, -33, !dbg !1360
  %299 = or i32 %298, 32, !dbg !1360
  store i32 %299, ptr %ptradd595, align 8, !dbg !1360
  br label %switch.case596, !dbg !1361

switch.case596:                                   ; preds = %switch.entry324, %checkok594
  %300 = load i64, ptr %total_len, align 8, !dbg !1362
  %301 = load ptr, ptr %self, align 8
  store ptr %301, ptr %f598, align 8
  call void @llvm.dbg.declare(metadata ptr %len600, metadata !1364, metadata !DIExpression()), !dbg !1366
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg603, ptr align 8 %current, i32 16, i1 false)
  %302 = call i64 @std.io.float_from_any(ptr %retparam602, ptr align 8 %indirectarg603), !dbg !1368
  %not_err604 = icmp eq i64 %302, 0, !dbg !1368
  %303 = call i1 @llvm.expect.i1(i1 %not_err604, i1 true), !dbg !1368
  br i1 %303, label %after_check606, label %assign_optional605, !dbg !1368

assign_optional605:                               ; preds = %switch.case596
  store i64 %302, ptr %len.f601, align 8, !dbg !1368
  br label %after_assign611, !dbg !1368

after_check606:                                   ; preds = %switch.case596
  %304 = load ptr, ptr %self, align 8
  %305 = load double, ptr %retparam602, align 8
  %306 = call i64 @std.io.Formatter.etoa(ptr %retparam607, ptr %304, double %305), !dbg !1369
  %not_err608 = icmp eq i64 %306, 0, !dbg !1369
  %307 = call i1 @llvm.expect.i1(i1 %not_err608, i1 true), !dbg !1369
  br i1 %307, label %after_check610, label %assign_optional609, !dbg !1369

assign_optional609:                               ; preds = %after_check606
  store i64 %306, ptr %len.f601, align 8, !dbg !1369
  br label %after_assign611, !dbg !1369

after_check610:                                   ; preds = %after_check606
  %308 = load i64, ptr %retparam607, align 8, !dbg !1369
  store i64 %308, ptr %len600, align 8, !dbg !1369
  store i64 0, ptr %len.f601, align 8, !dbg !1369
  br label %after_assign611, !dbg !1369

after_assign611:                                  ; preds = %after_check610, %assign_optional609, %assign_optional605
  call void @llvm.dbg.declare(metadata ptr %err612, metadata !1370, metadata !DIExpression()), !dbg !1371
  br label %testblock613, !dbg !1371

testblock613:                                     ; preds = %after_assign611
  %optval614 = load i64, ptr %len.f601, align 8, !dbg !1372
  %not_err615 = icmp eq i64 %optval614, 0, !dbg !1372
  %309 = call i1 @llvm.expect.i1(i1 %not_err615, i1 true), !dbg !1372
  br i1 %309, label %after_check617, label %assign_optional616, !dbg !1372

assign_optional616:                               ; preds = %testblock613
  store i64 %optval614, ptr %err612, align 8, !dbg !1372
  br label %end_block618, !dbg !1372

after_check617:                                   ; preds = %testblock613
  store i64 0, ptr %err612, align 8, !dbg !1372
  br label %end_block618, !dbg !1372

end_block618:                                     ; preds = %after_check617, %assign_optional616
  %310 = load i64, ptr %err612, align 8, !dbg !1372
  %neq619 = icmp ne i64 %310, 0, !dbg !1372
  br i1 %neq619, label %if.then620, label %if.exit700, !dbg !1372

if.then620:                                       ; preds = %end_block618
  store i64 %310, ptr %switch621, align 8
  br label %switch.entry622

switch.entry622:                                  ; preds = %if.then620
  %311 = load i64, ptr %switch621, align 8
  %eq623 = icmp eq i64 ptrtoint (ptr @"std.io.PrintFault$BUFFER_EXCEEDED" to i64), %311, !dbg !1373
  br i1 %eq623, label %switch.case626, label %next_if624, !dbg !1373

next_if624:                                       ; preds = %switch.entry622
  %eq625 = icmp eq i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), %311, !dbg !1374
  br i1 %eq625, label %switch.case626, label %next_if658, !dbg !1374

switch.case626:                                   ; preds = %next_if624, %switch.entry622
  %312 = load ptr, ptr %f598, align 8
  store ptr %312, ptr %self627, align 8
  %313 = load i64, ptr %err612, align 8
  store i64 %313, ptr %f628, align 8
  %314 = load ptr, ptr %self627, align 8, !dbg !1375
  %checknull630 = icmp eq ptr %314, null, !dbg !1375
  %315 = call i1 @llvm.expect.i1(i1 %checknull630, i1 false), !dbg !1375
  br i1 %315, label %panic631, label %checkok635, !dbg !1375

checkok635:                                       ; preds = %switch.case626
  %ptradd636 = getelementptr inbounds i8, ptr %314, i64 16, !dbg !1375
  %ptradd637 = getelementptr inbounds i8, ptr %ptradd636, i64 24, !dbg !1375
  %316 = load i64, ptr %ptradd637, align 8, !dbg !1375
  %neq638 = icmp ne i64 %316, 0, !dbg !1375
  br i1 %neq638, label %if.then639, label %if.exit648, !dbg !1375

if.then639:                                       ; preds = %checkok635
  %317 = load ptr, ptr %self627, align 8, !dbg !1379
  %checknull640 = icmp eq ptr %317, null, !dbg !1379
  %318 = call i1 @llvm.expect.i1(i1 %checknull640, i1 false), !dbg !1379
  br i1 %318, label %panic641, label %checkok645, !dbg !1379

checkok645:                                       ; preds = %if.then639
  %ptradd646 = getelementptr inbounds i8, ptr %317, i64 16, !dbg !1379
  %ptradd647 = getelementptr inbounds i8, ptr %ptradd646, i64 24, !dbg !1379
  %319 = load i64, ptr %ptradd647, align 8, !dbg !1379
  store i64 %319, ptr %blockret629, align 8, !dbg !1379
  br label %expr_block.exit657, !dbg !1379

if.exit648:                                       ; preds = %checkok635
  %320 = load ptr, ptr %self627, align 8, !dbg !1380
  %checknull649 = icmp eq ptr %320, null, !dbg !1380
  %321 = call i1 @llvm.expect.i1(i1 %checknull649, i1 false), !dbg !1380
  br i1 %321, label %panic650, label %checkok654, !dbg !1380

checkok654:                                       ; preds = %if.exit648
  %ptradd655 = getelementptr inbounds i8, ptr %320, i64 16, !dbg !1380
  %ptradd656 = getelementptr inbounds i8, ptr %ptradd655, i64 24, !dbg !1380
  %322 = load i64, ptr %f628, align 8, !dbg !1381
  store i64 %322, ptr %ptradd656, align 8, !dbg !1381
  %323 = load i64, ptr %f628, align 8, !dbg !1382
  store i64 %323, ptr %blockret629, align 8, !dbg !1382
  br label %expr_block.exit657, !dbg !1382

expr_block.exit657:                               ; preds = %checkok654, %checkok645
  %324 = load i64, ptr %blockret629, align 8, !dbg !1382
  store i64 %324, ptr %error_var597, align 8, !dbg !1382
  br label %guard_block701, !dbg !1382

next_if658:                                       ; preds = %next_if624
  br label %switch.default659, !dbg !1382

switch.default659:                                ; preds = %next_if658
  %325 = load ptr, ptr %f598, align 8
  store ptr %325, ptr %self660, align 8
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_ARGUMENT" to i64), ptr %f661, align 8
  %326 = load ptr, ptr %self660, align 8, !dbg !1383
  %checknull663 = icmp eq ptr %326, null, !dbg !1383
  %327 = call i1 @llvm.expect.i1(i1 %checknull663, i1 false), !dbg !1383
  br i1 %327, label %panic664, label %checkok668, !dbg !1383

checkok668:                                       ; preds = %switch.default659
  %ptradd669 = getelementptr inbounds i8, ptr %326, i64 16, !dbg !1383
  %ptradd670 = getelementptr inbounds i8, ptr %ptradd669, i64 24, !dbg !1383
  %328 = load i64, ptr %ptradd670, align 8, !dbg !1383
  %neq671 = icmp ne i64 %328, 0, !dbg !1383
  br i1 %neq671, label %if.then672, label %if.exit681, !dbg !1383

if.then672:                                       ; preds = %checkok668
  %329 = load ptr, ptr %self660, align 8, !dbg !1387
  %checknull673 = icmp eq ptr %329, null, !dbg !1387
  %330 = call i1 @llvm.expect.i1(i1 %checknull673, i1 false), !dbg !1387
  br i1 %330, label %panic674, label %checkok678, !dbg !1387

checkok678:                                       ; preds = %if.then672
  %ptradd679 = getelementptr inbounds i8, ptr %329, i64 16, !dbg !1387
  %ptradd680 = getelementptr inbounds i8, ptr %ptradd679, i64 24, !dbg !1387
  %331 = load i64, ptr %ptradd680, align 8, !dbg !1387
  store i64 %331, ptr %blockret662, align 8, !dbg !1387
  br label %expr_block.exit690, !dbg !1387

if.exit681:                                       ; preds = %checkok668
  %332 = load ptr, ptr %self660, align 8, !dbg !1388
  %checknull682 = icmp eq ptr %332, null, !dbg !1388
  %333 = call i1 @llvm.expect.i1(i1 %checknull682, i1 false), !dbg !1388
  br i1 %333, label %panic683, label %checkok687, !dbg !1388

checkok687:                                       ; preds = %if.exit681
  %ptradd688 = getelementptr inbounds i8, ptr %332, i64 16, !dbg !1388
  %ptradd689 = getelementptr inbounds i8, ptr %ptradd688, i64 24, !dbg !1388
  %334 = load i64, ptr %f661, align 8, !dbg !1389
  store i64 %334, ptr %ptradd689, align 8, !dbg !1389
  %335 = load i64, ptr %f661, align 8, !dbg !1390
  store i64 %335, ptr %blockret662, align 8, !dbg !1390
  br label %expr_block.exit690, !dbg !1390

expr_block.exit690:                               ; preds = %checkok687, %checkok678
  %336 = load i64, ptr %blockret662, align 8, !dbg !1390
  store i64 %336, ptr %err612, align 8, !dbg !1390
  %337 = load ptr, ptr %f598, align 8
  store %"char[]" { ptr @.str.133, i64 9 }, ptr %indirectarg693, align 8
  %338 = call i64 @std.io.Formatter.out_substr(ptr %retparam692, ptr %337, ptr align 8 %indirectarg693), !dbg !1391
  %not_err694 = icmp eq i64 %338, 0, !dbg !1391
  %339 = call i1 @llvm.expect.i1(i1 %not_err694, i1 true), !dbg !1391
  br i1 %339, label %after_check696, label %assign_optional695, !dbg !1391

assign_optional695:                               ; preds = %expr_block.exit690
  store i64 %338, ptr %error_var691, align 8, !dbg !1391
  br label %guard_block697, !dbg !1391

after_check696:                                   ; preds = %expr_block.exit690
  br label %noerr_block698, !dbg !1391

guard_block697:                                   ; preds = %assign_optional695
  %340 = load i64, ptr %error_var691, align 8, !dbg !1391
  store i64 %340, ptr %error_var597, align 8, !dbg !1391
  br label %guard_block701, !dbg !1391

noerr_block698:                                   ; preds = %after_check696
  %341 = load i64, ptr %err612, align 8, !dbg !1392
  store i64 %341, ptr %error_var597, align 8, !dbg !1392
  br label %guard_block701, !dbg !1392

if.exit700:                                       ; preds = %end_block618
  br label %noerr_block702, !dbg !1393

guard_block701:                                   ; preds = %noerr_block698, %guard_block697, %expr_block.exit657
  %342 = load i64, ptr %error_var597, align 8, !dbg !1393
  ret i64 %342, !dbg !1393

noerr_block702:                                   ; preds = %if.exit700
  %343 = load i64, ptr %len600, align 8, !dbg !1393
  %add703 = add i64 %300, %343, !dbg !1362
  store i64 %add703, ptr %total_len, align 8, !dbg !1362
  br label %loop.inc, !dbg !1394

switch.case704:                                   ; preds = %switch.entry324
  %344 = load ptr, ptr %self, align 8, !dbg !1395
  %checknull705 = icmp eq ptr %344, null, !dbg !1395
  %345 = call i1 @llvm.expect.i1(i1 %checknull705, i1 false), !dbg !1395
  br i1 %345, label %panic706, label %checkok710, !dbg !1395

checkok710:                                       ; preds = %switch.case704
  %ptradd711 = getelementptr inbounds i8, ptr %344, i64 16, !dbg !1395
  %346 = load i32, ptr %ptradd711, align 8, !dbg !1397
  %347 = and i32 %346, -33, !dbg !1397
  %348 = or i32 %347, 32, !dbg !1397
  store i32 %348, ptr %ptradd711, align 8, !dbg !1397
  br label %switch.case712, !dbg !1398

switch.case712:                                   ; preds = %switch.entry324, %checkok710
  %349 = load i64, ptr %total_len, align 8, !dbg !1399
  %350 = load ptr, ptr %self, align 8
  store ptr %350, ptr %f714, align 8
  call void @llvm.dbg.declare(metadata ptr %len716, metadata !1401, metadata !DIExpression()), !dbg !1403
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg719, ptr align 8 %current, i32 16, i1 false)
  %351 = call i64 @std.io.float_from_any(ptr %retparam718, ptr align 8 %indirectarg719), !dbg !1405
  %not_err720 = icmp eq i64 %351, 0, !dbg !1405
  %352 = call i1 @llvm.expect.i1(i1 %not_err720, i1 true), !dbg !1405
  br i1 %352, label %after_check722, label %assign_optional721, !dbg !1405

assign_optional721:                               ; preds = %switch.case712
  store i64 %351, ptr %len.f717, align 8, !dbg !1405
  br label %after_assign727, !dbg !1405

after_check722:                                   ; preds = %switch.case712
  %353 = load ptr, ptr %self, align 8
  %354 = load double, ptr %retparam718, align 8
  %355 = call i64 @std.io.Formatter.gtoa(ptr %retparam723, ptr %353, double %354), !dbg !1406
  %not_err724 = icmp eq i64 %355, 0, !dbg !1406
  %356 = call i1 @llvm.expect.i1(i1 %not_err724, i1 true), !dbg !1406
  br i1 %356, label %after_check726, label %assign_optional725, !dbg !1406

assign_optional725:                               ; preds = %after_check722
  store i64 %355, ptr %len.f717, align 8, !dbg !1406
  br label %after_assign727, !dbg !1406

after_check726:                                   ; preds = %after_check722
  %357 = load i64, ptr %retparam723, align 8, !dbg !1406
  store i64 %357, ptr %len716, align 8, !dbg !1406
  store i64 0, ptr %len.f717, align 8, !dbg !1406
  br label %after_assign727, !dbg !1406

after_assign727:                                  ; preds = %after_check726, %assign_optional725, %assign_optional721
  call void @llvm.dbg.declare(metadata ptr %err728, metadata !1407, metadata !DIExpression()), !dbg !1408
  br label %testblock729, !dbg !1408

testblock729:                                     ; preds = %after_assign727
  %optval730 = load i64, ptr %len.f717, align 8, !dbg !1409
  %not_err731 = icmp eq i64 %optval730, 0, !dbg !1409
  %358 = call i1 @llvm.expect.i1(i1 %not_err731, i1 true), !dbg !1409
  br i1 %358, label %after_check733, label %assign_optional732, !dbg !1409

assign_optional732:                               ; preds = %testblock729
  store i64 %optval730, ptr %err728, align 8, !dbg !1409
  br label %end_block734, !dbg !1409

after_check733:                                   ; preds = %testblock729
  store i64 0, ptr %err728, align 8, !dbg !1409
  br label %end_block734, !dbg !1409

end_block734:                                     ; preds = %after_check733, %assign_optional732
  %359 = load i64, ptr %err728, align 8, !dbg !1409
  %neq735 = icmp ne i64 %359, 0, !dbg !1409
  br i1 %neq735, label %if.then736, label %if.exit816, !dbg !1409

if.then736:                                       ; preds = %end_block734
  store i64 %359, ptr %switch737, align 8
  br label %switch.entry738

switch.entry738:                                  ; preds = %if.then736
  %360 = load i64, ptr %switch737, align 8
  %eq739 = icmp eq i64 ptrtoint (ptr @"std.io.PrintFault$BUFFER_EXCEEDED" to i64), %360, !dbg !1410
  br i1 %eq739, label %switch.case742, label %next_if740, !dbg !1410

next_if740:                                       ; preds = %switch.entry738
  %eq741 = icmp eq i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), %360, !dbg !1411
  br i1 %eq741, label %switch.case742, label %next_if774, !dbg !1411

switch.case742:                                   ; preds = %next_if740, %switch.entry738
  %361 = load ptr, ptr %f714, align 8
  store ptr %361, ptr %self743, align 8
  %362 = load i64, ptr %err728, align 8
  store i64 %362, ptr %f744, align 8
  %363 = load ptr, ptr %self743, align 8, !dbg !1412
  %checknull746 = icmp eq ptr %363, null, !dbg !1412
  %364 = call i1 @llvm.expect.i1(i1 %checknull746, i1 false), !dbg !1412
  br i1 %364, label %panic747, label %checkok751, !dbg !1412

checkok751:                                       ; preds = %switch.case742
  %ptradd752 = getelementptr inbounds i8, ptr %363, i64 16, !dbg !1412
  %ptradd753 = getelementptr inbounds i8, ptr %ptradd752, i64 24, !dbg !1412
  %365 = load i64, ptr %ptradd753, align 8, !dbg !1412
  %neq754 = icmp ne i64 %365, 0, !dbg !1412
  br i1 %neq754, label %if.then755, label %if.exit764, !dbg !1412

if.then755:                                       ; preds = %checkok751
  %366 = load ptr, ptr %self743, align 8, !dbg !1416
  %checknull756 = icmp eq ptr %366, null, !dbg !1416
  %367 = call i1 @llvm.expect.i1(i1 %checknull756, i1 false), !dbg !1416
  br i1 %367, label %panic757, label %checkok761, !dbg !1416

checkok761:                                       ; preds = %if.then755
  %ptradd762 = getelementptr inbounds i8, ptr %366, i64 16, !dbg !1416
  %ptradd763 = getelementptr inbounds i8, ptr %ptradd762, i64 24, !dbg !1416
  %368 = load i64, ptr %ptradd763, align 8, !dbg !1416
  store i64 %368, ptr %blockret745, align 8, !dbg !1416
  br label %expr_block.exit773, !dbg !1416

if.exit764:                                       ; preds = %checkok751
  %369 = load ptr, ptr %self743, align 8, !dbg !1417
  %checknull765 = icmp eq ptr %369, null, !dbg !1417
  %370 = call i1 @llvm.expect.i1(i1 %checknull765, i1 false), !dbg !1417
  br i1 %370, label %panic766, label %checkok770, !dbg !1417

checkok770:                                       ; preds = %if.exit764
  %ptradd771 = getelementptr inbounds i8, ptr %369, i64 16, !dbg !1417
  %ptradd772 = getelementptr inbounds i8, ptr %ptradd771, i64 24, !dbg !1417
  %371 = load i64, ptr %f744, align 8, !dbg !1418
  store i64 %371, ptr %ptradd772, align 8, !dbg !1418
  %372 = load i64, ptr %f744, align 8, !dbg !1419
  store i64 %372, ptr %blockret745, align 8, !dbg !1419
  br label %expr_block.exit773, !dbg !1419

expr_block.exit773:                               ; preds = %checkok770, %checkok761
  %373 = load i64, ptr %blockret745, align 8, !dbg !1419
  store i64 %373, ptr %error_var713, align 8, !dbg !1419
  br label %guard_block817, !dbg !1419

next_if774:                                       ; preds = %next_if740
  br label %switch.default775, !dbg !1419

switch.default775:                                ; preds = %next_if774
  %374 = load ptr, ptr %f714, align 8
  store ptr %374, ptr %self776, align 8
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_ARGUMENT" to i64), ptr %f777, align 8
  %375 = load ptr, ptr %self776, align 8, !dbg !1420
  %checknull779 = icmp eq ptr %375, null, !dbg !1420
  %376 = call i1 @llvm.expect.i1(i1 %checknull779, i1 false), !dbg !1420
  br i1 %376, label %panic780, label %checkok784, !dbg !1420

checkok784:                                       ; preds = %switch.default775
  %ptradd785 = getelementptr inbounds i8, ptr %375, i64 16, !dbg !1420
  %ptradd786 = getelementptr inbounds i8, ptr %ptradd785, i64 24, !dbg !1420
  %377 = load i64, ptr %ptradd786, align 8, !dbg !1420
  %neq787 = icmp ne i64 %377, 0, !dbg !1420
  br i1 %neq787, label %if.then788, label %if.exit797, !dbg !1420

if.then788:                                       ; preds = %checkok784
  %378 = load ptr, ptr %self776, align 8, !dbg !1424
  %checknull789 = icmp eq ptr %378, null, !dbg !1424
  %379 = call i1 @llvm.expect.i1(i1 %checknull789, i1 false), !dbg !1424
  br i1 %379, label %panic790, label %checkok794, !dbg !1424

checkok794:                                       ; preds = %if.then788
  %ptradd795 = getelementptr inbounds i8, ptr %378, i64 16, !dbg !1424
  %ptradd796 = getelementptr inbounds i8, ptr %ptradd795, i64 24, !dbg !1424
  %380 = load i64, ptr %ptradd796, align 8, !dbg !1424
  store i64 %380, ptr %blockret778, align 8, !dbg !1424
  br label %expr_block.exit806, !dbg !1424

if.exit797:                                       ; preds = %checkok784
  %381 = load ptr, ptr %self776, align 8, !dbg !1425
  %checknull798 = icmp eq ptr %381, null, !dbg !1425
  %382 = call i1 @llvm.expect.i1(i1 %checknull798, i1 false), !dbg !1425
  br i1 %382, label %panic799, label %checkok803, !dbg !1425

checkok803:                                       ; preds = %if.exit797
  %ptradd804 = getelementptr inbounds i8, ptr %381, i64 16, !dbg !1425
  %ptradd805 = getelementptr inbounds i8, ptr %ptradd804, i64 24, !dbg !1425
  %383 = load i64, ptr %f777, align 8, !dbg !1426
  store i64 %383, ptr %ptradd805, align 8, !dbg !1426
  %384 = load i64, ptr %f777, align 8, !dbg !1427
  store i64 %384, ptr %blockret778, align 8, !dbg !1427
  br label %expr_block.exit806, !dbg !1427

expr_block.exit806:                               ; preds = %checkok803, %checkok794
  %385 = load i64, ptr %blockret778, align 8, !dbg !1427
  store i64 %385, ptr %err728, align 8, !dbg !1427
  %386 = load ptr, ptr %f714, align 8
  store %"char[]" { ptr @.str.134, i64 9 }, ptr %indirectarg809, align 8
  %387 = call i64 @std.io.Formatter.out_substr(ptr %retparam808, ptr %386, ptr align 8 %indirectarg809), !dbg !1428
  %not_err810 = icmp eq i64 %387, 0, !dbg !1428
  %388 = call i1 @llvm.expect.i1(i1 %not_err810, i1 true), !dbg !1428
  br i1 %388, label %after_check812, label %assign_optional811, !dbg !1428

assign_optional811:                               ; preds = %expr_block.exit806
  store i64 %387, ptr %error_var807, align 8, !dbg !1428
  br label %guard_block813, !dbg !1428

after_check812:                                   ; preds = %expr_block.exit806
  br label %noerr_block814, !dbg !1428

guard_block813:                                   ; preds = %assign_optional811
  %389 = load i64, ptr %error_var807, align 8, !dbg !1428
  store i64 %389, ptr %error_var713, align 8, !dbg !1428
  br label %guard_block817, !dbg !1428

noerr_block814:                                   ; preds = %after_check812
  %390 = load i64, ptr %err728, align 8, !dbg !1429
  store i64 %390, ptr %error_var713, align 8, !dbg !1429
  br label %guard_block817, !dbg !1429

if.exit816:                                       ; preds = %end_block734
  br label %noerr_block818, !dbg !1430

guard_block817:                                   ; preds = %noerr_block814, %guard_block813, %expr_block.exit773
  %391 = load i64, ptr %error_var713, align 8, !dbg !1430
  ret i64 %391, !dbg !1430

noerr_block818:                                   ; preds = %if.exit816
  %392 = load i64, ptr %len716, align 8, !dbg !1430
  %add819 = add i64 %349, %392, !dbg !1399
  store i64 %add819, ptr %total_len, align 8, !dbg !1399
  br label %loop.inc, !dbg !1431

switch.case820:                                   ; preds = %switch.entry324
  %393 = load i64, ptr %total_len, align 8, !dbg !1432
  %394 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg823, ptr align 8 %current, i32 16, i1 false)
  %395 = call i64 @std.io.Formatter.out_char(ptr %retparam822, ptr %394, ptr align 8 %indirectarg823), !dbg !1434
  %not_err824 = icmp eq i64 %395, 0, !dbg !1434
  %396 = call i1 @llvm.expect.i1(i1 %not_err824, i1 true), !dbg !1434
  br i1 %396, label %after_check826, label %assign_optional825, !dbg !1434

assign_optional825:                               ; preds = %switch.case820
  store i64 %395, ptr %error_var821, align 8, !dbg !1434
  br label %guard_block827, !dbg !1434

after_check826:                                   ; preds = %switch.case820
  br label %noerr_block828, !dbg !1434

guard_block827:                                   ; preds = %assign_optional825
  %397 = load i64, ptr %error_var821, align 8, !dbg !1434
  ret i64 %397, !dbg !1434

noerr_block828:                                   ; preds = %after_check826
  %398 = load i64, ptr %retparam822, align 8, !dbg !1434
  %add829 = add i64 %393, %398, !dbg !1432
  store i64 %add829, ptr %total_len, align 8, !dbg !1432
  br label %loop.inc, !dbg !1435

switch.case830:                                   ; preds = %switch.entry324
  %399 = load ptr, ptr %self, align 8, !dbg !1436
  %checknull831 = icmp eq ptr %399, null, !dbg !1436
  %400 = call i1 @llvm.expect.i1(i1 %checknull831, i1 false), !dbg !1436
  br i1 %400, label %panic832, label %checkok836, !dbg !1436

checkok836:                                       ; preds = %switch.case830
  %ptradd837 = getelementptr inbounds i8, ptr %399, i64 16, !dbg !1436
  %401 = load i32, ptr %ptradd837, align 8, !dbg !1436
  %lshrl = lshr i32 %401, 1, !dbg !1436
  %402 = and i32 1, %lshrl, !dbg !1436
  %trunc = trunc i32 %402 to i8, !dbg !1436
  %403 = trunc i8 %trunc to i1, !dbg !1436
  br i1 %403, label %if.then838, label %if.exit865, !dbg !1436

if.then838:                                       ; preds = %checkok836
  call void @llvm.dbg.declare(metadata ptr %len839, metadata !1438, metadata !DIExpression()), !dbg !1440
  %404 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg842, ptr align 8 %current, i32 16, i1 false)
  %405 = call i64 @std.io.Formatter.out_str(ptr %retparam841, ptr %404, ptr align 8 %indirectarg842), !dbg !1441
  %not_err843 = icmp eq i64 %405, 0, !dbg !1441
  %406 = call i1 @llvm.expect.i1(i1 %not_err843, i1 true), !dbg !1441
  br i1 %406, label %after_check845, label %assign_optional844, !dbg !1441

assign_optional844:                               ; preds = %if.then838
  store i64 %405, ptr %error_var840, align 8, !dbg !1441
  br label %guard_block846, !dbg !1441

after_check845:                                   ; preds = %if.then838
  br label %noerr_block847, !dbg !1441

guard_block846:                                   ; preds = %assign_optional844
  %407 = load i64, ptr %error_var840, align 8, !dbg !1441
  ret i64 %407, !dbg !1441

noerr_block847:                                   ; preds = %after_check845
  %408 = load i64, ptr %retparam841, align 8, !dbg !1441
  store i64 %408, ptr %len839, align 8, !dbg !1441
  %409 = load i64, ptr %total_len, align 8, !dbg !1442
  %410 = load i64, ptr %len839, align 8, !dbg !1443
  %add848 = add i64 %409, %410, !dbg !1442
  store i64 %add848, ptr %total_len, align 8, !dbg !1442
  %411 = load i64, ptr %total_len, align 8, !dbg !1444
  %412 = load ptr, ptr %self, align 8, !dbg !1445
  %checknull850 = icmp eq ptr %412, null, !dbg !1445
  %413 = call i1 @llvm.expect.i1(i1 %checknull850, i1 false), !dbg !1445
  br i1 %413, label %panic851, label %checkok855, !dbg !1445

checkok855:                                       ; preds = %noerr_block847
  %ptradd856 = getelementptr inbounds i8, ptr %412, i64 16, !dbg !1445
  %ptradd857 = getelementptr inbounds i8, ptr %ptradd856, i64 4, !dbg !1445
  %414 = load i32, ptr %ptradd857, align 4, !dbg !1445
  %zext = zext i32 %414 to i64, !dbg !1445
  %415 = load ptr, ptr %self, align 8
  %416 = load i64, ptr %len839, align 8
  %417 = call i64 @std.io.Formatter.pad(ptr %retparam858, ptr %415, i8 32, i64 %zext, i64 %416) #5, !dbg !1446
  %not_err859 = icmp eq i64 %417, 0, !dbg !1446
  %418 = call i1 @llvm.expect.i1(i1 %not_err859, i1 true), !dbg !1446
  br i1 %418, label %after_check861, label %assign_optional860, !dbg !1446

assign_optional860:                               ; preds = %checkok855
  store i64 %417, ptr %error_var849, align 8, !dbg !1446
  br label %guard_block862, !dbg !1446

after_check861:                                   ; preds = %checkok855
  br label %noerr_block863, !dbg !1446

guard_block862:                                   ; preds = %assign_optional860
  %419 = load i64, ptr %error_var849, align 8, !dbg !1446
  ret i64 %419, !dbg !1446

noerr_block863:                                   ; preds = %after_check861
  %420 = load i64, ptr %retparam858, align 8, !dbg !1446
  %add864 = add i64 %411, %420, !dbg !1444
  store i64 %add864, ptr %total_len, align 8, !dbg !1444
  br label %loop.inc, !dbg !1447

if.exit865:                                       ; preds = %checkok836
  call void @llvm.dbg.declare(metadata ptr %out_fn, metadata !1448, metadata !DIExpression()), !dbg !1449
  %421 = load ptr, ptr %self, align 8, !dbg !1450
  %checknull866 = icmp eq ptr %421, null, !dbg !1450
  %422 = call i1 @llvm.expect.i1(i1 %checknull866, i1 false), !dbg !1450
  br i1 %422, label %panic867, label %checkok871, !dbg !1450

checkok871:                                       ; preds = %if.exit865
  %ptradd872 = getelementptr inbounds i8, ptr %421, i64 8, !dbg !1450
  %423 = load ptr, ptr %ptradd872, align 8, !dbg !1450
  store ptr %423, ptr %out_fn, align 8, !dbg !1450
  %424 = load ptr, ptr %self, align 8, !dbg !1451
  %checknull873 = icmp eq ptr %424, null, !dbg !1451
  %425 = call i1 @llvm.expect.i1(i1 %checknull873, i1 false), !dbg !1451
  br i1 %425, label %panic874, label %checkok878, !dbg !1451

checkok878:                                       ; preds = %checkok871
  %ptradd879 = getelementptr inbounds i8, ptr %424, i64 8, !dbg !1451
  store ptr @std.io.out_null_fn, ptr %ptradd879, align 8, !dbg !1452
  call void @llvm.dbg.declare(metadata ptr %len880, metadata !1453, metadata !DIExpression()), !dbg !1454
  %426 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg883, ptr align 8 %current, i32 16, i1 false)
  %427 = call i64 @std.io.Formatter.out_str(ptr %retparam882, ptr %426, ptr align 8 %indirectarg883), !dbg !1455
  %not_err884 = icmp eq i64 %427, 0, !dbg !1455
  %428 = call i1 @llvm.expect.i1(i1 %not_err884, i1 true), !dbg !1455
  br i1 %428, label %after_check886, label %assign_optional885, !dbg !1455

assign_optional885:                               ; preds = %checkok878
  store i64 %427, ptr %error_var881, align 8, !dbg !1455
  br label %guard_block887, !dbg !1455

after_check886:                                   ; preds = %checkok878
  br label %noerr_block888, !dbg !1455

guard_block887:                                   ; preds = %assign_optional885
  %429 = load i64, ptr %error_var881, align 8, !dbg !1455
  ret i64 %429, !dbg !1455

noerr_block888:                                   ; preds = %after_check886
  %430 = load i64, ptr %retparam882, align 8, !dbg !1455
  store i64 %430, ptr %len880, align 8, !dbg !1455
  %431 = load ptr, ptr %self, align 8, !dbg !1456
  %checknull889 = icmp eq ptr %431, null, !dbg !1456
  %432 = call i1 @llvm.expect.i1(i1 %checknull889, i1 false), !dbg !1456
  br i1 %432, label %panic890, label %checkok894, !dbg !1456

checkok894:                                       ; preds = %noerr_block888
  %ptradd895 = getelementptr inbounds i8, ptr %431, i64 8, !dbg !1456
  %433 = load ptr, ptr %out_fn, align 8, !dbg !1457
  store ptr %433, ptr %ptradd895, align 8, !dbg !1457
  %434 = load i64, ptr %total_len, align 8, !dbg !1458
  %435 = load ptr, ptr %self, align 8, !dbg !1459
  %checknull897 = icmp eq ptr %435, null, !dbg !1459
  %436 = call i1 @llvm.expect.i1(i1 %checknull897, i1 false), !dbg !1459
  br i1 %436, label %panic898, label %checkok902, !dbg !1459

checkok902:                                       ; preds = %checkok894
  %ptradd903 = getelementptr inbounds i8, ptr %435, i64 16, !dbg !1459
  %ptradd904 = getelementptr inbounds i8, ptr %ptradd903, i64 4, !dbg !1459
  %437 = load i32, ptr %ptradd904, align 4, !dbg !1459
  %zext905 = zext i32 %437 to i64, !dbg !1459
  %438 = load ptr, ptr %self, align 8
  %439 = load i64, ptr %len880, align 8
  %440 = call i64 @std.io.Formatter.pad(ptr %retparam906, ptr %438, i8 32, i64 %zext905, i64 %439) #5, !dbg !1460
  %not_err907 = icmp eq i64 %440, 0, !dbg !1460
  %441 = call i1 @llvm.expect.i1(i1 %not_err907, i1 true), !dbg !1460
  br i1 %441, label %after_check909, label %assign_optional908, !dbg !1460

assign_optional908:                               ; preds = %checkok902
  store i64 %440, ptr %error_var896, align 8, !dbg !1460
  br label %guard_block910, !dbg !1460

after_check909:                                   ; preds = %checkok902
  br label %noerr_block911, !dbg !1460

guard_block910:                                   ; preds = %assign_optional908
  %442 = load i64, ptr %error_var896, align 8, !dbg !1460
  ret i64 %442, !dbg !1460

noerr_block911:                                   ; preds = %after_check909
  %443 = load i64, ptr %retparam906, align 8, !dbg !1460
  %add912 = add i64 %434, %443, !dbg !1458
  store i64 %add912, ptr %total_len, align 8, !dbg !1458
  %444 = load i64, ptr %total_len, align 8, !dbg !1461
  %445 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg915, ptr align 8 %current, i32 16, i1 false)
  %446 = call i64 @std.io.Formatter.out_str(ptr %retparam914, ptr %445, ptr align 8 %indirectarg915), !dbg !1462
  %not_err916 = icmp eq i64 %446, 0, !dbg !1462
  %447 = call i1 @llvm.expect.i1(i1 %not_err916, i1 true), !dbg !1462
  br i1 %447, label %after_check918, label %assign_optional917, !dbg !1462

assign_optional917:                               ; preds = %noerr_block911
  store i64 %446, ptr %error_var913, align 8, !dbg !1462
  br label %guard_block919, !dbg !1462

after_check918:                                   ; preds = %noerr_block911
  br label %noerr_block920, !dbg !1462

guard_block919:                                   ; preds = %assign_optional917
  %448 = load i64, ptr %error_var913, align 8, !dbg !1462
  ret i64 %448, !dbg !1462

noerr_block920:                                   ; preds = %after_check918
  %449 = load i64, ptr %retparam914, align 8, !dbg !1462
  %add921 = add i64 %444, %449, !dbg !1461
  store i64 %add921, ptr %total_len, align 8, !dbg !1461
  br label %loop.inc, !dbg !1463

switch.case922:                                   ; preds = %switch.entry324
  %450 = load ptr, ptr %self, align 8, !dbg !1464
  %checknull923 = icmp eq ptr %450, null, !dbg !1464
  %451 = call i1 @llvm.expect.i1(i1 %checknull923, i1 false), !dbg !1464
  br i1 %451, label %panic924, label %checkok928, !dbg !1464

checkok928:                                       ; preds = %switch.case922
  %ptradd929 = getelementptr inbounds i8, ptr %450, i64 16, !dbg !1464
  %452 = load i32, ptr %ptradd929, align 8, !dbg !1466
  %453 = and i32 %452, -2, !dbg !1466
  %454 = or i32 %453, 1, !dbg !1466
  store i32 %454, ptr %ptradd929, align 8, !dbg !1466
  %455 = load ptr, ptr %self, align 8, !dbg !1467
  %checknull930 = icmp eq ptr %455, null, !dbg !1467
  %456 = call i1 @llvm.expect.i1(i1 %checknull930, i1 false), !dbg !1467
  br i1 %456, label %panic931, label %checkok935, !dbg !1467

checkok935:                                       ; preds = %checkok928
  %ptradd936 = getelementptr inbounds i8, ptr %455, i64 16, !dbg !1467
  %457 = load i32, ptr %ptradd936, align 8, !dbg !1468
  %458 = and i32 %457, -17, !dbg !1468
  %459 = or i32 %458, 16, !dbg !1468
  store i32 %459, ptr %ptradd936, align 8, !dbg !1468
  store i32 16, ptr %base, align 4, !dbg !1469
  br label %switch.exit978, !dbg !1469

switch.default937:                                ; preds = %switch.entry324
  %460 = load ptr, ptr %self, align 8
  store ptr %460, ptr %self938, align 8
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_FORMAT" to i64), ptr %f939, align 8
  %461 = load ptr, ptr %self938, align 8, !dbg !1470
  %checknull941 = icmp eq ptr %461, null, !dbg !1470
  %462 = call i1 @llvm.expect.i1(i1 %checknull941, i1 false), !dbg !1470
  br i1 %462, label %panic942, label %checkok946, !dbg !1470

checkok946:                                       ; preds = %switch.default937
  %ptradd947 = getelementptr inbounds i8, ptr %461, i64 16, !dbg !1470
  %ptradd948 = getelementptr inbounds i8, ptr %ptradd947, i64 24, !dbg !1470
  %463 = load i64, ptr %ptradd948, align 8, !dbg !1470
  %neq949 = icmp ne i64 %463, 0, !dbg !1470
  br i1 %neq949, label %if.then950, label %if.exit959, !dbg !1470

if.then950:                                       ; preds = %checkok946
  %464 = load ptr, ptr %self938, align 8, !dbg !1474
  %checknull951 = icmp eq ptr %464, null, !dbg !1474
  %465 = call i1 @llvm.expect.i1(i1 %checknull951, i1 false), !dbg !1474
  br i1 %465, label %panic952, label %checkok956, !dbg !1474

checkok956:                                       ; preds = %if.then950
  %ptradd957 = getelementptr inbounds i8, ptr %464, i64 16, !dbg !1474
  %ptradd958 = getelementptr inbounds i8, ptr %ptradd957, i64 24, !dbg !1474
  %466 = load i64, ptr %ptradd958, align 8, !dbg !1474
  store i64 %466, ptr %blockret940, align 8, !dbg !1474
  br label %expr_block.exit968, !dbg !1474

if.exit959:                                       ; preds = %checkok946
  %467 = load ptr, ptr %self938, align 8, !dbg !1475
  %checknull960 = icmp eq ptr %467, null, !dbg !1475
  %468 = call i1 @llvm.expect.i1(i1 %checknull960, i1 false), !dbg !1475
  br i1 %468, label %panic961, label %checkok965, !dbg !1475

checkok965:                                       ; preds = %if.exit959
  %ptradd966 = getelementptr inbounds i8, ptr %467, i64 16, !dbg !1475
  %ptradd967 = getelementptr inbounds i8, ptr %ptradd966, i64 24, !dbg !1475
  %469 = load i64, ptr %f939, align 8, !dbg !1476
  store i64 %469, ptr %ptradd967, align 8, !dbg !1476
  %470 = load i64, ptr %f939, align 8, !dbg !1477
  store i64 %470, ptr %blockret940, align 8, !dbg !1477
  br label %expr_block.exit968, !dbg !1477

expr_block.exit968:                               ; preds = %checkok965, %checkok956
  %471 = load i64, ptr %total_len, align 8, !dbg !1478
  %472 = load ptr, ptr %self, align 8
  store %"char[]" { ptr @.str.135, i64 12 }, ptr %indirectarg971, align 8
  %473 = call i64 @std.io.Formatter.out_substr(ptr %retparam970, ptr %472, ptr align 8 %indirectarg971), !dbg !1479
  %not_err972 = icmp eq i64 %473, 0, !dbg !1479
  %474 = call i1 @llvm.expect.i1(i1 %not_err972, i1 true), !dbg !1479
  br i1 %474, label %after_check974, label %assign_optional973, !dbg !1479

assign_optional973:                               ; preds = %expr_block.exit968
  store i64 %473, ptr %error_var969, align 8, !dbg !1479
  br label %guard_block975, !dbg !1479

after_check974:                                   ; preds = %expr_block.exit968
  br label %noerr_block976, !dbg !1479

guard_block975:                                   ; preds = %assign_optional973
  %475 = load i64, ptr %error_var969, align 8, !dbg !1479
  ret i64 %475, !dbg !1479

noerr_block976:                                   ; preds = %after_check974
  %476 = load i64, ptr %retparam970, align 8, !dbg !1479
  %add977 = add i64 %471, %476, !dbg !1478
  store i64 %add977, ptr %total_len, align 8, !dbg !1478
  br label %loop.inc, !dbg !1480

switch.exit978:                                   ; preds = %checkok935, %switch.case359, %switch.case350, %switch.case341, %checkok331
  %477 = load i32, ptr %base, align 4, !dbg !1481
  %neq979 = icmp ne i32 10, %477, !dbg !1481
  br i1 %neq979, label %if.then980, label %if.exit995, !dbg !1481

if.then980:                                       ; preds = %switch.exit978
  %478 = load ptr, ptr %self, align 8, !dbg !1482
  %checknull981 = icmp eq ptr %478, null, !dbg !1482
  %479 = call i1 @llvm.expect.i1(i1 %checknull981, i1 false), !dbg !1482
  br i1 %479, label %panic982, label %checkok986, !dbg !1482

checkok986:                                       ; preds = %if.then980
  %ptradd987 = getelementptr inbounds i8, ptr %478, i64 16, !dbg !1482
  %480 = load i32, ptr %ptradd987, align 8, !dbg !1484
  %481 = and i32 %480, -5, !dbg !1484
  store i32 %481, ptr %ptradd987, align 8, !dbg !1484
  %482 = load ptr, ptr %self, align 8, !dbg !1485
  %checknull988 = icmp eq ptr %482, null, !dbg !1485
  %483 = call i1 @llvm.expect.i1(i1 %checknull988, i1 false), !dbg !1485
  br i1 %483, label %panic989, label %checkok993, !dbg !1485

checkok993:                                       ; preds = %checkok986
  %ptradd994 = getelementptr inbounds i8, ptr %482, i64 16, !dbg !1485
  %484 = load i32, ptr %ptradd994, align 8, !dbg !1486
  %485 = and i32 %484, -9, !dbg !1486
  store i32 %485, ptr %ptradd994, align 8, !dbg !1486
  br label %if.exit995, !dbg !1486

if.exit995:                                       ; preds = %checkok993, %switch.exit978
  %486 = load ptr, ptr %self, align 8, !dbg !1487
  %checknull996 = icmp eq ptr %486, null, !dbg !1487
  %487 = call i1 @llvm.expect.i1(i1 %checknull996, i1 false), !dbg !1487
  br i1 %487, label %panic997, label %checkok1001, !dbg !1487

checkok1001:                                      ; preds = %if.exit995
  %ptradd1002 = getelementptr inbounds i8, ptr %486, i64 16, !dbg !1487
  %488 = load i32, ptr %ptradd1002, align 8, !dbg !1487
  %lshrl1003 = lshr i32 %488, 6, !dbg !1487
  %489 = and i32 1, %lshrl1003, !dbg !1487
  %trunc1004 = trunc i32 %489 to i8, !dbg !1487
  %490 = trunc i8 %trunc1004 to i1, !dbg !1487
  br i1 %490, label %if.then1005, label %if.exit1013, !dbg !1487

if.then1005:                                      ; preds = %checkok1001
  %491 = load ptr, ptr %self, align 8, !dbg !1488
  %checknull1006 = icmp eq ptr %491, null, !dbg !1488
  %492 = call i1 @llvm.expect.i1(i1 %checknull1006, i1 false), !dbg !1488
  br i1 %492, label %panic1007, label %checkok1011, !dbg !1488

checkok1011:                                      ; preds = %if.then1005
  %ptradd1012 = getelementptr inbounds i8, ptr %491, i64 16, !dbg !1488
  %493 = load i32, ptr %ptradd1012, align 8, !dbg !1489
  %494 = and i32 %493, -2, !dbg !1489
  store i32 %494, ptr %ptradd1012, align 8, !dbg !1489
  br label %if.exit1013, !dbg !1489

if.exit1013:                                      ; preds = %checkok1011, %checkok1001
  call void @llvm.dbg.declare(metadata ptr %is_neg, metadata !1490, metadata !DIExpression()), !dbg !1491
  store i8 0, ptr %is_neg, align 1, !dbg !1491
  %495 = load i64, ptr %total_len, align 8, !dbg !1492
  %496 = load ptr, ptr %self, align 8
  store ptr %496, ptr %f1015, align 8
  call void @llvm.dbg.declare(metadata ptr %len1017, metadata !1493, metadata !DIExpression()), !dbg !1495
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1020, ptr align 8 %current, i32 16, i1 false)
  %497 = call i64 @std.io.int_from_any(ptr %retparam1019, ptr align 8 %indirectarg1020, ptr %is_neg), !dbg !1497
  %not_err1021 = icmp eq i64 %497, 0, !dbg !1497
  %498 = call i1 @llvm.expect.i1(i1 %not_err1021, i1 true), !dbg !1497
  br i1 %498, label %after_check1023, label %assign_optional1022, !dbg !1497

assign_optional1022:                              ; preds = %if.exit1013
  store i64 %497, ptr %len.f1018, align 8, !dbg !1497
  br label %after_assign1029, !dbg !1497

after_check1023:                                  ; preds = %if.exit1013
  %499 = load ptr, ptr %self, align 8
  %500 = load i128, ptr %retparam1019, align 16
  store i128 %500, ptr %indirectarg1025, align 16
  %501 = load i8, ptr %is_neg, align 1
  %502 = load i32, ptr %base, align 4
  %503 = call i64 @std.io.Formatter.ntoa(ptr %retparam1024, ptr %499, ptr align 16 %indirectarg1025, i8 zeroext %501, i32 %502), !dbg !1498
  %not_err1026 = icmp eq i64 %503, 0, !dbg !1498
  %504 = call i1 @llvm.expect.i1(i1 %not_err1026, i1 true), !dbg !1498
  br i1 %504, label %after_check1028, label %assign_optional1027, !dbg !1498

assign_optional1027:                              ; preds = %after_check1023
  store i64 %503, ptr %len.f1018, align 8, !dbg !1498
  br label %after_assign1029, !dbg !1498

after_check1028:                                  ; preds = %after_check1023
  %505 = load i64, ptr %retparam1024, align 8, !dbg !1498
  store i64 %505, ptr %len1017, align 8, !dbg !1498
  store i64 0, ptr %len.f1018, align 8, !dbg !1498
  br label %after_assign1029, !dbg !1498

after_assign1029:                                 ; preds = %after_check1028, %assign_optional1027, %assign_optional1022
  call void @llvm.dbg.declare(metadata ptr %err1030, metadata !1499, metadata !DIExpression()), !dbg !1500
  br label %testblock1031, !dbg !1500

testblock1031:                                    ; preds = %after_assign1029
  %optval1032 = load i64, ptr %len.f1018, align 8, !dbg !1501
  %not_err1033 = icmp eq i64 %optval1032, 0, !dbg !1501
  %506 = call i1 @llvm.expect.i1(i1 %not_err1033, i1 true), !dbg !1501
  br i1 %506, label %after_check1035, label %assign_optional1034, !dbg !1501

assign_optional1034:                              ; preds = %testblock1031
  store i64 %optval1032, ptr %err1030, align 8, !dbg !1501
  br label %end_block1036, !dbg !1501

after_check1035:                                  ; preds = %testblock1031
  store i64 0, ptr %err1030, align 8, !dbg !1501
  br label %end_block1036, !dbg !1501

end_block1036:                                    ; preds = %after_check1035, %assign_optional1034
  %507 = load i64, ptr %err1030, align 8, !dbg !1501
  %neq1037 = icmp ne i64 %507, 0, !dbg !1501
  br i1 %neq1037, label %if.then1038, label %if.exit1118, !dbg !1501

if.then1038:                                      ; preds = %end_block1036
  store i64 %507, ptr %switch1039, align 8
  br label %switch.entry1040

switch.entry1040:                                 ; preds = %if.then1038
  %508 = load i64, ptr %switch1039, align 8
  %eq1041 = icmp eq i64 ptrtoint (ptr @"std.io.PrintFault$BUFFER_EXCEEDED" to i64), %508, !dbg !1502
  br i1 %eq1041, label %switch.case1044, label %next_if1042, !dbg !1502

next_if1042:                                      ; preds = %switch.entry1040
  %eq1043 = icmp eq i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), %508, !dbg !1503
  br i1 %eq1043, label %switch.case1044, label %next_if1076, !dbg !1503

switch.case1044:                                  ; preds = %next_if1042, %switch.entry1040
  %509 = load ptr, ptr %f1015, align 8
  store ptr %509, ptr %self1045, align 8
  %510 = load i64, ptr %err1030, align 8
  store i64 %510, ptr %f1046, align 8
  %511 = load ptr, ptr %self1045, align 8, !dbg !1504
  %checknull1048 = icmp eq ptr %511, null, !dbg !1504
  %512 = call i1 @llvm.expect.i1(i1 %checknull1048, i1 false), !dbg !1504
  br i1 %512, label %panic1049, label %checkok1053, !dbg !1504

checkok1053:                                      ; preds = %switch.case1044
  %ptradd1054 = getelementptr inbounds i8, ptr %511, i64 16, !dbg !1504
  %ptradd1055 = getelementptr inbounds i8, ptr %ptradd1054, i64 24, !dbg !1504
  %513 = load i64, ptr %ptradd1055, align 8, !dbg !1504
  %neq1056 = icmp ne i64 %513, 0, !dbg !1504
  br i1 %neq1056, label %if.then1057, label %if.exit1066, !dbg !1504

if.then1057:                                      ; preds = %checkok1053
  %514 = load ptr, ptr %self1045, align 8, !dbg !1508
  %checknull1058 = icmp eq ptr %514, null, !dbg !1508
  %515 = call i1 @llvm.expect.i1(i1 %checknull1058, i1 false), !dbg !1508
  br i1 %515, label %panic1059, label %checkok1063, !dbg !1508

checkok1063:                                      ; preds = %if.then1057
  %ptradd1064 = getelementptr inbounds i8, ptr %514, i64 16, !dbg !1508
  %ptradd1065 = getelementptr inbounds i8, ptr %ptradd1064, i64 24, !dbg !1508
  %516 = load i64, ptr %ptradd1065, align 8, !dbg !1508
  store i64 %516, ptr %blockret1047, align 8, !dbg !1508
  br label %expr_block.exit1075, !dbg !1508

if.exit1066:                                      ; preds = %checkok1053
  %517 = load ptr, ptr %self1045, align 8, !dbg !1509
  %checknull1067 = icmp eq ptr %517, null, !dbg !1509
  %518 = call i1 @llvm.expect.i1(i1 %checknull1067, i1 false), !dbg !1509
  br i1 %518, label %panic1068, label %checkok1072, !dbg !1509

checkok1072:                                      ; preds = %if.exit1066
  %ptradd1073 = getelementptr inbounds i8, ptr %517, i64 16, !dbg !1509
  %ptradd1074 = getelementptr inbounds i8, ptr %ptradd1073, i64 24, !dbg !1509
  %519 = load i64, ptr %f1046, align 8, !dbg !1510
  store i64 %519, ptr %ptradd1074, align 8, !dbg !1510
  %520 = load i64, ptr %f1046, align 8, !dbg !1511
  store i64 %520, ptr %blockret1047, align 8, !dbg !1511
  br label %expr_block.exit1075, !dbg !1511

expr_block.exit1075:                              ; preds = %checkok1072, %checkok1063
  %521 = load i64, ptr %blockret1047, align 8, !dbg !1511
  store i64 %521, ptr %error_var1014, align 8, !dbg !1511
  br label %guard_block1119, !dbg !1511

next_if1076:                                      ; preds = %next_if1042
  br label %switch.default1077, !dbg !1511

switch.default1077:                               ; preds = %next_if1076
  %522 = load ptr, ptr %f1015, align 8
  store ptr %522, ptr %self1078, align 8
  store i64 ptrtoint (ptr @"std.io.PrintFault$INVALID_ARGUMENT" to i64), ptr %f1079, align 8
  %523 = load ptr, ptr %self1078, align 8, !dbg !1512
  %checknull1081 = icmp eq ptr %523, null, !dbg !1512
  %524 = call i1 @llvm.expect.i1(i1 %checknull1081, i1 false), !dbg !1512
  br i1 %524, label %panic1082, label %checkok1086, !dbg !1512

checkok1086:                                      ; preds = %switch.default1077
  %ptradd1087 = getelementptr inbounds i8, ptr %523, i64 16, !dbg !1512
  %ptradd1088 = getelementptr inbounds i8, ptr %ptradd1087, i64 24, !dbg !1512
  %525 = load i64, ptr %ptradd1088, align 8, !dbg !1512
  %neq1089 = icmp ne i64 %525, 0, !dbg !1512
  br i1 %neq1089, label %if.then1090, label %if.exit1099, !dbg !1512

if.then1090:                                      ; preds = %checkok1086
  %526 = load ptr, ptr %self1078, align 8, !dbg !1516
  %checknull1091 = icmp eq ptr %526, null, !dbg !1516
  %527 = call i1 @llvm.expect.i1(i1 %checknull1091, i1 false), !dbg !1516
  br i1 %527, label %panic1092, label %checkok1096, !dbg !1516

checkok1096:                                      ; preds = %if.then1090
  %ptradd1097 = getelementptr inbounds i8, ptr %526, i64 16, !dbg !1516
  %ptradd1098 = getelementptr inbounds i8, ptr %ptradd1097, i64 24, !dbg !1516
  %528 = load i64, ptr %ptradd1098, align 8, !dbg !1516
  store i64 %528, ptr %blockret1080, align 8, !dbg !1516
  br label %expr_block.exit1108, !dbg !1516

if.exit1099:                                      ; preds = %checkok1086
  %529 = load ptr, ptr %self1078, align 8, !dbg !1517
  %checknull1100 = icmp eq ptr %529, null, !dbg !1517
  %530 = call i1 @llvm.expect.i1(i1 %checknull1100, i1 false), !dbg !1517
  br i1 %530, label %panic1101, label %checkok1105, !dbg !1517

checkok1105:                                      ; preds = %if.exit1099
  %ptradd1106 = getelementptr inbounds i8, ptr %529, i64 16, !dbg !1517
  %ptradd1107 = getelementptr inbounds i8, ptr %ptradd1106, i64 24, !dbg !1517
  %531 = load i64, ptr %f1079, align 8, !dbg !1518
  store i64 %531, ptr %ptradd1107, align 8, !dbg !1518
  %532 = load i64, ptr %f1079, align 8, !dbg !1519
  store i64 %532, ptr %blockret1080, align 8, !dbg !1519
  br label %expr_block.exit1108, !dbg !1519

expr_block.exit1108:                              ; preds = %checkok1105, %checkok1096
  %533 = load i64, ptr %blockret1080, align 8, !dbg !1519
  store i64 %533, ptr %err1030, align 8, !dbg !1519
  %534 = load ptr, ptr %f1015, align 8
  store %"char[]" { ptr @.str.136, i64 9 }, ptr %indirectarg1111, align 8
  %535 = call i64 @std.io.Formatter.out_substr(ptr %retparam1110, ptr %534, ptr align 8 %indirectarg1111), !dbg !1520
  %not_err1112 = icmp eq i64 %535, 0, !dbg !1520
  %536 = call i1 @llvm.expect.i1(i1 %not_err1112, i1 true), !dbg !1520
  br i1 %536, label %after_check1114, label %assign_optional1113, !dbg !1520

assign_optional1113:                              ; preds = %expr_block.exit1108
  store i64 %535, ptr %error_var1109, align 8, !dbg !1520
  br label %guard_block1115, !dbg !1520

after_check1114:                                  ; preds = %expr_block.exit1108
  br label %noerr_block1116, !dbg !1520

guard_block1115:                                  ; preds = %assign_optional1113
  %537 = load i64, ptr %error_var1109, align 8, !dbg !1520
  store i64 %537, ptr %error_var1014, align 8, !dbg !1520
  br label %guard_block1119, !dbg !1520

noerr_block1116:                                  ; preds = %after_check1114
  %538 = load i64, ptr %err1030, align 8, !dbg !1521
  store i64 %538, ptr %error_var1014, align 8, !dbg !1521
  br label %guard_block1119, !dbg !1521

if.exit1118:                                      ; preds = %end_block1036
  br label %noerr_block1120, !dbg !1522

guard_block1119:                                  ; preds = %noerr_block1116, %guard_block1115, %expr_block.exit1075
  %539 = load i64, ptr %error_var1014, align 8, !dbg !1522
  ret i64 %539, !dbg !1522

noerr_block1120:                                  ; preds = %if.exit1118
  %540 = load i64, ptr %len1017, align 8, !dbg !1522
  %add1121 = add i64 %495, %540, !dbg !1492
  store i64 %add1121, ptr %total_len, align 8, !dbg !1492
  br label %loop.inc, !dbg !1492

loop.inc:                                         ; preds = %noerr_block1120, %noerr_block976, %noerr_block920, %noerr_block863, %noerr_block828, %noerr_block818, %noerr_block702, %noerr_block586, %noerr_block470, %noerr_block306, %noerr_block65, %noerr_block
  %541 = load i64, ptr %i, align 8, !dbg !1523
  %add1122 = add i64 %541, 1, !dbg !1523
  store i64 %add1122, ptr %i, align 8, !dbg !1523
  br label %loop.cond, !dbg !1523

loop.exit1123:                                    ; preds = %loop.cond
  %542 = load ptr, ptr %self, align 8, !dbg !1524
  %checknull1124 = icmp eq ptr %542, null, !dbg !1524
  %543 = call i1 @llvm.expect.i1(i1 %checknull1124, i1 false), !dbg !1524
  br i1 %543, label %panic1125, label %checkok1129, !dbg !1524

checkok1129:                                      ; preds = %loop.exit1123
  %ptradd1130 = getelementptr inbounds i8, ptr %542, i64 16, !dbg !1524
  %ptradd1131 = getelementptr inbounds i8, ptr %ptradd1130, i64 24, !dbg !1524
  %544 = load i64, ptr %ptradd1131, align 8, !dbg !1524
  %neq1132 = icmp ne i64 %544, 0, !dbg !1524
  br i1 %neq1132, label %if.then1133, label %if.exit1142, !dbg !1524

if.then1133:                                      ; preds = %checkok1129
  %545 = load ptr, ptr %self, align 8, !dbg !1525
  %checknull1134 = icmp eq ptr %545, null, !dbg !1525
  %546 = call i1 @llvm.expect.i1(i1 %checknull1134, i1 false), !dbg !1525
  br i1 %546, label %panic1135, label %checkok1139, !dbg !1525

checkok1139:                                      ; preds = %if.then1133
  %ptradd1140 = getelementptr inbounds i8, ptr %545, i64 16, !dbg !1525
  %ptradd1141 = getelementptr inbounds i8, ptr %ptradd1140, i64 24, !dbg !1525
  %547 = load i64, ptr %ptradd1141, align 8, !dbg !1525
  ret i64 %547, !dbg !1525

if.exit1142:                                      ; preds = %checkok1129
  %548 = load i64, ptr %total_len, align 8, !dbg !1526
  store i64 %548, ptr %0, align 8, !dbg !1526
  ret i64 0, !dbg !1526

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg2, align 8
  %549 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %549(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 323), !dbg !1113
  unreachable, !dbg !1113

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg6, align 8
  %550 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %550(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 325), !dbg !1118
  unreachable, !dbg !1118

panic10:                                          ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg13, align 8
  %551 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %551(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 326), !dbg !1120
  unreachable, !dbg !1120

panic17:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg20, align 8
  %552 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %552(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 329), !dbg !1121
  unreachable, !dbg !1121

panic25:                                          ; preds = %loop.body
  store i64 %16, ptr %taddr, align 8
  %553 = insertvalue %any undef, ptr %taddr, 0
  %554 = insertvalue %any %553, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %18, ptr %taddr26, align 8
  %555 = insertvalue %any undef, ptr %taddr26, 0
  %556 = insertvalue %any %555, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg29, align 8
  store %any %554, ptr %varargslots, align 16
  %ptradd30 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %556, ptr %ptradd30, align 16
  %557 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %557, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg31, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 337, ptr align 8 %indirectarg31), !dbg !1142
  unreachable, !dbg !1142

panic46:                                          ; preds = %if.exit43
  store i64 %36, ptr %taddr47, align 8
  %558 = insertvalue %any undef, ptr %taddr47, 0
  %559 = insertvalue %any %558, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %38, ptr %taddr48, align 8
  %560 = insertvalue %any undef, ptr %taddr48, 0
  %561 = insertvalue %any %560, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg51, align 8
  store %any %559, ptr %varargslots52, align 16
  %ptradd53 = getelementptr inbounds i8, ptr %varargslots52, i64 16
  store %any %561, ptr %ptradd53, align 16
  %562 = insertvalue %"any[]" undef, ptr %varargslots52, 0
  %"$$temp54" = insertvalue %"any[]" %562, i64 2, 1
  store %"any[]" %"$$temp54", ptr %indirectarg55, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 346, ptr align 8 %indirectarg55), !dbg !1156
  unreachable, !dbg !1156

panic69:                                          ; preds = %if.exit67
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg72, align 8
  %563 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %563(ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, i32 353), !dbg !1162
  unreachable, !dbg !1162

panic77:                                          ; preds = %switch.case
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg78, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg79, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg80, align 8
  %564 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %564(ptr align 8 %indirectarg78, ptr align 8 %indirectarg79, ptr align 8 %indirectarg80, i32 358), !dbg !1164
  unreachable, !dbg !1164

panic85:                                          ; preds = %switch.case83
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg86, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg87, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg88, align 8
  %565 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %565(ptr align 8 %indirectarg86, ptr align 8 %indirectarg87, ptr align 8 %indirectarg88, i32 359), !dbg !1170
  unreachable, !dbg !1170

panic93:                                          ; preds = %switch.case91
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg94, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg96, align 8
  %566 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %566(ptr align 8 %indirectarg94, ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, i32 360), !dbg !1173
  unreachable, !dbg !1173

panic101:                                         ; preds = %switch.case99
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg102, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg103, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg104, align 8
  %567 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %567(ptr align 8 %indirectarg102, ptr align 8 %indirectarg103, ptr align 8 %indirectarg104, i32 361), !dbg !1176
  unreachable, !dbg !1176

panic109:                                         ; preds = %switch.case107
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg110, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg111, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg112, align 8
  %568 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %568(ptr align 8 %indirectarg110, ptr align 8 %indirectarg111, ptr align 8 %indirectarg112, i32 362), !dbg !1179
  unreachable, !dbg !1179

panic128:                                         ; preds = %if.exit125
  store i64 %84, ptr %taddr129, align 8
  %569 = insertvalue %any undef, ptr %taddr129, 0
  %570 = insertvalue %any %569, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %86, ptr %taddr130, align 8
  %571 = insertvalue %any undef, ptr %taddr130, 0
  %572 = insertvalue %any %571, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg131, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg132, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg133, align 8
  store %any %570, ptr %varargslots134, align 16
  %ptradd135 = getelementptr inbounds i8, ptr %varargslots134, i64 16
  store %any %572, ptr %ptradd135, align 16
  %573 = insertvalue %"any[]" undef, ptr %varargslots134, 0
  %"$$temp136" = insertvalue %"any[]" %573, i64 2, 1
  store %"any[]" %"$$temp136", ptr %indirectarg137, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg131, ptr align 8 %indirectarg132, ptr align 8 %indirectarg133, i32 366, ptr align 8 %indirectarg137), !dbg !1192
  unreachable, !dbg !1192

panic161:                                         ; preds = %if.exit158
  store i64 %102, ptr %taddr162, align 8
  %574 = insertvalue %any undef, ptr %taddr162, 0
  %575 = insertvalue %any %574, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %104, ptr %taddr163, align 8
  %576 = insertvalue %any undef, ptr %taddr163, 0
  %577 = insertvalue %any %576, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg164, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg165, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg166, align 8
  store %any %575, ptr %varargslots167, align 16
  %ptradd168 = getelementptr inbounds i8, ptr %varargslots167, i64 16
  store %any %577, ptr %ptradd168, align 16
  %578 = insertvalue %"any[]" undef, ptr %varargslots167, 0
  %"$$temp169" = insertvalue %"any[]" %578, i64 2, 1
  store %"any[]" %"$$temp169", ptr %indirectarg170, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg164, ptr align 8 %indirectarg165, ptr align 8 %indirectarg166, i32 371, ptr align 8 %indirectarg170), !dbg !1204
  unreachable, !dbg !1204

panic176:                                         ; preds = %if.then174
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg177, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg178, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg179, align 8
  %579 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %579(ptr align 8 %indirectarg177, ptr align 8 %indirectarg178, ptr align 8 %indirectarg179, i32 374), !dbg !1206
  unreachable, !dbg !1206

panic184:                                         ; preds = %if.exit182
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg185, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg186, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg187, align 8
  %580 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %580(ptr align 8 %indirectarg185, ptr align 8 %indirectarg186, ptr align 8 %indirectarg187, i32 377), !dbg !1210
  unreachable, !dbg !1210

panic192:                                         ; preds = %checkok188
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg193, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg194, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg195, align 8
  %581 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %581(ptr align 8 %indirectarg193, ptr align 8 %indirectarg194, ptr align 8 %indirectarg195, i32 379), !dbg !1212
  unreachable, !dbg !1212

panic202:                                         ; preds = %if.then200
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg203, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg204, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg205, align 8
  %582 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %582(ptr align 8 %indirectarg203, ptr align 8 %indirectarg204, ptr align 8 %indirectarg205, i32 382), !dbg !1215
  unreachable, !dbg !1215

panic244:                                         ; preds = %if.exit242
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg245, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg246, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg247, align 8
  %583 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %583(ptr align 8 %indirectarg245, ptr align 8 %indirectarg246, ptr align 8 %indirectarg247, i32 386), !dbg !1235
  unreachable, !dbg !1235

panic254:                                         ; preds = %cond.phi
  store i64 %148, ptr %taddr255, align 8
  %584 = insertvalue %any undef, ptr %taddr255, 0
  %585 = insertvalue %any %584, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %150, ptr %taddr256, align 8
  %586 = insertvalue %any undef, ptr %taddr256, 0
  %587 = insertvalue %any %586, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg257, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg258, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg259, align 8
  store %any %585, ptr %varargslots260, align 16
  %ptradd261 = getelementptr inbounds i8, ptr %varargslots260, i64 16
  store %any %587, ptr %ptradd261, align 16
  %588 = insertvalue %"any[]" undef, ptr %varargslots260, 0
  %"$$temp262" = insertvalue %"any[]" %588, i64 2, 1
  store %"any[]" %"$$temp262", ptr %indirectarg263, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg257, ptr align 8 %indirectarg258, ptr align 8 %indirectarg259, i32 387, ptr align 8 %indirectarg263), !dbg !1240
  unreachable, !dbg !1240

panic273:                                         ; preds = %if.then269
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg274, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg275, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg276, align 8
  %589 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %589(ptr align 8 %indirectarg274, ptr align 8 %indirectarg275, ptr align 8 %indirectarg276, i32 14), !dbg !1246
  unreachable, !dbg !1246

panic283:                                         ; preds = %if.then281
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg284, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg285, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg286, align 8
  %590 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %590(ptr align 8 %indirectarg284, ptr align 8 %indirectarg285, ptr align 8 %indirectarg286, i32 14), !dbg !1250
  unreachable, !dbg !1250

panic292:                                         ; preds = %if.exit290
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg293, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg294, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg295, align 8
  %591 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %591(ptr align 8 %indirectarg293, ptr align 8 %indirectarg294, ptr align 8 %indirectarg295, i32 15), !dbg !1251
  unreachable, !dbg !1251

panic312:                                         ; preds = %if.exit308
  store i64 %172, ptr %taddr313, align 8
  %592 = insertvalue %any undef, ptr %taddr313, 0
  %593 = insertvalue %any %592, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %174, ptr %taddr314, align 8
  %594 = insertvalue %any undef, ptr %taddr314, 0
  %595 = insertvalue %any %594, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg315, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg316, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg317, align 8
  store %any %593, ptr %varargslots318, align 16
  %ptradd319 = getelementptr inbounds i8, ptr %varargslots318, i64 16
  store %any %595, ptr %ptradd319, align 16
  %596 = insertvalue %"any[]" undef, ptr %varargslots318, 0
  %"$$temp320" = insertvalue %"any[]" %596, i64 2, 1
  store %"any[]" %"$$temp320", ptr %indirectarg321, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg315, ptr align 8 %indirectarg316, ptr align 8 %indirectarg317, i32 398, ptr align 8 %indirectarg321), !dbg !1260
  unreachable, !dbg !1260

panic327:                                         ; preds = %switch.case325
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg328, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg329, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg330, align 8
  %597 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %597(ptr align 8 %indirectarg328, ptr align 8 %indirectarg329, ptr align 8 %indirectarg330, i32 403), !dbg !1264
  unreachable, !dbg !1264

panic335:                                         ; preds = %switch.case333
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg336, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg337, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg338, align 8
  %598 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %598(ptr align 8 %indirectarg336, ptr align 8 %indirectarg337, ptr align 8 %indirectarg338, i32 405), !dbg !1266
  unreachable, !dbg !1266

panic344:                                         ; preds = %switch.case342
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg345, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg346, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg347, align 8
  %599 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %599(ptr align 8 %indirectarg345, ptr align 8 %indirectarg346, ptr align 8 %indirectarg347, i32 410), !dbg !1272
  unreachable, !dbg !1272

panic353:                                         ; preds = %switch.case351
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg354, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg355, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg356, align 8
  %600 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %600(ptr align 8 %indirectarg354, ptr align 8 %indirectarg355, ptr align 8 %indirectarg356, i32 415), !dbg !1278
  unreachable, !dbg !1278

panic362:                                         ; preds = %switch.case360
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg363, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg364, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg365, align 8
  %601 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %601(ptr align 8 %indirectarg363, ptr align 8 %indirectarg364, ptr align 8 %indirectarg365, i32 420), !dbg !1284
  unreachable, !dbg !1284

panic399:                                         ; preds = %switch.case394
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg400, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg401, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg402, align 8
  %602 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %602(ptr align 8 %indirectarg400, ptr align 8 %indirectarg401, ptr align 8 %indirectarg402, i32 14), !dbg !1301
  unreachable, !dbg !1301

panic409:                                         ; preds = %if.then407
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg410, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg411, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg412, align 8
  %603 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %603(ptr align 8 %indirectarg410, ptr align 8 %indirectarg411, ptr align 8 %indirectarg412, i32 14), !dbg !1305
  unreachable, !dbg !1305

panic418:                                         ; preds = %if.exit416
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg419, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg420, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg421, align 8
  %604 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %604(ptr align 8 %indirectarg419, ptr align 8 %indirectarg420, ptr align 8 %indirectarg421, i32 15), !dbg !1306
  unreachable, !dbg !1306

panic432:                                         ; preds = %switch.default427
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg433, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg434, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg435, align 8
  %605 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %605(ptr align 8 %indirectarg433, ptr align 8 %indirectarg434, ptr align 8 %indirectarg435, i32 14), !dbg !1309
  unreachable, !dbg !1309

panic442:                                         ; preds = %if.then440
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg443, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg444, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg445, align 8
  %606 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %606(ptr align 8 %indirectarg443, ptr align 8 %indirectarg444, ptr align 8 %indirectarg445, i32 14), !dbg !1313
  unreachable, !dbg !1313

panic451:                                         ; preds = %if.exit449
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg452, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg453, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg454, align 8
  %607 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %607(ptr align 8 %indirectarg452, ptr align 8 %indirectarg453, ptr align 8 %indirectarg454, i32 15), !dbg !1314
  unreachable, !dbg !1314

panic474:                                         ; preds = %switch.case472
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg475, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg476, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg477, align 8
  %608 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %608(ptr align 8 %indirectarg475, ptr align 8 %indirectarg476, ptr align 8 %indirectarg477, i32 426), !dbg !1321
  unreachable, !dbg !1321

panic515:                                         ; preds = %switch.case510
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg516, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg517, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg518, align 8
  %609 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %609(ptr align 8 %indirectarg516, ptr align 8 %indirectarg517, ptr align 8 %indirectarg518, i32 14), !dbg !1338
  unreachable, !dbg !1338

panic525:                                         ; preds = %if.then523
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg526, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg527, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg528, align 8
  %610 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %610(ptr align 8 %indirectarg526, ptr align 8 %indirectarg527, ptr align 8 %indirectarg528, i32 14), !dbg !1342
  unreachable, !dbg !1342

panic534:                                         ; preds = %if.exit532
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg535, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg536, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg537, align 8
  %611 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %611(ptr align 8 %indirectarg535, ptr align 8 %indirectarg536, ptr align 8 %indirectarg537, i32 15), !dbg !1343
  unreachable, !dbg !1343

panic548:                                         ; preds = %switch.default543
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg549, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg550, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg551, align 8
  %612 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %612(ptr align 8 %indirectarg549, ptr align 8 %indirectarg550, ptr align 8 %indirectarg551, i32 14), !dbg !1346
  unreachable, !dbg !1346

panic558:                                         ; preds = %if.then556
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg559, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg560, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg561, align 8
  %613 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %613(ptr align 8 %indirectarg559, ptr align 8 %indirectarg560, ptr align 8 %indirectarg561, i32 14), !dbg !1350
  unreachable, !dbg !1350

panic567:                                         ; preds = %if.exit565
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg568, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg569, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg570, align 8
  %614 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %614(ptr align 8 %indirectarg568, ptr align 8 %indirectarg569, ptr align 8 %indirectarg570, i32 15), !dbg !1351
  unreachable, !dbg !1351

panic590:                                         ; preds = %switch.case588
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg591, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg592, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg593, align 8
  %615 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %615(ptr align 8 %indirectarg591, ptr align 8 %indirectarg592, ptr align 8 %indirectarg593, i32 432), !dbg !1358
  unreachable, !dbg !1358

panic631:                                         ; preds = %switch.case626
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg632, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg633, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg634, align 8
  %616 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %616(ptr align 8 %indirectarg632, ptr align 8 %indirectarg633, ptr align 8 %indirectarg634, i32 14), !dbg !1375
  unreachable, !dbg !1375

panic641:                                         ; preds = %if.then639
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg642, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg643, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg644, align 8
  %617 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %617(ptr align 8 %indirectarg642, ptr align 8 %indirectarg643, ptr align 8 %indirectarg644, i32 14), !dbg !1379
  unreachable, !dbg !1379

panic650:                                         ; preds = %if.exit648
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg651, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg652, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg653, align 8
  %618 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %618(ptr align 8 %indirectarg651, ptr align 8 %indirectarg652, ptr align 8 %indirectarg653, i32 15), !dbg !1380
  unreachable, !dbg !1380

panic664:                                         ; preds = %switch.default659
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg665, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg666, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg667, align 8
  %619 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %619(ptr align 8 %indirectarg665, ptr align 8 %indirectarg666, ptr align 8 %indirectarg667, i32 14), !dbg !1383
  unreachable, !dbg !1383

panic674:                                         ; preds = %if.then672
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg675, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg676, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg677, align 8
  %620 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %620(ptr align 8 %indirectarg675, ptr align 8 %indirectarg676, ptr align 8 %indirectarg677, i32 14), !dbg !1387
  unreachable, !dbg !1387

panic683:                                         ; preds = %if.exit681
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg684, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg685, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg686, align 8
  %621 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %621(ptr align 8 %indirectarg684, ptr align 8 %indirectarg685, ptr align 8 %indirectarg686, i32 15), !dbg !1388
  unreachable, !dbg !1388

panic706:                                         ; preds = %switch.case704
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg707, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg708, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg709, align 8
  %622 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %622(ptr align 8 %indirectarg707, ptr align 8 %indirectarg708, ptr align 8 %indirectarg709, i32 438), !dbg !1395
  unreachable, !dbg !1395

panic747:                                         ; preds = %switch.case742
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg748, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg749, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg750, align 8
  %623 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %623(ptr align 8 %indirectarg748, ptr align 8 %indirectarg749, ptr align 8 %indirectarg750, i32 14), !dbg !1412
  unreachable, !dbg !1412

panic757:                                         ; preds = %if.then755
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg758, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg759, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg760, align 8
  %624 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %624(ptr align 8 %indirectarg758, ptr align 8 %indirectarg759, ptr align 8 %indirectarg760, i32 14), !dbg !1416
  unreachable, !dbg !1416

panic766:                                         ; preds = %if.exit764
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg767, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg768, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg769, align 8
  %625 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %625(ptr align 8 %indirectarg767, ptr align 8 %indirectarg768, ptr align 8 %indirectarg769, i32 15), !dbg !1417
  unreachable, !dbg !1417

panic780:                                         ; preds = %switch.default775
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg781, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg782, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg783, align 8
  %626 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %626(ptr align 8 %indirectarg781, ptr align 8 %indirectarg782, ptr align 8 %indirectarg783, i32 14), !dbg !1420
  unreachable, !dbg !1420

panic790:                                         ; preds = %if.then788
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg791, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg792, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg793, align 8
  %627 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %627(ptr align 8 %indirectarg791, ptr align 8 %indirectarg792, ptr align 8 %indirectarg793, i32 14), !dbg !1424
  unreachable, !dbg !1424

panic799:                                         ; preds = %if.exit797
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg800, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg801, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg802, align 8
  %628 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %628(ptr align 8 %indirectarg800, ptr align 8 %indirectarg801, ptr align 8 %indirectarg802, i32 15), !dbg !1425
  unreachable, !dbg !1425

panic832:                                         ; preds = %switch.case830
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg833, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg834, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg835, align 8
  %629 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %629(ptr align 8 %indirectarg833, ptr align 8 %indirectarg834, ptr align 8 %indirectarg835, i32 447), !dbg !1436
  unreachable, !dbg !1436

panic851:                                         ; preds = %noerr_block847
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg852, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg853, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg854, align 8
  %630 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %630(ptr align 8 %indirectarg852, ptr align 8 %indirectarg853, ptr align 8 %indirectarg854, i32 451), !dbg !1445
  unreachable, !dbg !1445

panic867:                                         ; preds = %if.exit865
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg868, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg869, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg870, align 8
  %631 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %631(ptr align 8 %indirectarg868, ptr align 8 %indirectarg869, ptr align 8 %indirectarg870, i32 454), !dbg !1450
  unreachable, !dbg !1450

panic874:                                         ; preds = %checkok871
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg875, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg876, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg877, align 8
  %632 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %632(ptr align 8 %indirectarg875, ptr align 8 %indirectarg876, ptr align 8 %indirectarg877, i32 455), !dbg !1451
  unreachable, !dbg !1451

panic890:                                         ; preds = %noerr_block888
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg891, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg892, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg893, align 8
  %633 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %633(ptr align 8 %indirectarg891, ptr align 8 %indirectarg892, ptr align 8 %indirectarg893, i32 457), !dbg !1456
  unreachable, !dbg !1456

panic898:                                         ; preds = %checkok894
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg899, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg900, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg901, align 8
  %634 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %634(ptr align 8 %indirectarg899, ptr align 8 %indirectarg900, ptr align 8 %indirectarg901, i32 458), !dbg !1459
  unreachable, !dbg !1459

panic924:                                         ; preds = %switch.case922
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg925, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg926, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg927, align 8
  %635 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %635(ptr align 8 %indirectarg925, ptr align 8 %indirectarg926, ptr align 8 %indirectarg927, i32 462), !dbg !1464
  unreachable, !dbg !1464

panic931:                                         ; preds = %checkok928
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg932, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg933, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg934, align 8
  %636 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %636(ptr align 8 %indirectarg932, ptr align 8 %indirectarg933, ptr align 8 %indirectarg934, i32 463), !dbg !1467
  unreachable, !dbg !1467

panic942:                                         ; preds = %switch.default937
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg943, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg944, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg945, align 8
  %637 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %637(ptr align 8 %indirectarg943, ptr align 8 %indirectarg944, ptr align 8 %indirectarg945, i32 14), !dbg !1470
  unreachable, !dbg !1470

panic952:                                         ; preds = %if.then950
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg953, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg954, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg955, align 8
  %638 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %638(ptr align 8 %indirectarg953, ptr align 8 %indirectarg954, ptr align 8 %indirectarg955, i32 14), !dbg !1474
  unreachable, !dbg !1474

panic961:                                         ; preds = %if.exit959
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg962, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg963, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg964, align 8
  %639 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %639(ptr align 8 %indirectarg962, ptr align 8 %indirectarg963, ptr align 8 %indirectarg964, i32 15), !dbg !1475
  unreachable, !dbg !1475

panic982:                                         ; preds = %if.then980
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg983, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg984, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg985, align 8
  %640 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %640(ptr align 8 %indirectarg983, ptr align 8 %indirectarg984, ptr align 8 %indirectarg985, i32 472), !dbg !1482
  unreachable, !dbg !1482

panic989:                                         ; preds = %checkok986
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg990, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg991, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg992, align 8
  %641 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %641(ptr align 8 %indirectarg990, ptr align 8 %indirectarg991, ptr align 8 %indirectarg992, i32 473), !dbg !1485
  unreachable, !dbg !1485

panic997:                                         ; preds = %if.exit995
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg998, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg999, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg1000, align 8
  %642 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %642(ptr align 8 %indirectarg998, ptr align 8 %indirectarg999, ptr align 8 %indirectarg1000, i32 476), !dbg !1487
  unreachable, !dbg !1487

panic1007:                                        ; preds = %if.then1005
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1008, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1009, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg1010, align 8
  %643 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %643(ptr align 8 %indirectarg1008, ptr align 8 %indirectarg1009, ptr align 8 %indirectarg1010, i32 476), !dbg !1488
  unreachable, !dbg !1488

panic1049:                                        ; preds = %switch.case1044
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1050, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1051, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg1052, align 8
  %644 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %644(ptr align 8 %indirectarg1050, ptr align 8 %indirectarg1051, ptr align 8 %indirectarg1052, i32 14), !dbg !1504
  unreachable, !dbg !1504

panic1059:                                        ; preds = %if.then1057
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1060, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1061, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg1062, align 8
  %645 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %645(ptr align 8 %indirectarg1060, ptr align 8 %indirectarg1061, ptr align 8 %indirectarg1062, i32 14), !dbg !1508
  unreachable, !dbg !1508

panic1068:                                        ; preds = %if.exit1066
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1069, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1070, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg1071, align 8
  %646 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %646(ptr align 8 %indirectarg1069, ptr align 8 %indirectarg1070, ptr align 8 %indirectarg1071, i32 15), !dbg !1509
  unreachable, !dbg !1509

panic1082:                                        ; preds = %switch.default1077
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1083, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1084, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg1085, align 8
  %647 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %647(ptr align 8 %indirectarg1083, ptr align 8 %indirectarg1084, ptr align 8 %indirectarg1085, i32 14), !dbg !1512
  unreachable, !dbg !1512

panic1092:                                        ; preds = %if.then1090
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1093, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1094, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg1095, align 8
  %648 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %648(ptr align 8 %indirectarg1093, ptr align 8 %indirectarg1094, ptr align 8 %indirectarg1095, i32 14), !dbg !1516
  unreachable, !dbg !1516

panic1101:                                        ; preds = %if.exit1099
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1102, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1103, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg1104, align 8
  %649 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %649(ptr align 8 %indirectarg1102, ptr align 8 %indirectarg1103, ptr align 8 %indirectarg1104, i32 15), !dbg !1517
  unreachable, !dbg !1517

panic1125:                                        ; preds = %loop.exit1123
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1126, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1127, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg1128, align 8
  %650 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %650(ptr align 8 %indirectarg1126, ptr align 8 %indirectarg1127, ptr align 8 %indirectarg1128, i32 485), !dbg !1524
  unreachable, !dbg !1524

panic1135:                                        ; preds = %if.then1133
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1136, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1137, align 8
  store %"char[]" { ptr @.func.123, i64 7 }, ptr %indirectarg1138, align 8
  %651 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %651(ptr align 8 %indirectarg1136, ptr align 8 %indirectarg1137, ptr align 8 %indirectarg1138, i32 485), !dbg !1525
  unreachable, !dbg !1525
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Formatter.print(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !1527 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %.anon = alloca i64, align 8
  %.anon16 = alloca i64, align 8
  %c = alloca i8, align 1
  %taddr = alloca i64, align 8
  %taddr19 = alloca i64, align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg24 = alloca %"any[]", align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %reterr = alloca i64, align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %3 = icmp eq ptr %1, null, !dbg !1530
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1530
  br i1 %4, label %panic, label %checkok, !dbg !1530

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1531, metadata !DIExpression()), !dbg !1532
  call void @llvm.dbg.declare(metadata ptr %2, metadata !1533, metadata !DIExpression()), !dbg !1534
  %5 = load ptr, ptr %self, align 8, !dbg !1535
  %checknull = icmp eq ptr %5, null, !dbg !1535
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1535
  br i1 %6, label %panic3, label %checkok7, !dbg !1535

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 8, !dbg !1535
  %7 = load ptr, ptr %ptradd, align 8, !dbg !1535
  %not = icmp eq ptr %7, null, !dbg !1535
  br i1 %not, label %if.then, label %if.exit, !dbg !1535

if.then:                                          ; preds = %checkok7
  %8 = load ptr, ptr %self, align 8, !dbg !1536
  %checknull8 = icmp eq ptr %8, null, !dbg !1536
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !1536
  br i1 %9, label %panic9, label %checkok13, !dbg !1536

checkok13:                                        ; preds = %if.then
  %ptradd14 = getelementptr inbounds i8, ptr %8, i64 8, !dbg !1536
  store ptr @std.io.out_null_fn, ptr %ptradd14, align 8, !dbg !1538
  br label %if.exit, !dbg !1538

if.exit:                                          ; preds = %checkok13, %checkok7
  call void @llvm.dbg.declare(metadata ptr %.anon, metadata !1539, metadata !DIExpression()), !dbg !1541
  %ptradd15 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1541
  %10 = load i64, ptr %ptradd15, align 8, !dbg !1541
  store i64 %10, ptr %.anon, align 8, !dbg !1541
  call void @llvm.dbg.declare(metadata ptr %.anon16, metadata !1539, metadata !DIExpression()), !dbg !1541
  store i64 0, ptr %.anon16, align 8, !dbg !1541
  br label %loop.cond, !dbg !1541

loop.cond:                                        ; preds = %noerr_block, %if.exit
  %11 = load i64, ptr %.anon16, align 8, !dbg !1541
  %12 = load i64, ptr %.anon, align 8, !dbg !1541
  %lt = icmp ult i64 %11, %12, !dbg !1541
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !1541

loop.body:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %c, metadata !1542, metadata !DIExpression()), !dbg !1544
  %ptradd17 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1545
  %13 = load i64, ptr %ptradd17, align 8, !dbg !1545
  %14 = load ptr, ptr %2, align 8, !dbg !1545
  %15 = load i64, ptr %.anon16, align 8, !dbg !1545
  %ge = icmp uge i64 %15, %13, !dbg !1545
  %16 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1545
  br i1 %16, label %panic18, label %checkok25, !dbg !1545

checkok25:                                        ; preds = %loop.body
  %ptradd26 = getelementptr inbounds i8, ptr %14, i64 %15, !dbg !1545
  %17 = load i8, ptr %ptradd26, align 1, !dbg !1545
  store i8 %17, ptr %c, align 1, !dbg !1545
  %18 = load ptr, ptr %self, align 8
  %19 = load i8, ptr %c, align 1
  %20 = call i64 @std.io.Formatter.out(ptr %retparam, ptr %18, i8 %19), !dbg !1546
  %not_err = icmp eq i64 %20, 0, !dbg !1546
  %21 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1546
  br i1 %21, label %after_check, label %assign_optional, !dbg !1546

assign_optional:                                  ; preds = %checkok25
  store i64 %20, ptr %error_var, align 8, !dbg !1546
  br label %guard_block, !dbg !1546

after_check:                                      ; preds = %checkok25
  br label %noerr_block, !dbg !1546

guard_block:                                      ; preds = %assign_optional
  %22 = load i64, ptr %error_var, align 8, !dbg !1546
  ret i64 %22, !dbg !1546

noerr_block:                                      ; preds = %after_check
  %23 = load i64, ptr %.anon16, align 8, !dbg !1541
  %addnuw = add nuw i64 %23, 1, !dbg !1541
  store i64 %addnuw, ptr %.anon16, align 8, !dbg !1541
  br label %loop.cond, !dbg !1541

loop.exit:                                        ; preds = %loop.cond
  %24 = load ptr, ptr %self, align 8, !dbg !1547
  %checknull27 = icmp eq ptr %24, null, !dbg !1547
  %25 = call i1 @llvm.expect.i1(i1 %checknull27, i1 false), !dbg !1547
  br i1 %25, label %panic28, label %checkok32, !dbg !1547

checkok32:                                        ; preds = %loop.exit
  %ptradd33 = getelementptr inbounds i8, ptr %24, i64 16, !dbg !1547
  %ptradd34 = getelementptr inbounds i8, ptr %ptradd33, i64 16, !dbg !1547
  %26 = load i64, ptr %ptradd34, align 8, !dbg !1547
  store i64 %26, ptr %0, align 8, !dbg !1547
  ret i64 0, !dbg !1547

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.137, i64 5 }, ptr %indirectarg2, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 490), !dbg !1532
  unreachable, !dbg !1532

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.137, i64 5 }, ptr %indirectarg6, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 492), !dbg !1535
  unreachable, !dbg !1535

panic9:                                           ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.137, i64 5 }, ptr %indirectarg12, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 495), !dbg !1536
  unreachable, !dbg !1536

panic18:                                          ; preds = %loop.body
  store i64 %13, ptr %taddr, align 8
  %30 = insertvalue %any undef, ptr %taddr, 0
  %31 = insertvalue %any %30, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %15, ptr %taddr19, align 8
  %32 = insertvalue %any undef, ptr %taddr19, 0
  %33 = insertvalue %any %32, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.137, i64 5 }, ptr %indirectarg22, align 8
  store %any %31, ptr %varargslots, align 16
  %ptradd23 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %33, ptr %ptradd23, align 16
  %34 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %34, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg24, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 497, ptr align 8 %indirectarg24), !dbg !1545
  unreachable, !dbg !1545

panic28:                                          ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.file.54, i64 12 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.func.137, i64 5 }, ptr %indirectarg31, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, i32 498), !dbg !1547
  unreachable, !dbg !1547
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.out_null_fn(ptr %0, i8 %1) #0 !dbg !1548 {
entry:
  %data = alloca ptr, align 8
  %c = alloca i8, align 1
  store ptr %0, ptr %data, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !1549, metadata !DIExpression()), !dbg !1550
  store i8 %1, ptr %c, align 1
  call void @llvm.dbg.declare(metadata ptr %c, metadata !1551, metadata !DIExpression()), !dbg !1552
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.Formatter.adjust(ptr %0, ptr %1, i64 %2) #0 !dbg !1553 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %len = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %reterr8 = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !1556
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1556
  br i1 %4, label %panic, label %checkok, !dbg !1556

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1557, metadata !DIExpression()), !dbg !1558
  store i64 %2, ptr %len, align 8
  call void @llvm.dbg.declare(metadata ptr %len, metadata !1559, metadata !DIExpression()), !dbg !1560
  %5 = load ptr, ptr %self, align 8, !dbg !1561
  %checknull = icmp eq ptr %5, null, !dbg !1561
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1561
  br i1 %6, label %panic3, label %checkok7, !dbg !1561

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !1561
  %7 = load i32, ptr %ptradd, align 8, !dbg !1561
  %lshrl = lshr i32 %7, 1, !dbg !1561
  %8 = and i32 1, %lshrl, !dbg !1561
  %trunc = trunc i32 %8 to i8, !dbg !1561
  %9 = trunc i8 %trunc to i1, !dbg !1561
  %not = xor i1 %9, true, !dbg !1561
  br i1 %not, label %if.then, label %if.exit, !dbg !1561

if.then:                                          ; preds = %checkok7
  store i64 0, ptr %0, align 8, !dbg !1562
  ret i64 0, !dbg !1562

if.exit:                                          ; preds = %checkok7
  %10 = load ptr, ptr %self, align 8, !dbg !1563
  %checknull9 = icmp eq ptr %10, null, !dbg !1563
  %11 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !1563
  br i1 %11, label %panic10, label %checkok14, !dbg !1563

checkok14:                                        ; preds = %if.exit
  %ptradd15 = getelementptr inbounds i8, ptr %10, i64 16, !dbg !1563
  %ptradd16 = getelementptr inbounds i8, ptr %ptradd15, i64 4, !dbg !1563
  %12 = load i32, ptr %ptradd16, align 4, !dbg !1563
  %zext = zext i32 %12 to i64, !dbg !1563
  %13 = load ptr, ptr %self, align 8
  %14 = load i64, ptr %len, align 8
  %15 = call i64 @std.io.Formatter.pad(ptr %retparam, ptr %13, i8 32, i64 %zext, i64 %14) #5, !dbg !1564
  %not_err = icmp eq i64 %15, 0, !dbg !1564
  %16 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1564
  br i1 %16, label %after_check, label %assign_optional, !dbg !1564

assign_optional:                                  ; preds = %checkok14
  store i64 %15, ptr %reterr8, align 8, !dbg !1564
  br label %err_retblock, !dbg !1564

after_check:                                      ; preds = %checkok14
  %17 = load i64, ptr %retparam, align 8, !dbg !1564
  store i64 %17, ptr %0, align 8, !dbg !1564
  ret i64 0, !dbg !1564

err_retblock:                                     ; preds = %assign_optional
  %18 = load i64, ptr %reterr8, align 8, !dbg !1564
  ret i64 %18, !dbg !1564

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.154, i64 6 }, ptr %indirectarg2, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 19), !dbg !1558
  unreachable, !dbg !1558

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.154, i64 6 }, ptr %indirectarg6, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 21), !dbg !1561
  unreachable, !dbg !1561

panic10:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.154, i64 6 }, ptr %indirectarg13, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 22), !dbg !1563
  unreachable, !dbg !1563
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.Formatter.out_substr(ptr %0, ptr %1, ptr align 8 %2) #0 !dbg !1565 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %l = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %prec = alloca i32, align 4
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %index = alloca i64, align 8
  %chars = alloca i64, align 8
  %ptr = alloca ptr, align 8
  %c = alloca i8, align 1
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !1566
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1566
  br i1 %4, label %panic, label %checkok, !dbg !1566

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1567, metadata !DIExpression()), !dbg !1568
  call void @llvm.dbg.declare(metadata ptr %2, metadata !1569, metadata !DIExpression()), !dbg !1570
  call void @llvm.dbg.declare(metadata ptr %l, metadata !1571, metadata !DIExpression()), !dbg !1572
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %2, i32 16, i1 false)
  %5 = call i64 @std.core.string.conv.utf8_codepoints(ptr align 8 %indirectarg3), !dbg !1573
  store i64 %5, ptr %l, align 8, !dbg !1573
  call void @llvm.dbg.declare(metadata ptr %prec, metadata !1574, metadata !DIExpression()), !dbg !1575
  %6 = load ptr, ptr %self, align 8, !dbg !1576
  %checknull = icmp eq ptr %6, null, !dbg !1576
  %7 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1576
  br i1 %7, label %panic4, label %checkok8, !dbg !1576

checkok8:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %6, i64 16, !dbg !1576
  %ptradd9 = getelementptr inbounds i8, ptr %ptradd, i64 8, !dbg !1576
  %8 = load i32, ptr %ptradd9, align 8, !dbg !1576
  store i32 %8, ptr %prec, align 4, !dbg !1576
  %9 = load ptr, ptr %self, align 8, !dbg !1577
  %checknull10 = icmp eq ptr %9, null, !dbg !1577
  %10 = call i1 @llvm.expect.i1(i1 %checknull10, i1 false), !dbg !1577
  br i1 %10, label %panic11, label %checkok15, !dbg !1577

checkok15:                                        ; preds = %checkok8
  %ptradd16 = getelementptr inbounds i8, ptr %9, i64 16, !dbg !1577
  %11 = load i32, ptr %ptradd16, align 8, !dbg !1577
  %lshrl = lshr i32 %11, 6, !dbg !1577
  %12 = and i32 1, %lshrl, !dbg !1577
  %trunc = trunc i32 %12 to i8, !dbg !1577
  %13 = trunc i8 %trunc to i1, !dbg !1577
  br i1 %13, label %and.rhs, label %and.phi, !dbg !1577

and.rhs:                                          ; preds = %checkok15
  %14 = load i64, ptr %l, align 8, !dbg !1578
  %15 = load i32, ptr %prec, align 4, !dbg !1579
  %zext = zext i32 %15 to i64, !dbg !1579
  %lt = icmp ult i64 %14, %zext, !dbg !1578
  br label %and.phi, !dbg !1578

and.phi:                                          ; preds = %and.rhs, %checkok15
  %val = phi i1 [ false, %checkok15 ], [ %lt, %and.rhs ], !dbg !1578
  br i1 %val, label %if.then, label %if.exit, !dbg !1578

if.then:                                          ; preds = %and.phi
  %16 = load i32, ptr %prec, align 4, !dbg !1580
  %zext17 = zext i32 %16 to i64, !dbg !1580
  store i64 %zext17, ptr %l, align 8, !dbg !1580
  br label %if.exit, !dbg !1580

if.exit:                                          ; preds = %if.then, %and.phi
  call void @llvm.dbg.declare(metadata ptr %index, metadata !1581, metadata !DIExpression()), !dbg !1582
  store i64 0, ptr %index, align 8, !dbg !1583
  call void @llvm.dbg.declare(metadata ptr %chars, metadata !1584, metadata !DIExpression()), !dbg !1585
  %ptradd18 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1586
  %17 = load i64, ptr %ptradd18, align 8, !dbg !1586
  store i64 %17, ptr %chars, align 8, !dbg !1586
  call void @llvm.dbg.declare(metadata ptr %ptr, metadata !1587, metadata !DIExpression()), !dbg !1588
  %18 = load ptr, ptr %2, align 8, !dbg !1589
  store ptr %18, ptr %ptr, align 8, !dbg !1589
  br label %loop.cond, !dbg !1590

loop.cond:                                        ; preds = %noerr_block, %if.exit
  %19 = load i64, ptr %index, align 8, !dbg !1591
  %20 = load i64, ptr %chars, align 8, !dbg !1593
  %lt19 = icmp ult i64 %19, %20, !dbg !1591
  br i1 %lt19, label %loop.body, label %loop.exit, !dbg !1591

loop.body:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %c, metadata !1594, metadata !DIExpression()), !dbg !1596
  %21 = load ptr, ptr %ptr, align 8, !dbg !1597
  %22 = load i64, ptr %index, align 8, !dbg !1598
  %ptradd20 = getelementptr inbounds i8, ptr %21, i64 %22, !dbg !1598
  %23 = load i8, ptr %ptradd20, align 1, !dbg !1598
  store i8 %23, ptr %c, align 1, !dbg !1598
  %24 = load i8, ptr %c, align 1, !dbg !1599
  %zext21 = zext i8 %24 to i32, !dbg !1599
  %and = and i32 %zext21, 192, !dbg !1599
  %neq = icmp ne i32 %and, 128, !dbg !1599
  br i1 %neq, label %and.rhs22, label %and.phi32, !dbg !1599

and.rhs22:                                        ; preds = %loop.body
  %25 = load ptr, ptr %self, align 8, !dbg !1600
  %checknull23 = icmp eq ptr %25, null, !dbg !1600
  %26 = call i1 @llvm.expect.i1(i1 %checknull23, i1 false), !dbg !1600
  br i1 %26, label %panic24, label %checkok28, !dbg !1600

checkok28:                                        ; preds = %and.rhs22
  %ptradd29 = getelementptr inbounds i8, ptr %25, i64 16, !dbg !1600
  %27 = load i32, ptr %ptradd29, align 8, !dbg !1600
  %lshrl30 = lshr i32 %27, 6, !dbg !1600
  %28 = and i32 1, %lshrl30, !dbg !1600
  %trunc31 = trunc i32 %28 to i8, !dbg !1600
  %29 = trunc i8 %trunc31 to i1, !dbg !1600
  br label %and.phi32, !dbg !1600

and.phi32:                                        ; preds = %checkok28, %loop.body
  %val33 = phi i1 [ false, %loop.body ], [ %29, %checkok28 ], !dbg !1600
  br i1 %val33, label %and.rhs34, label %and.phi35, !dbg !1600

and.rhs34:                                        ; preds = %and.phi32
  %30 = load i32, ptr %prec, align 4, !dbg !1601
  %sub = sub i32 %30, 1, !dbg !1601
  store i32 %sub, ptr %prec, align 4, !dbg !1601
  %not = icmp eq i32 %30, 0, !dbg !1601
  br label %and.phi35, !dbg !1601

and.phi35:                                        ; preds = %and.rhs34, %and.phi32
  %val36 = phi i1 [ false, %and.phi32 ], [ %not, %and.rhs34 ], !dbg !1601
  br i1 %val36, label %if.then37, label %if.exit38, !dbg !1601

if.then37:                                        ; preds = %and.phi35
  br label %loop.exit, !dbg !1602

if.exit38:                                        ; preds = %and.phi35
  %31 = load ptr, ptr %self, align 8
  %32 = load i8, ptr %c, align 1
  %33 = call i64 @std.io.Formatter.out(ptr %retparam, ptr %31, i8 %32), !dbg !1603
  %not_err = icmp eq i64 %33, 0, !dbg !1603
  %34 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1603
  br i1 %34, label %after_check, label %assign_optional, !dbg !1603

assign_optional:                                  ; preds = %if.exit38
  store i64 %33, ptr %error_var, align 8, !dbg !1603
  br label %guard_block, !dbg !1603

after_check:                                      ; preds = %if.exit38
  br label %noerr_block, !dbg !1603

guard_block:                                      ; preds = %assign_optional
  %35 = load i64, ptr %error_var, align 8, !dbg !1603
  ret i64 %35, !dbg !1603

noerr_block:                                      ; preds = %after_check
  %36 = load i64, ptr %index, align 8, !dbg !1604
  %add = add i64 %36, 1, !dbg !1604
  store i64 %add, ptr %index, align 8, !dbg !1604
  br label %loop.cond, !dbg !1604

loop.exit:                                        ; preds = %if.then37, %loop.cond
  %37 = load i64, ptr %index, align 8, !dbg !1605
  store i64 %37, ptr %0, align 8, !dbg !1605
  ret i64 0, !dbg !1605

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.155, i64 10 }, ptr %indirectarg2, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 145), !dbg !1568
  unreachable, !dbg !1568

panic4:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.155, i64 10 }, ptr %indirectarg7, align 8
  %39 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %39(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 148), !dbg !1576
  unreachable, !dbg !1576

panic11:                                          ; preds = %checkok8
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.155, i64 10 }, ptr %indirectarg14, align 8
  %40 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %40(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 149), !dbg !1577
  unreachable, !dbg !1577

panic24:                                          ; preds = %and.rhs22
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.155, i64 10 }, ptr %indirectarg27, align 8
  %41 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %41(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 157), !dbg !1600
  unreachable, !dbg !1600
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Formatter.pad(ptr %0, ptr %1, i8 %2, i64 %3, i64 %4) #0 comdat !dbg !1606 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %c = alloca i8, align 1
  %width = alloca i64, align 8
  %len = alloca i64, align 8
  %delta = alloca i64, align 8
  %i = alloca i64, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %reterr = alloca i64, align 8
  %x = alloca i32, align 4
  %.anon = alloca i64, align 8
  %a = alloca i32, align 4
  %b = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !1609
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !1609
  br i1 %6, label %panic, label %checkok, !dbg !1609

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1610, metadata !DIExpression()), !dbg !1611
  store i8 %2, ptr %c, align 1
  call void @llvm.dbg.declare(metadata ptr %c, metadata !1612, metadata !DIExpression()), !dbg !1613
  store i64 %3, ptr %width, align 8
  call void @llvm.dbg.declare(metadata ptr %width, metadata !1614, metadata !DIExpression()), !dbg !1616
  store i64 %4, ptr %len, align 8
  call void @llvm.dbg.declare(metadata ptr %len, metadata !1617, metadata !DIExpression()), !dbg !1618
  call void @llvm.dbg.declare(metadata ptr %delta, metadata !1619, metadata !DIExpression()), !dbg !1620
  %7 = load i64, ptr %width, align 8, !dbg !1621
  %8 = load i64, ptr %len, align 8, !dbg !1622
  %sub = sub i64 %7, %8, !dbg !1621
  store i64 %sub, ptr %delta, align 8, !dbg !1621
  call void @llvm.dbg.declare(metadata ptr %i, metadata !1623, metadata !DIExpression()), !dbg !1625
  store i64 0, ptr %i, align 8, !dbg !1626
  br label %loop.cond, !dbg !1626

loop.cond:                                        ; preds = %noerr_block, %checkok
  %9 = load i64, ptr %i, align 8, !dbg !1627
  %10 = load i64, ptr %delta, align 8, !dbg !1628
  %lt = icmp slt i64 %9, %10, !dbg !1627
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !1627

loop.body:                                        ; preds = %loop.cond
  %11 = load ptr, ptr %self, align 8
  %12 = load i8, ptr %c, align 1
  %13 = call i64 @std.io.Formatter.out(ptr %retparam, ptr %11, i8 %12), !dbg !1629
  %not_err = icmp eq i64 %13, 0, !dbg !1629
  %14 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1629
  br i1 %14, label %after_check, label %assign_optional, !dbg !1629

assign_optional:                                  ; preds = %loop.body
  store i64 %13, ptr %error_var, align 8, !dbg !1629
  br label %guard_block, !dbg !1629

after_check:                                      ; preds = %loop.body
  br label %noerr_block, !dbg !1629

guard_block:                                      ; preds = %assign_optional
  %15 = load i64, ptr %error_var, align 8, !dbg !1629
  ret i64 %15, !dbg !1629

noerr_block:                                      ; preds = %after_check
  %16 = load i64, ptr %i, align 8, !dbg !1630
  %add = add i64 %16, 1, !dbg !1630
  store i64 %add, ptr %i, align 8, !dbg !1630
  br label %loop.cond, !dbg !1630

loop.exit:                                        ; preds = %loop.cond
  store i32 0, ptr %x, align 4
  %17 = load i64, ptr %delta, align 8
  store i64 %17, ptr %.anon, align 8
  %18 = load i32, ptr %x, align 4
  store i32 %18, ptr %a, align 4
  %19 = load i64, ptr %.anon, align 8
  store i64 %19, ptr %b, align 8
  %20 = load i32, ptr %a, align 4, !dbg !1631
  %sext = sext i32 %20 to i64, !dbg !1631
  %21 = load i64, ptr %b, align 8, !dbg !1637
  %gt = icmp sgt i64 %sext, %21, !dbg !1631
  br i1 %gt, label %cond.lhs, label %cond.rhs, !dbg !1631

cond.lhs:                                         ; preds = %loop.exit
  %22 = load i32, ptr %x, align 4, !dbg !1638
  %sext3 = sext i32 %22 to i64, !dbg !1638
  br label %cond.phi, !dbg !1638

cond.rhs:                                         ; preds = %loop.exit
  %23 = load i64, ptr %.anon, align 8, !dbg !1639
  br label %cond.phi, !dbg !1639

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i64 [ %sext3, %cond.lhs ], [ %23, %cond.rhs ], !dbg !1639
  store i64 %val, ptr %0, align 8, !dbg !1639
  ret i64 0, !dbg !1639

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.156, i64 3 }, ptr %indirectarg2, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 164), !dbg !1611
  unreachable, !dbg !1611
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Formatter.out_chars(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !1640 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %.anon = alloca i64, align 8
  %.anon3 = alloca i64, align 8
  %c = alloca i8, align 1
  %taddr = alloca i64, align 8
  %taddr6 = alloca i64, align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg11 = alloca %"any[]", align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !1643
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1643
  br i1 %4, label %panic, label %checkok, !dbg !1643

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1644, metadata !DIExpression()), !dbg !1645
  call void @llvm.dbg.declare(metadata ptr %2, metadata !1646, metadata !DIExpression()), !dbg !1647
  call void @llvm.dbg.declare(metadata ptr %.anon, metadata !1648, metadata !DIExpression()), !dbg !1650
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1650
  %5 = load i64, ptr %ptradd, align 8, !dbg !1650
  store i64 %5, ptr %.anon, align 8, !dbg !1650
  call void @llvm.dbg.declare(metadata ptr %.anon3, metadata !1648, metadata !DIExpression()), !dbg !1650
  store i64 0, ptr %.anon3, align 8, !dbg !1650
  br label %loop.cond, !dbg !1650

loop.cond:                                        ; preds = %noerr_block, %checkok
  %6 = load i64, ptr %.anon3, align 8, !dbg !1650
  %7 = load i64, ptr %.anon, align 8, !dbg !1650
  %lt = icmp ult i64 %6, %7, !dbg !1650
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !1650

loop.body:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %c, metadata !1651, metadata !DIExpression()), !dbg !1653
  %ptradd4 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1654
  %8 = load i64, ptr %ptradd4, align 8, !dbg !1654
  %9 = load ptr, ptr %2, align 8, !dbg !1654
  %10 = load i64, ptr %.anon3, align 8, !dbg !1654
  %ge = icmp uge i64 %10, %8, !dbg !1654
  %11 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !1654
  br i1 %11, label %panic5, label %checkok12, !dbg !1654

checkok12:                                        ; preds = %loop.body
  %ptradd13 = getelementptr inbounds i8, ptr %9, i64 %10, !dbg !1654
  %12 = load i8, ptr %ptradd13, align 1, !dbg !1654
  store i8 %12, ptr %c, align 1, !dbg !1654
  %13 = load ptr, ptr %self, align 8
  %14 = load i8, ptr %c, align 1
  %15 = call i64 @std.io.Formatter.out(ptr %retparam, ptr %13, i8 %14), !dbg !1655
  %not_err = icmp eq i64 %15, 0, !dbg !1655
  %16 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1655
  br i1 %16, label %after_check, label %assign_optional, !dbg !1655

assign_optional:                                  ; preds = %checkok12
  store i64 %15, ptr %error_var, align 8, !dbg !1655
  br label %guard_block, !dbg !1655

after_check:                                      ; preds = %checkok12
  br label %noerr_block, !dbg !1655

guard_block:                                      ; preds = %assign_optional
  %17 = load i64, ptr %error_var, align 8, !dbg !1655
  ret i64 %17, !dbg !1655

noerr_block:                                      ; preds = %after_check
  %18 = load i64, ptr %.anon3, align 8, !dbg !1650
  %addnuw = add nuw i64 %18, 1, !dbg !1650
  store i64 %addnuw, ptr %.anon3, align 8, !dbg !1650
  br label %loop.cond, !dbg !1650

loop.exit:                                        ; preds = %loop.cond
  %ptradd14 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1656
  %19 = load i64, ptr %ptradd14, align 8, !dbg !1656
  store i64 %19, ptr %0, align 8, !dbg !1656
  ret i64 0, !dbg !1656

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.157, i64 9 }, ptr %indirectarg2, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 178), !dbg !1645
  unreachable, !dbg !1645

panic5:                                           ; preds = %loop.body
  store i64 %8, ptr %taddr, align 8
  %21 = insertvalue %any undef, ptr %taddr, 0
  %22 = insertvalue %any %21, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %10, ptr %taddr6, align 8
  %23 = insertvalue %any undef, ptr %taddr6, 0
  %24 = insertvalue %any %23, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.157, i64 9 }, ptr %indirectarg9, align 8
  store %any %22, ptr %varargslots, align 16
  %ptradd10 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %24, ptr %ptradd10, align 16
  %25 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %25, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg11, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 180, ptr align 8 %indirectarg11), !dbg !1654
  unreachable, !dbg !1654
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Formatter.etoa(ptr %0, ptr %1, double %2) #0 comdat !dbg !1657 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %y = alloca double, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !1661
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1661
  br i1 %4, label %panic, label %checkok, !dbg !1661

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1662, metadata !DIExpression()), !dbg !1663
  store double %2, ptr %y, align 8
  call void @llvm.dbg.declare(metadata ptr %y, metadata !1664, metadata !DIExpression()), !dbg !1665
  %5 = load ptr, ptr %self, align 8
  %6 = load double, ptr %y, align 8
  %7 = call i64 @std.io.Formatter.floatformat(ptr %retparam, ptr %5, i32 1, double %6), !dbg !1661
  %not_err = icmp eq i64 %7, 0, !dbg !1661
  %8 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1661
  br i1 %8, label %after_check, label %assign_optional, !dbg !1661

assign_optional:                                  ; preds = %checkok
  store i64 %7, ptr %reterr, align 8, !dbg !1661
  br label %err_retblock, !dbg !1661

after_check:                                      ; preds = %checkok
  %9 = load i64, ptr %retparam, align 8, !dbg !1661
  store i64 %9, ptr %0, align 8, !dbg !1661
  ret i64 0, !dbg !1661

err_retblock:                                     ; preds = %assign_optional
  %10 = load i64, ptr %reterr, align 8, !dbg !1661
  ret i64 %10, !dbg !1661

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.158, i64 4 }, ptr %indirectarg2, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 192), !dbg !1663
  unreachable, !dbg !1663
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Formatter.ftoa(ptr %0, ptr %1, double %2) #0 comdat !dbg !1666 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %y = alloca double, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !1667
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1667
  br i1 %4, label %panic, label %checkok, !dbg !1667

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1668, metadata !DIExpression()), !dbg !1669
  store double %2, ptr %y, align 8
  call void @llvm.dbg.declare(metadata ptr %y, metadata !1670, metadata !DIExpression()), !dbg !1671
  %5 = load ptr, ptr %self, align 8
  %6 = load double, ptr %y, align 8
  %7 = call i64 @std.io.Formatter.floatformat(ptr %retparam, ptr %5, i32 0, double %6), !dbg !1667
  %not_err = icmp eq i64 %7, 0, !dbg !1667
  %8 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1667
  br i1 %8, label %after_check, label %assign_optional, !dbg !1667

assign_optional:                                  ; preds = %checkok
  store i64 %7, ptr %reterr, align 8, !dbg !1667
  br label %err_retblock, !dbg !1667

after_check:                                      ; preds = %checkok
  %9 = load i64, ptr %retparam, align 8, !dbg !1667
  store i64 %9, ptr %0, align 8, !dbg !1667
  ret i64 0, !dbg !1667

err_retblock:                                     ; preds = %assign_optional
  %10 = load i64, ptr %reterr, align 8, !dbg !1667
  ret i64 %10, !dbg !1667

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.159, i64 4 }, ptr %indirectarg2, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 193), !dbg !1669
  unreachable, !dbg !1669
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Formatter.gtoa(ptr %0, ptr %1, double %2) #0 comdat !dbg !1672 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %y = alloca double, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !1673
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1673
  br i1 %4, label %panic, label %checkok, !dbg !1673

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1674, metadata !DIExpression()), !dbg !1675
  store double %2, ptr %y, align 8
  call void @llvm.dbg.declare(metadata ptr %y, metadata !1676, metadata !DIExpression()), !dbg !1677
  %5 = load ptr, ptr %self, align 8
  %6 = load double, ptr %y, align 8
  %7 = call i64 @std.io.Formatter.floatformat(ptr %retparam, ptr %5, i32 2, double %6), !dbg !1673
  %not_err = icmp eq i64 %7, 0, !dbg !1673
  %8 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1673
  br i1 %8, label %after_check, label %assign_optional, !dbg !1673

assign_optional:                                  ; preds = %checkok
  store i64 %7, ptr %reterr, align 8, !dbg !1673
  br label %err_retblock, !dbg !1673

after_check:                                      ; preds = %checkok
  %9 = load i64, ptr %retparam, align 8, !dbg !1673
  store i64 %9, ptr %0, align 8, !dbg !1673
  ret i64 0, !dbg !1673

err_retblock:                                     ; preds = %assign_optional
  %10 = load i64, ptr %reterr, align 8, !dbg !1673
  ret i64 %10, !dbg !1673

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.160, i64 4 }, ptr %indirectarg2, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 194), !dbg !1675
  unreachable, !dbg !1675
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Formatter.atoa(ptr %0, ptr %1, double %2) #0 comdat !dbg !1678 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %y = alloca double, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !1679
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !1679
  br i1 %4, label %panic, label %checkok, !dbg !1679

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1680, metadata !DIExpression()), !dbg !1681
  store double %2, ptr %y, align 8
  call void @llvm.dbg.declare(metadata ptr %y, metadata !1682, metadata !DIExpression()), !dbg !1683
  %5 = load ptr, ptr %self, align 8
  %6 = load double, ptr %y, align 8
  %7 = call i64 @std.io.Formatter.floatformat(ptr %retparam, ptr %5, i32 3, double %6), !dbg !1679
  %not_err = icmp eq i64 %7, 0, !dbg !1679
  %8 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1679
  br i1 %8, label %after_check, label %assign_optional, !dbg !1679

assign_optional:                                  ; preds = %checkok
  store i64 %7, ptr %reterr, align 8, !dbg !1679
  br label %err_retblock, !dbg !1679

after_check:                                      ; preds = %checkok
  %9 = load i64, ptr %retparam, align 8, !dbg !1679
  store i64 %9, ptr %0, align 8, !dbg !1679
  ret i64 0, !dbg !1679

err_retblock:                                     ; preds = %assign_optional
  %10 = load i64, ptr %reterr, align 8, !dbg !1679
  ret i64 %10, !dbg !1679

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.161, i64 4 }, ptr %indirectarg2, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 195), !dbg !1681
  unreachable, !dbg !1681
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.Formatter.floatformat(ptr %0, ptr %1, i32 %2, double %3) #0 !dbg !1684 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %formatting = alloca i32, align 4
  %y = alloca double, align 8
  %big = alloca [126 x i32], align 16
  %is_neg = alloca i8, align 1
  %x = alloca double, align 8
  %expr = alloca double, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %pl = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %x15 = alloca double, align 8
  %expr16 = alloca double, align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %len = alloca i64, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %s = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %error_var71 = alloca i64, align 8
  %retparam73 = alloca i64, align 8
  %error_var81 = alloca i64, align 8
  %retparam82 = alloca i64, align 8
  %indirectarg83 = alloca %"char[]", align 8
  %indirectarg92 = alloca %"char[]", align 8
  %indirectarg93 = alloca %"char[]", align 8
  %indirectarg94 = alloca %"char[]", align 8
  %error_var100 = alloca i64, align 8
  %indirectarg103 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg105 = alloca %"char[]", align 8
  %retparam111 = alloca i64, align 8
  %reterr = alloca i64, align 8
  %e2 = alloca i32, align 4
  %x120 = alloca double, align 8
  %e = alloca ptr, align 8
  %ebuf0 = alloca [12 x i8], align 1
  %ebuf = alloca ptr, align 8
  %buf_array = alloca [22 x i8], align 16
  %buf = alloca ptr, align 8
  %p = alloca i64, align 8
  %indirectarg136 = alloca %"char[]", align 8
  %indirectarg137 = alloca %"char[]", align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg145 = alloca %"char[]", align 8
  %indirectarg146 = alloca %"char[]", align 8
  %indirectarg147 = alloca %"char[]", align 8
  %round = alloca double, align 8
  %re = alloca i32, align 4
  %estr = alloca ptr, align 8
  %indirectarg177 = alloca i128, align 16
  %indirectarg183 = alloca %"char[]", align 8
  %indirectarg184 = alloca %"char[]", align 8
  %indirectarg185 = alloca %"char[]", align 8
  %indirectarg191 = alloca %"char[]", align 8
  %indirectarg192 = alloca %"char[]", align 8
  %indirectarg193 = alloca %"char[]", align 8
  %indirectarg200 = alloca %"char[]", align 8
  %indirectarg201 = alloca %"char[]", align 8
  %indirectarg202 = alloca %"char[]", align 8
  %indirectarg206 = alloca %"char[]", align 8
  %indirectarg207 = alloca %"char[]", align 8
  %indirectarg208 = alloca %"char[]", align 8
  %s214 = alloca ptr, align 8
  %xdigits = alloca ptr, align 8
  %indirectarg217 = alloca %"char[]", align 8
  %indirectarg218 = alloca %"char[]", align 8
  %indirectarg219 = alloca %"char[]", align 8
  %x228 = alloca i32, align 4
  %indirectarg232 = alloca %"char[]", align 8
  %indirectarg233 = alloca %"char[]", align 8
  %indirectarg234 = alloca %"char[]", align 8
  %indirectarg250 = alloca %"char[]", align 8
  %indirectarg251 = alloca %"char[]", align 8
  %indirectarg252 = alloca %"char[]", align 8
  %indirectarg265 = alloca %"char[]", align 8
  %indirectarg266 = alloca %"char[]", align 8
  %indirectarg267 = alloca %"char[]", align 8
  %outlen = alloca i64, align 8
  %explen = alloca i64, align 8
  %len276 = alloca i64, align 8
  %l = alloca i64, align 8
  %indirectarg292 = alloca %"char[]", align 8
  %indirectarg293 = alloca %"char[]", align 8
  %indirectarg294 = alloca %"char[]", align 8
  %indirectarg303 = alloca %"char[]", align 8
  %indirectarg304 = alloca %"char[]", align 8
  %indirectarg305 = alloca %"char[]", align 8
  %error_var313 = alloca i64, align 8
  %indirectarg316 = alloca %"char[]", align 8
  %indirectarg317 = alloca %"char[]", align 8
  %indirectarg318 = alloca %"char[]", align 8
  %retparam324 = alloca i64, align 8
  %indirectarg335 = alloca %"char[]", align 8
  %indirectarg336 = alloca %"char[]", align 8
  %indirectarg337 = alloca %"char[]", align 8
  %error_var345 = alloca i64, align 8
  %retparam347 = alloca i64, align 8
  %error_var355 = alloca i64, align 8
  %indirectarg358 = alloca %"char[]", align 8
  %indirectarg359 = alloca %"char[]", align 8
  %indirectarg360 = alloca %"char[]", align 8
  %retparam366 = alloca i64, align 8
  %indirectarg367 = alloca %"char[]", align 8
  %indirectarg376 = alloca %"char[]", align 8
  %indirectarg377 = alloca %"char[]", align 8
  %indirectarg378 = alloca %"char[]", align 8
  %error_var383 = alloca i64, align 8
  %indirectarg386 = alloca %"char[]", align 8
  %indirectarg387 = alloca %"char[]", align 8
  %indirectarg388 = alloca %"char[]", align 8
  %retparam394 = alloca i64, align 8
  %error_var402 = alloca i64, align 8
  %retparam404 = alloca i64, align 8
  %indirectarg405 = alloca %"char[]", align 8
  %error_var412 = alloca i64, align 8
  %retparam415 = alloca i64, align 8
  %error_var422 = alloca i64, align 8
  %retparam425 = alloca i64, align 8
  %indirectarg426 = alloca %"char[]", align 8
  %indirectarg435 = alloca %"char[]", align 8
  %indirectarg436 = alloca %"char[]", align 8
  %indirectarg437 = alloca %"char[]", align 8
  %error_var443 = alloca i64, align 8
  %indirectarg446 = alloca %"char[]", align 8
  %indirectarg447 = alloca %"char[]", align 8
  %indirectarg448 = alloca %"char[]", align 8
  %retparam454 = alloca i64, align 8
  %reterr462 = alloca i64, align 8
  %a = alloca ptr, align 8
  %z = alloca ptr, align 8
  %r = alloca ptr, align 8
  %v = alloca i32, align 4
  %carry = alloca i32, align 4
  %sh = alloca i32, align 4
  %x487 = alloca i32, align 4
  %y488 = alloca i32, align 4
  %d = alloca ptr, align 8
  %x492 = alloca i64, align 8
  %indirectarg495 = alloca %"char[]", align 8
  %indirectarg496 = alloca %"char[]", align 8
  %indirectarg497 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %indirectarg502 = alloca %"char[]", align 8
  %indirectarg503 = alloca %"char[]", align 8
  %indirectarg504 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg505 = alloca %"any[]", align 8
  %indirectarg511 = alloca %"char[]", align 8
  %indirectarg512 = alloca %"char[]", align 8
  %indirectarg513 = alloca %"char[]", align 8
  %indirectarg524 = alloca %"char[]", align 8
  %indirectarg525 = alloca %"char[]", align 8
  %indirectarg526 = alloca %"char[]", align 8
  %carry544 = alloca i32, align 4
  %b = alloca ptr, align 8
  %sh545 = alloca i32, align 4
  %x546 = alloca i32, align 4
  %y548 = alloca i32, align 4
  %need = alloca i32, align 4
  %d554 = alloca ptr, align 8
  %rm = alloca i32, align 4
  %indirectarg560 = alloca %"char[]", align 8
  %indirectarg561 = alloca %"char[]", align 8
  %indirectarg562 = alloca %"char[]", align 8
  %taddr565 = alloca i32, align 4
  %indirectarg566 = alloca %"char[]", align 8
  %indirectarg567 = alloca %"char[]", align 8
  %indirectarg568 = alloca %"char[]", align 8
  %varargslots569 = alloca [1 x %any], align 16
  %indirectarg571 = alloca %"any[]", align 8
  %taddr575 = alloca i32, align 4
  %indirectarg576 = alloca %"char[]", align 8
  %indirectarg577 = alloca %"char[]", align 8
  %indirectarg578 = alloca %"char[]", align 8
  %varargslots579 = alloca [1 x %any], align 16
  %indirectarg581 = alloca %"any[]", align 8
  %indirectarg588 = alloca %"char[]", align 8
  %indirectarg589 = alloca %"char[]", align 8
  %indirectarg590 = alloca %"char[]", align 8
  %indirectarg594 = alloca %"char[]", align 8
  %indirectarg595 = alloca %"char[]", align 8
  %indirectarg596 = alloca %"char[]", align 8
  %taddr600 = alloca i32, align 4
  %indirectarg601 = alloca %"char[]", align 8
  %indirectarg602 = alloca %"char[]", align 8
  %indirectarg603 = alloca %"char[]", align 8
  %varargslots604 = alloca [1 x %any], align 16
  %indirectarg606 = alloca %"any[]", align 8
  %taddr612 = alloca i32, align 4
  %indirectarg613 = alloca %"char[]", align 8
  %indirectarg614 = alloca %"char[]", align 8
  %indirectarg615 = alloca %"char[]", align 8
  %varargslots616 = alloca [1 x %any], align 16
  %indirectarg618 = alloca %"any[]", align 8
  %taddr622 = alloca i32, align 4
  %indirectarg623 = alloca %"char[]", align 8
  %indirectarg624 = alloca %"char[]", align 8
  %indirectarg625 = alloca %"char[]", align 8
  %varargslots626 = alloca [1 x %any], align 16
  %indirectarg628 = alloca %"any[]", align 8
  %e652 = alloca i32, align 4
  %i = alloca i32, align 4
  %indirectarg660 = alloca %"char[]", align 8
  %indirectarg661 = alloca %"char[]", align 8
  %indirectarg662 = alloca %"char[]", align 8
  %j = alloca i32, align 4
  %x688 = alloca i32, align 4
  %d689 = alloca ptr, align 8
  %i698 = alloca i32, align 4
  %indirectarg708 = alloca %"char[]", align 8
  %indirectarg709 = alloca %"char[]", align 8
  %indirectarg710 = alloca %"char[]", align 8
  %indirectarg713 = alloca %"char[]", align 8
  %indirectarg714 = alloca %"char[]", align 8
  %indirectarg715 = alloca %"char[]", align 8
  %round725 = alloca double, align 8
  %small = alloca double, align 8
  %indirectarg728 = alloca %"char[]", align 8
  %indirectarg729 = alloca %"char[]", align 8
  %indirectarg730 = alloca %"char[]", align 8
  %indirectarg734 = alloca %"char[]", align 8
  %indirectarg735 = alloca %"char[]", align 8
  %indirectarg736 = alloca %"char[]", align 8
  %switch = alloca i8, align 1
  %indirectarg783 = alloca %"char[]", align 8
  %indirectarg784 = alloca %"char[]", align 8
  %indirectarg785 = alloca %"char[]", align 8
  %indirectarg793 = alloca %"char[]", align 8
  %indirectarg794 = alloca %"char[]", align 8
  %indirectarg795 = alloca %"char[]", align 8
  %indirectarg799 = alloca %"char[]", align 8
  %indirectarg800 = alloca %"char[]", align 8
  %indirectarg801 = alloca %"char[]", align 8
  %indirectarg807 = alloca %"char[]", align 8
  %indirectarg808 = alloca %"char[]", align 8
  %indirectarg809 = alloca %"char[]", align 8
  %indirectarg816 = alloca %"char[]", align 8
  %indirectarg817 = alloca %"char[]", align 8
  %indirectarg818 = alloca %"char[]", align 8
  %indirectarg825 = alloca %"char[]", align 8
  %indirectarg826 = alloca %"char[]", align 8
  %indirectarg827 = alloca %"char[]", align 8
  %indirectarg832 = alloca %"char[]", align 8
  %indirectarg833 = alloca %"char[]", align 8
  %indirectarg834 = alloca %"char[]", align 8
  %indirectarg843 = alloca %"char[]", align 8
  %indirectarg844 = alloca %"char[]", align 8
  %indirectarg845 = alloca %"char[]", align 8
  %indirectarg893 = alloca %"char[]", align 8
  %indirectarg894 = alloca %"char[]", align 8
  %indirectarg895 = alloca %"char[]", align 8
  %i909 = alloca i32, align 4
  %indirectarg914 = alloca %"char[]", align 8
  %indirectarg915 = alloca %"char[]", align 8
  %indirectarg916 = alloca %"char[]", align 8
  %x928 = alloca i64, align 8
  %x929 = alloca i64, align 8
  %y934 = alloca i64, align 8
  %y935 = alloca i64, align 8
  %x937 = alloca i64, align 8
  %x938 = alloca i64, align 8
  %y945 = alloca i64, align 8
  %y946 = alloca i64, align 8
  %indirectarg954 = alloca %"char[]", align 8
  %indirectarg955 = alloca %"char[]", align 8
  %indirectarg956 = alloca %"char[]", align 8
  %l968 = alloca i32, align 4
  %indirectarg974 = alloca %"char[]", align 8
  %indirectarg975 = alloca %"char[]", align 8
  %indirectarg976 = alloca %"char[]", align 8
  %estr986 = alloca ptr, align 8
  %indirectarg1005 = alloca i128, align 16
  %indirectarg1014 = alloca %"char[]", align 8
  %indirectarg1015 = alloca %"char[]", align 8
  %indirectarg1016 = alloca %"char[]", align 8
  %indirectarg1023 = alloca %"char[]", align 8
  %indirectarg1024 = alloca %"char[]", align 8
  %indirectarg1025 = alloca %"char[]", align 8
  %indirectarg1029 = alloca %"char[]", align 8
  %indirectarg1030 = alloca %"char[]", align 8
  %indirectarg1031 = alloca %"char[]", align 8
  %len1050 = alloca i64, align 8
  %indirectarg1053 = alloca %"char[]", align 8
  %indirectarg1054 = alloca %"char[]", align 8
  %indirectarg1055 = alloca %"char[]", align 8
  %indirectarg1064 = alloca %"char[]", align 8
  %indirectarg1065 = alloca %"char[]", align 8
  %indirectarg1066 = alloca %"char[]", align 8
  %error_var1074 = alloca i64, align 8
  %indirectarg1077 = alloca %"char[]", align 8
  %indirectarg1078 = alloca %"char[]", align 8
  %indirectarg1079 = alloca %"char[]", align 8
  %retparam1086 = alloca i64, align 8
  %indirectarg1097 = alloca %"char[]", align 8
  %indirectarg1098 = alloca %"char[]", align 8
  %indirectarg1099 = alloca %"char[]", align 8
  %error_var1107 = alloca i64, align 8
  %retparam1109 = alloca i64, align 8
  %indirectarg1119 = alloca %"char[]", align 8
  %indirectarg1120 = alloca %"char[]", align 8
  %indirectarg1121 = alloca %"char[]", align 8
  %error_var1126 = alloca i64, align 8
  %indirectarg1129 = alloca %"char[]", align 8
  %indirectarg1130 = alloca %"char[]", align 8
  %indirectarg1131 = alloca %"char[]", align 8
  %retparam1138 = alloca i64, align 8
  %d1151 = alloca ptr, align 8
  %s1155 = alloca ptr, align 8
  %indirectarg1158 = alloca %"char[]", align 8
  %indirectarg1159 = alloca %"char[]", align 8
  %indirectarg1160 = alloca %"char[]", align 8
  %indirectarg1164 = alloca i128, align 16
  %switch1165 = alloca i8, align 1
  %indirectarg1183 = alloca %"char[]", align 8
  %indirectarg1184 = alloca %"char[]", align 8
  %indirectarg1185 = alloca %"char[]", align 8
  %error_var1189 = alloca i64, align 8
  %retparam1193 = alloca i64, align 8
  %indirectarg1194 = alloca %"char[]", align 8
  %indirectarg1207 = alloca %"char[]", align 8
  %indirectarg1208 = alloca %"char[]", align 8
  %indirectarg1209 = alloca %"char[]", align 8
  %error_var1217 = alloca i64, align 8
  %retparam1218 = alloca i64, align 8
  %s1233 = alloca ptr, align 8
  %indirectarg1236 = alloca %"char[]", align 8
  %indirectarg1237 = alloca %"char[]", align 8
  %indirectarg1238 = alloca %"char[]", align 8
  %indirectarg1242 = alloca i128, align 16
  %indirectarg1249 = alloca %"char[]", align 8
  %indirectarg1250 = alloca %"char[]", align 8
  %indirectarg1251 = alloca %"char[]", align 8
  %error_var1254 = alloca i64, align 8
  %x1255 = alloca i64, align 8
  %y1256 = alloca i64, align 8
  %retparam1259 = alloca i64, align 8
  %indirectarg1260 = alloca %"char[]", align 8
  %error_var1270 = alloca i64, align 8
  %retparam1272 = alloca i64, align 8
  %d1284 = alloca ptr, align 8
  %s1292 = alloca ptr, align 8
  %indirectarg1295 = alloca %"char[]", align 8
  %indirectarg1296 = alloca %"char[]", align 8
  %indirectarg1297 = alloca %"char[]", align 8
  %indirectarg1301 = alloca i128, align 16
  %error_var1315 = alloca i64, align 8
  %retparam1317 = alloca i64, align 8
  %indirectarg1328 = alloca %"char[]", align 8
  %indirectarg1329 = alloca %"char[]", align 8
  %indirectarg1330 = alloca %"char[]", align 8
  %error_var1338 = alloca i64, align 8
  %retparam1339 = alloca i64, align 8
  %error_var1348 = alloca i64, align 8
  %x1350 = alloca i64, align 8
  %y1351 = alloca i64, align 8
  %retparam1354 = alloca i64, align 8
  %indirectarg1355 = alloca %"char[]", align 8
  %error_var1366 = alloca i64, align 8
  %retparam1368 = alloca i64, align 8
  %error_var1375 = alloca i64, align 8
  %retparam1378 = alloca i64, align 8
  %indirectarg1379 = alloca %"char[]", align 8
  %indirectarg1389 = alloca %"char[]", align 8
  %indirectarg1390 = alloca %"char[]", align 8
  %indirectarg1391 = alloca %"char[]", align 8
  %error_var1397 = alloca i64, align 8
  %indirectarg1400 = alloca %"char[]", align 8
  %indirectarg1401 = alloca %"char[]", align 8
  %indirectarg1402 = alloca %"char[]", align 8
  %retparam1409 = alloca i64, align 8
  %reterr1417 = alloca i64, align 8
  %4 = icmp eq ptr %1, null, !dbg !1687
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !1687
  br i1 %5, label %panic, label %checkok, !dbg !1687

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !1688, metadata !DIExpression()), !dbg !1689
  store i32 %2, ptr %formatting, align 4
  call void @llvm.dbg.declare(metadata ptr %formatting, metadata !1690, metadata !DIExpression()), !dbg !1691
  store double %3, ptr %y, align 8
  call void @llvm.dbg.declare(metadata ptr %y, metadata !1692, metadata !DIExpression()), !dbg !1693
  call void @llvm.dbg.declare(metadata ptr %big, metadata !1694, metadata !DIExpression()), !dbg !1698
  call void @llvm.memset.p0.i64(ptr align 16 %big, i8 0, i64 504, i1 false), !dbg !1698
  call void @llvm.dbg.declare(metadata ptr %is_neg, metadata !1699, metadata !DIExpression()), !dbg !1700
  store i8 0, ptr %is_neg, align 1, !dbg !1701
  %6 = load double, ptr %y, align 8
  store double %6, ptr %x, align 8
  %7 = load double, ptr %x, align 8
  store double %7, ptr %expr, align 8
  %checknull = icmp eq ptr %expr, null, !dbg !1702
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !1702
  br i1 %8, label %panic3, label %checkok7, !dbg !1702

checkok7:                                         ; preds = %checkok
  %9 = load i64, ptr %expr, align 8, !dbg !1708
  %lshr = lshr i64 %9, 63, !dbg !1709
  %10 = freeze i64 %lshr, !dbg !1709
  %trunc = trunc i64 %10 to i32, !dbg !1709
  %intbool = icmp ne i32 %trunc, 0, !dbg !1709
  br i1 %intbool, label %if.then, label %if.exit, !dbg !1709

if.then:                                          ; preds = %checkok7
  store i8 1, ptr %is_neg, align 1, !dbg !1710
  %11 = load double, ptr %y, align 8, !dbg !1712
  %fneg = fneg double %11, !dbg !1712
  store double %fneg, ptr %y, align 8, !dbg !1712
  br label %if.exit, !dbg !1712

if.exit:                                          ; preds = %if.then, %checkok7
  call void @llvm.dbg.declare(metadata ptr %pl, metadata !1713, metadata !DIExpression()), !dbg !1714
  %12 = load i8, ptr %is_neg, align 1, !dbg !1715
  %13 = trunc i8 %12 to i1, !dbg !1715
  br i1 %13, label %or.phi, label %or.rhs, !dbg !1715

or.rhs:                                           ; preds = %if.exit
  %14 = load ptr, ptr %self, align 8, !dbg !1716
  %checknull8 = icmp eq ptr %14, null, !dbg !1716
  %15 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !1716
  br i1 %15, label %panic9, label %checkok13, !dbg !1716

checkok13:                                        ; preds = %or.rhs
  %ptradd = getelementptr inbounds i8, ptr %14, i64 16, !dbg !1716
  %16 = load i32, ptr %ptradd, align 8, !dbg !1716
  %lshrl = lshr i32 %16, 2, !dbg !1716
  %17 = and i32 1, %lshrl, !dbg !1716
  %trunc14 = trunc i32 %17 to i8, !dbg !1716
  %18 = trunc i8 %trunc14 to i1, !dbg !1716
  br label %or.phi, !dbg !1716

or.phi:                                           ; preds = %checkok13, %if.exit
  %val = phi i1 [ true, %if.exit ], [ %18, %checkok13 ], !dbg !1716
  %ternary = select i1 %val, i64 1, i64 0, !dbg !1717
  store i64 %ternary, ptr %pl, align 8, !dbg !1717
  %19 = load double, ptr %y, align 8
  store double %19, ptr %x15, align 8
  %20 = load double, ptr %x15, align 8
  store double %20, ptr %expr16, align 8
  %checknull17 = icmp eq ptr %expr16, null, !dbg !1718
  %21 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !1718
  br i1 %21, label %panic18, label %checkok22, !dbg !1718

checkok22:                                        ; preds = %or.phi
  %22 = load i64, ptr %expr16, align 8, !dbg !1723
  %and = and i64 %22, 9223372036854775807, !dbg !1720
  %lt = icmp ult i64 %and, 9218868437227405312, !dbg !1720
  %not = xor i1 %lt, true, !dbg !1720
  br i1 %not, label %if.then23, label %if.exit119, !dbg !1720

if.then23:                                        ; preds = %checkok22
  call void @llvm.dbg.declare(metadata ptr %len, metadata !1724, metadata !DIExpression()), !dbg !1726
  store i64 0, ptr %len, align 8, !dbg !1726
  %23 = load ptr, ptr %self, align 8, !dbg !1727
  %checknull24 = icmp eq ptr %23, null, !dbg !1727
  %24 = call i1 @llvm.expect.i1(i1 %checknull24, i1 false), !dbg !1727
  br i1 %24, label %panic25, label %checkok29, !dbg !1727

checkok29:                                        ; preds = %if.then23
  %ptradd30 = getelementptr inbounds i8, ptr %23, i64 16, !dbg !1727
  %25 = load i32, ptr %ptradd30, align 8, !dbg !1727
  %lshrl31 = lshr i32 %25, 1, !dbg !1727
  %26 = and i32 1, %lshrl31, !dbg !1727
  %trunc32 = trunc i32 %26 to i8, !dbg !1727
  %27 = trunc i8 %trunc32 to i1, !dbg !1727
  %not33 = xor i1 %27, true, !dbg !1727
  br i1 %not33, label %if.then34, label %if.exit44, !dbg !1727

if.then34:                                        ; preds = %checkok29
  %28 = load i64, ptr %len, align 8, !dbg !1728
  %29 = load ptr, ptr %self, align 8, !dbg !1729
  %checknull35 = icmp eq ptr %29, null, !dbg !1729
  %30 = call i1 @llvm.expect.i1(i1 %checknull35, i1 false), !dbg !1729
  br i1 %30, label %panic36, label %checkok40, !dbg !1729

checkok40:                                        ; preds = %if.then34
  %ptradd41 = getelementptr inbounds i8, ptr %29, i64 16, !dbg !1729
  %ptradd42 = getelementptr inbounds i8, ptr %ptradd41, i64 4, !dbg !1729
  %31 = load i32, ptr %ptradd42, align 4, !dbg !1729
  %zext = zext i32 %31 to i64, !dbg !1729
  %32 = load i64, ptr %pl, align 8, !dbg !1730
  %add = add i64 3, %32, !dbg !1731
  %33 = load ptr, ptr %self, align 8
  %34 = call i64 @std.io.Formatter.pad(ptr %retparam, ptr %33, i8 32, i64 %zext, i64 %add) #5, !dbg !1732
  %not_err = icmp eq i64 %34, 0, !dbg !1732
  %35 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !1732
  br i1 %35, label %after_check, label %assign_optional, !dbg !1732

assign_optional:                                  ; preds = %checkok40
  store i64 %34, ptr %error_var, align 8, !dbg !1732
  br label %guard_block, !dbg !1732

after_check:                                      ; preds = %checkok40
  br label %noerr_block, !dbg !1732

guard_block:                                      ; preds = %assign_optional
  %36 = load i64, ptr %error_var, align 8, !dbg !1732
  ret i64 %36, !dbg !1732

noerr_block:                                      ; preds = %after_check
  %37 = load i64, ptr %retparam, align 8, !dbg !1732
  %add43 = add i64 %28, %37, !dbg !1728
  store i64 %add43, ptr %len, align 8, !dbg !1728
  br label %if.exit44, !dbg !1728

if.exit44:                                        ; preds = %noerr_block, %checkok29
  call void @llvm.dbg.declare(metadata ptr %s, metadata !1733, metadata !DIExpression()), !dbg !1734
  %38 = load ptr, ptr %self, align 8, !dbg !1735
  %checknull45 = icmp eq ptr %38, null, !dbg !1735
  %39 = call i1 @llvm.expect.i1(i1 %checknull45, i1 false), !dbg !1735
  br i1 %39, label %panic46, label %checkok50, !dbg !1735

checkok50:                                        ; preds = %if.exit44
  %ptradd51 = getelementptr inbounds i8, ptr %38, i64 16, !dbg !1735
  %40 = load i32, ptr %ptradd51, align 8, !dbg !1735
  %lshrl52 = lshr i32 %40, 5, !dbg !1735
  %41 = and i32 1, %lshrl52, !dbg !1735
  %trunc53 = trunc i32 %41 to i8, !dbg !1735
  %42 = trunc i8 %trunc53 to i1, !dbg !1735
  %ternary54 = select i1 %42, %"char[]" { ptr @.str.163, i64 3 }, %"char[]" { ptr @.str.164, i64 3 }, !dbg !1736
  store %"char[]" %ternary54, ptr %s, align 8, !dbg !1736
  %43 = load double, ptr %y, align 8, !dbg !1737
  %44 = load double, ptr %y, align 8, !dbg !1738
  %neq = fcmp one double %43, %44, !dbg !1737
  br i1 %neq, label %if.then55, label %if.exit66, !dbg !1737

if.then55:                                        ; preds = %checkok50
  %45 = load ptr, ptr %self, align 8, !dbg !1739
  %checknull56 = icmp eq ptr %45, null, !dbg !1739
  %46 = call i1 @llvm.expect.i1(i1 %checknull56, i1 false), !dbg !1739
  br i1 %46, label %panic57, label %checkok61, !dbg !1739

checkok61:                                        ; preds = %if.then55
  %ptradd62 = getelementptr inbounds i8, ptr %45, i64 16, !dbg !1739
  %47 = load i32, ptr %ptradd62, align 8, !dbg !1739
  %lshrl63 = lshr i32 %47, 5, !dbg !1739
  %48 = and i32 1, %lshrl63, !dbg !1739
  %trunc64 = trunc i32 %48 to i8, !dbg !1739
  %49 = trunc i8 %trunc64 to i1, !dbg !1739
  %ternary65 = select i1 %49, %"char[]" { ptr @.str.165, i64 3 }, %"char[]" { ptr @.str.166, i64 3 }, !dbg !1740
  store %"char[]" %ternary65, ptr %s, align 8, !dbg !1740
  br label %if.exit66, !dbg !1740

if.exit66:                                        ; preds = %checkok61, %checkok50
  %50 = load i64, ptr %len, align 8, !dbg !1741
  %ptradd67 = getelementptr inbounds i8, ptr %s, i64 8, !dbg !1742
  %51 = load i64, ptr %ptradd67, align 8, !dbg !1742
  %add68 = add i64 %50, %51, !dbg !1741
  store i64 %add68, ptr %len, align 8, !dbg !1741
  %52 = load i64, ptr %pl, align 8, !dbg !1743
  %intbool69 = icmp ne i64 %52, 0, !dbg !1743
  br i1 %intbool69, label %if.then70, label %if.exit80, !dbg !1743

if.then70:                                        ; preds = %if.exit66
  %53 = load i64, ptr %len, align 8, !dbg !1744
  %54 = load i8, ptr %is_neg, align 1, !dbg !1745
  %55 = trunc i8 %54 to i1, !dbg !1745
  %ternary72 = select i1 %55, i8 45, i8 43, !dbg !1746
  %56 = load ptr, ptr %self, align 8
  %57 = call i64 @std.io.Formatter.out(ptr %retparam73, ptr %56, i8 %ternary72), !dbg !1747
  %not_err74 = icmp eq i64 %57, 0, !dbg !1747
  %58 = call i1 @llvm.expect.i1(i1 %not_err74, i1 true), !dbg !1747
  br i1 %58, label %after_check76, label %assign_optional75, !dbg !1747

assign_optional75:                                ; preds = %if.then70
  store i64 %57, ptr %error_var71, align 8, !dbg !1747
  br label %guard_block77, !dbg !1747

after_check76:                                    ; preds = %if.then70
  br label %noerr_block78, !dbg !1747

guard_block77:                                    ; preds = %assign_optional75
  %59 = load i64, ptr %error_var71, align 8, !dbg !1747
  ret i64 %59, !dbg !1747

noerr_block78:                                    ; preds = %after_check76
  %60 = load i64, ptr %retparam73, align 8, !dbg !1747
  %add79 = add i64 %53, %60, !dbg !1744
  store i64 %add79, ptr %len, align 8, !dbg !1744
  br label %if.exit80, !dbg !1744

if.exit80:                                        ; preds = %noerr_block78, %if.exit66
  %61 = load i64, ptr %len, align 8, !dbg !1748
  %62 = load ptr, ptr %self, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg83, ptr align 8 %s, i32 16, i1 false)
  %63 = call i64 @std.io.Formatter.out_chars(ptr %retparam82, ptr %62, ptr align 8 %indirectarg83), !dbg !1749
  %not_err84 = icmp eq i64 %63, 0, !dbg !1749
  %64 = call i1 @llvm.expect.i1(i1 %not_err84, i1 true), !dbg !1749
  br i1 %64, label %after_check86, label %assign_optional85, !dbg !1749

assign_optional85:                                ; preds = %if.exit80
  store i64 %63, ptr %error_var81, align 8, !dbg !1749
  br label %guard_block87, !dbg !1749

after_check86:                                    ; preds = %if.exit80
  br label %noerr_block88, !dbg !1749

guard_block87:                                    ; preds = %assign_optional85
  %65 = load i64, ptr %error_var81, align 8, !dbg !1749
  ret i64 %65, !dbg !1749

noerr_block88:                                    ; preds = %after_check86
  %66 = load i64, ptr %retparam82, align 8, !dbg !1749
  %add89 = add i64 %61, %66, !dbg !1748
  store i64 %add89, ptr %len, align 8, !dbg !1748
  %67 = load ptr, ptr %self, align 8, !dbg !1750
  %checknull90 = icmp eq ptr %67, null, !dbg !1750
  %68 = call i1 @llvm.expect.i1(i1 %checknull90, i1 false), !dbg !1750
  br i1 %68, label %panic91, label %checkok95, !dbg !1750

checkok95:                                        ; preds = %noerr_block88
  %ptradd96 = getelementptr inbounds i8, ptr %67, i64 16, !dbg !1750
  %69 = load i32, ptr %ptradd96, align 8, !dbg !1750
  %lshrl97 = lshr i32 %69, 1, !dbg !1750
  %70 = and i32 1, %lshrl97, !dbg !1750
  %trunc98 = trunc i32 %70 to i8, !dbg !1750
  %71 = trunc i8 %trunc98 to i1, !dbg !1750
  br i1 %71, label %if.then99, label %if.exit118, !dbg !1750

if.then99:                                        ; preds = %checkok95
  %72 = load i64, ptr %len, align 8, !dbg !1751
  %73 = load ptr, ptr %self, align 8, !dbg !1752
  %checknull101 = icmp eq ptr %73, null, !dbg !1752
  %74 = call i1 @llvm.expect.i1(i1 %checknull101, i1 false), !dbg !1752
  br i1 %74, label %panic102, label %checkok106, !dbg !1752

checkok106:                                       ; preds = %if.then99
  %ptradd107 = getelementptr inbounds i8, ptr %73, i64 16, !dbg !1752
  %ptradd108 = getelementptr inbounds i8, ptr %ptradd107, i64 4, !dbg !1752
  %75 = load i32, ptr %ptradd108, align 4, !dbg !1752
  %zext109 = zext i32 %75 to i64, !dbg !1752
  %76 = load i64, ptr %pl, align 8, !dbg !1753
  %add110 = add i64 3, %76, !dbg !1754
  %77 = load ptr, ptr %self, align 8
  %78 = call i64 @std.io.Formatter.pad(ptr %retparam111, ptr %77, i8 32, i64 %zext109, i64 %add110) #5, !dbg !1755
  %not_err112 = icmp eq i64 %78, 0, !dbg !1755
  %79 = call i1 @llvm.expect.i1(i1 %not_err112, i1 true), !dbg !1755
  br i1 %79, label %after_check114, label %assign_optional113, !dbg !1755

assign_optional113:                               ; preds = %checkok106
  store i64 %78, ptr %error_var100, align 8, !dbg !1755
  br label %guard_block115, !dbg !1755

after_check114:                                   ; preds = %checkok106
  br label %noerr_block116, !dbg !1755

guard_block115:                                   ; preds = %assign_optional113
  %80 = load i64, ptr %error_var100, align 8, !dbg !1755
  ret i64 %80, !dbg !1755

noerr_block116:                                   ; preds = %after_check114
  %81 = load i64, ptr %retparam111, align 8, !dbg !1755
  %add117 = add i64 %72, %81, !dbg !1751
  store i64 %add117, ptr %len, align 8, !dbg !1751
  br label %if.exit118, !dbg !1751

if.exit118:                                       ; preds = %noerr_block116, %checkok95
  %82 = load i64, ptr %len, align 8, !dbg !1756
  store i64 %82, ptr %0, align 8, !dbg !1756
  ret i64 0, !dbg !1756

if.exit119:                                       ; preds = %checkok22
  call void @llvm.dbg.declare(metadata ptr %e2, metadata !1757, metadata !DIExpression()), !dbg !1758
  store i32 0, ptr %e2, align 4, !dbg !1758
  %83 = load double, ptr %y, align 8
  store double %83, ptr %x120, align 8
  store ptr %e2, ptr %e, align 8
  %84 = load double, ptr %x120, align 8, !dbg !1759
  %85 = load ptr, ptr %e, align 8, !dbg !1759
  %86 = call double @std.math._frexp(double %84, ptr %85), !dbg !1762
  %fmul = fmul double %86, 2.000000e+00, !dbg !1761
  store double %fmul, ptr %y, align 8, !dbg !1761
  %87 = load double, ptr %y, align 8, !dbg !1763
  %fpbool = fcmp une double %87, 0.000000e+00, !dbg !1763
  br i1 %fpbool, label %if.then121, label %if.exit122, !dbg !1763

if.then121:                                       ; preds = %if.exit119
  %88 = load i32, ptr %e2, align 4, !dbg !1764
  %sub = sub i32 %88, 1, !dbg !1764
  store i32 %sub, ptr %e2, align 4, !dbg !1764
  br label %if.exit122, !dbg !1764

if.exit122:                                       ; preds = %if.then121, %if.exit119
  call void @llvm.dbg.declare(metadata ptr %ebuf0, metadata !1765, metadata !DIExpression()), !dbg !1769
  store i8 0, ptr %ebuf0, align 1, !dbg !1769
  %ptradd123 = getelementptr inbounds i8, ptr %ebuf0, i64 1, !dbg !1769
  store i8 0, ptr %ptradd123, align 1, !dbg !1769
  %ptradd124 = getelementptr inbounds i8, ptr %ebuf0, i64 2, !dbg !1769
  store i8 0, ptr %ptradd124, align 1, !dbg !1769
  %ptradd125 = getelementptr inbounds i8, ptr %ebuf0, i64 3, !dbg !1769
  store i8 0, ptr %ptradd125, align 1, !dbg !1769
  %ptradd126 = getelementptr inbounds i8, ptr %ebuf0, i64 4, !dbg !1769
  store i8 0, ptr %ptradd126, align 1, !dbg !1769
  %ptradd127 = getelementptr inbounds i8, ptr %ebuf0, i64 5, !dbg !1769
  store i8 0, ptr %ptradd127, align 1, !dbg !1769
  %ptradd128 = getelementptr inbounds i8, ptr %ebuf0, i64 6, !dbg !1769
  store i8 0, ptr %ptradd128, align 1, !dbg !1769
  %ptradd129 = getelementptr inbounds i8, ptr %ebuf0, i64 7, !dbg !1769
  store i8 0, ptr %ptradd129, align 1, !dbg !1769
  %ptradd130 = getelementptr inbounds i8, ptr %ebuf0, i64 8, !dbg !1769
  store i8 0, ptr %ptradd130, align 1, !dbg !1769
  %ptradd131 = getelementptr inbounds i8, ptr %ebuf0, i64 9, !dbg !1769
  store i8 0, ptr %ptradd131, align 1, !dbg !1769
  %ptradd132 = getelementptr inbounds i8, ptr %ebuf0, i64 10, !dbg !1769
  store i8 0, ptr %ptradd132, align 1, !dbg !1769
  %ptradd133 = getelementptr inbounds i8, ptr %ebuf0, i64 11, !dbg !1769
  store i8 0, ptr %ptradd133, align 1, !dbg !1769
  call void @llvm.dbg.declare(metadata ptr %ebuf, metadata !1770, metadata !DIExpression()), !dbg !1771
  %ptradd_any = getelementptr i8, ptr %ebuf0, i64 12, !dbg !1772
  store ptr %ptradd_any, ptr %ebuf, align 8, !dbg !1772
  call void @llvm.dbg.declare(metadata ptr %buf_array, metadata !1773, metadata !DIExpression()), !dbg !1777
  call void @llvm.memset.p0.i64(ptr align 16 %buf_array, i8 0, i64 22, i1 false), !dbg !1777
  call void @llvm.dbg.declare(metadata ptr %buf, metadata !1778, metadata !DIExpression()), !dbg !1779
  store ptr %buf_array, ptr %buf, align 8, !dbg !1780
  call void @llvm.dbg.declare(metadata ptr %p, metadata !1781, metadata !DIExpression()), !dbg !1782
  %89 = load ptr, ptr %self, align 8, !dbg !1783
  %checknull134 = icmp eq ptr %89, null, !dbg !1783
  %90 = call i1 @llvm.expect.i1(i1 %checknull134, i1 false), !dbg !1783
  br i1 %90, label %panic135, label %checkok139, !dbg !1783

checkok139:                                       ; preds = %if.exit122
  %ptradd140 = getelementptr inbounds i8, ptr %89, i64 16, !dbg !1783
  %91 = load i32, ptr %ptradd140, align 8, !dbg !1783
  %lshrl141 = lshr i32 %91, 6, !dbg !1783
  %92 = and i32 1, %lshrl141, !dbg !1783
  %trunc142 = trunc i32 %92 to i8, !dbg !1783
  %93 = trunc i8 %trunc142 to i1, !dbg !1783
  br i1 %93, label %cond.lhs, label %cond.rhs, !dbg !1783

cond.lhs:                                         ; preds = %checkok139
  %94 = load ptr, ptr %self, align 8, !dbg !1784
  %checknull143 = icmp eq ptr %94, null, !dbg !1784
  %95 = call i1 @llvm.expect.i1(i1 %checknull143, i1 false), !dbg !1784
  br i1 %95, label %panic144, label %checkok148, !dbg !1784

checkok148:                                       ; preds = %cond.lhs
  %ptradd149 = getelementptr inbounds i8, ptr %94, i64 16, !dbg !1784
  %ptradd150 = getelementptr inbounds i8, ptr %ptradd149, i64 8, !dbg !1784
  %96 = load i32, ptr %ptradd150, align 8, !dbg !1784
  br label %cond.phi, !dbg !1784

cond.rhs:                                         ; preds = %checkok139
  br label %cond.phi, !dbg !1785

cond.phi:                                         ; preds = %cond.rhs, %checkok148
  %val151 = phi i32 [ %96, %checkok148 ], [ -1, %cond.rhs ], !dbg !1785
  %sext = sext i32 %val151 to i64, !dbg !1785
  store i64 %sext, ptr %p, align 8, !dbg !1785
  %97 = load i32, ptr %formatting, align 4, !dbg !1786
  %eq = icmp eq i32 %97, 3, !dbg !1786
  br i1 %eq, label %if.then152, label %if.exit463, !dbg !1786

if.then152:                                       ; preds = %cond.phi
  call void @llvm.dbg.declare(metadata ptr %round, metadata !1787, metadata !DIExpression()), !dbg !1789
  store double 8.000000e+00, ptr %round, align 8, !dbg !1790
  %98 = load i64, ptr %pl, align 8, !dbg !1791
  %add153 = add i64 %98, 2, !dbg !1791
  store i64 %add153, ptr %pl, align 8, !dbg !1791
  %99 = load i64, ptr %p, align 8, !dbg !1792
  %gt = icmp sgt i64 %99, 0, !dbg !1792
  br i1 %gt, label %and.rhs, label %and.phi, !dbg !1792

and.rhs:                                          ; preds = %if.then152
  %100 = load i64, ptr %p, align 8, !dbg !1793
  %lt154 = icmp slt i64 %100, 12, !dbg !1793
  br label %and.phi, !dbg !1793

and.phi:                                          ; preds = %and.rhs, %if.then152
  %val155 = phi i1 [ false, %if.then152 ], [ %lt154, %and.rhs ], !dbg !1793
  br i1 %val155, label %if.then156, label %if.exit169, !dbg !1793

if.then156:                                       ; preds = %and.phi
  call void @llvm.dbg.declare(metadata ptr %re, metadata !1794, metadata !DIExpression()), !dbg !1796
  %101 = load i64, ptr %p, align 8, !dbg !1797
  %trunc157 = trunc i64 %101 to i32, !dbg !1797
  %sub158 = sub i32 12, %trunc157, !dbg !1798
  store i32 %sub158, ptr %re, align 4, !dbg !1798
  %102 = load double, ptr %round, align 8, !dbg !1799
  %fmul159 = fmul double %102, 2.000000e+00, !dbg !1799
  store double %fmul159, ptr %round, align 8, !dbg !1799
  br label %loop.cond, !dbg !1800

loop.cond:                                        ; preds = %loop.body, %if.then156
  %103 = load i32, ptr %re, align 4, !dbg !1801
  %sub160 = sub i32 %103, 1, !dbg !1801
  store i32 %sub160, ptr %re, align 4, !dbg !1801
  %intbool161 = icmp ne i32 %103, 0, !dbg !1801
  br i1 %intbool161, label %loop.body, label %loop.exit, !dbg !1801

loop.body:                                        ; preds = %loop.cond
  %104 = load double, ptr %round, align 8, !dbg !1803
  %fmul162 = fmul double %104, 1.600000e+01, !dbg !1803
  store double %fmul162, ptr %round, align 8, !dbg !1803
  br label %loop.cond, !dbg !1803

loop.exit:                                        ; preds = %loop.cond
  %105 = load i8, ptr %is_neg, align 1, !dbg !1804
  %106 = trunc i8 %105 to i1, !dbg !1804
  br i1 %106, label %if.then163, label %if.else, !dbg !1804

if.then163:                                       ; preds = %loop.exit
  %107 = load double, ptr %y, align 8, !dbg !1805
  %fneg164 = fneg double %107, !dbg !1805
  store double %fneg164, ptr %y, align 8, !dbg !1805
  %108 = load double, ptr %y, align 8, !dbg !1807
  %109 = load double, ptr %round, align 8, !dbg !1808
  %fsub = fsub double %108, %109, !dbg !1807
  store double %fsub, ptr %y, align 8, !dbg !1807
  %110 = load double, ptr %y, align 8, !dbg !1809
  %111 = load double, ptr %round, align 8, !dbg !1810
  %fadd = fadd double %110, %111, !dbg !1809
  store double %fadd, ptr %y, align 8, !dbg !1809
  %112 = load double, ptr %y, align 8, !dbg !1811
  %fneg165 = fneg double %112, !dbg !1811
  store double %fneg165, ptr %y, align 8, !dbg !1811
  br label %if.exit168, !dbg !1811

if.else:                                          ; preds = %loop.exit
  %113 = load double, ptr %y, align 8, !dbg !1812
  %114 = load double, ptr %round, align 8, !dbg !1814
  %fadd166 = fadd double %113, %114, !dbg !1812
  store double %fadd166, ptr %y, align 8, !dbg !1812
  %115 = load double, ptr %y, align 8, !dbg !1815
  %116 = load double, ptr %round, align 8, !dbg !1816
  %fsub167 = fsub double %115, %116, !dbg !1815
  store double %fsub167, ptr %y, align 8, !dbg !1815
  br label %if.exit168, !dbg !1815

if.exit168:                                       ; preds = %if.else, %if.then163
  br label %if.exit169, !dbg !1815

if.exit169:                                       ; preds = %if.exit168, %and.phi
  call void @llvm.dbg.declare(metadata ptr %estr, metadata !1817, metadata !DIExpression()), !dbg !1818
  %117 = load i32, ptr %e2, align 4, !dbg !1819
  %lt170 = icmp slt i32 %117, 0, !dbg !1819
  br i1 %lt170, label %cond.lhs171, label %cond.rhs173, !dbg !1819

cond.lhs171:                                      ; preds = %if.exit169
  %118 = load i32, ptr %e2, align 4, !dbg !1820
  %neg = sub i32 0, %118, !dbg !1820
  %sext172 = sext i32 %neg to i128, !dbg !1820
  br label %cond.phi175, !dbg !1820

cond.rhs173:                                      ; preds = %if.exit169
  %119 = load i32, ptr %e2, align 4, !dbg !1821
  %sext174 = sext i32 %119 to i128, !dbg !1821
  br label %cond.phi175, !dbg !1821

cond.phi175:                                      ; preds = %cond.rhs173, %cond.lhs171
  %val176 = phi i128 [ %sext172, %cond.lhs171 ], [ %sext174, %cond.rhs173 ], !dbg !1821
  store i128 %val176, ptr %indirectarg177, align 16
  %120 = load ptr, ptr %ebuf, align 8
  %121 = call ptr @std.io.fmt_u(ptr align 16 %indirectarg177, ptr %120), !dbg !1822
  store ptr %121, ptr %estr, align 8, !dbg !1822
  %122 = load ptr, ptr %estr, align 8, !dbg !1823
  %123 = load ptr, ptr %ebuf, align 8, !dbg !1824
  %eq178 = icmp eq ptr %122, %123, !dbg !1823
  br i1 %eq178, label %if.then179, label %if.exit187, !dbg !1823

if.then179:                                       ; preds = %cond.phi175
  %124 = load ptr, ptr %estr, align 8, !dbg !1825
  %ptradd_any180 = getelementptr i8, ptr %124, i8 -1, !dbg !1825
  store ptr %ptradd_any180, ptr %estr, align 8, !dbg !1825
  %checknull181 = icmp eq ptr %ptradd_any180, null, !dbg !1825
  %125 = call i1 @llvm.expect.i1(i1 %checknull181, i1 false), !dbg !1825
  br i1 %125, label %panic182, label %checkok186, !dbg !1825

checkok186:                                       ; preds = %if.then179
  store i8 48, ptr %ptradd_any180, align 1, !dbg !1826
  br label %if.exit187, !dbg !1826

if.exit187:                                       ; preds = %checkok186, %cond.phi175
  %126 = load ptr, ptr %estr, align 8, !dbg !1827
  %ptradd_any188 = getelementptr i8, ptr %126, i8 -1, !dbg !1827
  store ptr %ptradd_any188, ptr %estr, align 8, !dbg !1827
  %checknull189 = icmp eq ptr %ptradd_any188, null, !dbg !1827
  %127 = call i1 @llvm.expect.i1(i1 %checknull189, i1 false), !dbg !1827
  br i1 %127, label %panic190, label %checkok194, !dbg !1827

checkok194:                                       ; preds = %if.exit187
  %128 = load i32, ptr %e2, align 4, !dbg !1828
  %lt195 = icmp slt i32 %128, 0, !dbg !1828
  %ternary196 = select i1 %lt195, i8 45, i8 43, !dbg !1829
  store i8 %ternary196, ptr %ptradd_any188, align 1, !dbg !1829
  %129 = load ptr, ptr %estr, align 8, !dbg !1830
  %ptradd_any197 = getelementptr i8, ptr %129, i8 -1, !dbg !1830
  store ptr %ptradd_any197, ptr %estr, align 8, !dbg !1830
  %checknull198 = icmp eq ptr %ptradd_any197, null, !dbg !1830
  %130 = call i1 @llvm.expect.i1(i1 %checknull198, i1 false), !dbg !1830
  br i1 %130, label %panic199, label %checkok203, !dbg !1830

checkok203:                                       ; preds = %checkok194
  %131 = load ptr, ptr %self, align 8, !dbg !1831
  %checknull204 = icmp eq ptr %131, null, !dbg !1831
  %132 = call i1 @llvm.expect.i1(i1 %checknull204, i1 false), !dbg !1831
  br i1 %132, label %panic205, label %checkok209, !dbg !1831

checkok209:                                       ; preds = %checkok203
  %ptradd210 = getelementptr inbounds i8, ptr %131, i64 16, !dbg !1831
  %133 = load i32, ptr %ptradd210, align 8, !dbg !1831
  %lshrl211 = lshr i32 %133, 5, !dbg !1831
  %134 = and i32 1, %lshrl211, !dbg !1831
  %trunc212 = trunc i32 %134 to i8, !dbg !1831
  %135 = trunc i8 %trunc212 to i1, !dbg !1831
  %ternary213 = select i1 %135, i8 80, i8 112, !dbg !1832
  store i8 %ternary213, ptr %ptradd_any197, align 1, !dbg !1832
  call void @llvm.dbg.declare(metadata ptr %s214, metadata !1833, metadata !DIExpression()), !dbg !1834
  %136 = load ptr, ptr %buf, align 8, !dbg !1835
  store ptr %136, ptr %s214, align 8, !dbg !1835
  call void @llvm.dbg.declare(metadata ptr %xdigits, metadata !1836, metadata !DIExpression()), !dbg !1837
  %137 = load ptr, ptr %self, align 8, !dbg !1838
  %checknull215 = icmp eq ptr %137, null, !dbg !1838
  %138 = call i1 @llvm.expect.i1(i1 %checknull215, i1 false), !dbg !1838
  br i1 %138, label %panic216, label %checkok220, !dbg !1838

checkok220:                                       ; preds = %checkok209
  %ptradd221 = getelementptr inbounds i8, ptr %137, i64 16, !dbg !1838
  %139 = load i32, ptr %ptradd221, align 8, !dbg !1838
  %lshrl222 = lshr i32 %139, 5, !dbg !1838
  %140 = and i32 1, %lshrl222, !dbg !1838
  %trunc223 = trunc i32 %140 to i8, !dbg !1838
  %141 = trunc i8 %trunc223 to i1, !dbg !1838
  %ternary224 = select i1 %141, ptr @std.io.XDIGITS_H, ptr @std.io.XDIGITS_L, !dbg !1839
  store ptr %ternary224, ptr %xdigits, align 8, !dbg !1839
  br label %loop.body227, !dbg !1840

loop.cond225:                                     ; preds = %if.exit269
  %142 = load double, ptr %y, align 8, !dbg !1841
  %fpbool226 = fcmp une double %142, 0.000000e+00, !dbg !1841
  br i1 %fpbool226, label %loop.body227, label %loop.exit270, !dbg !1841

loop.body227:                                     ; preds = %loop.cond225, %checkok220
  call void @llvm.dbg.declare(metadata ptr %x228, metadata !1843, metadata !DIExpression()), !dbg !1845
  %143 = load double, ptr %y, align 8, !dbg !1846
  %fpsi = fptosi double %143 to i32, !dbg !1846
  store i32 %fpsi, ptr %x228, align 4, !dbg !1846
  %144 = load ptr, ptr %s214, align 8, !dbg !1847
  %ptradd_any229 = getelementptr i8, ptr %144, i8 1, !dbg !1847
  store ptr %ptradd_any229, ptr %s214, align 8, !dbg !1847
  %checknull230 = icmp eq ptr %144, null, !dbg !1847
  %145 = call i1 @llvm.expect.i1(i1 %checknull230, i1 false), !dbg !1847
  br i1 %145, label %panic231, label %checkok235, !dbg !1847

checkok235:                                       ; preds = %loop.body227
  %146 = load ptr, ptr %xdigits, align 8, !dbg !1848
  %147 = load i32, ptr %x228, align 4, !dbg !1849
  %sext236 = sext i32 %147 to i64, !dbg !1849
  %ptradd237 = getelementptr inbounds i8, ptr %146, i64 %sext236, !dbg !1849
  %148 = load i8, ptr %ptradd237, align 1, !dbg !1849
  store i8 %148, ptr %144, align 1, !dbg !1849
  %149 = load double, ptr %y, align 8, !dbg !1850
  %150 = load i32, ptr %x228, align 4, !dbg !1851
  %sifp = sitofp i32 %150 to double, !dbg !1851
  %fsub238 = fsub double %149, %sifp, !dbg !1850
  %fmul239 = fmul double 1.600000e+01, %fsub238, !dbg !1852
  store double %fmul239, ptr %y, align 8, !dbg !1852
  %151 = load ptr, ptr %s214, align 8, !dbg !1853
  %152 = load ptr, ptr %buf, align 8, !dbg !1854
  %153 = ptrtoint ptr %152 to i64, !dbg !1853
  %154 = ptrtoint ptr %151 to i64, !dbg !1853
  %155 = sub i64 %154, %153, !dbg !1853
  %156 = sdiv exact i64 %155, 1, !dbg !1853
  %eq240 = icmp eq i64 %156, 1, !dbg !1853
  br i1 %eq240, label %and.rhs241, label %and.phi259, !dbg !1853

and.rhs241:                                       ; preds = %checkok235
  %157 = load double, ptr %y, align 8, !dbg !1855
  %fpbool242 = fcmp une double %157, 0.000000e+00, !dbg !1855
  br i1 %fpbool242, label %or.phi245, label %or.rhs243, !dbg !1855

or.rhs243:                                        ; preds = %and.rhs241
  %158 = load i64, ptr %p, align 8, !dbg !1856
  %gt244 = icmp sgt i64 %158, 0, !dbg !1856
  br label %or.phi245, !dbg !1856

or.phi245:                                        ; preds = %or.rhs243, %and.rhs241
  %val246 = phi i1 [ true, %and.rhs241 ], [ %gt244, %or.rhs243 ], !dbg !1856
  br i1 %val246, label %or.phi257, label %or.rhs247, !dbg !1856

or.rhs247:                                        ; preds = %or.phi245
  %159 = load ptr, ptr %self, align 8, !dbg !1857
  %checknull248 = icmp eq ptr %159, null, !dbg !1857
  %160 = call i1 @llvm.expect.i1(i1 %checknull248, i1 false), !dbg !1857
  br i1 %160, label %panic249, label %checkok253, !dbg !1857

checkok253:                                       ; preds = %or.rhs247
  %ptradd254 = getelementptr inbounds i8, ptr %159, i64 16, !dbg !1857
  %161 = load i32, ptr %ptradd254, align 8, !dbg !1857
  %lshrl255 = lshr i32 %161, 4, !dbg !1857
  %162 = and i32 1, %lshrl255, !dbg !1857
  %trunc256 = trunc i32 %162 to i8, !dbg !1857
  %163 = trunc i8 %trunc256 to i1, !dbg !1857
  br label %or.phi257, !dbg !1857

or.phi257:                                        ; preds = %checkok253, %or.phi245
  %val258 = phi i1 [ true, %or.phi245 ], [ %163, %checkok253 ], !dbg !1857
  br label %and.phi259, !dbg !1857

and.phi259:                                       ; preds = %or.phi257, %checkok235
  %val260 = phi i1 [ false, %checkok235 ], [ %val258, %or.phi257 ], !dbg !1857
  br i1 %val260, label %if.then261, label %if.exit269, !dbg !1857

if.then261:                                       ; preds = %and.phi259
  %164 = load ptr, ptr %s214, align 8, !dbg !1858
  %ptradd_any262 = getelementptr i8, ptr %164, i8 1, !dbg !1858
  store ptr %ptradd_any262, ptr %s214, align 8, !dbg !1858
  %checknull263 = icmp eq ptr %164, null, !dbg !1858
  %165 = call i1 @llvm.expect.i1(i1 %checknull263, i1 false), !dbg !1858
  br i1 %165, label %panic264, label %checkok268, !dbg !1858

checkok268:                                       ; preds = %if.then261
  store i8 46, ptr %164, align 1, !dbg !1859
  br label %if.exit269, !dbg !1859

if.exit269:                                       ; preds = %checkok268, %and.phi259
  br label %loop.cond225, !dbg !1859

loop.exit270:                                     ; preds = %loop.cond225
  call void @llvm.dbg.declare(metadata ptr %outlen, metadata !1860, metadata !DIExpression()), !dbg !1861
  %166 = load ptr, ptr %s214, align 8, !dbg !1862
  %167 = load ptr, ptr %buf, align 8, !dbg !1863
  %168 = ptrtoint ptr %167 to i64, !dbg !1862
  %169 = ptrtoint ptr %166 to i64, !dbg !1862
  %170 = sub i64 %169, %168, !dbg !1862
  %171 = sdiv exact i64 %170, 1, !dbg !1862
  store i64 %171, ptr %outlen, align 8, !dbg !1862
  call void @llvm.dbg.declare(metadata ptr %explen, metadata !1864, metadata !DIExpression()), !dbg !1865
  %172 = load ptr, ptr %ebuf, align 8, !dbg !1866
  %173 = load ptr, ptr %estr, align 8, !dbg !1867
  %174 = ptrtoint ptr %173 to i64, !dbg !1866
  %175 = ptrtoint ptr %172 to i64, !dbg !1866
  %176 = sub i64 %175, %174, !dbg !1866
  %177 = sdiv exact i64 %176, 1, !dbg !1866
  store i64 %177, ptr %explen, align 8, !dbg !1866
  %178 = load i64, ptr %p, align 8, !dbg !1868
  %179 = load i64, ptr %explen, align 8, !dbg !1869
  %sub271 = sub i64 2147483645, %179, !dbg !1870
  %180 = load i64, ptr %pl, align 8, !dbg !1871
  %sub272 = sub i64 %sub271, %180, !dbg !1870
  %gt273 = icmp sgt i64 %178, %sub272, !dbg !1868
  br i1 %gt273, label %if.then274, label %if.exit275, !dbg !1868

if.then274:                                       ; preds = %loop.exit270
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !1872

if.exit275:                                       ; preds = %loop.exit270
  call void @llvm.dbg.declare(metadata ptr %len276, metadata !1873, metadata !DIExpression()), !dbg !1874
  store i64 0, ptr %len276, align 8, !dbg !1874
  call void @llvm.dbg.declare(metadata ptr %l, metadata !1875, metadata !DIExpression()), !dbg !1876
  %181 = load i64, ptr %p, align 8, !dbg !1877
  %intbool277 = icmp ne i64 %181, 0, !dbg !1877
  br i1 %intbool277, label %and.rhs278, label %and.phi281, !dbg !1877

and.rhs278:                                       ; preds = %if.exit275
  %182 = load i64, ptr %outlen, align 8, !dbg !1878
  %sub279 = sub i64 %182, 2, !dbg !1878
  %183 = load i64, ptr %p, align 8, !dbg !1879
  %lt280 = icmp slt i64 %sub279, %183, !dbg !1878
  br label %and.phi281, !dbg !1878

and.phi281:                                       ; preds = %and.rhs278, %if.exit275
  %val282 = phi i1 [ false, %if.exit275 ], [ %lt280, %and.rhs278 ], !dbg !1878
  br i1 %val282, label %cond.lhs283, label %cond.rhs286, !dbg !1878

cond.lhs283:                                      ; preds = %and.phi281
  %184 = load i64, ptr %p, align 8, !dbg !1880
  %add284 = add i64 %184, 2, !dbg !1880
  %185 = load i64, ptr %explen, align 8, !dbg !1881
  %add285 = add i64 %add284, %185, !dbg !1880
  br label %cond.phi288, !dbg !1880

cond.rhs286:                                      ; preds = %and.phi281
  %186 = load i64, ptr %outlen, align 8, !dbg !1882
  %187 = load i64, ptr %explen, align 8, !dbg !1883
  %add287 = add i64 %186, %187, !dbg !1882
  br label %cond.phi288, !dbg !1882

cond.phi288:                                      ; preds = %cond.rhs286, %cond.lhs283
  %val289 = phi i64 [ %add285, %cond.lhs283 ], [ %add287, %cond.rhs286 ], !dbg !1882
  store i64 %val289, ptr %l, align 8, !dbg !1882
  %188 = load ptr, ptr %self, align 8, !dbg !1884
  %checknull290 = icmp eq ptr %188, null, !dbg !1884
  %189 = call i1 @llvm.expect.i1(i1 %checknull290, i1 false), !dbg !1884
  br i1 %189, label %panic291, label %checkok295, !dbg !1884

checkok295:                                       ; preds = %cond.phi288
  %ptradd296 = getelementptr inbounds i8, ptr %188, i64 16, !dbg !1884
  %190 = load i32, ptr %ptradd296, align 8, !dbg !1884
  %lshrl297 = lshr i32 %190, 1, !dbg !1884
  %191 = and i32 1, %lshrl297, !dbg !1884
  %trunc298 = trunc i32 %191 to i8, !dbg !1884
  %192 = trunc i8 %trunc298 to i1, !dbg !1884
  %not299 = xor i1 %192, true, !dbg !1884
  br i1 %not299, label %and.rhs300, label %and.phi310, !dbg !1884

and.rhs300:                                       ; preds = %checkok295
  %193 = load ptr, ptr %self, align 8, !dbg !1885
  %checknull301 = icmp eq ptr %193, null, !dbg !1885
  %194 = call i1 @llvm.expect.i1(i1 %checknull301, i1 false), !dbg !1885
  br i1 %194, label %panic302, label %checkok306, !dbg !1885

checkok306:                                       ; preds = %and.rhs300
  %ptradd307 = getelementptr inbounds i8, ptr %193, i64 16, !dbg !1885
  %195 = load i32, ptr %ptradd307, align 8, !dbg !1885
  %196 = and i32 1, %195, !dbg !1885
  %trunc308 = trunc i32 %196 to i8, !dbg !1885
  %197 = trunc i8 %trunc308 to i1, !dbg !1885
  %not309 = xor i1 %197, true, !dbg !1885
  br label %and.phi310, !dbg !1885

and.phi310:                                       ; preds = %checkok306, %checkok295
  %val311 = phi i1 [ false, %checkok295 ], [ %not309, %checkok306 ], !dbg !1885
  br i1 %val311, label %if.then312, label %if.exit331, !dbg !1885

if.then312:                                       ; preds = %and.phi310
  %198 = load i64, ptr %len276, align 8, !dbg !1886
  %199 = load ptr, ptr %self, align 8, !dbg !1887
  %checknull314 = icmp eq ptr %199, null, !dbg !1887
  %200 = call i1 @llvm.expect.i1(i1 %checknull314, i1 false), !dbg !1887
  br i1 %200, label %panic315, label %checkok319, !dbg !1887

checkok319:                                       ; preds = %if.then312
  %ptradd320 = getelementptr inbounds i8, ptr %199, i64 16, !dbg !1887
  %ptradd321 = getelementptr inbounds i8, ptr %ptradd320, i64 4, !dbg !1887
  %201 = load i32, ptr %ptradd321, align 4, !dbg !1887
  %zext322 = zext i32 %201 to i64, !dbg !1887
  %202 = load i64, ptr %pl, align 8, !dbg !1888
  %203 = load i64, ptr %l, align 8, !dbg !1889
  %add323 = add i64 %202, %203, !dbg !1888
  %204 = load ptr, ptr %self, align 8
  %205 = call i64 @std.io.Formatter.pad(ptr %retparam324, ptr %204, i8 32, i64 %zext322, i64 %add323) #5, !dbg !1890
  %not_err325 = icmp eq i64 %205, 0, !dbg !1890
  %206 = call i1 @llvm.expect.i1(i1 %not_err325, i1 true), !dbg !1890
  br i1 %206, label %after_check327, label %assign_optional326, !dbg !1890

assign_optional326:                               ; preds = %checkok319
  store i64 %205, ptr %error_var313, align 8, !dbg !1890
  br label %guard_block328, !dbg !1890

after_check327:                                   ; preds = %checkok319
  br label %noerr_block329, !dbg !1890

guard_block328:                                   ; preds = %assign_optional326
  %207 = load i64, ptr %error_var313, align 8, !dbg !1890
  ret i64 %207, !dbg !1890

noerr_block329:                                   ; preds = %after_check327
  %208 = load i64, ptr %retparam324, align 8, !dbg !1890
  %add330 = add i64 %198, %208, !dbg !1886
  store i64 %add330, ptr %len276, align 8, !dbg !1886
  br label %if.exit331, !dbg !1886

if.exit331:                                       ; preds = %noerr_block329, %and.phi310
  %209 = load i8, ptr %is_neg, align 1, !dbg !1891
  %210 = trunc i8 %209 to i1, !dbg !1891
  br i1 %210, label %or.phi342, label %or.rhs332, !dbg !1891

or.rhs332:                                        ; preds = %if.exit331
  %211 = load ptr, ptr %self, align 8, !dbg !1892
  %checknull333 = icmp eq ptr %211, null, !dbg !1892
  %212 = call i1 @llvm.expect.i1(i1 %checknull333, i1 false), !dbg !1892
  br i1 %212, label %panic334, label %checkok338, !dbg !1892

checkok338:                                       ; preds = %or.rhs332
  %ptradd339 = getelementptr inbounds i8, ptr %211, i64 16, !dbg !1892
  %213 = load i32, ptr %ptradd339, align 8, !dbg !1892
  %lshrl340 = lshr i32 %213, 2, !dbg !1892
  %214 = and i32 1, %lshrl340, !dbg !1892
  %trunc341 = trunc i32 %214 to i8, !dbg !1892
  %215 = trunc i8 %trunc341 to i1, !dbg !1892
  br label %or.phi342, !dbg !1892

or.phi342:                                        ; preds = %checkok338, %if.exit331
  %val343 = phi i1 [ true, %if.exit331 ], [ %215, %checkok338 ], !dbg !1892
  br i1 %val343, label %if.then344, label %if.exit354, !dbg !1892

if.then344:                                       ; preds = %or.phi342
  %216 = load i64, ptr %len276, align 8, !dbg !1893
  %217 = load i8, ptr %is_neg, align 1, !dbg !1894
  %218 = trunc i8 %217 to i1, !dbg !1894
  %ternary346 = select i1 %218, i8 45, i8 43, !dbg !1895
  %219 = load ptr, ptr %self, align 8
  %220 = call i64 @std.io.Formatter.out(ptr %retparam347, ptr %219, i8 %ternary346), !dbg !1896
  %not_err348 = icmp eq i64 %220, 0, !dbg !1896
  %221 = call i1 @llvm.expect.i1(i1 %not_err348, i1 true), !dbg !1896
  br i1 %221, label %after_check350, label %assign_optional349, !dbg !1896

assign_optional349:                               ; preds = %if.then344
  store i64 %220, ptr %error_var345, align 8, !dbg !1896
  br label %guard_block351, !dbg !1896

after_check350:                                   ; preds = %if.then344
  br label %noerr_block352, !dbg !1896

guard_block351:                                   ; preds = %assign_optional349
  %222 = load i64, ptr %error_var345, align 8, !dbg !1896
  ret i64 %222, !dbg !1896

noerr_block352:                                   ; preds = %after_check350
  %223 = load i64, ptr %retparam347, align 8, !dbg !1896
  %add353 = add i64 %216, %223, !dbg !1893
  store i64 %add353, ptr %len276, align 8, !dbg !1893
  br label %if.exit354, !dbg !1893

if.exit354:                                       ; preds = %noerr_block352, %or.phi342
  %224 = load i64, ptr %len276, align 8, !dbg !1897
  %225 = load ptr, ptr %self, align 8, !dbg !1898
  %checknull356 = icmp eq ptr %225, null, !dbg !1898
  %226 = call i1 @llvm.expect.i1(i1 %checknull356, i1 false), !dbg !1898
  br i1 %226, label %panic357, label %checkok361, !dbg !1898

checkok361:                                       ; preds = %if.exit354
  %ptradd362 = getelementptr inbounds i8, ptr %225, i64 16, !dbg !1898
  %227 = load i32, ptr %ptradd362, align 8, !dbg !1898
  %lshrl363 = lshr i32 %227, 5, !dbg !1898
  %228 = and i32 1, %lshrl363, !dbg !1898
  %trunc364 = trunc i32 %228 to i8, !dbg !1898
  %229 = trunc i8 %trunc364 to i1, !dbg !1898
  %ternary365 = select i1 %229, %"char[]" { ptr @.str.169, i64 2 }, %"char[]" { ptr @.str.170, i64 2 }, !dbg !1899
  %230 = load ptr, ptr %self, align 8
  store %"char[]" %ternary365, ptr %indirectarg367, align 8
  %231 = call i64 @std.io.Formatter.out_chars(ptr %retparam366, ptr %230, ptr align 8 %indirectarg367), !dbg !1900
  %not_err368 = icmp eq i64 %231, 0, !dbg !1900
  %232 = call i1 @llvm.expect.i1(i1 %not_err368, i1 true), !dbg !1900
  br i1 %232, label %after_check370, label %assign_optional369, !dbg !1900

assign_optional369:                               ; preds = %checkok361
  store i64 %231, ptr %error_var355, align 8, !dbg !1900
  br label %guard_block371, !dbg !1900

after_check370:                                   ; preds = %checkok361
  br label %noerr_block372, !dbg !1900

guard_block371:                                   ; preds = %assign_optional369
  %233 = load i64, ptr %error_var355, align 8, !dbg !1900
  ret i64 %233, !dbg !1900

noerr_block372:                                   ; preds = %after_check370
  %234 = load i64, ptr %retparam366, align 8, !dbg !1900
  %add373 = add i64 %224, %234, !dbg !1897
  store i64 %add373, ptr %len276, align 8, !dbg !1897
  %235 = load ptr, ptr %self, align 8, !dbg !1901
  %checknull374 = icmp eq ptr %235, null, !dbg !1901
  %236 = call i1 @llvm.expect.i1(i1 %checknull374, i1 false), !dbg !1901
  br i1 %236, label %panic375, label %checkok379, !dbg !1901

checkok379:                                       ; preds = %noerr_block372
  %ptradd380 = getelementptr inbounds i8, ptr %235, i64 16, !dbg !1901
  %237 = load i32, ptr %ptradd380, align 8, !dbg !1901
  %238 = and i32 1, %237, !dbg !1901
  %trunc381 = trunc i32 %238 to i8, !dbg !1901
  %239 = trunc i8 %trunc381 to i1, !dbg !1901
  br i1 %239, label %if.then382, label %if.exit401, !dbg !1901

if.then382:                                       ; preds = %checkok379
  %240 = load i64, ptr %len276, align 8, !dbg !1902
  %241 = load ptr, ptr %self, align 8, !dbg !1903
  %checknull384 = icmp eq ptr %241, null, !dbg !1903
  %242 = call i1 @llvm.expect.i1(i1 %checknull384, i1 false), !dbg !1903
  br i1 %242, label %panic385, label %checkok389, !dbg !1903

checkok389:                                       ; preds = %if.then382
  %ptradd390 = getelementptr inbounds i8, ptr %241, i64 16, !dbg !1903
  %ptradd391 = getelementptr inbounds i8, ptr %ptradd390, i64 4, !dbg !1903
  %243 = load i32, ptr %ptradd391, align 4, !dbg !1903
  %zext392 = zext i32 %243 to i64, !dbg !1903
  %244 = load i64, ptr %pl, align 8, !dbg !1904
  %245 = load i64, ptr %l, align 8, !dbg !1905
  %add393 = add i64 %244, %245, !dbg !1904
  %246 = load ptr, ptr %self, align 8
  %247 = call i64 @std.io.Formatter.pad(ptr %retparam394, ptr %246, i8 48, i64 %zext392, i64 %add393) #5, !dbg !1906
  %not_err395 = icmp eq i64 %247, 0, !dbg !1906
  %248 = call i1 @llvm.expect.i1(i1 %not_err395, i1 true), !dbg !1906
  br i1 %248, label %after_check397, label %assign_optional396, !dbg !1906

assign_optional396:                               ; preds = %checkok389
  store i64 %247, ptr %error_var383, align 8, !dbg !1906
  br label %guard_block398, !dbg !1906

after_check397:                                   ; preds = %checkok389
  br label %noerr_block399, !dbg !1906

guard_block398:                                   ; preds = %assign_optional396
  %249 = load i64, ptr %error_var383, align 8, !dbg !1906
  ret i64 %249, !dbg !1906

noerr_block399:                                   ; preds = %after_check397
  %250 = load i64, ptr %retparam394, align 8, !dbg !1906
  %add400 = add i64 %240, %250, !dbg !1902
  store i64 %add400, ptr %len276, align 8, !dbg !1902
  br label %if.exit401, !dbg !1902

if.exit401:                                       ; preds = %noerr_block399, %checkok379
  %251 = load i64, ptr %len276, align 8, !dbg !1907
  %252 = load ptr, ptr %buf, align 8, !dbg !1908
  %253 = load i64, ptr %outlen, align 8, !dbg !1909
  %add403 = add i64 0, %253, !dbg !1909
  %size = sub i64 %add403, 0, !dbg !1909
  %254 = insertvalue %"char[]" undef, ptr %252, 0, !dbg !1909
  %255 = insertvalue %"char[]" %254, i64 %size, 1, !dbg !1909
  %256 = load ptr, ptr %self, align 8
  store %"char[]" %255, ptr %indirectarg405, align 8
  %257 = call i64 @std.io.Formatter.out_chars(ptr %retparam404, ptr %256, ptr align 8 %indirectarg405), !dbg !1910
  %not_err406 = icmp eq i64 %257, 0, !dbg !1910
  %258 = call i1 @llvm.expect.i1(i1 %not_err406, i1 true), !dbg !1910
  br i1 %258, label %after_check408, label %assign_optional407, !dbg !1910

assign_optional407:                               ; preds = %if.exit401
  store i64 %257, ptr %error_var402, align 8, !dbg !1910
  br label %guard_block409, !dbg !1910

after_check408:                                   ; preds = %if.exit401
  br label %noerr_block410, !dbg !1910

guard_block409:                                   ; preds = %assign_optional407
  %259 = load i64, ptr %error_var402, align 8, !dbg !1910
  ret i64 %259, !dbg !1910

noerr_block410:                                   ; preds = %after_check408
  %260 = load i64, ptr %retparam404, align 8, !dbg !1910
  %add411 = add i64 %251, %260, !dbg !1907
  store i64 %add411, ptr %len276, align 8, !dbg !1907
  %261 = load i64, ptr %len276, align 8, !dbg !1911
  %262 = load i64, ptr %l, align 8, !dbg !1912
  %263 = load i64, ptr %outlen, align 8, !dbg !1913
  %sub413 = sub i64 %262, %263, !dbg !1912
  %264 = load i64, ptr %explen, align 8, !dbg !1914
  %sub414 = sub i64 %sub413, %264, !dbg !1912
  %265 = load ptr, ptr %self, align 8
  %266 = call i64 @std.io.Formatter.pad(ptr %retparam415, ptr %265, i8 48, i64 %sub414, i64 0) #5, !dbg !1915
  %not_err416 = icmp eq i64 %266, 0, !dbg !1915
  %267 = call i1 @llvm.expect.i1(i1 %not_err416, i1 true), !dbg !1915
  br i1 %267, label %after_check418, label %assign_optional417, !dbg !1915

assign_optional417:                               ; preds = %noerr_block410
  store i64 %266, ptr %error_var412, align 8, !dbg !1915
  br label %guard_block419, !dbg !1915

after_check418:                                   ; preds = %noerr_block410
  br label %noerr_block420, !dbg !1915

guard_block419:                                   ; preds = %assign_optional417
  %268 = load i64, ptr %error_var412, align 8, !dbg !1915
  ret i64 %268, !dbg !1915

noerr_block420:                                   ; preds = %after_check418
  %269 = load i64, ptr %retparam415, align 8, !dbg !1915
  %add421 = add i64 %261, %269, !dbg !1911
  store i64 %add421, ptr %len276, align 8, !dbg !1911
  %270 = load i64, ptr %len276, align 8, !dbg !1916
  %271 = load ptr, ptr %estr, align 8, !dbg !1917
  %272 = load i64, ptr %explen, align 8, !dbg !1918
  %add423 = add i64 0, %272, !dbg !1918
  %size424 = sub i64 %add423, 0, !dbg !1918
  %273 = insertvalue %"char[]" undef, ptr %271, 0, !dbg !1918
  %274 = insertvalue %"char[]" %273, i64 %size424, 1, !dbg !1918
  %275 = load ptr, ptr %self, align 8
  store %"char[]" %274, ptr %indirectarg426, align 8
  %276 = call i64 @std.io.Formatter.out_chars(ptr %retparam425, ptr %275, ptr align 8 %indirectarg426), !dbg !1919
  %not_err427 = icmp eq i64 %276, 0, !dbg !1919
  %277 = call i1 @llvm.expect.i1(i1 %not_err427, i1 true), !dbg !1919
  br i1 %277, label %after_check429, label %assign_optional428, !dbg !1919

assign_optional428:                               ; preds = %noerr_block420
  store i64 %276, ptr %error_var422, align 8, !dbg !1919
  br label %guard_block430, !dbg !1919

after_check429:                                   ; preds = %noerr_block420
  br label %noerr_block431, !dbg !1919

guard_block430:                                   ; preds = %assign_optional428
  %278 = load i64, ptr %error_var422, align 8, !dbg !1919
  ret i64 %278, !dbg !1919

noerr_block431:                                   ; preds = %after_check429
  %279 = load i64, ptr %retparam425, align 8, !dbg !1919
  %add432 = add i64 %270, %279, !dbg !1916
  store i64 %add432, ptr %len276, align 8, !dbg !1916
  %280 = load ptr, ptr %self, align 8, !dbg !1920
  %checknull433 = icmp eq ptr %280, null, !dbg !1920
  %281 = call i1 @llvm.expect.i1(i1 %checknull433, i1 false), !dbg !1920
  br i1 %281, label %panic434, label %checkok438, !dbg !1920

checkok438:                                       ; preds = %noerr_block431
  %ptradd439 = getelementptr inbounds i8, ptr %280, i64 16, !dbg !1920
  %282 = load i32, ptr %ptradd439, align 8, !dbg !1920
  %lshrl440 = lshr i32 %282, 1, !dbg !1920
  %283 = and i32 1, %lshrl440, !dbg !1920
  %trunc441 = trunc i32 %283 to i8, !dbg !1920
  %284 = trunc i8 %trunc441 to i1, !dbg !1920
  br i1 %284, label %if.then442, label %if.exit461, !dbg !1920

if.then442:                                       ; preds = %checkok438
  %285 = load i64, ptr %len276, align 8, !dbg !1921
  %286 = load ptr, ptr %self, align 8, !dbg !1922
  %checknull444 = icmp eq ptr %286, null, !dbg !1922
  %287 = call i1 @llvm.expect.i1(i1 %checknull444, i1 false), !dbg !1922
  br i1 %287, label %panic445, label %checkok449, !dbg !1922

checkok449:                                       ; preds = %if.then442
  %ptradd450 = getelementptr inbounds i8, ptr %286, i64 16, !dbg !1922
  %ptradd451 = getelementptr inbounds i8, ptr %ptradd450, i64 4, !dbg !1922
  %288 = load i32, ptr %ptradd451, align 4, !dbg !1922
  %zext452 = zext i32 %288 to i64, !dbg !1922
  %289 = load i64, ptr %pl, align 8, !dbg !1923
  %290 = load i64, ptr %l, align 8, !dbg !1924
  %add453 = add i64 %289, %290, !dbg !1923
  %291 = load ptr, ptr %self, align 8
  %292 = call i64 @std.io.Formatter.pad(ptr %retparam454, ptr %291, i8 32, i64 %zext452, i64 %add453) #5, !dbg !1925
  %not_err455 = icmp eq i64 %292, 0, !dbg !1925
  %293 = call i1 @llvm.expect.i1(i1 %not_err455, i1 true), !dbg !1925
  br i1 %293, label %after_check457, label %assign_optional456, !dbg !1925

assign_optional456:                               ; preds = %checkok449
  store i64 %292, ptr %error_var443, align 8, !dbg !1925
  br label %guard_block458, !dbg !1925

after_check457:                                   ; preds = %checkok449
  br label %noerr_block459, !dbg !1925

guard_block458:                                   ; preds = %assign_optional456
  %294 = load i64, ptr %error_var443, align 8, !dbg !1925
  ret i64 %294, !dbg !1925

noerr_block459:                                   ; preds = %after_check457
  %295 = load i64, ptr %retparam454, align 8, !dbg !1925
  %add460 = add i64 %285, %295, !dbg !1921
  store i64 %add460, ptr %len276, align 8, !dbg !1921
  br label %if.exit461, !dbg !1921

if.exit461:                                       ; preds = %noerr_block459, %checkok438
  %296 = load i64, ptr %len276, align 8, !dbg !1926
  store i64 %296, ptr %0, align 8, !dbg !1926
  ret i64 0, !dbg !1926

if.exit463:                                       ; preds = %cond.phi
  %297 = load i64, ptr %p, align 8, !dbg !1927
  %lt464 = icmp slt i64 %297, 0, !dbg !1927
  br i1 %lt464, label %if.then465, label %if.exit466, !dbg !1927

if.then465:                                       ; preds = %if.exit463
  store i64 6, ptr %p, align 8, !dbg !1928
  br label %if.exit466, !dbg !1928

if.exit466:                                       ; preds = %if.then465, %if.exit463
  %298 = load double, ptr %y, align 8, !dbg !1929
  %fpbool467 = fcmp une double %298, 0.000000e+00, !dbg !1929
  br i1 %fpbool467, label %if.then468, label %if.exit471, !dbg !1929

if.then468:                                       ; preds = %if.exit466
  %299 = load double, ptr %y, align 8, !dbg !1930
  %fmul469 = fmul double %299, 0x41B0000000000000, !dbg !1930
  store double %fmul469, ptr %y, align 8, !dbg !1930
  %300 = load i32, ptr %e2, align 4, !dbg !1932
  %sub470 = sub i32 %300, 28, !dbg !1932
  store i32 %sub470, ptr %e2, align 4, !dbg !1932
  br label %if.exit471, !dbg !1932

if.exit471:                                       ; preds = %if.then468, %if.exit466
  call void @llvm.dbg.declare(metadata ptr %a, metadata !1933, metadata !DIExpression()), !dbg !1935
  store ptr null, ptr %a, align 8, !dbg !1935
  call void @llvm.dbg.declare(metadata ptr %z, metadata !1936, metadata !DIExpression()), !dbg !1937
  store ptr null, ptr %z, align 8, !dbg !1937
  call void @llvm.dbg.declare(metadata ptr %r, metadata !1938, metadata !DIExpression()), !dbg !1939
  store ptr null, ptr %r, align 8, !dbg !1939
  %301 = load i32, ptr %e2, align 4, !dbg !1940
  %lt472 = icmp slt i32 %301, 0, !dbg !1940
  br i1 %lt472, label %if.then473, label %if.else474, !dbg !1940

if.then473:                                       ; preds = %if.exit471
  store ptr %big, ptr %z, align 8, !dbg !1941
  store ptr %big, ptr %r, align 8, !dbg !1941
  store ptr %big, ptr %a, align 8, !dbg !1941
  br label %if.exit476, !dbg !1941

if.else474:                                       ; preds = %if.exit471
  %ptradd_any475 = getelementptr i8, ptr %big, i64 288, !dbg !1943
  store ptr %ptradd_any475, ptr %z, align 8, !dbg !1943
  store ptr %ptradd_any475, ptr %r, align 8, !dbg !1943
  store ptr %ptradd_any475, ptr %a, align 8, !dbg !1943
  br label %if.exit476, !dbg !1943

if.exit476:                                       ; preds = %if.else474, %if.then473
  br label %loop.body479, !dbg !1945

loop.cond477:                                     ; preds = %loop.body479
  %302 = load double, ptr %y, align 8, !dbg !1946
  %fpbool478 = fcmp une double %302, 0.000000e+00, !dbg !1946
  br i1 %fpbool478, label %loop.body479, label %loop.exit483, !dbg !1946

loop.body479:                                     ; preds = %loop.cond477, %if.exit476
  call void @llvm.dbg.declare(metadata ptr %v, metadata !1948, metadata !DIExpression()), !dbg !1950
  %303 = load ptr, ptr %z, align 8, !dbg !1951
  %ptradd_any480 = getelementptr i8, ptr %303, i8 4, !dbg !1951
  store ptr %ptradd_any480, ptr %z, align 8, !dbg !1951
  %304 = load double, ptr %y, align 8, !dbg !1952
  %fpui = fptoui double %304 to i32, !dbg !1952
  store i32 %fpui, ptr %303, align 4, !dbg !1952
  store i32 %fpui, ptr %v, align 4, !dbg !1952
  %305 = load double, ptr %y, align 8, !dbg !1953
  %306 = load i32, ptr %v, align 4, !dbg !1954
  %uifp = uitofp i32 %306 to double, !dbg !1954
  %fsub481 = fsub double %305, %uifp, !dbg !1953
  %fmul482 = fmul double 1.000000e+09, %fsub481, !dbg !1955
  store double %fmul482, ptr %y, align 8, !dbg !1955
  br label %loop.cond477, !dbg !1955

loop.exit483:                                     ; preds = %loop.cond477
  br label %loop.cond484, !dbg !1956

loop.cond484:                                     ; preds = %loop.exit538, %loop.exit483
  %307 = load i32, ptr %e2, align 4, !dbg !1957
  %gt485 = icmp sgt i32 %307, 0, !dbg !1957
  br i1 %gt485, label %loop.body486, label %loop.exit540, !dbg !1957

loop.body486:                                     ; preds = %loop.cond484
  call void @llvm.dbg.declare(metadata ptr %carry, metadata !1959, metadata !DIExpression()), !dbg !1961
  store i32 0, ptr %carry, align 4, !dbg !1962
  call void @llvm.dbg.declare(metadata ptr %sh, metadata !1963, metadata !DIExpression()), !dbg !1964
  store i32 29, ptr %x487, align 4
  %308 = load i32, ptr %e2, align 4
  store i32 %308, ptr %y488, align 4
  %309 = load i32, ptr %x487, align 4, !dbg !1965
  %310 = load i32, ptr %y488, align 4, !dbg !1968
  %311 = call i32 @llvm.smin.i32(i32 %309, i32 %310), !dbg !1968
  store i32 %311, ptr %sh, align 4, !dbg !1968
  call void @llvm.dbg.declare(metadata ptr %d, metadata !1969, metadata !DIExpression()), !dbg !1971
  %312 = load ptr, ptr %z, align 8, !dbg !1972
  %ptradd_any489 = getelementptr i8, ptr %312, i64 -4, !dbg !1973
  store ptr %ptradd_any489, ptr %d, align 8, !dbg !1973
  br label %loop.cond490, !dbg !1973

loop.cond490:                                     ; preds = %checkok514, %loop.body486
  %313 = load ptr, ptr %d, align 8, !dbg !1974
  %314 = load ptr, ptr %a, align 8, !dbg !1975
  %ge = icmp uge ptr %313, %314, !dbg !1974
  br i1 %ge, label %loop.body491, label %loop.exit518, !dbg !1974

loop.body491:                                     ; preds = %loop.cond490
  call void @llvm.dbg.declare(metadata ptr %x492, metadata !1976, metadata !DIExpression()), !dbg !1978
  %315 = load ptr, ptr %d, align 8, !dbg !1979
  %checknull493 = icmp eq ptr %315, null, !dbg !1979
  %316 = call i1 @llvm.expect.i1(i1 %checknull493, i1 false), !dbg !1979
  br i1 %316, label %panic494, label %checkok498, !dbg !1979

checkok498:                                       ; preds = %loop.body491
  %317 = load i32, ptr %315, align 4, !dbg !1979
  %zext499 = zext i32 %317 to i64, !dbg !1979
  %318 = load i32, ptr %sh, align 4, !dbg !1980
  %zext500 = zext i32 %318 to i64, !dbg !1981
  %shift_exceeds = icmp uge i64 %zext500, 64, !dbg !1981
  %319 = call i1 @llvm.expect.i1(i1 %shift_exceeds, i1 false), !dbg !1981
  br i1 %319, label %panic501, label %checkok506, !dbg !1981

checkok506:                                       ; preds = %checkok498
  %shl = shl i64 %zext499, %zext500, !dbg !1981
  %320 = freeze i64 %shl, !dbg !1981
  %321 = load i32, ptr %carry, align 4, !dbg !1982
  %zext507 = zext i32 %321 to i64, !dbg !1982
  %add508 = add i64 %320, %zext507, !dbg !1981
  store i64 %add508, ptr %x492, align 8, !dbg !1981
  %322 = load ptr, ptr %d, align 8, !dbg !1983
  %checknull509 = icmp eq ptr %322, null, !dbg !1983
  %323 = call i1 @llvm.expect.i1(i1 %checknull509, i1 false), !dbg !1983
  br i1 %323, label %panic510, label %checkok514, !dbg !1983

checkok514:                                       ; preds = %checkok506
  %324 = load i64, ptr %x492, align 8, !dbg !1984
  %smod = srem i64 %324, 1000000000, !dbg !1985
  %trunc515 = trunc i64 %smod to i32, !dbg !1985
  store i32 %trunc515, ptr %322, align 4, !dbg !1985
  %325 = load i64, ptr %x492, align 8, !dbg !1986
  %sdiv = sdiv i64 %325, 1000000000, !dbg !1987
  %trunc516 = trunc i64 %sdiv to i32, !dbg !1987
  store i32 %trunc516, ptr %carry, align 4, !dbg !1987
  %326 = load ptr, ptr %d, align 8, !dbg !1988
  %ptradd_any517 = getelementptr i8, ptr %326, i8 -4, !dbg !1988
  store ptr %ptradd_any517, ptr %d, align 8, !dbg !1988
  br label %loop.cond490, !dbg !1988

loop.exit518:                                     ; preds = %loop.cond490
  %327 = load i32, ptr %carry, align 4, !dbg !1989
  %intbool519 = icmp ne i32 %327, 0, !dbg !1989
  br i1 %intbool519, label %if.then520, label %if.exit528, !dbg !1989

if.then520:                                       ; preds = %loop.exit518
  %328 = load ptr, ptr %a, align 8, !dbg !1990
  %ptradd_any521 = getelementptr i8, ptr %328, i8 -4, !dbg !1990
  store ptr %ptradd_any521, ptr %a, align 8, !dbg !1990
  %checknull522 = icmp eq ptr %ptradd_any521, null, !dbg !1990
  %329 = call i1 @llvm.expect.i1(i1 %checknull522, i1 false), !dbg !1990
  br i1 %329, label %panic523, label %checkok527, !dbg !1990

checkok527:                                       ; preds = %if.then520
  %330 = load i32, ptr %carry, align 4, !dbg !1991
  store i32 %330, ptr %ptradd_any521, align 4, !dbg !1991
  br label %if.exit528, !dbg !1991

if.exit528:                                       ; preds = %checkok527, %loop.exit518
  br label %loop.cond529, !dbg !1992

loop.cond529:                                     ; preds = %loop.body536, %if.exit528
  %331 = load ptr, ptr %z, align 8, !dbg !1993
  %332 = load ptr, ptr %a, align 8, !dbg !1995
  %gt530 = icmp ugt ptr %331, %332, !dbg !1993
  br i1 %gt530, label %and.rhs531, label %and.phi534, !dbg !1993

and.rhs531:                                       ; preds = %loop.cond529
  %333 = load ptr, ptr %z, align 8, !dbg !1996
  %ptradd532 = getelementptr inbounds i8, ptr %333, i64 -4, !dbg !1997
  %334 = load i32, ptr %ptradd532, align 4, !dbg !1997
  %not533 = icmp eq i32 %334, 0, !dbg !1997
  br label %and.phi534, !dbg !1997

and.phi534:                                       ; preds = %and.rhs531, %loop.cond529
  %val535 = phi i1 [ false, %loop.cond529 ], [ %not533, %and.rhs531 ], !dbg !1997
  br i1 %val535, label %loop.body536, label %loop.exit538, !dbg !1997

loop.body536:                                     ; preds = %and.phi534
  %335 = load ptr, ptr %z, align 8, !dbg !1998
  %ptradd_any537 = getelementptr i8, ptr %335, i8 -4, !dbg !1998
  store ptr %ptradd_any537, ptr %z, align 8, !dbg !1998
  br label %loop.cond529, !dbg !1998

loop.exit538:                                     ; preds = %and.phi534
  %336 = load i32, ptr %e2, align 4, !dbg !1999
  %337 = load i32, ptr %sh, align 4, !dbg !2000
  %sub539 = sub i32 %336, %337, !dbg !1999
  store i32 %sub539, ptr %e2, align 4, !dbg !1999
  br label %loop.cond484, !dbg !1999

loop.exit540:                                     ; preds = %loop.cond484
  br label %loop.cond541, !dbg !2001

loop.cond541:                                     ; preds = %if.exit649, %loop.exit540
  %338 = load i32, ptr %e2, align 4, !dbg !2002
  %lt542 = icmp slt i32 %338, 0, !dbg !2002
  br i1 %lt542, label %loop.body543, label %loop.exit651, !dbg !2002

loop.body543:                                     ; preds = %loop.cond541
  call void @llvm.dbg.declare(metadata ptr %carry544, metadata !2004, metadata !DIExpression()), !dbg !2006
  store i32 0, ptr %carry544, align 4, !dbg !2007
  call void @llvm.dbg.declare(metadata ptr %b, metadata !2008, metadata !DIExpression()), !dbg !2009
  store ptr null, ptr %b, align 8, !dbg !2009
  call void @llvm.dbg.declare(metadata ptr %sh545, metadata !2010, metadata !DIExpression()), !dbg !2011
  store i32 9, ptr %x546, align 4
  %339 = load i32, ptr %e2, align 4, !dbg !2012
  %neg547 = sub i32 0, %339, !dbg !2012
  store i32 %neg547, ptr %y548, align 4
  %340 = load i32, ptr %x546, align 4, !dbg !2013
  %341 = load i32, ptr %y548, align 4, !dbg !2016
  %342 = call i32 @llvm.smin.i32(i32 %340, i32 %341), !dbg !2016
  store i32 %342, ptr %sh545, align 4, !dbg !2016
  call void @llvm.dbg.declare(metadata ptr %need, metadata !2017, metadata !DIExpression()), !dbg !2018
  %343 = load i64, ptr %p, align 8, !dbg !2019
  %add549 = add i64 %343, 17, !dbg !2019
  %add550 = add i64 %add549, 8, !dbg !2019
  %sdiv551 = sdiv i64 %add550, 9, !dbg !2019
  %add552 = add i64 1, %sdiv551, !dbg !2020
  %trunc553 = trunc i64 %add552 to i32, !dbg !2020
  store i32 %trunc553, ptr %need, align 4, !dbg !2020
  call void @llvm.dbg.declare(metadata ptr %d554, metadata !2021, metadata !DIExpression()), !dbg !2023
  %344 = load ptr, ptr %a, align 8, !dbg !2024
  store ptr %344, ptr %d554, align 8, !dbg !2024
  br label %loop.cond555, !dbg !2024

loop.cond555:                                     ; preds = %checkok629, %loop.body543
  %345 = load ptr, ptr %d554, align 8, !dbg !2025
  %346 = load ptr, ptr %z, align 8, !dbg !2026
  %lt556 = icmp ult ptr %345, %346, !dbg !2025
  br i1 %lt556, label %loop.body557, label %loop.exit631, !dbg !2025

loop.body557:                                     ; preds = %loop.cond555
  call void @llvm.dbg.declare(metadata ptr %rm, metadata !2027, metadata !DIExpression()), !dbg !2029
  %347 = load ptr, ptr %d554, align 8, !dbg !2030
  %checknull558 = icmp eq ptr %347, null, !dbg !2030
  %348 = call i1 @llvm.expect.i1(i1 %checknull558, i1 false), !dbg !2030
  br i1 %348, label %panic559, label %checkok563, !dbg !2030

checkok563:                                       ; preds = %loop.body557
  %349 = load i32, ptr %347, align 4, !dbg !2030
  %350 = load i32, ptr %sh545, align 4, !dbg !2031
  %shift_underflow = icmp slt i32 %350, 0, !dbg !2032
  %351 = call i1 @llvm.expect.i1(i1 %shift_underflow, i1 false), !dbg !2032
  br i1 %351, label %panic564, label %checkok572, !dbg !2032

checkok572:                                       ; preds = %checkok563
  %shift_exceeds573 = icmp sge i32 %350, 32, !dbg !2032
  %352 = call i1 @llvm.expect.i1(i1 %shift_exceeds573, i1 false), !dbg !2032
  br i1 %352, label %panic574, label %checkok582, !dbg !2032

checkok582:                                       ; preds = %checkok572
  %shl583 = shl i32 1, %350, !dbg !2032
  %353 = freeze i32 %shl583, !dbg !2032
  %sub584 = sub i32 %353, 1, !dbg !2032
  %and585 = and i32 %349, %sub584, !dbg !2033
  store i32 %and585, ptr %rm, align 4, !dbg !2033
  %354 = load ptr, ptr %d554, align 8, !dbg !2034
  %checknull586 = icmp eq ptr %354, null, !dbg !2034
  %355 = call i1 @llvm.expect.i1(i1 %checknull586, i1 false), !dbg !2034
  br i1 %355, label %panic587, label %checkok591, !dbg !2034

checkok591:                                       ; preds = %checkok582
  %356 = load ptr, ptr %d554, align 8, !dbg !2035
  %checknull592 = icmp eq ptr %356, null, !dbg !2035
  %357 = call i1 @llvm.expect.i1(i1 %checknull592, i1 false), !dbg !2035
  br i1 %357, label %panic593, label %checkok597, !dbg !2035

checkok597:                                       ; preds = %checkok591
  %358 = load i32, ptr %356, align 4, !dbg !2035
  %359 = load i32, ptr %sh545, align 4, !dbg !2036
  %shift_exceeds598 = icmp uge i32 %359, 32, !dbg !2037
  %360 = call i1 @llvm.expect.i1(i1 %shift_exceeds598, i1 false), !dbg !2037
  br i1 %360, label %panic599, label %checkok607, !dbg !2037

checkok607:                                       ; preds = %checkok597
  %lshr608 = lshr i32 %358, %359, !dbg !2037
  %361 = freeze i32 %lshr608, !dbg !2037
  %362 = load i32, ptr %carry544, align 4, !dbg !2038
  %add609 = add i32 %361, %362, !dbg !2037
  store i32 %add609, ptr %354, align 4, !dbg !2037
  %363 = load i32, ptr %sh545, align 4, !dbg !2039
  %shift_underflow610 = icmp slt i32 %363, 0, !dbg !2040
  %364 = call i1 @llvm.expect.i1(i1 %shift_underflow610, i1 false), !dbg !2040
  br i1 %364, label %panic611, label %checkok619, !dbg !2040

checkok619:                                       ; preds = %checkok607
  %shift_exceeds620 = icmp sge i32 %363, 32, !dbg !2040
  %365 = call i1 @llvm.expect.i1(i1 %shift_exceeds620, i1 false), !dbg !2040
  br i1 %365, label %panic621, label %checkok629, !dbg !2040

checkok629:                                       ; preds = %checkok619
  %ashr = ashr i32 1000000000, %363, !dbg !2040
  %366 = freeze i32 %ashr, !dbg !2040
  %367 = load i32, ptr %rm, align 4, !dbg !2041
  %mul = mul i32 %366, %367, !dbg !2040
  store i32 %mul, ptr %carry544, align 4, !dbg !2040
  %368 = load ptr, ptr %d554, align 8, !dbg !2042
  %ptradd_any630 = getelementptr i8, ptr %368, i8 4, !dbg !2042
  store ptr %ptradd_any630, ptr %d554, align 8, !dbg !2042
  br label %loop.cond555, !dbg !2042

loop.exit631:                                     ; preds = %loop.cond555
  %369 = load ptr, ptr %a, align 8, !dbg !2043
  %370 = load i32, ptr %369, align 4, !dbg !2044
  %not632 = icmp eq i32 %370, 0, !dbg !2044
  br i1 %not632, label %if.then633, label %if.exit635, !dbg !2044

if.then633:                                       ; preds = %loop.exit631
  %371 = load ptr, ptr %a, align 8, !dbg !2045
  %ptradd_any634 = getelementptr i8, ptr %371, i8 4, !dbg !2045
  store ptr %ptradd_any634, ptr %a, align 8, !dbg !2045
  br label %if.exit635, !dbg !2045

if.exit635:                                       ; preds = %if.then633, %loop.exit631
  %372 = load i32, ptr %carry544, align 4, !dbg !2046
  %intbool636 = icmp ne i32 %372, 0, !dbg !2046
  br i1 %intbool636, label %if.then637, label %if.exit639, !dbg !2046

if.then637:                                       ; preds = %if.exit635
  %373 = load ptr, ptr %z, align 8, !dbg !2047
  %ptradd_any638 = getelementptr i8, ptr %373, i8 4, !dbg !2047
  store ptr %ptradd_any638, ptr %z, align 8, !dbg !2047
  %374 = load i32, ptr %carry544, align 4, !dbg !2048
  store i32 %374, ptr %373, align 4, !dbg !2048
  br label %if.exit639, !dbg !2048

if.exit639:                                       ; preds = %if.then637, %if.exit635
  %375 = load i32, ptr %formatting, align 4, !dbg !2049
  %eq640 = icmp eq i32 %375, 0, !dbg !2049
  br i1 %eq640, label %cond.lhs641, label %cond.rhs642, !dbg !2049

cond.lhs641:                                      ; preds = %if.exit639
  %376 = load ptr, ptr %r, align 8, !dbg !2050
  br label %cond.phi643, !dbg !2050

cond.rhs642:                                      ; preds = %if.exit639
  %377 = load ptr, ptr %a, align 8, !dbg !2051
  br label %cond.phi643, !dbg !2051

cond.phi643:                                      ; preds = %cond.rhs642, %cond.lhs641
  %val644 = phi ptr [ %376, %cond.lhs641 ], [ %377, %cond.rhs642 ], !dbg !2051
  store ptr %val644, ptr %b, align 8, !dbg !2051
  %378 = load ptr, ptr %z, align 8, !dbg !2052
  %379 = load ptr, ptr %b, align 8, !dbg !2053
  %380 = ptrtoint ptr %379 to i64, !dbg !2052
  %381 = ptrtoint ptr %378 to i64, !dbg !2052
  %382 = sub i64 %381, %380, !dbg !2052
  %383 = sdiv exact i64 %382, 4, !dbg !2052
  %384 = load i32, ptr %need, align 4, !dbg !2054
  %sext645 = sext i32 %384 to i64, !dbg !2054
  %gt646 = icmp sgt i64 %383, %sext645, !dbg !2052
  br i1 %gt646, label %if.then647, label %if.exit649, !dbg !2052

if.then647:                                       ; preds = %cond.phi643
  %385 = load ptr, ptr %b, align 8, !dbg !2055
  %386 = load i32, ptr %need, align 4, !dbg !2056
  %sext648 = sext i32 %386 to i64, !dbg !2056
  %ptroffset_any = getelementptr [4 x i8], ptr %385, i64 %sext648, !dbg !2056
  store ptr %ptroffset_any, ptr %z, align 8, !dbg !2056
  br label %if.exit649, !dbg !2056

if.exit649:                                       ; preds = %if.then647, %cond.phi643
  %387 = load i32, ptr %e2, align 4, !dbg !2057
  %388 = load i32, ptr %sh545, align 4, !dbg !2058
  %add650 = add i32 %387, %388, !dbg !2057
  store i32 %add650, ptr %e2, align 4, !dbg !2057
  br label %loop.cond541, !dbg !2057

loop.exit651:                                     ; preds = %loop.cond541
  call void @llvm.dbg.declare(metadata ptr %e652, metadata !2059, metadata !DIExpression()), !dbg !2060
  store i32 0, ptr %e652, align 4, !dbg !2060
  %389 = load ptr, ptr %a, align 8, !dbg !2061
  %390 = load ptr, ptr %z, align 8, !dbg !2062
  %lt653 = icmp ult ptr %389, %390, !dbg !2061
  br i1 %lt653, label %if.then654, label %if.exit668, !dbg !2061

if.then654:                                       ; preds = %loop.exit651
  call void @llvm.dbg.declare(metadata ptr %i, metadata !2063, metadata !DIExpression()), !dbg !2066
  store i32 10, ptr %i, align 4, !dbg !2067
  %391 = load ptr, ptr %r, align 8, !dbg !2068
  %392 = load ptr, ptr %a, align 8, !dbg !2069
  %393 = ptrtoint ptr %392 to i64, !dbg !2068
  %394 = ptrtoint ptr %391 to i64, !dbg !2068
  %395 = sub i64 %394, %393, !dbg !2068
  %396 = sdiv exact i64 %395, 4, !dbg !2068
  %mul655 = mul i64 9, %396, !dbg !2070
  %trunc656 = trunc i64 %mul655 to i32, !dbg !2070
  store i32 %trunc656, ptr %e652, align 4, !dbg !2070
  br label %loop.cond657, !dbg !2070

loop.cond657:                                     ; preds = %loop.body664, %if.then654
  %397 = load ptr, ptr %a, align 8, !dbg !2071
  %checknull658 = icmp eq ptr %397, null, !dbg !2071
  %398 = call i1 @llvm.expect.i1(i1 %checknull658, i1 false), !dbg !2071
  br i1 %398, label %panic659, label %checkok663, !dbg !2071

checkok663:                                       ; preds = %loop.cond657
  %399 = load i32, ptr %397, align 4, !dbg !2071
  %400 = load i32, ptr %i, align 4, !dbg !2072
  %le = icmp sle i32 %400, %399, !dbg !2073
  %check = icmp slt i32 %399, 0, !dbg !2073
  %siui-le = or i1 %check, %le, !dbg !2073
  br i1 %siui-le, label %loop.body664, label %loop.exit667, !dbg !2073

loop.body664:                                     ; preds = %checkok663
  %401 = load i32, ptr %i, align 4, !dbg !2074
  %mul665 = mul i32 %401, 10, !dbg !2074
  store i32 %mul665, ptr %i, align 4, !dbg !2074
  %402 = load i32, ptr %e652, align 4, !dbg !2075
  %add666 = add i32 %402, 1, !dbg !2075
  store i32 %add666, ptr %e652, align 4, !dbg !2075
  br label %loop.cond657, !dbg !2075

loop.exit667:                                     ; preds = %checkok663
  br label %if.exit668, !dbg !2075

if.exit668:                                       ; preds = %loop.exit667, %loop.exit651
  call void @llvm.dbg.declare(metadata ptr %j, metadata !2076, metadata !DIExpression()), !dbg !2077
  %403 = load i64, ptr %p, align 8, !dbg !2078
  %404 = load i32, ptr %formatting, align 4, !dbg !2079
  %eq669 = icmp eq i32 %404, 0, !dbg !2079
  br i1 %eq669, label %cond.lhs670, label %cond.rhs671, !dbg !2079

cond.lhs670:                                      ; preds = %if.exit668
  br label %cond.phi678, !dbg !2080

cond.rhs671:                                      ; preds = %if.exit668
  %405 = load i32, ptr %e652, align 4, !dbg !2081
  %406 = load i32, ptr %formatting, align 4, !dbg !2082
  %eq672 = icmp eq i32 %406, 2, !dbg !2082
  br i1 %eq672, label %and.rhs673, label %and.phi675, !dbg !2082

and.rhs673:                                       ; preds = %cond.rhs671
  %407 = load i64, ptr %p, align 8, !dbg !2083
  %intbool674 = icmp ne i64 %407, 0, !dbg !2083
  br label %and.phi675, !dbg !2083

and.phi675:                                       ; preds = %and.rhs673, %cond.rhs671
  %val676 = phi i1 [ false, %cond.rhs671 ], [ %intbool674, %and.rhs673 ], !dbg !2083
  %boolsi = zext i1 %val676 to i32, !dbg !2083
  %sub677 = sub i32 %405, %boolsi, !dbg !2081
  br label %cond.phi678, !dbg !2081

cond.phi678:                                      ; preds = %and.phi675, %cond.lhs670
  %val679 = phi i32 [ 0, %cond.lhs670 ], [ %sub677, %and.phi675 ], !dbg !2081
  %sext680 = sext i32 %val679 to i64, !dbg !2081
  %sub681 = sub i64 %403, %sext680, !dbg !2084
  %trunc682 = trunc i64 %sub681 to i32, !dbg !2084
  store i32 %trunc682, ptr %j, align 4, !dbg !2084
  %408 = load i32, ptr %j, align 4, !dbg !2085
  %sext683 = sext i32 %408 to i64, !dbg !2085
  %409 = load ptr, ptr %z, align 8, !dbg !2086
  %410 = load ptr, ptr %r, align 8, !dbg !2087
  %411 = ptrtoint ptr %410 to i64, !dbg !2086
  %412 = ptrtoint ptr %409 to i64, !dbg !2086
  %413 = sub i64 %412, %411, !dbg !2086
  %414 = sdiv exact i64 %413, 4, !dbg !2086
  %sub684 = sub i64 %414, 1, !dbg !2086
  %mul685 = mul i64 9, %sub684, !dbg !2088
  %lt686 = icmp slt i64 %sext683, %mul685, !dbg !2085
  br i1 %lt686, label %if.then687, label %if.exit861, !dbg !2085

if.then687:                                       ; preds = %cond.phi678
  call void @llvm.dbg.declare(metadata ptr %x688, metadata !2089, metadata !DIExpression()), !dbg !2091
  store i32 0, ptr %x688, align 4, !dbg !2091
  call void @llvm.dbg.declare(metadata ptr %d689, metadata !2092, metadata !DIExpression()), !dbg !2093
  %415 = load ptr, ptr %r, align 8, !dbg !2094
  %416 = load i32, ptr %j, align 4, !dbg !2095
  %add690 = add i32 %416, 9216, !dbg !2095
  %sdiv691 = sdiv i32 %add690, 9, !dbg !2095
  %sub692 = sub i32 %sdiv691, 1024, !dbg !2095
  %sext693 = sext i32 %sub692 to i64, !dbg !2095
  %add694 = add i64 1, %sext693, !dbg !2094
  %ptroffset_any695 = getelementptr [4 x i8], ptr %415, i64 %add694, !dbg !2094
  store ptr %ptroffset_any695, ptr %d689, align 8, !dbg !2094
  %417 = load i32, ptr %j, align 4, !dbg !2096
  %add696 = add i32 %417, 9216, !dbg !2096
  store i32 %add696, ptr %j, align 4, !dbg !2096
  %418 = load i32, ptr %j, align 4, !dbg !2097
  %smod697 = srem i32 %418, 9, !dbg !2097
  store i32 %smod697, ptr %j, align 4, !dbg !2097
  call void @llvm.dbg.declare(metadata ptr %i698, metadata !2098, metadata !DIExpression()), !dbg !2099
  store i32 0, ptr %i698, align 4, !dbg !2099
  store i32 10, ptr %i698, align 4, !dbg !2100
  %419 = load i32, ptr %j, align 4, !dbg !2102
  %add699 = add i32 %419, 1, !dbg !2102
  store i32 %add699, ptr %j, align 4, !dbg !2102
  br label %loop.cond700, !dbg !2102

loop.cond700:                                     ; preds = %loop.body702, %if.then687
  %420 = load i32, ptr %j, align 4, !dbg !2103
  %lt701 = icmp slt i32 %420, 9, !dbg !2103
  br i1 %lt701, label %loop.body702, label %loop.exit705, !dbg !2103

loop.body702:                                     ; preds = %loop.cond700
  %421 = load i32, ptr %i698, align 4, !dbg !2104
  %mul703 = mul i32 %421, 10, !dbg !2104
  store i32 %mul703, ptr %i698, align 4, !dbg !2104
  %422 = load i32, ptr %j, align 4, !dbg !2105
  %add704 = add i32 %422, 1, !dbg !2105
  store i32 %add704, ptr %j, align 4, !dbg !2105
  br label %loop.cond700, !dbg !2105

loop.exit705:                                     ; preds = %loop.cond700
  %423 = load ptr, ptr %d689, align 8, !dbg !2106
  %checknull706 = icmp eq ptr %423, null, !dbg !2106
  %424 = call i1 @llvm.expect.i1(i1 %checknull706, i1 false), !dbg !2106
  br i1 %424, label %panic707, label %checkok711, !dbg !2106

checkok711:                                       ; preds = %loop.exit705
  %425 = load i32, ptr %423, align 4, !dbg !2106
  %426 = load i32, ptr %i698, align 4, !dbg !2107
  %zero = icmp eq i32 %426, 0, !dbg !2108
  %427 = call i1 @llvm.expect.i1(i1 %zero, i1 false), !dbg !2108
  br i1 %427, label %panic712, label %checkok716, !dbg !2108

checkok716:                                       ; preds = %checkok711
  %smod717 = srem i32 %425, %426, !dbg !2108
  store i32 %smod717, ptr %x688, align 4, !dbg !2108
  %428 = load i32, ptr %x688, align 4, !dbg !2109
  %intbool718 = icmp ne i32 %428, 0, !dbg !2109
  br i1 %intbool718, label %or.phi722, label %or.rhs719, !dbg !2109

or.rhs719:                                        ; preds = %checkok716
  %429 = load ptr, ptr %d689, align 8, !dbg !2110
  %ptradd_any720 = getelementptr i8, ptr %429, i64 4, !dbg !2111
  %430 = load ptr, ptr %z, align 8, !dbg !2112
  %neq721 = icmp ne ptr %ptradd_any720, %430, !dbg !2110
  br label %or.phi722, !dbg !2110

or.phi722:                                        ; preds = %or.rhs719, %checkok716
  %val723 = phi i1 [ true, %checkok716 ], [ %neq721, %or.rhs719 ], !dbg !2110
  br i1 %val723, label %if.then724, label %if.exit855, !dbg !2110

if.then724:                                       ; preds = %or.phi722
  call void @llvm.dbg.declare(metadata ptr %round725, metadata !2113, metadata !DIExpression()), !dbg !2115
  store double 0x4340000000000000, ptr %round725, align 8, !dbg !2116
  call void @llvm.dbg.declare(metadata ptr %small, metadata !2117, metadata !DIExpression()), !dbg !2118
  store double 0.000000e+00, ptr %small, align 8, !dbg !2118
  %431 = load ptr, ptr %d689, align 8, !dbg !2119
  %checknull726 = icmp eq ptr %431, null, !dbg !2119
  %432 = call i1 @llvm.expect.i1(i1 %checknull726, i1 false), !dbg !2119
  br i1 %432, label %panic727, label %checkok731, !dbg !2119

checkok731:                                       ; preds = %if.then724
  %433 = load i32, ptr %431, align 4, !dbg !2119
  %434 = load i32, ptr %i698, align 4, !dbg !2120
  %zero732 = icmp eq i32 %434, 0, !dbg !2121
  %435 = call i1 @llvm.expect.i1(i1 %zero732, i1 false), !dbg !2121
  br i1 %435, label %panic733, label %checkok737, !dbg !2121

checkok737:                                       ; preds = %checkok731
  %sdiv738 = sdiv i32 %433, %434, !dbg !2121
  %and739 = and i32 %sdiv738, 1, !dbg !2121
  %intbool740 = icmp ne i32 %and739, 0, !dbg !2121
  br i1 %intbool740, label %or.phi753, label %or.rhs741, !dbg !2121

or.rhs741:                                        ; preds = %checkok737
  %436 = load i32, ptr %i698, align 4, !dbg !2122
  %eq742 = icmp eq i32 %436, 1000000000, !dbg !2122
  br i1 %eq742, label %and.rhs743, label %and.phi745, !dbg !2122

and.rhs743:                                       ; preds = %or.rhs741
  %437 = load ptr, ptr %d689, align 8, !dbg !2123
  %438 = load ptr, ptr %a, align 8, !dbg !2124
  %gt744 = icmp ugt ptr %437, %438, !dbg !2123
  br label %and.phi745, !dbg !2123

and.phi745:                                       ; preds = %and.rhs743, %or.rhs741
  %val746 = phi i1 [ false, %or.rhs741 ], [ %gt744, %and.rhs743 ], !dbg !2123
  br i1 %val746, label %and.rhs747, label %and.phi751, !dbg !2123

and.rhs747:                                       ; preds = %and.phi745
  %439 = load ptr, ptr %d689, align 8, !dbg !2125
  %ptradd748 = getelementptr inbounds i8, ptr %439, i64 -4, !dbg !2126
  %440 = load i32, ptr %ptradd748, align 4, !dbg !2126
  %and749 = and i32 %440, 1, !dbg !2125
  %intbool750 = icmp ne i32 %and749, 0, !dbg !2125
  br label %and.phi751, !dbg !2125

and.phi751:                                       ; preds = %and.rhs747, %and.phi745
  %val752 = phi i1 [ false, %and.phi745 ], [ %intbool750, %and.rhs747 ], !dbg !2125
  br label %or.phi753, !dbg !2125

or.phi753:                                        ; preds = %and.phi751, %checkok737
  %val754 = phi i1 [ true, %checkok737 ], [ %val752, %and.phi751 ], !dbg !2125
  br i1 %val754, label %if.then755, label %if.exit757, !dbg !2125

if.then755:                                       ; preds = %or.phi753
  %441 = load double, ptr %round725, align 8, !dbg !2127
  %fadd756 = fadd double %441, 2.000000e+00, !dbg !2127
  store double %fadd756, ptr %round725, align 8, !dbg !2127
  br label %if.exit757, !dbg !2127

if.exit757:                                       ; preds = %if.then755, %or.phi753
  store i8 1, ptr %switch, align 1
  br label %switch.entry

switch.entry:                                     ; preds = %if.exit757
  %442 = load i8, ptr %switch, align 1
  %443 = trunc i8 %442 to i1
  %444 = load i32, ptr %x688, align 4, !dbg !2129
  %445 = load i32, ptr %i698, align 4, !dbg !2131
  %sdiv758 = sdiv i32 %445, 2, !dbg !2131
  %gt759 = icmp sgt i32 %sdiv758, %444, !dbg !2129
  %check760 = icmp sge i32 %444, 0, !dbg !2129
  %siui-gt = and i1 %check760, %gt759, !dbg !2129
  %eq761 = icmp eq i1 %siui-gt, %443, !dbg !2129
  br i1 %eq761, label %switch.case, label %next_if, !dbg !2129

switch.case:                                      ; preds = %switch.entry
  store double 5.000000e-01, ptr %small, align 8, !dbg !2132
  br label %switch.exit, !dbg !2132

next_if:                                          ; preds = %switch.entry
  %446 = load i32, ptr %x688, align 4, !dbg !2134
  %447 = load i32, ptr %i698, align 4, !dbg !2135
  %sdiv762 = sdiv i32 %447, 2, !dbg !2135
  %eq763 = icmp eq i32 %sdiv762, %446, !dbg !2134
  %check764 = icmp sge i32 %sdiv762, 0, !dbg !2134
  %siui-eq = and i1 %check764, %eq763, !dbg !2134
  br i1 %siui-eq, label %and.rhs765, label %and.phi768, !dbg !2134

and.rhs765:                                       ; preds = %next_if
  %448 = load ptr, ptr %d689, align 8, !dbg !2136
  %ptradd_any766 = getelementptr i8, ptr %448, i64 4, !dbg !2137
  %449 = load ptr, ptr %z, align 8, !dbg !2138
  %eq767 = icmp eq ptr %ptradd_any766, %449, !dbg !2136
  br label %and.phi768, !dbg !2136

and.phi768:                                       ; preds = %and.rhs765, %next_if
  %val769 = phi i1 [ false, %next_if ], [ %eq767, %and.rhs765 ], !dbg !2136
  %eq770 = icmp eq i1 %val769, %443, !dbg !2136
  br i1 %eq770, label %switch.case771, label %next_if772, !dbg !2136

switch.case771:                                   ; preds = %and.phi768
  store double 1.000000e+00, ptr %small, align 8, !dbg !2139
  br label %switch.exit, !dbg !2139

next_if772:                                       ; preds = %and.phi768
  br label %switch.default, !dbg !2139

switch.default:                                   ; preds = %next_if772
  store double 1.500000e+00, ptr %small, align 8, !dbg !2141
  br label %switch.exit, !dbg !2141

switch.exit:                                      ; preds = %switch.default, %switch.case771, %switch.case
  %450 = load i64, ptr %pl, align 8, !dbg !2143
  %intbool773 = icmp ne i64 %450, 0, !dbg !2143
  br i1 %intbool773, label %and.rhs774, label %and.phi775, !dbg !2143

and.rhs774:                                       ; preds = %switch.exit
  %451 = load i8, ptr %is_neg, align 1, !dbg !2144
  %452 = trunc i8 %451 to i1, !dbg !2144
  br label %and.phi775, !dbg !2144

and.phi775:                                       ; preds = %and.rhs774, %switch.exit
  %val776 = phi i1 [ false, %switch.exit ], [ %452, %and.rhs774 ], !dbg !2144
  br i1 %val776, label %if.then777, label %if.exit780, !dbg !2144

if.then777:                                       ; preds = %and.phi775
  %453 = load double, ptr %round725, align 8, !dbg !2145
  %fmul778 = fmul double %453, -1.000000e+00, !dbg !2145
  store double %fmul778, ptr %round725, align 8, !dbg !2145
  %454 = load double, ptr %small, align 8, !dbg !2147
  %fmul779 = fmul double %454, -1.000000e+00, !dbg !2147
  store double %fmul779, ptr %small, align 8, !dbg !2147
  br label %if.exit780, !dbg !2147

if.exit780:                                       ; preds = %if.then777, %and.phi775
  %455 = load ptr, ptr %d689, align 8, !dbg !2148
  %checknull781 = icmp eq ptr %455, null, !dbg !2148
  %456 = call i1 @llvm.expect.i1(i1 %checknull781, i1 false), !dbg !2148
  br i1 %456, label %panic782, label %checkok786, !dbg !2148

checkok786:                                       ; preds = %if.exit780
  %457 = load i32, ptr %455, align 4, !dbg !2148
  %458 = load i32, ptr %x688, align 4, !dbg !2149
  %sub787 = sub i32 %457, %458, !dbg !2150
  store i32 %sub787, ptr %455, align 4, !dbg !2150
  %459 = load double, ptr %round725, align 8, !dbg !2151
  %460 = load double, ptr %small, align 8, !dbg !2152
  %fadd788 = fadd double %459, %460, !dbg !2151
  %461 = load double, ptr %round725, align 8, !dbg !2153
  %neq789 = fcmp one double %fadd788, %461, !dbg !2151
  br i1 %neq789, label %if.then790, label %if.exit854, !dbg !2151

if.then790:                                       ; preds = %checkok786
  %462 = load ptr, ptr %d689, align 8, !dbg !2154
  %checknull791 = icmp eq ptr %462, null, !dbg !2154
  %463 = call i1 @llvm.expect.i1(i1 %checknull791, i1 false), !dbg !2154
  br i1 %463, label %panic792, label %checkok796, !dbg !2154

checkok796:                                       ; preds = %if.then790
  %464 = load ptr, ptr %d689, align 8, !dbg !2156
  %checknull797 = icmp eq ptr %464, null, !dbg !2156
  %465 = call i1 @llvm.expect.i1(i1 %checknull797, i1 false), !dbg !2156
  br i1 %465, label %panic798, label %checkok802, !dbg !2156

checkok802:                                       ; preds = %checkok796
  %466 = load i32, ptr %464, align 4, !dbg !2156
  %467 = load i32, ptr %i698, align 4, !dbg !2157
  %add803 = add i32 %466, %467, !dbg !2158
  store i32 %add803, ptr %462, align 4, !dbg !2158
  br label %loop.cond804, !dbg !2159

loop.cond804:                                     ; preds = %checkok835, %checkok802
  %468 = load ptr, ptr %d689, align 8, !dbg !2160
  %checknull805 = icmp eq ptr %468, null, !dbg !2160
  %469 = call i1 @llvm.expect.i1(i1 %checknull805, i1 false), !dbg !2160
  br i1 %469, label %panic806, label %checkok810, !dbg !2160

checkok810:                                       ; preds = %loop.cond804
  %470 = load i32, ptr %468, align 4, !dbg !2160
  %lt811 = icmp ult i32 999999999, %470, !dbg !2162
  br i1 %lt811, label %loop.body812, label %loop.exit837, !dbg !2162

loop.body812:                                     ; preds = %checkok810
  %471 = load ptr, ptr %d689, align 8, !dbg !2163
  %ptradd_any813 = getelementptr i8, ptr %471, i8 -4, !dbg !2163
  store ptr %ptradd_any813, ptr %d689, align 8, !dbg !2163
  %checknull814 = icmp eq ptr %471, null, !dbg !2163
  %472 = call i1 @llvm.expect.i1(i1 %checknull814, i1 false), !dbg !2163
  br i1 %472, label %panic815, label %checkok819, !dbg !2163

checkok819:                                       ; preds = %loop.body812
  store i32 0, ptr %471, align 4, !dbg !2165
  %473 = load ptr, ptr %d689, align 8, !dbg !2166
  %474 = load ptr, ptr %a, align 8, !dbg !2167
  %lt820 = icmp ult ptr %473, %474, !dbg !2166
  br i1 %lt820, label %if.then821, label %if.exit829, !dbg !2166

if.then821:                                       ; preds = %checkok819
  %475 = load ptr, ptr %a, align 8, !dbg !2168
  %ptradd_any822 = getelementptr i8, ptr %475, i8 -4, !dbg !2168
  store ptr %ptradd_any822, ptr %a, align 8, !dbg !2168
  %checknull823 = icmp eq ptr %ptradd_any822, null, !dbg !2168
  %476 = call i1 @llvm.expect.i1(i1 %checknull823, i1 false), !dbg !2168
  br i1 %476, label %panic824, label %checkok828, !dbg !2168

checkok828:                                       ; preds = %if.then821
  store i32 0, ptr %ptradd_any822, align 4, !dbg !2169
  br label %if.exit829, !dbg !2169

if.exit829:                                       ; preds = %checkok828, %checkok819
  %477 = load ptr, ptr %d689, align 8, !dbg !2170
  %checknull830 = icmp eq ptr %477, null, !dbg !2170
  %478 = call i1 @llvm.expect.i1(i1 %checknull830, i1 false), !dbg !2170
  br i1 %478, label %panic831, label %checkok835, !dbg !2170

checkok835:                                       ; preds = %if.exit829
  %479 = load i32, ptr %477, align 4, !dbg !2171
  %add836 = add i32 %479, 1, !dbg !2171
  store i32 %add836, ptr %477, align 4, !dbg !2171
  br label %loop.cond804, !dbg !2171

loop.exit837:                                     ; preds = %checkok810
  store i32 10, ptr %i698, align 4, !dbg !2172
  %480 = load ptr, ptr %r, align 8, !dbg !2174
  %481 = load ptr, ptr %a, align 8, !dbg !2175
  %482 = ptrtoint ptr %481 to i64, !dbg !2174
  %483 = ptrtoint ptr %480 to i64, !dbg !2174
  %484 = sub i64 %483, %482, !dbg !2174
  %485 = sdiv exact i64 %484, 4, !dbg !2174
  %mul838 = mul i64 9, %485, !dbg !2176
  %trunc839 = trunc i64 %mul838 to i32, !dbg !2176
  store i32 %trunc839, ptr %e652, align 4, !dbg !2176
  br label %loop.cond840, !dbg !2176

loop.cond840:                                     ; preds = %loop.body850, %loop.exit837
  %486 = load ptr, ptr %a, align 8, !dbg !2177
  %checknull841 = icmp eq ptr %486, null, !dbg !2177
  %487 = call i1 @llvm.expect.i1(i1 %checknull841, i1 false), !dbg !2177
  br i1 %487, label %panic842, label %checkok846, !dbg !2177

checkok846:                                       ; preds = %loop.cond840
  %488 = load i32, ptr %486, align 4, !dbg !2177
  %489 = load i32, ptr %i698, align 4, !dbg !2178
  %le847 = icmp sle i32 %489, %488, !dbg !2179
  %check848 = icmp slt i32 %488, 0, !dbg !2179
  %siui-le849 = or i1 %check848, %le847, !dbg !2179
  br i1 %siui-le849, label %loop.body850, label %loop.exit853, !dbg !2179

loop.body850:                                     ; preds = %checkok846
  %490 = load i32, ptr %i698, align 4, !dbg !2180
  %mul851 = mul i32 %490, 10, !dbg !2180
  store i32 %mul851, ptr %i698, align 4, !dbg !2180
  %491 = load i32, ptr %e652, align 4, !dbg !2181
  %add852 = add i32 %491, 1, !dbg !2181
  store i32 %add852, ptr %e652, align 4, !dbg !2181
  br label %loop.cond840, !dbg !2181

loop.exit853:                                     ; preds = %checkok846
  br label %if.exit854, !dbg !2181

if.exit854:                                       ; preds = %loop.exit853, %checkok786
  br label %if.exit855, !dbg !2181

if.exit855:                                       ; preds = %if.exit854, %or.phi722
  %492 = load ptr, ptr %z, align 8, !dbg !2182
  %493 = load ptr, ptr %d689, align 8, !dbg !2183
  %ptradd_any856 = getelementptr i8, ptr %493, i64 4, !dbg !2184
  %gt857 = icmp ugt ptr %492, %ptradd_any856, !dbg !2182
  br i1 %gt857, label %if.then858, label %if.exit860, !dbg !2182

if.then858:                                       ; preds = %if.exit855
  %494 = load ptr, ptr %d689, align 8, !dbg !2185
  %ptradd_any859 = getelementptr i8, ptr %494, i64 4, !dbg !2186
  store ptr %ptradd_any859, ptr %z, align 8, !dbg !2186
  br label %if.exit860, !dbg !2186

if.exit860:                                       ; preds = %if.then858, %if.exit855
  br label %if.exit861, !dbg !2186

if.exit861:                                       ; preds = %if.exit860, %cond.phi678
  br label %loop.cond862, !dbg !2187

loop.cond862:                                     ; preds = %loop.body869, %if.exit861
  %495 = load ptr, ptr %z, align 8, !dbg !2188
  %496 = load ptr, ptr %a, align 8, !dbg !2190
  %gt863 = icmp ugt ptr %495, %496, !dbg !2188
  br i1 %gt863, label %and.rhs864, label %and.phi867, !dbg !2188

and.rhs864:                                       ; preds = %loop.cond862
  %497 = load ptr, ptr %z, align 8, !dbg !2191
  %ptradd865 = getelementptr inbounds i8, ptr %497, i64 -4, !dbg !2192
  %498 = load i32, ptr %ptradd865, align 4, !dbg !2192
  %not866 = icmp eq i32 %498, 0, !dbg !2192
  br label %and.phi867, !dbg !2192

and.phi867:                                       ; preds = %and.rhs864, %loop.cond862
  %val868 = phi i1 [ false, %loop.cond862 ], [ %not866, %and.rhs864 ], !dbg !2192
  br i1 %val868, label %loop.body869, label %loop.exit871, !dbg !2192

loop.body869:                                     ; preds = %and.phi867
  %499 = load ptr, ptr %z, align 8, !dbg !2193
  %ptradd_any870 = getelementptr i8, ptr %499, i8 -4, !dbg !2193
  store ptr %ptradd_any870, ptr %z, align 8, !dbg !2193
  br label %loop.cond862, !dbg !2193

loop.exit871:                                     ; preds = %and.phi867
  %500 = load i32, ptr %formatting, align 4, !dbg !2194
  %eq872 = icmp eq i32 %500, 2, !dbg !2194
  br i1 %eq872, label %if.then873, label %if.exit949, !dbg !2194

if.then873:                                       ; preds = %loop.exit871
  %501 = load i64, ptr %p, align 8, !dbg !2195
  %not874 = icmp eq i64 %501, 0, !dbg !2195
  br i1 %not874, label %if.then875, label %if.exit877, !dbg !2195

if.then875:                                       ; preds = %if.then873
  %502 = load i64, ptr %p, align 8, !dbg !2197
  %add876 = add i64 %502, 1, !dbg !2197
  store i64 %add876, ptr %p, align 8, !dbg !2197
  br label %if.exit877, !dbg !2197

if.exit877:                                       ; preds = %if.then875, %if.then873
  %503 = load i64, ptr %p, align 8, !dbg !2198
  %504 = load i32, ptr %e652, align 4, !dbg !2199
  %sext878 = sext i32 %504 to i64, !dbg !2199
  %gt879 = icmp sgt i64 %503, %sext878, !dbg !2198
  br i1 %gt879, label %and.rhs880, label %and.phi882, !dbg !2198

and.rhs880:                                       ; preds = %if.exit877
  %505 = load i32, ptr %e652, align 4, !dbg !2200
  %ge881 = icmp sge i32 %505, -4, !dbg !2200
  br label %and.phi882, !dbg !2200

and.phi882:                                       ; preds = %and.rhs880, %if.exit877
  %val883 = phi i1 [ false, %if.exit877 ], [ %ge881, %and.rhs880 ], !dbg !2200
  br i1 %val883, label %if.then884, label %if.else888, !dbg !2200

if.then884:                                       ; preds = %and.phi882
  store i32 0, ptr %formatting, align 4, !dbg !2201
  %506 = load i64, ptr %p, align 8, !dbg !2203
  %507 = load i32, ptr %e652, align 4, !dbg !2204
  %sext885 = sext i32 %507 to i64, !dbg !2204
  %add886 = add i64 %sext885, 1, !dbg !2204
  %sub887 = sub i64 %506, %add886, !dbg !2203
  store i64 %sub887, ptr %p, align 8, !dbg !2203
  br label %if.exit890, !dbg !2203

if.else888:                                       ; preds = %and.phi882
  store i32 1, ptr %formatting, align 4, !dbg !2205
  %508 = load i64, ptr %p, align 8, !dbg !2207
  %sub889 = sub i64 %508, 1, !dbg !2207
  store i64 %sub889, ptr %p, align 8, !dbg !2207
  br label %if.exit890, !dbg !2207

if.exit890:                                       ; preds = %if.else888, %if.then884
  %509 = load ptr, ptr %self, align 8, !dbg !2208
  %checknull891 = icmp eq ptr %509, null, !dbg !2208
  %510 = call i1 @llvm.expect.i1(i1 %checknull891, i1 false), !dbg !2208
  br i1 %510, label %panic892, label %checkok896, !dbg !2208

checkok896:                                       ; preds = %if.exit890
  %ptradd897 = getelementptr inbounds i8, ptr %509, i64 16, !dbg !2208
  %511 = load i32, ptr %ptradd897, align 8, !dbg !2208
  %lshrl898 = lshr i32 %511, 4, !dbg !2208
  %512 = and i32 1, %lshrl898, !dbg !2208
  %trunc899 = trunc i32 %512 to i8, !dbg !2208
  %513 = trunc i8 %trunc899 to i1, !dbg !2208
  %not900 = xor i1 %513, true, !dbg !2208
  br i1 %not900, label %if.then901, label %if.exit948, !dbg !2208

if.then901:                                       ; preds = %checkok896
  %514 = load ptr, ptr %z, align 8, !dbg !2209
  %515 = load ptr, ptr %a, align 8, !dbg !2211
  %gt902 = icmp ugt ptr %514, %515, !dbg !2209
  br i1 %gt902, label %and.rhs903, label %and.phi906, !dbg !2209

and.rhs903:                                       ; preds = %if.then901
  %516 = load ptr, ptr %z, align 8, !dbg !2212
  %ptradd904 = getelementptr inbounds i8, ptr %516, i64 -4, !dbg !2213
  %517 = load i32, ptr %ptradd904, align 4, !dbg !2213
  %intbool905 = icmp ne i32 %517, 0, !dbg !2213
  br label %and.phi906, !dbg !2213

and.phi906:                                       ; preds = %and.rhs903, %if.then901
  %val907 = phi i1 [ false, %if.then901 ], [ %intbool905, %and.rhs903 ], !dbg !2213
  br i1 %val907, label %if.then908, label %if.else924, !dbg !2213

if.then908:                                       ; preds = %and.phi906
  call void @llvm.dbg.declare(metadata ptr %i909, metadata !2214, metadata !DIExpression()), !dbg !2217
  store i32 10, ptr %i909, align 4, !dbg !2218
  store i32 0, ptr %j, align 4, !dbg !2219
  br label %loop.cond910, !dbg !2219

loop.cond910:                                     ; preds = %loop.body920, %if.then908
  %518 = load ptr, ptr %z, align 8, !dbg !2220
  %ptradd911 = getelementptr inbounds i8, ptr %518, i64 -4, !dbg !2221
  %519 = load i32, ptr %ptradd911, align 4, !dbg !2221
  %520 = load i32, ptr %i909, align 4, !dbg !2222
  %zero912 = icmp eq i32 %520, 0, !dbg !2220
  %521 = call i1 @llvm.expect.i1(i1 %zero912, i1 false), !dbg !2220
  br i1 %521, label %panic913, label %checkok917, !dbg !2220

checkok917:                                       ; preds = %loop.cond910
  %smod918 = srem i32 %519, %520, !dbg !2220
  %eq919 = icmp eq i32 %smod918, 0, !dbg !2220
  br i1 %eq919, label %loop.body920, label %loop.exit923, !dbg !2220

loop.body920:                                     ; preds = %checkok917
  %522 = load i32, ptr %i909, align 4, !dbg !2223
  %mul921 = mul i32 %522, 10, !dbg !2223
  store i32 %mul921, ptr %i909, align 4, !dbg !2223
  %523 = load i32, ptr %j, align 4, !dbg !2224
  %add922 = add i32 %523, 1, !dbg !2224
  store i32 %add922, ptr %j, align 4, !dbg !2224
  br label %loop.cond910, !dbg !2224

loop.exit923:                                     ; preds = %checkok917
  br label %if.exit925, !dbg !2224

if.else924:                                       ; preds = %and.phi906
  store i32 9, ptr %j, align 4, !dbg !2225
  br label %if.exit925, !dbg !2225

if.exit925:                                       ; preds = %if.else924, %loop.exit923
  %524 = load i32, ptr %formatting, align 4, !dbg !2227
  %eq926 = icmp eq i32 %524, 0, !dbg !2227
  br i1 %eq926, label %if.then927, label %if.else936, !dbg !2227

if.then927:                                       ; preds = %if.exit925
  %525 = load i64, ptr %p, align 8
  store i64 %525, ptr %x928, align 8
  store i64 0, ptr %x929, align 8
  %526 = load ptr, ptr %z, align 8, !dbg !2228
  %527 = load ptr, ptr %r, align 8, !dbg !2230
  %528 = ptrtoint ptr %527 to i64, !dbg !2228
  %529 = ptrtoint ptr %526 to i64, !dbg !2228
  %530 = sub i64 %529, %528, !dbg !2228
  %531 = sdiv exact i64 %530, 4, !dbg !2228
  %sub930 = sub i64 %531, 1, !dbg !2228
  %mul931 = mul i64 9, %sub930, !dbg !2231
  %532 = load i32, ptr %j, align 4, !dbg !2232
  %sext932 = sext i32 %532 to i64, !dbg !2232
  %sub933 = sub i64 %mul931, %sext932, !dbg !2231
  store i64 %sub933, ptr %y934, align 8
  %533 = load i64, ptr %x929, align 8, !dbg !2233
  %534 = load i64, ptr %y934, align 8, !dbg !2236
  %535 = call i64 @llvm.smax.i64(i64 %533, i64 %534), !dbg !2236
  store i64 %535, ptr %y935, align 8
  %536 = load i64, ptr %x928, align 8, !dbg !2237
  %537 = load i64, ptr %y935, align 8, !dbg !2240
  %538 = call i64 @llvm.smin.i64(i64 %536, i64 %537), !dbg !2240
  store i64 %538, ptr %p, align 8, !dbg !2240
  br label %if.exit947, !dbg !2240

if.else936:                                       ; preds = %if.exit925
  %539 = load i64, ptr %p, align 8
  store i64 %539, ptr %x937, align 8
  store i64 0, ptr %x938, align 8
  %540 = load ptr, ptr %z, align 8, !dbg !2241
  %541 = load ptr, ptr %r, align 8, !dbg !2243
  %542 = ptrtoint ptr %541 to i64, !dbg !2241
  %543 = ptrtoint ptr %540 to i64, !dbg !2241
  %544 = sub i64 %543, %542, !dbg !2241
  %545 = sdiv exact i64 %544, 4, !dbg !2241
  %sub939 = sub i64 %545, 1, !dbg !2241
  %mul940 = mul i64 9, %sub939, !dbg !2244
  %546 = load i32, ptr %e652, align 4, !dbg !2245
  %sext941 = sext i32 %546 to i64, !dbg !2245
  %add942 = add i64 %mul940, %sext941, !dbg !2244
  %547 = load i32, ptr %j, align 4, !dbg !2246
  %sext943 = sext i32 %547 to i64, !dbg !2246
  %sub944 = sub i64 %add942, %sext943, !dbg !2244
  store i64 %sub944, ptr %y945, align 8
  %548 = load i64, ptr %x938, align 8, !dbg !2247
  %549 = load i64, ptr %y945, align 8, !dbg !2250
  %550 = call i64 @llvm.smax.i64(i64 %548, i64 %549), !dbg !2250
  store i64 %550, ptr %y946, align 8
  %551 = load i64, ptr %x937, align 8, !dbg !2251
  %552 = load i64, ptr %y946, align 8, !dbg !2254
  %553 = call i64 @llvm.smin.i64(i64 %551, i64 %552), !dbg !2254
  store i64 %553, ptr %p, align 8, !dbg !2254
  br label %if.exit947, !dbg !2254

if.exit947:                                       ; preds = %if.else936, %if.then927
  br label %if.exit948, !dbg !2254

if.exit948:                                       ; preds = %if.exit947, %checkok896
  br label %if.exit949, !dbg !2254

if.exit949:                                       ; preds = %if.exit948, %loop.exit871
  %554 = load i64, ptr %p, align 8, !dbg !2255
  %555 = load i64, ptr %p, align 8, !dbg !2256
  %intbool950 = icmp ne i64 %555, 0, !dbg !2256
  br i1 %intbool950, label %or.phi961, label %or.rhs951, !dbg !2256

or.rhs951:                                        ; preds = %if.exit949
  %556 = load ptr, ptr %self, align 8, !dbg !2257
  %checknull952 = icmp eq ptr %556, null, !dbg !2257
  %557 = call i1 @llvm.expect.i1(i1 %checknull952, i1 false), !dbg !2257
  br i1 %557, label %panic953, label %checkok957, !dbg !2257

checkok957:                                       ; preds = %or.rhs951
  %ptradd958 = getelementptr inbounds i8, ptr %556, i64 16, !dbg !2257
  %558 = load i32, ptr %ptradd958, align 8, !dbg !2257
  %lshrl959 = lshr i32 %558, 4, !dbg !2257
  %559 = and i32 1, %lshrl959, !dbg !2257
  %trunc960 = trunc i32 %559 to i8, !dbg !2257
  %560 = trunc i8 %trunc960 to i1, !dbg !2257
  br label %or.phi961, !dbg !2257

or.phi961:                                        ; preds = %checkok957, %if.exit949
  %val962 = phi i1 [ true, %if.exit949 ], [ %560, %checkok957 ], !dbg !2257
  %boolsi963 = zext i1 %val962 to i64, !dbg !2257
  %sub964 = sub i64 2147483646, %boolsi963, !dbg !2258
  %gt965 = icmp sgt i64 %554, %sub964, !dbg !2255
  br i1 %gt965, label %if.then966, label %if.exit967, !dbg !2255

if.then966:                                       ; preds = %or.phi961
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2259

if.exit967:                                       ; preds = %or.phi961
  call void @llvm.dbg.declare(metadata ptr %l968, metadata !2260, metadata !DIExpression()), !dbg !2261
  %561 = load i64, ptr %p, align 8, !dbg !2262
  %add969 = add i64 1, %561, !dbg !2263
  %562 = load i64, ptr %p, align 8, !dbg !2264
  %intbool970 = icmp ne i64 %562, 0, !dbg !2264
  br i1 %intbool970, label %or.phi981, label %or.rhs971, !dbg !2264

or.rhs971:                                        ; preds = %if.exit967
  %563 = load ptr, ptr %self, align 8, !dbg !2265
  %checknull972 = icmp eq ptr %563, null, !dbg !2265
  %564 = call i1 @llvm.expect.i1(i1 %checknull972, i1 false), !dbg !2265
  br i1 %564, label %panic973, label %checkok977, !dbg !2265

checkok977:                                       ; preds = %or.rhs971
  %ptradd978 = getelementptr inbounds i8, ptr %563, i64 16, !dbg !2265
  %565 = load i32, ptr %ptradd978, align 8, !dbg !2265
  %lshrl979 = lshr i32 %565, 4, !dbg !2265
  %566 = and i32 1, %lshrl979, !dbg !2265
  %trunc980 = trunc i32 %566 to i8, !dbg !2265
  %567 = trunc i8 %trunc980 to i1, !dbg !2265
  br label %or.phi981, !dbg !2265

or.phi981:                                        ; preds = %checkok977, %if.exit967
  %val982 = phi i1 [ true, %if.exit967 ], [ %567, %checkok977 ], !dbg !2265
  %boolsi983 = zext i1 %val982 to i64, !dbg !2265
  %add984 = add i64 %add969, %boolsi983, !dbg !2266
  %trunc985 = trunc i64 %add984 to i32, !dbg !2266
  store i32 %trunc985, ptr %l968, align 4, !dbg !2266
  call void @llvm.dbg.declare(metadata ptr %estr986, metadata !2267, metadata !DIExpression()), !dbg !2268
  %568 = load i32, ptr %formatting, align 4, !dbg !2269
  %eq987 = icmp eq i32 %568, 0, !dbg !2269
  br i1 %eq987, label %if.then988, label %if.else997, !dbg !2269

if.then988:                                       ; preds = %or.phi981
  %569 = load i32, ptr %e652, align 4, !dbg !2270
  %570 = load i32, ptr %l968, align 4, !dbg !2272
  %sub989 = sub i32 2147483647, %570, !dbg !2273
  %gt990 = icmp sgt i32 %569, %sub989, !dbg !2270
  br i1 %gt990, label %if.then991, label %if.exit992, !dbg !2270

if.then991:                                       ; preds = %if.then988
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2274

if.exit992:                                       ; preds = %if.then988
  %571 = load i32, ptr %e652, align 4, !dbg !2275
  %gt993 = icmp sgt i32 %571, 0, !dbg !2275
  br i1 %gt993, label %if.then994, label %if.exit996, !dbg !2275

if.then994:                                       ; preds = %if.exit992
  %572 = load i32, ptr %l968, align 4, !dbg !2276
  %573 = load i32, ptr %e652, align 4, !dbg !2277
  %add995 = add i32 %572, %573, !dbg !2276
  store i32 %add995, ptr %l968, align 4, !dbg !2276
  br label %if.exit996, !dbg !2276

if.exit996:                                       ; preds = %if.then994, %if.exit992
  br label %if.exit1044, !dbg !2276

if.else997:                                       ; preds = %or.phi981
  %574 = load i32, ptr %e652, align 4, !dbg !2278
  %lt998 = icmp slt i32 %574, 0, !dbg !2278
  br i1 %lt998, label %cond.lhs999, label %cond.rhs1001, !dbg !2278

cond.lhs999:                                      ; preds = %if.else997
  %575 = load i32, ptr %e652, align 4, !dbg !2280
  %neg1000 = sub i32 0, %575, !dbg !2280
  br label %cond.phi1002, !dbg !2280

cond.rhs1001:                                     ; preds = %if.else997
  %576 = load i32, ptr %e652, align 4, !dbg !2281
  br label %cond.phi1002, !dbg !2281

cond.phi1002:                                     ; preds = %cond.rhs1001, %cond.lhs999
  %val1003 = phi i32 [ %neg1000, %cond.lhs999 ], [ %576, %cond.rhs1001 ], !dbg !2281
  %sext1004 = sext i32 %val1003 to i128, !dbg !2281
  store i128 %sext1004, ptr %indirectarg1005, align 16
  %577 = load ptr, ptr %ebuf, align 8
  %578 = call ptr @std.io.fmt_u(ptr align 16 %indirectarg1005, ptr %577), !dbg !2282
  store ptr %578, ptr %estr986, align 8, !dbg !2282
  br label %loop.cond1006, !dbg !2283

loop.cond1006:                                    ; preds = %loop.body1008, %cond.phi1002
  %579 = load ptr, ptr %ebuf, align 8, !dbg !2284
  %580 = load ptr, ptr %estr986, align 8, !dbg !2286
  %581 = ptrtoint ptr %580 to i64, !dbg !2284
  %582 = ptrtoint ptr %579 to i64, !dbg !2284
  %583 = sub i64 %582, %581, !dbg !2284
  %584 = sdiv exact i64 %583, 1, !dbg !2284
  %lt1007 = icmp slt i64 %584, 2, !dbg !2284
  br i1 %lt1007, label %loop.body1008, label %loop.exit1010, !dbg !2284

loop.body1008:                                    ; preds = %loop.cond1006
  %585 = load ptr, ptr %estr986, align 8, !dbg !2287
  %ptradd_any1009 = getelementptr i8, ptr %585, i8 -1, !dbg !2287
  store ptr %ptradd_any1009, ptr %estr986, align 8, !dbg !2287
  store i8 48, ptr %ptradd_any1009, align 1, !dbg !2288
  br label %loop.cond1006, !dbg !2288

loop.exit1010:                                    ; preds = %loop.cond1006
  %586 = load ptr, ptr %estr986, align 8, !dbg !2289
  %ptradd_any1011 = getelementptr i8, ptr %586, i8 -1, !dbg !2289
  store ptr %ptradd_any1011, ptr %estr986, align 8, !dbg !2289
  %checknull1012 = icmp eq ptr %ptradd_any1011, null, !dbg !2289
  %587 = call i1 @llvm.expect.i1(i1 %checknull1012, i1 false), !dbg !2289
  br i1 %587, label %panic1013, label %checkok1017, !dbg !2289

checkok1017:                                      ; preds = %loop.exit1010
  %588 = load i32, ptr %e652, align 4, !dbg !2290
  %lt1018 = icmp slt i32 %588, 0, !dbg !2290
  %ternary1019 = select i1 %lt1018, i8 45, i8 43, !dbg !2291
  store i8 %ternary1019, ptr %ptradd_any1011, align 1, !dbg !2291
  %589 = load ptr, ptr %estr986, align 8, !dbg !2292
  %ptradd_any1020 = getelementptr i8, ptr %589, i8 -1, !dbg !2292
  store ptr %ptradd_any1020, ptr %estr986, align 8, !dbg !2292
  %checknull1021 = icmp eq ptr %ptradd_any1020, null, !dbg !2292
  %590 = call i1 @llvm.expect.i1(i1 %checknull1021, i1 false), !dbg !2292
  br i1 %590, label %panic1022, label %checkok1026, !dbg !2292

checkok1026:                                      ; preds = %checkok1017
  %591 = load ptr, ptr %self, align 8, !dbg !2293
  %checknull1027 = icmp eq ptr %591, null, !dbg !2293
  %592 = call i1 @llvm.expect.i1(i1 %checknull1027, i1 false), !dbg !2293
  br i1 %592, label %panic1028, label %checkok1032, !dbg !2293

checkok1032:                                      ; preds = %checkok1026
  %ptradd1033 = getelementptr inbounds i8, ptr %591, i64 16, !dbg !2293
  %593 = load i32, ptr %ptradd1033, align 8, !dbg !2293
  %lshrl1034 = lshr i32 %593, 5, !dbg !2293
  %594 = and i32 1, %lshrl1034, !dbg !2293
  %trunc1035 = trunc i32 %594 to i8, !dbg !2293
  %595 = trunc i8 %trunc1035 to i1, !dbg !2293
  %ternary1036 = select i1 %595, i8 69, i8 101, !dbg !2294
  store i8 %ternary1036, ptr %ptradd_any1020, align 1, !dbg !2294
  %596 = load ptr, ptr %ebuf, align 8, !dbg !2295
  %597 = load ptr, ptr %estr986, align 8, !dbg !2296
  %598 = ptrtoint ptr %597 to i64, !dbg !2295
  %599 = ptrtoint ptr %596 to i64, !dbg !2295
  %600 = sub i64 %599, %598, !dbg !2295
  %601 = sdiv exact i64 %600, 1, !dbg !2295
  %602 = load i32, ptr %l968, align 4, !dbg !2297
  %sext1037 = sext i32 %602 to i64, !dbg !2297
  %sub1038 = sub i64 2147483647, %sext1037, !dbg !2298
  %gt1039 = icmp sgt i64 %601, %sub1038, !dbg !2295
  br i1 %gt1039, label %if.then1040, label %if.exit1041, !dbg !2295

if.then1040:                                      ; preds = %checkok1032
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2299

if.exit1041:                                      ; preds = %checkok1032
  %603 = load i32, ptr %l968, align 4, !dbg !2300
  %604 = load ptr, ptr %ebuf, align 8, !dbg !2301
  %605 = load ptr, ptr %estr986, align 8, !dbg !2302
  %606 = ptrtoint ptr %605 to i64, !dbg !2303
  %607 = ptrtoint ptr %604 to i64, !dbg !2303
  %608 = sub i64 %607, %606, !dbg !2303
  %609 = sdiv exact i64 %608, 1, !dbg !2303
  %trunc1042 = trunc i64 %609 to i32, !dbg !2303
  %add1043 = add i32 %603, %trunc1042, !dbg !2300
  store i32 %add1043, ptr %l968, align 4, !dbg !2300
  br label %if.exit1044, !dbg !2300

if.exit1044:                                      ; preds = %if.exit1041, %if.exit996
  %610 = load i32, ptr %l968, align 4, !dbg !2304
  %sext1045 = sext i32 %610 to i64, !dbg !2304
  %611 = load i64, ptr %pl, align 8, !dbg !2305
  %sub1046 = sub i64 2147483647, %611, !dbg !2306
  %gt1047 = icmp sgt i64 %sext1045, %sub1046, !dbg !2304
  br i1 %gt1047, label %if.then1048, label %if.exit1049, !dbg !2304

if.then1048:                                      ; preds = %if.exit1044
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2307

if.exit1049:                                      ; preds = %if.exit1044
  call void @llvm.dbg.declare(metadata ptr %len1050, metadata !2308, metadata !DIExpression()), !dbg !2309
  store i64 0, ptr %len1050, align 8, !dbg !2309
  %612 = load ptr, ptr %self, align 8, !dbg !2310
  %checknull1051 = icmp eq ptr %612, null, !dbg !2310
  %613 = call i1 @llvm.expect.i1(i1 %checknull1051, i1 false), !dbg !2310
  br i1 %613, label %panic1052, label %checkok1056, !dbg !2310

checkok1056:                                      ; preds = %if.exit1049
  %ptradd1057 = getelementptr inbounds i8, ptr %612, i64 16, !dbg !2310
  %614 = load i32, ptr %ptradd1057, align 8, !dbg !2310
  %lshrl1058 = lshr i32 %614, 1, !dbg !2310
  %615 = and i32 1, %lshrl1058, !dbg !2310
  %trunc1059 = trunc i32 %615 to i8, !dbg !2310
  %616 = trunc i8 %trunc1059 to i1, !dbg !2310
  %not1060 = xor i1 %616, true, !dbg !2310
  br i1 %not1060, label %and.rhs1061, label %and.phi1071, !dbg !2310

and.rhs1061:                                      ; preds = %checkok1056
  %617 = load ptr, ptr %self, align 8, !dbg !2311
  %checknull1062 = icmp eq ptr %617, null, !dbg !2311
  %618 = call i1 @llvm.expect.i1(i1 %checknull1062, i1 false), !dbg !2311
  br i1 %618, label %panic1063, label %checkok1067, !dbg !2311

checkok1067:                                      ; preds = %and.rhs1061
  %ptradd1068 = getelementptr inbounds i8, ptr %617, i64 16, !dbg !2311
  %619 = load i32, ptr %ptradd1068, align 8, !dbg !2311
  %620 = and i32 1, %619, !dbg !2311
  %trunc1069 = trunc i32 %620 to i8, !dbg !2311
  %621 = trunc i8 %trunc1069 to i1, !dbg !2311
  %not1070 = xor i1 %621, true, !dbg !2311
  br label %and.phi1071, !dbg !2311

and.phi1071:                                      ; preds = %checkok1067, %checkok1056
  %val1072 = phi i1 [ false, %checkok1056 ], [ %not1070, %checkok1067 ], !dbg !2311
  br i1 %val1072, label %if.then1073, label %if.exit1093, !dbg !2311

if.then1073:                                      ; preds = %and.phi1071
  %622 = load i64, ptr %len1050, align 8, !dbg !2312
  %623 = load ptr, ptr %self, align 8, !dbg !2313
  %checknull1075 = icmp eq ptr %623, null, !dbg !2313
  %624 = call i1 @llvm.expect.i1(i1 %checknull1075, i1 false), !dbg !2313
  br i1 %624, label %panic1076, label %checkok1080, !dbg !2313

checkok1080:                                      ; preds = %if.then1073
  %ptradd1081 = getelementptr inbounds i8, ptr %623, i64 16, !dbg !2313
  %ptradd1082 = getelementptr inbounds i8, ptr %ptradd1081, i64 4, !dbg !2313
  %625 = load i32, ptr %ptradd1082, align 4, !dbg !2313
  %zext1083 = zext i32 %625 to i64, !dbg !2313
  %626 = load i64, ptr %pl, align 8, !dbg !2314
  %627 = load i32, ptr %l968, align 4, !dbg !2315
  %sext1084 = sext i32 %627 to i64, !dbg !2315
  %add1085 = add i64 %626, %sext1084, !dbg !2314
  %628 = load ptr, ptr %self, align 8
  %629 = call i64 @std.io.Formatter.pad(ptr %retparam1086, ptr %628, i8 32, i64 %zext1083, i64 %add1085) #5, !dbg !2316
  %not_err1087 = icmp eq i64 %629, 0, !dbg !2316
  %630 = call i1 @llvm.expect.i1(i1 %not_err1087, i1 true), !dbg !2316
  br i1 %630, label %after_check1089, label %assign_optional1088, !dbg !2316

assign_optional1088:                              ; preds = %checkok1080
  store i64 %629, ptr %error_var1074, align 8, !dbg !2316
  br label %guard_block1090, !dbg !2316

after_check1089:                                  ; preds = %checkok1080
  br label %noerr_block1091, !dbg !2316

guard_block1090:                                  ; preds = %assign_optional1088
  %631 = load i64, ptr %error_var1074, align 8, !dbg !2316
  ret i64 %631, !dbg !2316

noerr_block1091:                                  ; preds = %after_check1089
  %632 = load i64, ptr %retparam1086, align 8, !dbg !2316
  %add1092 = add i64 %622, %632, !dbg !2312
  store i64 %add1092, ptr %len1050, align 8, !dbg !2312
  br label %if.exit1093, !dbg !2312

if.exit1093:                                      ; preds = %noerr_block1091, %and.phi1071
  %633 = load i8, ptr %is_neg, align 1, !dbg !2317
  %634 = trunc i8 %633 to i1, !dbg !2317
  br i1 %634, label %or.phi1104, label %or.rhs1094, !dbg !2317

or.rhs1094:                                       ; preds = %if.exit1093
  %635 = load ptr, ptr %self, align 8, !dbg !2318
  %checknull1095 = icmp eq ptr %635, null, !dbg !2318
  %636 = call i1 @llvm.expect.i1(i1 %checknull1095, i1 false), !dbg !2318
  br i1 %636, label %panic1096, label %checkok1100, !dbg !2318

checkok1100:                                      ; preds = %or.rhs1094
  %ptradd1101 = getelementptr inbounds i8, ptr %635, i64 16, !dbg !2318
  %637 = load i32, ptr %ptradd1101, align 8, !dbg !2318
  %lshrl1102 = lshr i32 %637, 2, !dbg !2318
  %638 = and i32 1, %lshrl1102, !dbg !2318
  %trunc1103 = trunc i32 %638 to i8, !dbg !2318
  %639 = trunc i8 %trunc1103 to i1, !dbg !2318
  br label %or.phi1104, !dbg !2318

or.phi1104:                                       ; preds = %checkok1100, %if.exit1093
  %val1105 = phi i1 [ true, %if.exit1093 ], [ %639, %checkok1100 ], !dbg !2318
  br i1 %val1105, label %if.then1106, label %if.exit1116, !dbg !2318

if.then1106:                                      ; preds = %or.phi1104
  %640 = load i64, ptr %len1050, align 8, !dbg !2319
  %641 = load i8, ptr %is_neg, align 1, !dbg !2320
  %642 = trunc i8 %641 to i1, !dbg !2320
  %ternary1108 = select i1 %642, i8 45, i8 43, !dbg !2321
  %643 = load ptr, ptr %self, align 8
  %644 = call i64 @std.io.Formatter.out(ptr %retparam1109, ptr %643, i8 %ternary1108), !dbg !2322
  %not_err1110 = icmp eq i64 %644, 0, !dbg !2322
  %645 = call i1 @llvm.expect.i1(i1 %not_err1110, i1 true), !dbg !2322
  br i1 %645, label %after_check1112, label %assign_optional1111, !dbg !2322

assign_optional1111:                              ; preds = %if.then1106
  store i64 %644, ptr %error_var1107, align 8, !dbg !2322
  br label %guard_block1113, !dbg !2322

after_check1112:                                  ; preds = %if.then1106
  br label %noerr_block1114, !dbg !2322

guard_block1113:                                  ; preds = %assign_optional1111
  %646 = load i64, ptr %error_var1107, align 8, !dbg !2322
  ret i64 %646, !dbg !2322

noerr_block1114:                                  ; preds = %after_check1112
  %647 = load i64, ptr %retparam1109, align 8, !dbg !2322
  %add1115 = add i64 %640, %647, !dbg !2319
  store i64 %add1115, ptr %len1050, align 8, !dbg !2319
  br label %if.exit1116, !dbg !2319

if.exit1116:                                      ; preds = %noerr_block1114, %or.phi1104
  %648 = load ptr, ptr %self, align 8, !dbg !2323
  %checknull1117 = icmp eq ptr %648, null, !dbg !2323
  %649 = call i1 @llvm.expect.i1(i1 %checknull1117, i1 false), !dbg !2323
  br i1 %649, label %panic1118, label %checkok1122, !dbg !2323

checkok1122:                                      ; preds = %if.exit1116
  %ptradd1123 = getelementptr inbounds i8, ptr %648, i64 16, !dbg !2323
  %650 = load i32, ptr %ptradd1123, align 8, !dbg !2323
  %651 = and i32 1, %650, !dbg !2323
  %trunc1124 = trunc i32 %651 to i8, !dbg !2323
  %652 = trunc i8 %trunc1124 to i1, !dbg !2323
  br i1 %652, label %if.then1125, label %if.exit1145, !dbg !2323

if.then1125:                                      ; preds = %checkok1122
  %653 = load i64, ptr %len1050, align 8, !dbg !2324
  %654 = load ptr, ptr %self, align 8, !dbg !2325
  %checknull1127 = icmp eq ptr %654, null, !dbg !2325
  %655 = call i1 @llvm.expect.i1(i1 %checknull1127, i1 false), !dbg !2325
  br i1 %655, label %panic1128, label %checkok1132, !dbg !2325

checkok1132:                                      ; preds = %if.then1125
  %ptradd1133 = getelementptr inbounds i8, ptr %654, i64 16, !dbg !2325
  %ptradd1134 = getelementptr inbounds i8, ptr %ptradd1133, i64 4, !dbg !2325
  %656 = load i32, ptr %ptradd1134, align 4, !dbg !2325
  %zext1135 = zext i32 %656 to i64, !dbg !2325
  %657 = load i64, ptr %pl, align 8, !dbg !2326
  %658 = load i32, ptr %l968, align 4, !dbg !2327
  %sext1136 = sext i32 %658 to i64, !dbg !2327
  %add1137 = add i64 %657, %sext1136, !dbg !2326
  %659 = load ptr, ptr %self, align 8
  %660 = call i64 @std.io.Formatter.pad(ptr %retparam1138, ptr %659, i8 48, i64 %zext1135, i64 %add1137) #5, !dbg !2328
  %not_err1139 = icmp eq i64 %660, 0, !dbg !2328
  %661 = call i1 @llvm.expect.i1(i1 %not_err1139, i1 true), !dbg !2328
  br i1 %661, label %after_check1141, label %assign_optional1140, !dbg !2328

assign_optional1140:                              ; preds = %checkok1132
  store i64 %660, ptr %error_var1126, align 8, !dbg !2328
  br label %guard_block1142, !dbg !2328

after_check1141:                                  ; preds = %checkok1132
  br label %noerr_block1143, !dbg !2328

guard_block1142:                                  ; preds = %assign_optional1140
  %662 = load i64, ptr %error_var1126, align 8, !dbg !2328
  ret i64 %662, !dbg !2328

noerr_block1143:                                  ; preds = %after_check1141
  %663 = load i64, ptr %retparam1138, align 8, !dbg !2328
  %add1144 = add i64 %653, %663, !dbg !2324
  store i64 %add1144, ptr %len1050, align 8, !dbg !2324
  br label %if.exit1145, !dbg !2324

if.exit1145:                                      ; preds = %noerr_block1143, %checkok1122
  %664 = load i32, ptr %formatting, align 4, !dbg !2329
  %eq1146 = icmp eq i32 %664, 0, !dbg !2329
  br i1 %eq1146, label %if.then1147, label %if.else1279, !dbg !2329

if.then1147:                                      ; preds = %if.exit1145
  %665 = load ptr, ptr %a, align 8, !dbg !2330
  %666 = load ptr, ptr %r, align 8, !dbg !2332
  %gt1148 = icmp ugt ptr %665, %666, !dbg !2330
  br i1 %gt1148, label %if.then1149, label %if.exit1150, !dbg !2330

if.then1149:                                      ; preds = %if.then1147
  %667 = load ptr, ptr %r, align 8, !dbg !2333
  store ptr %667, ptr %a, align 8, !dbg !2333
  br label %if.exit1150, !dbg !2333

if.exit1150:                                      ; preds = %if.then1149, %if.then1147
  call void @llvm.dbg.declare(metadata ptr %d1151, metadata !2334, metadata !DIExpression()), !dbg !2335
  %668 = load ptr, ptr %a, align 8, !dbg !2336
  store ptr %668, ptr %d1151, align 8, !dbg !2336
  br label %loop.cond1152, !dbg !2337

loop.cond1152:                                    ; preds = %noerr_block1199, %if.exit1150
  %669 = load ptr, ptr %d1151, align 8, !dbg !2338
  %670 = load ptr, ptr %r, align 8, !dbg !2340
  %le1153 = icmp ule ptr %669, %670, !dbg !2338
  br i1 %le1153, label %loop.body1154, label %loop.exit1202, !dbg !2338

loop.body1154:                                    ; preds = %loop.cond1152
  call void @llvm.dbg.declare(metadata ptr %s1155, metadata !2341, metadata !DIExpression()), !dbg !2343
  %671 = load ptr, ptr %d1151, align 8, !dbg !2344
  %checknull1156 = icmp eq ptr %671, null, !dbg !2344
  %672 = call i1 @llvm.expect.i1(i1 %checknull1156, i1 false), !dbg !2344
  br i1 %672, label %panic1157, label %checkok1161, !dbg !2344

checkok1161:                                      ; preds = %loop.body1154
  %673 = load i32, ptr %671, align 4, !dbg !2344
  %zext1162 = zext i32 %673 to i128, !dbg !2344
  %674 = load ptr, ptr %buf, align 8, !dbg !2345
  %ptradd_any1163 = getelementptr i8, ptr %674, i64 9, !dbg !2346
  store i128 %zext1162, ptr %indirectarg1164, align 16
  %675 = call ptr @std.io.fmt_u(ptr align 16 %indirectarg1164, ptr %ptradd_any1163), !dbg !2347
  store ptr %675, ptr %s1155, align 8, !dbg !2347
  store i8 1, ptr %switch1165, align 1
  br label %switch.entry1166

switch.entry1166:                                 ; preds = %checkok1161
  %676 = load i8, ptr %switch1165, align 1
  %677 = trunc i8 %676 to i1
  %678 = load ptr, ptr %d1151, align 8, !dbg !2348
  %679 = load ptr, ptr %a, align 8, !dbg !2350
  %neq1167 = icmp ne ptr %678, %679, !dbg !2348
  %eq1168 = icmp eq i1 %neq1167, %677, !dbg !2348
  br i1 %eq1168, label %switch.case1169, label %next_if1175, !dbg !2348

switch.case1169:                                  ; preds = %switch.entry1166
  br label %loop.cond1170, !dbg !2351

loop.cond1170:                                    ; preds = %loop.body1172, %switch.case1169
  %680 = load ptr, ptr %s1155, align 8, !dbg !2353
  %681 = load ptr, ptr %buf, align 8, !dbg !2355
  %gt1171 = icmp ugt ptr %680, %681, !dbg !2353
  br i1 %gt1171, label %loop.body1172, label %loop.exit1174, !dbg !2353

loop.body1172:                                    ; preds = %loop.cond1170
  %682 = load ptr, ptr %s1155, align 8, !dbg !2356
  %ptradd_any1173 = getelementptr i8, ptr %682, i8 -1, !dbg !2356
  store ptr %ptradd_any1173, ptr %s1155, align 8, !dbg !2356
  store i8 48, ptr %ptradd_any1173, align 1, !dbg !2357
  br label %loop.cond1170, !dbg !2357

loop.exit1174:                                    ; preds = %loop.cond1170
  br label %switch.exit1188, !dbg !2357

next_if1175:                                      ; preds = %switch.entry1166
  %683 = load ptr, ptr %s1155, align 8, !dbg !2358
  %684 = load ptr, ptr %buf, align 8, !dbg !2359
  %ptradd_any1176 = getelementptr i8, ptr %684, i64 9, !dbg !2360
  %eq1177 = icmp eq ptr %683, %ptradd_any1176, !dbg !2358
  %eq1178 = icmp eq i1 %eq1177, %677, !dbg !2358
  br i1 %eq1178, label %switch.case1179, label %next_if1187, !dbg !2358

switch.case1179:                                  ; preds = %next_if1175
  %685 = load ptr, ptr %s1155, align 8, !dbg !2361
  %ptradd_any1180 = getelementptr i8, ptr %685, i8 -1, !dbg !2361
  store ptr %ptradd_any1180, ptr %s1155, align 8, !dbg !2361
  %checknull1181 = icmp eq ptr %ptradd_any1180, null, !dbg !2361
  %686 = call i1 @llvm.expect.i1(i1 %checknull1181, i1 false), !dbg !2361
  br i1 %686, label %panic1182, label %checkok1186, !dbg !2361

checkok1186:                                      ; preds = %switch.case1179
  store i8 48, ptr %ptradd_any1180, align 1, !dbg !2363
  br label %switch.exit1188, !dbg !2363

next_if1187:                                      ; preds = %next_if1175
  br label %switch.exit1188, !dbg !2363

switch.exit1188:                                  ; preds = %next_if1187, %checkok1186, %loop.exit1174
  %687 = load i64, ptr %len1050, align 8, !dbg !2364
  %688 = load ptr, ptr %s1155, align 8, !dbg !2365
  %689 = load ptr, ptr %buf, align 8, !dbg !2366
  %ptradd_any1190 = getelementptr i8, ptr %689, i64 9, !dbg !2367
  %690 = load ptr, ptr %s1155, align 8, !dbg !2368
  %691 = ptrtoint ptr %690 to i64, !dbg !2366
  %692 = ptrtoint ptr %ptradd_any1190 to i64, !dbg !2366
  %693 = sub i64 %692, %691, !dbg !2366
  %694 = sdiv exact i64 %693, 1, !dbg !2366
  %add1191 = add i64 0, %694, !dbg !2366
  %size1192 = sub i64 %add1191, 0, !dbg !2366
  %695 = insertvalue %"char[]" undef, ptr %688, 0, !dbg !2366
  %696 = insertvalue %"char[]" %695, i64 %size1192, 1, !dbg !2366
  %697 = load ptr, ptr %self, align 8
  store %"char[]" %696, ptr %indirectarg1194, align 8
  %698 = call i64 @std.io.Formatter.out_chars(ptr %retparam1193, ptr %697, ptr align 8 %indirectarg1194), !dbg !2369
  %not_err1195 = icmp eq i64 %698, 0, !dbg !2369
  %699 = call i1 @llvm.expect.i1(i1 %not_err1195, i1 true), !dbg !2369
  br i1 %699, label %after_check1197, label %assign_optional1196, !dbg !2369

assign_optional1196:                              ; preds = %switch.exit1188
  store i64 %698, ptr %error_var1189, align 8, !dbg !2369
  br label %guard_block1198, !dbg !2369

after_check1197:                                  ; preds = %switch.exit1188
  br label %noerr_block1199, !dbg !2369

guard_block1198:                                  ; preds = %assign_optional1196
  %700 = load i64, ptr %error_var1189, align 8, !dbg !2369
  ret i64 %700, !dbg !2369

noerr_block1199:                                  ; preds = %after_check1197
  %701 = load i64, ptr %retparam1193, align 8, !dbg !2369
  %add1200 = add i64 %687, %701, !dbg !2364
  store i64 %add1200, ptr %len1050, align 8, !dbg !2364
  %702 = load ptr, ptr %d1151, align 8, !dbg !2370
  %ptradd_any1201 = getelementptr i8, ptr %702, i8 4, !dbg !2370
  store ptr %ptradd_any1201, ptr %d1151, align 8, !dbg !2370
  br label %loop.cond1152, !dbg !2370

loop.exit1202:                                    ; preds = %loop.cond1152
  %703 = load i64, ptr %p, align 8, !dbg !2371
  %intbool1203 = icmp ne i64 %703, 0, !dbg !2371
  br i1 %intbool1203, label %or.phi1214, label %or.rhs1204, !dbg !2371

or.rhs1204:                                       ; preds = %loop.exit1202
  %704 = load ptr, ptr %self, align 8, !dbg !2372
  %checknull1205 = icmp eq ptr %704, null, !dbg !2372
  %705 = call i1 @llvm.expect.i1(i1 %checknull1205, i1 false), !dbg !2372
  br i1 %705, label %panic1206, label %checkok1210, !dbg !2372

checkok1210:                                      ; preds = %or.rhs1204
  %ptradd1211 = getelementptr inbounds i8, ptr %704, i64 16, !dbg !2372
  %706 = load i32, ptr %ptradd1211, align 8, !dbg !2372
  %lshrl1212 = lshr i32 %706, 4, !dbg !2372
  %707 = and i32 1, %lshrl1212, !dbg !2372
  %trunc1213 = trunc i32 %707 to i8, !dbg !2372
  %708 = trunc i8 %trunc1213 to i1, !dbg !2372
  br label %or.phi1214, !dbg !2372

or.phi1214:                                       ; preds = %checkok1210, %loop.exit1202
  %val1215 = phi i1 [ true, %loop.exit1202 ], [ %708, %checkok1210 ], !dbg !2372
  br i1 %val1215, label %if.then1216, label %if.exit1225, !dbg !2372

if.then1216:                                      ; preds = %or.phi1214
  %709 = load i64, ptr %len1050, align 8, !dbg !2373
  %710 = load ptr, ptr %self, align 8
  %711 = call i64 @std.io.Formatter.out(ptr %retparam1218, ptr %710, i8 46), !dbg !2374
  %not_err1219 = icmp eq i64 %711, 0, !dbg !2374
  %712 = call i1 @llvm.expect.i1(i1 %not_err1219, i1 true), !dbg !2374
  br i1 %712, label %after_check1221, label %assign_optional1220, !dbg !2374

assign_optional1220:                              ; preds = %if.then1216
  store i64 %711, ptr %error_var1217, align 8, !dbg !2374
  br label %guard_block1222, !dbg !2374

after_check1221:                                  ; preds = %if.then1216
  br label %noerr_block1223, !dbg !2374

guard_block1222:                                  ; preds = %assign_optional1220
  %713 = load i64, ptr %error_var1217, align 8, !dbg !2374
  ret i64 %713, !dbg !2374

noerr_block1223:                                  ; preds = %after_check1221
  %714 = load i64, ptr %retparam1218, align 8, !dbg !2374
  %add1224 = add i64 %709, %714, !dbg !2373
  store i64 %add1224, ptr %len1050, align 8, !dbg !2373
  br label %if.exit1225, !dbg !2373

if.exit1225:                                      ; preds = %noerr_block1223, %or.phi1214
  br label %loop.cond1226, !dbg !2375

loop.cond1226:                                    ; preds = %noerr_block1265, %if.exit1225
  %715 = load ptr, ptr %d1151, align 8, !dbg !2376
  %716 = load ptr, ptr %z, align 8, !dbg !2378
  %lt1227 = icmp ult ptr %715, %716, !dbg !2376
  br i1 %lt1227, label %and.rhs1228, label %and.phi1230, !dbg !2376

and.rhs1228:                                      ; preds = %loop.cond1226
  %717 = load i64, ptr %p, align 8, !dbg !2379
  %gt1229 = icmp sgt i64 %717, 0, !dbg !2379
  br label %and.phi1230, !dbg !2379

and.phi1230:                                      ; preds = %and.rhs1228, %loop.cond1226
  %val1231 = phi i1 [ false, %loop.cond1226 ], [ %gt1229, %and.rhs1228 ], !dbg !2379
  br i1 %val1231, label %loop.body1232, label %loop.exit1269, !dbg !2379

loop.body1232:                                    ; preds = %and.phi1230
  call void @llvm.dbg.declare(metadata ptr %s1233, metadata !2380, metadata !DIExpression()), !dbg !2382
  %718 = load ptr, ptr %d1151, align 8, !dbg !2383
  %checknull1234 = icmp eq ptr %718, null, !dbg !2383
  %719 = call i1 @llvm.expect.i1(i1 %checknull1234, i1 false), !dbg !2383
  br i1 %719, label %panic1235, label %checkok1239, !dbg !2383

checkok1239:                                      ; preds = %loop.body1232
  %720 = load i32, ptr %718, align 4, !dbg !2383
  %zext1240 = zext i32 %720 to i128, !dbg !2383
  %721 = load ptr, ptr %buf, align 8, !dbg !2384
  %ptradd_any1241 = getelementptr i8, ptr %721, i64 9, !dbg !2385
  store i128 %zext1240, ptr %indirectarg1242, align 16
  %722 = call ptr @std.io.fmt_u(ptr align 16 %indirectarg1242, ptr %ptradd_any1241), !dbg !2386
  store ptr %722, ptr %s1233, align 8, !dbg !2386
  br label %loop.cond1243, !dbg !2387

loop.cond1243:                                    ; preds = %checkok1252, %checkok1239
  %723 = load ptr, ptr %s1233, align 8, !dbg !2388
  %724 = load ptr, ptr %buf, align 8, !dbg !2390
  %gt1244 = icmp ugt ptr %723, %724, !dbg !2388
  br i1 %gt1244, label %loop.body1245, label %loop.exit1253, !dbg !2388

loop.body1245:                                    ; preds = %loop.cond1243
  %725 = load ptr, ptr %s1233, align 8, !dbg !2391
  %ptradd_any1246 = getelementptr i8, ptr %725, i8 -1, !dbg !2391
  store ptr %ptradd_any1246, ptr %s1233, align 8, !dbg !2391
  %checknull1247 = icmp eq ptr %ptradd_any1246, null, !dbg !2391
  %726 = call i1 @llvm.expect.i1(i1 %checknull1247, i1 false), !dbg !2391
  br i1 %726, label %panic1248, label %checkok1252, !dbg !2391

checkok1252:                                      ; preds = %loop.body1245
  store i8 48, ptr %ptradd_any1246, align 1, !dbg !2392
  br label %loop.cond1243, !dbg !2392

loop.exit1253:                                    ; preds = %loop.cond1243
  %727 = load i64, ptr %len1050, align 8, !dbg !2393
  %728 = load ptr, ptr %s1233, align 8, !dbg !2394
  store i64 9, ptr %x1255, align 8
  %729 = load i64, ptr %p, align 8
  store i64 %729, ptr %y1256, align 8
  %730 = load i64, ptr %x1255, align 8, !dbg !2395
  %731 = load i64, ptr %y1256, align 8, !dbg !2398
  %732 = call i64 @llvm.smin.i64(i64 %730, i64 %731), !dbg !2398
  %add1257 = add i64 0, %732, !dbg !2398
  %size1258 = sub i64 %add1257, 0, !dbg !2398
  %733 = insertvalue %"char[]" undef, ptr %728, 0, !dbg !2398
  %734 = insertvalue %"char[]" %733, i64 %size1258, 1, !dbg !2398
  %735 = load ptr, ptr %self, align 8
  store %"char[]" %734, ptr %indirectarg1260, align 8
  %736 = call i64 @std.io.Formatter.out_chars(ptr %retparam1259, ptr %735, ptr align 8 %indirectarg1260), !dbg !2399
  %not_err1261 = icmp eq i64 %736, 0, !dbg !2399
  %737 = call i1 @llvm.expect.i1(i1 %not_err1261, i1 true), !dbg !2399
  br i1 %737, label %after_check1263, label %assign_optional1262, !dbg !2399

assign_optional1262:                              ; preds = %loop.exit1253
  store i64 %736, ptr %error_var1254, align 8, !dbg !2399
  br label %guard_block1264, !dbg !2399

after_check1263:                                  ; preds = %loop.exit1253
  br label %noerr_block1265, !dbg !2399

guard_block1264:                                  ; preds = %assign_optional1262
  %738 = load i64, ptr %error_var1254, align 8, !dbg !2399
  ret i64 %738, !dbg !2399

noerr_block1265:                                  ; preds = %after_check1263
  %739 = load i64, ptr %retparam1259, align 8, !dbg !2399
  %add1266 = add i64 %727, %739, !dbg !2393
  store i64 %add1266, ptr %len1050, align 8, !dbg !2393
  %740 = load ptr, ptr %d1151, align 8, !dbg !2400
  %ptradd_any1267 = getelementptr i8, ptr %740, i8 4, !dbg !2400
  store ptr %ptradd_any1267, ptr %d1151, align 8, !dbg !2400
  %741 = load i64, ptr %p, align 8, !dbg !2401
  %sub1268 = sub i64 %741, 9, !dbg !2401
  store i64 %sub1268, ptr %p, align 8, !dbg !2401
  br label %loop.cond1226, !dbg !2401

loop.exit1269:                                    ; preds = %and.phi1230
  %742 = load i64, ptr %len1050, align 8, !dbg !2402
  %743 = load i64, ptr %p, align 8, !dbg !2403
  %add1271 = add i64 %743, 9, !dbg !2403
  %744 = load ptr, ptr %self, align 8
  %745 = call i64 @std.io.Formatter.pad(ptr %retparam1272, ptr %744, i8 48, i64 %add1271, i64 9) #5, !dbg !2404
  %not_err1273 = icmp eq i64 %745, 0, !dbg !2404
  %746 = call i1 @llvm.expect.i1(i1 %not_err1273, i1 true), !dbg !2404
  br i1 %746, label %after_check1275, label %assign_optional1274, !dbg !2404

assign_optional1274:                              ; preds = %loop.exit1269
  store i64 %745, ptr %error_var1270, align 8, !dbg !2404
  br label %guard_block1276, !dbg !2404

after_check1275:                                  ; preds = %loop.exit1269
  br label %noerr_block1277, !dbg !2404

guard_block1276:                                  ; preds = %assign_optional1274
  %747 = load i64, ptr %error_var1270, align 8, !dbg !2404
  ret i64 %747, !dbg !2404

noerr_block1277:                                  ; preds = %after_check1275
  %748 = load i64, ptr %retparam1272, align 8, !dbg !2404
  %add1278 = add i64 %742, %748, !dbg !2402
  store i64 %add1278, ptr %len1050, align 8, !dbg !2402
  br label %if.exit1386, !dbg !2402

if.else1279:                                      ; preds = %if.exit1145
  %749 = load ptr, ptr %z, align 8, !dbg !2405
  %750 = load ptr, ptr %a, align 8, !dbg !2407
  %le1280 = icmp ule ptr %749, %750, !dbg !2405
  br i1 %le1280, label %if.then1281, label %if.exit1283, !dbg !2405

if.then1281:                                      ; preds = %if.else1279
  %751 = load ptr, ptr %a, align 8, !dbg !2408
  %ptradd_any1282 = getelementptr i8, ptr %751, i64 4, !dbg !2409
  store ptr %ptradd_any1282, ptr %z, align 8, !dbg !2409
  br label %if.exit1283, !dbg !2409

if.exit1283:                                      ; preds = %if.then1281, %if.else1279
  call void @llvm.dbg.declare(metadata ptr %d1284, metadata !2410, metadata !DIExpression()), !dbg !2412
  %752 = load ptr, ptr %a, align 8, !dbg !2413
  store ptr %752, ptr %d1284, align 8, !dbg !2413
  br label %loop.cond1285, !dbg !2413

loop.cond1285:                                    ; preds = %noerr_block1360, %if.exit1283
  %753 = load ptr, ptr %d1284, align 8, !dbg !2414
  %754 = load ptr, ptr %z, align 8, !dbg !2415
  %lt1286 = icmp ult ptr %753, %754, !dbg !2414
  br i1 %lt1286, label %and.rhs1287, label %and.phi1289, !dbg !2414

and.rhs1287:                                      ; preds = %loop.cond1285
  %755 = load i64, ptr %p, align 8, !dbg !2416
  %ge1288 = icmp sge i64 %755, 0, !dbg !2416
  br label %and.phi1289, !dbg !2416

and.phi1289:                                      ; preds = %and.rhs1287, %loop.cond1285
  %val1290 = phi i1 [ false, %loop.cond1285 ], [ %ge1288, %and.rhs1287 ], !dbg !2416
  br i1 %val1290, label %loop.body1291, label %loop.exit1365, !dbg !2416

loop.body1291:                                    ; preds = %and.phi1289
  call void @llvm.dbg.declare(metadata ptr %s1292, metadata !2417, metadata !DIExpression()), !dbg !2419
  %756 = load ptr, ptr %d1284, align 8, !dbg !2420
  %checknull1293 = icmp eq ptr %756, null, !dbg !2420
  %757 = call i1 @llvm.expect.i1(i1 %checknull1293, i1 false), !dbg !2420
  br i1 %757, label %panic1294, label %checkok1298, !dbg !2420

checkok1298:                                      ; preds = %loop.body1291
  %758 = load i32, ptr %756, align 4, !dbg !2420
  %zext1299 = zext i32 %758 to i128, !dbg !2420
  %759 = load ptr, ptr %buf, align 8, !dbg !2421
  %ptradd_any1300 = getelementptr i8, ptr %759, i64 9, !dbg !2422
  store i128 %zext1299, ptr %indirectarg1301, align 16
  %760 = call ptr @std.io.fmt_u(ptr align 16 %indirectarg1301, ptr %ptradd_any1300), !dbg !2423
  store ptr %760, ptr %s1292, align 8, !dbg !2423
  %761 = load ptr, ptr %s1292, align 8, !dbg !2424
  %762 = load ptr, ptr %buf, align 8, !dbg !2425
  %ptradd_any1302 = getelementptr i8, ptr %762, i64 9, !dbg !2426
  %eq1303 = icmp eq ptr %761, %ptradd_any1302, !dbg !2424
  br i1 %eq1303, label %if.then1304, label %if.exit1306, !dbg !2424

if.then1304:                                      ; preds = %checkok1298
  %763 = load ptr, ptr %s1292, align 8, !dbg !2427
  %ptradd_any1305 = getelementptr i8, ptr %763, i8 -1, !dbg !2427
  store ptr %ptradd_any1305, ptr %s1292, align 8, !dbg !2427
  store i8 48, ptr %ptradd_any1305, align 1, !dbg !2428
  br label %if.exit1306, !dbg !2428

if.exit1306:                                      ; preds = %if.then1304, %checkok1298
  %764 = load ptr, ptr %d1284, align 8, !dbg !2429
  %765 = load ptr, ptr %a, align 8, !dbg !2430
  %neq1307 = icmp ne ptr %764, %765, !dbg !2429
  br i1 %neq1307, label %if.then1308, label %if.else1314, !dbg !2429

if.then1308:                                      ; preds = %if.exit1306
  br label %loop.cond1309, !dbg !2431

loop.cond1309:                                    ; preds = %loop.body1311, %if.then1308
  %766 = load ptr, ptr %s1292, align 8, !dbg !2433
  %767 = load ptr, ptr %buf, align 8, !dbg !2435
  %gt1310 = icmp ugt ptr %766, %767, !dbg !2433
  br i1 %gt1310, label %loop.body1311, label %loop.exit1313, !dbg !2433

loop.body1311:                                    ; preds = %loop.cond1309
  %768 = load ptr, ptr %s1292, align 8, !dbg !2436
  %ptradd_any1312 = getelementptr i8, ptr %768, i8 -1, !dbg !2436
  store ptr %ptradd_any1312, ptr %s1292, align 8, !dbg !2436
  store i8 48, ptr %ptradd_any1312, align 1, !dbg !2437
  br label %loop.cond1309, !dbg !2437

loop.exit1313:                                    ; preds = %loop.cond1309
  br label %if.exit1347, !dbg !2437

if.else1314:                                      ; preds = %if.exit1306
  %769 = load i64, ptr %len1050, align 8, !dbg !2438
  %770 = load ptr, ptr %s1292, align 8, !dbg !2440
  %ptradd_any1316 = getelementptr i8, ptr %770, i8 1, !dbg !2440
  store ptr %ptradd_any1316, ptr %s1292, align 8, !dbg !2440
  %771 = load ptr, ptr %self, align 8
  %772 = load i8, ptr %770, align 1
  %773 = call i64 @std.io.Formatter.out(ptr %retparam1317, ptr %771, i8 %772), !dbg !2441
  %not_err1318 = icmp eq i64 %773, 0, !dbg !2441
  %774 = call i1 @llvm.expect.i1(i1 %not_err1318, i1 true), !dbg !2441
  br i1 %774, label %after_check1320, label %assign_optional1319, !dbg !2441

assign_optional1319:                              ; preds = %if.else1314
  store i64 %773, ptr %error_var1315, align 8, !dbg !2441
  br label %guard_block1321, !dbg !2441

after_check1320:                                  ; preds = %if.else1314
  br label %noerr_block1322, !dbg !2441

guard_block1321:                                  ; preds = %assign_optional1319
  %775 = load i64, ptr %error_var1315, align 8, !dbg !2441
  ret i64 %775, !dbg !2441

noerr_block1322:                                  ; preds = %after_check1320
  %776 = load i64, ptr %retparam1317, align 8, !dbg !2441
  %add1323 = add i64 %769, %776, !dbg !2438
  store i64 %add1323, ptr %len1050, align 8, !dbg !2438
  %777 = load i64, ptr %p, align 8, !dbg !2442
  %gt1324 = icmp sgt i64 %777, 0, !dbg !2442
  br i1 %gt1324, label %or.phi1335, label %or.rhs1325, !dbg !2442

or.rhs1325:                                       ; preds = %noerr_block1322
  %778 = load ptr, ptr %self, align 8, !dbg !2443
  %checknull1326 = icmp eq ptr %778, null, !dbg !2443
  %779 = call i1 @llvm.expect.i1(i1 %checknull1326, i1 false), !dbg !2443
  br i1 %779, label %panic1327, label %checkok1331, !dbg !2443

checkok1331:                                      ; preds = %or.rhs1325
  %ptradd1332 = getelementptr inbounds i8, ptr %778, i64 16, !dbg !2443
  %780 = load i32, ptr %ptradd1332, align 8, !dbg !2443
  %lshrl1333 = lshr i32 %780, 4, !dbg !2443
  %781 = and i32 1, %lshrl1333, !dbg !2443
  %trunc1334 = trunc i32 %781 to i8, !dbg !2443
  %782 = trunc i8 %trunc1334 to i1, !dbg !2443
  br label %or.phi1335, !dbg !2443

or.phi1335:                                       ; preds = %checkok1331, %noerr_block1322
  %val1336 = phi i1 [ true, %noerr_block1322 ], [ %782, %checkok1331 ], !dbg !2443
  br i1 %val1336, label %if.then1337, label %if.exit1346, !dbg !2443

if.then1337:                                      ; preds = %or.phi1335
  %783 = load i64, ptr %len1050, align 8, !dbg !2444
  %784 = load ptr, ptr %self, align 8
  %785 = call i64 @std.io.Formatter.out(ptr %retparam1339, ptr %784, i8 46), !dbg !2445
  %not_err1340 = icmp eq i64 %785, 0, !dbg !2445
  %786 = call i1 @llvm.expect.i1(i1 %not_err1340, i1 true), !dbg !2445
  br i1 %786, label %after_check1342, label %assign_optional1341, !dbg !2445

assign_optional1341:                              ; preds = %if.then1337
  store i64 %785, ptr %error_var1338, align 8, !dbg !2445
  br label %guard_block1343, !dbg !2445

after_check1342:                                  ; preds = %if.then1337
  br label %noerr_block1344, !dbg !2445

guard_block1343:                                  ; preds = %assign_optional1341
  %787 = load i64, ptr %error_var1338, align 8, !dbg !2445
  ret i64 %787, !dbg !2445

noerr_block1344:                                  ; preds = %after_check1342
  %788 = load i64, ptr %retparam1339, align 8, !dbg !2445
  %add1345 = add i64 %783, %788, !dbg !2444
  store i64 %add1345, ptr %len1050, align 8, !dbg !2444
  br label %if.exit1346, !dbg !2444

if.exit1346:                                      ; preds = %noerr_block1344, %or.phi1335
  br label %if.exit1347, !dbg !2444

if.exit1347:                                      ; preds = %if.exit1346, %loop.exit1313
  %789 = load i64, ptr %len1050, align 8, !dbg !2446
  %790 = load ptr, ptr %s1292, align 8, !dbg !2447
  %791 = load ptr, ptr %buf, align 8, !dbg !2448
  %ptradd_any1349 = getelementptr i8, ptr %791, i64 9, !dbg !2449
  %792 = load ptr, ptr %s1292, align 8, !dbg !2450
  %793 = ptrtoint ptr %792 to i64, !dbg !2448
  %794 = ptrtoint ptr %ptradd_any1349 to i64, !dbg !2448
  %795 = sub i64 %794, %793, !dbg !2448
  %796 = sdiv exact i64 %795, 1, !dbg !2448
  store i64 %796, ptr %x1350, align 8
  %797 = load i64, ptr %p, align 8
  store i64 %797, ptr %y1351, align 8
  %798 = load i64, ptr %x1350, align 8, !dbg !2451
  %799 = load i64, ptr %y1351, align 8, !dbg !2454
  %800 = call i64 @llvm.smin.i64(i64 %798, i64 %799), !dbg !2454
  %add1352 = add i64 0, %800, !dbg !2454
  %size1353 = sub i64 %add1352, 0, !dbg !2454
  %801 = insertvalue %"char[]" undef, ptr %790, 0, !dbg !2454
  %802 = insertvalue %"char[]" %801, i64 %size1353, 1, !dbg !2454
  %803 = load ptr, ptr %self, align 8
  store %"char[]" %802, ptr %indirectarg1355, align 8
  %804 = call i64 @std.io.Formatter.out_chars(ptr %retparam1354, ptr %803, ptr align 8 %indirectarg1355), !dbg !2455
  %not_err1356 = icmp eq i64 %804, 0, !dbg !2455
  %805 = call i1 @llvm.expect.i1(i1 %not_err1356, i1 true), !dbg !2455
  br i1 %805, label %after_check1358, label %assign_optional1357, !dbg !2455

assign_optional1357:                              ; preds = %if.exit1347
  store i64 %804, ptr %error_var1348, align 8, !dbg !2455
  br label %guard_block1359, !dbg !2455

after_check1358:                                  ; preds = %if.exit1347
  br label %noerr_block1360, !dbg !2455

guard_block1359:                                  ; preds = %assign_optional1357
  %806 = load i64, ptr %error_var1348, align 8, !dbg !2455
  ret i64 %806, !dbg !2455

noerr_block1360:                                  ; preds = %after_check1358
  %807 = load i64, ptr %retparam1354, align 8, !dbg !2455
  %add1361 = add i64 %789, %807, !dbg !2446
  store i64 %add1361, ptr %len1050, align 8, !dbg !2446
  %808 = load i64, ptr %p, align 8, !dbg !2456
  %809 = load ptr, ptr %buf, align 8, !dbg !2457
  %ptradd_any1362 = getelementptr i8, ptr %809, i64 9, !dbg !2458
  %810 = load ptr, ptr %s1292, align 8, !dbg !2459
  %811 = ptrtoint ptr %810 to i64, !dbg !2457
  %812 = ptrtoint ptr %ptradd_any1362 to i64, !dbg !2457
  %813 = sub i64 %812, %811, !dbg !2457
  %814 = sdiv exact i64 %813, 1, !dbg !2457
  %sub1363 = sub i64 %808, %814, !dbg !2456
  store i64 %sub1363, ptr %p, align 8, !dbg !2456
  %815 = load ptr, ptr %d1284, align 8, !dbg !2460
  %ptradd_any1364 = getelementptr i8, ptr %815, i8 4, !dbg !2460
  store ptr %ptradd_any1364, ptr %d1284, align 8, !dbg !2460
  br label %loop.cond1285, !dbg !2460

loop.exit1365:                                    ; preds = %and.phi1289
  %816 = load i64, ptr %len1050, align 8, !dbg !2461
  %817 = load i64, ptr %p, align 8, !dbg !2462
  %add1367 = add i64 %817, 18, !dbg !2462
  %818 = load ptr, ptr %self, align 8
  %819 = call i64 @std.io.Formatter.pad(ptr %retparam1368, ptr %818, i8 48, i64 %add1367, i64 18) #5, !dbg !2463
  %not_err1369 = icmp eq i64 %819, 0, !dbg !2463
  %820 = call i1 @llvm.expect.i1(i1 %not_err1369, i1 true), !dbg !2463
  br i1 %820, label %after_check1371, label %assign_optional1370, !dbg !2463

assign_optional1370:                              ; preds = %loop.exit1365
  store i64 %819, ptr %error_var1366, align 8, !dbg !2463
  br label %guard_block1372, !dbg !2463

after_check1371:                                  ; preds = %loop.exit1365
  br label %noerr_block1373, !dbg !2463

guard_block1372:                                  ; preds = %assign_optional1370
  %821 = load i64, ptr %error_var1366, align 8, !dbg !2463
  ret i64 %821, !dbg !2463

noerr_block1373:                                  ; preds = %after_check1371
  %822 = load i64, ptr %retparam1368, align 8, !dbg !2463
  %add1374 = add i64 %816, %822, !dbg !2461
  store i64 %add1374, ptr %len1050, align 8, !dbg !2461
  %823 = load i64, ptr %len1050, align 8, !dbg !2464
  %824 = load ptr, ptr %estr986, align 8, !dbg !2465
  %825 = load ptr, ptr %ebuf, align 8, !dbg !2466
  %826 = load ptr, ptr %estr986, align 8, !dbg !2467
  %827 = ptrtoint ptr %826 to i64, !dbg !2466
  %828 = ptrtoint ptr %825 to i64, !dbg !2466
  %829 = sub i64 %828, %827, !dbg !2466
  %830 = sdiv exact i64 %829, 1, !dbg !2466
  %add1376 = add i64 0, %830, !dbg !2466
  %size1377 = sub i64 %add1376, 0, !dbg !2466
  %831 = insertvalue %"char[]" undef, ptr %824, 0, !dbg !2466
  %832 = insertvalue %"char[]" %831, i64 %size1377, 1, !dbg !2466
  %833 = load ptr, ptr %self, align 8
  store %"char[]" %832, ptr %indirectarg1379, align 8
  %834 = call i64 @std.io.Formatter.out_chars(ptr %retparam1378, ptr %833, ptr align 8 %indirectarg1379), !dbg !2468
  %not_err1380 = icmp eq i64 %834, 0, !dbg !2468
  %835 = call i1 @llvm.expect.i1(i1 %not_err1380, i1 true), !dbg !2468
  br i1 %835, label %after_check1382, label %assign_optional1381, !dbg !2468

assign_optional1381:                              ; preds = %noerr_block1373
  store i64 %834, ptr %error_var1375, align 8, !dbg !2468
  br label %guard_block1383, !dbg !2468

after_check1382:                                  ; preds = %noerr_block1373
  br label %noerr_block1384, !dbg !2468

guard_block1383:                                  ; preds = %assign_optional1381
  %836 = load i64, ptr %error_var1375, align 8, !dbg !2468
  ret i64 %836, !dbg !2468

noerr_block1384:                                  ; preds = %after_check1382
  %837 = load i64, ptr %retparam1378, align 8, !dbg !2468
  %add1385 = add i64 %823, %837, !dbg !2464
  store i64 %add1385, ptr %len1050, align 8, !dbg !2464
  br label %if.exit1386, !dbg !2464

if.exit1386:                                      ; preds = %noerr_block1384, %noerr_block1277
  %838 = load ptr, ptr %self, align 8, !dbg !2469
  %checknull1387 = icmp eq ptr %838, null, !dbg !2469
  %839 = call i1 @llvm.expect.i1(i1 %checknull1387, i1 false), !dbg !2469
  br i1 %839, label %panic1388, label %checkok1392, !dbg !2469

checkok1392:                                      ; preds = %if.exit1386
  %ptradd1393 = getelementptr inbounds i8, ptr %838, i64 16, !dbg !2469
  %840 = load i32, ptr %ptradd1393, align 8, !dbg !2469
  %lshrl1394 = lshr i32 %840, 1, !dbg !2469
  %841 = and i32 1, %lshrl1394, !dbg !2469
  %trunc1395 = trunc i32 %841 to i8, !dbg !2469
  %842 = trunc i8 %trunc1395 to i1, !dbg !2469
  br i1 %842, label %if.then1396, label %if.exit1416, !dbg !2469

if.then1396:                                      ; preds = %checkok1392
  %843 = load i64, ptr %len1050, align 8, !dbg !2470
  %844 = load ptr, ptr %self, align 8, !dbg !2471
  %checknull1398 = icmp eq ptr %844, null, !dbg !2471
  %845 = call i1 @llvm.expect.i1(i1 %checknull1398, i1 false), !dbg !2471
  br i1 %845, label %panic1399, label %checkok1403, !dbg !2471

checkok1403:                                      ; preds = %if.then1396
  %ptradd1404 = getelementptr inbounds i8, ptr %844, i64 16, !dbg !2471
  %ptradd1405 = getelementptr inbounds i8, ptr %ptradd1404, i64 4, !dbg !2471
  %846 = load i32, ptr %ptradd1405, align 4, !dbg !2471
  %zext1406 = zext i32 %846 to i64, !dbg !2471
  %847 = load i64, ptr %pl, align 8, !dbg !2472
  %848 = load i32, ptr %l968, align 4, !dbg !2473
  %sext1407 = sext i32 %848 to i64, !dbg !2473
  %add1408 = add i64 %847, %sext1407, !dbg !2472
  %849 = load ptr, ptr %self, align 8
  %850 = call i64 @std.io.Formatter.pad(ptr %retparam1409, ptr %849, i8 32, i64 %zext1406, i64 %add1408) #5, !dbg !2474
  %not_err1410 = icmp eq i64 %850, 0, !dbg !2474
  %851 = call i1 @llvm.expect.i1(i1 %not_err1410, i1 true), !dbg !2474
  br i1 %851, label %after_check1412, label %assign_optional1411, !dbg !2474

assign_optional1411:                              ; preds = %checkok1403
  store i64 %850, ptr %error_var1397, align 8, !dbg !2474
  br label %guard_block1413, !dbg !2474

after_check1412:                                  ; preds = %checkok1403
  br label %noerr_block1414, !dbg !2474

guard_block1413:                                  ; preds = %assign_optional1411
  %852 = load i64, ptr %error_var1397, align 8, !dbg !2474
  ret i64 %852, !dbg !2474

noerr_block1414:                                  ; preds = %after_check1412
  %853 = load i64, ptr %retparam1409, align 8, !dbg !2474
  %add1415 = add i64 %843, %853, !dbg !2470
  store i64 %add1415, ptr %len1050, align 8, !dbg !2470
  br label %if.exit1416, !dbg !2470

if.exit1416:                                      ; preds = %noerr_block1414, %checkok1392
  %854 = load i64, ptr %len1050, align 8, !dbg !2475
  store i64 %854, ptr %0, align 8, !dbg !2475
  ret i64 0, !dbg !2475

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg2, align 8
  %855 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %855(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 197), !dbg !1689
  unreachable, !dbg !1689

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.48, i64 53 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg6, align 8
  %856 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %856(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 212), !dbg !1708
  unreachable, !dbg !1708

panic9:                                           ; preds = %or.rhs
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg12, align 8
  %857 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %857(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 209), !dbg !1716
  unreachable, !dbg !1716

panic18:                                          ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.48, i64 53 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg21, align 8
  %858 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %858(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 212), !dbg !1723
  unreachable, !dbg !1723

panic25:                                          ; preds = %if.then23
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg28, align 8
  %859 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %859(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 215), !dbg !1727
  unreachable, !dbg !1727

panic36:                                          ; preds = %if.then34
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg39, align 8
  %860 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %860(ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, i32 215), !dbg !1729
  unreachable, !dbg !1729

panic46:                                          ; preds = %if.exit44
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg49, align 8
  %861 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %861(ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, i32 216), !dbg !1735
  unreachable, !dbg !1735

panic57:                                          ; preds = %if.then55
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg60, align 8
  %862 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %862(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 217), !dbg !1739
  unreachable, !dbg !1739

panic91:                                          ; preds = %noerr_block88
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg92, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg93, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg94, align 8
  %863 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %863(ptr align 8 %indirectarg92, ptr align 8 %indirectarg93, ptr align 8 %indirectarg94, i32 221), !dbg !1750
  unreachable, !dbg !1750

panic102:                                         ; preds = %if.then99
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg103, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg104, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg105, align 8
  %864 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %864(ptr align 8 %indirectarg103, ptr align 8 %indirectarg104, ptr align 8 %indirectarg105, i32 221), !dbg !1752
  unreachable, !dbg !1752

panic135:                                         ; preds = %if.exit122
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg136, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg137, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg138, align 8
  %865 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %865(ptr align 8 %indirectarg136, ptr align 8 %indirectarg137, ptr align 8 %indirectarg138, i32 233), !dbg !1783
  unreachable, !dbg !1783

panic144:                                         ; preds = %cond.lhs
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg145, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg146, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg147, align 8
  %866 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %866(ptr align 8 %indirectarg145, ptr align 8 %indirectarg146, ptr align 8 %indirectarg147, i32 233), !dbg !1784
  unreachable, !dbg !1784

panic182:                                         ; preds = %if.then179
  store %"char[]" { ptr @.panic_msg.167, i64 47 }, ptr %indirectarg183, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg184, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg185, align 8
  %867 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %867(ptr align 8 %indirectarg183, ptr align 8 %indirectarg184, ptr align 8 %indirectarg185, i32 259), !dbg !2476
  unreachable, !dbg !2476

panic190:                                         ; preds = %if.exit187
  store %"char[]" { ptr @.panic_msg.167, i64 47 }, ptr %indirectarg191, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg192, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg193, align 8
  %868 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %868(ptr align 8 %indirectarg191, ptr align 8 %indirectarg192, ptr align 8 %indirectarg193, i32 260), !dbg !2477
  unreachable, !dbg !2477

panic199:                                         ; preds = %checkok194
  store %"char[]" { ptr @.panic_msg.167, i64 47 }, ptr %indirectarg200, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg201, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg202, align 8
  %869 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %869(ptr align 8 %indirectarg200, ptr align 8 %indirectarg201, ptr align 8 %indirectarg202, i32 261), !dbg !2478
  unreachable, !dbg !2478

panic205:                                         ; preds = %checkok203
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg206, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg207, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg208, align 8
  %870 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %870(ptr align 8 %indirectarg206, ptr align 8 %indirectarg207, ptr align 8 %indirectarg208, i32 261), !dbg !1831
  unreachable, !dbg !1831

panic216:                                         ; preds = %checkok209
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg217, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg218, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg219, align 8
  %871 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %871(ptr align 8 %indirectarg217, ptr align 8 %indirectarg218, ptr align 8 %indirectarg219, i32 263), !dbg !1838
  unreachable, !dbg !1838

panic231:                                         ; preds = %loop.body227
  store %"char[]" { ptr @.panic_msg.168, i64 44 }, ptr %indirectarg232, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg233, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg234, align 8
  %872 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %872(ptr align 8 %indirectarg232, ptr align 8 %indirectarg233, ptr align 8 %indirectarg234, i32 267), !dbg !1847
  unreachable, !dbg !1847

panic249:                                         ; preds = %or.rhs247
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg250, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg251, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg252, align 8
  %873 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %873(ptr align 8 %indirectarg250, ptr align 8 %indirectarg251, ptr align 8 %indirectarg252, i32 269), !dbg !1857
  unreachable, !dbg !1857

panic264:                                         ; preds = %if.then261
  store %"char[]" { ptr @.panic_msg.168, i64 44 }, ptr %indirectarg265, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg266, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg267, align 8
  %874 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %874(ptr align 8 %indirectarg265, ptr align 8 %indirectarg266, ptr align 8 %indirectarg267, i32 269), !dbg !1858
  unreachable, !dbg !1858

panic291:                                         ; preds = %cond.phi288
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg292, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg293, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg294, align 8
  %875 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %875(ptr align 8 %indirectarg292, ptr align 8 %indirectarg293, ptr align 8 %indirectarg294, i32 278), !dbg !1884
  unreachable, !dbg !1884

panic302:                                         ; preds = %and.rhs300
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg303, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg304, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg305, align 8
  %876 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %876(ptr align 8 %indirectarg303, ptr align 8 %indirectarg304, ptr align 8 %indirectarg305, i32 278), !dbg !1885
  unreachable, !dbg !1885

panic315:                                         ; preds = %if.then312
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg316, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg317, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg318, align 8
  %877 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %877(ptr align 8 %indirectarg316, ptr align 8 %indirectarg317, ptr align 8 %indirectarg318, i32 278), !dbg !1887
  unreachable, !dbg !1887

panic334:                                         ; preds = %or.rhs332
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg335, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg336, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg337, align 8
  %878 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %878(ptr align 8 %indirectarg335, ptr align 8 %indirectarg336, ptr align 8 %indirectarg337, i32 279), !dbg !1892
  unreachable, !dbg !1892

panic357:                                         ; preds = %if.exit354
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg358, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg359, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg360, align 8
  %879 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %879(ptr align 8 %indirectarg358, ptr align 8 %indirectarg359, ptr align 8 %indirectarg360, i32 280), !dbg !1898
  unreachable, !dbg !1898

panic375:                                         ; preds = %noerr_block372
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg376, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg377, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg378, align 8
  %880 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %880(ptr align 8 %indirectarg376, ptr align 8 %indirectarg377, ptr align 8 %indirectarg378, i32 281), !dbg !1901
  unreachable, !dbg !1901

panic385:                                         ; preds = %if.then382
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg386, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg387, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg388, align 8
  %881 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %881(ptr align 8 %indirectarg386, ptr align 8 %indirectarg387, ptr align 8 %indirectarg388, i32 281), !dbg !1903
  unreachable, !dbg !1903

panic434:                                         ; preds = %noerr_block431
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg435, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg436, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg437, align 8
  %882 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %882(ptr align 8 %indirectarg435, ptr align 8 %indirectarg436, ptr align 8 %indirectarg437, i32 285), !dbg !1920
  unreachable, !dbg !1920

panic445:                                         ; preds = %if.then442
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg446, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg447, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg448, align 8
  %883 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %883(ptr align 8 %indirectarg446, ptr align 8 %indirectarg447, ptr align 8 %indirectarg448, i32 285), !dbg !1922
  unreachable, !dbg !1922

panic494:                                         ; preds = %loop.body491
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg495, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg496, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg497, align 8
  %884 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %884(ptr align 8 %indirectarg495, ptr align 8 %indirectarg496, ptr align 8 %indirectarg497, i32 317), !dbg !1979
  unreachable, !dbg !1979

panic501:                                         ; preds = %checkok498
  store i64 %zext500, ptr %taddr, align 8
  %885 = insertvalue %any undef, ptr %taddr, 0
  %886 = insertvalue %any %885, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg502, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg503, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg504, align 8
  store %any %886, ptr %varargslots, align 16
  %887 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %887, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg505, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg502, ptr align 8 %indirectarg503, ptr align 8 %indirectarg504, i32 317, ptr align 8 %indirectarg505), !dbg !1981
  unreachable, !dbg !1981

panic510:                                         ; preds = %checkok506
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg511, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg512, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg513, align 8
  %888 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %888(ptr align 8 %indirectarg511, ptr align 8 %indirectarg512, ptr align 8 %indirectarg513, i32 318), !dbg !1983
  unreachable, !dbg !1983

panic523:                                         ; preds = %if.then520
  store %"char[]" { ptr @.panic_msg.172, i64 44 }, ptr %indirectarg524, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg525, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg526, align 8
  %889 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %889(ptr align 8 %indirectarg524, ptr align 8 %indirectarg525, ptr align 8 %indirectarg526, i32 321), !dbg !2479
  unreachable, !dbg !2479

panic559:                                         ; preds = %loop.body557
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg560, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg561, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg562, align 8
  %890 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %890(ptr align 8 %indirectarg560, ptr align 8 %indirectarg561, ptr align 8 %indirectarg562, i32 335), !dbg !2030
  unreachable, !dbg !2030

panic564:                                         ; preds = %checkok563
  store i32 %350, ptr %taddr565, align 4
  %891 = insertvalue %any undef, ptr %taddr565, 0
  %892 = insertvalue %any %891, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg566, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg567, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg568, align 8
  store %any %892, ptr %varargslots569, align 16
  %893 = insertvalue %"any[]" undef, ptr %varargslots569, 0
  %"$$temp570" = insertvalue %"any[]" %893, i64 1, 1
  store %"any[]" %"$$temp570", ptr %indirectarg571, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg566, ptr align 8 %indirectarg567, ptr align 8 %indirectarg568, i32 335, ptr align 8 %indirectarg571), !dbg !2032
  unreachable, !dbg !2032

panic574:                                         ; preds = %checkok572
  store i32 %350, ptr %taddr575, align 4
  %894 = insertvalue %any undef, ptr %taddr575, 0
  %895 = insertvalue %any %894, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg576, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg577, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg578, align 8
  store %any %895, ptr %varargslots579, align 16
  %896 = insertvalue %"any[]" undef, ptr %varargslots579, 0
  %"$$temp580" = insertvalue %"any[]" %896, i64 1, 1
  store %"any[]" %"$$temp580", ptr %indirectarg581, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg576, ptr align 8 %indirectarg577, ptr align 8 %indirectarg578, i32 335, ptr align 8 %indirectarg581), !dbg !2032
  unreachable, !dbg !2032

panic587:                                         ; preds = %checkok582
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg588, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg589, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg590, align 8
  %897 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %897(ptr align 8 %indirectarg588, ptr align 8 %indirectarg589, ptr align 8 %indirectarg590, i32 336), !dbg !2034
  unreachable, !dbg !2034

panic593:                                         ; preds = %checkok591
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg594, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg595, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg596, align 8
  %898 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %898(ptr align 8 %indirectarg594, ptr align 8 %indirectarg595, ptr align 8 %indirectarg596, i32 336), !dbg !2035
  unreachable, !dbg !2035

panic599:                                         ; preds = %checkok597
  store i32 %359, ptr %taddr600, align 4
  %899 = insertvalue %any undef, ptr %taddr600, 0
  %900 = insertvalue %any %899, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg601, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg602, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg603, align 8
  store %any %900, ptr %varargslots604, align 16
  %901 = insertvalue %"any[]" undef, ptr %varargslots604, 0
  %"$$temp605" = insertvalue %"any[]" %901, i64 1, 1
  store %"any[]" %"$$temp605", ptr %indirectarg606, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg601, ptr align 8 %indirectarg602, ptr align 8 %indirectarg603, i32 336, ptr align 8 %indirectarg606), !dbg !2037
  unreachable, !dbg !2037

panic611:                                         ; preds = %checkok607
  store i32 %363, ptr %taddr612, align 4
  %902 = insertvalue %any undef, ptr %taddr612, 0
  %903 = insertvalue %any %902, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg613, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg614, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg615, align 8
  store %any %903, ptr %varargslots616, align 16
  %904 = insertvalue %"any[]" undef, ptr %varargslots616, 0
  %"$$temp617" = insertvalue %"any[]" %904, i64 1, 1
  store %"any[]" %"$$temp617", ptr %indirectarg618, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg613, ptr align 8 %indirectarg614, ptr align 8 %indirectarg615, i32 337, ptr align 8 %indirectarg618), !dbg !2040
  unreachable, !dbg !2040

panic621:                                         ; preds = %checkok619
  store i32 %363, ptr %taddr622, align 4
  %905 = insertvalue %any undef, ptr %taddr622, 0
  %906 = insertvalue %any %905, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  store %"char[]" { ptr @.panic_msg.42, i64 35 }, ptr %indirectarg623, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg624, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg625, align 8
  store %any %906, ptr %varargslots626, align 16
  %907 = insertvalue %"any[]" undef, ptr %varargslots626, 0
  %"$$temp627" = insertvalue %"any[]" %907, i64 1, 1
  store %"any[]" %"$$temp627", ptr %indirectarg628, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg623, ptr align 8 %indirectarg624, ptr align 8 %indirectarg625, i32 337, ptr align 8 %indirectarg628), !dbg !2040
  unreachable, !dbg !2040

panic659:                                         ; preds = %loop.cond657
  store %"char[]" { ptr @.panic_msg.173, i64 42 }, ptr %indirectarg660, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg661, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg662, align 8
  %908 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %908(ptr align 8 %indirectarg660, ptr align 8 %indirectarg661, ptr align 8 %indirectarg662, i32 350), !dbg !2071
  unreachable, !dbg !2071

panic707:                                         ; preds = %loop.exit705
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg708, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg709, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg710, align 8
  %909 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %909(ptr align 8 %indirectarg708, ptr align 8 %indirectarg709, ptr align 8 %indirectarg710, i32 364), !dbg !2106
  unreachable, !dbg !2106

panic712:                                         ; preds = %checkok711
  store %"char[]" { ptr @.panic_msg.174, i64 10 }, ptr %indirectarg713, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg714, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg715, align 8
  %910 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %910(ptr align 8 %indirectarg713, ptr align 8 %indirectarg714, ptr align 8 %indirectarg715, i32 364), !dbg !2108
  unreachable, !dbg !2108

panic727:                                         ; preds = %if.then724
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg728, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg729, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg730, align 8
  %911 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %911(ptr align 8 %indirectarg728, ptr align 8 %indirectarg729, ptr align 8 %indirectarg730, i32 370), !dbg !2119
  unreachable, !dbg !2119

panic733:                                         ; preds = %checkok731
  store %"char[]" { ptr @.panic_msg.175, i64 17 }, ptr %indirectarg734, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg735, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg736, align 8
  %912 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %912(ptr align 8 %indirectarg734, ptr align 8 %indirectarg735, ptr align 8 %indirectarg736, i32 370), !dbg !2121
  unreachable, !dbg !2121

panic782:                                         ; preds = %if.exit780
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg783, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg784, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg785, align 8
  %913 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %913(ptr align 8 %indirectarg783, ptr align 8 %indirectarg784, ptr align 8 %indirectarg785, i32 388), !dbg !2148
  unreachable, !dbg !2148

panic792:                                         ; preds = %if.then790
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg793, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg794, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg795, align 8
  %914 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %914(ptr align 8 %indirectarg793, ptr align 8 %indirectarg794, ptr align 8 %indirectarg795, i32 392), !dbg !2154
  unreachable, !dbg !2154

panic798:                                         ; preds = %checkok796
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg799, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg800, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg801, align 8
  %915 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %915(ptr align 8 %indirectarg799, ptr align 8 %indirectarg800, ptr align 8 %indirectarg801, i32 392), !dbg !2156
  unreachable, !dbg !2156

panic806:                                         ; preds = %loop.cond804
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg807, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg808, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg809, align 8
  %916 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %916(ptr align 8 %indirectarg807, ptr align 8 %indirectarg808, ptr align 8 %indirectarg809, i32 393), !dbg !2160
  unreachable, !dbg !2160

panic815:                                         ; preds = %loop.body812
  store %"char[]" { ptr @.panic_msg.176, i64 44 }, ptr %indirectarg816, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg817, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg818, align 8
  %917 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %917(ptr align 8 %indirectarg816, ptr align 8 %indirectarg817, ptr align 8 %indirectarg818, i32 395), !dbg !2163
  unreachable, !dbg !2163

panic824:                                         ; preds = %if.then821
  store %"char[]" { ptr @.panic_msg.172, i64 44 }, ptr %indirectarg825, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg826, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg827, align 8
  %918 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %918(ptr align 8 %indirectarg825, ptr align 8 %indirectarg826, ptr align 8 %indirectarg827, i32 396), !dbg !2480
  unreachable, !dbg !2480

panic831:                                         ; preds = %if.exit829
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg832, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg833, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg834, align 8
  %919 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %919(ptr align 8 %indirectarg832, ptr align 8 %indirectarg833, ptr align 8 %indirectarg834, i32 397), !dbg !2170
  unreachable, !dbg !2170

panic842:                                         ; preds = %loop.cond840
  store %"char[]" { ptr @.panic_msg.173, i64 42 }, ptr %indirectarg843, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg844, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg845, align 8
  %920 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %920(ptr align 8 %indirectarg843, ptr align 8 %indirectarg844, ptr align 8 %indirectarg845, i32 399), !dbg !2177
  unreachable, !dbg !2177

panic892:                                         ; preds = %if.exit890
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg893, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg894, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg895, align 8
  %921 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %921(ptr align 8 %indirectarg893, ptr align 8 %indirectarg894, ptr align 8 %indirectarg895, i32 419), !dbg !2208
  unreachable, !dbg !2208

panic913:                                         ; preds = %loop.cond910
  store %"char[]" { ptr @.panic_msg.174, i64 10 }, ptr %indirectarg914, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg915, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg916, align 8
  %922 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %922(ptr align 8 %indirectarg914, ptr align 8 %indirectarg915, ptr align 8 %indirectarg916, i32 424), !dbg !2220
  unreachable, !dbg !2220

panic953:                                         ; preds = %or.rhs951
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg954, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg955, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg956, align 8
  %923 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %923(ptr align 8 %indirectarg954, ptr align 8 %indirectarg955, ptr align 8 %indirectarg956, i32 441), !dbg !2257
  unreachable, !dbg !2257

panic973:                                         ; preds = %or.rhs971
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg974, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg975, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg976, align 8
  %924 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %924(ptr align 8 %indirectarg974, ptr align 8 %indirectarg975, ptr align 8 %indirectarg976, i32 442), !dbg !2265
  unreachable, !dbg !2265

panic1013:                                        ; preds = %loop.exit1010
  store %"char[]" { ptr @.panic_msg.167, i64 47 }, ptr %indirectarg1014, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1015, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1016, align 8
  %925 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %925(ptr align 8 %indirectarg1014, ptr align 8 %indirectarg1015, ptr align 8 %indirectarg1016, i32 453), !dbg !2481
  unreachable, !dbg !2481

panic1022:                                        ; preds = %checkok1017
  store %"char[]" { ptr @.panic_msg.167, i64 47 }, ptr %indirectarg1023, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1024, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1025, align 8
  %926 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %926(ptr align 8 %indirectarg1023, ptr align 8 %indirectarg1024, ptr align 8 %indirectarg1025, i32 454), !dbg !2482
  unreachable, !dbg !2482

panic1028:                                        ; preds = %checkok1026
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1029, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1030, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1031, align 8
  %927 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %927(ptr align 8 %indirectarg1029, ptr align 8 %indirectarg1030, ptr align 8 %indirectarg1031, i32 454), !dbg !2293
  unreachable, !dbg !2293

panic1052:                                        ; preds = %if.exit1049
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1053, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1054, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1055, align 8
  %928 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %928(ptr align 8 %indirectarg1053, ptr align 8 %indirectarg1054, ptr align 8 %indirectarg1055, i32 460), !dbg !2310
  unreachable, !dbg !2310

panic1063:                                        ; preds = %and.rhs1061
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1064, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1065, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1066, align 8
  %929 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %929(ptr align 8 %indirectarg1064, ptr align 8 %indirectarg1065, ptr align 8 %indirectarg1066, i32 460), !dbg !2311
  unreachable, !dbg !2311

panic1076:                                        ; preds = %if.then1073
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1077, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1078, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1079, align 8
  %930 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %930(ptr align 8 %indirectarg1077, ptr align 8 %indirectarg1078, ptr align 8 %indirectarg1079, i32 460), !dbg !2313
  unreachable, !dbg !2313

panic1096:                                        ; preds = %or.rhs1094
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1097, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1098, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1099, align 8
  %931 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %931(ptr align 8 %indirectarg1097, ptr align 8 %indirectarg1098, ptr align 8 %indirectarg1099, i32 461), !dbg !2318
  unreachable, !dbg !2318

panic1118:                                        ; preds = %if.exit1116
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1119, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1120, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1121, align 8
  %932 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %932(ptr align 8 %indirectarg1119, ptr align 8 %indirectarg1120, ptr align 8 %indirectarg1121, i32 462), !dbg !2323
  unreachable, !dbg !2323

panic1128:                                        ; preds = %if.then1125
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1129, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1130, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1131, align 8
  %933 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %933(ptr align 8 %indirectarg1129, ptr align 8 %indirectarg1130, ptr align 8 %indirectarg1131, i32 462), !dbg !2325
  unreachable, !dbg !2325

panic1157:                                        ; preds = %loop.body1154
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg1158, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1159, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1160, align 8
  %934 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %934(ptr align 8 %indirectarg1158, ptr align 8 %indirectarg1159, ptr align 8 %indirectarg1160, i32 469), !dbg !2344
  unreachable, !dbg !2344

panic1182:                                        ; preds = %switch.case1179
  store %"char[]" { ptr @.panic_msg.146, i64 44 }, ptr %indirectarg1183, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1184, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1185, align 8
  %935 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %935(ptr align 8 %indirectarg1183, ptr align 8 %indirectarg1184, ptr align 8 %indirectarg1185, i32 475), !dbg !2483
  unreachable, !dbg !2483

panic1206:                                        ; preds = %or.rhs1204
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1207, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1208, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1209, align 8
  %936 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %936(ptr align 8 %indirectarg1207, ptr align 8 %indirectarg1208, ptr align 8 %indirectarg1209, i32 479), !dbg !2372
  unreachable, !dbg !2372

panic1235:                                        ; preds = %loop.body1232
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg1236, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1237, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1238, align 8
  %937 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %937(ptr align 8 %indirectarg1236, ptr align 8 %indirectarg1237, ptr align 8 %indirectarg1238, i32 482), !dbg !2383
  unreachable, !dbg !2383

panic1248:                                        ; preds = %loop.body1245
  store %"char[]" { ptr @.panic_msg.146, i64 44 }, ptr %indirectarg1249, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1250, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1251, align 8
  %938 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %938(ptr align 8 %indirectarg1249, ptr align 8 %indirectarg1250, ptr align 8 %indirectarg1251, i32 483), !dbg !2484
  unreachable, !dbg !2484

panic1294:                                        ; preds = %loop.body1291
  store %"char[]" { ptr @.panic_msg.171, i64 42 }, ptr %indirectarg1295, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1296, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1297, align 8
  %939 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %939(ptr align 8 %indirectarg1295, ptr align 8 %indirectarg1296, ptr align 8 %indirectarg1297, i32 493), !dbg !2420
  unreachable, !dbg !2420

panic1327:                                        ; preds = %or.rhs1325
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1328, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1329, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1330, align 8
  %940 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %940(ptr align 8 %indirectarg1328, ptr align 8 %indirectarg1329, ptr align 8 %indirectarg1330, i32 502), !dbg !2443
  unreachable, !dbg !2443

panic1388:                                        ; preds = %if.exit1386
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1389, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1390, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1391, align 8
  %941 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %941(ptr align 8 %indirectarg1389, ptr align 8 %indirectarg1390, ptr align 8 %indirectarg1391, i32 511), !dbg !2469
  unreachable, !dbg !2469

panic1399:                                        ; preds = %if.then1396
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg1400, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1401, align 8
  store %"char[]" { ptr @.func.162, i64 11 }, ptr %indirectarg1402, align 8
  %942 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %942(ptr align 8 %indirectarg1400, ptr align 8 %indirectarg1401, ptr align 8 %indirectarg1402, i32 511), !dbg !2471
  unreachable, !dbg !2471
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.Formatter.ntoa(ptr %0, ptr %1, ptr align 16 %2, i8 zeroext %3, i32 %4) #0 !dbg !2485 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %negative = alloca i8, align 1
  %base = alloca i32, align 4
  %buf = alloca [256 x i8], align 16
  %len = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %past_10 = alloca i8, align 1
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %digit = alloca i8, align 1
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr38 = alloca i64, align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg43 = alloca %"any[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg60 = alloca %"char[]", align 8
  %5 = icmp eq ptr %1, null, !dbg !2488
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !2488
  br i1 %6, label %panic, label %checkok, !dbg !2488

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2489, metadata !DIExpression()), !dbg !2490
  call void @llvm.dbg.declare(metadata ptr %2, metadata !2491, metadata !DIExpression()), !dbg !2492
  store i8 %3, ptr %negative, align 1
  call void @llvm.dbg.declare(metadata ptr %negative, metadata !2493, metadata !DIExpression()), !dbg !2494
  store i32 %4, ptr %base, align 4
  call void @llvm.dbg.declare(metadata ptr %base, metadata !2495, metadata !DIExpression()), !dbg !2496
  call void @llvm.dbg.declare(metadata ptr %buf, metadata !2497, metadata !DIExpression()), !dbg !2501
  call void @llvm.dbg.declare(metadata ptr %len, metadata !2502, metadata !DIExpression()), !dbg !2503
  store i64 0, ptr %len, align 8, !dbg !2503
  %7 = load i128, ptr %2, align 16, !dbg !2504
  %not = icmp eq i128 %7, 0, !dbg !2504
  br i1 %not, label %if.then, label %if.exit, !dbg !2504

if.then:                                          ; preds = %checkok
  %8 = load ptr, ptr %self, align 8, !dbg !2505
  %checknull = icmp eq ptr %8, null, !dbg !2505
  %9 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2505
  br i1 %9, label %panic3, label %checkok7, !dbg !2505

checkok7:                                         ; preds = %if.then
  %ptradd = getelementptr inbounds i8, ptr %8, i64 16, !dbg !2505
  %10 = load i32, ptr %ptradd, align 8, !dbg !2506
  %11 = and i32 %10, -17, !dbg !2506
  store i32 %11, ptr %ptradd, align 8, !dbg !2506
  br label %if.exit, !dbg !2506

if.exit:                                          ; preds = %checkok7, %checkok
  %12 = load ptr, ptr %self, align 8, !dbg !2507
  %checknull8 = icmp eq ptr %12, null, !dbg !2507
  %13 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !2507
  br i1 %13, label %panic9, label %checkok13, !dbg !2507

checkok13:                                        ; preds = %if.exit
  %ptradd14 = getelementptr inbounds i8, ptr %12, i64 16, !dbg !2507
  %14 = load i32, ptr %ptradd14, align 8, !dbg !2507
  %lshrl = lshr i32 %14, 6, !dbg !2507
  %15 = and i32 1, %lshrl, !dbg !2507
  %trunc = trunc i32 %15 to i8, !dbg !2507
  %16 = trunc i8 %trunc to i1, !dbg !2507
  %not15 = xor i1 %16, true, !dbg !2507
  br i1 %not15, label %or.phi, label %or.rhs, !dbg !2507

or.rhs:                                           ; preds = %checkok13
  %17 = load i128, ptr %2, align 16, !dbg !2508
  %intbool = icmp ne i128 %17, 0, !dbg !2508
  br label %or.phi, !dbg !2508

or.phi:                                           ; preds = %or.rhs, %checkok13
  %val = phi i1 [ true, %checkok13 ], [ %intbool, %or.rhs ], !dbg !2508
  br i1 %val, label %if.then16, label %if.exit59, !dbg !2508

if.then16:                                        ; preds = %or.phi
  call void @llvm.dbg.declare(metadata ptr %past_10, metadata !2509, metadata !DIExpression()), !dbg !2511
  %18 = load ptr, ptr %self, align 8, !dbg !2512
  %checknull17 = icmp eq ptr %18, null, !dbg !2512
  %19 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !2512
  br i1 %19, label %panic18, label %checkok22, !dbg !2512

checkok22:                                        ; preds = %if.then16
  %ptradd23 = getelementptr inbounds i8, ptr %18, i64 16, !dbg !2512
  %20 = load i32, ptr %ptradd23, align 8, !dbg !2512
  %lshrl24 = lshr i32 %20, 5, !dbg !2512
  %21 = and i32 1, %lshrl24, !dbg !2512
  %trunc25 = trunc i32 %21 to i8, !dbg !2512
  %22 = trunc i8 %trunc25 to i1, !dbg !2512
  %ternary = select i1 %22, i8 65, i8 97, !dbg !2513
  %zext = zext i8 %ternary to i32, !dbg !2513
  %sub = sub i32 %zext, 10, !dbg !2512
  %trunc26 = trunc i32 %sub to i8, !dbg !2512
  store i8 %trunc26, ptr %past_10, align 1, !dbg !2512
  br label %loop.body, !dbg !2514

loop.cond:                                        ; preds = %checkok58
  %23 = load i128, ptr %2, align 16, !dbg !2515
  %intbool27 = icmp ne i128 %23, 0, !dbg !2515
  br i1 %intbool27, label %loop.body, label %loop.exit, !dbg !2515

loop.body:                                        ; preds = %loop.cond, %checkok22
  %24 = load i64, ptr %len, align 8, !dbg !2517
  %le = icmp ule i64 256, %24, !dbg !2517
  br i1 %le, label %if.then28, label %if.exit29, !dbg !2517

if.then28:                                        ; preds = %loop.body
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2519

if.exit29:                                        ; preds = %loop.body
  call void @llvm.dbg.declare(metadata ptr %digit, metadata !2520, metadata !DIExpression()), !dbg !2521
  %25 = load i128, ptr %2, align 16, !dbg !2522
  %26 = load i32, ptr %base, align 4, !dbg !2523
  %zext30 = zext i32 %26 to i128, !dbg !2523
  %zero = icmp eq i128 %zext30, 0, !dbg !2524
  %27 = call i1 @llvm.expect.i1(i1 %zero, i1 false), !dbg !2524
  br i1 %27, label %panic31, label %checkok35, !dbg !2524

checkok35:                                        ; preds = %if.exit29
  %umod = urem i128 %25, %zext30, !dbg !2524
  %trunc36 = trunc i128 %umod to i8, !dbg !2524
  store i8 %trunc36, ptr %digit, align 1, !dbg !2524
  %28 = load i64, ptr %len, align 8, !dbg !2525
  %add = add i64 %28, 1, !dbg !2525
  store i64 %add, ptr %len, align 8, !dbg !2525
  %ge = icmp uge i64 %28, 256, !dbg !2525
  %29 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2525
  br i1 %29, label %panic37, label %checkok44, !dbg !2525

checkok44:                                        ; preds = %checkok35
  %ptradd45 = getelementptr inbounds i8, ptr %buf, i64 %28, !dbg !2525
  %30 = load i8, ptr %digit, align 1, !dbg !2526
  %zext46 = zext i8 %30 to i32, !dbg !2526
  %31 = load i8, ptr %digit, align 1, !dbg !2527
  %zext47 = zext i8 %31 to i32, !dbg !2527
  %gt = icmp ugt i32 10, %zext47, !dbg !2527
  br i1 %gt, label %cond.lhs, label %cond.rhs, !dbg !2527

cond.lhs:                                         ; preds = %checkok44
  br label %cond.phi, !dbg !2528

cond.rhs:                                         ; preds = %checkok44
  %32 = load i8, ptr %past_10, align 1, !dbg !2529
  br label %cond.phi, !dbg !2529

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val48 = phi i8 [ 48, %cond.lhs ], [ %32, %cond.rhs ], !dbg !2529
  %zext49 = zext i8 %val48 to i32, !dbg !2529
  %add50 = add i32 %zext46, %zext49, !dbg !2526
  %trunc51 = trunc i32 %add50 to i8, !dbg !2526
  store i8 %trunc51, ptr %ptradd45, align 1, !dbg !2526
  %33 = load i128, ptr %2, align 16, !dbg !2530
  %34 = load i32, ptr %base, align 4, !dbg !2531
  %zext52 = zext i32 %34 to i128, !dbg !2531
  %zero53 = icmp eq i128 %zext52, 0, !dbg !2530
  %35 = call i1 @llvm.expect.i1(i1 %zero53, i1 false), !dbg !2530
  br i1 %35, label %panic54, label %checkok58, !dbg !2530

checkok58:                                        ; preds = %cond.phi
  %udiv = udiv i128 %33, %zext52, !dbg !2530
  store i128 %udiv, ptr %2, align 16, !dbg !2530
  br label %loop.cond, !dbg !2530

loop.exit:                                        ; preds = %loop.cond
  br label %if.exit59, !dbg !2530

if.exit59:                                        ; preds = %loop.exit, %or.phi
  %36 = insertvalue %"char[]" undef, ptr %buf, 0, !dbg !2532
  %37 = insertvalue %"char[]" %36, i64 256, 1, !dbg !2532
  %38 = load ptr, ptr %self, align 8
  store %"char[]" %37, ptr %indirectarg60, align 8
  %39 = load i64, ptr %len, align 8
  %40 = load i8, ptr %negative, align 1
  %41 = load i32, ptr %base, align 4
  %42 = call i64 @std.io.Formatter.ntoa_format(ptr %retparam, ptr %38, ptr align 8 %indirectarg60, i64 %39, i8 zeroext %40, i32 %41), !dbg !2533
  %not_err = icmp eq i64 %42, 0, !dbg !2533
  %43 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2533
  br i1 %43, label %after_check, label %assign_optional, !dbg !2533

assign_optional:                                  ; preds = %if.exit59
  store i64 %42, ptr %reterr, align 8, !dbg !2533
  br label %err_retblock, !dbg !2533

after_check:                                      ; preds = %if.exit59
  %44 = load i64, ptr %retparam, align 8, !dbg !2533
  store i64 %44, ptr %0, align 8, !dbg !2533
  ret i64 0, !dbg !2533

err_retblock:                                     ; preds = %assign_optional
  %45 = load i64, ptr %reterr, align 8, !dbg !2533
  ret i64 %45, !dbg !2533

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.177, i64 4 }, ptr %indirectarg2, align 8
  %46 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %46(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 516), !dbg !2490
  unreachable, !dbg !2490

panic3:                                           ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.177, i64 4 }, ptr %indirectarg6, align 8
  %47 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %47(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 522), !dbg !2505
  unreachable, !dbg !2505

panic9:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.177, i64 4 }, ptr %indirectarg12, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 525), !dbg !2507
  unreachable, !dbg !2507

panic18:                                          ; preds = %if.then16
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.177, i64 4 }, ptr %indirectarg21, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 527), !dbg !2512
  unreachable, !dbg !2512

panic31:                                          ; preds = %if.exit29
  store %"char[]" { ptr @.panic_msg.174, i64 10 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.177, i64 4 }, ptr %indirectarg34, align 8
  %50 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %50(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 531), !dbg !2524
  unreachable, !dbg !2524

panic37:                                          ; preds = %checkok35
  store i64 256, ptr %taddr, align 8
  %51 = insertvalue %any undef, ptr %taddr, 0
  %52 = insertvalue %any %51, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %28, ptr %taddr38, align 8
  %53 = insertvalue %any undef, ptr %taddr38, 0
  %54 = insertvalue %any %53, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.177, i64 4 }, ptr %indirectarg41, align 8
  store %any %52, ptr %varargslots, align 16
  %ptradd42 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %54, ptr %ptradd42, align 16
  %55 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %55, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg43, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 532, ptr align 8 %indirectarg43), !dbg !2525
  unreachable, !dbg !2525

panic54:                                          ; preds = %cond.phi
  store %"char[]" { ptr @.panic_msg.175, i64 17 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.func.177, i64 4 }, ptr %indirectarg57, align 8
  %56 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %56(ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, i32 533), !dbg !2530
  unreachable, !dbg !2530
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.Formatter.ntoa_format(ptr %0, ptr %1, ptr align 8 %2, i64 %3, i8 zeroext %4, i32 %5) #0 !dbg !2534 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %len = alloca i64, align 8
  %negative = alloca i8, align 1
  %base = alloca i32, align 4
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr72 = alloca i64, align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg77 = alloca %"any[]", align 8
  %indirectarg83 = alloca %"char[]", align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg92 = alloca %"char[]", align 8
  %indirectarg93 = alloca %"char[]", align 8
  %indirectarg94 = alloca %"char[]", align 8
  %taddr111 = alloca i64, align 8
  %taddr112 = alloca i64, align 8
  %indirectarg113 = alloca %"char[]", align 8
  %indirectarg114 = alloca %"char[]", align 8
  %indirectarg115 = alloca %"char[]", align 8
  %varargslots116 = alloca [2 x %any], align 16
  %indirectarg119 = alloca %"any[]", align 8
  %indirectarg126 = alloca %"char[]", align 8
  %indirectarg127 = alloca %"char[]", align 8
  %indirectarg128 = alloca %"char[]", align 8
  %indirectarg139 = alloca %"char[]", align 8
  %indirectarg140 = alloca %"char[]", align 8
  %indirectarg141 = alloca %"char[]", align 8
  %indirectarg154 = alloca %"char[]", align 8
  %indirectarg155 = alloca %"char[]", align 8
  %indirectarg156 = alloca %"char[]", align 8
  %indirectarg166 = alloca %"char[]", align 8
  %indirectarg167 = alloca %"char[]", align 8
  %indirectarg168 = alloca %"char[]", align 8
  %switch = alloca i32, align 4
  %taddr194 = alloca i64, align 8
  %taddr195 = alloca i64, align 8
  %indirectarg196 = alloca %"char[]", align 8
  %indirectarg197 = alloca %"char[]", align 8
  %indirectarg198 = alloca %"char[]", align 8
  %varargslots199 = alloca [2 x %any], align 16
  %indirectarg202 = alloca %"any[]", align 8
  %indirectarg207 = alloca %"char[]", align 8
  %indirectarg208 = alloca %"char[]", align 8
  %indirectarg209 = alloca %"char[]", align 8
  %taddr219 = alloca i64, align 8
  %taddr220 = alloca i64, align 8
  %indirectarg221 = alloca %"char[]", align 8
  %indirectarg222 = alloca %"char[]", align 8
  %indirectarg223 = alloca %"char[]", align 8
  %varargslots224 = alloca [2 x %any], align 16
  %indirectarg227 = alloca %"any[]", align 8
  %indirectarg232 = alloca %"char[]", align 8
  %indirectarg233 = alloca %"char[]", align 8
  %indirectarg234 = alloca %"char[]", align 8
  %taddr245 = alloca i64, align 8
  %taddr246 = alloca i64, align 8
  %indirectarg247 = alloca %"char[]", align 8
  %indirectarg248 = alloca %"char[]", align 8
  %indirectarg249 = alloca %"char[]", align 8
  %varargslots250 = alloca [2 x %any], align 16
  %indirectarg253 = alloca %"any[]", align 8
  %indirectarg258 = alloca %"char[]", align 8
  %indirectarg259 = alloca %"char[]", align 8
  %indirectarg260 = alloca %"char[]", align 8
  %string = alloca %"char[]", align 8
  %indirectarg266 = alloca %"char[]", align 8
  %indirectarg267 = alloca %"char[]", align 8
  %indirectarg268 = alloca %"char[]", align 8
  %indirectarg269 = alloca %"any[]", align 8
  %taddr274 = alloca i64, align 8
  %taddr275 = alloca i64, align 8
  %indirectarg276 = alloca %"char[]", align 8
  %indirectarg277 = alloca %"char[]", align 8
  %indirectarg278 = alloca %"char[]", align 8
  %varargslots279 = alloca [2 x %any], align 16
  %indirectarg282 = alloca %"any[]", align 8
  %switch287 = alloca i8, align 1
  %taddr299 = alloca i64, align 8
  %taddr300 = alloca i64, align 8
  %indirectarg301 = alloca %"char[]", align 8
  %indirectarg302 = alloca %"char[]", align 8
  %indirectarg303 = alloca %"char[]", align 8
  %varargslots304 = alloca [2 x %any], align 16
  %indirectarg307 = alloca %"any[]", align 8
  %indirectarg312 = alloca %"char[]", align 8
  %indirectarg313 = alloca %"char[]", align 8
  %indirectarg314 = alloca %"char[]", align 8
  %taddr329 = alloca i64, align 8
  %taddr330 = alloca i64, align 8
  %indirectarg331 = alloca %"char[]", align 8
  %indirectarg332 = alloca %"char[]", align 8
  %indirectarg333 = alloca %"char[]", align 8
  %varargslots334 = alloca [2 x %any], align 16
  %indirectarg337 = alloca %"any[]", align 8
  %indirectarg343 = alloca %"char[]", align 8
  %indirectarg344 = alloca %"char[]", align 8
  %indirectarg345 = alloca %"char[]", align 8
  %taddr360 = alloca i64, align 8
  %taddr361 = alloca i64, align 8
  %indirectarg362 = alloca %"char[]", align 8
  %indirectarg363 = alloca %"char[]", align 8
  %indirectarg364 = alloca %"char[]", align 8
  %varargslots365 = alloca [2 x %any], align 16
  %indirectarg368 = alloca %"any[]", align 8
  %error_var = alloca i64, align 8
  %taddr376 = alloca i64, align 8
  %taddr377 = alloca i64, align 8
  %indirectarg378 = alloca %"char[]", align 8
  %indirectarg379 = alloca %"char[]", align 8
  %indirectarg380 = alloca %"char[]", align 8
  %varargslots381 = alloca [2 x %any], align 16
  %indirectarg384 = alloca %"any[]", align 8
  %taddr390 = alloca i64, align 8
  %taddr391 = alloca i64, align 8
  %indirectarg392 = alloca %"char[]", align 8
  %indirectarg393 = alloca %"char[]", align 8
  %indirectarg394 = alloca %"char[]", align 8
  %varargslots395 = alloca [2 x %any], align 16
  %indirectarg398 = alloca %"any[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg400 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %6 = icmp eq ptr %1, null, !dbg !2537
  %7 = call i1 @llvm.expect.i1(i1 %6, i1 false), !dbg !2537
  br i1 %7, label %panic, label %checkok, !dbg !2537

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2538, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.declare(metadata ptr %2, metadata !2540, metadata !DIExpression()), !dbg !2541
  store i64 %3, ptr %len, align 8
  call void @llvm.dbg.declare(metadata ptr %len, metadata !2542, metadata !DIExpression()), !dbg !2543
  store i8 %4, ptr %negative, align 1
  call void @llvm.dbg.declare(metadata ptr %negative, metadata !2544, metadata !DIExpression()), !dbg !2545
  store i32 %5, ptr %base, align 4
  call void @llvm.dbg.declare(metadata ptr %base, metadata !2546, metadata !DIExpression()), !dbg !2547
  %8 = load ptr, ptr %self, align 8, !dbg !2548
  %checknull = icmp eq ptr %8, null, !dbg !2548
  %9 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2548
  br i1 %9, label %panic3, label %checkok7, !dbg !2548

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %8, i64 16, !dbg !2548
  %10 = load i32, ptr %ptradd, align 8, !dbg !2548
  %lshrl = lshr i32 %10, 1, !dbg !2548
  %11 = and i32 1, %lshrl, !dbg !2548
  %trunc = trunc i32 %11 to i8, !dbg !2548
  %12 = trunc i8 %trunc to i1, !dbg !2548
  %not = xor i1 %12, true, !dbg !2548
  br i1 %not, label %if.then, label %if.exit123, !dbg !2548

if.then:                                          ; preds = %checkok7
  %13 = load ptr, ptr %self, align 8, !dbg !2549
  %checknull8 = icmp eq ptr %13, null, !dbg !2549
  %14 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !2549
  br i1 %14, label %panic9, label %checkok13, !dbg !2549

checkok13:                                        ; preds = %if.then
  %ptradd14 = getelementptr inbounds i8, ptr %13, i64 16, !dbg !2549
  %ptradd15 = getelementptr inbounds i8, ptr %ptradd14, i64 4, !dbg !2549
  %15 = load i32, ptr %ptradd15, align 4, !dbg !2549
  %intbool = icmp ne i32 %15, 0, !dbg !2549
  br i1 %intbool, label %and.rhs, label %and.phi, !dbg !2549

and.rhs:                                          ; preds = %checkok13
  %16 = load ptr, ptr %self, align 8, !dbg !2551
  %checknull16 = icmp eq ptr %16, null, !dbg !2551
  %17 = call i1 @llvm.expect.i1(i1 %checknull16, i1 false), !dbg !2551
  br i1 %17, label %panic17, label %checkok21, !dbg !2551

checkok21:                                        ; preds = %and.rhs
  %ptradd22 = getelementptr inbounds i8, ptr %16, i64 16, !dbg !2551
  %18 = load i32, ptr %ptradd22, align 8, !dbg !2551
  %19 = and i32 1, %18, !dbg !2551
  %trunc23 = trunc i32 %19 to i8, !dbg !2551
  %20 = trunc i8 %trunc23 to i1, !dbg !2551
  br label %and.phi, !dbg !2551

and.phi:                                          ; preds = %checkok21, %checkok13
  %val = phi i1 [ false, %checkok13 ], [ %20, %checkok21 ], !dbg !2551
  br i1 %val, label %and.rhs24, label %and.phi47, !dbg !2551

and.rhs24:                                        ; preds = %and.phi
  %21 = load i8, ptr %negative, align 1, !dbg !2552
  %22 = trunc i8 %21 to i1, !dbg !2552
  br i1 %22, label %or.phi, label %or.rhs, !dbg !2552

or.rhs:                                           ; preds = %and.rhs24
  %23 = load ptr, ptr %self, align 8, !dbg !2553
  %checknull25 = icmp eq ptr %23, null, !dbg !2553
  %24 = call i1 @llvm.expect.i1(i1 %checknull25, i1 false), !dbg !2553
  br i1 %24, label %panic26, label %checkok30, !dbg !2553

checkok30:                                        ; preds = %or.rhs
  %ptradd31 = getelementptr inbounds i8, ptr %23, i64 16, !dbg !2553
  %25 = load i32, ptr %ptradd31, align 8, !dbg !2553
  %lshrl32 = lshr i32 %25, 2, !dbg !2553
  %26 = and i32 1, %lshrl32, !dbg !2553
  %trunc33 = trunc i32 %26 to i8, !dbg !2553
  %27 = trunc i8 %trunc33 to i1, !dbg !2553
  br label %or.phi, !dbg !2553

or.phi:                                           ; preds = %checkok30, %and.rhs24
  %val34 = phi i1 [ true, %and.rhs24 ], [ %27, %checkok30 ], !dbg !2553
  br i1 %val34, label %or.phi45, label %or.rhs35, !dbg !2553

or.rhs35:                                         ; preds = %or.phi
  %28 = load ptr, ptr %self, align 8, !dbg !2554
  %checknull36 = icmp eq ptr %28, null, !dbg !2554
  %29 = call i1 @llvm.expect.i1(i1 %checknull36, i1 false), !dbg !2554
  br i1 %29, label %panic37, label %checkok41, !dbg !2554

checkok41:                                        ; preds = %or.rhs35
  %ptradd42 = getelementptr inbounds i8, ptr %28, i64 16, !dbg !2554
  %30 = load i32, ptr %ptradd42, align 8, !dbg !2554
  %lshrl43 = lshr i32 %30, 3, !dbg !2554
  %31 = and i32 1, %lshrl43, !dbg !2554
  %trunc44 = trunc i32 %31 to i8, !dbg !2554
  %32 = trunc i8 %trunc44 to i1, !dbg !2554
  br label %or.phi45, !dbg !2554

or.phi45:                                         ; preds = %checkok41, %or.phi
  %val46 = phi i1 [ true, %or.phi ], [ %32, %checkok41 ], !dbg !2554
  br label %and.phi47, !dbg !2554

and.phi47:                                        ; preds = %or.phi45, %and.phi
  %val48 = phi i1 [ false, %and.phi ], [ %val46, %or.phi45 ], !dbg !2554
  br i1 %val48, label %if.then49, label %if.exit, !dbg !2554

if.then49:                                        ; preds = %and.phi47
  %33 = load ptr, ptr %self, align 8, !dbg !2555
  %checknull50 = icmp eq ptr %33, null, !dbg !2555
  %34 = call i1 @llvm.expect.i1(i1 %checknull50, i1 false), !dbg !2555
  br i1 %34, label %panic51, label %checkok55, !dbg !2555

checkok55:                                        ; preds = %if.then49
  %ptradd56 = getelementptr inbounds i8, ptr %33, i64 16, !dbg !2555
  %ptradd57 = getelementptr inbounds i8, ptr %ptradd56, i64 4, !dbg !2555
  %35 = load i32, ptr %ptradd57, align 4, !dbg !2555
  %sub = sub i32 %35, 1, !dbg !2555
  store i32 %sub, ptr %ptradd57, align 4, !dbg !2555
  br label %if.exit, !dbg !2555

if.exit:                                          ; preds = %checkok55, %and.phi47
  br label %loop.cond, !dbg !2556

loop.cond:                                        ; preds = %checkok78, %if.exit
  %36 = load i64, ptr %len, align 8, !dbg !2557
  %37 = load ptr, ptr %self, align 8, !dbg !2559
  %checknull58 = icmp eq ptr %37, null, !dbg !2559
  %38 = call i1 @llvm.expect.i1(i1 %checknull58, i1 false), !dbg !2559
  br i1 %38, label %panic59, label %checkok63, !dbg !2559

checkok63:                                        ; preds = %loop.cond
  %ptradd64 = getelementptr inbounds i8, ptr %37, i64 16, !dbg !2559
  %ptradd65 = getelementptr inbounds i8, ptr %ptradd64, i64 8, !dbg !2559
  %39 = load i32, ptr %ptradd65, align 8, !dbg !2559
  %zext = zext i32 %39 to i64, !dbg !2559
  %lt = icmp ult i64 %36, %zext, !dbg !2557
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !2557

loop.body:                                        ; preds = %checkok63
  %40 = load i64, ptr %len, align 8, !dbg !2560
  %ptradd66 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2562
  %41 = load i64, ptr %ptradd66, align 8, !dbg !2562
  %ge = icmp uge i64 %40, %41, !dbg !2560
  br i1 %ge, label %if.then67, label %if.exit68, !dbg !2560

if.then67:                                        ; preds = %loop.body
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2563

if.exit68:                                        ; preds = %loop.body
  %ptradd69 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2564
  %42 = load i64, ptr %ptradd69, align 8, !dbg !2564
  %43 = load ptr, ptr %2, align 8, !dbg !2564
  %44 = load i64, ptr %len, align 8, !dbg !2565
  %add = add i64 %44, 1, !dbg !2565
  store i64 %add, ptr %len, align 8, !dbg !2565
  %ge70 = icmp uge i64 %44, %42, !dbg !2565
  %45 = call i1 @llvm.expect.i1(i1 %ge70, i1 false), !dbg !2565
  br i1 %45, label %panic71, label %checkok78, !dbg !2565

checkok78:                                        ; preds = %if.exit68
  %ptradd79 = getelementptr inbounds i8, ptr %43, i64 %44, !dbg !2565
  store i8 48, ptr %ptradd79, align 1, !dbg !2566
  br label %loop.cond, !dbg !2566

loop.exit:                                        ; preds = %checkok63
  br label %loop.cond80, !dbg !2567

loop.cond80:                                      ; preds = %checkok120, %loop.exit
  %46 = load ptr, ptr %self, align 8, !dbg !2568
  %checknull81 = icmp eq ptr %46, null, !dbg !2568
  %47 = call i1 @llvm.expect.i1(i1 %checknull81, i1 false), !dbg !2568
  br i1 %47, label %panic82, label %checkok86, !dbg !2568

checkok86:                                        ; preds = %loop.cond80
  %ptradd87 = getelementptr inbounds i8, ptr %46, i64 16, !dbg !2568
  %48 = load i32, ptr %ptradd87, align 8, !dbg !2568
  %49 = and i32 1, %48, !dbg !2568
  %trunc88 = trunc i32 %49 to i8, !dbg !2568
  %50 = trunc i8 %trunc88 to i1, !dbg !2568
  br i1 %50, label %and.rhs89, label %and.phi100, !dbg !2568

and.rhs89:                                        ; preds = %checkok86
  %51 = load i64, ptr %len, align 8, !dbg !2570
  %52 = load ptr, ptr %self, align 8, !dbg !2571
  %checknull90 = icmp eq ptr %52, null, !dbg !2571
  %53 = call i1 @llvm.expect.i1(i1 %checknull90, i1 false), !dbg !2571
  br i1 %53, label %panic91, label %checkok95, !dbg !2571

checkok95:                                        ; preds = %and.rhs89
  %ptradd96 = getelementptr inbounds i8, ptr %52, i64 16, !dbg !2571
  %ptradd97 = getelementptr inbounds i8, ptr %ptradd96, i64 4, !dbg !2571
  %54 = load i32, ptr %ptradd97, align 4, !dbg !2571
  %zext98 = zext i32 %54 to i64, !dbg !2571
  %lt99 = icmp ult i64 %51, %zext98, !dbg !2570
  br label %and.phi100, !dbg !2570

and.phi100:                                       ; preds = %checkok95, %checkok86
  %val101 = phi i1 [ false, %checkok86 ], [ %lt99, %checkok95 ], !dbg !2570
  br i1 %val101, label %loop.body102, label %loop.exit122, !dbg !2570

loop.body102:                                     ; preds = %and.phi100
  %55 = load i64, ptr %len, align 8, !dbg !2572
  %ptradd103 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2574
  %56 = load i64, ptr %ptradd103, align 8, !dbg !2574
  %ge104 = icmp uge i64 %55, %56, !dbg !2572
  br i1 %ge104, label %if.then105, label %if.exit106, !dbg !2572

if.then105:                                       ; preds = %loop.body102
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2575

if.exit106:                                       ; preds = %loop.body102
  %ptradd107 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2576
  %57 = load i64, ptr %ptradd107, align 8, !dbg !2576
  %58 = load ptr, ptr %2, align 8, !dbg !2576
  %59 = load i64, ptr %len, align 8, !dbg !2577
  %add108 = add i64 %59, 1, !dbg !2577
  store i64 %add108, ptr %len, align 8, !dbg !2577
  %ge109 = icmp uge i64 %59, %57, !dbg !2577
  %60 = call i1 @llvm.expect.i1(i1 %ge109, i1 false), !dbg !2577
  br i1 %60, label %panic110, label %checkok120, !dbg !2577

checkok120:                                       ; preds = %if.exit106
  %ptradd121 = getelementptr inbounds i8, ptr %58, i64 %59, !dbg !2577
  store i8 48, ptr %ptradd121, align 1, !dbg !2578
  br label %loop.cond80, !dbg !2578

loop.exit122:                                     ; preds = %and.phi100
  br label %if.exit123, !dbg !2578

if.exit123:                                       ; preds = %loop.exit122, %checkok7
  %61 = load ptr, ptr %self, align 8, !dbg !2579
  %checknull124 = icmp eq ptr %61, null, !dbg !2579
  %62 = call i1 @llvm.expect.i1(i1 %checknull124, i1 false), !dbg !2579
  br i1 %62, label %panic125, label %checkok129, !dbg !2579

checkok129:                                       ; preds = %if.exit123
  %ptradd130 = getelementptr inbounds i8, ptr %61, i64 16, !dbg !2579
  %63 = load i32, ptr %ptradd130, align 8, !dbg !2579
  %lshrl131 = lshr i32 %63, 4, !dbg !2579
  %64 = and i32 1, %lshrl131, !dbg !2579
  %trunc132 = trunc i32 %64 to i8, !dbg !2579
  %65 = trunc i8 %trunc132 to i1, !dbg !2579
  br i1 %65, label %and.rhs133, label %and.phi134, !dbg !2579

and.rhs133:                                       ; preds = %checkok129
  %66 = load i32, ptr %base, align 4, !dbg !2580
  %neq = icmp ne i32 10, %66, !dbg !2580
  br label %and.phi134, !dbg !2580

and.phi134:                                       ; preds = %and.rhs133, %checkok129
  %val135 = phi i1 [ false, %checkok129 ], [ %neq, %and.rhs133 ], !dbg !2580
  br i1 %val135, label %if.then136, label %if.exit286, !dbg !2580

if.then136:                                       ; preds = %and.phi134
  %67 = load ptr, ptr %self, align 8, !dbg !2581
  %checknull137 = icmp eq ptr %67, null, !dbg !2581
  %68 = call i1 @llvm.expect.i1(i1 %checknull137, i1 false), !dbg !2581
  br i1 %68, label %panic138, label %checkok142, !dbg !2581

checkok142:                                       ; preds = %if.then136
  %ptradd143 = getelementptr inbounds i8, ptr %67, i64 16, !dbg !2581
  %69 = load i32, ptr %ptradd143, align 8, !dbg !2581
  %lshrl144 = lshr i32 %69, 6, !dbg !2581
  %70 = and i32 1, %lshrl144, !dbg !2581
  %trunc145 = trunc i32 %70 to i8, !dbg !2581
  %71 = trunc i8 %trunc145 to i1, !dbg !2581
  %not146 = xor i1 %71, true, !dbg !2581
  br i1 %not146, label %and.rhs147, label %and.phi149, !dbg !2581

and.rhs147:                                       ; preds = %checkok142
  %72 = load i64, ptr %len, align 8, !dbg !2583
  %intbool148 = icmp ne i64 %72, 0, !dbg !2583
  br label %and.phi149, !dbg !2583

and.phi149:                                       ; preds = %and.rhs147, %checkok142
  %val150 = phi i1 [ false, %checkok142 ], [ %intbool148, %and.rhs147 ], !dbg !2583
  br i1 %val150, label %and.rhs151, label %and.phi161, !dbg !2583

and.rhs151:                                       ; preds = %and.phi149
  %73 = load i64, ptr %len, align 8, !dbg !2584
  %74 = load ptr, ptr %self, align 8, !dbg !2585
  %checknull152 = icmp eq ptr %74, null, !dbg !2585
  %75 = call i1 @llvm.expect.i1(i1 %checknull152, i1 false), !dbg !2585
  br i1 %75, label %panic153, label %checkok157, !dbg !2585

checkok157:                                       ; preds = %and.rhs151
  %ptradd158 = getelementptr inbounds i8, ptr %74, i64 16, !dbg !2585
  %ptradd159 = getelementptr inbounds i8, ptr %ptradd158, i64 8, !dbg !2585
  %76 = load i32, ptr %ptradd159, align 8, !dbg !2585
  %zext160 = zext i32 %76 to i64, !dbg !2585
  %eq = icmp eq i64 %73, %zext160, !dbg !2584
  br label %and.phi161, !dbg !2584

and.phi161:                                       ; preds = %checkok157, %and.phi149
  %val162 = phi i1 [ false, %and.phi149 ], [ %eq, %checkok157 ], !dbg !2584
  br i1 %val162, label %and.rhs163, label %and.phi174, !dbg !2584

and.rhs163:                                       ; preds = %and.phi161
  %77 = load i64, ptr %len, align 8, !dbg !2586
  %78 = load ptr, ptr %self, align 8, !dbg !2587
  %checknull164 = icmp eq ptr %78, null, !dbg !2587
  %79 = call i1 @llvm.expect.i1(i1 %checknull164, i1 false), !dbg !2587
  br i1 %79, label %panic165, label %checkok169, !dbg !2587

checkok169:                                       ; preds = %and.rhs163
  %ptradd170 = getelementptr inbounds i8, ptr %78, i64 16, !dbg !2587
  %ptradd171 = getelementptr inbounds i8, ptr %ptradd170, i64 4, !dbg !2587
  %80 = load i32, ptr %ptradd171, align 4, !dbg !2587
  %zext172 = zext i32 %80 to i64, !dbg !2587
  %eq173 = icmp eq i64 %77, %zext172, !dbg !2586
  br label %and.phi174, !dbg !2586

and.phi174:                                       ; preds = %checkok169, %and.phi161
  %val175 = phi i1 [ false, %and.phi161 ], [ %eq173, %checkok169 ], !dbg !2586
  br i1 %val175, label %if.then176, label %if.exit182, !dbg !2586

if.then176:                                       ; preds = %and.phi174
  %81 = load i64, ptr %len, align 8, !dbg !2588
  %sub177 = sub i64 %81, 1, !dbg !2588
  store i64 %sub177, ptr %len, align 8, !dbg !2588
  %82 = load i64, ptr %len, align 8, !dbg !2590
  %intbool178 = icmp ne i64 %82, 0, !dbg !2590
  br i1 %intbool178, label %if.then179, label %if.exit181, !dbg !2590

if.then179:                                       ; preds = %if.then176
  %83 = load i64, ptr %len, align 8, !dbg !2591
  %sub180 = sub i64 %83, 1, !dbg !2591
  store i64 %sub180, ptr %len, align 8, !dbg !2591
  br label %if.exit181, !dbg !2591

if.exit181:                                       ; preds = %if.then179, %if.then176
  br label %if.exit182, !dbg !2591

if.exit182:                                       ; preds = %if.exit181, %and.phi174
  %84 = load i32, ptr %base, align 4, !dbg !2592
  %neq183 = icmp ne i32 10, %84, !dbg !2592
  br i1 %neq183, label %if.then184, label %if.exit285, !dbg !2592

if.then184:                                       ; preds = %if.exit182
  %85 = load i64, ptr %len, align 8, !dbg !2593
  %add185 = add i64 %85, 1, !dbg !2593
  %ptradd186 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2595
  %86 = load i64, ptr %ptradd186, align 8, !dbg !2595
  %ge187 = icmp sge i64 %add185, %86, !dbg !2593
  %check = icmp sge i64 %86, 0, !dbg !2593
  %siui-ge = and i1 %check, %ge187, !dbg !2593
  br i1 %siui-ge, label %if.then188, label %if.exit189, !dbg !2593

if.then188:                                       ; preds = %if.then184
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2596

if.exit189:                                       ; preds = %if.then184
  %87 = load i32, ptr %base, align 4
  store i32 %87, ptr %switch, align 4
  br label %switch.entry

switch.entry:                                     ; preds = %if.exit189
  %88 = load i32, ptr %switch, align 4
  switch i32 %88, label %switch.default [
    i32 16, label %switch.case
    i32 8, label %switch.case214
    i32 2, label %switch.case240
  ]

switch.case:                                      ; preds = %switch.entry
  %ptradd190 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2597
  %89 = load i64, ptr %ptradd190, align 8, !dbg !2597
  %90 = load ptr, ptr %2, align 8, !dbg !2597
  %91 = load i64, ptr %len, align 8, !dbg !2600
  %add191 = add i64 %91, 1, !dbg !2600
  store i64 %add191, ptr %len, align 8, !dbg !2600
  %ge192 = icmp uge i64 %91, %89, !dbg !2600
  %92 = call i1 @llvm.expect.i1(i1 %ge192, i1 false), !dbg !2600
  br i1 %92, label %panic193, label %checkok203, !dbg !2600

checkok203:                                       ; preds = %switch.case
  %ptradd204 = getelementptr inbounds i8, ptr %90, i64 %91, !dbg !2600
  %93 = load ptr, ptr %self, align 8, !dbg !2601
  %checknull205 = icmp eq ptr %93, null, !dbg !2601
  %94 = call i1 @llvm.expect.i1(i1 %checknull205, i1 false), !dbg !2601
  br i1 %94, label %panic206, label %checkok210, !dbg !2601

checkok210:                                       ; preds = %checkok203
  %ptradd211 = getelementptr inbounds i8, ptr %93, i64 16, !dbg !2601
  %95 = load i32, ptr %ptradd211, align 8, !dbg !2601
  %lshrl212 = lshr i32 %95, 5, !dbg !2601
  %96 = and i32 1, %lshrl212, !dbg !2601
  %trunc213 = trunc i32 %96 to i8, !dbg !2601
  %97 = trunc i8 %trunc213 to i1, !dbg !2601
  %ternary = select i1 %97, i8 88, i8 120, !dbg !2602
  store i8 %ternary, ptr %ptradd204, align 1, !dbg !2602
  br label %switch.exit, !dbg !2602

switch.case214:                                   ; preds = %switch.entry
  %ptradd215 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2603
  %98 = load i64, ptr %ptradd215, align 8, !dbg !2603
  %99 = load ptr, ptr %2, align 8, !dbg !2603
  %100 = load i64, ptr %len, align 8, !dbg !2605
  %add216 = add i64 %100, 1, !dbg !2605
  store i64 %add216, ptr %len, align 8, !dbg !2605
  %ge217 = icmp uge i64 %100, %98, !dbg !2605
  %101 = call i1 @llvm.expect.i1(i1 %ge217, i1 false), !dbg !2605
  br i1 %101, label %panic218, label %checkok228, !dbg !2605

checkok228:                                       ; preds = %switch.case214
  %ptradd229 = getelementptr inbounds i8, ptr %99, i64 %100, !dbg !2605
  %102 = load ptr, ptr %self, align 8, !dbg !2606
  %checknull230 = icmp eq ptr %102, null, !dbg !2606
  %103 = call i1 @llvm.expect.i1(i1 %checknull230, i1 false), !dbg !2606
  br i1 %103, label %panic231, label %checkok235, !dbg !2606

checkok235:                                       ; preds = %checkok228
  %ptradd236 = getelementptr inbounds i8, ptr %102, i64 16, !dbg !2606
  %104 = load i32, ptr %ptradd236, align 8, !dbg !2606
  %lshrl237 = lshr i32 %104, 5, !dbg !2606
  %105 = and i32 1, %lshrl237, !dbg !2606
  %trunc238 = trunc i32 %105 to i8, !dbg !2606
  %106 = trunc i8 %trunc238 to i1, !dbg !2606
  %ternary239 = select i1 %106, i8 79, i8 111, !dbg !2607
  store i8 %ternary239, ptr %ptradd229, align 1, !dbg !2607
  br label %switch.exit, !dbg !2607

switch.case240:                                   ; preds = %switch.entry
  %ptradd241 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2608
  %107 = load i64, ptr %ptradd241, align 8, !dbg !2608
  %108 = load ptr, ptr %2, align 8, !dbg !2608
  %109 = load i64, ptr %len, align 8, !dbg !2610
  %add242 = add i64 %109, 1, !dbg !2610
  store i64 %add242, ptr %len, align 8, !dbg !2610
  %ge243 = icmp uge i64 %109, %107, !dbg !2610
  %110 = call i1 @llvm.expect.i1(i1 %ge243, i1 false), !dbg !2610
  br i1 %110, label %panic244, label %checkok254, !dbg !2610

checkok254:                                       ; preds = %switch.case240
  %ptradd255 = getelementptr inbounds i8, ptr %108, i64 %109, !dbg !2610
  %111 = load ptr, ptr %self, align 8, !dbg !2611
  %checknull256 = icmp eq ptr %111, null, !dbg !2611
  %112 = call i1 @llvm.expect.i1(i1 %checknull256, i1 false), !dbg !2611
  br i1 %112, label %panic257, label %checkok261, !dbg !2611

checkok261:                                       ; preds = %checkok254
  %ptradd262 = getelementptr inbounds i8, ptr %111, i64 16, !dbg !2611
  %113 = load i32, ptr %ptradd262, align 8, !dbg !2611
  %lshrl263 = lshr i32 %113, 5, !dbg !2611
  %114 = and i32 1, %lshrl263, !dbg !2611
  %trunc264 = trunc i32 %114 to i8, !dbg !2611
  %115 = trunc i8 %trunc264 to i1, !dbg !2611
  %ternary265 = select i1 %115, i8 66, i8 98, !dbg !2612
  store i8 %ternary265, ptr %ptradd255, align 1, !dbg !2612
  br label %switch.exit, !dbg !2612

switch.default:                                   ; preds = %switch.entry
  store %"char[]" { ptr @.str.179, i64 30 }, ptr %string, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg266, ptr align 8 %string, i32 16, i1 false)
  store %"char[]" { ptr @.str.180, i64 20 }, ptr %indirectarg267, align 8
  store %"char[]" { ptr @.str.181, i64 21 }, ptr %indirectarg268, align 8
  store %"any[]" zeroinitializer, ptr %indirectarg269, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg266, ptr align 8 %indirectarg267, ptr align 8 %indirectarg268, i32 578, ptr align 8 %indirectarg269), !dbg !2613
  unreachable, !dbg !2617

switch.exit:                                      ; preds = %checkok261, %checkok235, %checkok210
  %ptradd270 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2618
  %116 = load i64, ptr %ptradd270, align 8, !dbg !2618
  %117 = load ptr, ptr %2, align 8, !dbg !2618
  %118 = load i64, ptr %len, align 8, !dbg !2619
  %add271 = add i64 %118, 1, !dbg !2619
  store i64 %add271, ptr %len, align 8, !dbg !2619
  %ge272 = icmp uge i64 %118, %116, !dbg !2619
  %119 = call i1 @llvm.expect.i1(i1 %ge272, i1 false), !dbg !2619
  br i1 %119, label %panic273, label %checkok283, !dbg !2619

checkok283:                                       ; preds = %switch.exit
  %ptradd284 = getelementptr inbounds i8, ptr %117, i64 %118, !dbg !2619
  store i8 48, ptr %ptradd284, align 1, !dbg !2620
  br label %if.exit285, !dbg !2620

if.exit285:                                       ; preds = %checkok283, %if.exit182
  br label %if.exit286, !dbg !2620

if.exit286:                                       ; preds = %if.exit285, %and.phi134
  store i8 1, ptr %switch287, align 1
  br label %switch.entry288

switch.entry288:                                  ; preds = %if.exit286
  %120 = load i8, ptr %switch287, align 1
  %121 = trunc i8 %120 to i1
  %122 = load i8, ptr %negative, align 1, !dbg !2621
  %123 = trunc i8 %122 to i1, !dbg !2621
  %eq289 = icmp eq i1 %123, %121, !dbg !2621
  br i1 %eq289, label %switch.case290, label %next_if, !dbg !2621

switch.case290:                                   ; preds = %switch.entry288
  %124 = load i64, ptr %len, align 8, !dbg !2623
  %ptradd291 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2625
  %125 = load i64, ptr %ptradd291, align 8, !dbg !2625
  %ge292 = icmp uge i64 %124, %125, !dbg !2623
  br i1 %ge292, label %if.then293, label %if.exit294, !dbg !2623

if.then293:                                       ; preds = %switch.case290
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2626

if.exit294:                                       ; preds = %switch.case290
  %ptradd295 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2627
  %126 = load i64, ptr %ptradd295, align 8, !dbg !2627
  %127 = load ptr, ptr %2, align 8, !dbg !2627
  %128 = load i64, ptr %len, align 8, !dbg !2628
  %add296 = add i64 %128, 1, !dbg !2628
  store i64 %add296, ptr %len, align 8, !dbg !2628
  %ge297 = icmp uge i64 %128, %126, !dbg !2628
  %129 = call i1 @llvm.expect.i1(i1 %ge297, i1 false), !dbg !2628
  br i1 %129, label %panic298, label %checkok308, !dbg !2628

checkok308:                                       ; preds = %if.exit294
  %ptradd309 = getelementptr inbounds i8, ptr %127, i64 %128, !dbg !2628
  store i8 45, ptr %ptradd309, align 1, !dbg !2629
  br label %switch.exit372, !dbg !2629

next_if:                                          ; preds = %switch.entry288
  %130 = load ptr, ptr %self, align 8, !dbg !2630
  %checknull310 = icmp eq ptr %130, null, !dbg !2630
  %131 = call i1 @llvm.expect.i1(i1 %checknull310, i1 false), !dbg !2630
  br i1 %131, label %panic311, label %checkok315, !dbg !2630

checkok315:                                       ; preds = %next_if
  %ptradd316 = getelementptr inbounds i8, ptr %130, i64 16, !dbg !2630
  %132 = load i32, ptr %ptradd316, align 8, !dbg !2630
  %lshrl317 = lshr i32 %132, 2, !dbg !2630
  %133 = and i32 1, %lshrl317, !dbg !2630
  %trunc318 = trunc i32 %133 to i8, !dbg !2630
  %134 = trunc i8 %trunc318 to i1, !dbg !2630
  %eq319 = icmp eq i1 %134, %121, !dbg !2630
  br i1 %eq319, label %switch.case320, label %next_if340, !dbg !2630

switch.case320:                                   ; preds = %checkok315
  %135 = load i64, ptr %len, align 8, !dbg !2631
  %ptradd321 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2633
  %136 = load i64, ptr %ptradd321, align 8, !dbg !2633
  %ge322 = icmp uge i64 %135, %136, !dbg !2631
  br i1 %ge322, label %if.then323, label %if.exit324, !dbg !2631

if.then323:                                       ; preds = %switch.case320
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2634

if.exit324:                                       ; preds = %switch.case320
  %ptradd325 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2635
  %137 = load i64, ptr %ptradd325, align 8, !dbg !2635
  %138 = load ptr, ptr %2, align 8, !dbg !2635
  %139 = load i64, ptr %len, align 8, !dbg !2636
  %add326 = add i64 %139, 1, !dbg !2636
  store i64 %add326, ptr %len, align 8, !dbg !2636
  %ge327 = icmp uge i64 %139, %137, !dbg !2636
  %140 = call i1 @llvm.expect.i1(i1 %ge327, i1 false), !dbg !2636
  br i1 %140, label %panic328, label %checkok338, !dbg !2636

checkok338:                                       ; preds = %if.exit324
  %ptradd339 = getelementptr inbounds i8, ptr %138, i64 %139, !dbg !2636
  store i8 43, ptr %ptradd339, align 1, !dbg !2637
  br label %switch.exit372, !dbg !2637

next_if340:                                       ; preds = %checkok315
  %141 = load ptr, ptr %self, align 8, !dbg !2638
  %checknull341 = icmp eq ptr %141, null, !dbg !2638
  %142 = call i1 @llvm.expect.i1(i1 %checknull341, i1 false), !dbg !2638
  br i1 %142, label %panic342, label %checkok346, !dbg !2638

checkok346:                                       ; preds = %next_if340
  %ptradd347 = getelementptr inbounds i8, ptr %141, i64 16, !dbg !2638
  %143 = load i32, ptr %ptradd347, align 8, !dbg !2638
  %lshrl348 = lshr i32 %143, 3, !dbg !2638
  %144 = and i32 1, %lshrl348, !dbg !2638
  %trunc349 = trunc i32 %144 to i8, !dbg !2638
  %145 = trunc i8 %trunc349 to i1, !dbg !2638
  %eq350 = icmp eq i1 %145, %121, !dbg !2638
  br i1 %eq350, label %switch.case351, label %next_if371, !dbg !2638

switch.case351:                                   ; preds = %checkok346
  %146 = load i64, ptr %len, align 8, !dbg !2639
  %ptradd352 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2641
  %147 = load i64, ptr %ptradd352, align 8, !dbg !2641
  %ge353 = icmp uge i64 %146, %147, !dbg !2639
  br i1 %ge353, label %if.then354, label %if.exit355, !dbg !2639

if.then354:                                       ; preds = %switch.case351
  ret i64 ptrtoint (ptr @"std.io.PrintFault$INTERNAL_BUFFER_EXCEEDED" to i64), !dbg !2642

if.exit355:                                       ; preds = %switch.case351
  %ptradd356 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2643
  %148 = load i64, ptr %ptradd356, align 8, !dbg !2643
  %149 = load ptr, ptr %2, align 8, !dbg !2643
  %150 = load i64, ptr %len, align 8, !dbg !2644
  %add357 = add i64 %150, 1, !dbg !2644
  store i64 %add357, ptr %len, align 8, !dbg !2644
  %ge358 = icmp uge i64 %150, %148, !dbg !2644
  %151 = call i1 @llvm.expect.i1(i1 %ge358, i1 false), !dbg !2644
  br i1 %151, label %panic359, label %checkok369, !dbg !2644

checkok369:                                       ; preds = %if.exit355
  %ptradd370 = getelementptr inbounds i8, ptr %149, i64 %150, !dbg !2644
  store i8 32, ptr %ptradd370, align 1, !dbg !2645
  br label %switch.exit372, !dbg !2645

next_if371:                                       ; preds = %checkok346
  br label %switch.exit372, !dbg !2645

switch.exit372:                                   ; preds = %next_if371, %checkok369, %checkok338, %checkok308
  %152 = load i64, ptr %len, align 8, !dbg !2646
  %intbool373 = icmp ne i64 %152, 0, !dbg !2646
  br i1 %intbool373, label %if.then374, label %if.exit401, !dbg !2646

if.then374:                                       ; preds = %switch.exit372
  %153 = load %"char[]", ptr %2, align 8, !dbg !2647
  %154 = extractvalue %"char[]" %153, 0, !dbg !2647
  %155 = extractvalue %"char[]" %153, 1, !dbg !2648
  %gt = icmp ugt i64 0, %155, !dbg !2648
  %156 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !2648
  br i1 %156, label %panic375, label %checkok385, !dbg !2648

checkok385:                                       ; preds = %if.then374
  %157 = load i64, ptr %len, align 8, !dbg !2649
  %add386 = add i64 0, %157, !dbg !2649
  %lt387 = icmp ult i64 %155, %add386, !dbg !2649
  %sub388 = sub i64 %add386, 1, !dbg !2649
  %158 = call i1 @llvm.expect.i1(i1 %lt387, i1 false), !dbg !2649
  br i1 %158, label %panic389, label %checkok399, !dbg !2649

checkok399:                                       ; preds = %checkok385
  %size = sub i64 %add386, 0, !dbg !2647
  %159 = insertvalue %"char[]" undef, ptr %154, 0, !dbg !2647
  %160 = insertvalue %"char[]" %159, i64 %size, 1, !dbg !2647
  %161 = load ptr, ptr %self, align 8
  store %"char[]" %160, ptr %indirectarg400, align 8
  %162 = call i64 @std.io.Formatter.out_reverse(ptr %retparam, ptr %161, ptr align 8 %indirectarg400), !dbg !2650
  %not_err = icmp eq i64 %162, 0, !dbg !2650
  %163 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2650
  br i1 %163, label %after_check, label %assign_optional, !dbg !2650

assign_optional:                                  ; preds = %checkok399
  store i64 %162, ptr %error_var, align 8, !dbg !2650
  br label %guard_block, !dbg !2650

after_check:                                      ; preds = %checkok399
  br label %noerr_block, !dbg !2650

guard_block:                                      ; preds = %assign_optional
  %164 = load i64, ptr %error_var, align 8, !dbg !2650
  ret i64 %164, !dbg !2650

noerr_block:                                      ; preds = %after_check
  br label %if.exit401, !dbg !2650

if.exit401:                                       ; preds = %noerr_block, %switch.exit372
  %165 = load i64, ptr %len, align 8, !dbg !2651
  store i64 %165, ptr %0, align 8, !dbg !2651
  ret i64 0, !dbg !2651

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg2, align 8
  %166 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %166(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 540), !dbg !2539
  unreachable, !dbg !2539

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg6, align 8
  %167 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %167(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 543), !dbg !2548
  unreachable, !dbg !2548

panic9:                                           ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg12, align 8
  %168 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %168(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 545), !dbg !2549
  unreachable, !dbg !2549

panic17:                                          ; preds = %and.rhs
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg20, align 8
  %169 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %169(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 545), !dbg !2551
  unreachable, !dbg !2551

panic26:                                          ; preds = %or.rhs
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg29, align 8
  %170 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %170(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 545), !dbg !2553
  unreachable, !dbg !2553

panic37:                                          ; preds = %or.rhs35
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg40, align 8
  %171 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %171(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 545), !dbg !2554
  unreachable, !dbg !2554

panic51:                                          ; preds = %if.then49
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg54, align 8
  %172 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %172(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 545), !dbg !2555
  unreachable, !dbg !2555

panic59:                                          ; preds = %loop.cond
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg62, align 8
  %173 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %173(ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, i32 546), !dbg !2559
  unreachable, !dbg !2559

panic71:                                          ; preds = %if.exit68
  store i64 %42, ptr %taddr, align 8
  %174 = insertvalue %any undef, ptr %taddr, 0
  %175 = insertvalue %any %174, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %44, ptr %taddr72, align 8
  %176 = insertvalue %any undef, ptr %taddr72, 0
  %177 = insertvalue %any %176, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg75, align 8
  store %any %175, ptr %varargslots, align 16
  %ptradd76 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %177, ptr %ptradd76, align 16
  %178 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %178, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg77, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, i32 549, ptr align 8 %indirectarg77), !dbg !2565
  unreachable, !dbg !2565

panic82:                                          ; preds = %loop.cond80
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg83, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg85, align 8
  %179 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %179(ptr align 8 %indirectarg83, ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, i32 551), !dbg !2568
  unreachable, !dbg !2568

panic91:                                          ; preds = %and.rhs89
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg92, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg93, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg94, align 8
  %180 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %180(ptr align 8 %indirectarg92, ptr align 8 %indirectarg93, ptr align 8 %indirectarg94, i32 551), !dbg !2571
  unreachable, !dbg !2571

panic110:                                         ; preds = %if.exit106
  store i64 %57, ptr %taddr111, align 8
  %181 = insertvalue %any undef, ptr %taddr111, 0
  %182 = insertvalue %any %181, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %59, ptr %taddr112, align 8
  %183 = insertvalue %any undef, ptr %taddr112, 0
  %184 = insertvalue %any %183, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg113, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg114, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg115, align 8
  store %any %182, ptr %varargslots116, align 16
  %ptradd117 = getelementptr inbounds i8, ptr %varargslots116, i64 16
  store %any %184, ptr %ptradd117, align 16
  %185 = insertvalue %"any[]" undef, ptr %varargslots116, 0
  %"$$temp118" = insertvalue %"any[]" %185, i64 2, 1
  store %"any[]" %"$$temp118", ptr %indirectarg119, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg113, ptr align 8 %indirectarg114, ptr align 8 %indirectarg115, i32 554, ptr align 8 %indirectarg119), !dbg !2577
  unreachable, !dbg !2577

panic125:                                         ; preds = %if.exit123
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg126, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg127, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg128, align 8
  %186 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %186(ptr align 8 %indirectarg126, ptr align 8 %indirectarg127, ptr align 8 %indirectarg128, i32 559), !dbg !2579
  unreachable, !dbg !2579

panic138:                                         ; preds = %if.then136
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg139, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg140, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg141, align 8
  %187 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %187(ptr align 8 %indirectarg139, ptr align 8 %indirectarg140, ptr align 8 %indirectarg141, i32 561), !dbg !2581
  unreachable, !dbg !2581

panic153:                                         ; preds = %and.rhs151
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg154, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg155, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg156, align 8
  %188 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %188(ptr align 8 %indirectarg154, ptr align 8 %indirectarg155, ptr align 8 %indirectarg156, i32 561), !dbg !2585
  unreachable, !dbg !2585

panic165:                                         ; preds = %and.rhs163
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg166, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg167, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg168, align 8
  %189 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %189(ptr align 8 %indirectarg166, ptr align 8 %indirectarg167, ptr align 8 %indirectarg168, i32 561), !dbg !2587
  unreachable, !dbg !2587

panic193:                                         ; preds = %switch.case
  store i64 %89, ptr %taddr194, align 8
  %190 = insertvalue %any undef, ptr %taddr194, 0
  %191 = insertvalue %any %190, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %91, ptr %taddr195, align 8
  %192 = insertvalue %any undef, ptr %taddr195, 0
  %193 = insertvalue %any %192, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg196, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg197, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg198, align 8
  store %any %191, ptr %varargslots199, align 16
  %ptradd200 = getelementptr inbounds i8, ptr %varargslots199, i64 16
  store %any %193, ptr %ptradd200, align 16
  %194 = insertvalue %"any[]" undef, ptr %varargslots199, 0
  %"$$temp201" = insertvalue %"any[]" %194, i64 2, 1
  store %"any[]" %"$$temp201", ptr %indirectarg202, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg196, ptr align 8 %indirectarg197, ptr align 8 %indirectarg198, i32 572, ptr align 8 %indirectarg202), !dbg !2600
  unreachable, !dbg !2600

panic206:                                         ; preds = %checkok203
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg207, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg208, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg209, align 8
  %195 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %195(ptr align 8 %indirectarg207, ptr align 8 %indirectarg208, ptr align 8 %indirectarg209, i32 572), !dbg !2601
  unreachable, !dbg !2601

panic218:                                         ; preds = %switch.case214
  store i64 %98, ptr %taddr219, align 8
  %196 = insertvalue %any undef, ptr %taddr219, 0
  %197 = insertvalue %any %196, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %100, ptr %taddr220, align 8
  %198 = insertvalue %any undef, ptr %taddr220, 0
  %199 = insertvalue %any %198, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg221, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg222, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg223, align 8
  store %any %197, ptr %varargslots224, align 16
  %ptradd225 = getelementptr inbounds i8, ptr %varargslots224, i64 16
  store %any %199, ptr %ptradd225, align 16
  %200 = insertvalue %"any[]" undef, ptr %varargslots224, 0
  %"$$temp226" = insertvalue %"any[]" %200, i64 2, 1
  store %"any[]" %"$$temp226", ptr %indirectarg227, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg221, ptr align 8 %indirectarg222, ptr align 8 %indirectarg223, i32 574, ptr align 8 %indirectarg227), !dbg !2605
  unreachable, !dbg !2605

panic231:                                         ; preds = %checkok228
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg232, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg233, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg234, align 8
  %201 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %201(ptr align 8 %indirectarg232, ptr align 8 %indirectarg233, ptr align 8 %indirectarg234, i32 574), !dbg !2606
  unreachable, !dbg !2606

panic244:                                         ; preds = %switch.case240
  store i64 %107, ptr %taddr245, align 8
  %202 = insertvalue %any undef, ptr %taddr245, 0
  %203 = insertvalue %any %202, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %109, ptr %taddr246, align 8
  %204 = insertvalue %any undef, ptr %taddr246, 0
  %205 = insertvalue %any %204, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg247, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg248, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg249, align 8
  store %any %203, ptr %varargslots250, align 16
  %ptradd251 = getelementptr inbounds i8, ptr %varargslots250, i64 16
  store %any %205, ptr %ptradd251, align 16
  %206 = insertvalue %"any[]" undef, ptr %varargslots250, 0
  %"$$temp252" = insertvalue %"any[]" %206, i64 2, 1
  store %"any[]" %"$$temp252", ptr %indirectarg253, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg247, ptr align 8 %indirectarg248, ptr align 8 %indirectarg249, i32 576, ptr align 8 %indirectarg253), !dbg !2610
  unreachable, !dbg !2610

panic257:                                         ; preds = %checkok254
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg258, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg259, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg260, align 8
  %207 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %207(ptr align 8 %indirectarg258, ptr align 8 %indirectarg259, ptr align 8 %indirectarg260, i32 576), !dbg !2611
  unreachable, !dbg !2611

panic273:                                         ; preds = %switch.exit
  store i64 %116, ptr %taddr274, align 8
  %208 = insertvalue %any undef, ptr %taddr274, 0
  %209 = insertvalue %any %208, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %118, ptr %taddr275, align 8
  %210 = insertvalue %any undef, ptr %taddr275, 0
  %211 = insertvalue %any %210, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg276, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg277, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg278, align 8
  store %any %209, ptr %varargslots279, align 16
  %ptradd280 = getelementptr inbounds i8, ptr %varargslots279, i64 16
  store %any %211, ptr %ptradd280, align 16
  %212 = insertvalue %"any[]" undef, ptr %varargslots279, 0
  %"$$temp281" = insertvalue %"any[]" %212, i64 2, 1
  store %"any[]" %"$$temp281", ptr %indirectarg282, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg276, ptr align 8 %indirectarg277, ptr align 8 %indirectarg278, i32 580, ptr align 8 %indirectarg282), !dbg !2619
  unreachable, !dbg !2619

panic298:                                         ; preds = %if.exit294
  store i64 %126, ptr %taddr299, align 8
  %213 = insertvalue %any undef, ptr %taddr299, 0
  %214 = insertvalue %any %213, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %128, ptr %taddr300, align 8
  %215 = insertvalue %any undef, ptr %taddr300, 0
  %216 = insertvalue %any %215, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg301, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg302, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg303, align 8
  store %any %214, ptr %varargslots304, align 16
  %ptradd305 = getelementptr inbounds i8, ptr %varargslots304, i64 16
  store %any %216, ptr %ptradd305, align 16
  %217 = insertvalue %"any[]" undef, ptr %varargslots304, 0
  %"$$temp306" = insertvalue %"any[]" %217, i64 2, 1
  store %"any[]" %"$$temp306", ptr %indirectarg307, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg301, ptr align 8 %indirectarg302, ptr align 8 %indirectarg303, i32 588, ptr align 8 %indirectarg307), !dbg !2628
  unreachable, !dbg !2628

panic311:                                         ; preds = %next_if
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg312, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg313, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg314, align 8
  %218 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %218(ptr align 8 %indirectarg312, ptr align 8 %indirectarg313, ptr align 8 %indirectarg314, i32 589), !dbg !2630
  unreachable, !dbg !2630

panic328:                                         ; preds = %if.exit324
  store i64 %137, ptr %taddr329, align 8
  %219 = insertvalue %any undef, ptr %taddr329, 0
  %220 = insertvalue %any %219, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %139, ptr %taddr330, align 8
  %221 = insertvalue %any undef, ptr %taddr330, 0
  %222 = insertvalue %any %221, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg331, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg332, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg333, align 8
  store %any %220, ptr %varargslots334, align 16
  %ptradd335 = getelementptr inbounds i8, ptr %varargslots334, i64 16
  store %any %222, ptr %ptradd335, align 16
  %223 = insertvalue %"any[]" undef, ptr %varargslots334, 0
  %"$$temp336" = insertvalue %"any[]" %223, i64 2, 1
  store %"any[]" %"$$temp336", ptr %indirectarg337, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg331, ptr align 8 %indirectarg332, ptr align 8 %indirectarg333, i32 591, ptr align 8 %indirectarg337), !dbg !2636
  unreachable, !dbg !2636

panic342:                                         ; preds = %next_if340
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg343, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg344, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg345, align 8
  %224 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %224(ptr align 8 %indirectarg343, ptr align 8 %indirectarg344, ptr align 8 %indirectarg345, i32 592), !dbg !2638
  unreachable, !dbg !2638

panic359:                                         ; preds = %if.exit355
  store i64 %148, ptr %taddr360, align 8
  %225 = insertvalue %any undef, ptr %taddr360, 0
  %226 = insertvalue %any %225, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %150, ptr %taddr361, align 8
  %227 = insertvalue %any undef, ptr %taddr361, 0
  %228 = insertvalue %any %227, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg362, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg363, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg364, align 8
  store %any %226, ptr %varargslots365, align 16
  %ptradd366 = getelementptr inbounds i8, ptr %varargslots365, i64 16
  store %any %228, ptr %ptradd366, align 16
  %229 = insertvalue %"any[]" undef, ptr %varargslots365, 0
  %"$$temp367" = insertvalue %"any[]" %229, i64 2, 1
  store %"any[]" %"$$temp367", ptr %indirectarg368, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg362, ptr align 8 %indirectarg363, ptr align 8 %indirectarg364, i32 594, ptr align 8 %indirectarg368), !dbg !2644
  unreachable, !dbg !2644

panic375:                                         ; preds = %if.then374
  store i64 %155, ptr %taddr376, align 8
  %230 = insertvalue %any undef, ptr %taddr376, 0
  %231 = insertvalue %any %230, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr377, align 8
  %232 = insertvalue %any undef, ptr %taddr377, 0
  %233 = insertvalue %any %232, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg378, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg379, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg380, align 8
  store %any %231, ptr %varargslots381, align 16
  %ptradd382 = getelementptr inbounds i8, ptr %varargslots381, i64 16
  store %any %233, ptr %ptradd382, align 16
  %234 = insertvalue %"any[]" undef, ptr %varargslots381, 0
  %"$$temp383" = insertvalue %"any[]" %234, i64 2, 1
  store %"any[]" %"$$temp383", ptr %indirectarg384, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg378, ptr align 8 %indirectarg379, ptr align 8 %indirectarg380, i32 596, ptr align 8 %indirectarg384), !dbg !2647
  unreachable, !dbg !2647

panic389:                                         ; preds = %checkok385
  store i64 %sub388, ptr %taddr390, align 8
  %235 = insertvalue %any undef, ptr %taddr390, 0
  %236 = insertvalue %any %235, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %155, ptr %taddr391, align 8
  %237 = insertvalue %any undef, ptr %taddr391, 0
  %238 = insertvalue %any %237, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg392, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg393, align 8
  store %"char[]" { ptr @.func.178, i64 11 }, ptr %indirectarg394, align 8
  store %any %236, ptr %varargslots395, align 16
  %ptradd396 = getelementptr inbounds i8, ptr %varargslots395, i64 16
  store %any %238, ptr %ptradd396, align 16
  %239 = insertvalue %"any[]" undef, ptr %varargslots395, 0
  %"$$temp397" = insertvalue %"any[]" %239, i64 2, 1
  store %"any[]" %"$$temp397", ptr %indirectarg398, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg392, ptr align 8 %indirectarg393, ptr align 8 %indirectarg394, i32 596, ptr align 8 %indirectarg398), !dbg !2647
  unreachable, !dbg !2647
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.Formatter.ntoa_any(ptr %0, ptr %1, ptr align 8 %2, i32 %3) #0 !dbg !2652 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %base = alloca i32, align 4
  %is_neg = alloca i8, align 1
  %reterr = alloca i64, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i128, align 16
  %indirectarg3 = alloca %any, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg7 = alloca %"any[]", align 8
  %retparam8 = alloca i64, align 8
  %indirectarg9 = alloca i128, align 16
  %4 = icmp eq ptr %1, null, !dbg !2655
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !2655
  br i1 %5, label %panic, label %checkok, !dbg !2655

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2656, metadata !DIExpression()), !dbg !2657
  call void @llvm.dbg.declare(metadata ptr %2, metadata !2658, metadata !DIExpression()), !dbg !2659
  store i32 %3, ptr %base, align 4
  call void @llvm.dbg.declare(metadata ptr %base, metadata !2660, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.declare(metadata ptr %is_neg, metadata !2662, metadata !DIExpression()), !dbg !2663
  store i8 0, ptr %is_neg, align 1, !dbg !2663
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg3, ptr align 8 %2, i32 16, i1 false)
  %6 = call i64 @std.io.int_from_any(ptr %retparam, ptr align 8 %indirectarg3, ptr %is_neg), !dbg !2664
  %not_err = icmp eq i64 %6, 0, !dbg !2664
  %7 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2664
  br i1 %7, label %after_check, label %assign_optional, !dbg !2664

assign_optional:                                  ; preds = %checkok
  store i64 %6, ptr %error_var, align 8, !dbg !2664
  br label %panic_block, !dbg !2664

after_check:                                      ; preds = %checkok
  br label %noerr_block, !dbg !2664

panic_block:                                      ; preds = %assign_optional
  %8 = insertvalue %any undef, ptr %error_var, 0, !dbg !2664
  %9 = insertvalue %any %8, i64 ptrtoint (ptr @"$ct.anyfault" to i64), 1, !dbg !2664
  store %"char[]" { ptr @.panic_msg.92, i64 36 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.183, i64 8 }, ptr %indirectarg6, align 8
  store %any %9, ptr %varargslots, align 16
  %10 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %10, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg7, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 604, ptr align 8 %indirectarg7), !dbg !2664
  unreachable, !dbg !2664

noerr_block:                                      ; preds = %after_check
  %11 = load ptr, ptr %self, align 8
  %12 = load i128, ptr %retparam, align 16
  store i128 %12, ptr %indirectarg9, align 16
  %13 = load i8, ptr %is_neg, align 1
  %14 = load i32, ptr %base, align 4
  %15 = call i64 @std.io.Formatter.ntoa(ptr %retparam8, ptr %11, ptr align 16 %indirectarg9, i8 zeroext %13, i32 %14) #5, !dbg !2665
  %not_err10 = icmp eq i64 %15, 0, !dbg !2665
  %16 = call i1 @llvm.expect.i1(i1 %not_err10, i1 true), !dbg !2665
  br i1 %16, label %after_check12, label %assign_optional11, !dbg !2665

assign_optional11:                                ; preds = %noerr_block
  store i64 %15, ptr %reterr, align 8, !dbg !2665
  br label %err_retblock, !dbg !2665

after_check12:                                    ; preds = %noerr_block
  %17 = load i64, ptr %retparam8, align 8, !dbg !2665
  store i64 %17, ptr %0, align 8, !dbg !2665
  ret i64 0, !dbg !2665

err_retblock:                                     ; preds = %assign_optional11
  %18 = load i64, ptr %reterr, align 8, !dbg !2665
  ret i64 %18, !dbg !2665

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.183, i64 8 }, ptr %indirectarg2, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 601), !dbg !2657
  unreachable, !dbg !2657
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.Formatter.out_char(ptr %0, ptr %1, ptr align 8 %2) #0 !dbg !2666 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %len = alloca i64, align 8
  %l = alloca i32, align 4
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %c = alloca i32, align 4
  %v = alloca %any, align 8
  %blockret = alloca i32, align 4
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %any_type = alloca i64, align 8
  %kind = alloca i8, align 1
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %is_mixed_signed = alloca i8, align 1
  %max = alloca i32, align 4
  %min = alloca i32, align 4
  %switch = alloca i64, align 8
  %c33 = alloca i8, align 1
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %s = alloca i16, align 2
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %i = alloca i32, align 4
  %indirectarg83 = alloca %"char[]", align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %l112 = alloca i64, align 8
  %indirectarg115 = alloca %"char[]", align 8
  %indirectarg116 = alloca %"char[]", align 8
  %indirectarg117 = alloca %"char[]", align 8
  %i146 = alloca i128, align 16
  %indirectarg149 = alloca %"char[]", align 8
  %indirectarg150 = alloca %"char[]", align 8
  %indirectarg151 = alloca %"char[]", align 8
  %c181 = alloca i8, align 1
  %indirectarg184 = alloca %"char[]", align 8
  %indirectarg185 = alloca %"char[]", align 8
  %indirectarg186 = alloca %"char[]", align 8
  %s201 = alloca i16, align 2
  %indirectarg204 = alloca %"char[]", align 8
  %indirectarg205 = alloca %"char[]", align 8
  %indirectarg206 = alloca %"char[]", align 8
  %i226 = alloca i32, align 4
  %indirectarg229 = alloca %"char[]", align 8
  %indirectarg230 = alloca %"char[]", align 8
  %indirectarg231 = alloca %"char[]", align 8
  %l248 = alloca i64, align 8
  %indirectarg251 = alloca %"char[]", align 8
  %indirectarg252 = alloca %"char[]", align 8
  %indirectarg253 = alloca %"char[]", align 8
  %i273 = alloca i128, align 16
  %indirectarg276 = alloca %"char[]", align 8
  %indirectarg277 = alloca %"char[]", align 8
  %indirectarg278 = alloca %"char[]", align 8
  %string = alloca %"char[]", align 8
  %indirectarg291 = alloca %"char[]", align 8
  %indirectarg292 = alloca %"char[]", align 8
  %indirectarg293 = alloca %"char[]", align 8
  %indirectarg294 = alloca %"any[]", align 8
  %switch296 = alloca i8, align 1
  %error_var301 = alloca i64, align 8
  %retparam303 = alloca i64, align 8
  %error_var313 = alloca i64, align 8
  %retparam315 = alloca i64, align 8
  %error_var321 = alloca i64, align 8
  %retparam324 = alloca i64, align 8
  %error_var334 = alloca i64, align 8
  %retparam338 = alloca i64, align 8
  %error_var344 = alloca i64, align 8
  %retparam349 = alloca i64, align 8
  %error_var355 = alloca i64, align 8
  %retparam359 = alloca i64, align 8
  %error_var367 = alloca i64, align 8
  %retparam371 = alloca i64, align 8
  %error_var377 = alloca i64, align 8
  %retparam382 = alloca i64, align 8
  %error_var388 = alloca i64, align 8
  %retparam393 = alloca i64, align 8
  %error_var399 = alloca i64, align 8
  %retparam403 = alloca i64, align 8
  %error_var409 = alloca i64, align 8
  %retparam411 = alloca i64, align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !2667
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !2667
  br i1 %4, label %panic, label %checkok, !dbg !2667

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2668, metadata !DIExpression()), !dbg !2669
  call void @llvm.dbg.declare(metadata ptr %2, metadata !2670, metadata !DIExpression()), !dbg !2671
  call void @llvm.dbg.declare(metadata ptr %len, metadata !2672, metadata !DIExpression()), !dbg !2673
  store i64 1, ptr %len, align 8, !dbg !2674
  call void @llvm.dbg.declare(metadata ptr %l, metadata !2675, metadata !DIExpression()), !dbg !2676
  store i32 1, ptr %l, align 4, !dbg !2677
  %5 = load i64, ptr %len, align 8, !dbg !2678
  %6 = load i32, ptr %l, align 4, !dbg !2679
  %zext = zext i32 %6 to i64, !dbg !2679
  %7 = load ptr, ptr %self, align 8
  %8 = call i64 @std.io.Formatter.adjust(ptr %retparam, ptr %7, i64 %zext), !dbg !2680
  %not_err = icmp eq i64 %8, 0, !dbg !2680
  %9 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2680
  br i1 %9, label %after_check, label %assign_optional, !dbg !2680

assign_optional:                                  ; preds = %checkok
  store i64 %8, ptr %error_var, align 8, !dbg !2680
  br label %guard_block, !dbg !2680

after_check:                                      ; preds = %checkok
  br label %noerr_block, !dbg !2680

guard_block:                                      ; preds = %assign_optional
  %10 = load i64, ptr %error_var, align 8, !dbg !2680
  ret i64 %10, !dbg !2680

noerr_block:                                      ; preds = %after_check
  %11 = load i64, ptr %retparam, align 8, !dbg !2680
  %add = add i64 %5, %11, !dbg !2678
  store i64 %add, ptr %len, align 8, !dbg !2678
  call void @llvm.dbg.declare(metadata ptr %c, metadata !2681, metadata !DIExpression()), !dbg !2683
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %v, ptr align 8 %2, i32 16, i1 false)
  %12 = call i8 @std.core.types.TypeKind.is_int(i8 3) #5, !dbg !2684
  %13 = trunc i8 %12 to i1, !dbg !2684
  br i1 %13, label %or.phi, label %or.rhs, !dbg !2684

or.rhs:                                           ; preds = %noerr_block
  br label %or.phi, !dbg !2688

or.phi:                                           ; preds = %or.rhs, %noerr_block
  %val = phi i1 [ true, %noerr_block ], [ false, %or.rhs ], !dbg !2688
  br i1 %val, label %assert_ok, label %assert_fail, !dbg !2688

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.75, i64 106 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg5, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 12), !dbg !2684
  unreachable, !dbg !2684

assert_ok:                                        ; preds = %or.phi
  call void @llvm.dbg.declare(metadata ptr %any_type, metadata !2689, metadata !DIExpression()), !dbg !2690
  %ptradd = getelementptr inbounds i8, ptr %v, i64 8, !dbg !2691
  %15 = load i64, ptr %ptradd, align 8, !dbg !2691
  store i64 %15, ptr %any_type, align 8, !dbg !2691
  call void @llvm.dbg.declare(metadata ptr %kind, metadata !2692, metadata !DIExpression()), !dbg !2693
  %16 = load i64, ptr %any_type, align 8, !dbg !2694
  %"introspect*" = inttoptr i64 %16 to ptr, !dbg !2694
  %typeid.kind = load i8, ptr %"introspect*", align 8, !dbg !2694
  store i8 %typeid.kind, ptr %kind, align 1, !dbg !2694
  %17 = load i8, ptr %kind, align 1, !dbg !2695
  %eq = icmp eq i8 %17, 8, !dbg !2695
  br i1 %eq, label %if.then, label %if.exit, !dbg !2695

if.then:                                          ; preds = %assert_ok
  %18 = load i64, ptr %any_type, align 8, !dbg !2696
  %"introspect*6" = inttoptr i64 %18 to ptr, !dbg !2696
  %typeid.kind7 = load i8, ptr %"introspect*6", align 8, !dbg !2696
  %eq8 = icmp eq i8 %typeid.kind7, 15, !dbg !2696
  br i1 %eq8, label %check_type_ok, label %check_next, !dbg !2696

check_next:                                       ; preds = %if.then
  %eq9 = icmp eq i8 %typeid.kind7, 19, !dbg !2696
  br i1 %eq9, label %check_type_ok, label %check_next10, !dbg !2696

check_next10:                                     ; preds = %check_next
  %eq11 = icmp eq i8 %typeid.kind7, 17, !dbg !2696
  br i1 %eq11, label %check_type_ok, label %check_next12, !dbg !2696

check_next12:                                     ; preds = %check_next10
  %eq13 = icmp eq i8 %typeid.kind7, 8, !dbg !2696
  br i1 %eq13, label %check_type_ok, label %check_next14, !dbg !2696

check_next14:                                     ; preds = %check_next12
  %eq15 = icmp eq i8 %typeid.kind7, 16, !dbg !2696
  br i1 %eq15, label %check_type_ok, label %check_next16, !dbg !2696

check_next16:                                     ; preds = %check_next14
  %eq17 = icmp eq i8 %typeid.kind7, 18, !dbg !2696
  br i1 %eq17, label %check_type_ok, label %check_next18, !dbg !2696

check_next18:                                     ; preds = %check_next16
  %eq19 = icmp eq i8 %typeid.kind7, 14, !dbg !2696
  br i1 %eq19, label %check_type_ok, label %check_next20, !dbg !2696

check_next20:                                     ; preds = %check_next18
  %eq21 = icmp eq i8 %typeid.kind7, 12, !dbg !2696
  br i1 %eq21, label %check_type_ok, label %check_next22, !dbg !2696

check_next22:                                     ; preds = %check_next20
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg25, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 20), !dbg !2696
  unreachable, !dbg !2696

check_type_ok:                                    ; preds = %check_next20, %check_next18, %check_next16, %check_next14, %check_next12, %check_next10, %check_next, %if.then
  %ptradd26 = getelementptr inbounds i8, ptr %"introspect*6", i64 32, !dbg !2696
  %typeid.inner = load i64, ptr %ptradd26, align 8, !dbg !2696
  store i64 %typeid.inner, ptr %any_type, align 8, !dbg !2696
  %20 = load i64, ptr %any_type, align 8, !dbg !2698
  %"introspect*27" = inttoptr i64 %20 to ptr, !dbg !2698
  %typeid.kind28 = load i8, ptr %"introspect*27", align 8, !dbg !2698
  store i8 %typeid.kind28, ptr %kind, align 1, !dbg !2698
  br label %if.exit, !dbg !2698

if.exit:                                          ; preds = %check_type_ok, %assert_ok
  call void @llvm.dbg.declare(metadata ptr %is_mixed_signed, metadata !2699, metadata !DIExpression()), !dbg !2700
  %21 = load i64, ptr %any_type, align 8, !dbg !2701
  %"introspect*29" = inttoptr i64 %21 to ptr, !dbg !2701
  %typeid.kind30 = load i8, ptr %"introspect*29", align 8, !dbg !2701
  %neq = icmp ne i8 3, %typeid.kind30, !dbg !2702
  %22 = zext i1 %neq to i8, !dbg !2702
  store i8 %22, ptr %is_mixed_signed, align 1, !dbg !2702
  call void @llvm.dbg.declare(metadata ptr %max, metadata !2703, metadata !DIExpression()), !dbg !2704
  store i32 -1, ptr %max, align 4, !dbg !2705
  call void @llvm.dbg.declare(metadata ptr %min, metadata !2706, metadata !DIExpression()), !dbg !2707
  store i32 0, ptr %min, align 4, !dbg !2708
  %23 = load i64, ptr %any_type, align 8
  store i64 %23, ptr %switch, align 8
  br label %switch.entry

switch.entry:                                     ; preds = %if.exit
  %24 = load i64, ptr %switch, align 8
  br label %check_subtype, !dbg !2709

check_subtype:                                    ; preds = %parent_type_block, %switch.entry
  %25 = phi i64 [ %24, %switch.entry ], [ %typeid.parent, %parent_type_block ], !dbg !2709
  %eq31 = icmp eq i64 ptrtoint (ptr @"$ct.ichar" to i64), %25, !dbg !2709
  br i1 %eq31, label %result_block, label %parent_type_block, !dbg !2709

parent_type_block:                                ; preds = %check_subtype
  %26 = inttoptr i64 %25 to ptr, !dbg !2709
  %ptradd32 = getelementptr inbounds i8, ptr %26, i64 8, !dbg !2709
  %typeid.parent = load i64, ptr %ptradd32, align 8, !dbg !2709
  %27 = icmp eq i64 %typeid.parent, 0, !dbg !2709
  br i1 %27, label %result_block, label %check_subtype, !dbg !2709

result_block:                                     ; preds = %parent_type_block, %check_subtype
  %28 = phi i1 [ false, %parent_type_block ], [ true, %check_subtype ], !dbg !2709
  br i1 %28, label %switch.case, label %next_if, !dbg !2709

switch.case:                                      ; preds = %result_block
  call void @llvm.dbg.declare(metadata ptr %c33, metadata !2711, metadata !DIExpression()), !dbg !2713
  %29 = load ptr, ptr %v, align 8, !dbg !2714
  %checknull = icmp eq ptr %29, null, !dbg !2714
  %30 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2714
  br i1 %30, label %panic34, label %checkok38, !dbg !2714

checkok38:                                        ; preds = %switch.case
  %31 = load i8, ptr %29, align 1, !dbg !2715
  store i8 %31, ptr %c33, align 1, !dbg !2715
  %32 = load i8, ptr %is_mixed_signed, align 1, !dbg !2716
  %33 = trunc i8 %32 to i1, !dbg !2716
  br i1 %33, label %and.rhs, label %and.phi, !dbg !2716

and.rhs:                                          ; preds = %checkok38
  %34 = load i8, ptr %c33, align 1, !dbg !2717
  %sext = sext i8 %34 to i32, !dbg !2717
  %lt = icmp slt i32 %sext, 0, !dbg !2717
  br label %and.phi, !dbg !2717

and.phi:                                          ; preds = %and.rhs, %checkok38
  %val39 = phi i1 [ false, %checkok38 ], [ %lt, %and.rhs ], !dbg !2717
  br i1 %val39, label %if.then40, label %if.exit41, !dbg !2717

if.then40:                                        ; preds = %and.phi
  br label %else_block, !dbg !2718

if.exit41:                                        ; preds = %and.phi
  %35 = load i8, ptr %c33, align 1, !dbg !2719
  %sext42 = sext i8 %35 to i32, !dbg !2719
  store i32 %sext42, ptr %blockret, align 4, !dbg !2719
  br label %expr_block.exit, !dbg !2719

next_if:                                          ; preds = %result_block
  br label %check_subtype43, !dbg !2720

check_subtype43:                                  ; preds = %parent_type_block45, %next_if
  %36 = phi i64 [ %24, %next_if ], [ %typeid.parent47, %parent_type_block45 ], !dbg !2720
  %eq44 = icmp eq i64 ptrtoint (ptr @"$ct.short" to i64), %36, !dbg !2720
  br i1 %eq44, label %result_block48, label %parent_type_block45, !dbg !2720

parent_type_block45:                              ; preds = %check_subtype43
  %37 = inttoptr i64 %36 to ptr, !dbg !2720
  %ptradd46 = getelementptr inbounds i8, ptr %37, i64 8, !dbg !2720
  %typeid.parent47 = load i64, ptr %ptradd46, align 8, !dbg !2720
  %38 = icmp eq i64 %typeid.parent47, 0, !dbg !2720
  br i1 %38, label %result_block48, label %check_subtype43, !dbg !2720

result_block48:                                   ; preds = %parent_type_block45, %check_subtype43
  %39 = phi i1 [ false, %parent_type_block45 ], [ true, %check_subtype43 ], !dbg !2720
  br i1 %39, label %switch.case49, label %next_if73, !dbg !2720

switch.case49:                                    ; preds = %result_block48
  call void @llvm.dbg.declare(metadata ptr %s, metadata !2721, metadata !DIExpression()), !dbg !2723
  %40 = load ptr, ptr %v, align 8, !dbg !2724
  %checknull50 = icmp eq ptr %40, null, !dbg !2724
  %41 = call i1 @llvm.expect.i1(i1 %checknull50, i1 false), !dbg !2724
  br i1 %41, label %panic51, label %checkok55, !dbg !2724

checkok55:                                        ; preds = %switch.case49
  %42 = load i16, ptr %40, align 2, !dbg !2725
  store i16 %42, ptr %s, align 2, !dbg !2725
  %43 = load i8, ptr %is_mixed_signed, align 1, !dbg !2726
  %44 = trunc i8 %43 to i1, !dbg !2726
  br i1 %44, label %and.rhs56, label %and.phi59, !dbg !2726

and.rhs56:                                        ; preds = %checkok55
  %45 = load i16, ptr %s, align 2, !dbg !2727
  %sext57 = sext i16 %45 to i32, !dbg !2727
  %lt58 = icmp slt i32 %sext57, 0, !dbg !2727
  br label %and.phi59, !dbg !2727

and.phi59:                                        ; preds = %and.rhs56, %checkok55
  %val60 = phi i1 [ false, %checkok55 ], [ %lt58, %and.rhs56 ], !dbg !2727
  br i1 %val60, label %if.then61, label %if.exit62, !dbg !2727

if.then61:                                        ; preds = %and.phi59
  br label %else_block, !dbg !2728

if.exit62:                                        ; preds = %and.phi59
  %46 = load i16, ptr %s, align 2, !dbg !2729
  %sext63 = sext i16 %46 to i32, !dbg !2729
  %47 = load i32, ptr %max, align 4, !dbg !2730
  %gt = icmp sgt i32 %sext63, %47, !dbg !2729
  %check = icmp sge i32 %47, 0, !dbg !2729
  %siui-gt = and i1 %check, %gt, !dbg !2729
  br i1 %siui-gt, label %or.phi68, label %or.rhs64, !dbg !2729

or.rhs64:                                         ; preds = %if.exit62
  %48 = load i16, ptr %s, align 2, !dbg !2731
  %sext65 = sext i16 %48 to i32, !dbg !2731
  %49 = load i32, ptr %min, align 4, !dbg !2732
  %lt66 = icmp slt i32 %sext65, %49, !dbg !2731
  %check67 = icmp slt i32 %49, 0, !dbg !2731
  %siui-lt = or i1 %check67, %lt66, !dbg !2731
  br label %or.phi68, !dbg !2731

or.phi68:                                         ; preds = %or.rhs64, %if.exit62
  %val69 = phi i1 [ true, %if.exit62 ], [ %siui-lt, %or.rhs64 ], !dbg !2731
  br i1 %val69, label %if.then70, label %if.exit71, !dbg !2731

if.then70:                                        ; preds = %or.phi68
  br label %else_block, !dbg !2733

if.exit71:                                        ; preds = %or.phi68
  %50 = load i16, ptr %s, align 2, !dbg !2734
  %sext72 = sext i16 %50 to i32, !dbg !2734
  store i32 %sext72, ptr %blockret, align 4, !dbg !2734
  br label %expr_block.exit, !dbg !2734

next_if73:                                        ; preds = %result_block48
  br label %check_subtype74, !dbg !2735

check_subtype74:                                  ; preds = %parent_type_block76, %next_if73
  %51 = phi i64 [ %24, %next_if73 ], [ %typeid.parent78, %parent_type_block76 ], !dbg !2735
  %eq75 = icmp eq i64 ptrtoint (ptr @"$ct.int" to i64), %51, !dbg !2735
  br i1 %eq75, label %result_block79, label %parent_type_block76, !dbg !2735

parent_type_block76:                              ; preds = %check_subtype74
  %52 = inttoptr i64 %51 to ptr, !dbg !2735
  %ptradd77 = getelementptr inbounds i8, ptr %52, i64 8, !dbg !2735
  %typeid.parent78 = load i64, ptr %ptradd77, align 8, !dbg !2735
  %53 = icmp eq i64 %typeid.parent78, 0, !dbg !2735
  br i1 %53, label %result_block79, label %check_subtype74, !dbg !2735

result_block79:                                   ; preds = %parent_type_block76, %check_subtype74
  %54 = phi i1 [ false, %parent_type_block76 ], [ true, %check_subtype74 ], !dbg !2735
  br i1 %54, label %switch.case80, label %next_if104, !dbg !2735

switch.case80:                                    ; preds = %result_block79
  call void @llvm.dbg.declare(metadata ptr %i, metadata !2736, metadata !DIExpression()), !dbg !2738
  %55 = load ptr, ptr %v, align 8, !dbg !2739
  %checknull81 = icmp eq ptr %55, null, !dbg !2739
  %56 = call i1 @llvm.expect.i1(i1 %checknull81, i1 false), !dbg !2739
  br i1 %56, label %panic82, label %checkok86, !dbg !2739

checkok86:                                        ; preds = %switch.case80
  %57 = load i32, ptr %55, align 4, !dbg !2740
  store i32 %57, ptr %i, align 4, !dbg !2740
  %58 = load i8, ptr %is_mixed_signed, align 1, !dbg !2741
  %59 = trunc i8 %58 to i1, !dbg !2741
  br i1 %59, label %and.rhs87, label %and.phi89, !dbg !2741

and.rhs87:                                        ; preds = %checkok86
  %60 = load i32, ptr %i, align 4, !dbg !2742
  %lt88 = icmp slt i32 %60, 0, !dbg !2742
  br label %and.phi89, !dbg !2742

and.phi89:                                        ; preds = %and.rhs87, %checkok86
  %val90 = phi i1 [ false, %checkok86 ], [ %lt88, %and.rhs87 ], !dbg !2742
  br i1 %val90, label %if.then91, label %if.exit92, !dbg !2742

if.then91:                                        ; preds = %and.phi89
  br label %else_block, !dbg !2743

if.exit92:                                        ; preds = %and.phi89
  %61 = load i32, ptr %i, align 4, !dbg !2744
  %62 = load i32, ptr %max, align 4, !dbg !2745
  %gt93 = icmp sgt i32 %61, %62, !dbg !2744
  %check94 = icmp sge i32 %62, 0, !dbg !2744
  %siui-gt95 = and i1 %check94, %gt93, !dbg !2744
  br i1 %siui-gt95, label %or.phi100, label %or.rhs96, !dbg !2744

or.rhs96:                                         ; preds = %if.exit92
  %63 = load i32, ptr %i, align 4, !dbg !2746
  %64 = load i32, ptr %min, align 4, !dbg !2747
  %lt97 = icmp slt i32 %63, %64, !dbg !2746
  %check98 = icmp slt i32 %64, 0, !dbg !2746
  %siui-lt99 = or i1 %check98, %lt97, !dbg !2746
  br label %or.phi100, !dbg !2746

or.phi100:                                        ; preds = %or.rhs96, %if.exit92
  %val101 = phi i1 [ true, %if.exit92 ], [ %siui-lt99, %or.rhs96 ], !dbg !2746
  br i1 %val101, label %if.then102, label %if.exit103, !dbg !2746

if.then102:                                       ; preds = %or.phi100
  br label %else_block, !dbg !2748

if.exit103:                                       ; preds = %or.phi100
  %65 = load i32, ptr %i, align 4, !dbg !2749
  store i32 %65, ptr %blockret, align 4, !dbg !2749
  br label %expr_block.exit, !dbg !2749

next_if104:                                       ; preds = %result_block79
  br label %check_subtype105, !dbg !2750

check_subtype105:                                 ; preds = %parent_type_block107, %next_if104
  %66 = phi i64 [ %24, %next_if104 ], [ %typeid.parent109, %parent_type_block107 ], !dbg !2750
  %eq106 = icmp eq i64 ptrtoint (ptr @"$ct.long" to i64), %66, !dbg !2750
  br i1 %eq106, label %result_block110, label %parent_type_block107, !dbg !2750

parent_type_block107:                             ; preds = %check_subtype105
  %67 = inttoptr i64 %66 to ptr, !dbg !2750
  %ptradd108 = getelementptr inbounds i8, ptr %67, i64 8, !dbg !2750
  %typeid.parent109 = load i64, ptr %ptradd108, align 8, !dbg !2750
  %68 = icmp eq i64 %typeid.parent109, 0, !dbg !2750
  br i1 %68, label %result_block110, label %check_subtype105, !dbg !2750

result_block110:                                  ; preds = %parent_type_block107, %check_subtype105
  %69 = phi i1 [ false, %parent_type_block107 ], [ true, %check_subtype105 ], !dbg !2750
  br i1 %69, label %switch.case111, label %next_if138, !dbg !2750

switch.case111:                                   ; preds = %result_block110
  call void @llvm.dbg.declare(metadata ptr %l112, metadata !2751, metadata !DIExpression()), !dbg !2753
  %70 = load ptr, ptr %v, align 8, !dbg !2754
  %checknull113 = icmp eq ptr %70, null, !dbg !2754
  %71 = call i1 @llvm.expect.i1(i1 %checknull113, i1 false), !dbg !2754
  br i1 %71, label %panic114, label %checkok118, !dbg !2754

checkok118:                                       ; preds = %switch.case111
  %72 = load i64, ptr %70, align 8, !dbg !2755
  store i64 %72, ptr %l112, align 8, !dbg !2755
  %73 = load i8, ptr %is_mixed_signed, align 1, !dbg !2756
  %74 = trunc i8 %73 to i1, !dbg !2756
  br i1 %74, label %and.rhs119, label %and.phi121, !dbg !2756

and.rhs119:                                       ; preds = %checkok118
  %75 = load i64, ptr %l112, align 8, !dbg !2757
  %lt120 = icmp slt i64 %75, 0, !dbg !2757
  br label %and.phi121, !dbg !2757

and.phi121:                                       ; preds = %and.rhs119, %checkok118
  %val122 = phi i1 [ false, %checkok118 ], [ %lt120, %and.rhs119 ], !dbg !2757
  br i1 %val122, label %if.then123, label %if.exit124, !dbg !2757

if.then123:                                       ; preds = %and.phi121
  br label %else_block, !dbg !2758

if.exit124:                                       ; preds = %and.phi121
  %76 = load i64, ptr %l112, align 8, !dbg !2759
  %77 = load i32, ptr %max, align 4, !dbg !2760
  %zext125 = zext i32 %77 to i64, !dbg !2760
  %gt126 = icmp sgt i64 %76, %zext125, !dbg !2759
  %check127 = icmp sge i64 %zext125, 0, !dbg !2759
  %siui-gt128 = and i1 %check127, %gt126, !dbg !2759
  br i1 %siui-gt128, label %or.phi134, label %or.rhs129, !dbg !2759

or.rhs129:                                        ; preds = %if.exit124
  %78 = load i64, ptr %l112, align 8, !dbg !2761
  %79 = load i32, ptr %min, align 4, !dbg !2762
  %zext130 = zext i32 %79 to i64, !dbg !2762
  %lt131 = icmp slt i64 %78, %zext130, !dbg !2761
  %check132 = icmp slt i64 %zext130, 0, !dbg !2761
  %siui-lt133 = or i1 %check132, %lt131, !dbg !2761
  br label %or.phi134, !dbg !2761

or.phi134:                                        ; preds = %or.rhs129, %if.exit124
  %val135 = phi i1 [ true, %if.exit124 ], [ %siui-lt133, %or.rhs129 ], !dbg !2761
  br i1 %val135, label %if.then136, label %if.exit137, !dbg !2761

if.then136:                                       ; preds = %or.phi134
  br label %else_block, !dbg !2763

if.exit137:                                       ; preds = %or.phi134
  %80 = load i64, ptr %l112, align 8, !dbg !2764
  %trunc = trunc i64 %80 to i32, !dbg !2764
  store i32 %trunc, ptr %blockret, align 4, !dbg !2764
  br label %expr_block.exit, !dbg !2764

next_if138:                                       ; preds = %result_block110
  br label %check_subtype139, !dbg !2765

check_subtype139:                                 ; preds = %parent_type_block141, %next_if138
  %81 = phi i64 [ %24, %next_if138 ], [ %typeid.parent143, %parent_type_block141 ], !dbg !2765
  %eq140 = icmp eq i64 ptrtoint (ptr @"$ct.int128" to i64), %81, !dbg !2765
  br i1 %eq140, label %result_block144, label %parent_type_block141, !dbg !2765

parent_type_block141:                             ; preds = %check_subtype139
  %82 = inttoptr i64 %81 to ptr, !dbg !2765
  %ptradd142 = getelementptr inbounds i8, ptr %82, i64 8, !dbg !2765
  %typeid.parent143 = load i64, ptr %ptradd142, align 8, !dbg !2765
  %83 = icmp eq i64 %typeid.parent143, 0, !dbg !2765
  br i1 %83, label %result_block144, label %check_subtype139, !dbg !2765

result_block144:                                  ; preds = %parent_type_block141, %check_subtype139
  %84 = phi i1 [ false, %parent_type_block141 ], [ true, %check_subtype139 ], !dbg !2765
  br i1 %84, label %switch.case145, label %next_if173, !dbg !2765

switch.case145:                                   ; preds = %result_block144
  call void @llvm.dbg.declare(metadata ptr %i146, metadata !2766, metadata !DIExpression()), !dbg !2768
  %85 = load ptr, ptr %v, align 8, !dbg !2769
  %checknull147 = icmp eq ptr %85, null, !dbg !2769
  %86 = call i1 @llvm.expect.i1(i1 %checknull147, i1 false), !dbg !2769
  br i1 %86, label %panic148, label %checkok152, !dbg !2769

checkok152:                                       ; preds = %switch.case145
  %87 = load i128, ptr %85, align 16, !dbg !2770
  store i128 %87, ptr %i146, align 16, !dbg !2770
  %88 = load i8, ptr %is_mixed_signed, align 1, !dbg !2771
  %89 = trunc i8 %88 to i1, !dbg !2771
  br i1 %89, label %and.rhs153, label %and.phi155, !dbg !2771

and.rhs153:                                       ; preds = %checkok152
  %90 = load i128, ptr %i146, align 16, !dbg !2772
  %lt154 = icmp slt i128 %90, 0, !dbg !2772
  br label %and.phi155, !dbg !2772

and.phi155:                                       ; preds = %and.rhs153, %checkok152
  %val156 = phi i1 [ false, %checkok152 ], [ %lt154, %and.rhs153 ], !dbg !2772
  br i1 %val156, label %if.then157, label %if.exit158, !dbg !2772

if.then157:                                       ; preds = %and.phi155
  br label %else_block, !dbg !2773

if.exit158:                                       ; preds = %and.phi155
  %91 = load i128, ptr %i146, align 16, !dbg !2774
  %92 = load i32, ptr %max, align 4, !dbg !2775
  %zext159 = zext i32 %92 to i128, !dbg !2775
  %gt160 = icmp sgt i128 %91, %zext159, !dbg !2774
  %check161 = icmp sge i128 %zext159, 0, !dbg !2774
  %siui-gt162 = and i1 %check161, %gt160, !dbg !2774
  br i1 %siui-gt162, label %or.phi168, label %or.rhs163, !dbg !2774

or.rhs163:                                        ; preds = %if.exit158
  %93 = load i128, ptr %i146, align 16, !dbg !2776
  %94 = load i32, ptr %min, align 4, !dbg !2777
  %zext164 = zext i32 %94 to i128, !dbg !2777
  %lt165 = icmp slt i128 %93, %zext164, !dbg !2776
  %check166 = icmp slt i128 %zext164, 0, !dbg !2776
  %siui-lt167 = or i1 %check166, %lt165, !dbg !2776
  br label %or.phi168, !dbg !2776

or.phi168:                                        ; preds = %or.rhs163, %if.exit158
  %val169 = phi i1 [ true, %if.exit158 ], [ %siui-lt167, %or.rhs163 ], !dbg !2776
  br i1 %val169, label %if.then170, label %if.exit171, !dbg !2776

if.then170:                                       ; preds = %or.phi168
  br label %else_block, !dbg !2778

if.exit171:                                       ; preds = %or.phi168
  %95 = load i128, ptr %i146, align 16, !dbg !2779
  %trunc172 = trunc i128 %95 to i32, !dbg !2779
  store i32 %trunc172, ptr %blockret, align 4, !dbg !2779
  br label %expr_block.exit, !dbg !2779

next_if173:                                       ; preds = %result_block144
  br label %check_subtype174, !dbg !2780

check_subtype174:                                 ; preds = %parent_type_block176, %next_if173
  %96 = phi i64 [ %24, %next_if173 ], [ %typeid.parent178, %parent_type_block176 ], !dbg !2780
  %eq175 = icmp eq i64 ptrtoint (ptr @"$ct.char" to i64), %96, !dbg !2780
  br i1 %eq175, label %result_block179, label %parent_type_block176, !dbg !2780

parent_type_block176:                             ; preds = %check_subtype174
  %97 = inttoptr i64 %96 to ptr, !dbg !2780
  %ptradd177 = getelementptr inbounds i8, ptr %97, i64 8, !dbg !2780
  %typeid.parent178 = load i64, ptr %ptradd177, align 8, !dbg !2780
  %98 = icmp eq i64 %typeid.parent178, 0, !dbg !2780
  br i1 %98, label %result_block179, label %check_subtype174, !dbg !2780

result_block179:                                  ; preds = %parent_type_block176, %check_subtype174
  %99 = phi i1 [ false, %parent_type_block176 ], [ true, %check_subtype174 ], !dbg !2780
  br i1 %99, label %switch.case180, label %next_if193, !dbg !2780

switch.case180:                                   ; preds = %result_block179
  call void @llvm.dbg.declare(metadata ptr %c181, metadata !2781, metadata !DIExpression()), !dbg !2783
  %100 = load ptr, ptr %v, align 8, !dbg !2784
  %checknull182 = icmp eq ptr %100, null, !dbg !2784
  %101 = call i1 @llvm.expect.i1(i1 %checknull182, i1 false), !dbg !2784
  br i1 %101, label %panic183, label %checkok187, !dbg !2784

checkok187:                                       ; preds = %switch.case180
  %102 = load i8, ptr %100, align 1, !dbg !2785
  store i8 %102, ptr %c181, align 1, !dbg !2785
  %103 = load i8, ptr %c181, align 1, !dbg !2786
  %zext188 = zext i8 %103 to i32, !dbg !2786
  %104 = load i32, ptr %max, align 4, !dbg !2787
  %gt189 = icmp ugt i32 %zext188, %104, !dbg !2786
  br i1 %gt189, label %if.then190, label %if.exit191, !dbg !2786

if.then190:                                       ; preds = %checkok187
  br label %else_block, !dbg !2788

if.exit191:                                       ; preds = %checkok187
  %105 = load i8, ptr %c181, align 1, !dbg !2789
  %zext192 = zext i8 %105 to i32, !dbg !2789
  store i32 %zext192, ptr %blockret, align 4, !dbg !2789
  br label %expr_block.exit, !dbg !2789

next_if193:                                       ; preds = %result_block179
  br label %check_subtype194, !dbg !2790

check_subtype194:                                 ; preds = %parent_type_block196, %next_if193
  %106 = phi i64 [ %24, %next_if193 ], [ %typeid.parent198, %parent_type_block196 ], !dbg !2790
  %eq195 = icmp eq i64 ptrtoint (ptr @"$ct.ushort" to i64), %106, !dbg !2790
  br i1 %eq195, label %result_block199, label %parent_type_block196, !dbg !2790

parent_type_block196:                             ; preds = %check_subtype194
  %107 = inttoptr i64 %106 to ptr, !dbg !2790
  %ptradd197 = getelementptr inbounds i8, ptr %107, i64 8, !dbg !2790
  %typeid.parent198 = load i64, ptr %ptradd197, align 8, !dbg !2790
  %108 = icmp eq i64 %typeid.parent198, 0, !dbg !2790
  br i1 %108, label %result_block199, label %check_subtype194, !dbg !2790

result_block199:                                  ; preds = %parent_type_block196, %check_subtype194
  %109 = phi i1 [ false, %parent_type_block196 ], [ true, %check_subtype194 ], !dbg !2790
  br i1 %109, label %switch.case200, label %next_if218, !dbg !2790

switch.case200:                                   ; preds = %result_block199
  call void @llvm.dbg.declare(metadata ptr %s201, metadata !2791, metadata !DIExpression()), !dbg !2793
  %110 = load ptr, ptr %v, align 8, !dbg !2794
  %checknull202 = icmp eq ptr %110, null, !dbg !2794
  %111 = call i1 @llvm.expect.i1(i1 %checknull202, i1 false), !dbg !2794
  br i1 %111, label %panic203, label %checkok207, !dbg !2794

checkok207:                                       ; preds = %switch.case200
  %112 = load i16, ptr %110, align 2, !dbg !2795
  store i16 %112, ptr %s201, align 2, !dbg !2795
  %113 = load i16, ptr %s201, align 2, !dbg !2796
  %zext208 = zext i16 %113 to i32, !dbg !2796
  %114 = load i32, ptr %max, align 4, !dbg !2797
  %gt209 = icmp ugt i32 %zext208, %114, !dbg !2796
  br i1 %gt209, label %or.phi213, label %or.rhs210, !dbg !2796

or.rhs210:                                        ; preds = %checkok207
  %115 = load i16, ptr %s201, align 2, !dbg !2798
  %zext211 = zext i16 %115 to i32, !dbg !2798
  %116 = load i32, ptr %min, align 4, !dbg !2799
  %lt212 = icmp ult i32 %zext211, %116, !dbg !2798
  br label %or.phi213, !dbg !2798

or.phi213:                                        ; preds = %or.rhs210, %checkok207
  %val214 = phi i1 [ true, %checkok207 ], [ %lt212, %or.rhs210 ], !dbg !2798
  br i1 %val214, label %if.then215, label %if.exit216, !dbg !2798

if.then215:                                       ; preds = %or.phi213
  br label %else_block, !dbg !2800

if.exit216:                                       ; preds = %or.phi213
  %117 = load i16, ptr %s201, align 2, !dbg !2801
  %zext217 = zext i16 %117 to i32, !dbg !2801
  store i32 %zext217, ptr %blockret, align 4, !dbg !2801
  br label %expr_block.exit, !dbg !2801

next_if218:                                       ; preds = %result_block199
  br label %check_subtype219, !dbg !2802

check_subtype219:                                 ; preds = %parent_type_block221, %next_if218
  %118 = phi i64 [ %24, %next_if218 ], [ %typeid.parent223, %parent_type_block221 ], !dbg !2802
  %eq220 = icmp eq i64 ptrtoint (ptr @"$ct.uint" to i64), %118, !dbg !2802
  br i1 %eq220, label %result_block224, label %parent_type_block221, !dbg !2802

parent_type_block221:                             ; preds = %check_subtype219
  %119 = inttoptr i64 %118 to ptr, !dbg !2802
  %ptradd222 = getelementptr inbounds i8, ptr %119, i64 8, !dbg !2802
  %typeid.parent223 = load i64, ptr %ptradd222, align 8, !dbg !2802
  %120 = icmp eq i64 %typeid.parent223, 0, !dbg !2802
  br i1 %120, label %result_block224, label %check_subtype219, !dbg !2802

result_block224:                                  ; preds = %parent_type_block221, %check_subtype219
  %121 = phi i1 [ false, %parent_type_block221 ], [ true, %check_subtype219 ], !dbg !2802
  br i1 %121, label %switch.case225, label %next_if240, !dbg !2802

switch.case225:                                   ; preds = %result_block224
  call void @llvm.dbg.declare(metadata ptr %i226, metadata !2803, metadata !DIExpression()), !dbg !2805
  %122 = load ptr, ptr %v, align 8, !dbg !2806
  %checknull227 = icmp eq ptr %122, null, !dbg !2806
  %123 = call i1 @llvm.expect.i1(i1 %checknull227, i1 false), !dbg !2806
  br i1 %123, label %panic228, label %checkok232, !dbg !2806

checkok232:                                       ; preds = %switch.case225
  %124 = load i32, ptr %122, align 4, !dbg !2807
  store i32 %124, ptr %i226, align 4, !dbg !2807
  %125 = load i32, ptr %i226, align 4, !dbg !2808
  %126 = load i32, ptr %max, align 4, !dbg !2809
  %gt233 = icmp ugt i32 %125, %126, !dbg !2808
  br i1 %gt233, label %or.phi236, label %or.rhs234, !dbg !2808

or.rhs234:                                        ; preds = %checkok232
  %127 = load i32, ptr %i226, align 4, !dbg !2810
  %128 = load i32, ptr %min, align 4, !dbg !2811
  %lt235 = icmp ult i32 %127, %128, !dbg !2810
  br label %or.phi236, !dbg !2810

or.phi236:                                        ; preds = %or.rhs234, %checkok232
  %val237 = phi i1 [ true, %checkok232 ], [ %lt235, %or.rhs234 ], !dbg !2810
  br i1 %val237, label %if.then238, label %if.exit239, !dbg !2810

if.then238:                                       ; preds = %or.phi236
  br label %else_block, !dbg !2812

if.exit239:                                       ; preds = %or.phi236
  %129 = load i32, ptr %i226, align 4, !dbg !2813
  store i32 %129, ptr %blockret, align 4, !dbg !2813
  br label %expr_block.exit, !dbg !2813

next_if240:                                       ; preds = %result_block224
  br label %check_subtype241, !dbg !2814

check_subtype241:                                 ; preds = %parent_type_block243, %next_if240
  %130 = phi i64 [ %24, %next_if240 ], [ %typeid.parent245, %parent_type_block243 ], !dbg !2814
  %eq242 = icmp eq i64 ptrtoint (ptr @"$ct.ulong" to i64), %130, !dbg !2814
  br i1 %eq242, label %result_block246, label %parent_type_block243, !dbg !2814

parent_type_block243:                             ; preds = %check_subtype241
  %131 = inttoptr i64 %130 to ptr, !dbg !2814
  %ptradd244 = getelementptr inbounds i8, ptr %131, i64 8, !dbg !2814
  %typeid.parent245 = load i64, ptr %ptradd244, align 8, !dbg !2814
  %132 = icmp eq i64 %typeid.parent245, 0, !dbg !2814
  br i1 %132, label %result_block246, label %check_subtype241, !dbg !2814

result_block246:                                  ; preds = %parent_type_block243, %check_subtype241
  %133 = phi i1 [ false, %parent_type_block243 ], [ true, %check_subtype241 ], !dbg !2814
  br i1 %133, label %switch.case247, label %next_if265, !dbg !2814

switch.case247:                                   ; preds = %result_block246
  call void @llvm.dbg.declare(metadata ptr %l248, metadata !2815, metadata !DIExpression()), !dbg !2817
  %134 = load ptr, ptr %v, align 8, !dbg !2818
  %checknull249 = icmp eq ptr %134, null, !dbg !2818
  %135 = call i1 @llvm.expect.i1(i1 %checknull249, i1 false), !dbg !2818
  br i1 %135, label %panic250, label %checkok254, !dbg !2818

checkok254:                                       ; preds = %switch.case247
  %136 = load i64, ptr %134, align 8, !dbg !2819
  store i64 %136, ptr %l248, align 8, !dbg !2819
  %137 = load i64, ptr %l248, align 8, !dbg !2820
  %138 = load i32, ptr %max, align 4, !dbg !2821
  %zext255 = zext i32 %138 to i64, !dbg !2821
  %gt256 = icmp ugt i64 %137, %zext255, !dbg !2820
  br i1 %gt256, label %or.phi260, label %or.rhs257, !dbg !2820

or.rhs257:                                        ; preds = %checkok254
  %139 = load i64, ptr %l248, align 8, !dbg !2822
  %140 = load i32, ptr %min, align 4, !dbg !2823
  %zext258 = zext i32 %140 to i64, !dbg !2823
  %lt259 = icmp ult i64 %139, %zext258, !dbg !2822
  br label %or.phi260, !dbg !2822

or.phi260:                                        ; preds = %or.rhs257, %checkok254
  %val261 = phi i1 [ true, %checkok254 ], [ %lt259, %or.rhs257 ], !dbg !2822
  br i1 %val261, label %if.then262, label %if.exit263, !dbg !2822

if.then262:                                       ; preds = %or.phi260
  br label %else_block, !dbg !2824

if.exit263:                                       ; preds = %or.phi260
  %141 = load i64, ptr %l248, align 8, !dbg !2825
  %trunc264 = trunc i64 %141 to i32, !dbg !2825
  store i32 %trunc264, ptr %blockret, align 4, !dbg !2825
  br label %expr_block.exit, !dbg !2825

next_if265:                                       ; preds = %result_block246
  br label %check_subtype266, !dbg !2826

check_subtype266:                                 ; preds = %parent_type_block268, %next_if265
  %142 = phi i64 [ %24, %next_if265 ], [ %typeid.parent270, %parent_type_block268 ], !dbg !2826
  %eq267 = icmp eq i64 ptrtoint (ptr @"$ct.uint128" to i64), %142, !dbg !2826
  br i1 %eq267, label %result_block271, label %parent_type_block268, !dbg !2826

parent_type_block268:                             ; preds = %check_subtype266
  %143 = inttoptr i64 %142 to ptr, !dbg !2826
  %ptradd269 = getelementptr inbounds i8, ptr %143, i64 8, !dbg !2826
  %typeid.parent270 = load i64, ptr %ptradd269, align 8, !dbg !2826
  %144 = icmp eq i64 %typeid.parent270, 0, !dbg !2826
  br i1 %144, label %result_block271, label %check_subtype266, !dbg !2826

result_block271:                                  ; preds = %parent_type_block268, %check_subtype266
  %145 = phi i1 [ false, %parent_type_block268 ], [ true, %check_subtype266 ], !dbg !2826
  br i1 %145, label %switch.case272, label %next_if290, !dbg !2826

switch.case272:                                   ; preds = %result_block271
  call void @llvm.dbg.declare(metadata ptr %i273, metadata !2827, metadata !DIExpression()), !dbg !2829
  %146 = load ptr, ptr %v, align 8, !dbg !2830
  %checknull274 = icmp eq ptr %146, null, !dbg !2830
  %147 = call i1 @llvm.expect.i1(i1 %checknull274, i1 false), !dbg !2830
  br i1 %147, label %panic275, label %checkok279, !dbg !2830

checkok279:                                       ; preds = %switch.case272
  %148 = load i128, ptr %146, align 16, !dbg !2831
  store i128 %148, ptr %i273, align 16, !dbg !2831
  %149 = load i128, ptr %i273, align 16, !dbg !2832
  %150 = load i32, ptr %max, align 4, !dbg !2833
  %zext280 = zext i32 %150 to i128, !dbg !2833
  %gt281 = icmp ugt i128 %149, %zext280, !dbg !2832
  br i1 %gt281, label %or.phi285, label %or.rhs282, !dbg !2832

or.rhs282:                                        ; preds = %checkok279
  %151 = load i128, ptr %i273, align 16, !dbg !2834
  %152 = load i32, ptr %min, align 4, !dbg !2835
  %zext283 = zext i32 %152 to i128, !dbg !2835
  %lt284 = icmp ult i128 %151, %zext283, !dbg !2834
  br label %or.phi285, !dbg !2834

or.phi285:                                        ; preds = %or.rhs282, %checkok279
  %val286 = phi i1 [ true, %checkok279 ], [ %lt284, %or.rhs282 ], !dbg !2834
  br i1 %val286, label %if.then287, label %if.exit288, !dbg !2834

if.then287:                                       ; preds = %or.phi285
  br label %else_block, !dbg !2836

if.exit288:                                       ; preds = %or.phi285
  %153 = load i128, ptr %i273, align 16, !dbg !2837
  %trunc289 = trunc i128 %153 to i32, !dbg !2837
  store i32 %trunc289, ptr %blockret, align 4, !dbg !2837
  br label %expr_block.exit, !dbg !2837

next_if290:                                       ; preds = %result_block271
  br label %switch.default, !dbg !2837

switch.default:                                   ; preds = %next_if290
  store %"char[]" { ptr @.str.185, i64 30 }, ptr %string, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg291, ptr align 8 %string, i32 16, i1 false)
  store %"char[]" { ptr @.str.186, i64 20 }, ptr %indirectarg292, align 8
  store %"char[]" { ptr @.str.187, i64 18 }, ptr %indirectarg293, align 8
  store %"any[]" zeroinitializer, ptr %indirectarg294, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg291, ptr align 8 %indirectarg292, ptr align 8 %indirectarg293, i32 614, ptr align 8 %indirectarg294), !dbg !2838
  unreachable, !dbg !2842

expr_block.exit:                                  ; preds = %if.exit288, %if.exit263, %if.exit239, %if.exit216, %if.exit191, %if.exit171, %if.exit137, %if.exit103, %if.exit71, %if.exit41
  %154 = load i32, ptr %blockret, align 4, !dbg !2842
  br label %phi_block, !dbg !2842

else_block:                                       ; preds = %if.then287, %if.then262, %if.then238, %if.then215, %if.then190, %if.then170, %if.then157, %if.then136, %if.then123, %if.then102, %if.then91, %if.then70, %if.then61, %if.then40
  br label %phi_block, !dbg !2843

phi_block:                                        ; preds = %else_block, %expr_block.exit
  %val295 = phi i32 [ %154, %expr_block.exit ], [ 65533, %else_block ], !dbg !2843
  store i32 %val295, ptr %c, align 4, !dbg !2843
  store i8 1, ptr %switch296, align 1
  br label %switch.entry297

switch.entry297:                                  ; preds = %phi_block
  %155 = load i8, ptr %switch296, align 1
  %156 = trunc i8 %155 to i1
  %157 = load i32, ptr %c, align 4, !dbg !2844
  %lt298 = icmp ult i32 %157, 127, !dbg !2844
  %eq299 = icmp eq i1 %lt298, %156, !dbg !2844
  br i1 %eq299, label %switch.case300, label %next_if309, !dbg !2844

switch.case300:                                   ; preds = %switch.entry297
  %158 = load i32, ptr %c, align 4, !dbg !2846
  %trunc302 = trunc i32 %158 to i8, !dbg !2846
  %159 = load ptr, ptr %self, align 8
  %160 = call i64 @std.io.Formatter.out(ptr %retparam303, ptr %159, i8 %trunc302), !dbg !2848
  %not_err304 = icmp eq i64 %160, 0, !dbg !2848
  %161 = call i1 @llvm.expect.i1(i1 %not_err304, i1 true), !dbg !2848
  br i1 %161, label %after_check306, label %assign_optional305, !dbg !2848

assign_optional305:                               ; preds = %switch.case300
  store i64 %160, ptr %error_var301, align 8, !dbg !2848
  br label %guard_block307, !dbg !2848

after_check306:                                   ; preds = %switch.case300
  br label %noerr_block308, !dbg !2848

guard_block307:                                   ; preds = %assign_optional305
  %162 = load i64, ptr %error_var301, align 8, !dbg !2848
  ret i64 %162, !dbg !2848

noerr_block308:                                   ; preds = %after_check306
  br label %switch.exit, !dbg !2848

next_if309:                                       ; preds = %switch.entry297
  %163 = load i32, ptr %c, align 4, !dbg !2849
  %lt310 = icmp ult i32 %163, 2047, !dbg !2849
  %eq311 = icmp eq i1 %lt310, %156, !dbg !2849
  br i1 %eq311, label %switch.case312, label %next_if330, !dbg !2849

switch.case312:                                   ; preds = %next_if309
  %164 = load i32, ptr %c, align 4, !dbg !2850
  %lshr = lshr i32 %164, 6, !dbg !2850
  %165 = freeze i32 %lshr, !dbg !2850
  %or = or i32 192, %165, !dbg !2852
  %trunc314 = trunc i32 %or to i8, !dbg !2852
  %166 = load ptr, ptr %self, align 8
  %167 = call i64 @std.io.Formatter.out(ptr %retparam315, ptr %166, i8 %trunc314), !dbg !2853
  %not_err316 = icmp eq i64 %167, 0, !dbg !2853
  %168 = call i1 @llvm.expect.i1(i1 %not_err316, i1 true), !dbg !2853
  br i1 %168, label %after_check318, label %assign_optional317, !dbg !2853

assign_optional317:                               ; preds = %switch.case312
  store i64 %167, ptr %error_var313, align 8, !dbg !2853
  br label %guard_block319, !dbg !2853

after_check318:                                   ; preds = %switch.case312
  br label %noerr_block320, !dbg !2853

guard_block319:                                   ; preds = %assign_optional317
  %169 = load i64, ptr %error_var313, align 8, !dbg !2853
  ret i64 %169, !dbg !2853

noerr_block320:                                   ; preds = %after_check318
  %170 = load i32, ptr %c, align 4, !dbg !2854
  %and = and i32 %170, 63, !dbg !2854
  %or322 = or i32 128, %and, !dbg !2855
  %trunc323 = trunc i32 %or322 to i8, !dbg !2855
  %171 = load ptr, ptr %self, align 8
  %172 = call i64 @std.io.Formatter.out(ptr %retparam324, ptr %171, i8 %trunc323), !dbg !2856
  %not_err325 = icmp eq i64 %172, 0, !dbg !2856
  %173 = call i1 @llvm.expect.i1(i1 %not_err325, i1 true), !dbg !2856
  br i1 %173, label %after_check327, label %assign_optional326, !dbg !2856

assign_optional326:                               ; preds = %noerr_block320
  store i64 %172, ptr %error_var321, align 8, !dbg !2856
  br label %guard_block328, !dbg !2856

after_check327:                                   ; preds = %noerr_block320
  br label %noerr_block329, !dbg !2856

guard_block328:                                   ; preds = %assign_optional326
  %174 = load i64, ptr %error_var321, align 8, !dbg !2856
  ret i64 %174, !dbg !2856

noerr_block329:                                   ; preds = %after_check327
  br label %switch.exit, !dbg !2856

next_if330:                                       ; preds = %next_if309
  %175 = load i32, ptr %c, align 4, !dbg !2857
  %lt331 = icmp ult i32 %175, 65535, !dbg !2857
  %eq332 = icmp eq i1 %lt331, %156, !dbg !2857
  br i1 %eq332, label %switch.case333, label %next_if365, !dbg !2857

switch.case333:                                   ; preds = %next_if330
  %176 = load i32, ptr %c, align 4, !dbg !2858
  %lshr335 = lshr i32 %176, 12, !dbg !2858
  %177 = freeze i32 %lshr335, !dbg !2858
  %or336 = or i32 224, %177, !dbg !2860
  %trunc337 = trunc i32 %or336 to i8, !dbg !2860
  %178 = load ptr, ptr %self, align 8
  %179 = call i64 @std.io.Formatter.out(ptr %retparam338, ptr %178, i8 %trunc337), !dbg !2861
  %not_err339 = icmp eq i64 %179, 0, !dbg !2861
  %180 = call i1 @llvm.expect.i1(i1 %not_err339, i1 true), !dbg !2861
  br i1 %180, label %after_check341, label %assign_optional340, !dbg !2861

assign_optional340:                               ; preds = %switch.case333
  store i64 %179, ptr %error_var334, align 8, !dbg !2861
  br label %guard_block342, !dbg !2861

after_check341:                                   ; preds = %switch.case333
  br label %noerr_block343, !dbg !2861

guard_block342:                                   ; preds = %assign_optional340
  %181 = load i64, ptr %error_var334, align 8, !dbg !2861
  ret i64 %181, !dbg !2861

noerr_block343:                                   ; preds = %after_check341
  %182 = load i32, ptr %c, align 4, !dbg !2862
  %lshr345 = lshr i32 %182, 6, !dbg !2862
  %183 = freeze i32 %lshr345, !dbg !2862
  %and346 = and i32 %183, 63, !dbg !2862
  %or347 = or i32 128, %and346, !dbg !2863
  %trunc348 = trunc i32 %or347 to i8, !dbg !2863
  %184 = load ptr, ptr %self, align 8
  %185 = call i64 @std.io.Formatter.out(ptr %retparam349, ptr %184, i8 %trunc348), !dbg !2864
  %not_err350 = icmp eq i64 %185, 0, !dbg !2864
  %186 = call i1 @llvm.expect.i1(i1 %not_err350, i1 true), !dbg !2864
  br i1 %186, label %after_check352, label %assign_optional351, !dbg !2864

assign_optional351:                               ; preds = %noerr_block343
  store i64 %185, ptr %error_var344, align 8, !dbg !2864
  br label %guard_block353, !dbg !2864

after_check352:                                   ; preds = %noerr_block343
  br label %noerr_block354, !dbg !2864

guard_block353:                                   ; preds = %assign_optional351
  %187 = load i64, ptr %error_var344, align 8, !dbg !2864
  ret i64 %187, !dbg !2864

noerr_block354:                                   ; preds = %after_check352
  %188 = load i32, ptr %c, align 4, !dbg !2865
  %and356 = and i32 %188, 63, !dbg !2865
  %or357 = or i32 128, %and356, !dbg !2866
  %trunc358 = trunc i32 %or357 to i8, !dbg !2866
  %189 = load ptr, ptr %self, align 8
  %190 = call i64 @std.io.Formatter.out(ptr %retparam359, ptr %189, i8 %trunc358), !dbg !2867
  %not_err360 = icmp eq i64 %190, 0, !dbg !2867
  %191 = call i1 @llvm.expect.i1(i1 %not_err360, i1 true), !dbg !2867
  br i1 %191, label %after_check362, label %assign_optional361, !dbg !2867

assign_optional361:                               ; preds = %noerr_block354
  store i64 %190, ptr %error_var355, align 8, !dbg !2867
  br label %guard_block363, !dbg !2867

after_check362:                                   ; preds = %noerr_block354
  br label %noerr_block364, !dbg !2867

guard_block363:                                   ; preds = %assign_optional361
  %192 = load i64, ptr %error_var355, align 8, !dbg !2867
  ret i64 %192, !dbg !2867

noerr_block364:                                   ; preds = %after_check362
  br label %switch.exit, !dbg !2867

next_if365:                                       ; preds = %next_if330
  br label %switch.default366, !dbg !2867

switch.default366:                                ; preds = %next_if365
  %193 = load i32, ptr %c, align 4, !dbg !2868
  %lshr368 = lshr i32 %193, 18, !dbg !2868
  %194 = freeze i32 %lshr368, !dbg !2868
  %or369 = or i32 240, %194, !dbg !2870
  %trunc370 = trunc i32 %or369 to i8, !dbg !2870
  %195 = load ptr, ptr %self, align 8
  %196 = call i64 @std.io.Formatter.out(ptr %retparam371, ptr %195, i8 %trunc370), !dbg !2871
  %not_err372 = icmp eq i64 %196, 0, !dbg !2871
  %197 = call i1 @llvm.expect.i1(i1 %not_err372, i1 true), !dbg !2871
  br i1 %197, label %after_check374, label %assign_optional373, !dbg !2871

assign_optional373:                               ; preds = %switch.default366
  store i64 %196, ptr %error_var367, align 8, !dbg !2871
  br label %guard_block375, !dbg !2871

after_check374:                                   ; preds = %switch.default366
  br label %noerr_block376, !dbg !2871

guard_block375:                                   ; preds = %assign_optional373
  %198 = load i64, ptr %error_var367, align 8, !dbg !2871
  ret i64 %198, !dbg !2871

noerr_block376:                                   ; preds = %after_check374
  %199 = load i32, ptr %c, align 4, !dbg !2872
  %lshr378 = lshr i32 %199, 12, !dbg !2872
  %200 = freeze i32 %lshr378, !dbg !2872
  %and379 = and i32 %200, 63, !dbg !2872
  %or380 = or i32 128, %and379, !dbg !2873
  %trunc381 = trunc i32 %or380 to i8, !dbg !2873
  %201 = load ptr, ptr %self, align 8
  %202 = call i64 @std.io.Formatter.out(ptr %retparam382, ptr %201, i8 %trunc381), !dbg !2874
  %not_err383 = icmp eq i64 %202, 0, !dbg !2874
  %203 = call i1 @llvm.expect.i1(i1 %not_err383, i1 true), !dbg !2874
  br i1 %203, label %after_check385, label %assign_optional384, !dbg !2874

assign_optional384:                               ; preds = %noerr_block376
  store i64 %202, ptr %error_var377, align 8, !dbg !2874
  br label %guard_block386, !dbg !2874

after_check385:                                   ; preds = %noerr_block376
  br label %noerr_block387, !dbg !2874

guard_block386:                                   ; preds = %assign_optional384
  %204 = load i64, ptr %error_var377, align 8, !dbg !2874
  ret i64 %204, !dbg !2874

noerr_block387:                                   ; preds = %after_check385
  %205 = load i32, ptr %c, align 4, !dbg !2875
  %lshr389 = lshr i32 %205, 6, !dbg !2875
  %206 = freeze i32 %lshr389, !dbg !2875
  %and390 = and i32 %206, 63, !dbg !2875
  %or391 = or i32 128, %and390, !dbg !2876
  %trunc392 = trunc i32 %or391 to i8, !dbg !2876
  %207 = load ptr, ptr %self, align 8
  %208 = call i64 @std.io.Formatter.out(ptr %retparam393, ptr %207, i8 %trunc392), !dbg !2877
  %not_err394 = icmp eq i64 %208, 0, !dbg !2877
  %209 = call i1 @llvm.expect.i1(i1 %not_err394, i1 true), !dbg !2877
  br i1 %209, label %after_check396, label %assign_optional395, !dbg !2877

assign_optional395:                               ; preds = %noerr_block387
  store i64 %208, ptr %error_var388, align 8, !dbg !2877
  br label %guard_block397, !dbg !2877

after_check396:                                   ; preds = %noerr_block387
  br label %noerr_block398, !dbg !2877

guard_block397:                                   ; preds = %assign_optional395
  %210 = load i64, ptr %error_var388, align 8, !dbg !2877
  ret i64 %210, !dbg !2877

noerr_block398:                                   ; preds = %after_check396
  %211 = load i32, ptr %c, align 4, !dbg !2878
  %and400 = and i32 %211, 63, !dbg !2878
  %or401 = or i32 128, %and400, !dbg !2879
  %trunc402 = trunc i32 %or401 to i8, !dbg !2879
  %212 = load ptr, ptr %self, align 8
  %213 = call i64 @std.io.Formatter.out(ptr %retparam403, ptr %212, i8 %trunc402), !dbg !2880
  %not_err404 = icmp eq i64 %213, 0, !dbg !2880
  %214 = call i1 @llvm.expect.i1(i1 %not_err404, i1 true), !dbg !2880
  br i1 %214, label %after_check406, label %assign_optional405, !dbg !2880

assign_optional405:                               ; preds = %noerr_block398
  store i64 %213, ptr %error_var399, align 8, !dbg !2880
  br label %guard_block407, !dbg !2880

after_check406:                                   ; preds = %noerr_block398
  br label %noerr_block408, !dbg !2880

guard_block407:                                   ; preds = %assign_optional405
  %215 = load i64, ptr %error_var399, align 8, !dbg !2880
  ret i64 %215, !dbg !2880

noerr_block408:                                   ; preds = %after_check406
  br label %switch.exit, !dbg !2880

switch.exit:                                      ; preds = %noerr_block408, %noerr_block364, %noerr_block329, %noerr_block308
  %216 = load i64, ptr %len, align 8, !dbg !2881
  %217 = load i32, ptr %l, align 4, !dbg !2882
  %zext410 = zext i32 %217 to i64, !dbg !2882
  %218 = load ptr, ptr %self, align 8
  %219 = call i64 @std.io.Formatter.adjust(ptr %retparam411, ptr %218, i64 %zext410), !dbg !2883
  %not_err412 = icmp eq i64 %219, 0, !dbg !2883
  %220 = call i1 @llvm.expect.i1(i1 %not_err412, i1 true), !dbg !2883
  br i1 %220, label %after_check414, label %assign_optional413, !dbg !2883

assign_optional413:                               ; preds = %switch.exit
  store i64 %219, ptr %error_var409, align 8, !dbg !2883
  br label %guard_block415, !dbg !2883

after_check414:                                   ; preds = %switch.exit
  br label %noerr_block416, !dbg !2883

guard_block415:                                   ; preds = %assign_optional413
  %221 = load i64, ptr %error_var409, align 8, !dbg !2883
  ret i64 %221, !dbg !2883

noerr_block416:                                   ; preds = %after_check414
  %222 = load i64, ptr %retparam411, align 8, !dbg !2883
  %add417 = add i64 %216, %222, !dbg !2881
  store i64 %add417, ptr %len, align 8, !dbg !2881
  %223 = load i64, ptr %len, align 8, !dbg !2884
  store i64 %223, ptr %0, align 8, !dbg !2884
  ret i64 0, !dbg !2884

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg2, align 8
  %224 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %224(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 607), !dbg !2669
  unreachable, !dbg !2669

panic34:                                          ; preds = %switch.case
  store %"char[]" { ptr @.panic_msg.78, i64 52 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg37, align 8
  %225 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %225(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 29), !dbg !2715
  unreachable, !dbg !2715

panic51:                                          ; preds = %switch.case49
  store %"char[]" { ptr @.panic_msg.81, i64 53 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg54, align 8
  %226 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %226(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 33), !dbg !2725
  unreachable, !dbg !2725

panic82:                                          ; preds = %switch.case80
  store %"char[]" { ptr @.panic_msg.82, i64 51 }, ptr %indirectarg83, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg85, align 8
  %227 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %227(ptr align 8 %indirectarg83, ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, i32 38), !dbg !2740
  unreachable, !dbg !2740

panic114:                                         ; preds = %switch.case111
  store %"char[]" { ptr @.panic_msg.83, i64 52 }, ptr %indirectarg115, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg116, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg117, align 8
  %228 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %228(ptr align 8 %indirectarg115, ptr align 8 %indirectarg116, ptr align 8 %indirectarg117, i32 43), !dbg !2755
  unreachable, !dbg !2755

panic148:                                         ; preds = %switch.case145
  store %"char[]" { ptr @.panic_msg.84, i64 54 }, ptr %indirectarg149, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg150, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg151, align 8
  %229 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %229(ptr align 8 %indirectarg149, ptr align 8 %indirectarg150, ptr align 8 %indirectarg151, i32 48), !dbg !2770
  unreachable, !dbg !2770

panic183:                                         ; preds = %switch.case180
  store %"char[]" { ptr @.panic_msg.78, i64 52 }, ptr %indirectarg184, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg185, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg186, align 8
  %230 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %230(ptr align 8 %indirectarg184, ptr align 8 %indirectarg185, ptr align 8 %indirectarg186, i32 53), !dbg !2785
  unreachable, !dbg !2785

panic203:                                         ; preds = %switch.case200
  store %"char[]" { ptr @.panic_msg.85, i64 54 }, ptr %indirectarg204, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg205, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg206, align 8
  %231 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %231(ptr align 8 %indirectarg204, ptr align 8 %indirectarg205, ptr align 8 %indirectarg206, i32 57), !dbg !2795
  unreachable, !dbg !2795

panic228:                                         ; preds = %switch.case225
  store %"char[]" { ptr @.panic_msg.86, i64 52 }, ptr %indirectarg229, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg230, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg231, align 8
  %232 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %232(ptr align 8 %indirectarg229, ptr align 8 %indirectarg230, ptr align 8 %indirectarg231, i32 61), !dbg !2807
  unreachable, !dbg !2807

panic250:                                         ; preds = %switch.case247
  store %"char[]" { ptr @.panic_msg.87, i64 53 }, ptr %indirectarg251, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg252, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg253, align 8
  %233 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %233(ptr align 8 %indirectarg251, ptr align 8 %indirectarg252, ptr align 8 %indirectarg253, i32 65), !dbg !2819
  unreachable, !dbg !2819

panic275:                                         ; preds = %switch.case272
  store %"char[]" { ptr @.panic_msg.88, i64 55 }, ptr %indirectarg276, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg277, align 8
  store %"char[]" { ptr @.func.184, i64 8 }, ptr %indirectarg278, align 8
  %234 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %234(ptr align 8 %indirectarg276, ptr align 8 %indirectarg277, ptr align 8 %indirectarg278, i32 69), !dbg !2831
  unreachable, !dbg !2831
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.Formatter.out_reverse(ptr %0, ptr %1, ptr align 8 %2) #0 !dbg !2885 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %n = alloca i64, align 8
  %buffer_start_idx = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %len = alloca i64, align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %error_var34 = alloca i64, align 8
  %taddr = alloca i64, align 8
  %taddr37 = alloca i64, align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg42 = alloca %"any[]", align 8
  %retparam45 = alloca i64, align 8
  %error_var52 = alloca i64, align 8
  %retparam53 = alloca i64, align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !2886
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !2886
  br i1 %4, label %panic, label %checkok, !dbg !2886

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !2887, metadata !DIExpression()), !dbg !2888
  call void @llvm.dbg.declare(metadata ptr %2, metadata !2889, metadata !DIExpression()), !dbg !2890
  call void @llvm.dbg.declare(metadata ptr %n, metadata !2891, metadata !DIExpression()), !dbg !2892
  store i64 0, ptr %n, align 8, !dbg !2892
  call void @llvm.dbg.declare(metadata ptr %buffer_start_idx, metadata !2893, metadata !DIExpression()), !dbg !2894
  %5 = load ptr, ptr %self, align 8, !dbg !2895
  %checknull = icmp eq ptr %5, null, !dbg !2895
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2895
  br i1 %6, label %panic3, label %checkok7, !dbg !2895

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !2895
  %ptradd8 = getelementptr inbounds i8, ptr %ptradd, i64 16, !dbg !2895
  %7 = load i64, ptr %ptradd8, align 8, !dbg !2895
  store i64 %7, ptr %buffer_start_idx, align 8, !dbg !2895
  call void @llvm.dbg.declare(metadata ptr %len, metadata !2896, metadata !DIExpression()), !dbg !2897
  %ptradd9 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2898
  %8 = load i64, ptr %ptradd9, align 8, !dbg !2898
  store i64 %8, ptr %len, align 8, !dbg !2898
  %9 = load ptr, ptr %self, align 8, !dbg !2899
  %checknull10 = icmp eq ptr %9, null, !dbg !2899
  %10 = call i1 @llvm.expect.i1(i1 %checknull10, i1 false), !dbg !2899
  br i1 %10, label %panic11, label %checkok15, !dbg !2899

checkok15:                                        ; preds = %checkok7
  %ptradd16 = getelementptr inbounds i8, ptr %9, i64 16, !dbg !2899
  %11 = load i32, ptr %ptradd16, align 8, !dbg !2899
  %12 = and i32 1, %11, !dbg !2899
  %trunc = trunc i32 %12 to i8, !dbg !2899
  %13 = trunc i8 %trunc to i1, !dbg !2899
  %not = xor i1 %13, true, !dbg !2899
  br i1 %not, label %and.rhs, label %and.phi, !dbg !2899

and.rhs:                                          ; preds = %checkok15
  %14 = load ptr, ptr %self, align 8, !dbg !2900
  %checknull17 = icmp eq ptr %14, null, !dbg !2900
  %15 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !2900
  br i1 %15, label %panic18, label %checkok22, !dbg !2900

checkok22:                                        ; preds = %and.rhs
  %ptradd23 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !2900
  %16 = load i32, ptr %ptradd23, align 8, !dbg !2900
  %lshrl = lshr i32 %16, 1, !dbg !2900
  %17 = and i32 1, %lshrl, !dbg !2900
  %trunc24 = trunc i32 %17 to i8, !dbg !2900
  %18 = trunc i8 %trunc24 to i1, !dbg !2900
  %not25 = xor i1 %18, true, !dbg !2900
  br label %and.phi, !dbg !2900

and.phi:                                          ; preds = %checkok22, %checkok15
  %val = phi i1 [ false, %checkok15 ], [ %not25, %checkok22 ], !dbg !2900
  br i1 %val, label %if.then, label %if.exit, !dbg !2900

if.then:                                          ; preds = %and.phi
  %19 = load i64, ptr %n, align 8, !dbg !2901
  %20 = load ptr, ptr %self, align 8, !dbg !2903
  %checknull26 = icmp eq ptr %20, null, !dbg !2903
  %21 = call i1 @llvm.expect.i1(i1 %checknull26, i1 false), !dbg !2903
  br i1 %21, label %panic27, label %checkok31, !dbg !2903

checkok31:                                        ; preds = %if.then
  %ptradd32 = getelementptr inbounds i8, ptr %20, i64 16, !dbg !2903
  %ptradd33 = getelementptr inbounds i8, ptr %ptradd32, i64 4, !dbg !2903
  %22 = load i32, ptr %ptradd33, align 4, !dbg !2903
  %zext = zext i32 %22 to i64, !dbg !2903
  %23 = load ptr, ptr %self, align 8
  %24 = load i64, ptr %len, align 8
  %25 = call i64 @std.io.Formatter.pad(ptr %retparam, ptr %23, i8 32, i64 %zext, i64 %24) #5, !dbg !2904
  %not_err = icmp eq i64 %25, 0, !dbg !2904
  %26 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2904
  br i1 %26, label %after_check, label %assign_optional, !dbg !2904

assign_optional:                                  ; preds = %checkok31
  store i64 %25, ptr %error_var, align 8, !dbg !2904
  br label %guard_block, !dbg !2904

after_check:                                      ; preds = %checkok31
  br label %noerr_block, !dbg !2904

guard_block:                                      ; preds = %assign_optional
  %27 = load i64, ptr %error_var, align 8, !dbg !2904
  ret i64 %27, !dbg !2904

noerr_block:                                      ; preds = %after_check
  %28 = load i64, ptr %retparam, align 8, !dbg !2904
  %add = add i64 %19, %28, !dbg !2901
  store i64 %add, ptr %n, align 8, !dbg !2901
  br label %if.exit, !dbg !2901

if.exit:                                          ; preds = %noerr_block, %and.phi
  br label %loop.cond, !dbg !2905

loop.cond:                                        ; preds = %noerr_block50, %if.exit
  %29 = load i64, ptr %len, align 8, !dbg !2906
  %intbool = icmp ne i64 %29, 0, !dbg !2906
  br i1 %intbool, label %loop.body, label %loop.exit, !dbg !2906

loop.body:                                        ; preds = %loop.cond
  %30 = load i64, ptr %n, align 8, !dbg !2908
  %ptradd35 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2909
  %31 = load i64, ptr %ptradd35, align 8, !dbg !2909
  %32 = load ptr, ptr %2, align 8, !dbg !2909
  %33 = load i64, ptr %len, align 8, !dbg !2910
  %sub = sub i64 %33, 1, !dbg !2910
  store i64 %sub, ptr %len, align 8, !dbg !2910
  %ge = icmp uge i64 %sub, %31, !dbg !2910
  %34 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !2910
  br i1 %34, label %panic36, label %checkok43, !dbg !2910

checkok43:                                        ; preds = %loop.body
  %ptradd44 = getelementptr inbounds i8, ptr %32, i64 %sub, !dbg !2911
  %35 = load ptr, ptr %self, align 8
  %36 = load i8, ptr %ptradd44, align 1
  %37 = call i64 @std.io.Formatter.out(ptr %retparam45, ptr %35, i8 %36), !dbg !2912
  %not_err46 = icmp eq i64 %37, 0, !dbg !2912
  %38 = call i1 @llvm.expect.i1(i1 %not_err46, i1 true), !dbg !2912
  br i1 %38, label %after_check48, label %assign_optional47, !dbg !2912

assign_optional47:                                ; preds = %checkok43
  store i64 %37, ptr %error_var34, align 8, !dbg !2912
  br label %guard_block49, !dbg !2912

after_check48:                                    ; preds = %checkok43
  br label %noerr_block50, !dbg !2912

guard_block49:                                    ; preds = %assign_optional47
  %39 = load i64, ptr %error_var34, align 8, !dbg !2912
  ret i64 %39, !dbg !2912

noerr_block50:                                    ; preds = %after_check48
  %40 = load i64, ptr %retparam45, align 8, !dbg !2912
  %add51 = add i64 %30, %40, !dbg !2908
  store i64 %add51, ptr %n, align 8, !dbg !2908
  br label %loop.cond, !dbg !2908

loop.exit:                                        ; preds = %loop.cond
  %41 = load i64, ptr %n, align 8, !dbg !2913
  %42 = load ptr, ptr %self, align 8
  %43 = load i64, ptr %n, align 8
  %44 = call i64 @std.io.Formatter.adjust(ptr %retparam53, ptr %42, i64 %43), !dbg !2914
  %not_err54 = icmp eq i64 %44, 0, !dbg !2914
  %45 = call i1 @llvm.expect.i1(i1 %not_err54, i1 true), !dbg !2914
  br i1 %45, label %after_check56, label %assign_optional55, !dbg !2914

assign_optional55:                                ; preds = %loop.exit
  store i64 %44, ptr %error_var52, align 8, !dbg !2914
  br label %guard_block57, !dbg !2914

after_check56:                                    ; preds = %loop.exit
  br label %noerr_block58, !dbg !2914

guard_block57:                                    ; preds = %assign_optional55
  %46 = load i64, ptr %error_var52, align 8, !dbg !2914
  ret i64 %46, !dbg !2914

noerr_block58:                                    ; preds = %after_check56
  %47 = load i64, ptr %retparam53, align 8, !dbg !2914
  %add59 = add i64 %41, %47, !dbg !2913
  store i64 %add59, ptr %n, align 8, !dbg !2913
  %48 = load i64, ptr %n, align 8, !dbg !2915
  store i64 %48, ptr %0, align 8, !dbg !2915
  ret i64 0, !dbg !2915

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.188, i64 11 }, ptr %indirectarg2, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 637), !dbg !2888
  unreachable, !dbg !2888

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.188, i64 11 }, ptr %indirectarg6, align 8
  %50 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %50(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 640), !dbg !2895
  unreachable, !dbg !2895

panic11:                                          ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.188, i64 11 }, ptr %indirectarg14, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 643), !dbg !2899
  unreachable, !dbg !2899

panic18:                                          ; preds = %and.rhs
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.188, i64 11 }, ptr %indirectarg21, align 8
  %52 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %52(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 643), !dbg !2900
  unreachable, !dbg !2900

panic27:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.func.188, i64 11 }, ptr %indirectarg30, align 8
  %53 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %53(ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, i32 645), !dbg !2903
  unreachable, !dbg !2903

panic36:                                          ; preds = %loop.body
  store i64 %31, ptr %taddr, align 8
  %54 = insertvalue %any undef, ptr %taddr, 0
  %55 = insertvalue %any %54, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %sub, ptr %taddr37, align 8
  %56 = insertvalue %any undef, ptr %taddr37, 0
  %57 = insertvalue %any %56, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.188, i64 11 }, ptr %indirectarg40, align 8
  store %any %55, ptr %varargslots, align 16
  %ptradd41 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %57, ptr %ptradd41, align 16
  %58 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %58, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg42, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 648, ptr align 8 %indirectarg42), !dbg !2911
  unreachable, !dbg !2911
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.int_from_any(ptr %0, ptr align 8 %1, ptr %2) #0 !dbg !2916 {
entry:
  %is_neg = alloca ptr, align 8
  %switch = alloca i8, align 1
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %reterr10 = alloca i64, align 8
  %self = alloca ptr, align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %retparam = alloca i128, align 16
  %indirectarg44 = alloca %any, align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %switch52 = alloca i64, align 8
  %arg = alloca ptr, align 8
  %reterr57 = alloca i64, align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %arg71 = alloca ptr, align 8
  %val = alloca i32, align 4
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %reterr78 = alloca i64, align 8
  %indirectarg81 = alloca %"char[]", align 8
  %indirectarg82 = alloca %"char[]", align 8
  %indirectarg83 = alloca %"char[]", align 8
  %arg96 = alloca ptr, align 8
  %val97 = alloca i32, align 4
  %indirectarg100 = alloca %"char[]", align 8
  %indirectarg101 = alloca %"char[]", align 8
  %indirectarg102 = alloca %"char[]", align 8
  %reterr105 = alloca i64, align 8
  %indirectarg108 = alloca %"char[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %indirectarg110 = alloca %"char[]", align 8
  %arg129 = alloca ptr, align 8
  %val130 = alloca i32, align 4
  %indirectarg133 = alloca %"char[]", align 8
  %indirectarg134 = alloca %"char[]", align 8
  %indirectarg135 = alloca %"char[]", align 8
  %reterr137 = alloca i64, align 8
  %indirectarg140 = alloca %"char[]", align 8
  %indirectarg141 = alloca %"char[]", align 8
  %indirectarg142 = alloca %"char[]", align 8
  %arg161 = alloca ptr, align 8
  %val162 = alloca i64, align 8
  %indirectarg165 = alloca %"char[]", align 8
  %indirectarg166 = alloca %"char[]", align 8
  %indirectarg167 = alloca %"char[]", align 8
  %reterr169 = alloca i64, align 8
  %indirectarg172 = alloca %"char[]", align 8
  %indirectarg173 = alloca %"char[]", align 8
  %indirectarg174 = alloca %"char[]", align 8
  %arg193 = alloca ptr, align 8
  %val194 = alloca i128, align 16
  %indirectarg197 = alloca %"char[]", align 8
  %indirectarg198 = alloca %"char[]", align 8
  %indirectarg199 = alloca %"char[]", align 8
  %reterr201 = alloca i64, align 8
  %indirectarg204 = alloca %"char[]", align 8
  %indirectarg205 = alloca %"char[]", align 8
  %indirectarg206 = alloca %"char[]", align 8
  %arg223 = alloca ptr, align 8
  %reterr224 = alloca i64, align 8
  %indirectarg227 = alloca %"char[]", align 8
  %indirectarg228 = alloca %"char[]", align 8
  %indirectarg229 = alloca %"char[]", align 8
  %arg240 = alloca ptr, align 8
  %reterr241 = alloca i64, align 8
  %indirectarg244 = alloca %"char[]", align 8
  %indirectarg245 = alloca %"char[]", align 8
  %indirectarg246 = alloca %"char[]", align 8
  %arg257 = alloca ptr, align 8
  %reterr258 = alloca i64, align 8
  %indirectarg261 = alloca %"char[]", align 8
  %indirectarg262 = alloca %"char[]", align 8
  %indirectarg263 = alloca %"char[]", align 8
  %arg274 = alloca ptr, align 8
  %reterr275 = alloca i64, align 8
  %indirectarg278 = alloca %"char[]", align 8
  %indirectarg279 = alloca %"char[]", align 8
  %indirectarg280 = alloca %"char[]", align 8
  %arg291 = alloca ptr, align 8
  %reterr292 = alloca i64, align 8
  %indirectarg295 = alloca %"char[]", align 8
  %indirectarg296 = alloca %"char[]", align 8
  %indirectarg297 = alloca %"char[]", align 8
  %arg307 = alloca ptr, align 8
  %f = alloca float, align 4
  %indirectarg310 = alloca %"char[]", align 8
  %indirectarg311 = alloca %"char[]", align 8
  %indirectarg312 = alloca %"char[]", align 8
  %reterr314 = alloca i64, align 8
  %indirectarg317 = alloca %"char[]", align 8
  %indirectarg318 = alloca %"char[]", align 8
  %indirectarg319 = alloca %"char[]", align 8
  %arg334 = alloca ptr, align 8
  %d = alloca double, align 8
  %indirectarg337 = alloca %"char[]", align 8
  %indirectarg338 = alloca %"char[]", align 8
  %indirectarg339 = alloca %"char[]", align 8
  %reterr341 = alloca i64, align 8
  %indirectarg344 = alloca %"char[]", align 8
  %indirectarg345 = alloca %"char[]", align 8
  %indirectarg346 = alloca %"char[]", align 8
  call void @llvm.dbg.declare(metadata ptr %1, metadata !2921, metadata !DIExpression()), !dbg !2922
  store ptr %2, ptr %is_neg, align 8
  call void @llvm.dbg.declare(metadata ptr %is_neg, metadata !2923, metadata !DIExpression()), !dbg !2924
  %ptradd = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2925
  %3 = load i64, ptr %ptradd, align 8, !dbg !2925
  %"introspect*" = inttoptr i64 %3 to ptr, !dbg !2925
  %typeid.kind = load i8, ptr %"introspect*", align 8, !dbg !2925
  store i8 %typeid.kind, ptr %switch, align 1
  br label %switch.entry

switch.entry:                                     ; preds = %entry
  %4 = load i8, ptr %switch, align 1
  switch i8 %4, label %switch.default [
    i8 19, label %switch.case
    i8 18, label %switch.case9
    i8 8, label %switch.case9
  ]

switch.case:                                      ; preds = %switch.entry
  %5 = load ptr, ptr %is_neg, align 8, !dbg !2927
  %checknull = icmp eq ptr %5, null, !dbg !2927
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !2927
  br i1 %6, label %panic, label %checkok, !dbg !2927

checkok:                                          ; preds = %switch.case
  store i8 0, ptr %5, align 1, !dbg !2929
  %7 = load ptr, ptr %1, align 8, !dbg !2930
  %checknull3 = icmp eq ptr %7, null, !dbg !2930
  %8 = call i1 @llvm.expect.i1(i1 %checknull3, i1 false), !dbg !2930
  br i1 %8, label %panic4, label %checkok8, !dbg !2930

checkok8:                                         ; preds = %checkok
  %9 = load ptr, ptr %7, align 8, !dbg !2931
  %ptrxi = ptrtoint ptr %9 to i64, !dbg !2931
  %zext = zext i64 %ptrxi to i128, !dbg !2931
  store i128 %zext, ptr %0, align 16, !dbg !2931
  ret i64 0, !dbg !2931

switch.case9:                                     ; preds = %switch.entry, %switch.entry
  store ptr %1, ptr %self, align 8
  %10 = load ptr, ptr %self, align 8, !dbg !2932
  %checknull11 = icmp eq ptr %10, null, !dbg !2932
  %11 = call i1 @llvm.expect.i1(i1 %checknull11, i1 false), !dbg !2932
  br i1 %11, label %panic12, label %checkok16, !dbg !2932

checkok16:                                        ; preds = %switch.case9
  %12 = load ptr, ptr %10, align 8, !dbg !2932
  %13 = load ptr, ptr %self, align 8, !dbg !2936
  %checknull17 = icmp eq ptr %13, null, !dbg !2936
  %14 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !2936
  br i1 %14, label %panic18, label %checkok22, !dbg !2936

checkok22:                                        ; preds = %checkok16
  %ptradd23 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !2936
  %15 = load i64, ptr %ptradd23, align 8, !dbg !2936
  %"introspect*24" = inttoptr i64 %15 to ptr, !dbg !2936
  %typeid.kind25 = load i8, ptr %"introspect*24", align 8, !dbg !2936
  %eq = icmp eq i8 %typeid.kind25, 15, !dbg !2936
  br i1 %eq, label %check_type_ok, label %check_next, !dbg !2936

check_next:                                       ; preds = %checkok22
  %eq26 = icmp eq i8 %typeid.kind25, 19, !dbg !2936
  br i1 %eq26, label %check_type_ok, label %check_next27, !dbg !2936

check_next27:                                     ; preds = %check_next
  %eq28 = icmp eq i8 %typeid.kind25, 17, !dbg !2936
  br i1 %eq28, label %check_type_ok, label %check_next29, !dbg !2936

check_next29:                                     ; preds = %check_next27
  %eq30 = icmp eq i8 %typeid.kind25, 8, !dbg !2936
  br i1 %eq30, label %check_type_ok, label %check_next31, !dbg !2936

check_next31:                                     ; preds = %check_next29
  %eq32 = icmp eq i8 %typeid.kind25, 16, !dbg !2936
  br i1 %eq32, label %check_type_ok, label %check_next33, !dbg !2936

check_next33:                                     ; preds = %check_next31
  %eq34 = icmp eq i8 %typeid.kind25, 18, !dbg !2936
  br i1 %eq34, label %check_type_ok, label %check_next35, !dbg !2936

check_next35:                                     ; preds = %check_next33
  %eq36 = icmp eq i8 %typeid.kind25, 14, !dbg !2936
  br i1 %eq36, label %check_type_ok, label %check_next37, !dbg !2936

check_next37:                                     ; preds = %check_next35
  %eq38 = icmp eq i8 %typeid.kind25, 12, !dbg !2936
  br i1 %eq38, label %check_type_ok, label %check_next39, !dbg !2936

check_next39:                                     ; preds = %check_next37
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg42, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, i32 199), !dbg !2936
  unreachable, !dbg !2936

check_type_ok:                                    ; preds = %check_next37, %check_next35, %check_next33, %check_next31, %check_next29, %check_next27, %check_next, %checkok22
  %ptradd43 = getelementptr inbounds i8, ptr %"introspect*24", i64 32, !dbg !2936
  %typeid.inner = load i64, ptr %ptradd43, align 8, !dbg !2936
  %17 = insertvalue %any undef, ptr %12, 0, !dbg !2936
  %18 = insertvalue %any %17, i64 %typeid.inner, 1, !dbg !2936
  store %any %18, ptr %indirectarg44, align 8
  %19 = load ptr, ptr %is_neg, align 8
  %20 = call i64 @std.io.int_from_any(ptr %retparam, ptr align 8 %indirectarg44, ptr %19), !dbg !2937
  %not_err = icmp eq i64 %20, 0, !dbg !2937
  %21 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !2937
  br i1 %21, label %after_check, label %assign_optional, !dbg !2937

assign_optional:                                  ; preds = %check_type_ok
  store i64 %20, ptr %reterr10, align 8, !dbg !2937
  br label %err_retblock, !dbg !2937

after_check:                                      ; preds = %check_type_ok
  %22 = load i128, ptr %retparam, align 16, !dbg !2937
  store i128 %22, ptr %0, align 16, !dbg !2937
  ret i64 0, !dbg !2937

err_retblock:                                     ; preds = %assign_optional
  %23 = load i64, ptr %reterr10, align 8, !dbg !2937
  ret i64 %23, !dbg !2937

switch.default:                                   ; preds = %switch.entry
  br label %switch.exit, !dbg !2938

switch.exit:                                      ; preds = %switch.default
  %24 = load ptr, ptr %is_neg, align 8, !dbg !2940
  %checknull45 = icmp eq ptr %24, null, !dbg !2940
  %25 = call i1 @llvm.expect.i1(i1 %checknull45, i1 false), !dbg !2940
  br i1 %25, label %panic46, label %checkok50, !dbg !2940

checkok50:                                        ; preds = %switch.exit
  store i8 0, ptr %24, align 1, !dbg !2941
  %ptradd51 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2942
  %26 = load i64, ptr %ptradd51, align 8
  store i64 %26, ptr %switch52, align 8
  br label %switch.entry53

switch.entry53:                                   ; preds = %checkok50
  %27 = load i64, ptr %switch52, align 8
  br label %check_subtype, !dbg !2944

check_subtype:                                    ; preds = %parent_type_block, %switch.entry53
  %28 = phi i64 [ %27, %switch.entry53 ], [ %typeid.parent, %parent_type_block ], !dbg !2944
  %eq54 = icmp eq i64 ptrtoint (ptr @"$ct.bool" to i64), %28, !dbg !2944
  br i1 %eq54, label %result_block, label %parent_type_block, !dbg !2944

parent_type_block:                                ; preds = %check_subtype
  %29 = inttoptr i64 %28 to ptr, !dbg !2944
  %ptradd55 = getelementptr inbounds i8, ptr %29, i64 8, !dbg !2944
  %typeid.parent = load i64, ptr %ptradd55, align 8, !dbg !2944
  %30 = icmp eq i64 %typeid.parent, 0, !dbg !2944
  br i1 %30, label %result_block, label %check_subtype, !dbg !2944

result_block:                                     ; preds = %parent_type_block, %check_subtype
  %31 = phi i1 [ false, %parent_type_block ], [ true, %check_subtype ], !dbg !2944
  br i1 %31, label %switch.case56, label %next_if, !dbg !2944

switch.case56:                                    ; preds = %result_block
  call void @llvm.dbg.declare(metadata ptr %arg, metadata !2945, metadata !DIExpression()), !dbg !2947
  %32 = load ptr, ptr %1, align 8, !dbg !2947
  store ptr %32, ptr %arg, align 8, !dbg !2947
  %33 = load ptr, ptr %arg, align 8, !dbg !2948
  %checknull58 = icmp eq ptr %33, null, !dbg !2948
  %34 = call i1 @llvm.expect.i1(i1 %checknull58, i1 false), !dbg !2948
  br i1 %34, label %panic59, label %checkok63, !dbg !2948

checkok63:                                        ; preds = %switch.case56
  %35 = load i8, ptr %33, align 1, !dbg !2948
  %36 = trunc i8 %35 to i1, !dbg !2948
  %boolsi = zext i1 %36 to i128, !dbg !2948
  store i128 %boolsi, ptr %0, align 16, !dbg !2948
  ret i64 0, !dbg !2948

next_if:                                          ; preds = %result_block
  br label %check_subtype64, !dbg !2949

check_subtype64:                                  ; preds = %parent_type_block66, %next_if
  %37 = phi i64 [ %27, %next_if ], [ %typeid.parent68, %parent_type_block66 ], !dbg !2949
  %eq65 = icmp eq i64 ptrtoint (ptr @"$ct.ichar" to i64), %37, !dbg !2949
  br i1 %eq65, label %result_block69, label %parent_type_block66, !dbg !2949

parent_type_block66:                              ; preds = %check_subtype64
  %38 = inttoptr i64 %37 to ptr, !dbg !2949
  %ptradd67 = getelementptr inbounds i8, ptr %38, i64 8, !dbg !2949
  %typeid.parent68 = load i64, ptr %ptradd67, align 8, !dbg !2949
  %39 = icmp eq i64 %typeid.parent68, 0, !dbg !2949
  br i1 %39, label %result_block69, label %check_subtype64, !dbg !2949

result_block69:                                   ; preds = %parent_type_block66, %check_subtype64
  %40 = phi i1 [ false, %parent_type_block66 ], [ true, %check_subtype64 ], !dbg !2949
  br i1 %40, label %switch.case70, label %next_if88, !dbg !2949

switch.case70:                                    ; preds = %result_block69
  call void @llvm.dbg.declare(metadata ptr %arg71, metadata !2950, metadata !DIExpression()), !dbg !2953
  %41 = load ptr, ptr %1, align 8, !dbg !2953
  store ptr %41, ptr %arg71, align 8, !dbg !2953
  call void @llvm.dbg.declare(metadata ptr %val, metadata !2954, metadata !DIExpression()), !dbg !2955
  %42 = load ptr, ptr %arg71, align 8, !dbg !2956
  %checknull72 = icmp eq ptr %42, null, !dbg !2956
  %43 = call i1 @llvm.expect.i1(i1 %checknull72, i1 false), !dbg !2956
  br i1 %43, label %panic73, label %checkok77, !dbg !2956

checkok77:                                        ; preds = %switch.case70
  %44 = load i8, ptr %42, align 1, !dbg !2956
  %sext = sext i8 %44 to i32, !dbg !2956
  store i32 %sext, ptr %val, align 4, !dbg !2956
  %45 = load ptr, ptr %is_neg, align 8, !dbg !2957
  %checknull79 = icmp eq ptr %45, null, !dbg !2957
  %46 = call i1 @llvm.expect.i1(i1 %checknull79, i1 false), !dbg !2957
  br i1 %46, label %panic80, label %checkok84, !dbg !2957

checkok84:                                        ; preds = %checkok77
  %47 = load i32, ptr %val, align 4, !dbg !2958
  %lt = icmp slt i32 %47, 0, !dbg !2958
  %48 = zext i1 %lt to i8, !dbg !2958
  store i8 %48, ptr %45, align 1, !dbg !2958
  %49 = trunc i8 %48 to i1, !dbg !2958
  br i1 %49, label %cond.lhs, label %cond.rhs, !dbg !2958

cond.lhs:                                         ; preds = %checkok84
  %50 = load i32, ptr %val, align 4, !dbg !2959
  %sext85 = sext i32 %50 to i128, !dbg !2959
  %bnot = xor i128 %sext85, -1, !dbg !2959
  %add = add i128 %bnot, 1, !dbg !2960
  br label %cond.phi, !dbg !2960

cond.rhs:                                         ; preds = %checkok84
  %51 = load i32, ptr %val, align 4, !dbg !2961
  %sext86 = sext i32 %51 to i128, !dbg !2961
  br label %cond.phi, !dbg !2961

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val87 = phi i128 [ %add, %cond.lhs ], [ %sext86, %cond.rhs ], !dbg !2961
  store i128 %val87, ptr %0, align 16, !dbg !2961
  ret i64 0, !dbg !2961

next_if88:                                        ; preds = %result_block69
  br label %check_subtype89, !dbg !2962

check_subtype89:                                  ; preds = %parent_type_block91, %next_if88
  %52 = phi i64 [ %27, %next_if88 ], [ %typeid.parent93, %parent_type_block91 ], !dbg !2962
  %eq90 = icmp eq i64 ptrtoint (ptr @"$ct.short" to i64), %52, !dbg !2962
  br i1 %eq90, label %result_block94, label %parent_type_block91, !dbg !2962

parent_type_block91:                              ; preds = %check_subtype89
  %53 = inttoptr i64 %52 to ptr, !dbg !2962
  %ptradd92 = getelementptr inbounds i8, ptr %53, i64 8, !dbg !2962
  %typeid.parent93 = load i64, ptr %ptradd92, align 8, !dbg !2962
  %54 = icmp eq i64 %typeid.parent93, 0, !dbg !2962
  br i1 %54, label %result_block94, label %check_subtype89, !dbg !2962

result_block94:                                   ; preds = %parent_type_block91, %check_subtype89
  %55 = phi i1 [ false, %parent_type_block91 ], [ true, %check_subtype89 ], !dbg !2962
  br i1 %55, label %switch.case95, label %next_if121, !dbg !2962

switch.case95:                                    ; preds = %result_block94
  call void @llvm.dbg.declare(metadata ptr %arg96, metadata !2963, metadata !DIExpression()), !dbg !2966
  %56 = load ptr, ptr %1, align 8, !dbg !2966
  store ptr %56, ptr %arg96, align 8, !dbg !2966
  call void @llvm.dbg.declare(metadata ptr %val97, metadata !2967, metadata !DIExpression()), !dbg !2968
  %57 = load ptr, ptr %arg96, align 8, !dbg !2969
  %checknull98 = icmp eq ptr %57, null, !dbg !2969
  %58 = call i1 @llvm.expect.i1(i1 %checknull98, i1 false), !dbg !2969
  br i1 %58, label %panic99, label %checkok103, !dbg !2969

checkok103:                                       ; preds = %switch.case95
  %59 = load i16, ptr %57, align 2, !dbg !2969
  %sext104 = sext i16 %59 to i32, !dbg !2969
  store i32 %sext104, ptr %val97, align 4, !dbg !2969
  %60 = load ptr, ptr %is_neg, align 8, !dbg !2970
  %checknull106 = icmp eq ptr %60, null, !dbg !2970
  %61 = call i1 @llvm.expect.i1(i1 %checknull106, i1 false), !dbg !2970
  br i1 %61, label %panic107, label %checkok111, !dbg !2970

checkok111:                                       ; preds = %checkok103
  %62 = load i32, ptr %val97, align 4, !dbg !2971
  %lt112 = icmp slt i32 %62, 0, !dbg !2971
  %63 = zext i1 %lt112 to i8, !dbg !2971
  store i8 %63, ptr %60, align 1, !dbg !2971
  %64 = trunc i8 %63 to i1, !dbg !2971
  br i1 %64, label %cond.lhs113, label %cond.rhs117, !dbg !2971

cond.lhs113:                                      ; preds = %checkok111
  %65 = load i32, ptr %val97, align 4, !dbg !2972
  %sext114 = sext i32 %65 to i128, !dbg !2972
  %bnot115 = xor i128 %sext114, -1, !dbg !2972
  %add116 = add i128 %bnot115, 1, !dbg !2973
  br label %cond.phi119, !dbg !2973

cond.rhs117:                                      ; preds = %checkok111
  %66 = load i32, ptr %val97, align 4, !dbg !2974
  %sext118 = sext i32 %66 to i128, !dbg !2974
  br label %cond.phi119, !dbg !2974

cond.phi119:                                      ; preds = %cond.rhs117, %cond.lhs113
  %val120 = phi i128 [ %add116, %cond.lhs113 ], [ %sext118, %cond.rhs117 ], !dbg !2974
  store i128 %val120, ptr %0, align 16, !dbg !2974
  ret i64 0, !dbg !2974

next_if121:                                       ; preds = %result_block94
  br label %check_subtype122, !dbg !2975

check_subtype122:                                 ; preds = %parent_type_block124, %next_if121
  %67 = phi i64 [ %27, %next_if121 ], [ %typeid.parent126, %parent_type_block124 ], !dbg !2975
  %eq123 = icmp eq i64 ptrtoint (ptr @"$ct.int" to i64), %67, !dbg !2975
  br i1 %eq123, label %result_block127, label %parent_type_block124, !dbg !2975

parent_type_block124:                             ; preds = %check_subtype122
  %68 = inttoptr i64 %67 to ptr, !dbg !2975
  %ptradd125 = getelementptr inbounds i8, ptr %68, i64 8, !dbg !2975
  %typeid.parent126 = load i64, ptr %ptradd125, align 8, !dbg !2975
  %69 = icmp eq i64 %typeid.parent126, 0, !dbg !2975
  br i1 %69, label %result_block127, label %check_subtype122, !dbg !2975

result_block127:                                  ; preds = %parent_type_block124, %check_subtype122
  %70 = phi i1 [ false, %parent_type_block124 ], [ true, %check_subtype122 ], !dbg !2975
  br i1 %70, label %switch.case128, label %next_if153, !dbg !2975

switch.case128:                                   ; preds = %result_block127
  call void @llvm.dbg.declare(metadata ptr %arg129, metadata !2976, metadata !DIExpression()), !dbg !2979
  %71 = load ptr, ptr %1, align 8, !dbg !2979
  store ptr %71, ptr %arg129, align 8, !dbg !2979
  call void @llvm.dbg.declare(metadata ptr %val130, metadata !2980, metadata !DIExpression()), !dbg !2981
  %72 = load ptr, ptr %arg129, align 8, !dbg !2982
  %checknull131 = icmp eq ptr %72, null, !dbg !2982
  %73 = call i1 @llvm.expect.i1(i1 %checknull131, i1 false), !dbg !2982
  br i1 %73, label %panic132, label %checkok136, !dbg !2982

checkok136:                                       ; preds = %switch.case128
  %74 = load i32, ptr %72, align 4, !dbg !2982
  store i32 %74, ptr %val130, align 4, !dbg !2982
  %75 = load ptr, ptr %is_neg, align 8, !dbg !2983
  %checknull138 = icmp eq ptr %75, null, !dbg !2983
  %76 = call i1 @llvm.expect.i1(i1 %checknull138, i1 false), !dbg !2983
  br i1 %76, label %panic139, label %checkok143, !dbg !2983

checkok143:                                       ; preds = %checkok136
  %77 = load i32, ptr %val130, align 4, !dbg !2984
  %lt144 = icmp slt i32 %77, 0, !dbg !2984
  %78 = zext i1 %lt144 to i8, !dbg !2984
  store i8 %78, ptr %75, align 1, !dbg !2984
  %79 = trunc i8 %78 to i1, !dbg !2984
  br i1 %79, label %cond.lhs145, label %cond.rhs149, !dbg !2984

cond.lhs145:                                      ; preds = %checkok143
  %80 = load i32, ptr %val130, align 4, !dbg !2985
  %sext146 = sext i32 %80 to i128, !dbg !2985
  %bnot147 = xor i128 %sext146, -1, !dbg !2985
  %add148 = add i128 %bnot147, 1, !dbg !2986
  br label %cond.phi151, !dbg !2986

cond.rhs149:                                      ; preds = %checkok143
  %81 = load i32, ptr %val130, align 4, !dbg !2987
  %sext150 = sext i32 %81 to i128, !dbg !2987
  br label %cond.phi151, !dbg !2987

cond.phi151:                                      ; preds = %cond.rhs149, %cond.lhs145
  %val152 = phi i128 [ %add148, %cond.lhs145 ], [ %sext150, %cond.rhs149 ], !dbg !2987
  store i128 %val152, ptr %0, align 16, !dbg !2987
  ret i64 0, !dbg !2987

next_if153:                                       ; preds = %result_block127
  br label %check_subtype154, !dbg !2988

check_subtype154:                                 ; preds = %parent_type_block156, %next_if153
  %82 = phi i64 [ %27, %next_if153 ], [ %typeid.parent158, %parent_type_block156 ], !dbg !2988
  %eq155 = icmp eq i64 ptrtoint (ptr @"$ct.long" to i64), %82, !dbg !2988
  br i1 %eq155, label %result_block159, label %parent_type_block156, !dbg !2988

parent_type_block156:                             ; preds = %check_subtype154
  %83 = inttoptr i64 %82 to ptr, !dbg !2988
  %ptradd157 = getelementptr inbounds i8, ptr %83, i64 8, !dbg !2988
  %typeid.parent158 = load i64, ptr %ptradd157, align 8, !dbg !2988
  %84 = icmp eq i64 %typeid.parent158, 0, !dbg !2988
  br i1 %84, label %result_block159, label %check_subtype154, !dbg !2988

result_block159:                                  ; preds = %parent_type_block156, %check_subtype154
  %85 = phi i1 [ false, %parent_type_block156 ], [ true, %check_subtype154 ], !dbg !2988
  br i1 %85, label %switch.case160, label %next_if185, !dbg !2988

switch.case160:                                   ; preds = %result_block159
  call void @llvm.dbg.declare(metadata ptr %arg161, metadata !2989, metadata !DIExpression()), !dbg !2992
  %86 = load ptr, ptr %1, align 8, !dbg !2992
  store ptr %86, ptr %arg161, align 8, !dbg !2992
  call void @llvm.dbg.declare(metadata ptr %val162, metadata !2993, metadata !DIExpression()), !dbg !2994
  %87 = load ptr, ptr %arg161, align 8, !dbg !2995
  %checknull163 = icmp eq ptr %87, null, !dbg !2995
  %88 = call i1 @llvm.expect.i1(i1 %checknull163, i1 false), !dbg !2995
  br i1 %88, label %panic164, label %checkok168, !dbg !2995

checkok168:                                       ; preds = %switch.case160
  %89 = load i64, ptr %87, align 8, !dbg !2995
  store i64 %89, ptr %val162, align 8, !dbg !2995
  %90 = load ptr, ptr %is_neg, align 8, !dbg !2996
  %checknull170 = icmp eq ptr %90, null, !dbg !2996
  %91 = call i1 @llvm.expect.i1(i1 %checknull170, i1 false), !dbg !2996
  br i1 %91, label %panic171, label %checkok175, !dbg !2996

checkok175:                                       ; preds = %checkok168
  %92 = load i64, ptr %val162, align 8, !dbg !2997
  %lt176 = icmp slt i64 %92, 0, !dbg !2997
  %93 = zext i1 %lt176 to i8, !dbg !2997
  store i8 %93, ptr %90, align 1, !dbg !2997
  %94 = trunc i8 %93 to i1, !dbg !2997
  br i1 %94, label %cond.lhs177, label %cond.rhs181, !dbg !2997

cond.lhs177:                                      ; preds = %checkok175
  %95 = load i64, ptr %val162, align 8, !dbg !2998
  %sext178 = sext i64 %95 to i128, !dbg !2998
  %bnot179 = xor i128 %sext178, -1, !dbg !2998
  %add180 = add i128 %bnot179, 1, !dbg !2999
  br label %cond.phi183, !dbg !2999

cond.rhs181:                                      ; preds = %checkok175
  %96 = load i64, ptr %val162, align 8, !dbg !3000
  %sext182 = sext i64 %96 to i128, !dbg !3000
  br label %cond.phi183, !dbg !3000

cond.phi183:                                      ; preds = %cond.rhs181, %cond.lhs177
  %val184 = phi i128 [ %add180, %cond.lhs177 ], [ %sext182, %cond.rhs181 ], !dbg !3000
  store i128 %val184, ptr %0, align 16, !dbg !3000
  ret i64 0, !dbg !3000

next_if185:                                       ; preds = %result_block159
  br label %check_subtype186, !dbg !3001

check_subtype186:                                 ; preds = %parent_type_block188, %next_if185
  %97 = phi i64 [ %27, %next_if185 ], [ %typeid.parent190, %parent_type_block188 ], !dbg !3001
  %eq187 = icmp eq i64 ptrtoint (ptr @"$ct.int128" to i64), %97, !dbg !3001
  br i1 %eq187, label %result_block191, label %parent_type_block188, !dbg !3001

parent_type_block188:                             ; preds = %check_subtype186
  %98 = inttoptr i64 %97 to ptr, !dbg !3001
  %ptradd189 = getelementptr inbounds i8, ptr %98, i64 8, !dbg !3001
  %typeid.parent190 = load i64, ptr %ptradd189, align 8, !dbg !3001
  %99 = icmp eq i64 %typeid.parent190, 0, !dbg !3001
  br i1 %99, label %result_block191, label %check_subtype186, !dbg !3001

result_block191:                                  ; preds = %parent_type_block188, %check_subtype186
  %100 = phi i1 [ false, %parent_type_block188 ], [ true, %check_subtype186 ], !dbg !3001
  br i1 %100, label %switch.case192, label %next_if215, !dbg !3001

switch.case192:                                   ; preds = %result_block191
  call void @llvm.dbg.declare(metadata ptr %arg193, metadata !3002, metadata !DIExpression()), !dbg !3005
  %101 = load ptr, ptr %1, align 8, !dbg !3005
  store ptr %101, ptr %arg193, align 8, !dbg !3005
  call void @llvm.dbg.declare(metadata ptr %val194, metadata !3006, metadata !DIExpression()), !dbg !3007
  %102 = load ptr, ptr %arg193, align 8, !dbg !3008
  %checknull195 = icmp eq ptr %102, null, !dbg !3008
  %103 = call i1 @llvm.expect.i1(i1 %checknull195, i1 false), !dbg !3008
  br i1 %103, label %panic196, label %checkok200, !dbg !3008

checkok200:                                       ; preds = %switch.case192
  %104 = load i128, ptr %102, align 16, !dbg !3008
  store i128 %104, ptr %val194, align 16, !dbg !3008
  %105 = load ptr, ptr %is_neg, align 8, !dbg !3009
  %checknull202 = icmp eq ptr %105, null, !dbg !3009
  %106 = call i1 @llvm.expect.i1(i1 %checknull202, i1 false), !dbg !3009
  br i1 %106, label %panic203, label %checkok207, !dbg !3009

checkok207:                                       ; preds = %checkok200
  %107 = load i128, ptr %val194, align 16, !dbg !3010
  %lt208 = icmp slt i128 %107, 0, !dbg !3010
  %108 = zext i1 %lt208 to i8, !dbg !3010
  store i8 %108, ptr %105, align 1, !dbg !3010
  %109 = trunc i8 %108 to i1, !dbg !3010
  br i1 %109, label %cond.lhs209, label %cond.rhs212, !dbg !3010

cond.lhs209:                                      ; preds = %checkok207
  %110 = load i128, ptr %val194, align 16, !dbg !3011
  %bnot210 = xor i128 %110, -1, !dbg !3011
  %add211 = add i128 %bnot210, 1, !dbg !3012
  br label %cond.phi213, !dbg !3012

cond.rhs212:                                      ; preds = %checkok207
  %111 = load i128, ptr %val194, align 16, !dbg !3013
  br label %cond.phi213, !dbg !3013

cond.phi213:                                      ; preds = %cond.rhs212, %cond.lhs209
  %val214 = phi i128 [ %add211, %cond.lhs209 ], [ %111, %cond.rhs212 ], !dbg !3013
  store i128 %val214, ptr %0, align 16, !dbg !3013
  ret i64 0, !dbg !3013

next_if215:                                       ; preds = %result_block191
  br label %check_subtype216, !dbg !3014

check_subtype216:                                 ; preds = %parent_type_block218, %next_if215
  %112 = phi i64 [ %27, %next_if215 ], [ %typeid.parent220, %parent_type_block218 ], !dbg !3014
  %eq217 = icmp eq i64 ptrtoint (ptr @"$ct.char" to i64), %112, !dbg !3014
  br i1 %eq217, label %result_block221, label %parent_type_block218, !dbg !3014

parent_type_block218:                             ; preds = %check_subtype216
  %113 = inttoptr i64 %112 to ptr, !dbg !3014
  %ptradd219 = getelementptr inbounds i8, ptr %113, i64 8, !dbg !3014
  %typeid.parent220 = load i64, ptr %ptradd219, align 8, !dbg !3014
  %114 = icmp eq i64 %typeid.parent220, 0, !dbg !3014
  br i1 %114, label %result_block221, label %check_subtype216, !dbg !3014

result_block221:                                  ; preds = %parent_type_block218, %check_subtype216
  %115 = phi i1 [ false, %parent_type_block218 ], [ true, %check_subtype216 ], !dbg !3014
  br i1 %115, label %switch.case222, label %next_if232, !dbg !3014

switch.case222:                                   ; preds = %result_block221
  call void @llvm.dbg.declare(metadata ptr %arg223, metadata !3015, metadata !DIExpression()), !dbg !3017
  %116 = load ptr, ptr %1, align 8, !dbg !3017
  store ptr %116, ptr %arg223, align 8, !dbg !3017
  %117 = load ptr, ptr %arg223, align 8, !dbg !3018
  %checknull225 = icmp eq ptr %117, null, !dbg !3018
  %118 = call i1 @llvm.expect.i1(i1 %checknull225, i1 false), !dbg !3018
  br i1 %118, label %panic226, label %checkok230, !dbg !3018

checkok230:                                       ; preds = %switch.case222
  %119 = load i8, ptr %117, align 1, !dbg !3018
  %zext231 = zext i8 %119 to i128, !dbg !3018
  store i128 %zext231, ptr %0, align 16, !dbg !3018
  ret i64 0, !dbg !3018

next_if232:                                       ; preds = %result_block221
  br label %check_subtype233, !dbg !3019

check_subtype233:                                 ; preds = %parent_type_block235, %next_if232
  %120 = phi i64 [ %27, %next_if232 ], [ %typeid.parent237, %parent_type_block235 ], !dbg !3019
  %eq234 = icmp eq i64 ptrtoint (ptr @"$ct.ushort" to i64), %120, !dbg !3019
  br i1 %eq234, label %result_block238, label %parent_type_block235, !dbg !3019

parent_type_block235:                             ; preds = %check_subtype233
  %121 = inttoptr i64 %120 to ptr, !dbg !3019
  %ptradd236 = getelementptr inbounds i8, ptr %121, i64 8, !dbg !3019
  %typeid.parent237 = load i64, ptr %ptradd236, align 8, !dbg !3019
  %122 = icmp eq i64 %typeid.parent237, 0, !dbg !3019
  br i1 %122, label %result_block238, label %check_subtype233, !dbg !3019

result_block238:                                  ; preds = %parent_type_block235, %check_subtype233
  %123 = phi i1 [ false, %parent_type_block235 ], [ true, %check_subtype233 ], !dbg !3019
  br i1 %123, label %switch.case239, label %next_if249, !dbg !3019

switch.case239:                                   ; preds = %result_block238
  call void @llvm.dbg.declare(metadata ptr %arg240, metadata !3020, metadata !DIExpression()), !dbg !3023
  %124 = load ptr, ptr %1, align 8, !dbg !3023
  store ptr %124, ptr %arg240, align 8, !dbg !3023
  %125 = load ptr, ptr %arg240, align 8, !dbg !3024
  %checknull242 = icmp eq ptr %125, null, !dbg !3024
  %126 = call i1 @llvm.expect.i1(i1 %checknull242, i1 false), !dbg !3024
  br i1 %126, label %panic243, label %checkok247, !dbg !3024

checkok247:                                       ; preds = %switch.case239
  %127 = load i16, ptr %125, align 2, !dbg !3024
  %zext248 = zext i16 %127 to i128, !dbg !3024
  store i128 %zext248, ptr %0, align 16, !dbg !3024
  ret i64 0, !dbg !3024

next_if249:                                       ; preds = %result_block238
  br label %check_subtype250, !dbg !3025

check_subtype250:                                 ; preds = %parent_type_block252, %next_if249
  %128 = phi i64 [ %27, %next_if249 ], [ %typeid.parent254, %parent_type_block252 ], !dbg !3025
  %eq251 = icmp eq i64 ptrtoint (ptr @"$ct.uint" to i64), %128, !dbg !3025
  br i1 %eq251, label %result_block255, label %parent_type_block252, !dbg !3025

parent_type_block252:                             ; preds = %check_subtype250
  %129 = inttoptr i64 %128 to ptr, !dbg !3025
  %ptradd253 = getelementptr inbounds i8, ptr %129, i64 8, !dbg !3025
  %typeid.parent254 = load i64, ptr %ptradd253, align 8, !dbg !3025
  %130 = icmp eq i64 %typeid.parent254, 0, !dbg !3025
  br i1 %130, label %result_block255, label %check_subtype250, !dbg !3025

result_block255:                                  ; preds = %parent_type_block252, %check_subtype250
  %131 = phi i1 [ false, %parent_type_block252 ], [ true, %check_subtype250 ], !dbg !3025
  br i1 %131, label %switch.case256, label %next_if266, !dbg !3025

switch.case256:                                   ; preds = %result_block255
  call void @llvm.dbg.declare(metadata ptr %arg257, metadata !3026, metadata !DIExpression()), !dbg !3028
  %132 = load ptr, ptr %1, align 8, !dbg !3028
  store ptr %132, ptr %arg257, align 8, !dbg !3028
  %133 = load ptr, ptr %arg257, align 8, !dbg !3029
  %checknull259 = icmp eq ptr %133, null, !dbg !3029
  %134 = call i1 @llvm.expect.i1(i1 %checknull259, i1 false), !dbg !3029
  br i1 %134, label %panic260, label %checkok264, !dbg !3029

checkok264:                                       ; preds = %switch.case256
  %135 = load i32, ptr %133, align 4, !dbg !3029
  %zext265 = zext i32 %135 to i128, !dbg !3029
  store i128 %zext265, ptr %0, align 16, !dbg !3029
  ret i64 0, !dbg !3029

next_if266:                                       ; preds = %result_block255
  br label %check_subtype267, !dbg !3030

check_subtype267:                                 ; preds = %parent_type_block269, %next_if266
  %136 = phi i64 [ %27, %next_if266 ], [ %typeid.parent271, %parent_type_block269 ], !dbg !3030
  %eq268 = icmp eq i64 ptrtoint (ptr @"$ct.ulong" to i64), %136, !dbg !3030
  br i1 %eq268, label %result_block272, label %parent_type_block269, !dbg !3030

parent_type_block269:                             ; preds = %check_subtype267
  %137 = inttoptr i64 %136 to ptr, !dbg !3030
  %ptradd270 = getelementptr inbounds i8, ptr %137, i64 8, !dbg !3030
  %typeid.parent271 = load i64, ptr %ptradd270, align 8, !dbg !3030
  %138 = icmp eq i64 %typeid.parent271, 0, !dbg !3030
  br i1 %138, label %result_block272, label %check_subtype267, !dbg !3030

result_block272:                                  ; preds = %parent_type_block269, %check_subtype267
  %139 = phi i1 [ false, %parent_type_block269 ], [ true, %check_subtype267 ], !dbg !3030
  br i1 %139, label %switch.case273, label %next_if283, !dbg !3030

switch.case273:                                   ; preds = %result_block272
  call void @llvm.dbg.declare(metadata ptr %arg274, metadata !3031, metadata !DIExpression()), !dbg !3034
  %140 = load ptr, ptr %1, align 8, !dbg !3034
  store ptr %140, ptr %arg274, align 8, !dbg !3034
  %141 = load ptr, ptr %arg274, align 8, !dbg !3035
  %checknull276 = icmp eq ptr %141, null, !dbg !3035
  %142 = call i1 @llvm.expect.i1(i1 %checknull276, i1 false), !dbg !3035
  br i1 %142, label %panic277, label %checkok281, !dbg !3035

checkok281:                                       ; preds = %switch.case273
  %143 = load i64, ptr %141, align 8, !dbg !3035
  %zext282 = zext i64 %143 to i128, !dbg !3035
  store i128 %zext282, ptr %0, align 16, !dbg !3035
  ret i64 0, !dbg !3035

next_if283:                                       ; preds = %result_block272
  br label %check_subtype284, !dbg !3036

check_subtype284:                                 ; preds = %parent_type_block286, %next_if283
  %144 = phi i64 [ %27, %next_if283 ], [ %typeid.parent288, %parent_type_block286 ], !dbg !3036
  %eq285 = icmp eq i64 ptrtoint (ptr @"$ct.uint128" to i64), %144, !dbg !3036
  br i1 %eq285, label %result_block289, label %parent_type_block286, !dbg !3036

parent_type_block286:                             ; preds = %check_subtype284
  %145 = inttoptr i64 %144 to ptr, !dbg !3036
  %ptradd287 = getelementptr inbounds i8, ptr %145, i64 8, !dbg !3036
  %typeid.parent288 = load i64, ptr %ptradd287, align 8, !dbg !3036
  %146 = icmp eq i64 %typeid.parent288, 0, !dbg !3036
  br i1 %146, label %result_block289, label %check_subtype284, !dbg !3036

result_block289:                                  ; preds = %parent_type_block286, %check_subtype284
  %147 = phi i1 [ false, %parent_type_block286 ], [ true, %check_subtype284 ], !dbg !3036
  br i1 %147, label %switch.case290, label %next_if299, !dbg !3036

switch.case290:                                   ; preds = %result_block289
  call void @llvm.dbg.declare(metadata ptr %arg291, metadata !3037, metadata !DIExpression()), !dbg !3039
  %148 = load ptr, ptr %1, align 8, !dbg !3039
  store ptr %148, ptr %arg291, align 8, !dbg !3039
  %149 = load ptr, ptr %arg291, align 8, !dbg !3040
  %checknull293 = icmp eq ptr %149, null, !dbg !3040
  %150 = call i1 @llvm.expect.i1(i1 %checknull293, i1 false), !dbg !3040
  br i1 %150, label %panic294, label %checkok298, !dbg !3040

checkok298:                                       ; preds = %switch.case290
  %151 = load i128, ptr %149, align 16, !dbg !3040
  store i128 %151, ptr %0, align 16, !dbg !3040
  ret i64 0, !dbg !3040

next_if299:                                       ; preds = %result_block289
  br label %check_subtype300, !dbg !3041

check_subtype300:                                 ; preds = %parent_type_block302, %next_if299
  %152 = phi i64 [ %27, %next_if299 ], [ %typeid.parent304, %parent_type_block302 ], !dbg !3041
  %eq301 = icmp eq i64 ptrtoint (ptr @"$ct.float" to i64), %152, !dbg !3041
  br i1 %eq301, label %result_block305, label %parent_type_block302, !dbg !3041

parent_type_block302:                             ; preds = %check_subtype300
  %153 = inttoptr i64 %152 to ptr, !dbg !3041
  %ptradd303 = getelementptr inbounds i8, ptr %153, i64 8, !dbg !3041
  %typeid.parent304 = load i64, ptr %ptradd303, align 8, !dbg !3041
  %154 = icmp eq i64 %typeid.parent304, 0, !dbg !3041
  br i1 %154, label %result_block305, label %check_subtype300, !dbg !3041

result_block305:                                  ; preds = %parent_type_block302, %check_subtype300
  %155 = phi i1 [ false, %parent_type_block302 ], [ true, %check_subtype300 ], !dbg !3041
  br i1 %155, label %switch.case306, label %next_if326, !dbg !3041

switch.case306:                                   ; preds = %result_block305
  call void @llvm.dbg.declare(metadata ptr %arg307, metadata !3042, metadata !DIExpression()), !dbg !3046
  %156 = load ptr, ptr %1, align 8, !dbg !3046
  store ptr %156, ptr %arg307, align 8, !dbg !3046
  call void @llvm.dbg.declare(metadata ptr %f, metadata !3047, metadata !DIExpression()), !dbg !3048
  %157 = load ptr, ptr %arg307, align 8, !dbg !3049
  %checknull308 = icmp eq ptr %157, null, !dbg !3049
  %158 = call i1 @llvm.expect.i1(i1 %checknull308, i1 false), !dbg !3049
  br i1 %158, label %panic309, label %checkok313, !dbg !3049

checkok313:                                       ; preds = %switch.case306
  %159 = load float, ptr %157, align 4, !dbg !3049
  store float %159, ptr %f, align 4, !dbg !3049
  %160 = load ptr, ptr %is_neg, align 8, !dbg !3050
  %checknull315 = icmp eq ptr %160, null, !dbg !3050
  %161 = call i1 @llvm.expect.i1(i1 %checknull315, i1 false), !dbg !3050
  br i1 %161, label %panic316, label %checkok320, !dbg !3050

checkok320:                                       ; preds = %checkok313
  %162 = load float, ptr %f, align 4, !dbg !3051
  %lt321 = fcmp olt float %162, 0.000000e+00, !dbg !3051
  %163 = zext i1 %lt321 to i8, !dbg !3051
  store i8 %163, ptr %160, align 1, !dbg !3051
  %164 = trunc i8 %163 to i1, !dbg !3051
  br i1 %164, label %cond.lhs322, label %cond.rhs323, !dbg !3051

cond.lhs322:                                      ; preds = %checkok320
  %165 = load float, ptr %f, align 4, !dbg !3052
  %fneg = fneg float %165, !dbg !3052
  br label %cond.phi324, !dbg !3052

cond.rhs323:                                      ; preds = %checkok320
  %166 = load float, ptr %f, align 4, !dbg !3053
  br label %cond.phi324, !dbg !3053

cond.phi324:                                      ; preds = %cond.rhs323, %cond.lhs322
  %val325 = phi float [ %fneg, %cond.lhs322 ], [ %166, %cond.rhs323 ], !dbg !3053
  %fpui = fptoui float %val325 to i128, !dbg !3053
  store i128 %fpui, ptr %0, align 16, !dbg !3053
  ret i64 0, !dbg !3053

next_if326:                                       ; preds = %result_block305
  br label %check_subtype327, !dbg !3054

check_subtype327:                                 ; preds = %parent_type_block329, %next_if326
  %167 = phi i64 [ %27, %next_if326 ], [ %typeid.parent331, %parent_type_block329 ], !dbg !3054
  %eq328 = icmp eq i64 ptrtoint (ptr @"$ct.double" to i64), %167, !dbg !3054
  br i1 %eq328, label %result_block332, label %parent_type_block329, !dbg !3054

parent_type_block329:                             ; preds = %check_subtype327
  %168 = inttoptr i64 %167 to ptr, !dbg !3054
  %ptradd330 = getelementptr inbounds i8, ptr %168, i64 8, !dbg !3054
  %typeid.parent331 = load i64, ptr %ptradd330, align 8, !dbg !3054
  %169 = icmp eq i64 %typeid.parent331, 0, !dbg !3054
  br i1 %169, label %result_block332, label %check_subtype327, !dbg !3054

result_block332:                                  ; preds = %parent_type_block329, %check_subtype327
  %170 = phi i1 [ false, %parent_type_block329 ], [ true, %check_subtype327 ], !dbg !3054
  br i1 %170, label %switch.case333, label %next_if355, !dbg !3054

switch.case333:                                   ; preds = %result_block332
  call void @llvm.dbg.declare(metadata ptr %arg334, metadata !3055, metadata !DIExpression()), !dbg !3058
  %171 = load ptr, ptr %1, align 8, !dbg !3058
  store ptr %171, ptr %arg334, align 8, !dbg !3058
  call void @llvm.dbg.declare(metadata ptr %d, metadata !3059, metadata !DIExpression()), !dbg !3060
  %172 = load ptr, ptr %arg334, align 8, !dbg !3061
  %checknull335 = icmp eq ptr %172, null, !dbg !3061
  %173 = call i1 @llvm.expect.i1(i1 %checknull335, i1 false), !dbg !3061
  br i1 %173, label %panic336, label %checkok340, !dbg !3061

checkok340:                                       ; preds = %switch.case333
  %174 = load double, ptr %172, align 8, !dbg !3061
  store double %174, ptr %d, align 8, !dbg !3061
  %175 = load ptr, ptr %is_neg, align 8, !dbg !3062
  %checknull342 = icmp eq ptr %175, null, !dbg !3062
  %176 = call i1 @llvm.expect.i1(i1 %checknull342, i1 false), !dbg !3062
  br i1 %176, label %panic343, label %checkok347, !dbg !3062

checkok347:                                       ; preds = %checkok340
  %177 = load double, ptr %d, align 8, !dbg !3063
  %lt348 = fcmp olt double %177, 0.000000e+00, !dbg !3063
  %178 = zext i1 %lt348 to i8, !dbg !3063
  store i8 %178, ptr %175, align 1, !dbg !3063
  %179 = trunc i8 %178 to i1, !dbg !3063
  br i1 %179, label %cond.lhs349, label %cond.rhs351, !dbg !3063

cond.lhs349:                                      ; preds = %checkok347
  %180 = load double, ptr %d, align 8, !dbg !3064
  %fneg350 = fneg double %180, !dbg !3064
  br label %cond.phi352, !dbg !3064

cond.rhs351:                                      ; preds = %checkok347
  %181 = load double, ptr %d, align 8, !dbg !3065
  br label %cond.phi352, !dbg !3065

cond.phi352:                                      ; preds = %cond.rhs351, %cond.lhs349
  %val353 = phi double [ %fneg350, %cond.lhs349 ], [ %181, %cond.rhs351 ], !dbg !3065
  %fpui354 = fptoui double %val353 to i128, !dbg !3065
  store i128 %fpui354, ptr %0, align 16, !dbg !3065
  ret i64 0, !dbg !3065

next_if355:                                       ; preds = %result_block332
  br label %switch.default356, !dbg !3065

switch.default356:                                ; preds = %next_if355
  ret i64 ptrtoint (ptr @"std.io.FormattingFault$BAD_FORMAT" to i64), !dbg !3066

panic:                                            ; preds = %switch.case
  store %"char[]" { ptr @.panic_msg.139, i64 47 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg2, align 8
  %182 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %182(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 30), !dbg !2927
  unreachable, !dbg !2927

panic4:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.141, i64 55 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg7, align 8
  %183 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %183(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 31), !dbg !2931
  unreachable, !dbg !2931

panic12:                                          ; preds = %switch.case9
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg15, align 8
  %184 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %184(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 199), !dbg !2932
  unreachable, !dbg !2932

panic18:                                          ; preds = %checkok16
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg21, align 8
  %185 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %185(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 199), !dbg !2936
  unreachable, !dbg !2936

panic46:                                          ; preds = %switch.exit
  store %"char[]" { ptr @.panic_msg.139, i64 47 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg49, align 8
  %186 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %186(ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, i32 38), !dbg !2940
  unreachable, !dbg !2940

panic59:                                          ; preds = %switch.case56
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg62, align 8
  %187 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %187(ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, i32 42), !dbg !2948
  unreachable, !dbg !2948

panic73:                                          ; preds = %switch.case70
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg75, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg76, align 8
  %188 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %188(ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, ptr align 8 %indirectarg76, i32 44), !dbg !2956
  unreachable, !dbg !2956

panic80:                                          ; preds = %checkok77
  store %"char[]" { ptr @.panic_msg.139, i64 47 }, ptr %indirectarg81, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg82, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg83, align 8
  %189 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %189(ptr align 8 %indirectarg81, ptr align 8 %indirectarg82, ptr align 8 %indirectarg83, i32 45), !dbg !2957
  unreachable, !dbg !2957

panic99:                                          ; preds = %switch.case95
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg100, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg101, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg102, align 8
  %190 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %190(ptr align 8 %indirectarg100, ptr align 8 %indirectarg101, ptr align 8 %indirectarg102, i32 47), !dbg !2969
  unreachable, !dbg !2969

panic107:                                         ; preds = %checkok103
  store %"char[]" { ptr @.panic_msg.139, i64 47 }, ptr %indirectarg108, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg109, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg110, align 8
  %191 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %191(ptr align 8 %indirectarg108, ptr align 8 %indirectarg109, ptr align 8 %indirectarg110, i32 48), !dbg !2970
  unreachable, !dbg !2970

panic132:                                         ; preds = %switch.case128
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg133, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg134, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg135, align 8
  %192 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %192(ptr align 8 %indirectarg133, ptr align 8 %indirectarg134, ptr align 8 %indirectarg135, i32 50), !dbg !2982
  unreachable, !dbg !2982

panic139:                                         ; preds = %checkok136
  store %"char[]" { ptr @.panic_msg.139, i64 47 }, ptr %indirectarg140, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg141, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg142, align 8
  %193 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %193(ptr align 8 %indirectarg140, ptr align 8 %indirectarg141, ptr align 8 %indirectarg142, i32 51), !dbg !2983
  unreachable, !dbg !2983

panic164:                                         ; preds = %switch.case160
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg165, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg166, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg167, align 8
  %194 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %194(ptr align 8 %indirectarg165, ptr align 8 %indirectarg166, ptr align 8 %indirectarg167, i32 53), !dbg !2995
  unreachable, !dbg !2995

panic171:                                         ; preds = %checkok168
  store %"char[]" { ptr @.panic_msg.139, i64 47 }, ptr %indirectarg172, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg173, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg174, align 8
  %195 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %195(ptr align 8 %indirectarg172, ptr align 8 %indirectarg173, ptr align 8 %indirectarg174, i32 54), !dbg !2996
  unreachable, !dbg !2996

panic196:                                         ; preds = %switch.case192
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg197, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg198, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg199, align 8
  %196 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %196(ptr align 8 %indirectarg197, ptr align 8 %indirectarg198, ptr align 8 %indirectarg199, i32 56), !dbg !3008
  unreachable, !dbg !3008

panic203:                                         ; preds = %checkok200
  store %"char[]" { ptr @.panic_msg.139, i64 47 }, ptr %indirectarg204, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg205, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg206, align 8
  %197 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %197(ptr align 8 %indirectarg204, ptr align 8 %indirectarg205, ptr align 8 %indirectarg206, i32 57), !dbg !3009
  unreachable, !dbg !3009

panic226:                                         ; preds = %switch.case222
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg227, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg228, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg229, align 8
  %198 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %198(ptr align 8 %indirectarg227, ptr align 8 %indirectarg228, ptr align 8 %indirectarg229, i32 59), !dbg !3018
  unreachable, !dbg !3018

panic243:                                         ; preds = %switch.case239
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg244, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg245, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg246, align 8
  %199 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %199(ptr align 8 %indirectarg244, ptr align 8 %indirectarg245, ptr align 8 %indirectarg246, i32 61), !dbg !3024
  unreachable, !dbg !3024

panic260:                                         ; preds = %switch.case256
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg261, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg262, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg263, align 8
  %200 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %200(ptr align 8 %indirectarg261, ptr align 8 %indirectarg262, ptr align 8 %indirectarg263, i32 63), !dbg !3029
  unreachable, !dbg !3029

panic277:                                         ; preds = %switch.case273
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg278, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg279, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg280, align 8
  %201 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %201(ptr align 8 %indirectarg278, ptr align 8 %indirectarg279, ptr align 8 %indirectarg280, i32 65), !dbg !3035
  unreachable, !dbg !3035

panic294:                                         ; preds = %switch.case290
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg295, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg296, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg297, align 8
  %202 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %202(ptr align 8 %indirectarg295, ptr align 8 %indirectarg296, ptr align 8 %indirectarg297, i32 67), !dbg !3040
  unreachable, !dbg !3040

panic309:                                         ; preds = %switch.case306
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg310, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg311, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg312, align 8
  %203 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %203(ptr align 8 %indirectarg310, ptr align 8 %indirectarg311, ptr align 8 %indirectarg312, i32 69), !dbg !3049
  unreachable, !dbg !3049

panic316:                                         ; preds = %checkok313
  store %"char[]" { ptr @.panic_msg.139, i64 47 }, ptr %indirectarg317, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg318, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg319, align 8
  %204 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %204(ptr align 8 %indirectarg317, ptr align 8 %indirectarg318, ptr align 8 %indirectarg319, i32 70), !dbg !3050
  unreachable, !dbg !3050

panic336:                                         ; preds = %switch.case333
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg337, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg338, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg339, align 8
  %205 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %205(ptr align 8 %indirectarg337, ptr align 8 %indirectarg338, ptr align 8 %indirectarg339, i32 72), !dbg !3061
  unreachable, !dbg !3061

panic343:                                         ; preds = %checkok340
  store %"char[]" { ptr @.panic_msg.139, i64 47 }, ptr %indirectarg344, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg345, align 8
  store %"char[]" { ptr @.func.140, i64 12 }, ptr %indirectarg346, align 8
  %206 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %206(ptr align 8 %indirectarg344, ptr align 8 %indirectarg345, ptr align 8 %indirectarg346, i32 73), !dbg !3062
  unreachable, !dbg !3062
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.float_from_any(ptr %0, ptr align 8 %1) #0 !dbg !3068 {
entry:
  %reterr = alloca i64, align 8
  %self = alloca ptr, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %retparam = alloca double, align 8
  %indirectarg31 = alloca %any, align 8
  %switch = alloca i64, align 8
  %arg = alloca ptr, align 8
  %reterr35 = alloca i64, align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %arg49 = alloca ptr, align 8
  %reterr50 = alloca i64, align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %arg65 = alloca ptr, align 8
  %reterr66 = alloca i64, align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %arg82 = alloca ptr, align 8
  %reterr83 = alloca i64, align 8
  %indirectarg86 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %indirectarg88 = alloca %"char[]", align 8
  %arg99 = alloca ptr, align 8
  %reterr100 = alloca i64, align 8
  %indirectarg103 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg105 = alloca %"char[]", align 8
  %arg116 = alloca ptr, align 8
  %reterr117 = alloca i64, align 8
  %indirectarg120 = alloca %"char[]", align 8
  %indirectarg121 = alloca %"char[]", align 8
  %indirectarg122 = alloca %"char[]", align 8
  %arg133 = alloca ptr, align 8
  %reterr134 = alloca i64, align 8
  %indirectarg137 = alloca %"char[]", align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg139 = alloca %"char[]", align 8
  %arg149 = alloca ptr, align 8
  %reterr150 = alloca i64, align 8
  %indirectarg153 = alloca %"char[]", align 8
  %indirectarg154 = alloca %"char[]", align 8
  %indirectarg155 = alloca %"char[]", align 8
  %arg166 = alloca ptr, align 8
  %reterr167 = alloca i64, align 8
  %indirectarg170 = alloca %"char[]", align 8
  %indirectarg171 = alloca %"char[]", align 8
  %indirectarg172 = alloca %"char[]", align 8
  %arg183 = alloca ptr, align 8
  %reterr184 = alloca i64, align 8
  %indirectarg187 = alloca %"char[]", align 8
  %indirectarg188 = alloca %"char[]", align 8
  %indirectarg189 = alloca %"char[]", align 8
  %arg200 = alloca ptr, align 8
  %reterr201 = alloca i64, align 8
  %indirectarg204 = alloca %"char[]", align 8
  %indirectarg205 = alloca %"char[]", align 8
  %indirectarg206 = alloca %"char[]", align 8
  %arg217 = alloca ptr, align 8
  %reterr218 = alloca i64, align 8
  %indirectarg221 = alloca %"char[]", align 8
  %indirectarg222 = alloca %"char[]", align 8
  %indirectarg223 = alloca %"char[]", align 8
  %arg233 = alloca ptr, align 8
  %reterr234 = alloca i64, align 8
  %indirectarg237 = alloca %"char[]", align 8
  %indirectarg238 = alloca %"char[]", align 8
  %indirectarg239 = alloca %"char[]", align 8
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3073, metadata !DIExpression()), !dbg !3074
  %ptradd = getelementptr inbounds i8, ptr %1, i64 8, !dbg !3075
  %2 = load i64, ptr %ptradd, align 8, !dbg !3075
  %"introspect*" = inttoptr i64 %2 to ptr, !dbg !3075
  %typeid.kind = load i8, ptr %"introspect*", align 8, !dbg !3075
  %eq = icmp eq i8 %typeid.kind, 18, !dbg !3075
  br i1 %eq, label %if.then, label %if.exit, !dbg !3075

if.then:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  %3 = load ptr, ptr %self, align 8, !dbg !3076
  %checknull = icmp eq ptr %3, null, !dbg !3076
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3076
  br i1 %4, label %panic, label %checkok, !dbg !3076

checkok:                                          ; preds = %if.then
  %5 = load ptr, ptr %3, align 8, !dbg !3076
  %6 = load ptr, ptr %self, align 8, !dbg !3080
  %checknull3 = icmp eq ptr %6, null, !dbg !3080
  %7 = call i1 @llvm.expect.i1(i1 %checknull3, i1 false), !dbg !3080
  br i1 %7, label %panic4, label %checkok8, !dbg !3080

checkok8:                                         ; preds = %checkok
  %ptradd9 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !3080
  %8 = load i64, ptr %ptradd9, align 8, !dbg !3080
  %"introspect*10" = inttoptr i64 %8 to ptr, !dbg !3080
  %typeid.kind11 = load i8, ptr %"introspect*10", align 8, !dbg !3080
  %eq12 = icmp eq i8 %typeid.kind11, 15, !dbg !3080
  br i1 %eq12, label %check_type_ok, label %check_next, !dbg !3080

check_next:                                       ; preds = %checkok8
  %eq13 = icmp eq i8 %typeid.kind11, 19, !dbg !3080
  br i1 %eq13, label %check_type_ok, label %check_next14, !dbg !3080

check_next14:                                     ; preds = %check_next
  %eq15 = icmp eq i8 %typeid.kind11, 17, !dbg !3080
  br i1 %eq15, label %check_type_ok, label %check_next16, !dbg !3080

check_next16:                                     ; preds = %check_next14
  %eq17 = icmp eq i8 %typeid.kind11, 8, !dbg !3080
  br i1 %eq17, label %check_type_ok, label %check_next18, !dbg !3080

check_next18:                                     ; preds = %check_next16
  %eq19 = icmp eq i8 %typeid.kind11, 16, !dbg !3080
  br i1 %eq19, label %check_type_ok, label %check_next20, !dbg !3080

check_next20:                                     ; preds = %check_next18
  %eq21 = icmp eq i8 %typeid.kind11, 18, !dbg !3080
  br i1 %eq21, label %check_type_ok, label %check_next22, !dbg !3080

check_next22:                                     ; preds = %check_next20
  %eq23 = icmp eq i8 %typeid.kind11, 14, !dbg !3080
  br i1 %eq23, label %check_type_ok, label %check_next24, !dbg !3080

check_next24:                                     ; preds = %check_next22
  %eq25 = icmp eq i8 %typeid.kind11, 12, !dbg !3080
  br i1 %eq25, label %check_type_ok, label %check_next26, !dbg !3080

check_next26:                                     ; preds = %check_next24
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg29, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 199), !dbg !3080
  unreachable, !dbg !3080

check_type_ok:                                    ; preds = %check_next24, %check_next22, %check_next20, %check_next18, %check_next16, %check_next14, %check_next, %checkok8
  %ptradd30 = getelementptr inbounds i8, ptr %"introspect*10", i64 32, !dbg !3080
  %typeid.inner = load i64, ptr %ptradd30, align 8, !dbg !3080
  %10 = insertvalue %any undef, ptr %5, 0, !dbg !3080
  %11 = insertvalue %any %10, i64 %typeid.inner, 1, !dbg !3080
  store %any %11, ptr %indirectarg31, align 8
  %12 = call i64 @std.io.float_from_any(ptr %retparam, ptr align 8 %indirectarg31), !dbg !3081
  %not_err = icmp eq i64 %12, 0, !dbg !3081
  %13 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3081
  br i1 %13, label %after_check, label %assign_optional, !dbg !3081

assign_optional:                                  ; preds = %check_type_ok
  store i64 %12, ptr %reterr, align 8, !dbg !3081
  br label %err_retblock, !dbg !3081

after_check:                                      ; preds = %check_type_ok
  %14 = load double, ptr %retparam, align 8, !dbg !3081
  store double %14, ptr %0, align 8, !dbg !3081
  ret i64 0, !dbg !3081

err_retblock:                                     ; preds = %assign_optional
  %15 = load i64, ptr %reterr, align 8, !dbg !3081
  ret i64 %15, !dbg !3081

if.exit:                                          ; preds = %entry
  %ptradd32 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !3082
  %16 = load i64, ptr %ptradd32, align 8
  store i64 %16, ptr %switch, align 8
  br label %switch.entry

switch.entry:                                     ; preds = %if.exit
  %17 = load i64, ptr %switch, align 8
  br label %check_subtype, !dbg !3084

check_subtype:                                    ; preds = %parent_type_block, %switch.entry
  %18 = phi i64 [ %17, %switch.entry ], [ %typeid.parent, %parent_type_block ], !dbg !3084
  %eq33 = icmp eq i64 ptrtoint (ptr @"$ct.bool" to i64), %18, !dbg !3084
  br i1 %eq33, label %result_block, label %parent_type_block, !dbg !3084

parent_type_block:                                ; preds = %check_subtype
  %19 = inttoptr i64 %18 to ptr, !dbg !3084
  %ptradd34 = getelementptr inbounds i8, ptr %19, i64 8, !dbg !3084
  %typeid.parent = load i64, ptr %ptradd34, align 8, !dbg !3084
  %20 = icmp eq i64 %typeid.parent, 0, !dbg !3084
  br i1 %20, label %result_block, label %check_subtype, !dbg !3084

result_block:                                     ; preds = %parent_type_block, %check_subtype
  %21 = phi i1 [ false, %parent_type_block ], [ true, %check_subtype ], !dbg !3084
  br i1 %21, label %switch.case, label %next_if, !dbg !3084

switch.case:                                      ; preds = %result_block
  call void @llvm.dbg.declare(metadata ptr %arg, metadata !3085, metadata !DIExpression()), !dbg !3087
  %22 = load ptr, ptr %1, align 8, !dbg !3087
  store ptr %22, ptr %arg, align 8, !dbg !3087
  %23 = load ptr, ptr %arg, align 8, !dbg !3088
  %checknull36 = icmp eq ptr %23, null, !dbg !3088
  %24 = call i1 @llvm.expect.i1(i1 %checknull36, i1 false), !dbg !3088
  br i1 %24, label %panic37, label %checkok41, !dbg !3088

checkok41:                                        ; preds = %switch.case
  %25 = load i8, ptr %23, align 1, !dbg !3088
  %26 = trunc i8 %25 to i1, !dbg !3088
  %boolfp = uitofp i1 %26 to double, !dbg !3088
  store double %boolfp, ptr %0, align 8, !dbg !3088
  ret i64 0, !dbg !3088

next_if:                                          ; preds = %result_block
  br label %check_subtype42, !dbg !3089

check_subtype42:                                  ; preds = %parent_type_block44, %next_if
  %27 = phi i64 [ %17, %next_if ], [ %typeid.parent46, %parent_type_block44 ], !dbg !3089
  %eq43 = icmp eq i64 ptrtoint (ptr @"$ct.ichar" to i64), %27, !dbg !3089
  br i1 %eq43, label %result_block47, label %parent_type_block44, !dbg !3089

parent_type_block44:                              ; preds = %check_subtype42
  %28 = inttoptr i64 %27 to ptr, !dbg !3089
  %ptradd45 = getelementptr inbounds i8, ptr %28, i64 8, !dbg !3089
  %typeid.parent46 = load i64, ptr %ptradd45, align 8, !dbg !3089
  %29 = icmp eq i64 %typeid.parent46, 0, !dbg !3089
  br i1 %29, label %result_block47, label %check_subtype42, !dbg !3089

result_block47:                                   ; preds = %parent_type_block44, %check_subtype42
  %30 = phi i1 [ false, %parent_type_block44 ], [ true, %check_subtype42 ], !dbg !3089
  br i1 %30, label %switch.case48, label %next_if57, !dbg !3089

switch.case48:                                    ; preds = %result_block47
  call void @llvm.dbg.declare(metadata ptr %arg49, metadata !3090, metadata !DIExpression()), !dbg !3092
  %31 = load ptr, ptr %1, align 8, !dbg !3092
  store ptr %31, ptr %arg49, align 8, !dbg !3092
  %32 = load ptr, ptr %arg49, align 8, !dbg !3093
  %checknull51 = icmp eq ptr %32, null, !dbg !3093
  %33 = call i1 @llvm.expect.i1(i1 %checknull51, i1 false), !dbg !3093
  br i1 %33, label %panic52, label %checkok56, !dbg !3093

checkok56:                                        ; preds = %switch.case48
  %34 = load i8, ptr %32, align 1, !dbg !3093
  %sifp = sitofp i8 %34 to double, !dbg !3093
  store double %sifp, ptr %0, align 8, !dbg !3093
  ret i64 0, !dbg !3093

next_if57:                                        ; preds = %result_block47
  br label %check_subtype58, !dbg !3094

check_subtype58:                                  ; preds = %parent_type_block60, %next_if57
  %35 = phi i64 [ %17, %next_if57 ], [ %typeid.parent62, %parent_type_block60 ], !dbg !3094
  %eq59 = icmp eq i64 ptrtoint (ptr @"$ct.short" to i64), %35, !dbg !3094
  br i1 %eq59, label %result_block63, label %parent_type_block60, !dbg !3094

parent_type_block60:                              ; preds = %check_subtype58
  %36 = inttoptr i64 %35 to ptr, !dbg !3094
  %ptradd61 = getelementptr inbounds i8, ptr %36, i64 8, !dbg !3094
  %typeid.parent62 = load i64, ptr %ptradd61, align 8, !dbg !3094
  %37 = icmp eq i64 %typeid.parent62, 0, !dbg !3094
  br i1 %37, label %result_block63, label %check_subtype58, !dbg !3094

result_block63:                                   ; preds = %parent_type_block60, %check_subtype58
  %38 = phi i1 [ false, %parent_type_block60 ], [ true, %check_subtype58 ], !dbg !3094
  br i1 %38, label %switch.case64, label %next_if74, !dbg !3094

switch.case64:                                    ; preds = %result_block63
  call void @llvm.dbg.declare(metadata ptr %arg65, metadata !3095, metadata !DIExpression()), !dbg !3097
  %39 = load ptr, ptr %1, align 8, !dbg !3097
  store ptr %39, ptr %arg65, align 8, !dbg !3097
  %40 = load ptr, ptr %arg65, align 8, !dbg !3098
  %checknull67 = icmp eq ptr %40, null, !dbg !3098
  %41 = call i1 @llvm.expect.i1(i1 %checknull67, i1 false), !dbg !3098
  br i1 %41, label %panic68, label %checkok72, !dbg !3098

checkok72:                                        ; preds = %switch.case64
  %42 = load i16, ptr %40, align 2, !dbg !3098
  %sifp73 = sitofp i16 %42 to double, !dbg !3098
  store double %sifp73, ptr %0, align 8, !dbg !3098
  ret i64 0, !dbg !3098

next_if74:                                        ; preds = %result_block63
  br label %check_subtype75, !dbg !3099

check_subtype75:                                  ; preds = %parent_type_block77, %next_if74
  %43 = phi i64 [ %17, %next_if74 ], [ %typeid.parent79, %parent_type_block77 ], !dbg !3099
  %eq76 = icmp eq i64 ptrtoint (ptr @"$ct.int" to i64), %43, !dbg !3099
  br i1 %eq76, label %result_block80, label %parent_type_block77, !dbg !3099

parent_type_block77:                              ; preds = %check_subtype75
  %44 = inttoptr i64 %43 to ptr, !dbg !3099
  %ptradd78 = getelementptr inbounds i8, ptr %44, i64 8, !dbg !3099
  %typeid.parent79 = load i64, ptr %ptradd78, align 8, !dbg !3099
  %45 = icmp eq i64 %typeid.parent79, 0, !dbg !3099
  br i1 %45, label %result_block80, label %check_subtype75, !dbg !3099

result_block80:                                   ; preds = %parent_type_block77, %check_subtype75
  %46 = phi i1 [ false, %parent_type_block77 ], [ true, %check_subtype75 ], !dbg !3099
  br i1 %46, label %switch.case81, label %next_if91, !dbg !3099

switch.case81:                                    ; preds = %result_block80
  call void @llvm.dbg.declare(metadata ptr %arg82, metadata !3100, metadata !DIExpression()), !dbg !3102
  %47 = load ptr, ptr %1, align 8, !dbg !3102
  store ptr %47, ptr %arg82, align 8, !dbg !3102
  %48 = load ptr, ptr %arg82, align 8, !dbg !3103
  %checknull84 = icmp eq ptr %48, null, !dbg !3103
  %49 = call i1 @llvm.expect.i1(i1 %checknull84, i1 false), !dbg !3103
  br i1 %49, label %panic85, label %checkok89, !dbg !3103

checkok89:                                        ; preds = %switch.case81
  %50 = load i32, ptr %48, align 4, !dbg !3103
  %sifp90 = sitofp i32 %50 to double, !dbg !3103
  store double %sifp90, ptr %0, align 8, !dbg !3103
  ret i64 0, !dbg !3103

next_if91:                                        ; preds = %result_block80
  br label %check_subtype92, !dbg !3104

check_subtype92:                                  ; preds = %parent_type_block94, %next_if91
  %51 = phi i64 [ %17, %next_if91 ], [ %typeid.parent96, %parent_type_block94 ], !dbg !3104
  %eq93 = icmp eq i64 ptrtoint (ptr @"$ct.long" to i64), %51, !dbg !3104
  br i1 %eq93, label %result_block97, label %parent_type_block94, !dbg !3104

parent_type_block94:                              ; preds = %check_subtype92
  %52 = inttoptr i64 %51 to ptr, !dbg !3104
  %ptradd95 = getelementptr inbounds i8, ptr %52, i64 8, !dbg !3104
  %typeid.parent96 = load i64, ptr %ptradd95, align 8, !dbg !3104
  %53 = icmp eq i64 %typeid.parent96, 0, !dbg !3104
  br i1 %53, label %result_block97, label %check_subtype92, !dbg !3104

result_block97:                                   ; preds = %parent_type_block94, %check_subtype92
  %54 = phi i1 [ false, %parent_type_block94 ], [ true, %check_subtype92 ], !dbg !3104
  br i1 %54, label %switch.case98, label %next_if108, !dbg !3104

switch.case98:                                    ; preds = %result_block97
  call void @llvm.dbg.declare(metadata ptr %arg99, metadata !3105, metadata !DIExpression()), !dbg !3107
  %55 = load ptr, ptr %1, align 8, !dbg !3107
  store ptr %55, ptr %arg99, align 8, !dbg !3107
  %56 = load ptr, ptr %arg99, align 8, !dbg !3108
  %checknull101 = icmp eq ptr %56, null, !dbg !3108
  %57 = call i1 @llvm.expect.i1(i1 %checknull101, i1 false), !dbg !3108
  br i1 %57, label %panic102, label %checkok106, !dbg !3108

checkok106:                                       ; preds = %switch.case98
  %58 = load i64, ptr %56, align 8, !dbg !3108
  %sifp107 = sitofp i64 %58 to double, !dbg !3108
  store double %sifp107, ptr %0, align 8, !dbg !3108
  ret i64 0, !dbg !3108

next_if108:                                       ; preds = %result_block97
  br label %check_subtype109, !dbg !3109

check_subtype109:                                 ; preds = %parent_type_block111, %next_if108
  %59 = phi i64 [ %17, %next_if108 ], [ %typeid.parent113, %parent_type_block111 ], !dbg !3109
  %eq110 = icmp eq i64 ptrtoint (ptr @"$ct.int128" to i64), %59, !dbg !3109
  br i1 %eq110, label %result_block114, label %parent_type_block111, !dbg !3109

parent_type_block111:                             ; preds = %check_subtype109
  %60 = inttoptr i64 %59 to ptr, !dbg !3109
  %ptradd112 = getelementptr inbounds i8, ptr %60, i64 8, !dbg !3109
  %typeid.parent113 = load i64, ptr %ptradd112, align 8, !dbg !3109
  %61 = icmp eq i64 %typeid.parent113, 0, !dbg !3109
  br i1 %61, label %result_block114, label %check_subtype109, !dbg !3109

result_block114:                                  ; preds = %parent_type_block111, %check_subtype109
  %62 = phi i1 [ false, %parent_type_block111 ], [ true, %check_subtype109 ], !dbg !3109
  br i1 %62, label %switch.case115, label %next_if125, !dbg !3109

switch.case115:                                   ; preds = %result_block114
  call void @llvm.dbg.declare(metadata ptr %arg116, metadata !3110, metadata !DIExpression()), !dbg !3112
  %63 = load ptr, ptr %1, align 8, !dbg !3112
  store ptr %63, ptr %arg116, align 8, !dbg !3112
  %64 = load ptr, ptr %arg116, align 8, !dbg !3113
  %checknull118 = icmp eq ptr %64, null, !dbg !3113
  %65 = call i1 @llvm.expect.i1(i1 %checknull118, i1 false), !dbg !3113
  br i1 %65, label %panic119, label %checkok123, !dbg !3113

checkok123:                                       ; preds = %switch.case115
  %66 = load i128, ptr %64, align 16, !dbg !3113
  %sifp124 = sitofp i128 %66 to double, !dbg !3113
  store double %sifp124, ptr %0, align 8, !dbg !3113
  ret i64 0, !dbg !3113

next_if125:                                       ; preds = %result_block114
  br label %check_subtype126, !dbg !3114

check_subtype126:                                 ; preds = %parent_type_block128, %next_if125
  %67 = phi i64 [ %17, %next_if125 ], [ %typeid.parent130, %parent_type_block128 ], !dbg !3114
  %eq127 = icmp eq i64 ptrtoint (ptr @"$ct.char" to i64), %67, !dbg !3114
  br i1 %eq127, label %result_block131, label %parent_type_block128, !dbg !3114

parent_type_block128:                             ; preds = %check_subtype126
  %68 = inttoptr i64 %67 to ptr, !dbg !3114
  %ptradd129 = getelementptr inbounds i8, ptr %68, i64 8, !dbg !3114
  %typeid.parent130 = load i64, ptr %ptradd129, align 8, !dbg !3114
  %69 = icmp eq i64 %typeid.parent130, 0, !dbg !3114
  br i1 %69, label %result_block131, label %check_subtype126, !dbg !3114

result_block131:                                  ; preds = %parent_type_block128, %check_subtype126
  %70 = phi i1 [ false, %parent_type_block128 ], [ true, %check_subtype126 ], !dbg !3114
  br i1 %70, label %switch.case132, label %next_if141, !dbg !3114

switch.case132:                                   ; preds = %result_block131
  call void @llvm.dbg.declare(metadata ptr %arg133, metadata !3115, metadata !DIExpression()), !dbg !3117
  %71 = load ptr, ptr %1, align 8, !dbg !3117
  store ptr %71, ptr %arg133, align 8, !dbg !3117
  %72 = load ptr, ptr %arg133, align 8, !dbg !3118
  %checknull135 = icmp eq ptr %72, null, !dbg !3118
  %73 = call i1 @llvm.expect.i1(i1 %checknull135, i1 false), !dbg !3118
  br i1 %73, label %panic136, label %checkok140, !dbg !3118

checkok140:                                       ; preds = %switch.case132
  %74 = load i8, ptr %72, align 1, !dbg !3118
  %uifp = uitofp i8 %74 to double, !dbg !3118
  store double %uifp, ptr %0, align 8, !dbg !3118
  ret i64 0, !dbg !3118

next_if141:                                       ; preds = %result_block131
  br label %check_subtype142, !dbg !3119

check_subtype142:                                 ; preds = %parent_type_block144, %next_if141
  %75 = phi i64 [ %17, %next_if141 ], [ %typeid.parent146, %parent_type_block144 ], !dbg !3119
  %eq143 = icmp eq i64 ptrtoint (ptr @"$ct.ushort" to i64), %75, !dbg !3119
  br i1 %eq143, label %result_block147, label %parent_type_block144, !dbg !3119

parent_type_block144:                             ; preds = %check_subtype142
  %76 = inttoptr i64 %75 to ptr, !dbg !3119
  %ptradd145 = getelementptr inbounds i8, ptr %76, i64 8, !dbg !3119
  %typeid.parent146 = load i64, ptr %ptradd145, align 8, !dbg !3119
  %77 = icmp eq i64 %typeid.parent146, 0, !dbg !3119
  br i1 %77, label %result_block147, label %check_subtype142, !dbg !3119

result_block147:                                  ; preds = %parent_type_block144, %check_subtype142
  %78 = phi i1 [ false, %parent_type_block144 ], [ true, %check_subtype142 ], !dbg !3119
  br i1 %78, label %switch.case148, label %next_if158, !dbg !3119

switch.case148:                                   ; preds = %result_block147
  call void @llvm.dbg.declare(metadata ptr %arg149, metadata !3120, metadata !DIExpression()), !dbg !3122
  %79 = load ptr, ptr %1, align 8, !dbg !3122
  store ptr %79, ptr %arg149, align 8, !dbg !3122
  %80 = load ptr, ptr %arg149, align 8, !dbg !3123
  %checknull151 = icmp eq ptr %80, null, !dbg !3123
  %81 = call i1 @llvm.expect.i1(i1 %checknull151, i1 false), !dbg !3123
  br i1 %81, label %panic152, label %checkok156, !dbg !3123

checkok156:                                       ; preds = %switch.case148
  %82 = load i16, ptr %80, align 2, !dbg !3123
  %uifp157 = uitofp i16 %82 to double, !dbg !3123
  store double %uifp157, ptr %0, align 8, !dbg !3123
  ret i64 0, !dbg !3123

next_if158:                                       ; preds = %result_block147
  br label %check_subtype159, !dbg !3124

check_subtype159:                                 ; preds = %parent_type_block161, %next_if158
  %83 = phi i64 [ %17, %next_if158 ], [ %typeid.parent163, %parent_type_block161 ], !dbg !3124
  %eq160 = icmp eq i64 ptrtoint (ptr @"$ct.uint" to i64), %83, !dbg !3124
  br i1 %eq160, label %result_block164, label %parent_type_block161, !dbg !3124

parent_type_block161:                             ; preds = %check_subtype159
  %84 = inttoptr i64 %83 to ptr, !dbg !3124
  %ptradd162 = getelementptr inbounds i8, ptr %84, i64 8, !dbg !3124
  %typeid.parent163 = load i64, ptr %ptradd162, align 8, !dbg !3124
  %85 = icmp eq i64 %typeid.parent163, 0, !dbg !3124
  br i1 %85, label %result_block164, label %check_subtype159, !dbg !3124

result_block164:                                  ; preds = %parent_type_block161, %check_subtype159
  %86 = phi i1 [ false, %parent_type_block161 ], [ true, %check_subtype159 ], !dbg !3124
  br i1 %86, label %switch.case165, label %next_if175, !dbg !3124

switch.case165:                                   ; preds = %result_block164
  call void @llvm.dbg.declare(metadata ptr %arg166, metadata !3125, metadata !DIExpression()), !dbg !3127
  %87 = load ptr, ptr %1, align 8, !dbg !3127
  store ptr %87, ptr %arg166, align 8, !dbg !3127
  %88 = load ptr, ptr %arg166, align 8, !dbg !3128
  %checknull168 = icmp eq ptr %88, null, !dbg !3128
  %89 = call i1 @llvm.expect.i1(i1 %checknull168, i1 false), !dbg !3128
  br i1 %89, label %panic169, label %checkok173, !dbg !3128

checkok173:                                       ; preds = %switch.case165
  %90 = load i32, ptr %88, align 4, !dbg !3128
  %uifp174 = uitofp i32 %90 to double, !dbg !3128
  store double %uifp174, ptr %0, align 8, !dbg !3128
  ret i64 0, !dbg !3128

next_if175:                                       ; preds = %result_block164
  br label %check_subtype176, !dbg !3129

check_subtype176:                                 ; preds = %parent_type_block178, %next_if175
  %91 = phi i64 [ %17, %next_if175 ], [ %typeid.parent180, %parent_type_block178 ], !dbg !3129
  %eq177 = icmp eq i64 ptrtoint (ptr @"$ct.ulong" to i64), %91, !dbg !3129
  br i1 %eq177, label %result_block181, label %parent_type_block178, !dbg !3129

parent_type_block178:                             ; preds = %check_subtype176
  %92 = inttoptr i64 %91 to ptr, !dbg !3129
  %ptradd179 = getelementptr inbounds i8, ptr %92, i64 8, !dbg !3129
  %typeid.parent180 = load i64, ptr %ptradd179, align 8, !dbg !3129
  %93 = icmp eq i64 %typeid.parent180, 0, !dbg !3129
  br i1 %93, label %result_block181, label %check_subtype176, !dbg !3129

result_block181:                                  ; preds = %parent_type_block178, %check_subtype176
  %94 = phi i1 [ false, %parent_type_block178 ], [ true, %check_subtype176 ], !dbg !3129
  br i1 %94, label %switch.case182, label %next_if192, !dbg !3129

switch.case182:                                   ; preds = %result_block181
  call void @llvm.dbg.declare(metadata ptr %arg183, metadata !3130, metadata !DIExpression()), !dbg !3132
  %95 = load ptr, ptr %1, align 8, !dbg !3132
  store ptr %95, ptr %arg183, align 8, !dbg !3132
  %96 = load ptr, ptr %arg183, align 8, !dbg !3133
  %checknull185 = icmp eq ptr %96, null, !dbg !3133
  %97 = call i1 @llvm.expect.i1(i1 %checknull185, i1 false), !dbg !3133
  br i1 %97, label %panic186, label %checkok190, !dbg !3133

checkok190:                                       ; preds = %switch.case182
  %98 = load i64, ptr %96, align 8, !dbg !3133
  %uifp191 = uitofp i64 %98 to double, !dbg !3133
  store double %uifp191, ptr %0, align 8, !dbg !3133
  ret i64 0, !dbg !3133

next_if192:                                       ; preds = %result_block181
  br label %check_subtype193, !dbg !3134

check_subtype193:                                 ; preds = %parent_type_block195, %next_if192
  %99 = phi i64 [ %17, %next_if192 ], [ %typeid.parent197, %parent_type_block195 ], !dbg !3134
  %eq194 = icmp eq i64 ptrtoint (ptr @"$ct.uint128" to i64), %99, !dbg !3134
  br i1 %eq194, label %result_block198, label %parent_type_block195, !dbg !3134

parent_type_block195:                             ; preds = %check_subtype193
  %100 = inttoptr i64 %99 to ptr, !dbg !3134
  %ptradd196 = getelementptr inbounds i8, ptr %100, i64 8, !dbg !3134
  %typeid.parent197 = load i64, ptr %ptradd196, align 8, !dbg !3134
  %101 = icmp eq i64 %typeid.parent197, 0, !dbg !3134
  br i1 %101, label %result_block198, label %check_subtype193, !dbg !3134

result_block198:                                  ; preds = %parent_type_block195, %check_subtype193
  %102 = phi i1 [ false, %parent_type_block195 ], [ true, %check_subtype193 ], !dbg !3134
  br i1 %102, label %switch.case199, label %next_if209, !dbg !3134

switch.case199:                                   ; preds = %result_block198
  call void @llvm.dbg.declare(metadata ptr %arg200, metadata !3135, metadata !DIExpression()), !dbg !3137
  %103 = load ptr, ptr %1, align 8, !dbg !3137
  store ptr %103, ptr %arg200, align 8, !dbg !3137
  %104 = load ptr, ptr %arg200, align 8, !dbg !3138
  %checknull202 = icmp eq ptr %104, null, !dbg !3138
  %105 = call i1 @llvm.expect.i1(i1 %checknull202, i1 false), !dbg !3138
  br i1 %105, label %panic203, label %checkok207, !dbg !3138

checkok207:                                       ; preds = %switch.case199
  %106 = load i128, ptr %104, align 16, !dbg !3138
  %uifp208 = uitofp i128 %106 to double, !dbg !3138
  store double %uifp208, ptr %0, align 8, !dbg !3138
  ret i64 0, !dbg !3138

next_if209:                                       ; preds = %result_block198
  br label %check_subtype210, !dbg !3139

check_subtype210:                                 ; preds = %parent_type_block212, %next_if209
  %107 = phi i64 [ %17, %next_if209 ], [ %typeid.parent214, %parent_type_block212 ], !dbg !3139
  %eq211 = icmp eq i64 ptrtoint (ptr @"$ct.float" to i64), %107, !dbg !3139
  br i1 %eq211, label %result_block215, label %parent_type_block212, !dbg !3139

parent_type_block212:                             ; preds = %check_subtype210
  %108 = inttoptr i64 %107 to ptr, !dbg !3139
  %ptradd213 = getelementptr inbounds i8, ptr %108, i64 8, !dbg !3139
  %typeid.parent214 = load i64, ptr %ptradd213, align 8, !dbg !3139
  %109 = icmp eq i64 %typeid.parent214, 0, !dbg !3139
  br i1 %109, label %result_block215, label %check_subtype210, !dbg !3139

result_block215:                                  ; preds = %parent_type_block212, %check_subtype210
  %110 = phi i1 [ false, %parent_type_block212 ], [ true, %check_subtype210 ], !dbg !3139
  br i1 %110, label %switch.case216, label %next_if225, !dbg !3139

switch.case216:                                   ; preds = %result_block215
  call void @llvm.dbg.declare(metadata ptr %arg217, metadata !3140, metadata !DIExpression()), !dbg !3142
  %111 = load ptr, ptr %1, align 8, !dbg !3142
  store ptr %111, ptr %arg217, align 8, !dbg !3142
  %112 = load ptr, ptr %arg217, align 8, !dbg !3143
  %checknull219 = icmp eq ptr %112, null, !dbg !3143
  %113 = call i1 @llvm.expect.i1(i1 %checknull219, i1 false), !dbg !3143
  br i1 %113, label %panic220, label %checkok224, !dbg !3143

checkok224:                                       ; preds = %switch.case216
  %114 = load float, ptr %112, align 4, !dbg !3143
  %fpfpext = fpext float %114 to double, !dbg !3143
  store double %fpfpext, ptr %0, align 8, !dbg !3143
  ret i64 0, !dbg !3143

next_if225:                                       ; preds = %result_block215
  br label %check_subtype226, !dbg !3144

check_subtype226:                                 ; preds = %parent_type_block228, %next_if225
  %115 = phi i64 [ %17, %next_if225 ], [ %typeid.parent230, %parent_type_block228 ], !dbg !3144
  %eq227 = icmp eq i64 ptrtoint (ptr @"$ct.double" to i64), %115, !dbg !3144
  br i1 %eq227, label %result_block231, label %parent_type_block228, !dbg !3144

parent_type_block228:                             ; preds = %check_subtype226
  %116 = inttoptr i64 %115 to ptr, !dbg !3144
  %ptradd229 = getelementptr inbounds i8, ptr %116, i64 8, !dbg !3144
  %typeid.parent230 = load i64, ptr %ptradd229, align 8, !dbg !3144
  %117 = icmp eq i64 %typeid.parent230, 0, !dbg !3144
  br i1 %117, label %result_block231, label %check_subtype226, !dbg !3144

result_block231:                                  ; preds = %parent_type_block228, %check_subtype226
  %118 = phi i1 [ false, %parent_type_block228 ], [ true, %check_subtype226 ], !dbg !3144
  br i1 %118, label %switch.case232, label %next_if241, !dbg !3144

switch.case232:                                   ; preds = %result_block231
  call void @llvm.dbg.declare(metadata ptr %arg233, metadata !3145, metadata !DIExpression()), !dbg !3147
  %119 = load ptr, ptr %1, align 8, !dbg !3147
  store ptr %119, ptr %arg233, align 8, !dbg !3147
  %120 = load ptr, ptr %arg233, align 8, !dbg !3148
  %checknull235 = icmp eq ptr %120, null, !dbg !3148
  %121 = call i1 @llvm.expect.i1(i1 %checknull235, i1 false), !dbg !3148
  br i1 %121, label %panic236, label %checkok240, !dbg !3148

checkok240:                                       ; preds = %switch.case232
  %122 = load double, ptr %120, align 8, !dbg !3148
  store double %122, ptr %0, align 8, !dbg !3148
  ret i64 0, !dbg !3148

next_if241:                                       ; preds = %result_block231
  br label %switch.default, !dbg !3148

switch.default:                                   ; preds = %next_if241
  ret i64 ptrtoint (ptr @"std.io.FormattingFault$BAD_FORMAT" to i64), !dbg !3149

panic:                                            ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg2, align 8
  %123 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %123(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 199), !dbg !3076
  unreachable, !dbg !3076

panic4:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.49, i64 10 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg7, align 8
  %124 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %124(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 199), !dbg !3080
  unreachable, !dbg !3080

panic37:                                          ; preds = %switch.case
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg40, align 8
  %125 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %125(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 91), !dbg !3088
  unreachable, !dbg !3088

panic52:                                          ; preds = %switch.case48
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg55, align 8
  %126 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %126(ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, i32 93), !dbg !3093
  unreachable, !dbg !3093

panic68:                                          ; preds = %switch.case64
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg71, align 8
  %127 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %127(ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, i32 95), !dbg !3098
  unreachable, !dbg !3098

panic85:                                          ; preds = %switch.case81
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg86, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg87, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg88, align 8
  %128 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %128(ptr align 8 %indirectarg86, ptr align 8 %indirectarg87, ptr align 8 %indirectarg88, i32 97), !dbg !3103
  unreachable, !dbg !3103

panic102:                                         ; preds = %switch.case98
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg103, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg104, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg105, align 8
  %129 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %129(ptr align 8 %indirectarg103, ptr align 8 %indirectarg104, ptr align 8 %indirectarg105, i32 99), !dbg !3108
  unreachable, !dbg !3108

panic119:                                         ; preds = %switch.case115
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg120, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg121, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg122, align 8
  %130 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %130(ptr align 8 %indirectarg120, ptr align 8 %indirectarg121, ptr align 8 %indirectarg122, i32 101), !dbg !3113
  unreachable, !dbg !3113

panic136:                                         ; preds = %switch.case132
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg137, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg138, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg139, align 8
  %131 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %131(ptr align 8 %indirectarg137, ptr align 8 %indirectarg138, ptr align 8 %indirectarg139, i32 103), !dbg !3118
  unreachable, !dbg !3118

panic152:                                         ; preds = %switch.case148
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg153, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg154, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg155, align 8
  %132 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %132(ptr align 8 %indirectarg153, ptr align 8 %indirectarg154, ptr align 8 %indirectarg155, i32 105), !dbg !3123
  unreachable, !dbg !3123

panic169:                                         ; preds = %switch.case165
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg170, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg171, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg172, align 8
  %133 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %133(ptr align 8 %indirectarg170, ptr align 8 %indirectarg171, ptr align 8 %indirectarg172, i32 107), !dbg !3128
  unreachable, !dbg !3128

panic186:                                         ; preds = %switch.case182
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg187, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg188, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg189, align 8
  %134 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %134(ptr align 8 %indirectarg187, ptr align 8 %indirectarg188, ptr align 8 %indirectarg189, i32 109), !dbg !3133
  unreachable, !dbg !3133

panic203:                                         ; preds = %switch.case199
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg204, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg205, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg206, align 8
  %135 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %135(ptr align 8 %indirectarg204, ptr align 8 %indirectarg205, ptr align 8 %indirectarg206, i32 111), !dbg !3138
  unreachable, !dbg !3138

panic220:                                         ; preds = %switch.case216
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg221, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg222, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg223, align 8
  %136 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %136(ptr align 8 %indirectarg221, ptr align 8 %indirectarg222, ptr align 8 %indirectarg223, i32 113), !dbg !3143
  unreachable, !dbg !3143

panic236:                                         ; preds = %switch.case232
  store %"char[]" { ptr @.panic_msg.142, i64 44 }, ptr %indirectarg237, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg238, align 8
  store %"char[]" { ptr @.func.143, i64 14 }, ptr %indirectarg239, align 8
  %137 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %137(ptr align 8 %indirectarg237, ptr align 8 %indirectarg238, ptr align 8 %indirectarg239, i32 115), !dbg !3148
  unreachable, !dbg !3148
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @std.io.simple_atoi(ptr %0, i64 %1, ptr %2) #0 !dbg !3151 {
entry:
  %buf = alloca ptr, align 8
  %maxlen = alloca i64, align 8
  %len_ptr = alloca ptr, align 8
  %i = alloca i32, align 4
  %len = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %c = alloca i8, align 1
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  store ptr %0, ptr %buf, align 8
  call void @llvm.dbg.declare(metadata ptr %buf, metadata !3154, metadata !DIExpression()), !dbg !3155
  store i64 %1, ptr %maxlen, align 8
  call void @llvm.dbg.declare(metadata ptr %maxlen, metadata !3156, metadata !DIExpression()), !dbg !3157
  store ptr %2, ptr %len_ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %len_ptr, metadata !3158, metadata !DIExpression()), !dbg !3159
  call void @llvm.dbg.declare(metadata ptr %i, metadata !3160, metadata !DIExpression()), !dbg !3161
  store i32 0, ptr %i, align 4, !dbg !3162
  call void @llvm.dbg.declare(metadata ptr %len, metadata !3163, metadata !DIExpression()), !dbg !3164
  %3 = load ptr, ptr %len_ptr, align 8, !dbg !3165
  %checknull = icmp eq ptr %3, null, !dbg !3165
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3165
  br i1 %4, label %panic, label %checkok, !dbg !3165

checkok:                                          ; preds = %entry
  %5 = load i64, ptr %3, align 8, !dbg !3165
  store i64 %5, ptr %len, align 8, !dbg !3165
  br label %loop.cond, !dbg !3166

loop.cond:                                        ; preds = %if.exit, %checkok
  %6 = load i64, ptr %len, align 8, !dbg !3167
  %7 = load i64, ptr %maxlen, align 8, !dbg !3169
  %lt = icmp ult i64 %6, %7, !dbg !3167
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !3167

loop.body:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %c, metadata !3170, metadata !DIExpression()), !dbg !3172
  %8 = load ptr, ptr %buf, align 8, !dbg !3173
  %9 = load i64, ptr %len, align 8, !dbg !3174
  %ptradd = getelementptr inbounds i8, ptr %8, i64 %9, !dbg !3174
  %10 = load i8, ptr %ptradd, align 1, !dbg !3174
  store i8 %10, ptr %c, align 1, !dbg !3174
  %11 = load i8, ptr %c, align 1, !dbg !3175
  %12 = call i8 @std.ascii.char.is_digit(i8 %11), !dbg !3175
  %13 = trunc i8 %12 to i1, !dbg !3175
  %not = xor i1 %13, true, !dbg !3175
  br i1 %not, label %if.then, label %if.exit, !dbg !3175

if.then:                                          ; preds = %loop.body
  br label %loop.exit, !dbg !3176

if.exit:                                          ; preds = %loop.body
  %14 = load i32, ptr %i, align 4, !dbg !3177
  %mul = mul i32 %14, 10, !dbg !3177
  %15 = load i8, ptr %c, align 1, !dbg !3178
  %zext = zext i8 %15 to i32, !dbg !3178
  %add = add i32 %mul, %zext, !dbg !3177
  %sub = sub i32 %add, 48, !dbg !3177
  store i32 %sub, ptr %i, align 4, !dbg !3177
  %16 = load i64, ptr %len, align 8, !dbg !3179
  %add3 = add i64 %16, 1, !dbg !3179
  store i64 %add3, ptr %len, align 8, !dbg !3179
  br label %loop.cond, !dbg !3179

loop.exit:                                        ; preds = %if.then, %loop.cond
  %17 = load ptr, ptr %len_ptr, align 8, !dbg !3180
  %checknull4 = icmp eq ptr %17, null, !dbg !3180
  %18 = call i1 @llvm.expect.i1(i1 %checknull4, i1 false), !dbg !3180
  br i1 %18, label %panic5, label %checkok9, !dbg !3180

checkok9:                                         ; preds = %loop.exit
  %19 = load i64, ptr %len, align 8, !dbg !3181
  store i64 %19, ptr %17, align 8, !dbg !3181
  %20 = load i32, ptr %i, align 4, !dbg !3182
  ret i32 %20, !dbg !3182

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.144, i64 48 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.145, i64 11 }, ptr %indirectarg2, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 133), !dbg !3165
  unreachable, !dbg !3165

panic5:                                           ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.144, i64 48 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.func.145, i64 11 }, ptr %indirectarg8, align 8
  %22 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %22(ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, i32 141), !dbg !3180
  unreachable, !dbg !3180
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.fmt_u(ptr align 16 %0, ptr %1) #0 comdat !dbg !3183 {
entry:
  %s = alloca ptr, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %y = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  call void @llvm.dbg.declare(metadata ptr %0, metadata !3186, metadata !DIExpression()), !dbg !3187
  store ptr %1, ptr %s, align 8
  call void @llvm.dbg.declare(metadata ptr %s, metadata !3188, metadata !DIExpression()), !dbg !3189
  br label %loop.cond, !dbg !3190

loop.cond:                                        ; preds = %checkok, %entry
  %2 = load i128, ptr %0, align 16, !dbg !3191
  %gt = icmp ugt i128 %2, 18446744073709551615, !dbg !3191
  br i1 %gt, label %loop.body, label %loop.exit, !dbg !3191

loop.body:                                        ; preds = %loop.cond
  %3 = load ptr, ptr %s, align 8, !dbg !3193
  %ptradd_any = getelementptr i8, ptr %3, i8 -1, !dbg !3193
  store ptr %ptradd_any, ptr %s, align 8, !dbg !3193
  %checknull = icmp eq ptr %ptradd_any, null, !dbg !3193
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3193
  br i1 %4, label %panic, label %checkok, !dbg !3193

checkok:                                          ; preds = %loop.body
  %5 = load i128, ptr %0, align 16, !dbg !3194
  %smod = srem i128 %5, 10, !dbg !3195
  %trunc = trunc i128 %smod to i8, !dbg !3195
  %zext = zext i8 %trunc to i32, !dbg !3195
  %add = add i32 48, %zext, !dbg !3196
  %trunc3 = trunc i32 %add to i8, !dbg !3196
  store i8 %trunc3, ptr %ptradd_any, align 1, !dbg !3196
  %6 = load i128, ptr %0, align 16, !dbg !3197
  %udiv = udiv i128 %6, 10, !dbg !3197
  store i128 %udiv, ptr %0, align 16, !dbg !3197
  br label %loop.cond, !dbg !3197

loop.exit:                                        ; preds = %loop.cond
  call void @llvm.dbg.declare(metadata ptr %y, metadata !3198, metadata !DIExpression()), !dbg !3200
  %7 = load i128, ptr %0, align 16, !dbg !3201
  %trunc4 = trunc i128 %7 to i64, !dbg !3201
  store i64 %trunc4, ptr %y, align 8, !dbg !3201
  br label %loop.cond5, !dbg !3201

loop.cond5:                                       ; preds = %checkok13, %loop.exit
  %8 = load i64, ptr %y, align 8, !dbg !3202
  %intbool = icmp ne i64 %8, 0, !dbg !3202
  br i1 %intbool, label %loop.body6, label %loop.exit20, !dbg !3202

loop.body6:                                       ; preds = %loop.cond5
  %9 = load ptr, ptr %s, align 8, !dbg !3203
  %ptradd_any7 = getelementptr i8, ptr %9, i8 -1, !dbg !3203
  store ptr %ptradd_any7, ptr %s, align 8, !dbg !3203
  %checknull8 = icmp eq ptr %ptradd_any7, null, !dbg !3203
  %10 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !3203
  br i1 %10, label %panic9, label %checkok13, !dbg !3203

checkok13:                                        ; preds = %loop.body6
  %11 = load i64, ptr %y, align 8, !dbg !3204
  %smod14 = srem i64 %11, 10, !dbg !3205
  %trunc15 = trunc i64 %smod14 to i8, !dbg !3205
  %zext16 = zext i8 %trunc15 to i32, !dbg !3205
  %add17 = add i32 48, %zext16, !dbg !3206
  %trunc18 = trunc i32 %add17 to i8, !dbg !3206
  store i8 %trunc18, ptr %ptradd_any7, align 1, !dbg !3206
  %12 = load i64, ptr %y, align 8, !dbg !3207
  %udiv19 = udiv i64 %12, 10, !dbg !3207
  store i64 %udiv19, ptr %y, align 8, !dbg !3207
  br label %loop.cond5, !dbg !3207

loop.exit20:                                      ; preds = %loop.cond5
  %13 = load ptr, ptr %s, align 8, !dbg !3208
  ret ptr %13, !dbg !3208

panic:                                            ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.146, i64 44 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.147, i64 5 }, ptr %indirectarg2, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 173), !dbg !3209
  unreachable, !dbg !3209

panic9:                                           ; preds = %loop.body6
  store %"char[]" { ptr @.panic_msg.146, i64 44 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.147, i64 5 }, ptr %indirectarg12, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 174), !dbg !3210
  unreachable, !dbg !3210
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.printf_parse_format_field(ptr %0, ptr %1, i64 %2, ptr %3, ptr %4, i64 %5, ptr %6) #0 !dbg !3211 {
entry:
  %args_ptr = alloca ptr, align 8
  %args_len = alloca i64, align 8
  %args_index_ptr = alloca ptr, align 8
  %format_ptr = alloca ptr, align 8
  %format_len = alloca i64, align 8
  %index_ptr = alloca ptr, align 8
  %c = alloca i8, align 1
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %reterr4 = alloca i64, align 8
  %len = alloca i64, align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %val = alloca %any, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %intval = alloca i32, align 4
  %intval.f = alloca i64, align 8
  %v = alloca %any, align 8
  %blockret = alloca i32, align 4
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %any_type = alloca i64, align 8
  %kind = alloca i8, align 1
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %is_mixed_signed = alloca i8, align 1
  %max = alloca i32, align 4
  %min = alloca i32, align 4
  %switch = alloca i64, align 8
  %c70 = alloca i8, align 1
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %s = alloca i16, align 2
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg91 = alloca %"char[]", align 8
  %indirectarg92 = alloca %"char[]", align 8
  %i = alloca i32, align 4
  %indirectarg120 = alloca %"char[]", align 8
  %indirectarg121 = alloca %"char[]", align 8
  %indirectarg122 = alloca %"char[]", align 8
  %l = alloca i64, align 8
  %indirectarg147 = alloca %"char[]", align 8
  %indirectarg148 = alloca %"char[]", align 8
  %indirectarg149 = alloca %"char[]", align 8
  %i174 = alloca i128, align 16
  %indirectarg177 = alloca %"char[]", align 8
  %indirectarg178 = alloca %"char[]", align 8
  %indirectarg179 = alloca %"char[]", align 8
  %c205 = alloca i8, align 1
  %indirectarg208 = alloca %"char[]", align 8
  %indirectarg209 = alloca %"char[]", align 8
  %indirectarg210 = alloca %"char[]", align 8
  %s224 = alloca i16, align 2
  %indirectarg227 = alloca %"char[]", align 8
  %indirectarg228 = alloca %"char[]", align 8
  %indirectarg229 = alloca %"char[]", align 8
  %i252 = alloca i32, align 4
  %indirectarg255 = alloca %"char[]", align 8
  %indirectarg256 = alloca %"char[]", align 8
  %indirectarg257 = alloca %"char[]", align 8
  %l278 = alloca i64, align 8
  %indirectarg281 = alloca %"char[]", align 8
  %indirectarg282 = alloca %"char[]", align 8
  %indirectarg283 = alloca %"char[]", align 8
  %i307 = alloca i128, align 16
  %indirectarg310 = alloca %"char[]", align 8
  %indirectarg311 = alloca %"char[]", align 8
  %indirectarg312 = alloca %"char[]", align 8
  %string = alloca %"char[]", align 8
  %indirectarg329 = alloca %"char[]", align 8
  %indirectarg330 = alloca %"char[]", align 8
  %indirectarg331 = alloca %"char[]", align 8
  %indirectarg332 = alloca %"any[]", align 8
  %reterr333 = alloca i64, align 8
  store ptr %1, ptr %args_ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %args_ptr, metadata !3214, metadata !DIExpression()), !dbg !3215
  store i64 %2, ptr %args_len, align 8
  call void @llvm.dbg.declare(metadata ptr %args_len, metadata !3216, metadata !DIExpression()), !dbg !3217
  store ptr %3, ptr %args_index_ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %args_index_ptr, metadata !3218, metadata !DIExpression()), !dbg !3219
  store ptr %4, ptr %format_ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %format_ptr, metadata !3220, metadata !DIExpression()), !dbg !3221
  store i64 %5, ptr %format_len, align 8
  call void @llvm.dbg.declare(metadata ptr %format_len, metadata !3222, metadata !DIExpression()), !dbg !3223
  store ptr %6, ptr %index_ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %index_ptr, metadata !3224, metadata !DIExpression()), !dbg !3225
  call void @llvm.dbg.declare(metadata ptr %c, metadata !3226, metadata !DIExpression()), !dbg !3227
  %7 = load ptr, ptr %format_ptr, align 8, !dbg !3228
  %8 = load ptr, ptr %index_ptr, align 8, !dbg !3229
  %checknull = icmp eq ptr %8, null, !dbg !3229
  %9 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3229
  br i1 %9, label %panic, label %checkok, !dbg !3229

checkok:                                          ; preds = %entry
  %10 = load i64, ptr %8, align 8, !dbg !3229
  %ptradd = getelementptr inbounds i8, ptr %7, i64 %10, !dbg !3229
  %11 = load i8, ptr %ptradd, align 1, !dbg !3229
  store i8 %11, ptr %c, align 1, !dbg !3229
  %12 = load i8, ptr %c, align 1, !dbg !3230
  %13 = call i8 @std.ascii.char.is_digit(i8 %12), !dbg !3230
  %14 = trunc i8 %13 to i1, !dbg !3230
  br i1 %14, label %if.then, label %if.exit, !dbg !3230

if.then:                                          ; preds = %checkok
  %15 = load ptr, ptr %format_ptr, align 8, !dbg !3231
  %16 = load i64, ptr %format_len, align 8, !dbg !3231
  %17 = load ptr, ptr %index_ptr, align 8, !dbg !3231
  %18 = call i32 @std.io.simple_atoi(ptr %15, i64 %16, ptr %17) #5, !dbg !3232
  store i32 %18, ptr %0, align 4, !dbg !3232
  ret i64 0, !dbg !3232

if.exit:                                          ; preds = %checkok
  %19 = load i8, ptr %c, align 1, !dbg !3233
  %neq = icmp ne i8 %19, 42, !dbg !3233
  br i1 %neq, label %if.then3, label %if.exit5, !dbg !3233

if.then3:                                         ; preds = %if.exit
  store i32 0, ptr %0, align 4, !dbg !3234
  ret i64 0, !dbg !3234

if.exit5:                                         ; preds = %if.exit
  call void @llvm.dbg.declare(metadata ptr %len, metadata !3235, metadata !DIExpression()), !dbg !3236
  %20 = load ptr, ptr %index_ptr, align 8, !dbg !3237
  %checknull6 = icmp eq ptr %20, null, !dbg !3237
  %21 = call i1 @llvm.expect.i1(i1 %checknull6, i1 false), !dbg !3237
  br i1 %21, label %panic7, label %checkok11, !dbg !3237

checkok11:                                        ; preds = %if.exit5
  %22 = load i64, ptr %20, align 8, !dbg !3238
  %add = add i64 %22, 1, !dbg !3238
  store i64 %add, ptr %20, align 8, !dbg !3238
  store i64 %add, ptr %len, align 8, !dbg !3238
  %23 = load i64, ptr %len, align 8, !dbg !3239
  %24 = load i64, ptr %format_len, align 8, !dbg !3240
  %ge = icmp uge i64 %23, %24, !dbg !3239
  br i1 %ge, label %if.then12, label %if.exit13, !dbg !3239

if.then12:                                        ; preds = %checkok11
  ret i64 ptrtoint (ptr @"std.io.FormattingFault$BAD_FORMAT" to i64), !dbg !3241

if.exit13:                                        ; preds = %checkok11
  %25 = load ptr, ptr %args_index_ptr, align 8, !dbg !3242
  %checknull14 = icmp eq ptr %25, null, !dbg !3242
  %26 = call i1 @llvm.expect.i1(i1 %checknull14, i1 false), !dbg !3242
  br i1 %26, label %panic15, label %checkok19, !dbg !3242

checkok19:                                        ; preds = %if.exit13
  %27 = load i64, ptr %25, align 8, !dbg !3242
  %28 = load i64, ptr %args_len, align 8, !dbg !3243
  %ge20 = icmp uge i64 %27, %28, !dbg !3244
  br i1 %ge20, label %if.then21, label %if.exit22, !dbg !3244

if.then21:                                        ; preds = %checkok19
  ret i64 ptrtoint (ptr @"std.io.FormattingFault$BAD_FORMAT" to i64), !dbg !3245

if.exit22:                                        ; preds = %checkok19
  call void @llvm.dbg.declare(metadata ptr %val, metadata !3246, metadata !DIExpression()), !dbg !3247
  %29 = load ptr, ptr %args_ptr, align 8, !dbg !3248
  %30 = load ptr, ptr %args_index_ptr, align 8, !dbg !3249
  %checknull23 = icmp eq ptr %30, null, !dbg !3249
  %31 = call i1 @llvm.expect.i1(i1 %checknull23, i1 false), !dbg !3249
  br i1 %31, label %panic24, label %checkok28, !dbg !3249

checkok28:                                        ; preds = %if.exit22
  %32 = load i64, ptr %30, align 8, !dbg !3250
  %add29 = add i64 %32, 1, !dbg !3250
  store i64 %add29, ptr %30, align 8, !dbg !3250
  %ptroffset = getelementptr inbounds [16 x i8], ptr %29, i64 %32, !dbg !3250
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %val, ptr align 8 %ptroffset, i32 16, i1 false), !dbg !3250
  %ptradd30 = getelementptr inbounds i8, ptr %val, i64 8, !dbg !3251
  %33 = load i64, ptr %ptradd30, align 8, !dbg !3251
  %"introspect*" = inttoptr i64 %33 to ptr, !dbg !3251
  %typeid.kind = load i8, ptr %"introspect*", align 8, !dbg !3251
  %34 = call i8 @std.core.types.TypeKind.is_int(i8 %typeid.kind) #5, !dbg !3251
  %35 = trunc i8 %34 to i1, !dbg !3251
  %not = xor i1 %35, true, !dbg !3251
  br i1 %not, label %if.then31, label %if.exit32, !dbg !3251

if.then31:                                        ; preds = %checkok28
  ret i64 ptrtoint (ptr @"std.io.FormattingFault$BAD_FORMAT" to i64), !dbg !3252

if.exit32:                                        ; preds = %checkok28
  call void @llvm.dbg.declare(metadata ptr %intval, metadata !3253, metadata !DIExpression()), !dbg !3254
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %v, ptr align 8 %val, i32 16, i1 false)
  %36 = call i8 @std.core.types.TypeKind.is_int(i8 2) #5, !dbg !3255
  %37 = trunc i8 %36 to i1, !dbg !3255
  br i1 %37, label %or.phi, label %or.rhs, !dbg !3255

or.rhs:                                           ; preds = %if.exit32
  br label %or.phi, !dbg !3259

or.phi:                                           ; preds = %or.rhs, %if.exit32
  %val33 = phi i1 [ true, %if.exit32 ], [ false, %or.rhs ], !dbg !3259
  br i1 %val33, label %assert_ok, label %assert_fail, !dbg !3259

assert_fail:                                      ; preds = %or.phi
  store %"char[]" { ptr @.panic_msg.75, i64 106 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg36, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 12), !dbg !3255
  unreachable, !dbg !3255

assert_ok:                                        ; preds = %or.phi
  call void @llvm.dbg.declare(metadata ptr %any_type, metadata !3260, metadata !DIExpression()), !dbg !3261
  %ptradd37 = getelementptr inbounds i8, ptr %v, i64 8, !dbg !3262
  %39 = load i64, ptr %ptradd37, align 8, !dbg !3262
  store i64 %39, ptr %any_type, align 8, !dbg !3262
  call void @llvm.dbg.declare(metadata ptr %kind, metadata !3263, metadata !DIExpression()), !dbg !3264
  %40 = load i64, ptr %any_type, align 8, !dbg !3265
  %"introspect*38" = inttoptr i64 %40 to ptr, !dbg !3265
  %typeid.kind39 = load i8, ptr %"introspect*38", align 8, !dbg !3265
  store i8 %typeid.kind39, ptr %kind, align 1, !dbg !3265
  %41 = load i8, ptr %kind, align 1, !dbg !3266
  %eq = icmp eq i8 %41, 8, !dbg !3266
  br i1 %eq, label %if.then40, label %if.exit64, !dbg !3266

if.then40:                                        ; preds = %assert_ok
  %42 = load i64, ptr %any_type, align 8, !dbg !3267
  %"introspect*41" = inttoptr i64 %42 to ptr, !dbg !3267
  %typeid.kind42 = load i8, ptr %"introspect*41", align 8, !dbg !3267
  %eq43 = icmp eq i8 %typeid.kind42, 15, !dbg !3267
  br i1 %eq43, label %check_type_ok, label %check_next, !dbg !3267

check_next:                                       ; preds = %if.then40
  %eq44 = icmp eq i8 %typeid.kind42, 19, !dbg !3267
  br i1 %eq44, label %check_type_ok, label %check_next45, !dbg !3267

check_next45:                                     ; preds = %check_next
  %eq46 = icmp eq i8 %typeid.kind42, 17, !dbg !3267
  br i1 %eq46, label %check_type_ok, label %check_next47, !dbg !3267

check_next47:                                     ; preds = %check_next45
  %eq48 = icmp eq i8 %typeid.kind42, 8, !dbg !3267
  br i1 %eq48, label %check_type_ok, label %check_next49, !dbg !3267

check_next49:                                     ; preds = %check_next47
  %eq50 = icmp eq i8 %typeid.kind42, 16, !dbg !3267
  br i1 %eq50, label %check_type_ok, label %check_next51, !dbg !3267

check_next51:                                     ; preds = %check_next49
  %eq52 = icmp eq i8 %typeid.kind42, 18, !dbg !3267
  br i1 %eq52, label %check_type_ok, label %check_next53, !dbg !3267

check_next53:                                     ; preds = %check_next51
  %eq54 = icmp eq i8 %typeid.kind42, 14, !dbg !3267
  br i1 %eq54, label %check_type_ok, label %check_next55, !dbg !3267

check_next55:                                     ; preds = %check_next53
  %eq56 = icmp eq i8 %typeid.kind42, 12, !dbg !3267
  br i1 %eq56, label %check_type_ok, label %check_next57, !dbg !3267

check_next57:                                     ; preds = %check_next55
  store %"char[]" { ptr @.panic_msg.77, i64 49 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg60, align 8
  %43 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %43(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 20), !dbg !3267
  unreachable, !dbg !3267

check_type_ok:                                    ; preds = %check_next55, %check_next53, %check_next51, %check_next49, %check_next47, %check_next45, %check_next, %if.then40
  %ptradd61 = getelementptr inbounds i8, ptr %"introspect*41", i64 32, !dbg !3267
  %typeid.inner = load i64, ptr %ptradd61, align 8, !dbg !3267
  store i64 %typeid.inner, ptr %any_type, align 8, !dbg !3267
  %44 = load i64, ptr %any_type, align 8, !dbg !3269
  %"introspect*62" = inttoptr i64 %44 to ptr, !dbg !3269
  %typeid.kind63 = load i8, ptr %"introspect*62", align 8, !dbg !3269
  store i8 %typeid.kind63, ptr %kind, align 1, !dbg !3269
  br label %if.exit64, !dbg !3269

if.exit64:                                        ; preds = %check_type_ok, %assert_ok
  call void @llvm.dbg.declare(metadata ptr %is_mixed_signed, metadata !3270, metadata !DIExpression()), !dbg !3271
  %45 = load i64, ptr %any_type, align 8, !dbg !3272
  %"introspect*65" = inttoptr i64 %45 to ptr, !dbg !3272
  %typeid.kind66 = load i8, ptr %"introspect*65", align 8, !dbg !3272
  %neq67 = icmp ne i8 2, %typeid.kind66, !dbg !3273
  %46 = zext i1 %neq67 to i8, !dbg !3273
  store i8 %46, ptr %is_mixed_signed, align 1, !dbg !3273
  call void @llvm.dbg.declare(metadata ptr %max, metadata !3274, metadata !DIExpression()), !dbg !3275
  store i32 2147483647, ptr %max, align 4, !dbg !3276
  call void @llvm.dbg.declare(metadata ptr %min, metadata !3277, metadata !DIExpression()), !dbg !3278
  store i32 -2147483648, ptr %min, align 4, !dbg !3279
  %47 = load i64, ptr %any_type, align 8
  store i64 %47, ptr %switch, align 8
  br label %switch.entry

switch.entry:                                     ; preds = %if.exit64
  %48 = load i64, ptr %switch, align 8
  br label %check_subtype, !dbg !3280

check_subtype:                                    ; preds = %parent_type_block, %switch.entry
  %49 = phi i64 [ %48, %switch.entry ], [ %typeid.parent, %parent_type_block ], !dbg !3280
  %eq68 = icmp eq i64 ptrtoint (ptr @"$ct.ichar" to i64), %49, !dbg !3280
  br i1 %eq68, label %result_block, label %parent_type_block, !dbg !3280

parent_type_block:                                ; preds = %check_subtype
  %50 = inttoptr i64 %49 to ptr, !dbg !3280
  %ptradd69 = getelementptr inbounds i8, ptr %50, i64 8, !dbg !3280
  %typeid.parent = load i64, ptr %ptradd69, align 8, !dbg !3280
  %51 = icmp eq i64 %typeid.parent, 0, !dbg !3280
  br i1 %51, label %result_block, label %check_subtype, !dbg !3280

result_block:                                     ; preds = %parent_type_block, %check_subtype
  %52 = phi i1 [ false, %parent_type_block ], [ true, %check_subtype ], !dbg !3280
  br i1 %52, label %switch.case, label %next_if, !dbg !3280

switch.case:                                      ; preds = %result_block
  call void @llvm.dbg.declare(metadata ptr %c70, metadata !3282, metadata !DIExpression()), !dbg !3284
  %53 = load ptr, ptr %v, align 8, !dbg !3285
  %checknull71 = icmp eq ptr %53, null, !dbg !3285
  %54 = call i1 @llvm.expect.i1(i1 %checknull71, i1 false), !dbg !3285
  br i1 %54, label %panic72, label %checkok76, !dbg !3285

checkok76:                                        ; preds = %switch.case
  %55 = load i8, ptr %53, align 1, !dbg !3286
  store i8 %55, ptr %c70, align 1, !dbg !3286
  %56 = load i8, ptr %is_mixed_signed, align 1, !dbg !3287
  %57 = trunc i8 %56 to i1, !dbg !3287
  br i1 %57, label %and.rhs, label %and.phi, !dbg !3287

and.rhs:                                          ; preds = %checkok76
  %58 = load i8, ptr %c70, align 1, !dbg !3288
  %sext = sext i8 %58 to i32, !dbg !3288
  %lt = icmp slt i32 %sext, 0, !dbg !3288
  br label %and.phi, !dbg !3288

and.phi:                                          ; preds = %and.rhs, %checkok76
  %val77 = phi i1 [ false, %checkok76 ], [ %lt, %and.rhs ], !dbg !3288
  br i1 %val77, label %if.then78, label %if.exit79, !dbg !3288

if.then78:                                        ; preds = %and.phi
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" to i64), ptr %intval.f, align 8, !dbg !3289
  br label %after_assign, !dbg !3289

if.exit79:                                        ; preds = %and.phi
  %59 = load i8, ptr %c70, align 1, !dbg !3290
  %sext80 = sext i8 %59 to i32, !dbg !3290
  store i32 %sext80, ptr %blockret, align 4, !dbg !3290
  br label %expr_block.exit, !dbg !3290

next_if:                                          ; preds = %result_block
  br label %check_subtype81, !dbg !3291

check_subtype81:                                  ; preds = %parent_type_block83, %next_if
  %60 = phi i64 [ %48, %next_if ], [ %typeid.parent85, %parent_type_block83 ], !dbg !3291
  %eq82 = icmp eq i64 ptrtoint (ptr @"$ct.short" to i64), %60, !dbg !3291
  br i1 %eq82, label %result_block86, label %parent_type_block83, !dbg !3291

parent_type_block83:                              ; preds = %check_subtype81
  %61 = inttoptr i64 %60 to ptr, !dbg !3291
  %ptradd84 = getelementptr inbounds i8, ptr %61, i64 8, !dbg !3291
  %typeid.parent85 = load i64, ptr %ptradd84, align 8, !dbg !3291
  %62 = icmp eq i64 %typeid.parent85, 0, !dbg !3291
  br i1 %62, label %result_block86, label %check_subtype81, !dbg !3291

result_block86:                                   ; preds = %parent_type_block83, %check_subtype81
  %63 = phi i1 [ false, %parent_type_block83 ], [ true, %check_subtype81 ], !dbg !3291
  br i1 %63, label %switch.case87, label %next_if110, !dbg !3291

switch.case87:                                    ; preds = %result_block86
  call void @llvm.dbg.declare(metadata ptr %s, metadata !3292, metadata !DIExpression()), !dbg !3294
  %64 = load ptr, ptr %v, align 8, !dbg !3295
  %checknull88 = icmp eq ptr %64, null, !dbg !3295
  %65 = call i1 @llvm.expect.i1(i1 %checknull88, i1 false), !dbg !3295
  br i1 %65, label %panic89, label %checkok93, !dbg !3295

checkok93:                                        ; preds = %switch.case87
  %66 = load i16, ptr %64, align 2, !dbg !3296
  store i16 %66, ptr %s, align 2, !dbg !3296
  %67 = load i8, ptr %is_mixed_signed, align 1, !dbg !3297
  %68 = trunc i8 %67 to i1, !dbg !3297
  br i1 %68, label %and.rhs94, label %and.phi97, !dbg !3297

and.rhs94:                                        ; preds = %checkok93
  %69 = load i16, ptr %s, align 2, !dbg !3298
  %sext95 = sext i16 %69 to i32, !dbg !3298
  %lt96 = icmp slt i32 %sext95, 0, !dbg !3298
  br label %and.phi97, !dbg !3298

and.phi97:                                        ; preds = %and.rhs94, %checkok93
  %val98 = phi i1 [ false, %checkok93 ], [ %lt96, %and.rhs94 ], !dbg !3298
  br i1 %val98, label %if.then99, label %if.exit100, !dbg !3298

if.then99:                                        ; preds = %and.phi97
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" to i64), ptr %intval.f, align 8, !dbg !3299
  br label %after_assign, !dbg !3299

if.exit100:                                       ; preds = %and.phi97
  %70 = load i16, ptr %s, align 2, !dbg !3300
  %sext101 = sext i16 %70 to i32, !dbg !3300
  %71 = load i32, ptr %max, align 4, !dbg !3301
  %gt = icmp sgt i32 %sext101, %71, !dbg !3300
  br i1 %gt, label %or.phi105, label %or.rhs102, !dbg !3300

or.rhs102:                                        ; preds = %if.exit100
  %72 = load i16, ptr %s, align 2, !dbg !3302
  %sext103 = sext i16 %72 to i32, !dbg !3302
  %73 = load i32, ptr %min, align 4, !dbg !3303
  %lt104 = icmp slt i32 %sext103, %73, !dbg !3302
  br label %or.phi105, !dbg !3302

or.phi105:                                        ; preds = %or.rhs102, %if.exit100
  %val106 = phi i1 [ true, %if.exit100 ], [ %lt104, %or.rhs102 ], !dbg !3302
  br i1 %val106, label %if.then107, label %if.exit108, !dbg !3302

if.then107:                                       ; preds = %or.phi105
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %intval.f, align 8, !dbg !3304
  br label %after_assign, !dbg !3304

if.exit108:                                       ; preds = %or.phi105
  %74 = load i16, ptr %s, align 2, !dbg !3305
  %sext109 = sext i16 %74 to i32, !dbg !3305
  store i32 %sext109, ptr %blockret, align 4, !dbg !3305
  br label %expr_block.exit, !dbg !3305

next_if110:                                       ; preds = %result_block86
  br label %check_subtype111, !dbg !3306

check_subtype111:                                 ; preds = %parent_type_block113, %next_if110
  %75 = phi i64 [ %48, %next_if110 ], [ %typeid.parent115, %parent_type_block113 ], !dbg !3306
  %eq112 = icmp eq i64 ptrtoint (ptr @"$ct.int" to i64), %75, !dbg !3306
  br i1 %eq112, label %result_block116, label %parent_type_block113, !dbg !3306

parent_type_block113:                             ; preds = %check_subtype111
  %76 = inttoptr i64 %75 to ptr, !dbg !3306
  %ptradd114 = getelementptr inbounds i8, ptr %76, i64 8, !dbg !3306
  %typeid.parent115 = load i64, ptr %ptradd114, align 8, !dbg !3306
  %77 = icmp eq i64 %typeid.parent115, 0, !dbg !3306
  br i1 %77, label %result_block116, label %check_subtype111, !dbg !3306

result_block116:                                  ; preds = %parent_type_block113, %check_subtype111
  %78 = phi i1 [ false, %parent_type_block113 ], [ true, %check_subtype111 ], !dbg !3306
  br i1 %78, label %switch.case117, label %next_if137, !dbg !3306

switch.case117:                                   ; preds = %result_block116
  call void @llvm.dbg.declare(metadata ptr %i, metadata !3307, metadata !DIExpression()), !dbg !3309
  %79 = load ptr, ptr %v, align 8, !dbg !3310
  %checknull118 = icmp eq ptr %79, null, !dbg !3310
  %80 = call i1 @llvm.expect.i1(i1 %checknull118, i1 false), !dbg !3310
  br i1 %80, label %panic119, label %checkok123, !dbg !3310

checkok123:                                       ; preds = %switch.case117
  %81 = load i32, ptr %79, align 4, !dbg !3311
  store i32 %81, ptr %i, align 4, !dbg !3311
  %82 = load i8, ptr %is_mixed_signed, align 1, !dbg !3312
  %83 = trunc i8 %82 to i1, !dbg !3312
  br i1 %83, label %and.rhs124, label %and.phi126, !dbg !3312

and.rhs124:                                       ; preds = %checkok123
  %84 = load i32, ptr %i, align 4, !dbg !3313
  %lt125 = icmp slt i32 %84, 0, !dbg !3313
  br label %and.phi126, !dbg !3313

and.phi126:                                       ; preds = %and.rhs124, %checkok123
  %val127 = phi i1 [ false, %checkok123 ], [ %lt125, %and.rhs124 ], !dbg !3313
  br i1 %val127, label %if.then128, label %if.exit129, !dbg !3313

if.then128:                                       ; preds = %and.phi126
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" to i64), ptr %intval.f, align 8, !dbg !3314
  br label %after_assign, !dbg !3314

if.exit129:                                       ; preds = %and.phi126
  %85 = load i32, ptr %i, align 4, !dbg !3315
  %86 = load i32, ptr %max, align 4, !dbg !3316
  %gt130 = icmp sgt i32 %85, %86, !dbg !3315
  br i1 %gt130, label %or.phi133, label %or.rhs131, !dbg !3315

or.rhs131:                                        ; preds = %if.exit129
  %87 = load i32, ptr %i, align 4, !dbg !3317
  %88 = load i32, ptr %min, align 4, !dbg !3318
  %lt132 = icmp slt i32 %87, %88, !dbg !3317
  br label %or.phi133, !dbg !3317

or.phi133:                                        ; preds = %or.rhs131, %if.exit129
  %val134 = phi i1 [ true, %if.exit129 ], [ %lt132, %or.rhs131 ], !dbg !3317
  br i1 %val134, label %if.then135, label %if.exit136, !dbg !3317

if.then135:                                       ; preds = %or.phi133
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %intval.f, align 8, !dbg !3319
  br label %after_assign, !dbg !3319

if.exit136:                                       ; preds = %or.phi133
  %89 = load i32, ptr %i, align 4, !dbg !3320
  store i32 %89, ptr %blockret, align 4, !dbg !3320
  br label %expr_block.exit, !dbg !3320

next_if137:                                       ; preds = %result_block116
  br label %check_subtype138, !dbg !3321

check_subtype138:                                 ; preds = %parent_type_block140, %next_if137
  %90 = phi i64 [ %48, %next_if137 ], [ %typeid.parent142, %parent_type_block140 ], !dbg !3321
  %eq139 = icmp eq i64 ptrtoint (ptr @"$ct.long" to i64), %90, !dbg !3321
  br i1 %eq139, label %result_block143, label %parent_type_block140, !dbg !3321

parent_type_block140:                             ; preds = %check_subtype138
  %91 = inttoptr i64 %90 to ptr, !dbg !3321
  %ptradd141 = getelementptr inbounds i8, ptr %91, i64 8, !dbg !3321
  %typeid.parent142 = load i64, ptr %ptradd141, align 8, !dbg !3321
  %92 = icmp eq i64 %typeid.parent142, 0, !dbg !3321
  br i1 %92, label %result_block143, label %check_subtype138, !dbg !3321

result_block143:                                  ; preds = %parent_type_block140, %check_subtype138
  %93 = phi i1 [ false, %parent_type_block140 ], [ true, %check_subtype138 ], !dbg !3321
  br i1 %93, label %switch.case144, label %next_if166, !dbg !3321

switch.case144:                                   ; preds = %result_block143
  call void @llvm.dbg.declare(metadata ptr %l, metadata !3322, metadata !DIExpression()), !dbg !3324
  %94 = load ptr, ptr %v, align 8, !dbg !3325
  %checknull145 = icmp eq ptr %94, null, !dbg !3325
  %95 = call i1 @llvm.expect.i1(i1 %checknull145, i1 false), !dbg !3325
  br i1 %95, label %panic146, label %checkok150, !dbg !3325

checkok150:                                       ; preds = %switch.case144
  %96 = load i64, ptr %94, align 8, !dbg !3326
  store i64 %96, ptr %l, align 8, !dbg !3326
  %97 = load i8, ptr %is_mixed_signed, align 1, !dbg !3327
  %98 = trunc i8 %97 to i1, !dbg !3327
  br i1 %98, label %and.rhs151, label %and.phi153, !dbg !3327

and.rhs151:                                       ; preds = %checkok150
  %99 = load i64, ptr %l, align 8, !dbg !3328
  %lt152 = icmp slt i64 %99, 0, !dbg !3328
  br label %and.phi153, !dbg !3328

and.phi153:                                       ; preds = %and.rhs151, %checkok150
  %val154 = phi i1 [ false, %checkok150 ], [ %lt152, %and.rhs151 ], !dbg !3328
  br i1 %val154, label %if.then155, label %if.exit156, !dbg !3328

if.then155:                                       ; preds = %and.phi153
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" to i64), ptr %intval.f, align 8, !dbg !3329
  br label %after_assign, !dbg !3329

if.exit156:                                       ; preds = %and.phi153
  %100 = load i64, ptr %l, align 8, !dbg !3330
  %101 = load i32, ptr %max, align 4, !dbg !3331
  %sext157 = sext i32 %101 to i64, !dbg !3331
  %gt158 = icmp sgt i64 %100, %sext157, !dbg !3330
  br i1 %gt158, label %or.phi162, label %or.rhs159, !dbg !3330

or.rhs159:                                        ; preds = %if.exit156
  %102 = load i64, ptr %l, align 8, !dbg !3332
  %103 = load i32, ptr %min, align 4, !dbg !3333
  %sext160 = sext i32 %103 to i64, !dbg !3333
  %lt161 = icmp slt i64 %102, %sext160, !dbg !3332
  br label %or.phi162, !dbg !3332

or.phi162:                                        ; preds = %or.rhs159, %if.exit156
  %val163 = phi i1 [ true, %if.exit156 ], [ %lt161, %or.rhs159 ], !dbg !3332
  br i1 %val163, label %if.then164, label %if.exit165, !dbg !3332

if.then164:                                       ; preds = %or.phi162
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %intval.f, align 8, !dbg !3334
  br label %after_assign, !dbg !3334

if.exit165:                                       ; preds = %or.phi162
  %104 = load i64, ptr %l, align 8, !dbg !3335
  %trunc = trunc i64 %104 to i32, !dbg !3335
  store i32 %trunc, ptr %blockret, align 4, !dbg !3335
  br label %expr_block.exit, !dbg !3335

next_if166:                                       ; preds = %result_block143
  br label %check_subtype167, !dbg !3336

check_subtype167:                                 ; preds = %parent_type_block169, %next_if166
  %105 = phi i64 [ %48, %next_if166 ], [ %typeid.parent171, %parent_type_block169 ], !dbg !3336
  %eq168 = icmp eq i64 ptrtoint (ptr @"$ct.int128" to i64), %105, !dbg !3336
  br i1 %eq168, label %result_block172, label %parent_type_block169, !dbg !3336

parent_type_block169:                             ; preds = %check_subtype167
  %106 = inttoptr i64 %105 to ptr, !dbg !3336
  %ptradd170 = getelementptr inbounds i8, ptr %106, i64 8, !dbg !3336
  %typeid.parent171 = load i64, ptr %ptradd170, align 8, !dbg !3336
  %107 = icmp eq i64 %typeid.parent171, 0, !dbg !3336
  br i1 %107, label %result_block172, label %check_subtype167, !dbg !3336

result_block172:                                  ; preds = %parent_type_block169, %check_subtype167
  %108 = phi i1 [ false, %parent_type_block169 ], [ true, %check_subtype167 ], !dbg !3336
  br i1 %108, label %switch.case173, label %next_if197, !dbg !3336

switch.case173:                                   ; preds = %result_block172
  call void @llvm.dbg.declare(metadata ptr %i174, metadata !3337, metadata !DIExpression()), !dbg !3339
  %109 = load ptr, ptr %v, align 8, !dbg !3340
  %checknull175 = icmp eq ptr %109, null, !dbg !3340
  %110 = call i1 @llvm.expect.i1(i1 %checknull175, i1 false), !dbg !3340
  br i1 %110, label %panic176, label %checkok180, !dbg !3340

checkok180:                                       ; preds = %switch.case173
  %111 = load i128, ptr %109, align 16, !dbg !3341
  store i128 %111, ptr %i174, align 16, !dbg !3341
  %112 = load i8, ptr %is_mixed_signed, align 1, !dbg !3342
  %113 = trunc i8 %112 to i1, !dbg !3342
  br i1 %113, label %and.rhs181, label %and.phi183, !dbg !3342

and.rhs181:                                       ; preds = %checkok180
  %114 = load i128, ptr %i174, align 16, !dbg !3343
  %lt182 = icmp slt i128 %114, 0, !dbg !3343
  br label %and.phi183, !dbg !3343

and.phi183:                                       ; preds = %and.rhs181, %checkok180
  %val184 = phi i1 [ false, %checkok180 ], [ %lt182, %and.rhs181 ], !dbg !3343
  br i1 %val184, label %if.then185, label %if.exit186, !dbg !3343

if.then185:                                       ; preds = %and.phi183
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_UNSIGNED_RANGE" to i64), ptr %intval.f, align 8, !dbg !3344
  br label %after_assign, !dbg !3344

if.exit186:                                       ; preds = %and.phi183
  %115 = load i128, ptr %i174, align 16, !dbg !3345
  %116 = load i32, ptr %max, align 4, !dbg !3346
  %sext187 = sext i32 %116 to i128, !dbg !3346
  %gt188 = icmp sgt i128 %115, %sext187, !dbg !3345
  br i1 %gt188, label %or.phi192, label %or.rhs189, !dbg !3345

or.rhs189:                                        ; preds = %if.exit186
  %117 = load i128, ptr %i174, align 16, !dbg !3347
  %118 = load i32, ptr %min, align 4, !dbg !3348
  %sext190 = sext i32 %118 to i128, !dbg !3348
  %lt191 = icmp slt i128 %117, %sext190, !dbg !3347
  br label %or.phi192, !dbg !3347

or.phi192:                                        ; preds = %or.rhs189, %if.exit186
  %val193 = phi i1 [ true, %if.exit186 ], [ %lt191, %or.rhs189 ], !dbg !3347
  br i1 %val193, label %if.then194, label %if.exit195, !dbg !3347

if.then194:                                       ; preds = %or.phi192
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %intval.f, align 8, !dbg !3349
  br label %after_assign, !dbg !3349

if.exit195:                                       ; preds = %or.phi192
  %119 = load i128, ptr %i174, align 16, !dbg !3350
  %trunc196 = trunc i128 %119 to i32, !dbg !3350
  store i32 %trunc196, ptr %blockret, align 4, !dbg !3350
  br label %expr_block.exit, !dbg !3350

next_if197:                                       ; preds = %result_block172
  br label %check_subtype198, !dbg !3351

check_subtype198:                                 ; preds = %parent_type_block200, %next_if197
  %120 = phi i64 [ %48, %next_if197 ], [ %typeid.parent202, %parent_type_block200 ], !dbg !3351
  %eq199 = icmp eq i64 ptrtoint (ptr @"$ct.char" to i64), %120, !dbg !3351
  br i1 %eq199, label %result_block203, label %parent_type_block200, !dbg !3351

parent_type_block200:                             ; preds = %check_subtype198
  %121 = inttoptr i64 %120 to ptr, !dbg !3351
  %ptradd201 = getelementptr inbounds i8, ptr %121, i64 8, !dbg !3351
  %typeid.parent202 = load i64, ptr %ptradd201, align 8, !dbg !3351
  %122 = icmp eq i64 %typeid.parent202, 0, !dbg !3351
  br i1 %122, label %result_block203, label %check_subtype198, !dbg !3351

result_block203:                                  ; preds = %parent_type_block200, %check_subtype198
  %123 = phi i1 [ false, %parent_type_block200 ], [ true, %check_subtype198 ], !dbg !3351
  br i1 %123, label %switch.case204, label %next_if216, !dbg !3351

switch.case204:                                   ; preds = %result_block203
  call void @llvm.dbg.declare(metadata ptr %c205, metadata !3352, metadata !DIExpression()), !dbg !3354
  %124 = load ptr, ptr %v, align 8, !dbg !3355
  %checknull206 = icmp eq ptr %124, null, !dbg !3355
  %125 = call i1 @llvm.expect.i1(i1 %checknull206, i1 false), !dbg !3355
  br i1 %125, label %panic207, label %checkok211, !dbg !3355

checkok211:                                       ; preds = %switch.case204
  %126 = load i8, ptr %124, align 1, !dbg !3356
  store i8 %126, ptr %c205, align 1, !dbg !3356
  %127 = load i8, ptr %c205, align 1, !dbg !3357
  %zext = zext i8 %127 to i32, !dbg !3357
  %128 = load i32, ptr %max, align 4, !dbg !3358
  %lt212 = icmp slt i32 %128, %zext, !dbg !3357
  %check = icmp slt i32 %zext, 0, !dbg !3357
  %siui-lt = or i1 %check, %lt212, !dbg !3357
  br i1 %siui-lt, label %if.then213, label %if.exit214, !dbg !3357

if.then213:                                       ; preds = %checkok211
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %intval.f, align 8, !dbg !3359
  br label %after_assign, !dbg !3359

if.exit214:                                       ; preds = %checkok211
  %129 = load i8, ptr %c205, align 1, !dbg !3360
  %zext215 = zext i8 %129 to i32, !dbg !3360
  store i32 %zext215, ptr %blockret, align 4, !dbg !3360
  br label %expr_block.exit, !dbg !3360

next_if216:                                       ; preds = %result_block203
  br label %check_subtype217, !dbg !3361

check_subtype217:                                 ; preds = %parent_type_block219, %next_if216
  %130 = phi i64 [ %48, %next_if216 ], [ %typeid.parent221, %parent_type_block219 ], !dbg !3361
  %eq218 = icmp eq i64 ptrtoint (ptr @"$ct.ushort" to i64), %130, !dbg !3361
  br i1 %eq218, label %result_block222, label %parent_type_block219, !dbg !3361

parent_type_block219:                             ; preds = %check_subtype217
  %131 = inttoptr i64 %130 to ptr, !dbg !3361
  %ptradd220 = getelementptr inbounds i8, ptr %131, i64 8, !dbg !3361
  %typeid.parent221 = load i64, ptr %ptradd220, align 8, !dbg !3361
  %132 = icmp eq i64 %typeid.parent221, 0, !dbg !3361
  br i1 %132, label %result_block222, label %check_subtype217, !dbg !3361

result_block222:                                  ; preds = %parent_type_block219, %check_subtype217
  %133 = phi i1 [ false, %parent_type_block219 ], [ true, %check_subtype217 ], !dbg !3361
  br i1 %133, label %switch.case223, label %next_if244, !dbg !3361

switch.case223:                                   ; preds = %result_block222
  call void @llvm.dbg.declare(metadata ptr %s224, metadata !3362, metadata !DIExpression()), !dbg !3364
  %134 = load ptr, ptr %v, align 8, !dbg !3365
  %checknull225 = icmp eq ptr %134, null, !dbg !3365
  %135 = call i1 @llvm.expect.i1(i1 %checknull225, i1 false), !dbg !3365
  br i1 %135, label %panic226, label %checkok230, !dbg !3365

checkok230:                                       ; preds = %switch.case223
  %136 = load i16, ptr %134, align 2, !dbg !3366
  store i16 %136, ptr %s224, align 2, !dbg !3366
  %137 = load i16, ptr %s224, align 2, !dbg !3367
  %zext231 = zext i16 %137 to i32, !dbg !3367
  %138 = load i32, ptr %max, align 4, !dbg !3368
  %lt232 = icmp slt i32 %138, %zext231, !dbg !3367
  %check233 = icmp slt i32 %zext231, 0, !dbg !3367
  %siui-lt234 = or i1 %check233, %lt232, !dbg !3367
  br i1 %siui-lt234, label %or.phi239, label %or.rhs235, !dbg !3367

or.rhs235:                                        ; preds = %checkok230
  %139 = load i16, ptr %s224, align 2, !dbg !3369
  %zext236 = zext i16 %139 to i32, !dbg !3369
  %140 = load i32, ptr %min, align 4, !dbg !3370
  %gt237 = icmp sgt i32 %140, %zext236, !dbg !3369
  %check238 = icmp sge i32 %zext236, 0, !dbg !3369
  %siui-gt = and i1 %check238, %gt237, !dbg !3369
  br label %or.phi239, !dbg !3369

or.phi239:                                        ; preds = %or.rhs235, %checkok230
  %val240 = phi i1 [ true, %checkok230 ], [ %siui-gt, %or.rhs235 ], !dbg !3369
  br i1 %val240, label %if.then241, label %if.exit242, !dbg !3369

if.then241:                                       ; preds = %or.phi239
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %intval.f, align 8, !dbg !3371
  br label %after_assign, !dbg !3371

if.exit242:                                       ; preds = %or.phi239
  %141 = load i16, ptr %s224, align 2, !dbg !3372
  %zext243 = zext i16 %141 to i32, !dbg !3372
  store i32 %zext243, ptr %blockret, align 4, !dbg !3372
  br label %expr_block.exit, !dbg !3372

next_if244:                                       ; preds = %result_block222
  br label %check_subtype245, !dbg !3373

check_subtype245:                                 ; preds = %parent_type_block247, %next_if244
  %142 = phi i64 [ %48, %next_if244 ], [ %typeid.parent249, %parent_type_block247 ], !dbg !3373
  %eq246 = icmp eq i64 ptrtoint (ptr @"$ct.uint" to i64), %142, !dbg !3373
  br i1 %eq246, label %result_block250, label %parent_type_block247, !dbg !3373

parent_type_block247:                             ; preds = %check_subtype245
  %143 = inttoptr i64 %142 to ptr, !dbg !3373
  %ptradd248 = getelementptr inbounds i8, ptr %143, i64 8, !dbg !3373
  %typeid.parent249 = load i64, ptr %ptradd248, align 8, !dbg !3373
  %144 = icmp eq i64 %typeid.parent249, 0, !dbg !3373
  br i1 %144, label %result_block250, label %check_subtype245, !dbg !3373

result_block250:                                  ; preds = %parent_type_block247, %check_subtype245
  %145 = phi i1 [ false, %parent_type_block247 ], [ true, %check_subtype245 ], !dbg !3373
  br i1 %145, label %switch.case251, label %next_if270, !dbg !3373

switch.case251:                                   ; preds = %result_block250
  call void @llvm.dbg.declare(metadata ptr %i252, metadata !3374, metadata !DIExpression()), !dbg !3376
  %146 = load ptr, ptr %v, align 8, !dbg !3377
  %checknull253 = icmp eq ptr %146, null, !dbg !3377
  %147 = call i1 @llvm.expect.i1(i1 %checknull253, i1 false), !dbg !3377
  br i1 %147, label %panic254, label %checkok258, !dbg !3377

checkok258:                                       ; preds = %switch.case251
  %148 = load i32, ptr %146, align 4, !dbg !3378
  store i32 %148, ptr %i252, align 4, !dbg !3378
  %149 = load i32, ptr %i252, align 4, !dbg !3379
  %150 = load i32, ptr %max, align 4, !dbg !3380
  %lt259 = icmp slt i32 %150, %149, !dbg !3379
  %check260 = icmp slt i32 %149, 0, !dbg !3379
  %siui-lt261 = or i1 %check260, %lt259, !dbg !3379
  br i1 %siui-lt261, label %or.phi266, label %or.rhs262, !dbg !3379

or.rhs262:                                        ; preds = %checkok258
  %151 = load i32, ptr %i252, align 4, !dbg !3381
  %152 = load i32, ptr %min, align 4, !dbg !3382
  %gt263 = icmp sgt i32 %152, %151, !dbg !3381
  %check264 = icmp sge i32 %151, 0, !dbg !3381
  %siui-gt265 = and i1 %check264, %gt263, !dbg !3381
  br label %or.phi266, !dbg !3381

or.phi266:                                        ; preds = %or.rhs262, %checkok258
  %val267 = phi i1 [ true, %checkok258 ], [ %siui-gt265, %or.rhs262 ], !dbg !3381
  br i1 %val267, label %if.then268, label %if.exit269, !dbg !3381

if.then268:                                       ; preds = %or.phi266
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %intval.f, align 8, !dbg !3383
  br label %after_assign, !dbg !3383

if.exit269:                                       ; preds = %or.phi266
  %153 = load i32, ptr %i252, align 4, !dbg !3384
  store i32 %153, ptr %blockret, align 4, !dbg !3384
  br label %expr_block.exit, !dbg !3384

next_if270:                                       ; preds = %result_block250
  br label %check_subtype271, !dbg !3385

check_subtype271:                                 ; preds = %parent_type_block273, %next_if270
  %154 = phi i64 [ %48, %next_if270 ], [ %typeid.parent275, %parent_type_block273 ], !dbg !3385
  %eq272 = icmp eq i64 ptrtoint (ptr @"$ct.ulong" to i64), %154, !dbg !3385
  br i1 %eq272, label %result_block276, label %parent_type_block273, !dbg !3385

parent_type_block273:                             ; preds = %check_subtype271
  %155 = inttoptr i64 %154 to ptr, !dbg !3385
  %ptradd274 = getelementptr inbounds i8, ptr %155, i64 8, !dbg !3385
  %typeid.parent275 = load i64, ptr %ptradd274, align 8, !dbg !3385
  %156 = icmp eq i64 %typeid.parent275, 0, !dbg !3385
  br i1 %156, label %result_block276, label %check_subtype271, !dbg !3385

result_block276:                                  ; preds = %parent_type_block273, %check_subtype271
  %157 = phi i1 [ false, %parent_type_block273 ], [ true, %check_subtype271 ], !dbg !3385
  br i1 %157, label %switch.case277, label %next_if299, !dbg !3385

switch.case277:                                   ; preds = %result_block276
  call void @llvm.dbg.declare(metadata ptr %l278, metadata !3386, metadata !DIExpression()), !dbg !3388
  %158 = load ptr, ptr %v, align 8, !dbg !3389
  %checknull279 = icmp eq ptr %158, null, !dbg !3389
  %159 = call i1 @llvm.expect.i1(i1 %checknull279, i1 false), !dbg !3389
  br i1 %159, label %panic280, label %checkok284, !dbg !3389

checkok284:                                       ; preds = %switch.case277
  %160 = load i64, ptr %158, align 8, !dbg !3390
  store i64 %160, ptr %l278, align 8, !dbg !3390
  %161 = load i64, ptr %l278, align 8, !dbg !3391
  %162 = load i32, ptr %max, align 4, !dbg !3392
  %sext285 = sext i32 %162 to i64, !dbg !3392
  %lt286 = icmp slt i64 %sext285, %161, !dbg !3391
  %check287 = icmp slt i64 %161, 0, !dbg !3391
  %siui-lt288 = or i1 %check287, %lt286, !dbg !3391
  br i1 %siui-lt288, label %or.phi294, label %or.rhs289, !dbg !3391

or.rhs289:                                        ; preds = %checkok284
  %163 = load i64, ptr %l278, align 8, !dbg !3393
  %164 = load i32, ptr %min, align 4, !dbg !3394
  %sext290 = sext i32 %164 to i64, !dbg !3394
  %gt291 = icmp sgt i64 %sext290, %163, !dbg !3393
  %check292 = icmp sge i64 %163, 0, !dbg !3393
  %siui-gt293 = and i1 %check292, %gt291, !dbg !3393
  br label %or.phi294, !dbg !3393

or.phi294:                                        ; preds = %or.rhs289, %checkok284
  %val295 = phi i1 [ true, %checkok284 ], [ %siui-gt293, %or.rhs289 ], !dbg !3393
  br i1 %val295, label %if.then296, label %if.exit297, !dbg !3393

if.then296:                                       ; preds = %or.phi294
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %intval.f, align 8, !dbg !3395
  br label %after_assign, !dbg !3395

if.exit297:                                       ; preds = %or.phi294
  %165 = load i64, ptr %l278, align 8, !dbg !3396
  %trunc298 = trunc i64 %165 to i32, !dbg !3396
  store i32 %trunc298, ptr %blockret, align 4, !dbg !3396
  br label %expr_block.exit, !dbg !3396

next_if299:                                       ; preds = %result_block276
  br label %check_subtype300, !dbg !3397

check_subtype300:                                 ; preds = %parent_type_block302, %next_if299
  %166 = phi i64 [ %48, %next_if299 ], [ %typeid.parent304, %parent_type_block302 ], !dbg !3397
  %eq301 = icmp eq i64 ptrtoint (ptr @"$ct.uint128" to i64), %166, !dbg !3397
  br i1 %eq301, label %result_block305, label %parent_type_block302, !dbg !3397

parent_type_block302:                             ; preds = %check_subtype300
  %167 = inttoptr i64 %166 to ptr, !dbg !3397
  %ptradd303 = getelementptr inbounds i8, ptr %167, i64 8, !dbg !3397
  %typeid.parent304 = load i64, ptr %ptradd303, align 8, !dbg !3397
  %168 = icmp eq i64 %typeid.parent304, 0, !dbg !3397
  br i1 %168, label %result_block305, label %check_subtype300, !dbg !3397

result_block305:                                  ; preds = %parent_type_block302, %check_subtype300
  %169 = phi i1 [ false, %parent_type_block302 ], [ true, %check_subtype300 ], !dbg !3397
  br i1 %169, label %switch.case306, label %next_if328, !dbg !3397

switch.case306:                                   ; preds = %result_block305
  call void @llvm.dbg.declare(metadata ptr %i307, metadata !3398, metadata !DIExpression()), !dbg !3400
  %170 = load ptr, ptr %v, align 8, !dbg !3401
  %checknull308 = icmp eq ptr %170, null, !dbg !3401
  %171 = call i1 @llvm.expect.i1(i1 %checknull308, i1 false), !dbg !3401
  br i1 %171, label %panic309, label %checkok313, !dbg !3401

checkok313:                                       ; preds = %switch.case306
  %172 = load i128, ptr %170, align 16, !dbg !3402
  store i128 %172, ptr %i307, align 16, !dbg !3402
  %173 = load i128, ptr %i307, align 16, !dbg !3403
  %174 = load i32, ptr %max, align 4, !dbg !3404
  %sext314 = sext i32 %174 to i128, !dbg !3404
  %lt315 = icmp slt i128 %sext314, %173, !dbg !3403
  %check316 = icmp slt i128 %173, 0, !dbg !3403
  %siui-lt317 = or i1 %check316, %lt315, !dbg !3403
  br i1 %siui-lt317, label %or.phi323, label %or.rhs318, !dbg !3403

or.rhs318:                                        ; preds = %checkok313
  %175 = load i128, ptr %i307, align 16, !dbg !3405
  %176 = load i32, ptr %min, align 4, !dbg !3406
  %sext319 = sext i32 %176 to i128, !dbg !3406
  %gt320 = icmp sgt i128 %sext319, %175, !dbg !3405
  %check321 = icmp sge i128 %175, 0, !dbg !3405
  %siui-gt322 = and i1 %check321, %gt320, !dbg !3405
  br label %or.phi323, !dbg !3405

or.phi323:                                        ; preds = %or.rhs318, %checkok313
  %val324 = phi i1 [ true, %checkok313 ], [ %siui-gt322, %or.rhs318 ], !dbg !3405
  br i1 %val324, label %if.then325, label %if.exit326, !dbg !3405

if.then325:                                       ; preds = %or.phi323
  store i64 ptrtoint (ptr @"std.core.types.ConversionResult$VALUE_OUT_OF_RANGE" to i64), ptr %intval.f, align 8, !dbg !3407
  br label %after_assign, !dbg !3407

if.exit326:                                       ; preds = %or.phi323
  %177 = load i128, ptr %i307, align 16, !dbg !3408
  %trunc327 = trunc i128 %177 to i32, !dbg !3408
  store i32 %trunc327, ptr %blockret, align 4, !dbg !3408
  br label %expr_block.exit, !dbg !3408

next_if328:                                       ; preds = %result_block305
  br label %switch.default, !dbg !3408

switch.default:                                   ; preds = %next_if328
  store %"char[]" { ptr @.str.151, i64 30 }, ptr %string, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg329, ptr align 8 %string, i32 16, i1 false)
  store %"char[]" { ptr @.str.152, i64 20 }, ptr %indirectarg330, align 8
  store %"char[]" { ptr @.str.153, i64 25 }, ptr %indirectarg331, align 8
  store %"any[]" zeroinitializer, ptr %indirectarg332, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg329, ptr align 8 %indirectarg330, ptr align 8 %indirectarg331, i32 668, ptr align 8 %indirectarg332), !dbg !3409
  unreachable, !dbg !3413

expr_block.exit:                                  ; preds = %if.exit326, %if.exit297, %if.exit269, %if.exit242, %if.exit214, %if.exit195, %if.exit165, %if.exit136, %if.exit108, %if.exit79
  %178 = load i32, ptr %blockret, align 4, !dbg !3413
  store i32 %178, ptr %intval, align 4, !dbg !3413
  store i64 0, ptr %intval.f, align 8, !dbg !3413
  br label %after_assign, !dbg !3413

after_assign:                                     ; preds = %expr_block.exit, %if.then325, %if.then296, %if.then268, %if.then241, %if.then213, %if.then194, %if.then185, %if.then164, %if.then155, %if.then135, %if.then128, %if.then107, %if.then99, %if.then78
  %optval = load i64, ptr %intval.f, align 8, !dbg !3414
  %not_err = icmp eq i64 %optval, 0, !dbg !3414
  %179 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3414
  br i1 %179, label %after_check, label %else_block, !dbg !3414

after_check:                                      ; preds = %after_assign
  %180 = load i32, ptr %intval, align 4, !dbg !3414
  br label %phi_block, !dbg !3414

else_block:                                       ; preds = %after_assign
  store i64 ptrtoint (ptr @"std.io.FormattingFault$BAD_FORMAT" to i64), ptr %reterr333, align 8, !dbg !3415
  br label %err_retblock, !dbg !3415

phi_block:                                        ; preds = %after_check
  store i32 %180, ptr %0, align 4, !dbg !3415
  ret i64 0, !dbg !3415

err_retblock:                                     ; preds = %else_block
  %181 = load i64, ptr %reterr333, align 8, !dbg !3415
  ret i64 %181, !dbg !3415

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.148, i64 50 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg2, align 8
  %182 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %182(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 660), !dbg !3229
  unreachable, !dbg !3229

panic7:                                           ; preds = %if.exit5
  store %"char[]" { ptr @.panic_msg.148, i64 50 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg10, align 8
  %183 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %183(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 663), !dbg !3237
  unreachable, !dbg !3237

panic15:                                          ; preds = %if.exit13
  store %"char[]" { ptr @.panic_msg.150, i64 55 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg18, align 8
  %184 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %184(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 665), !dbg !3242
  unreachable, !dbg !3242

panic24:                                          ; preds = %if.exit22
  store %"char[]" { ptr @.panic_msg.150, i64 55 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.129, i64 20 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg27, align 8
  %185 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %185(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 666), !dbg !3249
  unreachable, !dbg !3249

panic72:                                          ; preds = %switch.case
  store %"char[]" { ptr @.panic_msg.78, i64 52 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg75, align 8
  %186 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %186(ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, i32 29), !dbg !3286
  unreachable, !dbg !3286

panic89:                                          ; preds = %switch.case87
  store %"char[]" { ptr @.panic_msg.81, i64 53 }, ptr %indirectarg90, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg91, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg92, align 8
  %187 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %187(ptr align 8 %indirectarg90, ptr align 8 %indirectarg91, ptr align 8 %indirectarg92, i32 33), !dbg !3296
  unreachable, !dbg !3296

panic119:                                         ; preds = %switch.case117
  store %"char[]" { ptr @.panic_msg.82, i64 51 }, ptr %indirectarg120, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg121, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg122, align 8
  %188 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %188(ptr align 8 %indirectarg120, ptr align 8 %indirectarg121, ptr align 8 %indirectarg122, i32 38), !dbg !3311
  unreachable, !dbg !3311

panic146:                                         ; preds = %switch.case144
  store %"char[]" { ptr @.panic_msg.83, i64 52 }, ptr %indirectarg147, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg148, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg149, align 8
  %189 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %189(ptr align 8 %indirectarg147, ptr align 8 %indirectarg148, ptr align 8 %indirectarg149, i32 43), !dbg !3326
  unreachable, !dbg !3326

panic176:                                         ; preds = %switch.case173
  store %"char[]" { ptr @.panic_msg.84, i64 54 }, ptr %indirectarg177, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg178, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg179, align 8
  %190 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %190(ptr align 8 %indirectarg177, ptr align 8 %indirectarg178, ptr align 8 %indirectarg179, i32 48), !dbg !3341
  unreachable, !dbg !3341

panic207:                                         ; preds = %switch.case204
  store %"char[]" { ptr @.panic_msg.78, i64 52 }, ptr %indirectarg208, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg209, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg210, align 8
  %191 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %191(ptr align 8 %indirectarg208, ptr align 8 %indirectarg209, ptr align 8 %indirectarg210, i32 53), !dbg !3356
  unreachable, !dbg !3356

panic226:                                         ; preds = %switch.case223
  store %"char[]" { ptr @.panic_msg.85, i64 54 }, ptr %indirectarg227, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg228, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg229, align 8
  %192 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %192(ptr align 8 %indirectarg227, ptr align 8 %indirectarg228, ptr align 8 %indirectarg229, i32 57), !dbg !3366
  unreachable, !dbg !3366

panic254:                                         ; preds = %switch.case251
  store %"char[]" { ptr @.panic_msg.86, i64 52 }, ptr %indirectarg255, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg256, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg257, align 8
  %193 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %193(ptr align 8 %indirectarg255, ptr align 8 %indirectarg256, ptr align 8 %indirectarg257, i32 61), !dbg !3378
  unreachable, !dbg !3378

panic280:                                         ; preds = %switch.case277
  store %"char[]" { ptr @.panic_msg.87, i64 53 }, ptr %indirectarg281, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg282, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg283, align 8
  %194 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %194(ptr align 8 %indirectarg281, ptr align 8 %indirectarg282, ptr align 8 %indirectarg283, i32 65), !dbg !3390
  unreachable, !dbg !3390

panic309:                                         ; preds = %switch.case306
  store %"char[]" { ptr @.panic_msg.88, i64 55 }, ptr %indirectarg310, align 8
  store %"char[]" { ptr @.file.76, i64 8 }, ptr %indirectarg311, align 8
  store %"char[]" { ptr @.func.149, i64 25 }, ptr %indirectarg312, align 8
  %195 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %195(ptr align 8 %indirectarg310, ptr align 8 %indirectarg311, ptr align 8 %indirectarg312, i32 69), !dbg !3402
  unreachable, !dbg !3402
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.fprintf(ptr %0, ptr align 8 %1, ptr align 8 %2, ptr align 8 %3) #0 comdat !dbg !3416 {
entry:
  %formatter = alloca %Formatter, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"any[]", align 8
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3419, metadata !DIExpression()), !dbg !3420
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3421, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.declare(metadata ptr %3, metadata !3423, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.declare(metadata ptr %formatter, metadata !3425, metadata !DIExpression()), !dbg !3426
  call void @llvm.memset.p0.i64(ptr align 8 %formatter, i8 0, i64 48, i1 false), !dbg !3426
  call void @std.io.Formatter.init(ptr %formatter, ptr @std.io.out_putstream_fn, ptr %1), !dbg !3427
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1, ptr align 8 %3, i32 16, i1 false)
  %4 = call i64 @std.io.Formatter.vprintf(ptr %retparam, ptr %formatter, ptr align 8 %indirectarg, ptr align 8 %indirectarg1), !dbg !3428
  %not_err = icmp eq i64 %4, 0, !dbg !3428
  %5 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3428
  br i1 %5, label %after_check, label %assign_optional, !dbg !3428

assign_optional:                                  ; preds = %entry
  store i64 %4, ptr %reterr, align 8, !dbg !3428
  br label %err_retblock, !dbg !3428

after_check:                                      ; preds = %entry
  %6 = load i64, ptr %retparam, align 8, !dbg !3428
  store i64 %6, ptr %0, align 8, !dbg !3428
  ret i64 0, !dbg !3428

err_retblock:                                     ; preds = %assign_optional
  %7 = load i64, ptr %reterr, align 8, !dbg !3428
  ret i64 %7, !dbg !3428
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.fprintfn(ptr %0, ptr align 8 %1, ptr align 8 %2, ptr align 8 %3) #0 comdat !dbg !3429 {
entry:
  %formatter = alloca %Formatter, align 8
  %len = alloca i64, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"any[]", align 8
  %error_var2 = alloca i64, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache13 = alloca ptr, align 8
  %.cachedtype14 = alloca ptr, align 8
  %error_var21 = alloca i64, align 8
  %.inlinecache23 = alloca ptr, align 8
  %.cachedtype24 = alloca ptr, align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  store ptr null, ptr %.cachedtype24, align 8, !dbg !3430
  store ptr null, ptr %.cachedtype14, align 8, !dbg !3430
  store ptr null, ptr %.cachedtype, align 8, !dbg !3430
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3431, metadata !DIExpression()), !dbg !3432
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3433, metadata !DIExpression()), !dbg !3434
  call void @llvm.dbg.declare(metadata ptr %3, metadata !3435, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.declare(metadata ptr %formatter, metadata !3437, metadata !DIExpression()), !dbg !3430
  call void @llvm.memset.p0.i64(ptr align 8 %formatter, i8 0, i64 48, i1 false), !dbg !3430
  call void @std.io.Formatter.init(ptr %formatter, ptr @std.io.out_putstream_fn, ptr %1), !dbg !3438
  call void @llvm.dbg.declare(metadata ptr %len, metadata !3439, metadata !DIExpression()), !dbg !3440
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1, ptr align 8 %3, i32 16, i1 false)
  %4 = call i64 @std.io.Formatter.vprintf(ptr %retparam, ptr %formatter, ptr align 8 %indirectarg, ptr align 8 %indirectarg1), !dbg !3441
  %not_err = icmp eq i64 %4, 0, !dbg !3441
  %5 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3441
  br i1 %5, label %after_check, label %assign_optional, !dbg !3441

assign_optional:                                  ; preds = %entry
  store i64 %4, ptr %error_var, align 8, !dbg !3441
  br label %guard_block, !dbg !3441

after_check:                                      ; preds = %entry
  br label %noerr_block, !dbg !3441

guard_block:                                      ; preds = %assign_optional
  %6 = load i64, ptr %error_var, align 8, !dbg !3441
  ret i64 %6, !dbg !3441

noerr_block:                                      ; preds = %after_check
  %7 = load i64, ptr %retparam, align 8, !dbg !3441
  store i64 %7, ptr %len, align 8, !dbg !3441
  %ptradd = getelementptr inbounds i8, ptr %1, i64 8, !dbg !3442
  %8 = load i64, ptr %ptradd, align 8, !dbg !3442
  %9 = inttoptr i64 %8 to ptr, !dbg !3442
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !3430
  %10 = icmp eq ptr %9, %type, !dbg !3430
  br i1 %10, label %cache_hit, label %cache_miss, !dbg !3430

cache_miss:                                       ; preds = %noerr_block
  %ptradd3 = getelementptr inbounds i8, ptr %9, i64 16, !dbg !3430
  %11 = load ptr, ptr %ptradd3, align 8, !dbg !3430
  %12 = call ptr @.dyn_search(ptr %11, ptr @"$sel.write_byte"), !dbg !3430
  store ptr %12, ptr %.inlinecache, align 8, !dbg !3430
  store ptr %9, ptr %.cachedtype, align 8, !dbg !3430
  br label %13, !dbg !3430

cache_hit:                                        ; preds = %noerr_block
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !3430
  br label %13, !dbg !3430

13:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %12, %cache_miss ], !dbg !3430
  %14 = icmp eq ptr %fn_phi, null, !dbg !3430
  br i1 %14, label %missing_function, label %match, !dbg !3430

missing_function:                                 ; preds = %13
  store %"char[]" { ptr @.panic_msg.189, i64 47 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.191, i64 8 }, ptr %indirectarg6, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 158), !dbg !3443
  unreachable, !dbg !3443

match:                                            ; preds = %13
  %16 = load ptr, ptr %1, align 8, !dbg !3443
  %17 = call i64 %fn_phi(ptr %16, i8 10), !dbg !3443
  %not_err7 = icmp eq i64 %17, 0, !dbg !3443
  %18 = call i1 @llvm.expect.i1(i1 %not_err7, i1 true), !dbg !3443
  br i1 %18, label %after_check9, label %assign_optional8, !dbg !3443

assign_optional8:                                 ; preds = %match
  store i64 %17, ptr %error_var2, align 8, !dbg !3443
  br label %guard_block10, !dbg !3443

after_check9:                                     ; preds = %match
  br label %noerr_block11, !dbg !3443

guard_block10:                                    ; preds = %assign_optional8
  %19 = load i64, ptr %error_var2, align 8, !dbg !3443
  ret i64 %19, !dbg !3443

noerr_block11:                                    ; preds = %after_check9
  %ptradd12 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !3444
  %20 = load i64, ptr %ptradd12, align 8, !dbg !3444
  %21 = inttoptr i64 %20 to ptr, !dbg !3444
  %type15 = load ptr, ptr %.cachedtype14, align 8, !dbg !3430
  %22 = icmp eq ptr %21, %type15, !dbg !3430
  br i1 %22, label %cache_hit18, label %cache_miss16, !dbg !3430

cache_miss16:                                     ; preds = %noerr_block11
  %ptradd17 = getelementptr inbounds i8, ptr %21, i64 16, !dbg !3430
  %23 = load ptr, ptr %ptradd17, align 8, !dbg !3430
  %24 = call ptr @.dyn_search(ptr %23, ptr @"$sel.flush"), !dbg !3430
  store ptr %24, ptr %.inlinecache13, align 8, !dbg !3430
  store ptr %21, ptr %.cachedtype14, align 8, !dbg !3430
  br label %25, !dbg !3430

cache_hit18:                                      ; preds = %noerr_block11
  %cache_hit_fn19 = load ptr, ptr %.inlinecache13, align 8, !dbg !3430
  br label %25, !dbg !3430

25:                                               ; preds = %cache_hit18, %cache_miss16
  %fn_phi20 = phi ptr [ %cache_hit_fn19, %cache_hit18 ], [ %24, %cache_miss16 ], !dbg !3430
  %ptrbool = icmp ne ptr %fn_phi20, null, !dbg !3430
  br i1 %ptrbool, label %if.then, label %if.exit, !dbg !3430

if.then:                                          ; preds = %25
  %ptradd22 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !3445
  %26 = load i64, ptr %ptradd22, align 8, !dbg !3445
  %27 = inttoptr i64 %26 to ptr, !dbg !3445
  %type25 = load ptr, ptr %.cachedtype24, align 8, !dbg !3430
  %28 = icmp eq ptr %27, %type25, !dbg !3430
  br i1 %28, label %cache_hit28, label %cache_miss26, !dbg !3430

cache_miss26:                                     ; preds = %if.then
  %ptradd27 = getelementptr inbounds i8, ptr %27, i64 16, !dbg !3430
  %29 = load ptr, ptr %ptradd27, align 8, !dbg !3430
  %30 = call ptr @.dyn_search(ptr %29, ptr @"$sel.flush"), !dbg !3430
  store ptr %30, ptr %.inlinecache23, align 8, !dbg !3430
  store ptr %27, ptr %.cachedtype24, align 8, !dbg !3430
  br label %31, !dbg !3430

cache_hit28:                                      ; preds = %if.then
  %cache_hit_fn29 = load ptr, ptr %.inlinecache23, align 8, !dbg !3430
  br label %31, !dbg !3430

31:                                               ; preds = %cache_hit28, %cache_miss26
  %fn_phi30 = phi ptr [ %cache_hit_fn29, %cache_hit28 ], [ %30, %cache_miss26 ], !dbg !3430
  %32 = icmp eq ptr %fn_phi30, null, !dbg !3430
  br i1 %32, label %missing_function31, label %match35, !dbg !3430

missing_function31:                               ; preds = %31
  store %"char[]" { ptr @.panic_msg.192, i64 42 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.191, i64 8 }, ptr %indirectarg34, align 8
  %33 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %33(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 159), !dbg !3445
  unreachable, !dbg !3445

match35:                                          ; preds = %31
  %34 = load ptr, ptr %1, align 8, !dbg !3445
  %35 = call i64 %fn_phi30(ptr %34), !dbg !3445
  %not_err36 = icmp eq i64 %35, 0, !dbg !3445
  %36 = call i1 @llvm.expect.i1(i1 %not_err36, i1 true), !dbg !3445
  br i1 %36, label %after_check38, label %assign_optional37, !dbg !3445

assign_optional37:                                ; preds = %match35
  store i64 %35, ptr %error_var21, align 8, !dbg !3445
  br label %guard_block39, !dbg !3445

after_check38:                                    ; preds = %match35
  br label %noerr_block40, !dbg !3445

guard_block39:                                    ; preds = %assign_optional37
  %37 = load i64, ptr %error_var21, align 8, !dbg !3445
  ret i64 %37, !dbg !3445

noerr_block40:                                    ; preds = %after_check38
  br label %if.exit, !dbg !3445

if.exit:                                          ; preds = %noerr_block40, %25
  %38 = load i64, ptr %len, align 8, !dbg !3446
  %add = add i64 %38, 1, !dbg !3446
  store i64 %add, ptr %0, align 8, !dbg !3446
  ret i64 0, !dbg !3446
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.out_putstream_fn(ptr %0, i8 %1) #0 !dbg !3447 {
entry:
  %data = alloca ptr, align 8
  %c = alloca i8, align 1
  %stream = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8
  store ptr %0, ptr %data, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !3448, metadata !DIExpression()), !dbg !3449
  store i8 %1, ptr %c, align 1
  call void @llvm.dbg.declare(metadata ptr %c, metadata !3450, metadata !DIExpression()), !dbg !3451
  call void @llvm.dbg.declare(metadata ptr %stream, metadata !3452, metadata !DIExpression()), !dbg !3454
  %2 = load ptr, ptr %data, align 8, !dbg !3455
  store ptr %2, ptr %stream, align 8, !dbg !3455
  %3 = load ptr, ptr %stream, align 8, !dbg !3456
  %checknull = icmp eq ptr %3, null, !dbg !3456
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3456
  br i1 %4, label %panic, label %checkok, !dbg !3456

checkok:                                          ; preds = %entry
  %ptradd = getelementptr inbounds i8, ptr %3, i64 8, !dbg !3457
  %5 = load i64, ptr %ptradd, align 8, !dbg !3457
  %6 = inttoptr i64 %5 to ptr, !dbg !3457
  %type = load ptr, ptr %.cachedtype, align 8
  %7 = icmp eq ptr %6, %type
  br i1 %7, label %cache_hit, label %cache_miss

cache_miss:                                       ; preds = %checkok
  %ptradd3 = getelementptr inbounds i8, ptr %6, i64 16
  %8 = load ptr, ptr %ptradd3, align 8
  %9 = call ptr @.dyn_search(ptr %8, ptr @"$sel.write_byte")
  store ptr %9, ptr %.inlinecache, align 8
  store ptr %6, ptr %.cachedtype, align 8
  br label %10

cache_hit:                                        ; preds = %checkok
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8
  br label %10

10:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %9, %cache_miss ]
  %11 = icmp eq ptr %fn_phi, null
  br i1 %11, label %missing_function, label %match

missing_function:                                 ; preds = %10
  store %"char[]" { ptr @.panic_msg.189, i64 47 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.194, i64 16 }, ptr %indirectarg6, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 219), !dbg !3458
  unreachable, !dbg !3458

match:                                            ; preds = %10
  %13 = load ptr, ptr %3, align 8, !dbg !3458
  %14 = load i8, ptr %c, align 1, !dbg !3458
  %15 = call i64 %fn_phi(ptr %13, i8 %14), !dbg !3458
  %not_err = icmp eq i64 %15, 0, !dbg !3458
  %16 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3458
  br i1 %16, label %after_check, label %assign_optional, !dbg !3458

assign_optional:                                  ; preds = %match
  store i64 %15, ptr %reterr, align 8, !dbg !3458
  br label %err_retblock, !dbg !3458

after_check:                                      ; preds = %match
  ret i64 0, !dbg !3458

err_retblock:                                     ; preds = %assign_optional
  %17 = load i64, ptr %reterr, align 8, !dbg !3458
  ret i64 %17, !dbg !3458

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.193, i64 47 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.194, i64 16 }, ptr %indirectarg2, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 219), !dbg !3456
  unreachable, !dbg !3456
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.out_putchar_fn(ptr %0, i8 %1) #0 !dbg !3459 {
entry:
  %data = alloca ptr, align 8
  %c = alloca i8, align 1
  store ptr %0, ptr %data, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !3460, metadata !DIExpression()), !dbg !3461
  store i8 %1, ptr %c, align 1
  call void @llvm.dbg.declare(metadata ptr %c, metadata !3462, metadata !DIExpression()), !dbg !3463
  %2 = load i8, ptr %c, align 1, !dbg !3464
  %zext = zext i8 %2 to i32, !dbg !3464
  %3 = call i32 @putchar(i32 %zext), !dbg !3465
  ret i64 0, !dbg !3465
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.printf(ptr %0, ptr align 8 %1, ptr align 8 %2) #0 comdat !dbg !3466 {
entry:
  %formatter = alloca %Formatter, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"any[]", align 8
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3469, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3471, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.declare(metadata ptr %formatter, metadata !3473, metadata !DIExpression()), !dbg !3474
  call void @llvm.memset.p0.i64(ptr align 8 %formatter, i8 0, i64 48, i1 false), !dbg !3474
  call void @std.io.Formatter.init(ptr %formatter, ptr @std.io.out_putchar_fn, ptr null), !dbg !3475
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1, ptr align 8 %2, i32 16, i1 false)
  %3 = call i64 @std.io.Formatter.vprintf(ptr %retparam, ptr %formatter, ptr align 8 %indirectarg, ptr align 8 %indirectarg1), !dbg !3476
  %not_err = icmp eq i64 %3, 0, !dbg !3476
  %4 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3476
  br i1 %4, label %after_check, label %assign_optional, !dbg !3476

assign_optional:                                  ; preds = %entry
  store i64 %3, ptr %reterr, align 8, !dbg !3476
  br label %err_retblock, !dbg !3476

after_check:                                      ; preds = %entry
  %5 = load i64, ptr %retparam, align 8, !dbg !3476
  store i64 %5, ptr %0, align 8, !dbg !3476
  ret i64 0, !dbg !3476

err_retblock:                                     ; preds = %assign_optional
  %6 = load i64, ptr %reterr, align 8, !dbg !3476
  ret i64 %6, !dbg !3476
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.printfn(ptr %0, ptr align 8 %1, ptr align 8 %2) #0 comdat !dbg !3477 {
entry:
  %formatter = alloca %Formatter, align 8
  %len = alloca i64, align 8
  %len.f = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"any[]", align 8
  %error_var = alloca i64, align 8
  %reterr = alloca i64, align 8
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3478, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3480, metadata !DIExpression()), !dbg !3481
  call void @llvm.dbg.declare(metadata ptr %formatter, metadata !3482, metadata !DIExpression()), !dbg !3483
  call void @llvm.memset.p0.i64(ptr align 8 %formatter, i8 0, i64 48, i1 false), !dbg !3483
  call void @std.io.Formatter.init(ptr %formatter, ptr @std.io.out_putchar_fn, ptr null), !dbg !3484
  call void @llvm.dbg.declare(metadata ptr %len, metadata !3485, metadata !DIExpression()), !dbg !3486
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1, ptr align 8 %2, i32 16, i1 false)
  %3 = call i64 @std.io.Formatter.vprintf(ptr %retparam, ptr %formatter, ptr align 8 %indirectarg, ptr align 8 %indirectarg1), !dbg !3487
  %not_err = icmp eq i64 %3, 0, !dbg !3487
  %4 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3487
  br i1 %4, label %after_check, label %assign_optional, !dbg !3487

assign_optional:                                  ; preds = %entry
  store i64 %3, ptr %len.f, align 8, !dbg !3487
  br label %after_assign, !dbg !3487

after_check:                                      ; preds = %entry
  %5 = load i64, ptr %retparam, align 8, !dbg !3487
  store i64 %5, ptr %len, align 8, !dbg !3487
  store i64 0, ptr %len.f, align 8, !dbg !3487
  br label %after_assign, !dbg !3487

after_assign:                                     ; preds = %after_check, %assign_optional
  call void @std.io.putchar(i8 10) #5, !dbg !3488
  %6 = call ptr @std.io.stdout(), !dbg !3489
  %7 = call i64 @std.io.File.flush(ptr %6), !dbg !3489
  %not_err2 = icmp eq i64 %7, 0, !dbg !3489
  %8 = call i1 @llvm.expect.i1(i1 %not_err2, i1 true), !dbg !3489
  br i1 %8, label %after_check4, label %assign_optional3, !dbg !3489

assign_optional3:                                 ; preds = %after_assign
  store i64 %7, ptr %error_var, align 8, !dbg !3489
  br label %guard_block, !dbg !3489

after_check4:                                     ; preds = %after_assign
  br label %noerr_block, !dbg !3489

guard_block:                                      ; preds = %assign_optional3
  %9 = load i64, ptr %error_var, align 8, !dbg !3489
  ret i64 %9, !dbg !3489

noerr_block:                                      ; preds = %after_check4
  %optval = load i64, ptr %len.f, align 8, !dbg !3490
  %not_err5 = icmp eq i64 %optval, 0, !dbg !3490
  %10 = call i1 @llvm.expect.i1(i1 %not_err5, i1 true), !dbg !3490
  br i1 %10, label %after_check7, label %assign_optional6, !dbg !3490

assign_optional6:                                 ; preds = %noerr_block
  store i64 %optval, ptr %reterr, align 8, !dbg !3490
  br label %err_retblock, !dbg !3490

after_check7:                                     ; preds = %noerr_block
  %11 = load i64, ptr %len, align 8, !dbg !3490
  %add = add i64 %11, 1, !dbg !3490
  store i64 %add, ptr %0, align 8, !dbg !3490
  ret i64 0, !dbg !3490

err_retblock:                                     ; preds = %assign_optional6
  %12 = load i64, ptr %reterr, align 8, !dbg !3490
  ret i64 %12, !dbg !3490
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.eprintf(ptr %0, ptr align 8 %1, ptr align 8 %2) #0 comdat !dbg !3491 {
entry:
  %formatter = alloca %Formatter, align 8
  %stream = alloca %any, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"any[]", align 8
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3492, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3494, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.declare(metadata ptr %formatter, metadata !3496, metadata !DIExpression()), !dbg !3497
  call void @llvm.memset.p0.i64(ptr align 8 %formatter, i8 0, i64 48, i1 false), !dbg !3497
  call void @llvm.dbg.declare(metadata ptr %stream, metadata !3498, metadata !DIExpression()), !dbg !3499
  %3 = call ptr @std.io.stderr(), !dbg !3500
  %4 = insertvalue %any undef, ptr %3, 0, !dbg !3500
  %5 = insertvalue %any %4, i64 ptrtoint (ptr @"$ct.std.io.File" to i64), 1, !dbg !3500
  store %any %5, ptr %stream, align 8, !dbg !3500
  call void @std.io.Formatter.init(ptr %formatter, ptr @std.io.out_putstream_fn, ptr %stream), !dbg !3501
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1, ptr align 8 %2, i32 16, i1 false)
  %6 = call i64 @std.io.Formatter.vprintf(ptr %retparam, ptr %formatter, ptr align 8 %indirectarg, ptr align 8 %indirectarg1), !dbg !3502
  %not_err = icmp eq i64 %6, 0, !dbg !3502
  %7 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3502
  br i1 %7, label %after_check, label %assign_optional, !dbg !3502

assign_optional:                                  ; preds = %entry
  store i64 %6, ptr %reterr, align 8, !dbg !3502
  br label %err_retblock, !dbg !3502

after_check:                                      ; preds = %entry
  %8 = load i64, ptr %retparam, align 8, !dbg !3502
  store i64 %8, ptr %0, align 8, !dbg !3502
  ret i64 0, !dbg !3502

err_retblock:                                     ; preds = %assign_optional
  %9 = load i64, ptr %reterr, align 8, !dbg !3502
  ret i64 %9, !dbg !3502
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.eprintfn(ptr %0, ptr align 8 %1, ptr align 8 %2) #0 comdat !dbg !3503 {
entry:
  %formatter = alloca %Formatter, align 8
  %stream = alloca %any, align 8
  %len = alloca i64, align 8
  %len.f = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"any[]", align 8
  %error_var = alloca i64, align 8
  %error_var5 = alloca i64, align 8
  %reterr = alloca i64, align 8
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3504, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3506, metadata !DIExpression()), !dbg !3507
  call void @llvm.dbg.declare(metadata ptr %formatter, metadata !3508, metadata !DIExpression()), !dbg !3509
  call void @llvm.memset.p0.i64(ptr align 8 %formatter, i8 0, i64 48, i1 false), !dbg !3509
  call void @llvm.dbg.declare(metadata ptr %stream, metadata !3510, metadata !DIExpression()), !dbg !3511
  %3 = call ptr @std.io.stderr(), !dbg !3512
  %4 = insertvalue %any undef, ptr %3, 0, !dbg !3512
  %5 = insertvalue %any %4, i64 ptrtoint (ptr @"$ct.std.io.File" to i64), 1, !dbg !3512
  store %any %5, ptr %stream, align 8, !dbg !3512
  call void @std.io.Formatter.init(ptr %formatter, ptr @std.io.out_putstream_fn, ptr %stream), !dbg !3513
  call void @llvm.dbg.declare(metadata ptr %len, metadata !3514, metadata !DIExpression()), !dbg !3515
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1, ptr align 8 %2, i32 16, i1 false)
  %6 = call i64 @std.io.Formatter.vprintf(ptr %retparam, ptr %formatter, ptr align 8 %indirectarg, ptr align 8 %indirectarg1), !dbg !3516
  %not_err = icmp eq i64 %6, 0, !dbg !3516
  %7 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3516
  br i1 %7, label %after_check, label %assign_optional, !dbg !3516

assign_optional:                                  ; preds = %entry
  store i64 %6, ptr %len.f, align 8, !dbg !3516
  br label %after_assign, !dbg !3516

after_check:                                      ; preds = %entry
  %8 = load i64, ptr %retparam, align 8, !dbg !3516
  store i64 %8, ptr %len, align 8, !dbg !3516
  store i64 0, ptr %len.f, align 8, !dbg !3516
  br label %after_assign, !dbg !3516

after_assign:                                     ; preds = %after_check, %assign_optional
  %9 = call ptr @std.io.stderr(), !dbg !3517
  %10 = call i64 @std.io.File.write_byte(ptr %9, i8 10), !dbg !3517
  %not_err2 = icmp eq i64 %10, 0, !dbg !3517
  %11 = call i1 @llvm.expect.i1(i1 %not_err2, i1 true), !dbg !3517
  br i1 %11, label %after_check4, label %assign_optional3, !dbg !3517

assign_optional3:                                 ; preds = %after_assign
  store i64 %10, ptr %error_var, align 8, !dbg !3517
  br label %guard_block, !dbg !3517

after_check4:                                     ; preds = %after_assign
  br label %noerr_block, !dbg !3517

guard_block:                                      ; preds = %assign_optional3
  %12 = load i64, ptr %error_var, align 8, !dbg !3517
  ret i64 %12, !dbg !3517

noerr_block:                                      ; preds = %after_check4
  %13 = call ptr @std.io.stderr(), !dbg !3518
  %14 = call i64 @std.io.File.flush(ptr %13), !dbg !3518
  %not_err6 = icmp eq i64 %14, 0, !dbg !3518
  %15 = call i1 @llvm.expect.i1(i1 %not_err6, i1 true), !dbg !3518
  br i1 %15, label %after_check8, label %assign_optional7, !dbg !3518

assign_optional7:                                 ; preds = %noerr_block
  store i64 %14, ptr %error_var5, align 8, !dbg !3518
  br label %guard_block9, !dbg !3518

after_check8:                                     ; preds = %noerr_block
  br label %noerr_block10, !dbg !3518

guard_block9:                                     ; preds = %assign_optional7
  %16 = load i64, ptr %error_var5, align 8, !dbg !3518
  ret i64 %16, !dbg !3518

noerr_block10:                                    ; preds = %after_check8
  %optval = load i64, ptr %len.f, align 8, !dbg !3519
  %not_err11 = icmp eq i64 %optval, 0, !dbg !3519
  %17 = call i1 @llvm.expect.i1(i1 %not_err11, i1 true), !dbg !3519
  br i1 %17, label %after_check13, label %assign_optional12, !dbg !3519

assign_optional12:                                ; preds = %noerr_block10
  store i64 %optval, ptr %reterr, align 8, !dbg !3519
  br label %err_retblock, !dbg !3519

after_check13:                                    ; preds = %noerr_block10
  %18 = load i64, ptr %len, align 8, !dbg !3519
  %add = add i64 %18, 1, !dbg !3519
  store i64 %add, ptr %0, align 8, !dbg !3519
  ret i64 0, !dbg !3519

err_retblock:                                     ; preds = %assign_optional12
  %19 = load i64, ptr %reterr, align 8, !dbg !3519
  ret i64 %19, !dbg !3519
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.bprintf(ptr %0, ptr align 8 %1, ptr align 8 %2, ptr align 8 %3) #0 comdat !dbg !3520 {
entry:
  %formatter = alloca %Formatter, align 8
  %data = alloca %BufferData, align 8
  %size = alloca i64, align 8
  %error_var = alloca i64, align 8
  %retparam = alloca i64, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"any[]", align 8
  %reterr = alloca i64, align 8
  %taddr = alloca i64, align 8
  %taddr2 = alloca i64, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg6 = alloca %"any[]", align 8
  %taddr9 = alloca i64, align 8
  %taddr10 = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %varargslots14 = alloca [2 x %any], align 16
  %indirectarg17 = alloca %"any[]", align 8
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3524, metadata !DIExpression()), !dbg !3525
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3526, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.declare(metadata ptr %3, metadata !3528, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.declare(metadata ptr %formatter, metadata !3530, metadata !DIExpression()), !dbg !3531
  call void @llvm.memset.p0.i64(ptr align 8 %formatter, i8 0, i64 48, i1 false), !dbg !3531
  call void @llvm.dbg.declare(metadata ptr %data, metadata !3532, metadata !DIExpression()), !dbg !3537
  call void @llvm.memset.p0.i64(ptr align 8 %data, i8 0, i64 24, i1 false), !dbg !3537
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %data, ptr align 8 %1, i32 16, i1 false), !dbg !3538
  call void @std.io.Formatter.init(ptr %formatter, ptr @std.io.out_buffer_fn, ptr %data), !dbg !3539
  call void @llvm.dbg.declare(metadata ptr %size, metadata !3540, metadata !DIExpression()), !dbg !3541
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg1, ptr align 8 %3, i32 16, i1 false)
  %4 = call i64 @std.io.Formatter.vprintf(ptr %retparam, ptr %formatter, ptr align 8 %indirectarg, ptr align 8 %indirectarg1), !dbg !3542
  %not_err = icmp eq i64 %4, 0, !dbg !3542
  %5 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3542
  br i1 %5, label %after_check, label %assign_optional, !dbg !3542

assign_optional:                                  ; preds = %entry
  store i64 %4, ptr %error_var, align 8, !dbg !3542
  br label %guard_block, !dbg !3542

after_check:                                      ; preds = %entry
  br label %noerr_block, !dbg !3542

guard_block:                                      ; preds = %assign_optional
  %6 = load i64, ptr %error_var, align 8, !dbg !3542
  ret i64 %6, !dbg !3542

noerr_block:                                      ; preds = %after_check
  %7 = load i64, ptr %retparam, align 8, !dbg !3542
  store i64 %7, ptr %size, align 8, !dbg !3542
  %8 = load %"char[]", ptr %1, align 8, !dbg !3543
  %9 = extractvalue %"char[]" %8, 0, !dbg !3543
  %10 = extractvalue %"char[]" %8, 1, !dbg !3544
  %gt = icmp ugt i64 0, %10, !dbg !3544
  %11 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !3544
  br i1 %11, label %panic, label %checkok, !dbg !3544

checkok:                                          ; preds = %noerr_block
  %ptradd7 = getelementptr inbounds i8, ptr %data, i64 16, !dbg !3545
  %12 = load i64, ptr %ptradd7, align 8, !dbg !3545
  %add = add i64 0, %12, !dbg !3545
  %lt = icmp ult i64 %10, %add, !dbg !3545
  %sub = sub i64 %add, 1, !dbg !3545
  %13 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !3545
  br i1 %13, label %panic8, label %checkok18, !dbg !3545

checkok18:                                        ; preds = %checkok
  %size19 = sub i64 %add, 0, !dbg !3543
  %14 = insertvalue %"char[]" undef, ptr %9, 0, !dbg !3543
  %15 = insertvalue %"char[]" %14, i64 %size19, 1, !dbg !3543
  store %"char[]" %15, ptr %0, align 8, !dbg !3543
  ret i64 0, !dbg !3543

panic:                                            ; preds = %noerr_block
  store i64 %10, ptr %taddr, align 8
  %16 = insertvalue %any undef, ptr %taddr, 0
  %17 = insertvalue %any %16, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr2, align 8
  %18 = insertvalue %any undef, ptr %taddr2, 0
  %19 = insertvalue %any %18, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.195, i64 7 }, ptr %indirectarg5, align 8
  store %any %17, ptr %varargslots, align 16
  %ptradd = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %19, ptr %ptradd, align 16
  %20 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %20, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg6, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 313, ptr align 8 %indirectarg6), !dbg !3543
  unreachable, !dbg !3543

panic8:                                           ; preds = %checkok
  store i64 %sub, ptr %taddr9, align 8
  %21 = insertvalue %any undef, ptr %taddr9, 0
  %22 = insertvalue %any %21, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %10, ptr %taddr10, align 8
  %23 = insertvalue %any undef, ptr %taddr10, 0
  %24 = insertvalue %any %23, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.195, i64 7 }, ptr %indirectarg13, align 8
  store %any %22, ptr %varargslots14, align 16
  %ptradd15 = getelementptr inbounds i8, ptr %varargslots14, i64 16
  store %any %24, ptr %ptradd15, align 16
  %25 = insertvalue %"any[]" undef, ptr %varargslots14, 0
  %"$$temp16" = insertvalue %"any[]" %25, i64 2, 1
  store %"any[]" %"$$temp16", ptr %indirectarg17, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 313, ptr align 8 %indirectarg17), !dbg !3543
  unreachable, !dbg !3543
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.out_buffer_fn(ptr %0, i8 %1) #0 !dbg !3546 {
entry:
  %data = alloca ptr, align 8
  %c = alloca i8, align 1
  %buffer_data = alloca ptr, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr26 = alloca i64, align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg31 = alloca %"any[]", align 8
  store ptr %0, ptr %data, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !3547, metadata !DIExpression()), !dbg !3548
  store i8 %1, ptr %c, align 1
  call void @llvm.dbg.declare(metadata ptr %c, metadata !3549, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.declare(metadata ptr %buffer_data, metadata !3551, metadata !DIExpression()), !dbg !3553
  %2 = load ptr, ptr %data, align 8, !dbg !3554
  store ptr %2, ptr %buffer_data, align 8, !dbg !3554
  %3 = load ptr, ptr %buffer_data, align 8, !dbg !3555
  %checknull = icmp eq ptr %3, null, !dbg !3555
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3555
  br i1 %4, label %panic, label %checkok, !dbg !3555

checkok:                                          ; preds = %entry
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !3555
  %5 = load i64, ptr %ptradd, align 8, !dbg !3555
  %6 = load ptr, ptr %buffer_data, align 8, !dbg !3556
  %checknull3 = icmp eq ptr %6, null, !dbg !3556
  %7 = call i1 @llvm.expect.i1(i1 %checknull3, i1 false), !dbg !3556
  br i1 %7, label %panic4, label %checkok8, !dbg !3556

checkok8:                                         ; preds = %checkok
  %ptradd9 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !3556
  %8 = load i64, ptr %ptradd9, align 8, !dbg !3556
  %ge = icmp uge i64 %5, %8, !dbg !3555
  br i1 %ge, label %if.then, label %if.exit, !dbg !3555

if.then:                                          ; preds = %checkok8
  ret i64 ptrtoint (ptr @"std.io.PrintFault$BUFFER_EXCEEDED" to i64), !dbg !3557

if.exit:                                          ; preds = %checkok8
  %9 = load ptr, ptr %buffer_data, align 8, !dbg !3558
  %checknull10 = icmp eq ptr %9, null, !dbg !3558
  %10 = call i1 @llvm.expect.i1(i1 %checknull10, i1 false), !dbg !3558
  br i1 %10, label %panic11, label %checkok15, !dbg !3558

checkok15:                                        ; preds = %if.exit
  %ptradd16 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !3558
  %11 = load i64, ptr %ptradd16, align 8, !dbg !3558
  %12 = load ptr, ptr %9, align 8, !dbg !3558
  %13 = load ptr, ptr %buffer_data, align 8, !dbg !3559
  %checknull17 = icmp eq ptr %13, null, !dbg !3559
  %14 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !3559
  br i1 %14, label %panic18, label %checkok22, !dbg !3559

checkok22:                                        ; preds = %checkok15
  %ptradd23 = getelementptr inbounds i8, ptr %13, i64 16, !dbg !3559
  %15 = load i64, ptr %ptradd23, align 8, !dbg !3559
  %add = add i64 %15, 1, !dbg !3559
  store i64 %add, ptr %ptradd23, align 8, !dbg !3559
  %ge24 = icmp uge i64 %15, %11, !dbg !3559
  %16 = call i1 @llvm.expect.i1(i1 %ge24, i1 false), !dbg !3559
  br i1 %16, label %panic25, label %checkok32, !dbg !3559

checkok32:                                        ; preds = %checkok22
  %ptradd33 = getelementptr inbounds i8, ptr %12, i64 %15, !dbg !3559
  %17 = load i8, ptr %c, align 1, !dbg !3560
  store i8 %17, ptr %ptradd33, align 1, !dbg !3560
  ret i64 0, !dbg !3560

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg.196, i64 52 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.197, i64 13 }, ptr %indirectarg2, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 320), !dbg !3555
  unreachable, !dbg !3555

panic4:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.196, i64 52 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.197, i64 13 }, ptr %indirectarg7, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 320), !dbg !3556
  unreachable, !dbg !3556

panic11:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.196, i64 52 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.197, i64 13 }, ptr %indirectarg14, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 321), !dbg !3558
  unreachable, !dbg !3558

panic18:                                          ; preds = %checkok15
  store %"char[]" { ptr @.panic_msg.196, i64 52 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.197, i64 13 }, ptr %indirectarg21, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 321), !dbg !3559
  unreachable, !dbg !3559

panic25:                                          ; preds = %checkok22
  store i64 %11, ptr %taddr, align 8
  %22 = insertvalue %any undef, ptr %taddr, 0
  %23 = insertvalue %any %22, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %15, ptr %taddr26, align 8
  %24 = insertvalue %any undef, ptr %taddr26, 0
  %25 = insertvalue %any %24, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.190, i64 5 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.197, i64 13 }, ptr %indirectarg29, align 8
  store %any %23, ptr %varargslots, align 16
  %ptradd30 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %25, ptr %ptradd30, align 16
  %26 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %26, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg31, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 321, ptr align 8 %indirectarg31), !dbg !3559
  unreachable, !dbg !3559
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.putchar(i8 %0) #0 comdat !dbg !3561 {
entry:
  %c = alloca i8, align 1
  store i8 %0, ptr %c, align 1
  call void @llvm.dbg.declare(metadata ptr %c, metadata !3564, metadata !DIExpression()), !dbg !3565
  %1 = load i8, ptr %c, align 1, !dbg !3566
  %zext = zext i8 %1 to i32, !dbg !3566
  %2 = call i32 @putchar(i32 %zext), !dbg !3567
  ret void, !dbg !3567
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.stdout() #0 comdat !dbg !3568 {
entry:
  %result = alloca %File, align 8
  %0 = load ptr, ptr @stdout.file, align 8, !dbg !3572
  %not = icmp eq ptr %0, null, !dbg !3572
  br i1 %not, label %if.then, label %if.exit, !dbg !3572

if.then:                                          ; preds = %entry
  %1 = call ptr @__acrt_iob_func(i32 1), !dbg !3573
  %2 = call i64 @std.io.file.from_handle(ptr %1), !dbg !3577
  %3 = inttoptr i64 %2 to ptr
  store ptr %3, ptr %result, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 @stdout.file, ptr align 8 %result, i32 8, i1 false)
  br label %if.exit

if.exit:                                          ; preds = %if.then, %entry
  ret ptr @stdout.file, !dbg !3578
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.stderr() #0 comdat !dbg !3579 {
entry:
  %result = alloca %File, align 8
  %0 = load ptr, ptr @stderr.file, align 8, !dbg !3580
  %not = icmp eq ptr %0, null, !dbg !3580
  br i1 %not, label %if.then, label %if.exit, !dbg !3580

if.then:                                          ; preds = %entry
  %1 = call ptr @__acrt_iob_func(i32 2), !dbg !3581
  %2 = call i64 @std.io.file.from_handle(ptr %1), !dbg !3584
  %3 = inttoptr i64 %2 to ptr
  store ptr %3, ptr %result, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 @stderr.file, ptr align 8 %result, i32 8, i1 false)
  br label %if.exit

if.exit:                                          ; preds = %if.then, %entry
  ret ptr @stderr.file, !dbg !3585
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.stdin() #0 comdat !dbg !3586 {
entry:
  %result = alloca %File, align 8
  %0 = load ptr, ptr @stdin.file, align 8, !dbg !3587
  %not = icmp eq ptr %0, null, !dbg !3587
  br i1 %not, label %if.then, label %if.exit, !dbg !3587

if.then:                                          ; preds = %entry
  %1 = call ptr @__acrt_iob_func(i32 0), !dbg !3588
  %2 = call i64 @std.io.file.from_handle(ptr %1), !dbg !3591
  %3 = inttoptr i64 %2 to ptr
  store ptr %3, ptr %result, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 @stdin.file, ptr align 8 %result, i32 8, i1 false)
  br label %if.exit

if.exit:                                          ; preds = %if.then, %entry
  ret ptr @stdin.file, !dbg !3592
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.ReadBuffer.init(ptr %0, ptr align 8 %1, ptr align 8 %2) #0 comdat !dbg !3593 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %.assign_list = alloca %ReadBuffer, align 8
  %3 = icmp eq ptr %0, null, !dbg !3604
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !3604
  br i1 %4, label %panic, label %checkok, !dbg !3604

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3605, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3607, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3609, metadata !DIExpression()), !dbg !3610
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3611
  %5 = load i64, ptr %ptradd, align 8, !dbg !3611
  %lt = icmp ult i64 0, %5, !dbg !3611
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !3611

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.199, i64 34 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 14), !dbg !3611
  unreachable, !dbg !3611

assert_ok:                                        ; preds = %checkok
  %7 = load ptr, ptr %self, align 8, !dbg !3613
  %checknull = icmp eq ptr %7, null, !dbg !3613
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3613
  br i1 %8, label %panic6, label %checkok10, !dbg !3613

checkok10:                                        ; preds = %assert_ok
  %ptradd11 = getelementptr inbounds i8, ptr %7, i64 16, !dbg !3613
  %ptradd12 = getelementptr inbounds i8, ptr %ptradd11, i64 8, !dbg !3613
  %9 = load i64, ptr %ptradd12, align 8, !dbg !3613
  %eq = icmp eq i64 0, %9, !dbg !3613
  br i1 %eq, label %assert_ok17, label %assert_fail13, !dbg !3613

assert_fail13:                                    ; preds = %checkok10
  store %"char[]" { ptr @.panic_msg.200, i64 88 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg16, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 15), !dbg !3613
  unreachable, !dbg !3613

assert_ok17:                                      ; preds = %checkok10
  %11 = load ptr, ptr %self, align 8, !dbg !3614
  %checknull18 = icmp eq ptr %11, null, !dbg !3614
  %12 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !3614
  br i1 %12, label %panic19, label %checkok23, !dbg !3614

checkok23:                                        ; preds = %assert_ok17
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 48, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %.assign_list, ptr align 8 %1, i32 16, i1 false), !dbg !3615
  %ptradd24 = getelementptr inbounds i8, ptr %.assign_list, i64 16, !dbg !3615
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd24, ptr align 8 %2, i32 16, i1 false), !dbg !3616
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %11, ptr align 8 %.assign_list, i32 48, i1 false), !dbg !3616
  %13 = load ptr, ptr %self, align 8, !dbg !3617
  ret ptr %13, !dbg !3617

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 17), !dbg !3606
  unreachable, !dbg !3606

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg9, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 15), !dbg !3613
  unreachable, !dbg !3613

panic19:                                          ; preds = %assert_ok17
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg22, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 19), !dbg !3614
  unreachable, !dbg !3614
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.ReadBuffer.str_view(ptr noalias sret(%"char[]") align 8 %0, ptr %1) #0 comdat !dbg !3618 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr16 = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg21 = alloca %"any[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %taddr39 = alloca i64, align 8
  %taddr40 = alloca i64, align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %varargslots44 = alloca [2 x %any], align 16
  %indirectarg47 = alloca %"any[]", align 8
  %2 = icmp eq ptr %1, null, !dbg !3621
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !3621
  br i1 %3, label %panic, label %checkok, !dbg !3621

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3622, metadata !DIExpression()), !dbg !3623
  %4 = load ptr, ptr %self, align 8, !dbg !3624
  %checknull = icmp eq ptr %4, null, !dbg !3624
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3624
  br i1 %5, label %panic3, label %checkok7, !dbg !3624

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !3624
  %6 = load %"char[]", ptr %ptradd, align 8, !dbg !3624
  %7 = extractvalue %"char[]" %6, 0, !dbg !3624
  %8 = load ptr, ptr %self, align 8, !dbg !3625
  %checknull8 = icmp eq ptr %8, null, !dbg !3625
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !3625
  br i1 %9, label %panic9, label %checkok13, !dbg !3625

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %8, i64 32, !dbg !3625
  %10 = load i64, ptr %ptradd14, align 8, !dbg !3625
  %11 = extractvalue %"char[]" %6, 1, !dbg !3625
  %gt = icmp ugt i64 %10, %11, !dbg !3625
  %12 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !3625
  br i1 %12, label %panic15, label %checkok22, !dbg !3625

checkok22:                                        ; preds = %checkok13
  %13 = load ptr, ptr %self, align 8, !dbg !3626
  %checknull23 = icmp eq ptr %13, null, !dbg !3626
  %14 = call i1 @llvm.expect.i1(i1 %checknull23, i1 false), !dbg !3626
  br i1 %14, label %panic24, label %checkok28, !dbg !3626

checkok28:                                        ; preds = %checkok22
  %ptradd29 = getelementptr inbounds i8, ptr %13, i64 40, !dbg !3626
  %15 = load i64, ptr %ptradd29, align 8, !dbg !3626
  %16 = load ptr, ptr %self, align 8, !dbg !3627
  %checknull30 = icmp eq ptr %16, null, !dbg !3627
  %17 = call i1 @llvm.expect.i1(i1 %checknull30, i1 false), !dbg !3627
  br i1 %17, label %panic31, label %checkok35, !dbg !3627

checkok35:                                        ; preds = %checkok28
  %ptradd36 = getelementptr inbounds i8, ptr %16, i64 32, !dbg !3627
  %18 = load i64, ptr %ptradd36, align 8, !dbg !3627
  %sub = sub i64 %15, %18, !dbg !3626
  %add = add i64 %10, %sub, !dbg !3626
  %lt = icmp ult i64 %11, %add, !dbg !3626
  %sub37 = sub i64 %add, 1, !dbg !3626
  %19 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !3626
  br i1 %19, label %panic38, label %checkok48, !dbg !3626

checkok48:                                        ; preds = %checkok35
  %size = sub i64 %add, %10, !dbg !3628
  %ptradd49 = getelementptr inbounds i8, ptr %7, i64 %10, !dbg !3628
  %20 = insertvalue %"char[]" undef, ptr %ptradd49, 0, !dbg !3628
  %21 = insertvalue %"char[]" %20, i64 %size, 1, !dbg !3628
  store %"char[]" %21, ptr %0, align 8, !dbg !3628
  ret void, !dbg !3628

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg2, align 8
  %22 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %22(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 22), !dbg !3623
  unreachable, !dbg !3623

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg6, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 24), !dbg !3624
  unreachable, !dbg !3624

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg12, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 24), !dbg !3625
  unreachable, !dbg !3625

panic15:                                          ; preds = %checkok13
  store i64 %11, ptr %taddr, align 8
  %25 = insertvalue %any undef, ptr %taddr, 0
  %26 = insertvalue %any %25, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %10, ptr %taddr16, align 8
  %27 = insertvalue %any undef, ptr %taddr16, 0
  %28 = insertvalue %any %27, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg19, align 8
  store %any %26, ptr %varargslots, align 16
  %ptradd20 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %28, ptr %ptradd20, align 16
  %29 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %29, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg21, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 24, ptr align 8 %indirectarg21), !dbg !3628
  unreachable, !dbg !3628

panic24:                                          ; preds = %checkok22
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg27, align 8
  %30 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %30(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 24), !dbg !3626
  unreachable, !dbg !3626

panic31:                                          ; preds = %checkok28
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg34, align 8
  %31 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %31(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 24), !dbg !3627
  unreachable, !dbg !3627

panic38:                                          ; preds = %checkok35
  store i64 %sub37, ptr %taddr39, align 8
  %32 = insertvalue %any undef, ptr %taddr39, 0
  %33 = insertvalue %any %32, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %11, ptr %taddr40, align 8
  %34 = insertvalue %any undef, ptr %taddr40, 0
  %35 = insertvalue %any %34, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg43, align 8
  store %any %33, ptr %varargslots44, align 16
  %ptradd45 = getelementptr inbounds i8, ptr %varargslots44, i64 16
  store %any %35, ptr %ptradd45, align 16
  %36 = insertvalue %"any[]" undef, ptr %varargslots44, 0
  %"$$temp46" = insertvalue %"any[]" %36, i64 2, 1
  store %"any[]" %"$$temp46", ptr %indirectarg47, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 24, ptr align 8 %indirectarg47), !dbg !3628
  unreachable, !dbg !3628
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ReadBuffer.close(ptr %0) #0 comdat !dbg !3629 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %.inlinecache16 = alloca ptr, align 8
  %.cachedtype17 = alloca ptr, align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype17, align 8, !dbg !3632
  store ptr null, ptr %.cachedtype, align 8, !dbg !3632
  %1 = icmp eq ptr %0, null, !dbg !3632
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !3632
  br i1 %2, label %panic, label %checkok, !dbg !3632

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3633, metadata !DIExpression()), !dbg !3634
  %3 = load ptr, ptr %self, align 8, !dbg !3635
  %checknull = icmp eq ptr %3, null, !dbg !3635
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3635
  br i1 %4, label %panic3, label %checkok7, !dbg !3635

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 8, !dbg !3635
  %5 = load i64, ptr %ptradd, align 8, !dbg !3635
  %6 = inttoptr i64 %5 to ptr, !dbg !3635
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !3632
  %7 = icmp eq ptr %6, %type, !dbg !3632
  br i1 %7, label %cache_hit, label %cache_miss, !dbg !3632

cache_miss:                                       ; preds = %checkok7
  %ptradd8 = getelementptr inbounds i8, ptr %6, i64 16, !dbg !3632
  %8 = load ptr, ptr %ptradd8, align 8, !dbg !3632
  %9 = call ptr @.dyn_search(ptr %8, ptr @"$sel.close"), !dbg !3632
  store ptr %9, ptr %.inlinecache, align 8, !dbg !3632
  store ptr %6, ptr %.cachedtype, align 8, !dbg !3632
  br label %10, !dbg !3632

cache_hit:                                        ; preds = %checkok7
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !3632
  br label %10, !dbg !3632

10:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %9, %cache_miss ], !dbg !3632
  %ptrbool = icmp ne ptr %fn_phi, null, !dbg !3632
  br i1 %ptrbool, label %if.then, label %if.exit, !dbg !3632

if.then:                                          ; preds = %10
  %11 = load ptr, ptr %self, align 8, !dbg !3636
  %checknull9 = icmp eq ptr %11, null, !dbg !3636
  %12 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !3636
  br i1 %12, label %panic10, label %checkok14, !dbg !3636

checkok14:                                        ; preds = %if.then
  %ptradd15 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !3636
  %13 = load i64, ptr %ptradd15, align 8, !dbg !3636
  %14 = inttoptr i64 %13 to ptr, !dbg !3636
  %type18 = load ptr, ptr %.cachedtype17, align 8, !dbg !3632
  %15 = icmp eq ptr %14, %type18, !dbg !3632
  br i1 %15, label %cache_hit21, label %cache_miss19, !dbg !3632

cache_miss19:                                     ; preds = %checkok14
  %ptradd20 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !3632
  %16 = load ptr, ptr %ptradd20, align 8, !dbg !3632
  %17 = call ptr @.dyn_search(ptr %16, ptr @"$sel.close"), !dbg !3632
  store ptr %17, ptr %.inlinecache16, align 8, !dbg !3632
  store ptr %14, ptr %.cachedtype17, align 8, !dbg !3632
  br label %18, !dbg !3632

cache_hit21:                                      ; preds = %checkok14
  %cache_hit_fn22 = load ptr, ptr %.inlinecache16, align 8, !dbg !3632
  br label %18, !dbg !3632

18:                                               ; preds = %cache_hit21, %cache_miss19
  %fn_phi23 = phi ptr [ %cache_hit_fn22, %cache_hit21 ], [ %17, %cache_miss19 ], !dbg !3632
  %19 = icmp eq ptr %fn_phi23, null, !dbg !3632
  br i1 %19, label %missing_function, label %match, !dbg !3632

missing_function:                                 ; preds = %18
  store %"char[]" { ptr @.panic_msg.203, i64 42 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg26, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 29), !dbg !3636
  unreachable, !dbg !3636

match:                                            ; preds = %18
  %21 = load ptr, ptr %11, align 8, !dbg !3636
  %22 = call i64 %fn_phi23(ptr %21), !dbg !3636
  %not_err = icmp eq i64 %22, 0, !dbg !3636
  %23 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3636
  br i1 %23, label %after_check, label %assign_optional, !dbg !3636

assign_optional:                                  ; preds = %match
  store i64 %22, ptr %error_var, align 8, !dbg !3636
  br label %guard_block, !dbg !3636

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !3636

guard_block:                                      ; preds = %assign_optional
  %24 = load i64, ptr %error_var, align 8, !dbg !3636
  ret i64 %24, !dbg !3636

noerr_block:                                      ; preds = %after_check
  br label %if.exit, !dbg !3636

if.exit:                                          ; preds = %noerr_block, %10
  ret i64 0, !dbg !3636

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg2, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 27), !dbg !3634
  unreachable, !dbg !3634

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg6, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 29), !dbg !3635
  unreachable, !dbg !3635

panic10:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg13, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 29), !dbg !3636
  unreachable, !dbg !3636
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ReadBuffer.read(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !3637 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %error_var = alloca i64, align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg44 = alloca %"char[]", align 8
  %error_var45 = alloca i64, align 8
  %n = alloca i64, align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg63 = alloca %"char[]", align 8
  %x = alloca i64, align 8
  %.anon = alloca i64, align 8
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %indirectarg78 = alloca %"char[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr83 = alloca i64, align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg88 = alloca %"any[]", align 8
  %taddr93 = alloca i64, align 8
  %taddr94 = alloca i64, align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %varargslots98 = alloca [2 x %any], align 16
  %indirectarg101 = alloca %"any[]", align 8
  %taddr106 = alloca i64, align 8
  %taddr107 = alloca i64, align 8
  %indirectarg108 = alloca %"char[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %indirectarg110 = alloca %"char[]", align 8
  %varargslots111 = alloca [2 x %any], align 16
  %indirectarg114 = alloca %"any[]", align 8
  %taddr120 = alloca i64, align 8
  %taddr121 = alloca i64, align 8
  %indirectarg122 = alloca %"char[]", align 8
  %indirectarg123 = alloca %"char[]", align 8
  %indirectarg124 = alloca %"char[]", align 8
  %varargslots125 = alloca [2 x %any], align 16
  %indirectarg128 = alloca %"any[]", align 8
  %taddr131 = alloca %"char[]", align 8
  %taddr133 = alloca %"char[]", align 8
  %taddr136 = alloca i64, align 8
  %taddr137 = alloca i64, align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg139 = alloca %"char[]", align 8
  %indirectarg140 = alloca %"char[]", align 8
  %varargslots141 = alloca [2 x %any], align 16
  %indirectarg144 = alloca %"any[]", align 8
  %indirectarg148 = alloca %"char[]", align 8
  %indirectarg149 = alloca %"char[]", align 8
  %indirectarg150 = alloca %"char[]", align 8
  %reterr154 = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !3640
  %3 = icmp eq ptr %1, null, !dbg !3640
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !3640
  br i1 %4, label %panic, label %checkok, !dbg !3640

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3641, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3643, metadata !DIExpression()), !dbg !3644
  %5 = load ptr, ptr %self, align 8, !dbg !3645
  %checknull = icmp eq ptr %5, null, !dbg !3645
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3645
  br i1 %6, label %panic3, label %checkok7, !dbg !3645

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 32, !dbg !3645
  %7 = load i64, ptr %ptradd, align 8, !dbg !3645
  %8 = load ptr, ptr %self, align 8, !dbg !3646
  %checknull8 = icmp eq ptr %8, null, !dbg !3646
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !3646
  br i1 %9, label %panic9, label %checkok13, !dbg !3646

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %8, i64 40, !dbg !3646
  %10 = load i64, ptr %ptradd14, align 8, !dbg !3646
  %eq = icmp eq i64 %7, %10, !dbg !3645
  br i1 %eq, label %if.then, label %if.exit51, !dbg !3645

if.then:                                          ; preds = %checkok13
  %11 = load ptr, ptr %self, align 8, !dbg !3647
  %checknull15 = icmp eq ptr %11, null, !dbg !3647
  %12 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !3647
  br i1 %12, label %panic16, label %checkok20, !dbg !3647

checkok20:                                        ; preds = %if.then
  %ptradd21 = getelementptr inbounds i8, ptr %11, i64 32, !dbg !3647
  %13 = load i64, ptr %ptradd21, align 8, !dbg !3647
  %eq22 = icmp eq i64 0, %13, !dbg !3647
  br i1 %eq22, label %and.rhs, label %and.phi, !dbg !3647

and.rhs:                                          ; preds = %checkok20
  %ptradd23 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3649
  %14 = load i64, ptr %ptradd23, align 8, !dbg !3649
  %15 = load ptr, ptr %self, align 8, !dbg !3650
  %checknull24 = icmp eq ptr %15, null, !dbg !3650
  %16 = call i1 @llvm.expect.i1(i1 %checknull24, i1 false), !dbg !3650
  br i1 %16, label %panic25, label %checkok29, !dbg !3650

checkok29:                                        ; preds = %and.rhs
  %ptradd30 = getelementptr inbounds i8, ptr %15, i64 16, !dbg !3650
  %ptradd31 = getelementptr inbounds i8, ptr %ptradd30, i64 8, !dbg !3650
  %17 = load i64, ptr %ptradd31, align 8, !dbg !3650
  %ge = icmp uge i64 %14, %17, !dbg !3649
  br label %and.phi, !dbg !3649

and.phi:                                          ; preds = %checkok29, %checkok20
  %val = phi i1 [ false, %checkok20 ], [ %ge, %checkok29 ], !dbg !3649
  br i1 %val, label %if.then32, label %if.exit, !dbg !3649

if.then32:                                        ; preds = %and.phi
  %18 = load ptr, ptr %self, align 8, !dbg !3651
  %checknull33 = icmp eq ptr %18, null, !dbg !3651
  %19 = call i1 @llvm.expect.i1(i1 %checknull33, i1 false), !dbg !3651
  br i1 %19, label %panic34, label %checkok38, !dbg !3651

checkok38:                                        ; preds = %if.then32
  %ptradd39 = getelementptr inbounds i8, ptr %18, i64 8, !dbg !3653
  %20 = load i64, ptr %ptradd39, align 8, !dbg !3653
  %21 = inttoptr i64 %20 to ptr, !dbg !3653
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !3640
  %22 = icmp eq ptr %21, %type, !dbg !3640
  br i1 %22, label %cache_hit, label %cache_miss, !dbg !3640

cache_miss:                                       ; preds = %checkok38
  %ptradd40 = getelementptr inbounds i8, ptr %21, i64 16, !dbg !3640
  %23 = load ptr, ptr %ptradd40, align 8, !dbg !3640
  %24 = call ptr @.dyn_search(ptr %23, ptr @"$sel.read"), !dbg !3640
  store ptr %24, ptr %.inlinecache, align 8, !dbg !3640
  store ptr %21, ptr %.cachedtype, align 8, !dbg !3640
  br label %25, !dbg !3640

cache_hit:                                        ; preds = %checkok38
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !3640
  br label %25, !dbg !3640

25:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %24, %cache_miss ], !dbg !3640
  %26 = icmp eq ptr %fn_phi, null, !dbg !3640
  br i1 %26, label %missing_function, label %match, !dbg !3640

missing_function:                                 ; preds = %25
  store %"char[]" { ptr @.panic_msg.205, i64 41 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg43, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 39), !dbg !3651
  unreachable, !dbg !3651

match:                                            ; preds = %25
  %28 = load ptr, ptr %18, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg44, ptr align 8 %2, i32 16, i1 false)
  %29 = call i64 %fn_phi(ptr %retparam, ptr %28, ptr align 8 %indirectarg44), !dbg !3651
  %not_err = icmp eq i64 %29, 0, !dbg !3651
  %30 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3651
  br i1 %30, label %after_check, label %assign_optional, !dbg !3651

assign_optional:                                  ; preds = %match
  store i64 %29, ptr %error_var, align 8, !dbg !3651
  br label %guard_block, !dbg !3651

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !3651

guard_block:                                      ; preds = %assign_optional
  %31 = load i64, ptr %error_var, align 8, !dbg !3651
  ret i64 %31, !dbg !3651

noerr_block:                                      ; preds = %after_check
  %32 = load i64, ptr %retparam, align 8, !dbg !3651
  store i64 %32, ptr %0, align 8, !dbg !3651
  ret i64 0, !dbg !3651

if.exit:                                          ; preds = %and.phi
  %33 = load ptr, ptr %self, align 8, !dbg !3654
  %34 = call i64 @std.io.ReadBuffer.refill(ptr %33) #5, !dbg !3654
  %not_err46 = icmp eq i64 %34, 0, !dbg !3654
  %35 = call i1 @llvm.expect.i1(i1 %not_err46, i1 true), !dbg !3654
  br i1 %35, label %after_check48, label %assign_optional47, !dbg !3654

assign_optional47:                                ; preds = %if.exit
  store i64 %34, ptr %error_var45, align 8, !dbg !3654
  br label %guard_block49, !dbg !3654

after_check48:                                    ; preds = %if.exit
  br label %noerr_block50, !dbg !3654

guard_block49:                                    ; preds = %assign_optional47
  %36 = load i64, ptr %error_var45, align 8, !dbg !3654
  ret i64 %36, !dbg !3654

noerr_block50:                                    ; preds = %after_check48
  br label %if.exit51, !dbg !3654

if.exit51:                                        ; preds = %noerr_block50, %checkok13
  call void @llvm.dbg.declare(metadata ptr %n, metadata !3655, metadata !DIExpression()), !dbg !3656
  %37 = load ptr, ptr %self, align 8, !dbg !3657
  %checknull52 = icmp eq ptr %37, null, !dbg !3657
  %38 = call i1 @llvm.expect.i1(i1 %checknull52, i1 false), !dbg !3657
  br i1 %38, label %panic53, label %checkok57, !dbg !3657

checkok57:                                        ; preds = %if.exit51
  %ptradd58 = getelementptr inbounds i8, ptr %37, i64 40, !dbg !3657
  %39 = load i64, ptr %ptradd58, align 8, !dbg !3657
  %40 = load ptr, ptr %self, align 8, !dbg !3658
  %checknull59 = icmp eq ptr %40, null, !dbg !3658
  %41 = call i1 @llvm.expect.i1(i1 %checknull59, i1 false), !dbg !3658
  br i1 %41, label %panic60, label %checkok64, !dbg !3658

checkok64:                                        ; preds = %checkok57
  %ptradd65 = getelementptr inbounds i8, ptr %40, i64 32, !dbg !3658
  %42 = load i64, ptr %ptradd65, align 8, !dbg !3658
  %sub = sub i64 %39, %42, !dbg !3657
  store i64 %sub, ptr %x, align 8
  %ptradd66 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3659
  %43 = load i64, ptr %ptradd66, align 8
  store i64 %43, ptr %.anon, align 8
  %44 = load i64, ptr %x, align 8
  store i64 %44, ptr %a, align 8
  %45 = load i64, ptr %.anon, align 8
  store i64 %45, ptr %b, align 8
  %46 = load i64, ptr %a, align 8, !dbg !3660
  %47 = load i64, ptr %b, align 8, !dbg !3665
  %lt = icmp ult i64 %46, %47, !dbg !3660
  br i1 %lt, label %cond.lhs, label %cond.rhs, !dbg !3660

cond.lhs:                                         ; preds = %checkok64
  %48 = load i64, ptr %x, align 8, !dbg !3666
  br label %cond.phi, !dbg !3666

cond.rhs:                                         ; preds = %checkok64
  %49 = load i64, ptr %.anon, align 8, !dbg !3667
  br label %cond.phi, !dbg !3667

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val67 = phi i64 [ %48, %cond.lhs ], [ %49, %cond.rhs ], !dbg !3667
  store i64 %val67, ptr %n, align 8, !dbg !3667
  %50 = load ptr, ptr %self, align 8, !dbg !3668
  %checknull68 = icmp eq ptr %50, null, !dbg !3668
  %51 = call i1 @llvm.expect.i1(i1 %checknull68, i1 false), !dbg !3668
  br i1 %51, label %panic69, label %checkok73, !dbg !3668

checkok73:                                        ; preds = %cond.phi
  %ptradd74 = getelementptr inbounds i8, ptr %50, i64 16, !dbg !3668
  %52 = load %"char[]", ptr %ptradd74, align 8, !dbg !3668
  %53 = extractvalue %"char[]" %52, 0, !dbg !3668
  %54 = load ptr, ptr %self, align 8, !dbg !3669
  %checknull75 = icmp eq ptr %54, null, !dbg !3669
  %55 = call i1 @llvm.expect.i1(i1 %checknull75, i1 false), !dbg !3669
  br i1 %55, label %panic76, label %checkok80, !dbg !3669

checkok80:                                        ; preds = %checkok73
  %ptradd81 = getelementptr inbounds i8, ptr %54, i64 32, !dbg !3669
  %56 = load i64, ptr %ptradd81, align 8, !dbg !3669
  %57 = extractvalue %"char[]" %52, 1, !dbg !3669
  %gt = icmp ugt i64 %56, %57, !dbg !3669
  %58 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !3669
  br i1 %58, label %panic82, label %checkok89, !dbg !3669

checkok89:                                        ; preds = %checkok80
  %59 = load i64, ptr %n, align 8, !dbg !3670
  %add = add i64 %56, %59, !dbg !3670
  %lt90 = icmp ult i64 %57, %add, !dbg !3670
  %sub91 = sub i64 %add, 1, !dbg !3670
  %60 = call i1 @llvm.expect.i1(i1 %lt90, i1 false), !dbg !3670
  br i1 %60, label %panic92, label %checkok102, !dbg !3670

checkok102:                                       ; preds = %checkok89
  %size = sub i64 %add, %56, !dbg !3668
  %ptradd103 = getelementptr inbounds i8, ptr %53, i64 %56, !dbg !3668
  %61 = insertvalue %"char[]" undef, ptr %ptradd103, 0, !dbg !3668
  %62 = insertvalue %"char[]" %61, i64 %size, 1, !dbg !3668
  %63 = load %"char[]", ptr %2, align 8, !dbg !3671
  %64 = extractvalue %"char[]" %63, 0, !dbg !3671
  %65 = extractvalue %"char[]" %63, 1, !dbg !3672
  %gt104 = icmp ugt i64 0, %65, !dbg !3672
  %66 = call i1 @llvm.expect.i1(i1 %gt104, i1 false), !dbg !3672
  br i1 %66, label %panic105, label %checkok115, !dbg !3672

checkok115:                                       ; preds = %checkok102
  %67 = load i64, ptr %n, align 8, !dbg !3673
  %add116 = add i64 0, %67, !dbg !3673
  %lt117 = icmp ult i64 %65, %add116, !dbg !3673
  %sub118 = sub i64 %add116, 1, !dbg !3673
  %68 = call i1 @llvm.expect.i1(i1 %lt117, i1 false), !dbg !3673
  br i1 %68, label %panic119, label %checkok129, !dbg !3673

checkok129:                                       ; preds = %checkok115
  %size130 = sub i64 %add116, 0, !dbg !3671
  %69 = insertvalue %"char[]" undef, ptr %64, 0, !dbg !3671
  %70 = insertvalue %"char[]" %69, i64 %size130, 1, !dbg !3671
  %71 = extractvalue %"char[]" %70, 0, !dbg !3671
  %72 = extractvalue %"char[]" %62, 0, !dbg !3671
  store %"char[]" %62, ptr %taddr131, align 8
  %ptradd132 = getelementptr inbounds i8, ptr %taddr131, i64 8
  %73 = load i64, ptr %ptradd132, align 8
  store %"char[]" %70, ptr %taddr133, align 8
  %ptradd134 = getelementptr inbounds i8, ptr %taddr133, i64 8
  %74 = load i64, ptr %ptradd134, align 8
  %neq = icmp ne i64 %74, %73
  %75 = call i1 @llvm.expect.i1(i1 %neq, i1 false)
  br i1 %75, label %panic135, label %checkok145

checkok145:                                       ; preds = %checkok129
  %76 = mul i64 %73, 1, !dbg !3671
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %71, ptr align 1 %72, i64 %76, i1 false), !dbg !3671
  %77 = load ptr, ptr %self, align 8, !dbg !3674
  %checknull146 = icmp eq ptr %77, null, !dbg !3674
  %78 = call i1 @llvm.expect.i1(i1 %checknull146, i1 false), !dbg !3674
  br i1 %78, label %panic147, label %checkok151, !dbg !3674

checkok151:                                       ; preds = %checkok145
  %ptradd152 = getelementptr inbounds i8, ptr %77, i64 32, !dbg !3674
  %79 = load i64, ptr %ptradd152, align 8, !dbg !3674
  %80 = load i64, ptr %n, align 8, !dbg !3675
  %add153 = add i64 %79, %80, !dbg !3674
  store i64 %add153, ptr %ptradd152, align 8, !dbg !3674
  %81 = load i64, ptr %n, align 8, !dbg !3676
  store i64 %81, ptr %0, align 8, !dbg !3676
  ret i64 0, !dbg !3676

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg2, align 8
  %82 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %82(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 32), !dbg !3642
  unreachable, !dbg !3642

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg6, align 8
  %83 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %83(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 34), !dbg !3645
  unreachable, !dbg !3645

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg12, align 8
  %84 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %84(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 34), !dbg !3646
  unreachable, !dbg !3646

panic16:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg19, align 8
  %85 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %85(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 36), !dbg !3647
  unreachable, !dbg !3647

panic25:                                          ; preds = %and.rhs
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg28, align 8
  %86 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %86(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 36), !dbg !3650
  unreachable, !dbg !3650

panic34:                                          ; preds = %if.then32
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg37, align 8
  %87 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %87(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 39), !dbg !3651
  unreachable, !dbg !3651

panic53:                                          ; preds = %if.exit51
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg56, align 8
  %88 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %88(ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, i32 43), !dbg !3657
  unreachable, !dbg !3657

panic60:                                          ; preds = %checkok57
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg62, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg63, align 8
  %89 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %89(ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, ptr align 8 %indirectarg63, i32 43), !dbg !3658
  unreachable, !dbg !3658

panic69:                                          ; preds = %cond.phi
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg72, align 8
  %90 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %90(ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, i32 44), !dbg !3668
  unreachable, !dbg !3668

panic76:                                          ; preds = %checkok73
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg77, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg78, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg79, align 8
  %91 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %91(ptr align 8 %indirectarg77, ptr align 8 %indirectarg78, ptr align 8 %indirectarg79, i32 44), !dbg !3669
  unreachable, !dbg !3669

panic82:                                          ; preds = %checkok80
  store i64 %57, ptr %taddr, align 8
  %92 = insertvalue %any undef, ptr %taddr, 0
  %93 = insertvalue %any %92, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %56, ptr %taddr83, align 8
  %94 = insertvalue %any undef, ptr %taddr83, 0
  %95 = insertvalue %any %94, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg86, align 8
  store %any %93, ptr %varargslots, align 16
  %ptradd87 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %95, ptr %ptradd87, align 16
  %96 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %96, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg88, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, i32 44, ptr align 8 %indirectarg88), !dbg !3668
  unreachable, !dbg !3668

panic92:                                          ; preds = %checkok89
  store i64 %sub91, ptr %taddr93, align 8
  %97 = insertvalue %any undef, ptr %taddr93, 0
  %98 = insertvalue %any %97, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %57, ptr %taddr94, align 8
  %99 = insertvalue %any undef, ptr %taddr94, 0
  %100 = insertvalue %any %99, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg97, align 8
  store %any %98, ptr %varargslots98, align 16
  %ptradd99 = getelementptr inbounds i8, ptr %varargslots98, i64 16
  store %any %100, ptr %ptradd99, align 16
  %101 = insertvalue %"any[]" undef, ptr %varargslots98, 0
  %"$$temp100" = insertvalue %"any[]" %101, i64 2, 1
  store %"any[]" %"$$temp100", ptr %indirectarg101, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, i32 44, ptr align 8 %indirectarg101), !dbg !3668
  unreachable, !dbg !3668

panic105:                                         ; preds = %checkok102
  store i64 %65, ptr %taddr106, align 8
  %102 = insertvalue %any undef, ptr %taddr106, 0
  %103 = insertvalue %any %102, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr107, align 8
  %104 = insertvalue %any undef, ptr %taddr107, 0
  %105 = insertvalue %any %104, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg108, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg109, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg110, align 8
  store %any %103, ptr %varargslots111, align 16
  %ptradd112 = getelementptr inbounds i8, ptr %varargslots111, i64 16
  store %any %105, ptr %ptradd112, align 16
  %106 = insertvalue %"any[]" undef, ptr %varargslots111, 0
  %"$$temp113" = insertvalue %"any[]" %106, i64 2, 1
  store %"any[]" %"$$temp113", ptr %indirectarg114, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg108, ptr align 8 %indirectarg109, ptr align 8 %indirectarg110, i32 44, ptr align 8 %indirectarg114), !dbg !3671
  unreachable, !dbg !3671

panic119:                                         ; preds = %checkok115
  store i64 %sub118, ptr %taddr120, align 8
  %107 = insertvalue %any undef, ptr %taddr120, 0
  %108 = insertvalue %any %107, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %65, ptr %taddr121, align 8
  %109 = insertvalue %any undef, ptr %taddr121, 0
  %110 = insertvalue %any %109, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg122, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg123, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg124, align 8
  store %any %108, ptr %varargslots125, align 16
  %ptradd126 = getelementptr inbounds i8, ptr %varargslots125, i64 16
  store %any %110, ptr %ptradd126, align 16
  %111 = insertvalue %"any[]" undef, ptr %varargslots125, 0
  %"$$temp127" = insertvalue %"any[]" %111, i64 2, 1
  store %"any[]" %"$$temp127", ptr %indirectarg128, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg122, ptr align 8 %indirectarg123, ptr align 8 %indirectarg124, i32 44, ptr align 8 %indirectarg128), !dbg !3671
  unreachable, !dbg !3671

panic135:                                         ; preds = %checkok129
  store i64 %74, ptr %taddr136, align 8
  %112 = insertvalue %any undef, ptr %taddr136, 0
  %113 = insertvalue %any %112, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %73, ptr %taddr137, align 8
  %114 = insertvalue %any undef, ptr %taddr137, 0
  %115 = insertvalue %any %114, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.206, i64 38 }, ptr %indirectarg138, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg139, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg140, align 8
  store %any %113, ptr %varargslots141, align 16
  %ptradd142 = getelementptr inbounds i8, ptr %varargslots141, i64 16
  store %any %115, ptr %ptradd142, align 16
  %116 = insertvalue %"any[]" undef, ptr %varargslots141, 0
  %"$$temp143" = insertvalue %"any[]" %116, i64 2, 1
  store %"any[]" %"$$temp143", ptr %indirectarg144, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg138, ptr align 8 %indirectarg139, ptr align 8 %indirectarg140, i32 44, ptr align 8 %indirectarg144), !dbg !3671
  unreachable, !dbg !3671

panic147:                                         ; preds = %checkok145
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg148, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg149, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg150, align 8
  %117 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %117(ptr align 8 %indirectarg148, ptr align 8 %indirectarg149, ptr align 8 %indirectarg150, i32 45), !dbg !3674
  unreachable, !dbg !3674
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ReadBuffer.read_byte(ptr %0, ptr %1) #0 comdat !dbg !3677 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %c = alloca i8, align 1
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr48 = alloca i64, align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg53 = alloca %"any[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %2 = icmp eq ptr %1, null, !dbg !3680
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !3680
  br i1 %3, label %panic, label %checkok, !dbg !3680

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3681, metadata !DIExpression()), !dbg !3682
  %4 = load ptr, ptr %self, align 8, !dbg !3683
  %checknull = icmp eq ptr %4, null, !dbg !3683
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3683
  br i1 %5, label %panic3, label %checkok7, !dbg !3683

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 32, !dbg !3683
  %6 = load i64, ptr %ptradd, align 8, !dbg !3683
  %7 = load ptr, ptr %self, align 8, !dbg !3684
  %checknull8 = icmp eq ptr %7, null, !dbg !3684
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !3684
  br i1 %8, label %panic9, label %checkok13, !dbg !3684

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 40, !dbg !3684
  %9 = load i64, ptr %ptradd14, align 8, !dbg !3684
  %eq = icmp eq i64 %6, %9, !dbg !3683
  br i1 %eq, label %if.then, label %if.exit, !dbg !3683

if.then:                                          ; preds = %checkok13
  %10 = load ptr, ptr %self, align 8, !dbg !3685
  %11 = call i64 @std.io.ReadBuffer.refill(ptr %10) #5, !dbg !3685
  %not_err = icmp eq i64 %11, 0, !dbg !3685
  %12 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3685
  br i1 %12, label %after_check, label %assign_optional, !dbg !3685

assign_optional:                                  ; preds = %if.then
  store i64 %11, ptr %error_var, align 8, !dbg !3685
  br label %guard_block, !dbg !3685

after_check:                                      ; preds = %if.then
  br label %noerr_block, !dbg !3685

guard_block:                                      ; preds = %assign_optional
  %13 = load i64, ptr %error_var, align 8, !dbg !3685
  ret i64 %13, !dbg !3685

noerr_block:                                      ; preds = %after_check
  br label %if.exit, !dbg !3685

if.exit:                                          ; preds = %noerr_block, %checkok13
  %14 = load ptr, ptr %self, align 8, !dbg !3686
  %checknull15 = icmp eq ptr %14, null, !dbg !3686
  %15 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !3686
  br i1 %15, label %panic16, label %checkok20, !dbg !3686

checkok20:                                        ; preds = %if.exit
  %ptradd21 = getelementptr inbounds i8, ptr %14, i64 32, !dbg !3686
  %16 = load i64, ptr %ptradd21, align 8, !dbg !3686
  %17 = load ptr, ptr %self, align 8, !dbg !3687
  %checknull22 = icmp eq ptr %17, null, !dbg !3687
  %18 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !3687
  br i1 %18, label %panic23, label %checkok27, !dbg !3687

checkok27:                                        ; preds = %checkok20
  %ptradd28 = getelementptr inbounds i8, ptr %17, i64 40, !dbg !3687
  %19 = load i64, ptr %ptradd28, align 8, !dbg !3687
  %eq29 = icmp eq i64 %16, %19, !dbg !3686
  br i1 %eq29, label %if.then30, label %if.exit31, !dbg !3686

if.then30:                                        ; preds = %checkok27
  ret i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), !dbg !3688

if.exit31:                                        ; preds = %checkok27
  call void @llvm.dbg.declare(metadata ptr %c, metadata !3689, metadata !DIExpression()), !dbg !3690
  %20 = load ptr, ptr %self, align 8, !dbg !3691
  %checknull32 = icmp eq ptr %20, null, !dbg !3691
  %21 = call i1 @llvm.expect.i1(i1 %checknull32, i1 false), !dbg !3691
  br i1 %21, label %panic33, label %checkok37, !dbg !3691

checkok37:                                        ; preds = %if.exit31
  %ptradd38 = getelementptr inbounds i8, ptr %20, i64 16, !dbg !3691
  %ptradd39 = getelementptr inbounds i8, ptr %ptradd38, i64 8, !dbg !3691
  %22 = load i64, ptr %ptradd39, align 8, !dbg !3691
  %23 = load ptr, ptr %ptradd38, align 8, !dbg !3691
  %24 = load ptr, ptr %self, align 8, !dbg !3692
  %checknull40 = icmp eq ptr %24, null, !dbg !3692
  %25 = call i1 @llvm.expect.i1(i1 %checknull40, i1 false), !dbg !3692
  br i1 %25, label %panic41, label %checkok45, !dbg !3692

checkok45:                                        ; preds = %checkok37
  %ptradd46 = getelementptr inbounds i8, ptr %24, i64 32, !dbg !3692
  %26 = load i64, ptr %ptradd46, align 8, !dbg !3692
  %ge = icmp uge i64 %26, %22, !dbg !3692
  %27 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !3692
  br i1 %27, label %panic47, label %checkok54, !dbg !3692

checkok54:                                        ; preds = %checkok45
  %ptradd55 = getelementptr inbounds i8, ptr %23, i64 %26, !dbg !3692
  %28 = load i8, ptr %ptradd55, align 1, !dbg !3692
  store i8 %28, ptr %c, align 1, !dbg !3692
  %29 = load ptr, ptr %self, align 8, !dbg !3693
  %checknull56 = icmp eq ptr %29, null, !dbg !3693
  %30 = call i1 @llvm.expect.i1(i1 %checknull56, i1 false), !dbg !3693
  br i1 %30, label %panic57, label %checkok61, !dbg !3693

checkok61:                                        ; preds = %checkok54
  %ptradd62 = getelementptr inbounds i8, ptr %29, i64 32, !dbg !3693
  %31 = load i64, ptr %ptradd62, align 8, !dbg !3693
  %add = add i64 %31, 1, !dbg !3693
  store i64 %add, ptr %ptradd62, align 8, !dbg !3693
  %32 = load i8, ptr %c, align 1, !dbg !3694
  store i8 %32, ptr %0, align 1, !dbg !3694
  ret i64 0, !dbg !3694

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg2, align 8
  %33 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %33(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 49), !dbg !3682
  unreachable, !dbg !3682

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg6, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 51), !dbg !3683
  unreachable, !dbg !3683

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg12, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 51), !dbg !3684
  unreachable, !dbg !3684

panic16:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg19, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 52), !dbg !3686
  unreachable, !dbg !3686

panic23:                                          ; preds = %checkok20
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg26, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 52), !dbg !3687
  unreachable, !dbg !3687

panic33:                                          ; preds = %if.exit31
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg36, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 53), !dbg !3691
  unreachable, !dbg !3691

panic41:                                          ; preds = %checkok37
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg44, align 8
  %39 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %39(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 53), !dbg !3692
  unreachable, !dbg !3692

panic47:                                          ; preds = %checkok45
  store i64 %22, ptr %taddr, align 8
  %40 = insertvalue %any undef, ptr %taddr, 0
  %41 = insertvalue %any %40, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %26, ptr %taddr48, align 8
  %42 = insertvalue %any undef, ptr %taddr48, 0
  %43 = insertvalue %any %42, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg51, align 8
  store %any %41, ptr %varargslots, align 16
  %ptradd52 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %43, ptr %ptradd52, align 16
  %44 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %44, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg53, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 53, ptr align 8 %indirectarg53), !dbg !3692
  unreachable, !dbg !3692

panic57:                                          ; preds = %checkok54
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg60, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 54), !dbg !3693
  unreachable, !dbg !3693
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.ReadBuffer.refill(ptr %0) #0 !dbg !3695 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg33 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !3696
  %1 = icmp eq ptr %0, null, !dbg !3696
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !3696
  br i1 %2, label %panic, label %checkok, !dbg !3696

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3697, metadata !DIExpression()), !dbg !3698
  %3 = load ptr, ptr %self, align 8, !dbg !3699
  %checknull = icmp eq ptr %3, null, !dbg !3699
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3699
  br i1 %4, label %panic3, label %checkok7, !dbg !3699

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 32, !dbg !3699
  store i64 0, ptr %ptradd, align 8, !dbg !3700
  %5 = load ptr, ptr %self, align 8, !dbg !3701
  %checknull8 = icmp eq ptr %5, null, !dbg !3701
  %6 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !3701
  br i1 %6, label %panic9, label %checkok13, !dbg !3701

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %5, i64 40, !dbg !3701
  %7 = load ptr, ptr %self, align 8, !dbg !3702
  %checknull15 = icmp eq ptr %7, null, !dbg !3702
  %8 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !3702
  br i1 %8, label %panic16, label %checkok20, !dbg !3702

checkok20:                                        ; preds = %checkok13
  %9 = load ptr, ptr %self, align 8, !dbg !3703
  %checknull21 = icmp eq ptr %9, null, !dbg !3703
  %10 = call i1 @llvm.expect.i1(i1 %checknull21, i1 false), !dbg !3703
  br i1 %10, label %panic22, label %checkok26, !dbg !3703

checkok26:                                        ; preds = %checkok20
  %ptradd27 = getelementptr inbounds i8, ptr %9, i64 16, !dbg !3703
  %ptradd28 = getelementptr inbounds i8, ptr %7, i64 8, !dbg !3703
  %11 = load i64, ptr %ptradd28, align 8, !dbg !3703
  %12 = inttoptr i64 %11 to ptr, !dbg !3703
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !3696
  %13 = icmp eq ptr %12, %type, !dbg !3696
  br i1 %13, label %cache_hit, label %cache_miss, !dbg !3696

cache_miss:                                       ; preds = %checkok26
  %ptradd29 = getelementptr inbounds i8, ptr %12, i64 16, !dbg !3696
  %14 = load ptr, ptr %ptradd29, align 8, !dbg !3696
  %15 = call ptr @.dyn_search(ptr %14, ptr @"$sel.read"), !dbg !3696
  store ptr %15, ptr %.inlinecache, align 8, !dbg !3696
  store ptr %12, ptr %.cachedtype, align 8, !dbg !3696
  br label %16, !dbg !3696

cache_hit:                                        ; preds = %checkok26
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !3696
  br label %16, !dbg !3696

16:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %15, %cache_miss ], !dbg !3696
  %17 = icmp eq ptr %fn_phi, null, !dbg !3696
  br i1 %17, label %missing_function, label %match, !dbg !3696

missing_function:                                 ; preds = %16
  store %"char[]" { ptr @.panic_msg.205, i64 41 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.208, i64 6 }, ptr %indirectarg32, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 61), !dbg !3702
  unreachable, !dbg !3702

match:                                            ; preds = %16
  %19 = load ptr, ptr %7, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg33, ptr align 8 %ptradd27, i32 16, i1 false)
  %20 = call i64 %fn_phi(ptr %retparam, ptr %19, ptr align 8 %indirectarg33), !dbg !3702
  %not_err = icmp eq i64 %20, 0, !dbg !3702
  %21 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3702
  br i1 %21, label %after_check, label %assign_optional, !dbg !3702

assign_optional:                                  ; preds = %match
  store i64 %20, ptr %error_var, align 8, !dbg !3702
  br label %guard_block, !dbg !3702

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !3702

guard_block:                                      ; preds = %assign_optional
  %22 = load i64, ptr %error_var, align 8, !dbg !3702
  ret i64 %22, !dbg !3702

noerr_block:                                      ; preds = %after_check
  %23 = load i64, ptr %retparam, align 8, !dbg !3702
  store i64 %23, ptr %ptradd14, align 8, !dbg !3702
  ret i64 0, !dbg !3702

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.208, i64 6 }, ptr %indirectarg2, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 58), !dbg !3698
  unreachable, !dbg !3698

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.208, i64 6 }, ptr %indirectarg6, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 60), !dbg !3699
  unreachable, !dbg !3699

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.208, i64 6 }, ptr %indirectarg12, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 61), !dbg !3701
  unreachable, !dbg !3701

panic16:                                          ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.208, i64 6 }, ptr %indirectarg19, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 61), !dbg !3702
  unreachable, !dbg !3702

panic22:                                          ; preds = %checkok20
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.208, i64 6 }, ptr %indirectarg25, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 61), !dbg !3703
  unreachable, !dbg !3703
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.WriteBuffer.init(ptr %0, ptr align 8 %1, ptr align 8 %2) #0 comdat !dbg !3704 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %.assign_list = alloca %WriteBuffer, align 8
  %3 = icmp eq ptr %0, null, !dbg !3713
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !3713
  br i1 %4, label %panic, label %checkok, !dbg !3713

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3716, metadata !DIExpression()), !dbg !3717
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3718, metadata !DIExpression()), !dbg !3719
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3720
  %5 = load i64, ptr %ptradd, align 8, !dbg !3720
  %lt = icmp ult i64 0, %5, !dbg !3720
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !3720

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.209, i64 63 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 74), !dbg !3720
  unreachable, !dbg !3720

assert_ok:                                        ; preds = %checkok
  %7 = load ptr, ptr %self, align 8, !dbg !3722
  %checknull = icmp eq ptr %7, null, !dbg !3722
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3722
  br i1 %8, label %panic6, label %checkok10, !dbg !3722

checkok10:                                        ; preds = %assert_ok
  %ptradd11 = getelementptr inbounds i8, ptr %7, i64 16, !dbg !3722
  %ptradd12 = getelementptr inbounds i8, ptr %ptradd11, i64 8, !dbg !3722
  %9 = load i64, ptr %ptradd12, align 8, !dbg !3722
  %eq = icmp eq i64 0, %9, !dbg !3722
  br i1 %eq, label %assert_ok17, label %assert_fail13, !dbg !3722

assert_fail13:                                    ; preds = %checkok10
  store %"char[]" { ptr @.panic_msg.200, i64 88 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg16, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 75), !dbg !3722
  unreachable, !dbg !3722

assert_ok17:                                      ; preds = %checkok10
  %11 = load ptr, ptr %self, align 8, !dbg !3723
  %checknull18 = icmp eq ptr %11, null, !dbg !3723
  %12 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !3723
  br i1 %12, label %panic19, label %checkok23, !dbg !3723

checkok23:                                        ; preds = %assert_ok17
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 40, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %.assign_list, ptr align 8 %1, i32 16, i1 false), !dbg !3724
  %ptradd24 = getelementptr inbounds i8, ptr %.assign_list, i64 16, !dbg !3724
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd24, ptr align 8 %2, i32 16, i1 false), !dbg !3725
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %11, ptr align 8 %.assign_list, i32 40, i1 false), !dbg !3725
  %13 = load ptr, ptr %self, align 8, !dbg !3726
  ret ptr %13, !dbg !3726

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %14 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %14(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 77), !dbg !3715
  unreachable, !dbg !3715

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg9, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 75), !dbg !3722
  unreachable, !dbg !3722

panic19:                                          ; preds = %assert_ok17
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg22, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 79), !dbg !3723
  unreachable, !dbg !3723
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.WriteBuffer.str_view(ptr noalias sret(%"char[]") align 8 %0, ptr %1) #0 comdat !dbg !3727 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr9 = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg14 = alloca %"any[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %taddr24 = alloca i64, align 8
  %taddr25 = alloca i64, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %varargslots29 = alloca [2 x %any], align 16
  %indirectarg32 = alloca %"any[]", align 8
  %2 = icmp eq ptr %1, null, !dbg !3730
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !3730
  br i1 %3, label %panic, label %checkok, !dbg !3730

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3731, metadata !DIExpression()), !dbg !3732
  %4 = load ptr, ptr %self, align 8, !dbg !3733
  %checknull = icmp eq ptr %4, null, !dbg !3733
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3733
  br i1 %5, label %panic3, label %checkok7, !dbg !3733

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !3733
  %6 = load %"char[]", ptr %ptradd, align 8, !dbg !3733
  %7 = extractvalue %"char[]" %6, 0, !dbg !3733
  %8 = extractvalue %"char[]" %6, 1, !dbg !3734
  %gt = icmp ugt i64 0, %8, !dbg !3734
  %9 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !3734
  br i1 %9, label %panic8, label %checkok15, !dbg !3734

checkok15:                                        ; preds = %checkok7
  %10 = load ptr, ptr %self, align 8, !dbg !3735
  %checknull16 = icmp eq ptr %10, null, !dbg !3735
  %11 = call i1 @llvm.expect.i1(i1 %checknull16, i1 false), !dbg !3735
  br i1 %11, label %panic17, label %checkok21, !dbg !3735

checkok21:                                        ; preds = %checkok15
  %ptradd22 = getelementptr inbounds i8, ptr %10, i64 32, !dbg !3735
  %12 = load i64, ptr %ptradd22, align 8, !dbg !3735
  %add = add i64 0, %12, !dbg !3735
  %lt = icmp ult i64 %8, %add, !dbg !3735
  %sub = sub i64 %add, 1, !dbg !3735
  %13 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !3735
  br i1 %13, label %panic23, label %checkok33, !dbg !3735

checkok33:                                        ; preds = %checkok21
  %size = sub i64 %add, 0, !dbg !3736
  %14 = insertvalue %"char[]" undef, ptr %7, 0, !dbg !3736
  %15 = insertvalue %"char[]" %14, i64 %size, 1, !dbg !3736
  store %"char[]" %15, ptr %0, align 8, !dbg !3736
  ret void, !dbg !3736

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 83), !dbg !3732
  unreachable, !dbg !3732

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg6, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 85), !dbg !3733
  unreachable, !dbg !3733

panic8:                                           ; preds = %checkok7
  store i64 %8, ptr %taddr, align 8
  %18 = insertvalue %any undef, ptr %taddr, 0
  %19 = insertvalue %any %18, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr9, align 8
  %20 = insertvalue %any undef, ptr %taddr9, 0
  %21 = insertvalue %any %20, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg12, align 8
  store %any %19, ptr %varargslots, align 16
  %ptradd13 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %21, ptr %ptradd13, align 16
  %22 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %22, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg14, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 85, ptr align 8 %indirectarg14), !dbg !3736
  unreachable, !dbg !3736

panic17:                                          ; preds = %checkok15
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg20, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 85), !dbg !3735
  unreachable, !dbg !3735

panic23:                                          ; preds = %checkok21
  store i64 %sub, ptr %taddr24, align 8
  %24 = insertvalue %any undef, ptr %taddr24, 0
  %25 = insertvalue %any %24, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %8, ptr %taddr25, align 8
  %26 = insertvalue %any undef, ptr %taddr25, 0
  %27 = insertvalue %any %26, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg28, align 8
  store %any %25, ptr %varargslots29, align 16
  %ptradd30 = getelementptr inbounds i8, ptr %varargslots29, i64 16
  store %any %27, ptr %ptradd30, align 16
  %28 = insertvalue %"any[]" undef, ptr %varargslots29, 0
  %"$$temp31" = insertvalue %"any[]" %28, i64 2, 1
  store %"any[]" %"$$temp31", ptr %indirectarg32, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 85, ptr align 8 %indirectarg32), !dbg !3736
  unreachable, !dbg !3736
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.WriteBuffer.close(ptr %0) #0 comdat !dbg !3737 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %.inlinecache16 = alloca ptr, align 8
  %.cachedtype17 = alloca ptr, align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype17, align 8, !dbg !3740
  store ptr null, ptr %.cachedtype, align 8, !dbg !3740
  %1 = icmp eq ptr %0, null, !dbg !3740
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !3740
  br i1 %2, label %panic, label %checkok, !dbg !3740

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3741, metadata !DIExpression()), !dbg !3742
  %3 = load ptr, ptr %self, align 8, !dbg !3743
  %checknull = icmp eq ptr %3, null, !dbg !3743
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3743
  br i1 %4, label %panic3, label %checkok7, !dbg !3743

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 8, !dbg !3743
  %5 = load i64, ptr %ptradd, align 8, !dbg !3743
  %6 = inttoptr i64 %5 to ptr, !dbg !3743
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !3740
  %7 = icmp eq ptr %6, %type, !dbg !3740
  br i1 %7, label %cache_hit, label %cache_miss, !dbg !3740

cache_miss:                                       ; preds = %checkok7
  %ptradd8 = getelementptr inbounds i8, ptr %6, i64 16, !dbg !3740
  %8 = load ptr, ptr %ptradd8, align 8, !dbg !3740
  %9 = call ptr @.dyn_search(ptr %8, ptr @"$sel.close"), !dbg !3740
  store ptr %9, ptr %.inlinecache, align 8, !dbg !3740
  store ptr %6, ptr %.cachedtype, align 8, !dbg !3740
  br label %10, !dbg !3740

cache_hit:                                        ; preds = %checkok7
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !3740
  br label %10, !dbg !3740

10:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %9, %cache_miss ], !dbg !3740
  %ptrbool = icmp ne ptr %fn_phi, null, !dbg !3740
  br i1 %ptrbool, label %if.then, label %if.exit, !dbg !3740

if.then:                                          ; preds = %10
  %11 = load ptr, ptr %self, align 8, !dbg !3744
  %checknull9 = icmp eq ptr %11, null, !dbg !3744
  %12 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !3744
  br i1 %12, label %panic10, label %checkok14, !dbg !3744

checkok14:                                        ; preds = %if.then
  %ptradd15 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !3744
  %13 = load i64, ptr %ptradd15, align 8, !dbg !3744
  %14 = inttoptr i64 %13 to ptr, !dbg !3744
  %type18 = load ptr, ptr %.cachedtype17, align 8, !dbg !3740
  %15 = icmp eq ptr %14, %type18, !dbg !3740
  br i1 %15, label %cache_hit21, label %cache_miss19, !dbg !3740

cache_miss19:                                     ; preds = %checkok14
  %ptradd20 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !3740
  %16 = load ptr, ptr %ptradd20, align 8, !dbg !3740
  %17 = call ptr @.dyn_search(ptr %16, ptr @"$sel.close"), !dbg !3740
  store ptr %17, ptr %.inlinecache16, align 8, !dbg !3740
  store ptr %14, ptr %.cachedtype17, align 8, !dbg !3740
  br label %18, !dbg !3740

cache_hit21:                                      ; preds = %checkok14
  %cache_hit_fn22 = load ptr, ptr %.inlinecache16, align 8, !dbg !3740
  br label %18, !dbg !3740

18:                                               ; preds = %cache_hit21, %cache_miss19
  %fn_phi23 = phi ptr [ %cache_hit_fn22, %cache_hit21 ], [ %17, %cache_miss19 ], !dbg !3740
  %19 = icmp eq ptr %fn_phi23, null, !dbg !3740
  br i1 %19, label %missing_function, label %match, !dbg !3740

missing_function:                                 ; preds = %18
  store %"char[]" { ptr @.panic_msg.203, i64 42 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg26, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 90), !dbg !3744
  unreachable, !dbg !3744

match:                                            ; preds = %18
  %21 = load ptr, ptr %11, align 8, !dbg !3744
  %22 = call i64 %fn_phi23(ptr %21), !dbg !3744
  %not_err = icmp eq i64 %22, 0, !dbg !3744
  %23 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3744
  br i1 %23, label %after_check, label %assign_optional, !dbg !3744

assign_optional:                                  ; preds = %match
  store i64 %22, ptr %reterr, align 8, !dbg !3744
  br label %err_retblock, !dbg !3744

after_check:                                      ; preds = %match
  ret i64 0, !dbg !3744

err_retblock:                                     ; preds = %assign_optional
  %24 = load i64, ptr %reterr, align 8, !dbg !3744
  ret i64 %24, !dbg !3744

if.exit:                                          ; preds = %10
  ret i64 0, !dbg !3744

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg2, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 88), !dbg !3742
  unreachable, !dbg !3742

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg6, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 90), !dbg !3743
  unreachable, !dbg !3743

panic10:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg13, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 90), !dbg !3744
  unreachable, !dbg !3744
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.WriteBuffer.flush(ptr %0) #0 comdat !dbg !3745 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %error_var9 = alloca i64, align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %.inlinecache17 = alloca ptr, align 8
  %.cachedtype18 = alloca ptr, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype18, align 8, !dbg !3746
  store ptr null, ptr %.cachedtype, align 8, !dbg !3746
  %1 = icmp eq ptr %0, null, !dbg !3746
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !3746
  br i1 %2, label %panic, label %checkok, !dbg !3746

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3747, metadata !DIExpression()), !dbg !3748
  %3 = load ptr, ptr %self, align 8, !dbg !3749
  %4 = call i64 @std.io.WriteBuffer.write_pending(ptr %3), !dbg !3749
  %not_err = icmp eq i64 %4, 0, !dbg !3749
  %5 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3749
  br i1 %5, label %after_check, label %assign_optional, !dbg !3749

assign_optional:                                  ; preds = %checkok
  store i64 %4, ptr %error_var, align 8, !dbg !3749
  br label %guard_block, !dbg !3749

after_check:                                      ; preds = %checkok
  br label %noerr_block, !dbg !3749

guard_block:                                      ; preds = %assign_optional
  %6 = load i64, ptr %error_var, align 8, !dbg !3749
  ret i64 %6, !dbg !3749

noerr_block:                                      ; preds = %after_check
  %7 = load ptr, ptr %self, align 8, !dbg !3750
  %checknull = icmp eq ptr %7, null, !dbg !3750
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3750
  br i1 %8, label %panic3, label %checkok7, !dbg !3750

checkok7:                                         ; preds = %noerr_block
  %ptradd = getelementptr inbounds i8, ptr %7, i64 8, !dbg !3750
  %9 = load i64, ptr %ptradd, align 8, !dbg !3750
  %10 = inttoptr i64 %9 to ptr, !dbg !3750
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !3746
  %11 = icmp eq ptr %10, %type, !dbg !3746
  br i1 %11, label %cache_hit, label %cache_miss, !dbg !3746

cache_miss:                                       ; preds = %checkok7
  %ptradd8 = getelementptr inbounds i8, ptr %10, i64 16, !dbg !3746
  %12 = load ptr, ptr %ptradd8, align 8, !dbg !3746
  %13 = call ptr @.dyn_search(ptr %12, ptr @"$sel.flush"), !dbg !3746
  store ptr %13, ptr %.inlinecache, align 8, !dbg !3746
  store ptr %10, ptr %.cachedtype, align 8, !dbg !3746
  br label %14, !dbg !3746

cache_hit:                                        ; preds = %checkok7
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !3746
  br label %14, !dbg !3746

14:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %13, %cache_miss ], !dbg !3746
  %ptrbool = icmp ne ptr %fn_phi, null, !dbg !3746
  br i1 %ptrbool, label %if.then, label %if.exit, !dbg !3746

if.then:                                          ; preds = %14
  %15 = load ptr, ptr %self, align 8, !dbg !3751
  %checknull10 = icmp eq ptr %15, null, !dbg !3751
  %16 = call i1 @llvm.expect.i1(i1 %checknull10, i1 false), !dbg !3751
  br i1 %16, label %panic11, label %checkok15, !dbg !3751

checkok15:                                        ; preds = %if.then
  %ptradd16 = getelementptr inbounds i8, ptr %15, i64 8, !dbg !3751
  %17 = load i64, ptr %ptradd16, align 8, !dbg !3751
  %18 = inttoptr i64 %17 to ptr, !dbg !3751
  %type19 = load ptr, ptr %.cachedtype18, align 8, !dbg !3746
  %19 = icmp eq ptr %18, %type19, !dbg !3746
  br i1 %19, label %cache_hit22, label %cache_miss20, !dbg !3746

cache_miss20:                                     ; preds = %checkok15
  %ptradd21 = getelementptr inbounds i8, ptr %18, i64 16, !dbg !3746
  %20 = load ptr, ptr %ptradd21, align 8, !dbg !3746
  %21 = call ptr @.dyn_search(ptr %20, ptr @"$sel.flush"), !dbg !3746
  store ptr %21, ptr %.inlinecache17, align 8, !dbg !3746
  store ptr %18, ptr %.cachedtype18, align 8, !dbg !3746
  br label %22, !dbg !3746

cache_hit22:                                      ; preds = %checkok15
  %cache_hit_fn23 = load ptr, ptr %.inlinecache17, align 8, !dbg !3746
  br label %22, !dbg !3746

22:                                               ; preds = %cache_hit22, %cache_miss20
  %fn_phi24 = phi ptr [ %cache_hit_fn23, %cache_hit22 ], [ %21, %cache_miss20 ], !dbg !3746
  %23 = icmp eq ptr %fn_phi24, null, !dbg !3746
  br i1 %23, label %missing_function, label %match, !dbg !3746

missing_function:                                 ; preds = %22
  store %"char[]" { ptr @.panic_msg.192, i64 42 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg27, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 96), !dbg !3751
  unreachable, !dbg !3751

match:                                            ; preds = %22
  %25 = load ptr, ptr %15, align 8, !dbg !3751
  %26 = call i64 %fn_phi24(ptr %25), !dbg !3751
  %not_err28 = icmp eq i64 %26, 0, !dbg !3751
  %27 = call i1 @llvm.expect.i1(i1 %not_err28, i1 true), !dbg !3751
  br i1 %27, label %after_check30, label %assign_optional29, !dbg !3751

assign_optional29:                                ; preds = %match
  store i64 %26, ptr %error_var9, align 8, !dbg !3751
  br label %guard_block31, !dbg !3751

after_check30:                                    ; preds = %match
  br label %noerr_block32, !dbg !3751

guard_block31:                                    ; preds = %assign_optional29
  %28 = load i64, ptr %error_var9, align 8, !dbg !3751
  ret i64 %28, !dbg !3751

noerr_block32:                                    ; preds = %after_check30
  br label %if.exit, !dbg !3751

if.exit:                                          ; preds = %noerr_block32, %14
  ret i64 0, !dbg !3751

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg2, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 93), !dbg !3748
  unreachable, !dbg !3748

panic3:                                           ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg6, align 8
  %30 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %30(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 96), !dbg !3750
  unreachable, !dbg !3750

panic11:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg14, align 8
  %31 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %31(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 96), !dbg !3751
  unreachable, !dbg !3751
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.WriteBuffer.write(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !3752 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %n = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr18 = alloca i64, align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg23 = alloca %"any[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %taddr41 = alloca i64, align 8
  %taddr42 = alloca i64, align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %varargslots46 = alloca [2 x %any], align 16
  %indirectarg49 = alloca %"any[]", align 8
  %taddr55 = alloca i64, align 8
  %taddr56 = alloca i64, align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %varargslots60 = alloca [2 x %any], align 16
  %indirectarg63 = alloca %"any[]", align 8
  %taddr67 = alloca %"char[]", align 8
  %taddr69 = alloca %"char[]", align 8
  %taddr72 = alloca i64, align 8
  %taddr73 = alloca i64, align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %varargslots77 = alloca [2 x %any], align 16
  %indirectarg80 = alloca %"any[]", align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %error_var = alloca i64, align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %reterr102 = alloca i64, align 8
  %indirectarg105 = alloca %"char[]", align 8
  %indirectarg106 = alloca %"char[]", align 8
  %indirectarg107 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg111 = alloca %"char[]", align 8
  %indirectarg112 = alloca %"char[]", align 8
  %indirectarg113 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg114 = alloca %"char[]", align 8
  %taddr121 = alloca i64, align 8
  %taddr122 = alloca i64, align 8
  %indirectarg123 = alloca %"char[]", align 8
  %indirectarg124 = alloca %"char[]", align 8
  %indirectarg125 = alloca %"char[]", align 8
  %varargslots126 = alloca [2 x %any], align 16
  %indirectarg129 = alloca %"any[]", align 8
  %indirectarg134 = alloca %"char[]", align 8
  %indirectarg135 = alloca %"char[]", align 8
  %indirectarg136 = alloca %"char[]", align 8
  %taddr141 = alloca i64, align 8
  %taddr142 = alloca i64, align 8
  %indirectarg143 = alloca %"char[]", align 8
  %indirectarg144 = alloca %"char[]", align 8
  %indirectarg145 = alloca %"char[]", align 8
  %varargslots146 = alloca [2 x %any], align 16
  %indirectarg149 = alloca %"any[]", align 8
  %taddr156 = alloca i64, align 8
  %taddr157 = alloca i64, align 8
  %indirectarg158 = alloca %"char[]", align 8
  %indirectarg159 = alloca %"char[]", align 8
  %indirectarg160 = alloca %"char[]", align 8
  %varargslots161 = alloca [2 x %any], align 16
  %indirectarg164 = alloca %"any[]", align 8
  %taddr167 = alloca %"char[]", align 8
  %taddr169 = alloca %"char[]", align 8
  %taddr173 = alloca i64, align 8
  %taddr174 = alloca i64, align 8
  %indirectarg175 = alloca %"char[]", align 8
  %indirectarg176 = alloca %"char[]", align 8
  %indirectarg177 = alloca %"char[]", align 8
  %varargslots178 = alloca [2 x %any], align 16
  %indirectarg181 = alloca %"any[]", align 8
  %indirectarg185 = alloca %"char[]", align 8
  %indirectarg186 = alloca %"char[]", align 8
  %indirectarg187 = alloca %"char[]", align 8
  %reterr191 = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !3755
  %3 = icmp eq ptr %1, null, !dbg !3755
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !3755
  br i1 %4, label %panic, label %checkok, !dbg !3755

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3756, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3758, metadata !DIExpression()), !dbg !3759
  call void @llvm.dbg.declare(metadata ptr %n, metadata !3760, metadata !DIExpression()), !dbg !3761
  %5 = load ptr, ptr %self, align 8, !dbg !3762
  %checknull = icmp eq ptr %5, null, !dbg !3762
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3762
  br i1 %6, label %panic3, label %checkok7, !dbg !3762

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !3762
  %ptradd8 = getelementptr inbounds i8, ptr %ptradd, i64 8, !dbg !3762
  %7 = load i64, ptr %ptradd8, align 8, !dbg !3762
  %8 = load ptr, ptr %self, align 8, !dbg !3763
  %checknull9 = icmp eq ptr %8, null, !dbg !3763
  %9 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !3763
  br i1 %9, label %panic10, label %checkok14, !dbg !3763

checkok14:                                        ; preds = %checkok7
  %ptradd15 = getelementptr inbounds i8, ptr %8, i64 32, !dbg !3763
  %10 = load i64, ptr %ptradd15, align 8, !dbg !3763
  %sub = sub i64 %7, %10, !dbg !3762
  store i64 %sub, ptr %n, align 8, !dbg !3762
  %ptradd16 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3764
  %11 = load i64, ptr %ptradd16, align 8, !dbg !3764
  %12 = load i64, ptr %n, align 8, !dbg !3765
  %lt = icmp ult i64 %11, %12, !dbg !3764
  br i1 %lt, label %if.then, label %if.exit, !dbg !3764

if.then:                                          ; preds = %checkok14
  %13 = load %"char[]", ptr %2, align 8, !dbg !3766
  %14 = extractvalue %"char[]" %13, 0, !dbg !3766
  %15 = extractvalue %"char[]" %13, 1, !dbg !3768
  %gt = icmp ugt i64 0, %15, !dbg !3768
  %16 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !3768
  br i1 %16, label %panic17, label %checkok24, !dbg !3768

checkok24:                                        ; preds = %if.then
  %size = sub i64 %15, 0, !dbg !3766
  %17 = insertvalue %"char[]" undef, ptr %14, 0, !dbg !3766
  %18 = insertvalue %"char[]" %17, i64 %size, 1, !dbg !3766
  %19 = load ptr, ptr %self, align 8, !dbg !3769
  %checknull25 = icmp eq ptr %19, null, !dbg !3769
  %20 = call i1 @llvm.expect.i1(i1 %checknull25, i1 false), !dbg !3769
  br i1 %20, label %panic26, label %checkok30, !dbg !3769

checkok30:                                        ; preds = %checkok24
  %ptradd31 = getelementptr inbounds i8, ptr %19, i64 16, !dbg !3769
  %21 = load %"char[]", ptr %ptradd31, align 8, !dbg !3769
  %22 = extractvalue %"char[]" %21, 0, !dbg !3769
  %23 = load ptr, ptr %self, align 8, !dbg !3770
  %checknull32 = icmp eq ptr %23, null, !dbg !3770
  %24 = call i1 @llvm.expect.i1(i1 %checknull32, i1 false), !dbg !3770
  br i1 %24, label %panic33, label %checkok37, !dbg !3770

checkok37:                                        ; preds = %checkok30
  %ptradd38 = getelementptr inbounds i8, ptr %23, i64 32, !dbg !3770
  %25 = load i64, ptr %ptradd38, align 8, !dbg !3770
  %26 = extractvalue %"char[]" %21, 1, !dbg !3770
  %gt39 = icmp ugt i64 %25, %26, !dbg !3770
  %27 = call i1 @llvm.expect.i1(i1 %gt39, i1 false), !dbg !3770
  br i1 %27, label %panic40, label %checkok50, !dbg !3770

checkok50:                                        ; preds = %checkok37
  %ptradd51 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3771
  %28 = load i64, ptr %ptradd51, align 8, !dbg !3771
  %add = add i64 %25, %28, !dbg !3771
  %lt52 = icmp ult i64 %26, %add, !dbg !3771
  %sub53 = sub i64 %add, 1, !dbg !3771
  %29 = call i1 @llvm.expect.i1(i1 %lt52, i1 false), !dbg !3771
  br i1 %29, label %panic54, label %checkok64, !dbg !3771

checkok64:                                        ; preds = %checkok50
  %size65 = sub i64 %add, %25, !dbg !3769
  %ptradd66 = getelementptr inbounds i8, ptr %22, i64 %25, !dbg !3769
  %30 = insertvalue %"char[]" undef, ptr %ptradd66, 0, !dbg !3769
  %31 = insertvalue %"char[]" %30, i64 %size65, 1, !dbg !3769
  %32 = extractvalue %"char[]" %31, 0, !dbg !3769
  %33 = extractvalue %"char[]" %18, 0, !dbg !3769
  store %"char[]" %18, ptr %taddr67, align 8
  %ptradd68 = getelementptr inbounds i8, ptr %taddr67, i64 8
  %34 = load i64, ptr %ptradd68, align 8
  store %"char[]" %31, ptr %taddr69, align 8
  %ptradd70 = getelementptr inbounds i8, ptr %taddr69, i64 8
  %35 = load i64, ptr %ptradd70, align 8
  %neq = icmp ne i64 %35, %34
  %36 = call i1 @llvm.expect.i1(i1 %neq, i1 false)
  br i1 %36, label %panic71, label %checkok81

checkok81:                                        ; preds = %checkok64
  %37 = mul i64 %34, 1, !dbg !3769
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %32, ptr align 1 %33, i64 %37, i1 false), !dbg !3769
  %38 = load ptr, ptr %self, align 8, !dbg !3772
  %checknull82 = icmp eq ptr %38, null, !dbg !3772
  %39 = call i1 @llvm.expect.i1(i1 %checknull82, i1 false), !dbg !3772
  br i1 %39, label %panic83, label %checkok87, !dbg !3772

checkok87:                                        ; preds = %checkok81
  %ptradd88 = getelementptr inbounds i8, ptr %38, i64 32, !dbg !3772
  %40 = load i64, ptr %ptradd88, align 8, !dbg !3772
  %ptradd89 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3773
  %41 = load i64, ptr %ptradd89, align 8, !dbg !3773
  %add90 = add i64 %40, %41, !dbg !3772
  store i64 %add90, ptr %ptradd88, align 8, !dbg !3772
  %ptradd91 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3774
  %42 = load i64, ptr %ptradd91, align 8, !dbg !3774
  store i64 %42, ptr %0, align 8, !dbg !3774
  ret i64 0, !dbg !3774

if.exit:                                          ; preds = %checkok14
  %43 = load ptr, ptr %self, align 8, !dbg !3775
  %44 = call i64 @std.io.WriteBuffer.write_pending(ptr %43), !dbg !3775
  %not_err = icmp eq i64 %44, 0, !dbg !3775
  %45 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3775
  br i1 %45, label %after_check, label %assign_optional, !dbg !3775

assign_optional:                                  ; preds = %if.exit
  store i64 %44, ptr %error_var, align 8, !dbg !3775
  br label %guard_block, !dbg !3775

after_check:                                      ; preds = %if.exit
  br label %noerr_block, !dbg !3775

guard_block:                                      ; preds = %assign_optional
  %46 = load i64, ptr %error_var, align 8, !dbg !3775
  ret i64 %46, !dbg !3775

noerr_block:                                      ; preds = %after_check
  %ptradd92 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3776
  %47 = load i64, ptr %ptradd92, align 8, !dbg !3776
  %48 = load ptr, ptr %self, align 8, !dbg !3777
  %checknull93 = icmp eq ptr %48, null, !dbg !3777
  %49 = call i1 @llvm.expect.i1(i1 %checknull93, i1 false), !dbg !3777
  br i1 %49, label %panic94, label %checkok98, !dbg !3777

checkok98:                                        ; preds = %noerr_block
  %ptradd99 = getelementptr inbounds i8, ptr %48, i64 16, !dbg !3777
  %ptradd100 = getelementptr inbounds i8, ptr %ptradd99, i64 8, !dbg !3777
  %50 = load i64, ptr %ptradd100, align 8, !dbg !3777
  %ge = icmp uge i64 %47, %50, !dbg !3776
  br i1 %ge, label %if.then101, label %if.exit118, !dbg !3776

if.then101:                                       ; preds = %checkok98
  %51 = load ptr, ptr %self, align 8, !dbg !3778
  %checknull103 = icmp eq ptr %51, null, !dbg !3778
  %52 = call i1 @llvm.expect.i1(i1 %checknull103, i1 false), !dbg !3778
  br i1 %52, label %panic104, label %checkok108, !dbg !3778

checkok108:                                       ; preds = %if.then101
  %ptradd109 = getelementptr inbounds i8, ptr %51, i64 8, !dbg !3780
  %53 = load i64, ptr %ptradd109, align 8, !dbg !3780
  %54 = inttoptr i64 %53 to ptr, !dbg !3780
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !3755
  %55 = icmp eq ptr %54, %type, !dbg !3755
  br i1 %55, label %cache_hit, label %cache_miss, !dbg !3755

cache_miss:                                       ; preds = %checkok108
  %ptradd110 = getelementptr inbounds i8, ptr %54, i64 16, !dbg !3755
  %56 = load ptr, ptr %ptradd110, align 8, !dbg !3755
  %57 = call ptr @.dyn_search(ptr %56, ptr @"$sel.write"), !dbg !3755
  store ptr %57, ptr %.inlinecache, align 8, !dbg !3755
  store ptr %54, ptr %.cachedtype, align 8, !dbg !3755
  br label %58, !dbg !3755

cache_hit:                                        ; preds = %checkok108
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !3755
  br label %58, !dbg !3755

58:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %57, %cache_miss ], !dbg !3755
  %59 = icmp eq ptr %fn_phi, null, !dbg !3755
  br i1 %59, label %missing_function, label %match, !dbg !3755

missing_function:                                 ; preds = %58
  store %"char[]" { ptr @.panic_msg.51, i64 42 }, ptr %indirectarg111, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg112, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg113, align 8
  %60 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %60(ptr align 8 %indirectarg111, ptr align 8 %indirectarg112, ptr align 8 %indirectarg113, i32 113), !dbg !3778
  unreachable, !dbg !3778

match:                                            ; preds = %58
  %61 = load ptr, ptr %51, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg114, ptr align 8 %2, i32 16, i1 false)
  %62 = call i64 %fn_phi(ptr %retparam, ptr %61, ptr align 8 %indirectarg114), !dbg !3778
  %not_err115 = icmp eq i64 %62, 0, !dbg !3778
  %63 = call i1 @llvm.expect.i1(i1 %not_err115, i1 true), !dbg !3778
  br i1 %63, label %after_check117, label %assign_optional116, !dbg !3778

assign_optional116:                               ; preds = %match
  store i64 %62, ptr %reterr102, align 8, !dbg !3778
  br label %err_retblock, !dbg !3778

after_check117:                                   ; preds = %match
  %64 = load i64, ptr %retparam, align 8, !dbg !3778
  store i64 %64, ptr %0, align 8, !dbg !3778
  ret i64 0, !dbg !3778

err_retblock:                                     ; preds = %assign_optional116
  %65 = load i64, ptr %reterr102, align 8, !dbg !3778
  ret i64 %65, !dbg !3778

if.exit118:                                       ; preds = %checkok98
  %66 = load %"char[]", ptr %2, align 8, !dbg !3781
  %67 = extractvalue %"char[]" %66, 0, !dbg !3781
  %68 = extractvalue %"char[]" %66, 1, !dbg !3782
  %gt119 = icmp ugt i64 0, %68, !dbg !3782
  %69 = call i1 @llvm.expect.i1(i1 %gt119, i1 false), !dbg !3782
  br i1 %69, label %panic120, label %checkok130, !dbg !3782

checkok130:                                       ; preds = %if.exit118
  %size131 = sub i64 %68, 0, !dbg !3781
  %70 = insertvalue %"char[]" undef, ptr %67, 0, !dbg !3781
  %71 = insertvalue %"char[]" %70, i64 %size131, 1, !dbg !3781
  %72 = load ptr, ptr %self, align 8, !dbg !3783
  %checknull132 = icmp eq ptr %72, null, !dbg !3783
  %73 = call i1 @llvm.expect.i1(i1 %checknull132, i1 false), !dbg !3783
  br i1 %73, label %panic133, label %checkok137, !dbg !3783

checkok137:                                       ; preds = %checkok130
  %ptradd138 = getelementptr inbounds i8, ptr %72, i64 16, !dbg !3783
  %74 = load %"char[]", ptr %ptradd138, align 8, !dbg !3783
  %75 = extractvalue %"char[]" %74, 0, !dbg !3783
  %76 = extractvalue %"char[]" %74, 1, !dbg !3784
  %gt139 = icmp ugt i64 0, %76, !dbg !3784
  %77 = call i1 @llvm.expect.i1(i1 %gt139, i1 false), !dbg !3784
  br i1 %77, label %panic140, label %checkok150, !dbg !3784

checkok150:                                       ; preds = %checkok137
  %ptradd151 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3785
  %78 = load i64, ptr %ptradd151, align 8, !dbg !3785
  %add152 = add i64 0, %78, !dbg !3785
  %lt153 = icmp ult i64 %76, %add152, !dbg !3785
  %sub154 = sub i64 %add152, 1, !dbg !3785
  %79 = call i1 @llvm.expect.i1(i1 %lt153, i1 false), !dbg !3785
  br i1 %79, label %panic155, label %checkok165, !dbg !3785

checkok165:                                       ; preds = %checkok150
  %size166 = sub i64 %add152, 0, !dbg !3783
  %80 = insertvalue %"char[]" undef, ptr %75, 0, !dbg !3783
  %81 = insertvalue %"char[]" %80, i64 %size166, 1, !dbg !3783
  %82 = extractvalue %"char[]" %81, 0, !dbg !3783
  %83 = extractvalue %"char[]" %71, 0, !dbg !3783
  store %"char[]" %71, ptr %taddr167, align 8
  %ptradd168 = getelementptr inbounds i8, ptr %taddr167, i64 8
  %84 = load i64, ptr %ptradd168, align 8
  store %"char[]" %81, ptr %taddr169, align 8
  %ptradd170 = getelementptr inbounds i8, ptr %taddr169, i64 8
  %85 = load i64, ptr %ptradd170, align 8
  %neq171 = icmp ne i64 %85, %84
  %86 = call i1 @llvm.expect.i1(i1 %neq171, i1 false)
  br i1 %86, label %panic172, label %checkok182

checkok182:                                       ; preds = %checkok165
  %87 = mul i64 %84, 1, !dbg !3783
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %82, ptr align 1 %83, i64 %87, i1 false), !dbg !3783
  %88 = load ptr, ptr %self, align 8, !dbg !3786
  %checknull183 = icmp eq ptr %88, null, !dbg !3786
  %89 = call i1 @llvm.expect.i1(i1 %checknull183, i1 false), !dbg !3786
  br i1 %89, label %panic184, label %checkok188, !dbg !3786

checkok188:                                       ; preds = %checkok182
  %ptradd189 = getelementptr inbounds i8, ptr %88, i64 32, !dbg !3786
  %ptradd190 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3787
  %90 = load i64, ptr %ptradd190, align 8, !dbg !3787
  store i64 %90, ptr %ptradd189, align 8, !dbg !3787
  %ptradd192 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3788
  %91 = load i64, ptr %ptradd192, align 8, !dbg !3788
  store i64 %91, ptr %0, align 8, !dbg !3788
  ret i64 0, !dbg !3788

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg2, align 8
  %92 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %92(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 99), !dbg !3757
  unreachable, !dbg !3757

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg6, align 8
  %93 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %93(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 101), !dbg !3762
  unreachable, !dbg !3762

panic10:                                          ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg13, align 8
  %94 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %94(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 101), !dbg !3763
  unreachable, !dbg !3763

panic17:                                          ; preds = %if.then
  store i64 %15, ptr %taddr, align 8
  %95 = insertvalue %any undef, ptr %taddr, 0
  %96 = insertvalue %any %95, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr18, align 8
  %97 = insertvalue %any undef, ptr %taddr18, 0
  %98 = insertvalue %any %97, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg21, align 8
  store %any %96, ptr %varargslots, align 16
  %ptradd22 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %98, ptr %ptradd22, align 16
  %99 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %99, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg23, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 105, ptr align 8 %indirectarg23), !dbg !3766
  unreachable, !dbg !3766

panic26:                                          ; preds = %checkok24
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg29, align 8
  %100 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %100(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 105), !dbg !3769
  unreachable, !dbg !3769

panic33:                                          ; preds = %checkok30
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg36, align 8
  %101 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %101(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 105), !dbg !3770
  unreachable, !dbg !3770

panic40:                                          ; preds = %checkok37
  store i64 %26, ptr %taddr41, align 8
  %102 = insertvalue %any undef, ptr %taddr41, 0
  %103 = insertvalue %any %102, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %25, ptr %taddr42, align 8
  %104 = insertvalue %any undef, ptr %taddr42, 0
  %105 = insertvalue %any %104, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg45, align 8
  store %any %103, ptr %varargslots46, align 16
  %ptradd47 = getelementptr inbounds i8, ptr %varargslots46, i64 16
  store %any %105, ptr %ptradd47, align 16
  %106 = insertvalue %"any[]" undef, ptr %varargslots46, 0
  %"$$temp48" = insertvalue %"any[]" %106, i64 2, 1
  store %"any[]" %"$$temp48", ptr %indirectarg49, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 105, ptr align 8 %indirectarg49), !dbg !3769
  unreachable, !dbg !3769

panic54:                                          ; preds = %checkok50
  store i64 %sub53, ptr %taddr55, align 8
  %107 = insertvalue %any undef, ptr %taddr55, 0
  %108 = insertvalue %any %107, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %26, ptr %taddr56, align 8
  %109 = insertvalue %any undef, ptr %taddr56, 0
  %110 = insertvalue %any %109, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg59, align 8
  store %any %108, ptr %varargslots60, align 16
  %ptradd61 = getelementptr inbounds i8, ptr %varargslots60, i64 16
  store %any %110, ptr %ptradd61, align 16
  %111 = insertvalue %"any[]" undef, ptr %varargslots60, 0
  %"$$temp62" = insertvalue %"any[]" %111, i64 2, 1
  store %"any[]" %"$$temp62", ptr %indirectarg63, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, i32 105, ptr align 8 %indirectarg63), !dbg !3769
  unreachable, !dbg !3769

panic71:                                          ; preds = %checkok64
  store i64 %35, ptr %taddr72, align 8
  %112 = insertvalue %any undef, ptr %taddr72, 0
  %113 = insertvalue %any %112, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %34, ptr %taddr73, align 8
  %114 = insertvalue %any undef, ptr %taddr73, 0
  %115 = insertvalue %any %114, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.206, i64 38 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg75, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg76, align 8
  store %any %113, ptr %varargslots77, align 16
  %ptradd78 = getelementptr inbounds i8, ptr %varargslots77, i64 16
  store %any %115, ptr %ptradd78, align 16
  %116 = insertvalue %"any[]" undef, ptr %varargslots77, 0
  %"$$temp79" = insertvalue %"any[]" %116, i64 2, 1
  store %"any[]" %"$$temp79", ptr %indirectarg80, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, ptr align 8 %indirectarg76, i32 105, ptr align 8 %indirectarg80), !dbg !3769
  unreachable, !dbg !3769

panic83:                                          ; preds = %checkok81
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg86, align 8
  %117 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %117(ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, i32 106), !dbg !3772
  unreachable, !dbg !3772

panic94:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg97, align 8
  %118 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %118(ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, i32 110), !dbg !3777
  unreachable, !dbg !3777

panic104:                                         ; preds = %if.then101
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg105, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg106, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg107, align 8
  %119 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %119(ptr align 8 %indirectarg105, ptr align 8 %indirectarg106, ptr align 8 %indirectarg107, i32 113), !dbg !3778
  unreachable, !dbg !3778

panic120:                                         ; preds = %if.exit118
  store i64 %68, ptr %taddr121, align 8
  %120 = insertvalue %any undef, ptr %taddr121, 0
  %121 = insertvalue %any %120, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr122, align 8
  %122 = insertvalue %any undef, ptr %taddr122, 0
  %123 = insertvalue %any %122, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg123, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg124, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg125, align 8
  store %any %121, ptr %varargslots126, align 16
  %ptradd127 = getelementptr inbounds i8, ptr %varargslots126, i64 16
  store %any %123, ptr %ptradd127, align 16
  %124 = insertvalue %"any[]" undef, ptr %varargslots126, 0
  %"$$temp128" = insertvalue %"any[]" %124, i64 2, 1
  store %"any[]" %"$$temp128", ptr %indirectarg129, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg123, ptr align 8 %indirectarg124, ptr align 8 %indirectarg125, i32 116, ptr align 8 %indirectarg129), !dbg !3781
  unreachable, !dbg !3781

panic133:                                         ; preds = %checkok130
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg134, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg135, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg136, align 8
  %125 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %125(ptr align 8 %indirectarg134, ptr align 8 %indirectarg135, ptr align 8 %indirectarg136, i32 116), !dbg !3783
  unreachable, !dbg !3783

panic140:                                         ; preds = %checkok137
  store i64 %76, ptr %taddr141, align 8
  %126 = insertvalue %any undef, ptr %taddr141, 0
  %127 = insertvalue %any %126, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr142, align 8
  %128 = insertvalue %any undef, ptr %taddr142, 0
  %129 = insertvalue %any %128, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg143, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg144, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg145, align 8
  store %any %127, ptr %varargslots146, align 16
  %ptradd147 = getelementptr inbounds i8, ptr %varargslots146, i64 16
  store %any %129, ptr %ptradd147, align 16
  %130 = insertvalue %"any[]" undef, ptr %varargslots146, 0
  %"$$temp148" = insertvalue %"any[]" %130, i64 2, 1
  store %"any[]" %"$$temp148", ptr %indirectarg149, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg143, ptr align 8 %indirectarg144, ptr align 8 %indirectarg145, i32 116, ptr align 8 %indirectarg149), !dbg !3783
  unreachable, !dbg !3783

panic155:                                         ; preds = %checkok150
  store i64 %sub154, ptr %taddr156, align 8
  %131 = insertvalue %any undef, ptr %taddr156, 0
  %132 = insertvalue %any %131, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %76, ptr %taddr157, align 8
  %133 = insertvalue %any undef, ptr %taddr157, 0
  %134 = insertvalue %any %133, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg158, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg159, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg160, align 8
  store %any %132, ptr %varargslots161, align 16
  %ptradd162 = getelementptr inbounds i8, ptr %varargslots161, i64 16
  store %any %134, ptr %ptradd162, align 16
  %135 = insertvalue %"any[]" undef, ptr %varargslots161, 0
  %"$$temp163" = insertvalue %"any[]" %135, i64 2, 1
  store %"any[]" %"$$temp163", ptr %indirectarg164, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg158, ptr align 8 %indirectarg159, ptr align 8 %indirectarg160, i32 116, ptr align 8 %indirectarg164), !dbg !3783
  unreachable, !dbg !3783

panic172:                                         ; preds = %checkok165
  store i64 %85, ptr %taddr173, align 8
  %136 = insertvalue %any undef, ptr %taddr173, 0
  %137 = insertvalue %any %136, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %84, ptr %taddr174, align 8
  %138 = insertvalue %any undef, ptr %taddr174, 0
  %139 = insertvalue %any %138, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.206, i64 38 }, ptr %indirectarg175, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg176, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg177, align 8
  store %any %137, ptr %varargslots178, align 16
  %ptradd179 = getelementptr inbounds i8, ptr %varargslots178, i64 16
  store %any %139, ptr %ptradd179, align 16
  %140 = insertvalue %"any[]" undef, ptr %varargslots178, 0
  %"$$temp180" = insertvalue %"any[]" %140, i64 2, 1
  store %"any[]" %"$$temp180", ptr %indirectarg181, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg175, ptr align 8 %indirectarg176, ptr align 8 %indirectarg177, i32 116, ptr align 8 %indirectarg181), !dbg !3783
  unreachable, !dbg !3783

panic184:                                         ; preds = %checkok182
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg185, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg186, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg187, align 8
  %141 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %141(ptr align 8 %indirectarg185, ptr align 8 %indirectarg186, ptr align 8 %indirectarg187, i32 117), !dbg !3786
  unreachable, !dbg !3786
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.WriteBuffer.write_byte(ptr %0, i8 %1) #0 comdat !dbg !3789 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %c = alloca i8, align 1
  %n = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr25 = alloca i64, align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg30 = alloca %"any[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !3792
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !3792
  br i1 %3, label %panic, label %checkok, !dbg !3792

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3793, metadata !DIExpression()), !dbg !3794
  store i8 %1, ptr %c, align 1
  call void @llvm.dbg.declare(metadata ptr %c, metadata !3795, metadata !DIExpression()), !dbg !3796
  call void @llvm.dbg.declare(metadata ptr %n, metadata !3797, metadata !DIExpression()), !dbg !3798
  %4 = load ptr, ptr %self, align 8, !dbg !3799
  %checknull = icmp eq ptr %4, null, !dbg !3799
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3799
  br i1 %5, label %panic3, label %checkok7, !dbg !3799

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !3799
  %ptradd8 = getelementptr inbounds i8, ptr %ptradd, i64 8, !dbg !3799
  %6 = load i64, ptr %ptradd8, align 8, !dbg !3799
  %7 = load ptr, ptr %self, align 8, !dbg !3800
  %checknull9 = icmp eq ptr %7, null, !dbg !3800
  %8 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !3800
  br i1 %8, label %panic10, label %checkok14, !dbg !3800

checkok14:                                        ; preds = %checkok7
  %ptradd15 = getelementptr inbounds i8, ptr %7, i64 32, !dbg !3800
  %9 = load i64, ptr %ptradd15, align 8, !dbg !3800
  %sub = sub i64 %6, %9, !dbg !3799
  store i64 %sub, ptr %n, align 8, !dbg !3799
  %10 = load i64, ptr %n, align 8, !dbg !3801
  %eq = icmp eq i64 0, %10, !dbg !3801
  br i1 %eq, label %if.then, label %if.exit, !dbg !3801

if.then:                                          ; preds = %checkok14
  %11 = load ptr, ptr %self, align 8, !dbg !3802
  %12 = call i64 @std.io.WriteBuffer.write_pending(ptr %11), !dbg !3802
  %not_err = icmp eq i64 %12, 0, !dbg !3802
  %13 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3802
  br i1 %13, label %after_check, label %assign_optional, !dbg !3802

assign_optional:                                  ; preds = %if.then
  store i64 %12, ptr %error_var, align 8, !dbg !3802
  br label %guard_block, !dbg !3802

after_check:                                      ; preds = %if.then
  br label %noerr_block, !dbg !3802

guard_block:                                      ; preds = %assign_optional
  %14 = load i64, ptr %error_var, align 8, !dbg !3802
  ret i64 %14, !dbg !3802

noerr_block:                                      ; preds = %after_check
  br label %if.exit, !dbg !3802

if.exit:                                          ; preds = %noerr_block, %checkok14
  %15 = load ptr, ptr %self, align 8, !dbg !3803
  %checknull16 = icmp eq ptr %15, null, !dbg !3803
  %16 = call i1 @llvm.expect.i1(i1 %checknull16, i1 false), !dbg !3803
  br i1 %16, label %panic17, label %checkok21, !dbg !3803

checkok21:                                        ; preds = %if.exit
  %ptradd22 = getelementptr inbounds i8, ptr %15, i64 16, !dbg !3803
  %ptradd23 = getelementptr inbounds i8, ptr %ptradd22, i64 8, !dbg !3803
  %17 = load i64, ptr %ptradd23, align 8, !dbg !3803
  %18 = load ptr, ptr %ptradd22, align 8, !dbg !3803
  %ge = icmp sge i64 0, %17, !dbg !3804
  %19 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !3804
  br i1 %19, label %panic24, label %checkok31, !dbg !3804

checkok31:                                        ; preds = %checkok21
  %20 = load i8, ptr %c, align 1, !dbg !3805
  store i8 %20, ptr %18, align 1, !dbg !3805
  %21 = load ptr, ptr %self, align 8, !dbg !3806
  %checknull32 = icmp eq ptr %21, null, !dbg !3806
  %22 = call i1 @llvm.expect.i1(i1 %checknull32, i1 false), !dbg !3806
  br i1 %22, label %panic33, label %checkok37, !dbg !3806

checkok37:                                        ; preds = %checkok31
  %ptradd38 = getelementptr inbounds i8, ptr %21, i64 32, !dbg !3806
  store i64 1, ptr %ptradd38, align 8, !dbg !3807
  ret i64 0, !dbg !3807

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg2, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 121), !dbg !3794
  unreachable, !dbg !3794

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg6, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 123), !dbg !3799
  unreachable, !dbg !3799

panic10:                                          ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg13, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 123), !dbg !3800
  unreachable, !dbg !3800

panic17:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg20, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 125), !dbg !3803
  unreachable, !dbg !3803

panic24:                                          ; preds = %checkok21
  store i64 %17, ptr %taddr, align 8
  %27 = insertvalue %any undef, ptr %taddr, 0
  %28 = insertvalue %any %27, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 0, ptr %taddr25, align 8
  %29 = insertvalue %any undef, ptr %taddr25, 0
  %30 = insertvalue %any %29, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg28, align 8
  store %any %28, ptr %varargslots, align 16
  %ptradd29 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %30, ptr %ptradd29, align 16
  %31 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %31, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg30, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 125, ptr align 8 %indirectarg30), !dbg !3804
  unreachable, !dbg !3804

panic33:                                          ; preds = %checkok31
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg36, align 8
  %32 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %32(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 126), !dbg !3806
  unreachable, !dbg !3806
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @std.io.WriteBuffer.write_pending(ptr %0) #0 !dbg !3808 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr22 = alloca i64, align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg27 = alloca %"any[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %taddr37 = alloca i64, align 8
  %taddr38 = alloca i64, align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %varargslots42 = alloca [2 x %any], align 16
  %indirectarg45 = alloca %"any[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !3809
  %1 = icmp eq ptr %0, null, !dbg !3809
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !3809
  br i1 %2, label %panic, label %checkok, !dbg !3809

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3810, metadata !DIExpression()), !dbg !3811
  %3 = load ptr, ptr %self, align 8, !dbg !3812
  %checknull = icmp eq ptr %3, null, !dbg !3812
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3812
  br i1 %4, label %panic3, label %checkok7, !dbg !3812

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 32, !dbg !3812
  %5 = load i64, ptr %ptradd, align 8, !dbg !3812
  %6 = load ptr, ptr %self, align 8, !dbg !3813
  %checknull8 = icmp eq ptr %6, null, !dbg !3813
  %7 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !3813
  br i1 %7, label %panic9, label %checkok13, !dbg !3813

checkok13:                                        ; preds = %checkok7
  %8 = load ptr, ptr %self, align 8, !dbg !3814
  %checknull14 = icmp eq ptr %8, null, !dbg !3814
  %9 = call i1 @llvm.expect.i1(i1 %checknull14, i1 false), !dbg !3814
  br i1 %9, label %panic15, label %checkok19, !dbg !3814

checkok19:                                        ; preds = %checkok13
  %ptradd20 = getelementptr inbounds i8, ptr %8, i64 16, !dbg !3814
  %10 = load %"char[]", ptr %ptradd20, align 8, !dbg !3814
  %11 = extractvalue %"char[]" %10, 0, !dbg !3814
  %12 = extractvalue %"char[]" %10, 1, !dbg !3815
  %gt = icmp ugt i64 0, %12, !dbg !3815
  %13 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !3815
  br i1 %13, label %panic21, label %checkok28, !dbg !3815

checkok28:                                        ; preds = %checkok19
  %14 = load ptr, ptr %self, align 8, !dbg !3816
  %checknull29 = icmp eq ptr %14, null, !dbg !3816
  %15 = call i1 @llvm.expect.i1(i1 %checknull29, i1 false), !dbg !3816
  br i1 %15, label %panic30, label %checkok34, !dbg !3816

checkok34:                                        ; preds = %checkok28
  %ptradd35 = getelementptr inbounds i8, ptr %14, i64 32, !dbg !3816
  %16 = load i64, ptr %ptradd35, align 8, !dbg !3816
  %add = add i64 0, %16, !dbg !3816
  %lt = icmp ult i64 %12, %add, !dbg !3816
  %sub = sub i64 %add, 1, !dbg !3816
  %17 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !3816
  br i1 %17, label %panic36, label %checkok46, !dbg !3816

checkok46:                                        ; preds = %checkok34
  %size = sub i64 %add, 0, !dbg !3814
  %18 = insertvalue %"char[]" undef, ptr %11, 0, !dbg !3814
  %19 = insertvalue %"char[]" %18, i64 %size, 1, !dbg !3814
  %ptradd47 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !3814
  %20 = load i64, ptr %ptradd47, align 8, !dbg !3814
  %21 = inttoptr i64 %20 to ptr, !dbg !3814
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !3809
  %22 = icmp eq ptr %21, %type, !dbg !3809
  br i1 %22, label %cache_hit, label %cache_miss, !dbg !3809

cache_miss:                                       ; preds = %checkok46
  %ptradd48 = getelementptr inbounds i8, ptr %21, i64 16, !dbg !3809
  %23 = load ptr, ptr %ptradd48, align 8, !dbg !3809
  %24 = call ptr @.dyn_search(ptr %23, ptr @"$sel.write"), !dbg !3809
  store ptr %24, ptr %.inlinecache, align 8, !dbg !3809
  store ptr %21, ptr %.cachedtype, align 8, !dbg !3809
  br label %25, !dbg !3809

cache_hit:                                        ; preds = %checkok46
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !3809
  br label %25, !dbg !3809

25:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %24, %cache_miss ], !dbg !3809
  %26 = icmp eq ptr %fn_phi, null, !dbg !3809
  br i1 %26, label %missing_function, label %match, !dbg !3809

missing_function:                                 ; preds = %25
  store %"char[]" { ptr @.panic_msg.51, i64 42 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.212, i64 13 }, ptr %indirectarg51, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 131), !dbg !3813
  unreachable, !dbg !3813

match:                                            ; preds = %25
  %28 = load ptr, ptr %6, align 8
  store %"char[]" %19, ptr %indirectarg52, align 8
  %29 = call i64 %fn_phi(ptr %retparam, ptr %28, ptr align 8 %indirectarg52), !dbg !3813
  %not_err = icmp eq i64 %29, 0, !dbg !3813
  %30 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3813
  br i1 %30, label %after_check, label %assign_optional, !dbg !3813

assign_optional:                                  ; preds = %match
  store i64 %29, ptr %error_var, align 8, !dbg !3813
  br label %guard_block, !dbg !3813

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !3813

guard_block:                                      ; preds = %assign_optional
  %31 = load i64, ptr %error_var, align 8, !dbg !3813
  ret i64 %31, !dbg !3813

noerr_block:                                      ; preds = %after_check
  %32 = load i64, ptr %retparam, align 8, !dbg !3813
  %sub53 = sub i64 %5, %32, !dbg !3812
  store i64 %sub53, ptr %ptradd, align 8, !dbg !3812
  %33 = load ptr, ptr %self, align 8, !dbg !3817
  %checknull54 = icmp eq ptr %33, null, !dbg !3817
  %34 = call i1 @llvm.expect.i1(i1 %checknull54, i1 false), !dbg !3817
  br i1 %34, label %panic55, label %checkok59, !dbg !3817

checkok59:                                        ; preds = %noerr_block
  %ptradd60 = getelementptr inbounds i8, ptr %33, i64 32, !dbg !3817
  %35 = load i64, ptr %ptradd60, align 8, !dbg !3817
  %neq = icmp ne i64 0, %35, !dbg !3817
  br i1 %neq, label %if.then, label %if.exit, !dbg !3817

if.then:                                          ; preds = %checkok59
  ret i64 ptrtoint (ptr @"std.io.IoError$INCOMPLETE_WRITE" to i64), !dbg !3818

if.exit:                                          ; preds = %checkok59
  ret i64 0, !dbg !3818

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.212, i64 13 }, ptr %indirectarg2, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 129), !dbg !3811
  unreachable, !dbg !3811

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.212, i64 13 }, ptr %indirectarg6, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 131), !dbg !3812
  unreachable, !dbg !3812

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.212, i64 13 }, ptr %indirectarg12, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 131), !dbg !3813
  unreachable, !dbg !3813

panic15:                                          ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func.212, i64 13 }, ptr %indirectarg18, align 8
  %39 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %39(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 131), !dbg !3814
  unreachable, !dbg !3814

panic21:                                          ; preds = %checkok19
  store i64 %12, ptr %taddr, align 8
  %40 = insertvalue %any undef, ptr %taddr, 0
  %41 = insertvalue %any %40, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr22, align 8
  %42 = insertvalue %any undef, ptr %taddr22, 0
  %43 = insertvalue %any %42, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.212, i64 13 }, ptr %indirectarg25, align 8
  store %any %41, ptr %varargslots, align 16
  %ptradd26 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %43, ptr %ptradd26, align 16
  %44 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %44, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg27, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 131, ptr align 8 %indirectarg27), !dbg !3814
  unreachable, !dbg !3814

panic30:                                          ; preds = %checkok28
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.func.212, i64 13 }, ptr %indirectarg33, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, i32 131), !dbg !3816
  unreachable, !dbg !3816

panic36:                                          ; preds = %checkok34
  store i64 %sub, ptr %taddr37, align 8
  %46 = insertvalue %any undef, ptr %taddr37, 0
  %47 = insertvalue %any %46, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %12, ptr %taddr38, align 8
  %48 = insertvalue %any undef, ptr %taddr38, 0
  %49 = insertvalue %any %48, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.212, i64 13 }, ptr %indirectarg41, align 8
  store %any %47, ptr %varargslots42, align 16
  %ptradd43 = getelementptr inbounds i8, ptr %varargslots42, i64 16
  store %any %49, ptr %ptradd43, align 16
  %50 = insertvalue %"any[]" undef, ptr %varargslots42, 0
  %"$$temp44" = insertvalue %"any[]" %50, i64 2, 1
  store %"any[]" %"$$temp44", ptr %indirectarg45, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 131, ptr align 8 %indirectarg45), !dbg !3814
  unreachable, !dbg !3814

panic55:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.file.198, i64 9 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.func.212, i64 13 }, ptr %indirectarg58, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, i32 132), !dbg !3817
  unreachable, !dbg !3817
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.new_init(ptr %0, ptr %1, i64 %2, i64 %3, ptr align 8 %4) #0 comdat !dbg !3819 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %max_read = alloca i64, align 8
  %initial_capacity = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %.assign_list = alloca %ByteBuffer, align 8
  %x = alloca i64, align 8
  %.anon = alloca i32, align 4
  %a = alloca i64, align 8
  %b = alloca i32, align 4
  %error_var = alloca i64, align 8
  %reterr = alloca i64, align 8
  %5 = icmp eq ptr %1, null, !dbg !3832
  %6 = call i1 @llvm.expect.i1(i1 %5, i1 false), !dbg !3832
  br i1 %6, label %panic, label %checkok, !dbg !3832

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3833, metadata !DIExpression()), !dbg !3834
  store i64 %2, ptr %max_read, align 8
  call void @llvm.dbg.declare(metadata ptr %max_read, metadata !3835, metadata !DIExpression()), !dbg !3836
  store i64 %3, ptr %initial_capacity, align 8
  call void @llvm.dbg.declare(metadata ptr %initial_capacity, metadata !3837, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3839, metadata !DIExpression()), !dbg !3840
  %7 = load ptr, ptr %self, align 8, !dbg !3841
  %checknull = icmp eq ptr %7, null, !dbg !3841
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3841
  br i1 %8, label %panic3, label %checkok7, !dbg !3841

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %7, i64 24, !dbg !3841
  %ptradd8 = getelementptr inbounds i8, ptr %ptradd, i64 8, !dbg !3841
  %9 = load i64, ptr %ptradd8, align 8, !dbg !3841
  %eq = icmp eq i64 0, %9, !dbg !3841
  br i1 %eq, label %assert_ok, label %assert_fail, !dbg !3841

assert_fail:                                      ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.215, i64 71 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg11, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, i32 17), !dbg !3841
  unreachable, !dbg !3841

assert_ok:                                        ; preds = %checkok7
  %11 = load ptr, ptr %self, align 8, !dbg !3843
  %checknull12 = icmp eq ptr %11, null, !dbg !3843
  %12 = call i1 @llvm.expect.i1(i1 %checknull12, i1 false), !dbg !3843
  br i1 %12, label %panic13, label %checkok17, !dbg !3843

checkok17:                                        ; preds = %assert_ok
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 64, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %.assign_list, ptr align 8 %4, i32 16, i1 false), !dbg !3844
  %ptradd18 = getelementptr inbounds i8, ptr %.assign_list, i64 16, !dbg !3844
  %13 = load i64, ptr %max_read, align 8, !dbg !3845
  store i64 %13, ptr %ptradd18, align 8, !dbg !3845
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %11, ptr align 8 %.assign_list, i32 64, i1 false), !dbg !3845
  %14 = load i64, ptr %initial_capacity, align 8
  store i64 %14, ptr %x, align 8
  store i32 16, ptr %.anon, align 4
  %15 = load i64, ptr %x, align 8
  store i64 %15, ptr %a, align 8
  %16 = load i32, ptr %.anon, align 4
  store i32 %16, ptr %b, align 4
  %17 = load i64, ptr %a, align 8, !dbg !3846
  %18 = load i32, ptr %b, align 4, !dbg !3851
  %sext = sext i32 %18 to i64, !dbg !3851
  %lt = icmp slt i64 %sext, %17, !dbg !3846
  %check = icmp slt i64 %17, 0, !dbg !3846
  %siui-lt = or i1 %check, %lt, !dbg !3846
  br i1 %siui-lt, label %cond.lhs, label %cond.rhs, !dbg !3846

cond.lhs:                                         ; preds = %checkok17
  %19 = load i64, ptr %x, align 8, !dbg !3852
  br label %cond.phi, !dbg !3852

cond.rhs:                                         ; preds = %checkok17
  %20 = load i32, ptr %.anon, align 4, !dbg !3853
  %sext19 = sext i32 %20 to i64, !dbg !3853
  br label %cond.phi, !dbg !3853

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i64 [ %19, %cond.lhs ], [ %sext19, %cond.rhs ], !dbg !3853
  store i64 %val, ptr %initial_capacity, align 8, !dbg !3853
  %21 = load ptr, ptr %self, align 8, !dbg !3854
  %22 = load i64, ptr %initial_capacity, align 8, !dbg !3854
  %23 = call i64 @std.io.ByteBuffer.grow(ptr %21, i64 %22), !dbg !3855
  %not_err = icmp eq i64 %23, 0, !dbg !3855
  %24 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3855
  br i1 %24, label %after_check, label %assign_optional, !dbg !3855

assign_optional:                                  ; preds = %cond.phi
  store i64 %23, ptr %error_var, align 8, !dbg !3855
  br label %guard_block, !dbg !3855

after_check:                                      ; preds = %cond.phi
  br label %noerr_block, !dbg !3855

guard_block:                                      ; preds = %assign_optional
  %25 = load i64, ptr %error_var, align 8, !dbg !3855
  ret i64 %25, !dbg !3855

noerr_block:                                      ; preds = %after_check
  %26 = load ptr, ptr %self, align 8, !dbg !3856
  store ptr %26, ptr %0, align 8, !dbg !3856
  ret i64 0, !dbg !3856

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg2, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 19), !dbg !3834
  unreachable, !dbg !3834

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg6, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 17), !dbg !3841
  unreachable, !dbg !3841

panic13:                                          ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg16, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 21), !dbg !3843
  unreachable, !dbg !3843
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.temp_init(ptr %0, ptr %1, i64 %2, i64 %3) #0 comdat !dbg !3857 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %max_read = alloca i64, align 8
  %initial_capacity = alloca i64, align 8
  %reterr = alloca i64, align 8
  %retparam = alloca ptr, align 8
  %indirectarg3 = alloca %any, align 8
  %4 = icmp eq ptr %1, null, !dbg !3860
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !3860
  br i1 %5, label %panic, label %checkok, !dbg !3860

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3861, metadata !DIExpression()), !dbg !3862
  store i64 %2, ptr %max_read, align 8
  call void @llvm.dbg.declare(metadata ptr %max_read, metadata !3863, metadata !DIExpression()), !dbg !3864
  store i64 %3, ptr %initial_capacity, align 8
  call void @llvm.dbg.declare(metadata ptr %initial_capacity, metadata !3865, metadata !DIExpression()), !dbg !3866
  %6 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !3867
  %not = icmp eq ptr %6, null, !dbg !3867
  br i1 %not, label %if.then, label %if.exit, !dbg !3867

if.then:                                          ; preds = %checkok
  call void @std.core.mem.allocator.init_default_temp_allocators(), !dbg !3871
  br label %if.exit, !dbg !3871

if.exit:                                          ; preds = %if.then, %checkok
  %7 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !3873
  %8 = insertvalue %any undef, ptr %7, 0, !dbg !3873
  %9 = insertvalue %any %8, i64 ptrtoint (ptr @"$ct.std.core.mem.allocator.TempAllocator" to i64), 1, !dbg !3873
  %10 = load ptr, ptr %self, align 8
  %11 = load i64, ptr %max_read, align 8
  %12 = load i64, ptr %initial_capacity, align 8
  store %any %9, ptr %indirectarg3, align 8
  %13 = call i64 @std.io.ByteBuffer.new_init(ptr %retparam, ptr %10, i64 %11, i64 %12, ptr align 8 %indirectarg3), !dbg !3874
  %not_err = icmp eq i64 %13, 0, !dbg !3874
  %14 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3874
  br i1 %14, label %after_check, label %assign_optional, !dbg !3874

assign_optional:                                  ; preds = %if.exit
  store i64 %13, ptr %reterr, align 8, !dbg !3874
  br label %err_retblock, !dbg !3874

after_check:                                      ; preds = %if.exit
  %15 = load ptr, ptr %retparam, align 8, !dbg !3874
  store ptr %15, ptr %0, align 8, !dbg !3874
  ret i64 0, !dbg !3874

err_retblock:                                     ; preds = %assign_optional
  %16 = load i64, ptr %reterr, align 8, !dbg !3874
  ret i64 %16, !dbg !3874

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.216, i64 9 }, ptr %indirectarg2, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 27), !dbg !3862
  unreachable, !dbg !3862
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.init_with_buffer(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !3875 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %.assign_list = alloca %ByteBuffer, align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !3878
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !3878
  br i1 %4, label %panic, label %checkok, !dbg !3878

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3879, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3881, metadata !DIExpression()), !dbg !3882
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3883
  %5 = load i64, ptr %ptradd, align 8, !dbg !3883
  %lt = icmp ult i64 0, %5, !dbg !3883
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !3883

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.218, i64 32 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.217, i64 16 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 33), !dbg !3883
  unreachable, !dbg !3883

assert_ok:                                        ; preds = %checkok
  %7 = load ptr, ptr %self, align 8, !dbg !3885
  %checknull = icmp eq ptr %7, null, !dbg !3885
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3885
  br i1 %8, label %panic6, label %checkok10, !dbg !3885

checkok10:                                        ; preds = %assert_ok
  %ptradd11 = getelementptr inbounds i8, ptr %7, i64 24, !dbg !3885
  %ptradd12 = getelementptr inbounds i8, ptr %ptradd11, i64 8, !dbg !3885
  %9 = load i64, ptr %ptradd12, align 8, !dbg !3885
  %eq = icmp eq i64 0, %9, !dbg !3885
  br i1 %eq, label %assert_ok17, label %assert_fail13, !dbg !3885

assert_fail13:                                    ; preds = %checkok10
  store %"char[]" { ptr @.panic_msg.215, i64 71 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func.217, i64 16 }, ptr %indirectarg16, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 34), !dbg !3885
  unreachable, !dbg !3885

assert_ok17:                                      ; preds = %checkok10
  %11 = load ptr, ptr %self, align 8, !dbg !3886
  %checknull18 = icmp eq ptr %11, null, !dbg !3886
  %12 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !3886
  br i1 %12, label %panic19, label %checkok23, !dbg !3886

checkok23:                                        ; preds = %assert_ok17
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 64, i1 false)
  %ptradd24 = getelementptr inbounds i8, ptr %.assign_list, i64 16
  %ptradd25 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3887
  %13 = load i64, ptr %ptradd25, align 8, !dbg !3887
  store i64 %13, ptr %ptradd24, align 8, !dbg !3887
  %ptradd26 = getelementptr inbounds i8, ptr %.assign_list, i64 24, !dbg !3887
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd26, ptr align 8 %2, i32 16, i1 false), !dbg !3888
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %11, ptr align 8 %.assign_list, i32 64, i1 false), !dbg !3888
  %14 = load ptr, ptr %self, align 8, !dbg !3889
  store ptr %14, ptr %0, align 8, !dbg !3889
  ret i64 0, !dbg !3889

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.217, i64 16 }, ptr %indirectarg2, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 36), !dbg !3880
  unreachable, !dbg !3880

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.217, i64 16 }, ptr %indirectarg9, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 34), !dbg !3885
  unreachable, !dbg !3885

panic19:                                          ; preds = %assert_ok17
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.217, i64 16 }, ptr %indirectarg22, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 38), !dbg !3886
  unreachable, !dbg !3886
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.ByteBuffer.free(ptr %0) #0 comdat !dbg !3890 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %allocator = alloca %any, align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %ptr = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !3893
  %1 = icmp eq ptr %0, null, !dbg !3893
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !3893
  br i1 %2, label %panic, label %checkok, !dbg !3893

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3894, metadata !DIExpression()), !dbg !3895
  %3 = load ptr, ptr %self, align 8, !dbg !3896
  %checknull = icmp eq ptr %3, null, !dbg !3896
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3896
  br i1 %4, label %panic3, label %checkok7, !dbg !3896

checkok7:                                         ; preds = %checkok
  %5 = load ptr, ptr %3, align 8, !dbg !3896
  %anybool = icmp ne ptr %5, null, !dbg !3896
  br i1 %anybool, label %if.then, label %if.exit26, !dbg !3896

if.then:                                          ; preds = %checkok7
  %6 = load ptr, ptr %self, align 8, !dbg !3897
  %checknull8 = icmp eq ptr %6, null, !dbg !3897
  %7 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !3897
  br i1 %7, label %panic9, label %checkok13, !dbg !3897

checkok13:                                        ; preds = %if.then
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %6, i32 16, i1 false)
  %8 = load ptr, ptr %self, align 8, !dbg !3898
  %checknull14 = icmp eq ptr %8, null, !dbg !3898
  %9 = call i1 @llvm.expect.i1(i1 %checknull14, i1 false), !dbg !3898
  br i1 %9, label %panic15, label %checkok19, !dbg !3898

checkok19:                                        ; preds = %checkok13
  %ptradd = getelementptr inbounds i8, ptr %8, i64 24, !dbg !3898
  %10 = load ptr, ptr %ptradd, align 8
  store ptr %10, ptr %ptr, align 8
  %11 = load ptr, ptr %ptr, align 8, !dbg !3899
  %not = icmp eq ptr %11, null, !dbg !3899
  br i1 %not, label %if.then20, label %if.exit, !dbg !3899

if.then20:                                        ; preds = %checkok19
  br label %expr_block.exit, !dbg !3902

if.exit:                                          ; preds = %checkok19
  %ptradd21 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !3903
  %12 = load i64, ptr %ptradd21, align 8, !dbg !3903
  %13 = inttoptr i64 %12 to ptr, !dbg !3903
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !3893
  %14 = icmp eq ptr %13, %type, !dbg !3893
  br i1 %14, label %cache_hit, label %cache_miss, !dbg !3893

cache_miss:                                       ; preds = %if.exit
  %ptradd22 = getelementptr inbounds i8, ptr %13, i64 16, !dbg !3893
  %15 = load ptr, ptr %ptradd22, align 8, !dbg !3893
  %16 = call ptr @.dyn_search(ptr %15, ptr @"$sel.release"), !dbg !3893
  store ptr %16, ptr %.inlinecache, align 8, !dbg !3893
  store ptr %13, ptr %.cachedtype, align 8, !dbg !3893
  br label %17, !dbg !3893

cache_hit:                                        ; preds = %if.exit
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !3893
  br label %17, !dbg !3893

17:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %16, %cache_miss ], !dbg !3893
  %18 = icmp eq ptr %fn_phi, null, !dbg !3893
  br i1 %18, label %missing_function, label %match, !dbg !3893

missing_function:                                 ; preds = %17
  store %"char[]" { ptr @.panic_msg.220, i64 44 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file.221, i64 16 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.219, i64 4 }, ptr %indirectarg25, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 105), !dbg !3904
  unreachable, !dbg !3904

match:                                            ; preds = %17
  %20 = load ptr, ptr %allocator, align 8, !dbg !3904
  %21 = load ptr, ptr %ptr, align 8, !dbg !3904
  call void %fn_phi(ptr %20, ptr %21, i8 zeroext 0), !dbg !3904
  br label %expr_block.exit, !dbg !3904

expr_block.exit:                                  ; preds = %match, %if.then20
  br label %if.exit26, !dbg !3904

if.exit26:                                        ; preds = %expr_block.exit, %checkok7
  %22 = load ptr, ptr %self, align 8, !dbg !3905
  %checknull27 = icmp eq ptr %22, null, !dbg !3905
  %23 = call i1 @llvm.expect.i1(i1 %checknull27, i1 false), !dbg !3905
  br i1 %23, label %panic28, label %checkok32, !dbg !3905

checkok32:                                        ; preds = %if.exit26
  call void @llvm.memset.p0.i64(ptr align 8 %22, i8 0, i64 64, i1 false), !dbg !3905
  ret void, !dbg !3905

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.219, i64 4 }, ptr %indirectarg2, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 42), !dbg !3895
  unreachable, !dbg !3895

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.219, i64 4 }, ptr %indirectarg6, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 44), !dbg !3896
  unreachable, !dbg !3896

panic9:                                           ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.219, i64 4 }, ptr %indirectarg12, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 44), !dbg !3897
  unreachable, !dbg !3897

panic15:                                          ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func.219, i64 4 }, ptr %indirectarg18, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 44), !dbg !3898
  unreachable, !dbg !3898

panic28:                                          ; preds = %if.exit26
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.func.219, i64 4 }, ptr %indirectarg31, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, i32 45), !dbg !3905
  unreachable, !dbg !3905
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.write(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !3906 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %cap = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %taddr = alloca i64, align 8
  %taddr19 = alloca i64, align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg24 = alloca %"any[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %taddr42 = alloca i64, align 8
  %taddr43 = alloca i64, align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %varargslots47 = alloca [2 x %any], align 16
  %indirectarg50 = alloca %"any[]", align 8
  %taddr56 = alloca i64, align 8
  %taddr57 = alloca i64, align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %varargslots61 = alloca [2 x %any], align 16
  %indirectarg64 = alloca %"any[]", align 8
  %taddr68 = alloca %"char[]", align 8
  %taddr70 = alloca %"char[]", align 8
  %taddr73 = alloca i64, align 8
  %taddr74 = alloca i64, align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %varargslots78 = alloca [2 x %any], align 16
  %indirectarg81 = alloca %"any[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !3909
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !3909
  br i1 %4, label %panic, label %checkok, !dbg !3909

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3910, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3912, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.declare(metadata ptr %cap, metadata !3914, metadata !DIExpression()), !dbg !3915
  %5 = load ptr, ptr %self, align 8, !dbg !3916
  %checknull = icmp eq ptr %5, null, !dbg !3916
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3916
  br i1 %6, label %panic3, label %checkok7, !dbg !3916

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 24, !dbg !3916
  %ptradd8 = getelementptr inbounds i8, ptr %ptradd, i64 8, !dbg !3916
  %7 = load i64, ptr %ptradd8, align 8, !dbg !3916
  %8 = load ptr, ptr %self, align 8, !dbg !3917
  %checknull9 = icmp eq ptr %8, null, !dbg !3917
  %9 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !3917
  br i1 %9, label %panic10, label %checkok14, !dbg !3917

checkok14:                                        ; preds = %checkok7
  %ptradd15 = getelementptr inbounds i8, ptr %8, i64 48, !dbg !3917
  %10 = load i64, ptr %ptradd15, align 8, !dbg !3917
  %sub = sub i64 %7, %10, !dbg !3916
  store i64 %sub, ptr %cap, align 8, !dbg !3916
  %11 = load i64, ptr %cap, align 8, !dbg !3918
  %ptradd16 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3919
  %12 = load i64, ptr %ptradd16, align 8, !dbg !3919
  %lt = icmp ult i64 %11, %12, !dbg !3918
  br i1 %lt, label %if.then, label %if.exit, !dbg !3918

if.then:                                          ; preds = %checkok14
  %ptradd17 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3920
  %13 = load ptr, ptr %self, align 8, !dbg !3920
  %14 = load i64, ptr %ptradd17, align 8, !dbg !3920
  %15 = call i64 @std.io.ByteBuffer.grow(ptr %13, i64 %14), !dbg !3921
  %not_err = icmp eq i64 %15, 0, !dbg !3921
  %16 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3921
  br i1 %16, label %after_check, label %assign_optional, !dbg !3921

assign_optional:                                  ; preds = %if.then
  store i64 %15, ptr %error_var, align 8, !dbg !3921
  br label %guard_block, !dbg !3921

after_check:                                      ; preds = %if.then
  br label %noerr_block, !dbg !3921

guard_block:                                      ; preds = %assign_optional
  %17 = load i64, ptr %error_var, align 8, !dbg !3921
  ret i64 %17, !dbg !3921

noerr_block:                                      ; preds = %after_check
  br label %if.exit, !dbg !3921

if.exit:                                          ; preds = %noerr_block, %checkok14
  %18 = load %"char[]", ptr %2, align 8, !dbg !3922
  %19 = extractvalue %"char[]" %18, 0, !dbg !3922
  %20 = extractvalue %"char[]" %18, 1, !dbg !3923
  %gt = icmp ugt i64 0, %20, !dbg !3923
  %21 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !3923
  br i1 %21, label %panic18, label %checkok25, !dbg !3923

checkok25:                                        ; preds = %if.exit
  %size = sub i64 %20, 0, !dbg !3922
  %22 = insertvalue %"char[]" undef, ptr %19, 0, !dbg !3922
  %23 = insertvalue %"char[]" %22, i64 %size, 1, !dbg !3922
  %24 = load ptr, ptr %self, align 8, !dbg !3924
  %checknull26 = icmp eq ptr %24, null, !dbg !3924
  %25 = call i1 @llvm.expect.i1(i1 %checknull26, i1 false), !dbg !3924
  br i1 %25, label %panic27, label %checkok31, !dbg !3924

checkok31:                                        ; preds = %checkok25
  %ptradd32 = getelementptr inbounds i8, ptr %24, i64 24, !dbg !3924
  %26 = load %"char[]", ptr %ptradd32, align 8, !dbg !3924
  %27 = extractvalue %"char[]" %26, 0, !dbg !3924
  %28 = load ptr, ptr %self, align 8, !dbg !3925
  %checknull33 = icmp eq ptr %28, null, !dbg !3925
  %29 = call i1 @llvm.expect.i1(i1 %checknull33, i1 false), !dbg !3925
  br i1 %29, label %panic34, label %checkok38, !dbg !3925

checkok38:                                        ; preds = %checkok31
  %ptradd39 = getelementptr inbounds i8, ptr %28, i64 48, !dbg !3925
  %30 = load i64, ptr %ptradd39, align 8, !dbg !3925
  %31 = extractvalue %"char[]" %26, 1, !dbg !3925
  %gt40 = icmp ugt i64 %30, %31, !dbg !3925
  %32 = call i1 @llvm.expect.i1(i1 %gt40, i1 false), !dbg !3925
  br i1 %32, label %panic41, label %checkok51, !dbg !3925

checkok51:                                        ; preds = %checkok38
  %ptradd52 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3926
  %33 = load i64, ptr %ptradd52, align 8, !dbg !3926
  %add = add i64 %30, %33, !dbg !3926
  %lt53 = icmp ult i64 %31, %add, !dbg !3926
  %sub54 = sub i64 %add, 1, !dbg !3926
  %34 = call i1 @llvm.expect.i1(i1 %lt53, i1 false), !dbg !3926
  br i1 %34, label %panic55, label %checkok65, !dbg !3926

checkok65:                                        ; preds = %checkok51
  %size66 = sub i64 %add, %30, !dbg !3924
  %ptradd67 = getelementptr inbounds i8, ptr %27, i64 %30, !dbg !3924
  %35 = insertvalue %"char[]" undef, ptr %ptradd67, 0, !dbg !3924
  %36 = insertvalue %"char[]" %35, i64 %size66, 1, !dbg !3924
  %37 = extractvalue %"char[]" %36, 0, !dbg !3924
  %38 = extractvalue %"char[]" %23, 0, !dbg !3924
  store %"char[]" %23, ptr %taddr68, align 8
  %ptradd69 = getelementptr inbounds i8, ptr %taddr68, i64 8
  %39 = load i64, ptr %ptradd69, align 8
  store %"char[]" %36, ptr %taddr70, align 8
  %ptradd71 = getelementptr inbounds i8, ptr %taddr70, i64 8
  %40 = load i64, ptr %ptradd71, align 8
  %neq = icmp ne i64 %40, %39
  %41 = call i1 @llvm.expect.i1(i1 %neq, i1 false)
  br i1 %41, label %panic72, label %checkok82

checkok82:                                        ; preds = %checkok65
  %42 = mul i64 %39, 1, !dbg !3924
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %37, ptr align 1 %38, i64 %42, i1 false), !dbg !3924
  %43 = load ptr, ptr %self, align 8, !dbg !3927
  %checknull83 = icmp eq ptr %43, null, !dbg !3927
  %44 = call i1 @llvm.expect.i1(i1 %checknull83, i1 false), !dbg !3927
  br i1 %44, label %panic84, label %checkok88, !dbg !3927

checkok88:                                        ; preds = %checkok82
  %ptradd89 = getelementptr inbounds i8, ptr %43, i64 48, !dbg !3927
  %45 = load i64, ptr %ptradd89, align 8, !dbg !3927
  %ptradd90 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3928
  %46 = load i64, ptr %ptradd90, align 8, !dbg !3928
  %add91 = add i64 %45, %46, !dbg !3927
  store i64 %add91, ptr %ptradd89, align 8, !dbg !3927
  %ptradd92 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3929
  %47 = load i64, ptr %ptradd92, align 8, !dbg !3929
  store i64 %47, ptr %0, align 8, !dbg !3929
  ret i64 0, !dbg !3929

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg2, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 48), !dbg !3911
  unreachable, !dbg !3911

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg6, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 50), !dbg !3916
  unreachable, !dbg !3916

panic10:                                          ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg13, align 8
  %50 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %50(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 50), !dbg !3917
  unreachable, !dbg !3917

panic18:                                          ; preds = %if.exit
  store i64 %20, ptr %taddr, align 8
  %51 = insertvalue %any undef, ptr %taddr, 0
  %52 = insertvalue %any %51, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr19, align 8
  %53 = insertvalue %any undef, ptr %taddr19, 0
  %54 = insertvalue %any %53, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg22, align 8
  store %any %52, ptr %varargslots, align 16
  %ptradd23 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %54, ptr %ptradd23, align 16
  %55 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %55, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg24, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 52, ptr align 8 %indirectarg24), !dbg !3922
  unreachable, !dbg !3922

panic27:                                          ; preds = %checkok25
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg30, align 8
  %56 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %56(ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, i32 52), !dbg !3924
  unreachable, !dbg !3924

panic34:                                          ; preds = %checkok31
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg37, align 8
  %57 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %57(ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, i32 52), !dbg !3925
  unreachable, !dbg !3925

panic41:                                          ; preds = %checkok38
  store i64 %31, ptr %taddr42, align 8
  %58 = insertvalue %any undef, ptr %taddr42, 0
  %59 = insertvalue %any %58, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %30, ptr %taddr43, align 8
  %60 = insertvalue %any undef, ptr %taddr43, 0
  %61 = insertvalue %any %60, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg46, align 8
  store %any %59, ptr %varargslots47, align 16
  %ptradd48 = getelementptr inbounds i8, ptr %varargslots47, i64 16
  store %any %61, ptr %ptradd48, align 16
  %62 = insertvalue %"any[]" undef, ptr %varargslots47, 0
  %"$$temp49" = insertvalue %"any[]" %62, i64 2, 1
  store %"any[]" %"$$temp49", ptr %indirectarg50, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, i32 52, ptr align 8 %indirectarg50), !dbg !3924
  unreachable, !dbg !3924

panic55:                                          ; preds = %checkok51
  store i64 %sub54, ptr %taddr56, align 8
  %63 = insertvalue %any undef, ptr %taddr56, 0
  %64 = insertvalue %any %63, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %31, ptr %taddr57, align 8
  %65 = insertvalue %any undef, ptr %taddr57, 0
  %66 = insertvalue %any %65, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg60, align 8
  store %any %64, ptr %varargslots61, align 16
  %ptradd62 = getelementptr inbounds i8, ptr %varargslots61, i64 16
  store %any %66, ptr %ptradd62, align 16
  %67 = insertvalue %"any[]" undef, ptr %varargslots61, 0
  %"$$temp63" = insertvalue %"any[]" %67, i64 2, 1
  store %"any[]" %"$$temp63", ptr %indirectarg64, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 52, ptr align 8 %indirectarg64), !dbg !3924
  unreachable, !dbg !3924

panic72:                                          ; preds = %checkok65
  store i64 %40, ptr %taddr73, align 8
  %68 = insertvalue %any undef, ptr %taddr73, 0
  %69 = insertvalue %any %68, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %39, ptr %taddr74, align 8
  %70 = insertvalue %any undef, ptr %taddr74, 0
  %71 = insertvalue %any %70, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.206, i64 38 }, ptr %indirectarg75, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg76, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg77, align 8
  store %any %69, ptr %varargslots78, align 16
  %ptradd79 = getelementptr inbounds i8, ptr %varargslots78, i64 16
  store %any %71, ptr %ptradd79, align 16
  %72 = insertvalue %"any[]" undef, ptr %varargslots78, 0
  %"$$temp80" = insertvalue %"any[]" %72, i64 2, 1
  store %"any[]" %"$$temp80", ptr %indirectarg81, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg75, ptr align 8 %indirectarg76, ptr align 8 %indirectarg77, i32 52, ptr align 8 %indirectarg81), !dbg !3924
  unreachable, !dbg !3924

panic84:                                          ; preds = %checkok82
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg86, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg87, align 8
  %73 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %73(ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, ptr align 8 %indirectarg87, i32 53), !dbg !3927
  unreachable, !dbg !3927
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.write_byte(ptr %0, i8 %1) #0 comdat !dbg !3930 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %c = alloca i8, align 1
  %cap = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr32 = alloca i64, align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg37 = alloca %"any[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !3933
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !3933
  br i1 %3, label %panic, label %checkok, !dbg !3933

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3934, metadata !DIExpression()), !dbg !3935
  store i8 %1, ptr %c, align 1
  call void @llvm.dbg.declare(metadata ptr %c, metadata !3936, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.declare(metadata ptr %cap, metadata !3938, metadata !DIExpression()), !dbg !3939
  %4 = load ptr, ptr %self, align 8, !dbg !3940
  %checknull = icmp eq ptr %4, null, !dbg !3940
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3940
  br i1 %5, label %panic3, label %checkok7, !dbg !3940

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 24, !dbg !3940
  %ptradd8 = getelementptr inbounds i8, ptr %ptradd, i64 8, !dbg !3940
  %6 = load i64, ptr %ptradd8, align 8, !dbg !3940
  %7 = load ptr, ptr %self, align 8, !dbg !3941
  %checknull9 = icmp eq ptr %7, null, !dbg !3941
  %8 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !3941
  br i1 %8, label %panic10, label %checkok14, !dbg !3941

checkok14:                                        ; preds = %checkok7
  %ptradd15 = getelementptr inbounds i8, ptr %7, i64 48, !dbg !3941
  %9 = load i64, ptr %ptradd15, align 8, !dbg !3941
  %sub = sub i64 %6, %9, !dbg !3940
  store i64 %sub, ptr %cap, align 8, !dbg !3940
  %10 = load i64, ptr %cap, align 8, !dbg !3942
  %eq = icmp eq i64 0, %10, !dbg !3942
  br i1 %eq, label %if.then, label %if.exit, !dbg !3942

if.then:                                          ; preds = %checkok14
  %11 = load ptr, ptr %self, align 8, !dbg !3943
  %12 = call i64 @std.io.ByteBuffer.grow(ptr %11, i64 1), !dbg !3944
  %not_err = icmp eq i64 %12, 0, !dbg !3944
  %13 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !3944
  br i1 %13, label %after_check, label %assign_optional, !dbg !3944

assign_optional:                                  ; preds = %if.then
  store i64 %12, ptr %error_var, align 8, !dbg !3944
  br label %guard_block, !dbg !3944

after_check:                                      ; preds = %if.then
  br label %noerr_block, !dbg !3944

guard_block:                                      ; preds = %assign_optional
  %14 = load i64, ptr %error_var, align 8, !dbg !3944
  ret i64 %14, !dbg !3944

noerr_block:                                      ; preds = %after_check
  br label %if.exit, !dbg !3944

if.exit:                                          ; preds = %noerr_block, %checkok14
  %15 = load ptr, ptr %self, align 8, !dbg !3945
  %checknull16 = icmp eq ptr %15, null, !dbg !3945
  %16 = call i1 @llvm.expect.i1(i1 %checknull16, i1 false), !dbg !3945
  br i1 %16, label %panic17, label %checkok21, !dbg !3945

checkok21:                                        ; preds = %if.exit
  %ptradd22 = getelementptr inbounds i8, ptr %15, i64 24, !dbg !3945
  %ptradd23 = getelementptr inbounds i8, ptr %ptradd22, i64 8, !dbg !3945
  %17 = load i64, ptr %ptradd23, align 8, !dbg !3945
  %18 = load ptr, ptr %ptradd22, align 8, !dbg !3945
  %19 = load ptr, ptr %self, align 8, !dbg !3946
  %checknull24 = icmp eq ptr %19, null, !dbg !3946
  %20 = call i1 @llvm.expect.i1(i1 %checknull24, i1 false), !dbg !3946
  br i1 %20, label %panic25, label %checkok29, !dbg !3946

checkok29:                                        ; preds = %checkok21
  %ptradd30 = getelementptr inbounds i8, ptr %19, i64 48, !dbg !3946
  %21 = load i64, ptr %ptradd30, align 8, !dbg !3946
  %ge = icmp uge i64 %21, %17, !dbg !3946
  %22 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !3946
  br i1 %22, label %panic31, label %checkok38, !dbg !3946

checkok38:                                        ; preds = %checkok29
  %ptradd39 = getelementptr inbounds i8, ptr %18, i64 %21, !dbg !3946
  %23 = load i8, ptr %c, align 1, !dbg !3947
  store i8 %23, ptr %ptradd39, align 1, !dbg !3947
  %24 = load ptr, ptr %self, align 8, !dbg !3948
  %checknull40 = icmp eq ptr %24, null, !dbg !3948
  %25 = call i1 @llvm.expect.i1(i1 %checknull40, i1 false), !dbg !3948
  br i1 %25, label %panic41, label %checkok45, !dbg !3948

checkok45:                                        ; preds = %checkok38
  %ptradd46 = getelementptr inbounds i8, ptr %24, i64 48, !dbg !3948
  %26 = load i64, ptr %ptradd46, align 8, !dbg !3948
  %add = add i64 %26, 1, !dbg !3948
  store i64 %add, ptr %ptradd46, align 8, !dbg !3948
  ret i64 0, !dbg !3948

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg2, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 57), !dbg !3935
  unreachable, !dbg !3935

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg6, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 59), !dbg !3940
  unreachable, !dbg !3940

panic10:                                          ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg13, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 59), !dbg !3941
  unreachable, !dbg !3941

panic17:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg20, align 8
  %30 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %30(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 61), !dbg !3945
  unreachable, !dbg !3945

panic25:                                          ; preds = %checkok21
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg28, align 8
  %31 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %31(ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, i32 61), !dbg !3946
  unreachable, !dbg !3946

panic31:                                          ; preds = %checkok29
  store i64 %17, ptr %taddr, align 8
  %32 = insertvalue %any undef, ptr %taddr, 0
  %33 = insertvalue %any %32, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %21, ptr %taddr32, align 8
  %34 = insertvalue %any undef, ptr %taddr32, 0
  %35 = insertvalue %any %34, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg35, align 8
  store %any %33, ptr %varargslots, align 16
  %ptradd36 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %35, ptr %ptradd36, align 16
  %36 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %36, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg37, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, i32 61, ptr align 8 %indirectarg37), !dbg !3946
  unreachable, !dbg !3946

panic41:                                          ; preds = %checkok38
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg44, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 62), !dbg !3948
  unreachable, !dbg !3948
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.read(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !3949 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %readable = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %n = alloca i64, align 8
  %x = alloca i64, align 8
  %.anon = alloca i64, align 8
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr38 = alloca i64, align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg43 = alloca %"any[]", align 8
  %taddr48 = alloca i64, align 8
  %taddr49 = alloca i64, align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %varargslots53 = alloca [2 x %any], align 16
  %indirectarg56 = alloca %"any[]", align 8
  %taddr61 = alloca i64, align 8
  %taddr62 = alloca i64, align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %indirectarg65 = alloca %"char[]", align 8
  %varargslots66 = alloca [2 x %any], align 16
  %indirectarg69 = alloca %"any[]", align 8
  %taddr75 = alloca i64, align 8
  %taddr76 = alloca i64, align 8
  %indirectarg77 = alloca %"char[]", align 8
  %indirectarg78 = alloca %"char[]", align 8
  %indirectarg79 = alloca %"char[]", align 8
  %varargslots80 = alloca [2 x %any], align 16
  %indirectarg83 = alloca %"any[]", align 8
  %taddr86 = alloca %"char[]", align 8
  %taddr88 = alloca %"char[]", align 8
  %taddr91 = alloca i64, align 8
  %taddr92 = alloca i64, align 8
  %indirectarg93 = alloca %"char[]", align 8
  %indirectarg94 = alloca %"char[]", align 8
  %indirectarg95 = alloca %"char[]", align 8
  %varargslots96 = alloca [2 x %any], align 16
  %indirectarg99 = alloca %"any[]", align 8
  %indirectarg103 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg105 = alloca %"char[]", align 8
  %indirectarg111 = alloca %"char[]", align 8
  %indirectarg112 = alloca %"char[]", align 8
  %indirectarg113 = alloca %"char[]", align 8
  %self117 = alloca ptr, align 8
  %indirectarg120 = alloca %"char[]", align 8
  %indirectarg121 = alloca %"char[]", align 8
  %indirectarg122 = alloca %"char[]", align 8
  %indirectarg127 = alloca %"char[]", align 8
  %indirectarg128 = alloca %"char[]", align 8
  %indirectarg129 = alloca %"char[]", align 8
  %readable133 = alloca i64, align 8
  %indirectarg136 = alloca %"char[]", align 8
  %indirectarg137 = alloca %"char[]", align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg143 = alloca %"char[]", align 8
  %indirectarg144 = alloca %"char[]", align 8
  %indirectarg145 = alloca %"char[]", align 8
  %indirectarg151 = alloca %"char[]", align 8
  %indirectarg152 = alloca %"char[]", align 8
  %indirectarg153 = alloca %"char[]", align 8
  %indirectarg158 = alloca %"char[]", align 8
  %indirectarg159 = alloca %"char[]", align 8
  %indirectarg160 = alloca %"char[]", align 8
  %taddr166 = alloca i64, align 8
  %taddr167 = alloca i64, align 8
  %indirectarg168 = alloca %"char[]", align 8
  %indirectarg169 = alloca %"char[]", align 8
  %indirectarg170 = alloca %"char[]", align 8
  %varargslots171 = alloca [2 x %any], align 16
  %indirectarg174 = alloca %"any[]", align 8
  %taddr177 = alloca i64, align 8
  %indirectarg178 = alloca %"char[]", align 8
  %indirectarg179 = alloca %"char[]", align 8
  %indirectarg180 = alloca %"char[]", align 8
  %varargslots181 = alloca [1 x %any], align 16
  %indirectarg183 = alloca %"any[]", align 8
  %taddr190 = alloca i64, align 8
  %taddr191 = alloca i64, align 8
  %indirectarg192 = alloca %"char[]", align 8
  %indirectarg193 = alloca %"char[]", align 8
  %indirectarg194 = alloca %"char[]", align 8
  %varargslots195 = alloca [2 x %any], align 16
  %indirectarg198 = alloca %"any[]", align 8
  %indirectarg204 = alloca %"char[]", align 8
  %indirectarg205 = alloca %"char[]", align 8
  %indirectarg206 = alloca %"char[]", align 8
  %taddr211 = alloca i64, align 8
  %taddr212 = alloca i64, align 8
  %indirectarg213 = alloca %"char[]", align 8
  %indirectarg214 = alloca %"char[]", align 8
  %indirectarg215 = alloca %"char[]", align 8
  %varargslots216 = alloca [2 x %any], align 16
  %indirectarg219 = alloca %"any[]", align 8
  %taddr226 = alloca i64, align 8
  %taddr227 = alloca i64, align 8
  %indirectarg228 = alloca %"char[]", align 8
  %indirectarg229 = alloca %"char[]", align 8
  %indirectarg230 = alloca %"char[]", align 8
  %varargslots231 = alloca [2 x %any], align 16
  %indirectarg234 = alloca %"any[]", align 8
  %taddr237 = alloca %"char[]", align 8
  %taddr239 = alloca %"char[]", align 8
  %taddr243 = alloca i64, align 8
  %taddr244 = alloca i64, align 8
  %indirectarg245 = alloca %"char[]", align 8
  %indirectarg246 = alloca %"char[]", align 8
  %indirectarg247 = alloca %"char[]", align 8
  %varargslots248 = alloca [2 x %any], align 16
  %indirectarg251 = alloca %"any[]", align 8
  %indirectarg255 = alloca %"char[]", align 8
  %indirectarg256 = alloca %"char[]", align 8
  %indirectarg257 = alloca %"char[]", align 8
  %indirectarg263 = alloca %"char[]", align 8
  %indirectarg264 = alloca %"char[]", align 8
  %indirectarg265 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !3950
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !3950
  br i1 %4, label %panic, label %checkok, !dbg !3950

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !3951, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3953, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.declare(metadata ptr %readable, metadata !3955, metadata !DIExpression()), !dbg !3956
  %5 = load ptr, ptr %self, align 8, !dbg !3957
  %checknull = icmp eq ptr %5, null, !dbg !3957
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !3957
  br i1 %6, label %panic3, label %checkok7, !dbg !3957

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 48, !dbg !3957
  %7 = load i64, ptr %ptradd, align 8, !dbg !3957
  %8 = load ptr, ptr %self, align 8, !dbg !3958
  %checknull8 = icmp eq ptr %8, null, !dbg !3958
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !3958
  br i1 %9, label %panic9, label %checkok13, !dbg !3958

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %8, i64 40, !dbg !3958
  %10 = load i64, ptr %ptradd14, align 8, !dbg !3958
  %sub = sub i64 %7, %10, !dbg !3957
  store i64 %sub, ptr %readable, align 8, !dbg !3957
  %11 = load i64, ptr %readable, align 8, !dbg !3959
  %eq = icmp eq i64 0, %11, !dbg !3959
  br i1 %eq, label %if.then, label %if.exit, !dbg !3959

if.then:                                          ; preds = %checkok13
  %12 = load ptr, ptr %self, align 8, !dbg !3960
  %checknull15 = icmp eq ptr %12, null, !dbg !3960
  %13 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !3960
  br i1 %13, label %panic16, label %checkok20, !dbg !3960

checkok20:                                        ; preds = %if.then
  %ptradd21 = getelementptr inbounds i8, ptr %12, i64 56, !dbg !3960
  store i8 0, ptr %ptradd21, align 8, !dbg !3962
  ret i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), !dbg !3963

if.exit:                                          ; preds = %checkok13
  call void @llvm.dbg.declare(metadata ptr %n, metadata !3964, metadata !DIExpression()), !dbg !3965
  %14 = load i64, ptr %readable, align 8
  store i64 %14, ptr %x, align 8
  %ptradd22 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !3966
  %15 = load i64, ptr %ptradd22, align 8
  store i64 %15, ptr %.anon, align 8
  %16 = load i64, ptr %x, align 8
  store i64 %16, ptr %a, align 8
  %17 = load i64, ptr %.anon, align 8
  store i64 %17, ptr %b, align 8
  %18 = load i64, ptr %a, align 8, !dbg !3967
  %19 = load i64, ptr %b, align 8, !dbg !3972
  %lt = icmp ult i64 %18, %19, !dbg !3967
  br i1 %lt, label %cond.lhs, label %cond.rhs, !dbg !3967

cond.lhs:                                         ; preds = %if.exit
  %20 = load i64, ptr %x, align 8, !dbg !3973
  br label %cond.phi, !dbg !3973

cond.rhs:                                         ; preds = %if.exit
  %21 = load i64, ptr %.anon, align 8, !dbg !3974
  br label %cond.phi, !dbg !3974

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i64 [ %20, %cond.lhs ], [ %21, %cond.rhs ], !dbg !3974
  store i64 %val, ptr %n, align 8, !dbg !3974
  %22 = load ptr, ptr %self, align 8, !dbg !3975
  %checknull23 = icmp eq ptr %22, null, !dbg !3975
  %23 = call i1 @llvm.expect.i1(i1 %checknull23, i1 false), !dbg !3975
  br i1 %23, label %panic24, label %checkok28, !dbg !3975

checkok28:                                        ; preds = %cond.phi
  %ptradd29 = getelementptr inbounds i8, ptr %22, i64 24, !dbg !3975
  %24 = load %"char[]", ptr %ptradd29, align 8, !dbg !3975
  %25 = extractvalue %"char[]" %24, 0, !dbg !3975
  %26 = load ptr, ptr %self, align 8, !dbg !3976
  %checknull30 = icmp eq ptr %26, null, !dbg !3976
  %27 = call i1 @llvm.expect.i1(i1 %checknull30, i1 false), !dbg !3976
  br i1 %27, label %panic31, label %checkok35, !dbg !3976

checkok35:                                        ; preds = %checkok28
  %ptradd36 = getelementptr inbounds i8, ptr %26, i64 40, !dbg !3976
  %28 = load i64, ptr %ptradd36, align 8, !dbg !3976
  %29 = extractvalue %"char[]" %24, 1, !dbg !3976
  %gt = icmp ugt i64 %28, %29, !dbg !3976
  %30 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !3976
  br i1 %30, label %panic37, label %checkok44, !dbg !3976

checkok44:                                        ; preds = %checkok35
  %31 = load i64, ptr %n, align 8, !dbg !3977
  %add = add i64 %28, %31, !dbg !3977
  %lt45 = icmp ult i64 %29, %add, !dbg !3977
  %sub46 = sub i64 %add, 1, !dbg !3977
  %32 = call i1 @llvm.expect.i1(i1 %lt45, i1 false), !dbg !3977
  br i1 %32, label %panic47, label %checkok57, !dbg !3977

checkok57:                                        ; preds = %checkok44
  %size = sub i64 %add, %28, !dbg !3975
  %ptradd58 = getelementptr inbounds i8, ptr %25, i64 %28, !dbg !3975
  %33 = insertvalue %"char[]" undef, ptr %ptradd58, 0, !dbg !3975
  %34 = insertvalue %"char[]" %33, i64 %size, 1, !dbg !3975
  %35 = load %"char[]", ptr %2, align 8, !dbg !3978
  %36 = extractvalue %"char[]" %35, 0, !dbg !3978
  %37 = extractvalue %"char[]" %35, 1, !dbg !3979
  %gt59 = icmp ugt i64 0, %37, !dbg !3979
  %38 = call i1 @llvm.expect.i1(i1 %gt59, i1 false), !dbg !3979
  br i1 %38, label %panic60, label %checkok70, !dbg !3979

checkok70:                                        ; preds = %checkok57
  %39 = load i64, ptr %n, align 8, !dbg !3980
  %add71 = add i64 0, %39, !dbg !3980
  %lt72 = icmp ult i64 %37, %add71, !dbg !3980
  %sub73 = sub i64 %add71, 1, !dbg !3980
  %40 = call i1 @llvm.expect.i1(i1 %lt72, i1 false), !dbg !3980
  br i1 %40, label %panic74, label %checkok84, !dbg !3980

checkok84:                                        ; preds = %checkok70
  %size85 = sub i64 %add71, 0, !dbg !3978
  %41 = insertvalue %"char[]" undef, ptr %36, 0, !dbg !3978
  %42 = insertvalue %"char[]" %41, i64 %size85, 1, !dbg !3978
  %43 = extractvalue %"char[]" %42, 0, !dbg !3978
  %44 = extractvalue %"char[]" %34, 0, !dbg !3978
  store %"char[]" %34, ptr %taddr86, align 8
  %ptradd87 = getelementptr inbounds i8, ptr %taddr86, i64 8
  %45 = load i64, ptr %ptradd87, align 8
  store %"char[]" %42, ptr %taddr88, align 8
  %ptradd89 = getelementptr inbounds i8, ptr %taddr88, i64 8
  %46 = load i64, ptr %ptradd89, align 8
  %neq = icmp ne i64 %46, %45
  %47 = call i1 @llvm.expect.i1(i1 %neq, i1 false)
  br i1 %47, label %panic90, label %checkok100

checkok100:                                       ; preds = %checkok84
  %48 = mul i64 %45, 1, !dbg !3978
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %43, ptr align 1 %44, i64 %48, i1 false), !dbg !3978
  %49 = load ptr, ptr %self, align 8, !dbg !3981
  %checknull101 = icmp eq ptr %49, null, !dbg !3981
  %50 = call i1 @llvm.expect.i1(i1 %checknull101, i1 false), !dbg !3981
  br i1 %50, label %panic102, label %checkok106, !dbg !3981

checkok106:                                       ; preds = %checkok100
  %ptradd107 = getelementptr inbounds i8, ptr %49, i64 40, !dbg !3981
  %51 = load i64, ptr %ptradd107, align 8, !dbg !3981
  %52 = load i64, ptr %n, align 8, !dbg !3982
  %add108 = add i64 %51, %52, !dbg !3981
  store i64 %add108, ptr %ptradd107, align 8, !dbg !3981
  %53 = load ptr, ptr %self, align 8, !dbg !3983
  %checknull109 = icmp eq ptr %53, null, !dbg !3983
  %54 = call i1 @llvm.expect.i1(i1 %checknull109, i1 false), !dbg !3983
  br i1 %54, label %panic110, label %checkok114, !dbg !3983

checkok114:                                       ; preds = %checkok106
  %ptradd115 = getelementptr inbounds i8, ptr %53, i64 56, !dbg !3983
  %55 = load i64, ptr %n, align 8, !dbg !3984
  %lt116 = icmp ult i64 0, %55, !dbg !3984
  %56 = zext i1 %lt116 to i8, !dbg !3984
  store i8 %56, ptr %ptradd115, align 8, !dbg !3984
  %57 = load ptr, ptr %self, align 8
  store ptr %57, ptr %self117, align 8
  %58 = load ptr, ptr %self117, align 8, !dbg !3985
  %checknull118 = icmp eq ptr %58, null, !dbg !3985
  %59 = call i1 @llvm.expect.i1(i1 %checknull118, i1 false), !dbg !3985
  br i1 %59, label %panic119, label %checkok123, !dbg !3985

checkok123:                                       ; preds = %checkok114
  %ptradd124 = getelementptr inbounds i8, ptr %58, i64 40, !dbg !3985
  %60 = load i64, ptr %ptradd124, align 8, !dbg !3985
  %61 = load ptr, ptr %self117, align 8, !dbg !3988
  %checknull125 = icmp eq ptr %61, null, !dbg !3988
  %62 = call i1 @llvm.expect.i1(i1 %checknull125, i1 false), !dbg !3988
  br i1 %62, label %panic126, label %checkok130, !dbg !3988

checkok130:                                       ; preds = %checkok123
  %ptradd131 = getelementptr inbounds i8, ptr %61, i64 16, !dbg !3988
  %63 = load i64, ptr %ptradd131, align 8, !dbg !3988
  %ge = icmp uge i64 %60, %63, !dbg !3985
  br i1 %ge, label %if.then132, label %if.exit268, !dbg !3985

if.then132:                                       ; preds = %checkok130
  call void @llvm.dbg.declare(metadata ptr %readable133, metadata !3989, metadata !DIExpression()), !dbg !3991
  %64 = load ptr, ptr %self117, align 8, !dbg !3992
  %checknull134 = icmp eq ptr %64, null, !dbg !3992
  %65 = call i1 @llvm.expect.i1(i1 %checknull134, i1 false), !dbg !3992
  br i1 %65, label %panic135, label %checkok139, !dbg !3992

checkok139:                                       ; preds = %if.then132
  %ptradd140 = getelementptr inbounds i8, ptr %64, i64 48, !dbg !3992
  %66 = load i64, ptr %ptradd140, align 8, !dbg !3992
  %67 = load ptr, ptr %self117, align 8, !dbg !3993
  %checknull141 = icmp eq ptr %67, null, !dbg !3993
  %68 = call i1 @llvm.expect.i1(i1 %checknull141, i1 false), !dbg !3993
  br i1 %68, label %panic142, label %checkok146, !dbg !3993

checkok146:                                       ; preds = %checkok139
  %ptradd147 = getelementptr inbounds i8, ptr %67, i64 40, !dbg !3993
  %69 = load i64, ptr %ptradd147, align 8, !dbg !3993
  %sub148 = sub i64 %66, %69, !dbg !3992
  store i64 %sub148, ptr %readable133, align 8, !dbg !3992
  %70 = load ptr, ptr %self117, align 8, !dbg !3994
  %checknull149 = icmp eq ptr %70, null, !dbg !3994
  %71 = call i1 @llvm.expect.i1(i1 %checknull149, i1 false), !dbg !3994
  br i1 %71, label %panic150, label %checkok154, !dbg !3994

checkok154:                                       ; preds = %checkok146
  %ptradd155 = getelementptr inbounds i8, ptr %70, i64 24, !dbg !3994
  %72 = load %"char[]", ptr %ptradd155, align 8, !dbg !3994
  %73 = extractvalue %"char[]" %72, 0, !dbg !3994
  %74 = load ptr, ptr %self117, align 8, !dbg !3995
  %checknull156 = icmp eq ptr %74, null, !dbg !3995
  %75 = call i1 @llvm.expect.i1(i1 %checknull156, i1 false), !dbg !3995
  br i1 %75, label %panic157, label %checkok161, !dbg !3995

checkok161:                                       ; preds = %checkok154
  %ptradd162 = getelementptr inbounds i8, ptr %74, i64 40, !dbg !3995
  %76 = load i64, ptr %ptradd162, align 8, !dbg !3995
  %sub163 = sub i64 %76, 1, !dbg !3995
  %77 = extractvalue %"char[]" %72, 1, !dbg !3995
  %gt164 = icmp sgt i64 %sub163, %77, !dbg !3995
  %78 = call i1 @llvm.expect.i1(i1 %gt164, i1 false), !dbg !3995
  br i1 %78, label %panic165, label %checkok175, !dbg !3995

checkok175:                                       ; preds = %checkok161
  %underflow = icmp slt i64 %sub163, 0, !dbg !3994
  %79 = call i1 @llvm.expect.i1(i1 %underflow, i1 false), !dbg !3994
  br i1 %79, label %panic176, label %checkok184, !dbg !3994

checkok184:                                       ; preds = %checkok175
  %80 = load i64, ptr %readable133, align 8, !dbg !3996
  %add185 = add i64 1, %80, !dbg !3997
  %add186 = add i64 %sub163, %add185, !dbg !3997
  %lt187 = icmp slt i64 %77, %add186, !dbg !3997
  %sub188 = sub i64 %add186, 1, !dbg !3997
  %81 = call i1 @llvm.expect.i1(i1 %lt187, i1 false), !dbg !3997
  br i1 %81, label %panic189, label %checkok199, !dbg !3997

checkok199:                                       ; preds = %checkok184
  %size200 = sub i64 %add186, %sub163, !dbg !3994
  %ptradd201 = getelementptr inbounds i8, ptr %73, i64 %sub163, !dbg !3994
  %82 = insertvalue %"char[]" undef, ptr %ptradd201, 0, !dbg !3994
  %83 = insertvalue %"char[]" %82, i64 %size200, 1, !dbg !3994
  %84 = load ptr, ptr %self117, align 8, !dbg !3998
  %checknull202 = icmp eq ptr %84, null, !dbg !3998
  %85 = call i1 @llvm.expect.i1(i1 %checknull202, i1 false), !dbg !3998
  br i1 %85, label %panic203, label %checkok207, !dbg !3998

checkok207:                                       ; preds = %checkok199
  %ptradd208 = getelementptr inbounds i8, ptr %84, i64 24, !dbg !3998
  %86 = load %"char[]", ptr %ptradd208, align 8, !dbg !3998
  %87 = extractvalue %"char[]" %86, 0, !dbg !3998
  %88 = extractvalue %"char[]" %86, 1, !dbg !3999
  %gt209 = icmp sgt i64 0, %88, !dbg !3999
  %89 = call i1 @llvm.expect.i1(i1 %gt209, i1 false), !dbg !3999
  br i1 %89, label %panic210, label %checkok220, !dbg !3999

checkok220:                                       ; preds = %checkok207
  %90 = load i64, ptr %readable133, align 8, !dbg !4000
  %add221 = add i64 1, %90, !dbg !4001
  %add222 = add i64 0, %add221, !dbg !4001
  %lt223 = icmp slt i64 %88, %add222, !dbg !4001
  %sub224 = sub i64 %add222, 1, !dbg !4001
  %91 = call i1 @llvm.expect.i1(i1 %lt223, i1 false), !dbg !4001
  br i1 %91, label %panic225, label %checkok235, !dbg !4001

checkok235:                                       ; preds = %checkok220
  %size236 = sub i64 %add222, 0, !dbg !3998
  %92 = insertvalue %"char[]" undef, ptr %87, 0, !dbg !3998
  %93 = insertvalue %"char[]" %92, i64 %size236, 1, !dbg !3998
  %94 = extractvalue %"char[]" %93, 0, !dbg !3998
  %95 = extractvalue %"char[]" %83, 0, !dbg !3998
  store %"char[]" %83, ptr %taddr237, align 8
  %ptradd238 = getelementptr inbounds i8, ptr %taddr237, i64 8
  %96 = load i64, ptr %ptradd238, align 8
  store %"char[]" %93, ptr %taddr239, align 8
  %ptradd240 = getelementptr inbounds i8, ptr %taddr239, i64 8
  %97 = load i64, ptr %ptradd240, align 8
  %neq241 = icmp ne i64 %97, %96
  %98 = call i1 @llvm.expect.i1(i1 %neq241, i1 false)
  br i1 %98, label %panic242, label %checkok252

checkok252:                                       ; preds = %checkok235
  %99 = mul i64 %96, 1, !dbg !3998
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %94, ptr align 1 %95, i64 %99, i1 false), !dbg !3998
  %100 = load ptr, ptr %self117, align 8, !dbg !4002
  %checknull253 = icmp eq ptr %100, null, !dbg !4002
  %101 = call i1 @llvm.expect.i1(i1 %checknull253, i1 false), !dbg !4002
  br i1 %101, label %panic254, label %checkok258, !dbg !4002

checkok258:                                       ; preds = %checkok252
  %ptradd259 = getelementptr inbounds i8, ptr %100, i64 48, !dbg !4002
  %102 = load i64, ptr %readable133, align 8, !dbg !4003
  %add260 = add i64 1, %102, !dbg !4004
  store i64 %add260, ptr %ptradd259, align 8, !dbg !4004
  %103 = load ptr, ptr %self117, align 8, !dbg !4005
  %checknull261 = icmp eq ptr %103, null, !dbg !4005
  %104 = call i1 @llvm.expect.i1(i1 %checknull261, i1 false), !dbg !4005
  br i1 %104, label %panic262, label %checkok266, !dbg !4005

checkok266:                                       ; preds = %checkok258
  %ptradd267 = getelementptr inbounds i8, ptr %103, i64 40, !dbg !4005
  store i64 1, ptr %ptradd267, align 8, !dbg !4006
  br label %if.exit268, !dbg !4006

if.exit268:                                       ; preds = %checkok266, %checkok130
  %105 = load i64, ptr %n, align 8, !dbg !4007
  store i64 %105, ptr %0, align 8, !dbg !4007
  ret i64 0, !dbg !4007

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg2, align 8
  %106 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %106(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 65), !dbg !3952
  unreachable, !dbg !3952

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg6, align 8
  %107 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %107(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 67), !dbg !3957
  unreachable, !dbg !3957

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg12, align 8
  %108 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %108(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 67), !dbg !3958
  unreachable, !dbg !3958

panic16:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg19, align 8
  %109 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %109(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 70), !dbg !3960
  unreachable, !dbg !3960

panic24:                                          ; preds = %cond.phi
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg27, align 8
  %110 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %110(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 74), !dbg !3975
  unreachable, !dbg !3975

panic31:                                          ; preds = %checkok28
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg34, align 8
  %111 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %111(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 74), !dbg !3976
  unreachable, !dbg !3976

panic37:                                          ; preds = %checkok35
  store i64 %29, ptr %taddr, align 8
  %112 = insertvalue %any undef, ptr %taddr, 0
  %113 = insertvalue %any %112, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %28, ptr %taddr38, align 8
  %114 = insertvalue %any undef, ptr %taddr38, 0
  %115 = insertvalue %any %114, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg41, align 8
  store %any %113, ptr %varargslots, align 16
  %ptradd42 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %115, ptr %ptradd42, align 16
  %116 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %116, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg43, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 74, ptr align 8 %indirectarg43), !dbg !3975
  unreachable, !dbg !3975

panic47:                                          ; preds = %checkok44
  store i64 %sub46, ptr %taddr48, align 8
  %117 = insertvalue %any undef, ptr %taddr48, 0
  %118 = insertvalue %any %117, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %29, ptr %taddr49, align 8
  %119 = insertvalue %any undef, ptr %taddr49, 0
  %120 = insertvalue %any %119, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg52, align 8
  store %any %118, ptr %varargslots53, align 16
  %ptradd54 = getelementptr inbounds i8, ptr %varargslots53, i64 16
  store %any %120, ptr %ptradd54, align 16
  %121 = insertvalue %"any[]" undef, ptr %varargslots53, 0
  %"$$temp55" = insertvalue %"any[]" %121, i64 2, 1
  store %"any[]" %"$$temp55", ptr %indirectarg56, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, i32 74, ptr align 8 %indirectarg56), !dbg !3975
  unreachable, !dbg !3975

panic60:                                          ; preds = %checkok57
  store i64 %37, ptr %taddr61, align 8
  %122 = insertvalue %any undef, ptr %taddr61, 0
  %123 = insertvalue %any %122, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr62, align 8
  %124 = insertvalue %any undef, ptr %taddr62, 0
  %125 = insertvalue %any %124, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg64, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg65, align 8
  store %any %123, ptr %varargslots66, align 16
  %ptradd67 = getelementptr inbounds i8, ptr %varargslots66, i64 16
  store %any %125, ptr %ptradd67, align 16
  %126 = insertvalue %"any[]" undef, ptr %varargslots66, 0
  %"$$temp68" = insertvalue %"any[]" %126, i64 2, 1
  store %"any[]" %"$$temp68", ptr %indirectarg69, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, ptr align 8 %indirectarg65, i32 74, ptr align 8 %indirectarg69), !dbg !3978
  unreachable, !dbg !3978

panic74:                                          ; preds = %checkok70
  store i64 %sub73, ptr %taddr75, align 8
  %127 = insertvalue %any undef, ptr %taddr75, 0
  %128 = insertvalue %any %127, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %37, ptr %taddr76, align 8
  %129 = insertvalue %any undef, ptr %taddr76, 0
  %130 = insertvalue %any %129, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg77, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg78, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg79, align 8
  store %any %128, ptr %varargslots80, align 16
  %ptradd81 = getelementptr inbounds i8, ptr %varargslots80, i64 16
  store %any %130, ptr %ptradd81, align 16
  %131 = insertvalue %"any[]" undef, ptr %varargslots80, 0
  %"$$temp82" = insertvalue %"any[]" %131, i64 2, 1
  store %"any[]" %"$$temp82", ptr %indirectarg83, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg77, ptr align 8 %indirectarg78, ptr align 8 %indirectarg79, i32 74, ptr align 8 %indirectarg83), !dbg !3978
  unreachable, !dbg !3978

panic90:                                          ; preds = %checkok84
  store i64 %46, ptr %taddr91, align 8
  %132 = insertvalue %any undef, ptr %taddr91, 0
  %133 = insertvalue %any %132, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %45, ptr %taddr92, align 8
  %134 = insertvalue %any undef, ptr %taddr92, 0
  %135 = insertvalue %any %134, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.206, i64 38 }, ptr %indirectarg93, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg94, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg95, align 8
  store %any %133, ptr %varargslots96, align 16
  %ptradd97 = getelementptr inbounds i8, ptr %varargslots96, i64 16
  store %any %135, ptr %ptradd97, align 16
  %136 = insertvalue %"any[]" undef, ptr %varargslots96, 0
  %"$$temp98" = insertvalue %"any[]" %136, i64 2, 1
  store %"any[]" %"$$temp98", ptr %indirectarg99, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg93, ptr align 8 %indirectarg94, ptr align 8 %indirectarg95, i32 74, ptr align 8 %indirectarg99), !dbg !3978
  unreachable, !dbg !3978

panic102:                                         ; preds = %checkok100
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg103, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg104, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg105, align 8
  %137 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %137(ptr align 8 %indirectarg103, ptr align 8 %indirectarg104, ptr align 8 %indirectarg105, i32 75), !dbg !3981
  unreachable, !dbg !3981

panic110:                                         ; preds = %checkok106
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg111, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg112, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg113, align 8
  %138 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %138(ptr align 8 %indirectarg111, ptr align 8 %indirectarg112, ptr align 8 %indirectarg113, i32 76), !dbg !3983
  unreachable, !dbg !3983

panic119:                                         ; preds = %checkok114
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg120, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg121, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg122, align 8
  %139 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %139(ptr align 8 %indirectarg120, ptr align 8 %indirectarg121, ptr align 8 %indirectarg122, i32 140), !dbg !3985
  unreachable, !dbg !3985

panic126:                                         ; preds = %checkok123
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg127, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg128, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg129, align 8
  %140 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %140(ptr align 8 %indirectarg127, ptr align 8 %indirectarg128, ptr align 8 %indirectarg129, i32 140), !dbg !3988
  unreachable, !dbg !3988

panic135:                                         ; preds = %if.then132
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg136, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg137, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg138, align 8
  %141 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %141(ptr align 8 %indirectarg136, ptr align 8 %indirectarg137, ptr align 8 %indirectarg138, i32 143), !dbg !3992
  unreachable, !dbg !3992

panic142:                                         ; preds = %checkok139
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg143, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg144, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg145, align 8
  %142 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %142(ptr align 8 %indirectarg143, ptr align 8 %indirectarg144, ptr align 8 %indirectarg145, i32 143), !dbg !3993
  unreachable, !dbg !3993

panic150:                                         ; preds = %checkok146
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg151, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg152, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg153, align 8
  %143 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %143(ptr align 8 %indirectarg151, ptr align 8 %indirectarg152, ptr align 8 %indirectarg153, i32 144), !dbg !3994
  unreachable, !dbg !3994

panic157:                                         ; preds = %checkok154
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg158, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg159, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg160, align 8
  %144 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %144(ptr align 8 %indirectarg158, ptr align 8 %indirectarg159, ptr align 8 %indirectarg160, i32 144), !dbg !3995
  unreachable, !dbg !3995

panic165:                                         ; preds = %checkok161
  store i64 %77, ptr %taddr166, align 8
  %145 = insertvalue %any undef, ptr %taddr166, 0
  %146 = insertvalue %any %145, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sub163, ptr %taddr167, align 8
  %147 = insertvalue %any undef, ptr %taddr167, 0
  %148 = insertvalue %any %147, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg168, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg169, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg170, align 8
  store %any %146, ptr %varargslots171, align 16
  %ptradd172 = getelementptr inbounds i8, ptr %varargslots171, i64 16
  store %any %148, ptr %ptradd172, align 16
  %149 = insertvalue %"any[]" undef, ptr %varargslots171, 0
  %"$$temp173" = insertvalue %"any[]" %149, i64 2, 1
  store %"any[]" %"$$temp173", ptr %indirectarg174, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg168, ptr align 8 %indirectarg169, ptr align 8 %indirectarg170, i32 144, ptr align 8 %indirectarg174), !dbg !3994
  unreachable, !dbg !3994

panic176:                                         ; preds = %checkok175
  store i64 %sub163, ptr %taddr177, align 8
  %150 = insertvalue %any undef, ptr %taddr177, 0
  %151 = insertvalue %any %150, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.222, i64 22 }, ptr %indirectarg178, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg179, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg180, align 8
  store %any %151, ptr %varargslots181, align 16
  %152 = insertvalue %"any[]" undef, ptr %varargslots181, 0
  %"$$temp182" = insertvalue %"any[]" %152, i64 1, 1
  store %"any[]" %"$$temp182", ptr %indirectarg183, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg178, ptr align 8 %indirectarg179, ptr align 8 %indirectarg180, i32 144, ptr align 8 %indirectarg183), !dbg !3995
  unreachable, !dbg !3995

panic189:                                         ; preds = %checkok184
  store i64 %sub188, ptr %taddr190, align 8
  %153 = insertvalue %any undef, ptr %taddr190, 0
  %154 = insertvalue %any %153, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %77, ptr %taddr191, align 8
  %155 = insertvalue %any undef, ptr %taddr191, 0
  %156 = insertvalue %any %155, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg192, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg193, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg194, align 8
  store %any %154, ptr %varargslots195, align 16
  %ptradd196 = getelementptr inbounds i8, ptr %varargslots195, i64 16
  store %any %156, ptr %ptradd196, align 16
  %157 = insertvalue %"any[]" undef, ptr %varargslots195, 0
  %"$$temp197" = insertvalue %"any[]" %157, i64 2, 1
  store %"any[]" %"$$temp197", ptr %indirectarg198, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg192, ptr align 8 %indirectarg193, ptr align 8 %indirectarg194, i32 144, ptr align 8 %indirectarg198), !dbg !3994
  unreachable, !dbg !3994

panic203:                                         ; preds = %checkok199
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg204, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg205, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg206, align 8
  %158 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %158(ptr align 8 %indirectarg204, ptr align 8 %indirectarg205, ptr align 8 %indirectarg206, i32 144), !dbg !3998
  unreachable, !dbg !3998

panic210:                                         ; preds = %checkok207
  store i64 %88, ptr %taddr211, align 8
  %159 = insertvalue %any undef, ptr %taddr211, 0
  %160 = insertvalue %any %159, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 0, ptr %taddr212, align 8
  %161 = insertvalue %any undef, ptr %taddr212, 0
  %162 = insertvalue %any %161, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg213, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg214, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg215, align 8
  store %any %160, ptr %varargslots216, align 16
  %ptradd217 = getelementptr inbounds i8, ptr %varargslots216, i64 16
  store %any %162, ptr %ptradd217, align 16
  %163 = insertvalue %"any[]" undef, ptr %varargslots216, 0
  %"$$temp218" = insertvalue %"any[]" %163, i64 2, 1
  store %"any[]" %"$$temp218", ptr %indirectarg219, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg213, ptr align 8 %indirectarg214, ptr align 8 %indirectarg215, i32 144, ptr align 8 %indirectarg219), !dbg !3998
  unreachable, !dbg !3998

panic225:                                         ; preds = %checkok220
  store i64 %sub224, ptr %taddr226, align 8
  %164 = insertvalue %any undef, ptr %taddr226, 0
  %165 = insertvalue %any %164, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %88, ptr %taddr227, align 8
  %166 = insertvalue %any undef, ptr %taddr227, 0
  %167 = insertvalue %any %166, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg228, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg229, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg230, align 8
  store %any %165, ptr %varargslots231, align 16
  %ptradd232 = getelementptr inbounds i8, ptr %varargslots231, i64 16
  store %any %167, ptr %ptradd232, align 16
  %168 = insertvalue %"any[]" undef, ptr %varargslots231, 0
  %"$$temp233" = insertvalue %"any[]" %168, i64 2, 1
  store %"any[]" %"$$temp233", ptr %indirectarg234, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg228, ptr align 8 %indirectarg229, ptr align 8 %indirectarg230, i32 144, ptr align 8 %indirectarg234), !dbg !3998
  unreachable, !dbg !3998

panic242:                                         ; preds = %checkok235
  store i64 %97, ptr %taddr243, align 8
  %169 = insertvalue %any undef, ptr %taddr243, 0
  %170 = insertvalue %any %169, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %96, ptr %taddr244, align 8
  %171 = insertvalue %any undef, ptr %taddr244, 0
  %172 = insertvalue %any %171, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.206, i64 38 }, ptr %indirectarg245, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg246, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg247, align 8
  store %any %170, ptr %varargslots248, align 16
  %ptradd249 = getelementptr inbounds i8, ptr %varargslots248, i64 16
  store %any %172, ptr %ptradd249, align 16
  %173 = insertvalue %"any[]" undef, ptr %varargslots248, 0
  %"$$temp250" = insertvalue %"any[]" %173, i64 2, 1
  store %"any[]" %"$$temp250", ptr %indirectarg251, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg245, ptr align 8 %indirectarg246, ptr align 8 %indirectarg247, i32 144, ptr align 8 %indirectarg251), !dbg !3998
  unreachable, !dbg !3998

panic254:                                         ; preds = %checkok252
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg255, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg256, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg257, align 8
  %174 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %174(ptr align 8 %indirectarg255, ptr align 8 %indirectarg256, ptr align 8 %indirectarg257, i32 145), !dbg !4002
  unreachable, !dbg !4002

panic262:                                         ; preds = %checkok258
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg263, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg264, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg265, align 8
  %175 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %175(ptr align 8 %indirectarg263, ptr align 8 %indirectarg264, ptr align 8 %indirectarg265, i32 146), !dbg !4005
  unreachable, !dbg !4005
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.read_byte(ptr %0, ptr %1) #0 comdat !dbg !4008 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %readable = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %c = alloca i8, align 1
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr38 = alloca i64, align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg43 = alloca %"any[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %self60 = alloca ptr, align 8
  %indirectarg63 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %readable77 = alloca i64, align 8
  %indirectarg80 = alloca %"char[]", align 8
  %indirectarg81 = alloca %"char[]", align 8
  %indirectarg82 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %indirectarg88 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %indirectarg102 = alloca %"char[]", align 8
  %indirectarg103 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %taddr109 = alloca i64, align 8
  %taddr110 = alloca i64, align 8
  %indirectarg111 = alloca %"char[]", align 8
  %indirectarg112 = alloca %"char[]", align 8
  %indirectarg113 = alloca %"char[]", align 8
  %varargslots114 = alloca [2 x %any], align 16
  %indirectarg117 = alloca %"any[]", align 8
  %taddr120 = alloca i64, align 8
  %indirectarg121 = alloca %"char[]", align 8
  %indirectarg122 = alloca %"char[]", align 8
  %indirectarg123 = alloca %"char[]", align 8
  %varargslots124 = alloca [1 x %any], align 16
  %indirectarg126 = alloca %"any[]", align 8
  %taddr132 = alloca i64, align 8
  %taddr133 = alloca i64, align 8
  %indirectarg134 = alloca %"char[]", align 8
  %indirectarg135 = alloca %"char[]", align 8
  %indirectarg136 = alloca %"char[]", align 8
  %varargslots137 = alloca [2 x %any], align 16
  %indirectarg140 = alloca %"any[]", align 8
  %indirectarg145 = alloca %"char[]", align 8
  %indirectarg146 = alloca %"char[]", align 8
  %indirectarg147 = alloca %"char[]", align 8
  %taddr152 = alloca i64, align 8
  %taddr153 = alloca i64, align 8
  %indirectarg154 = alloca %"char[]", align 8
  %indirectarg155 = alloca %"char[]", align 8
  %indirectarg156 = alloca %"char[]", align 8
  %varargslots157 = alloca [2 x %any], align 16
  %indirectarg160 = alloca %"any[]", align 8
  %taddr167 = alloca i64, align 8
  %taddr168 = alloca i64, align 8
  %indirectarg169 = alloca %"char[]", align 8
  %indirectarg170 = alloca %"char[]", align 8
  %indirectarg171 = alloca %"char[]", align 8
  %varargslots172 = alloca [2 x %any], align 16
  %indirectarg175 = alloca %"any[]", align 8
  %taddr178 = alloca %"char[]", align 8
  %taddr180 = alloca %"char[]", align 8
  %taddr183 = alloca i64, align 8
  %taddr184 = alloca i64, align 8
  %indirectarg185 = alloca %"char[]", align 8
  %indirectarg186 = alloca %"char[]", align 8
  %indirectarg187 = alloca %"char[]", align 8
  %varargslots188 = alloca [2 x %any], align 16
  %indirectarg191 = alloca %"any[]", align 8
  %indirectarg195 = alloca %"char[]", align 8
  %indirectarg196 = alloca %"char[]", align 8
  %indirectarg197 = alloca %"char[]", align 8
  %indirectarg203 = alloca %"char[]", align 8
  %indirectarg204 = alloca %"char[]", align 8
  %indirectarg205 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %2 = icmp eq ptr %1, null, !dbg !4011
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4011
  br i1 %3, label %panic, label %checkok, !dbg !4011

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4012, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.declare(metadata ptr %readable, metadata !4014, metadata !DIExpression()), !dbg !4015
  %4 = load ptr, ptr %self, align 8, !dbg !4016
  %checknull = icmp eq ptr %4, null, !dbg !4016
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4016
  br i1 %5, label %panic3, label %checkok7, !dbg !4016

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 48, !dbg !4016
  %6 = load i64, ptr %ptradd, align 8, !dbg !4016
  %7 = load ptr, ptr %self, align 8, !dbg !4017
  %checknull8 = icmp eq ptr %7, null, !dbg !4017
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4017
  br i1 %8, label %panic9, label %checkok13, !dbg !4017

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 40, !dbg !4017
  %9 = load i64, ptr %ptradd14, align 8, !dbg !4017
  %sub = sub i64 %6, %9, !dbg !4016
  store i64 %sub, ptr %readable, align 8, !dbg !4016
  %10 = load i64, ptr %readable, align 8, !dbg !4018
  %eq = icmp eq i64 0, %10, !dbg !4018
  br i1 %eq, label %if.then, label %if.exit, !dbg !4018

if.then:                                          ; preds = %checkok13
  %11 = load ptr, ptr %self, align 8, !dbg !4019
  %checknull15 = icmp eq ptr %11, null, !dbg !4019
  %12 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !4019
  br i1 %12, label %panic16, label %checkok20, !dbg !4019

checkok20:                                        ; preds = %if.then
  %ptradd21 = getelementptr inbounds i8, ptr %11, i64 56, !dbg !4019
  store i8 0, ptr %ptradd21, align 8, !dbg !4021
  ret i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), !dbg !4022

if.exit:                                          ; preds = %checkok13
  call void @llvm.dbg.declare(metadata ptr %c, metadata !4023, metadata !DIExpression()), !dbg !4024
  %13 = load ptr, ptr %self, align 8, !dbg !4025
  %checknull22 = icmp eq ptr %13, null, !dbg !4025
  %14 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !4025
  br i1 %14, label %panic23, label %checkok27, !dbg !4025

checkok27:                                        ; preds = %if.exit
  %ptradd28 = getelementptr inbounds i8, ptr %13, i64 24, !dbg !4025
  %ptradd29 = getelementptr inbounds i8, ptr %ptradd28, i64 8, !dbg !4025
  %15 = load i64, ptr %ptradd29, align 8, !dbg !4025
  %16 = load ptr, ptr %ptradd28, align 8, !dbg !4025
  %17 = load ptr, ptr %self, align 8, !dbg !4026
  %checknull30 = icmp eq ptr %17, null, !dbg !4026
  %18 = call i1 @llvm.expect.i1(i1 %checknull30, i1 false), !dbg !4026
  br i1 %18, label %panic31, label %checkok35, !dbg !4026

checkok35:                                        ; preds = %checkok27
  %ptradd36 = getelementptr inbounds i8, ptr %17, i64 40, !dbg !4026
  %19 = load i64, ptr %ptradd36, align 8, !dbg !4026
  %ge = icmp uge i64 %19, %15, !dbg !4026
  %20 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !4026
  br i1 %20, label %panic37, label %checkok44, !dbg !4026

checkok44:                                        ; preds = %checkok35
  %ptradd45 = getelementptr inbounds i8, ptr %16, i64 %19, !dbg !4026
  %21 = load i8, ptr %ptradd45, align 1, !dbg !4026
  store i8 %21, ptr %c, align 1, !dbg !4026
  %22 = load ptr, ptr %self, align 8, !dbg !4027
  %checknull46 = icmp eq ptr %22, null, !dbg !4027
  %23 = call i1 @llvm.expect.i1(i1 %checknull46, i1 false), !dbg !4027
  br i1 %23, label %panic47, label %checkok51, !dbg !4027

checkok51:                                        ; preds = %checkok44
  %ptradd52 = getelementptr inbounds i8, ptr %22, i64 40, !dbg !4027
  %24 = load i64, ptr %ptradd52, align 8, !dbg !4027
  %add = add i64 %24, 1, !dbg !4027
  store i64 %add, ptr %ptradd52, align 8, !dbg !4027
  %25 = load ptr, ptr %self, align 8, !dbg !4028
  %checknull53 = icmp eq ptr %25, null, !dbg !4028
  %26 = call i1 @llvm.expect.i1(i1 %checknull53, i1 false), !dbg !4028
  br i1 %26, label %panic54, label %checkok58, !dbg !4028

checkok58:                                        ; preds = %checkok51
  %ptradd59 = getelementptr inbounds i8, ptr %25, i64 56, !dbg !4028
  store i8 1, ptr %ptradd59, align 8, !dbg !4029
  %27 = load ptr, ptr %self, align 8
  store ptr %27, ptr %self60, align 8
  %28 = load ptr, ptr %self60, align 8, !dbg !4030
  %checknull61 = icmp eq ptr %28, null, !dbg !4030
  %29 = call i1 @llvm.expect.i1(i1 %checknull61, i1 false), !dbg !4030
  br i1 %29, label %panic62, label %checkok66, !dbg !4030

checkok66:                                        ; preds = %checkok58
  %ptradd67 = getelementptr inbounds i8, ptr %28, i64 40, !dbg !4030
  %30 = load i64, ptr %ptradd67, align 8, !dbg !4030
  %31 = load ptr, ptr %self60, align 8, !dbg !4033
  %checknull68 = icmp eq ptr %31, null, !dbg !4033
  %32 = call i1 @llvm.expect.i1(i1 %checknull68, i1 false), !dbg !4033
  br i1 %32, label %panic69, label %checkok73, !dbg !4033

checkok73:                                        ; preds = %checkok66
  %ptradd74 = getelementptr inbounds i8, ptr %31, i64 16, !dbg !4033
  %33 = load i64, ptr %ptradd74, align 8, !dbg !4033
  %ge75 = icmp uge i64 %30, %33, !dbg !4030
  br i1 %ge75, label %if.then76, label %if.exit208, !dbg !4030

if.then76:                                        ; preds = %checkok73
  call void @llvm.dbg.declare(metadata ptr %readable77, metadata !4034, metadata !DIExpression()), !dbg !4036
  %34 = load ptr, ptr %self60, align 8, !dbg !4037
  %checknull78 = icmp eq ptr %34, null, !dbg !4037
  %35 = call i1 @llvm.expect.i1(i1 %checknull78, i1 false), !dbg !4037
  br i1 %35, label %panic79, label %checkok83, !dbg !4037

checkok83:                                        ; preds = %if.then76
  %ptradd84 = getelementptr inbounds i8, ptr %34, i64 48, !dbg !4037
  %36 = load i64, ptr %ptradd84, align 8, !dbg !4037
  %37 = load ptr, ptr %self60, align 8, !dbg !4038
  %checknull85 = icmp eq ptr %37, null, !dbg !4038
  %38 = call i1 @llvm.expect.i1(i1 %checknull85, i1 false), !dbg !4038
  br i1 %38, label %panic86, label %checkok90, !dbg !4038

checkok90:                                        ; preds = %checkok83
  %ptradd91 = getelementptr inbounds i8, ptr %37, i64 40, !dbg !4038
  %39 = load i64, ptr %ptradd91, align 8, !dbg !4038
  %sub92 = sub i64 %36, %39, !dbg !4037
  store i64 %sub92, ptr %readable77, align 8, !dbg !4037
  %40 = load ptr, ptr %self60, align 8, !dbg !4039
  %checknull93 = icmp eq ptr %40, null, !dbg !4039
  %41 = call i1 @llvm.expect.i1(i1 %checknull93, i1 false), !dbg !4039
  br i1 %41, label %panic94, label %checkok98, !dbg !4039

checkok98:                                        ; preds = %checkok90
  %ptradd99 = getelementptr inbounds i8, ptr %40, i64 24, !dbg !4039
  %42 = load %"char[]", ptr %ptradd99, align 8, !dbg !4039
  %43 = extractvalue %"char[]" %42, 0, !dbg !4039
  %44 = load ptr, ptr %self60, align 8, !dbg !4040
  %checknull100 = icmp eq ptr %44, null, !dbg !4040
  %45 = call i1 @llvm.expect.i1(i1 %checknull100, i1 false), !dbg !4040
  br i1 %45, label %panic101, label %checkok105, !dbg !4040

checkok105:                                       ; preds = %checkok98
  %ptradd106 = getelementptr inbounds i8, ptr %44, i64 40, !dbg !4040
  %46 = load i64, ptr %ptradd106, align 8, !dbg !4040
  %sub107 = sub i64 %46, 1, !dbg !4040
  %47 = extractvalue %"char[]" %42, 1, !dbg !4040
  %gt = icmp sgt i64 %sub107, %47, !dbg !4040
  %48 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !4040
  br i1 %48, label %panic108, label %checkok118, !dbg !4040

checkok118:                                       ; preds = %checkok105
  %underflow = icmp slt i64 %sub107, 0, !dbg !4039
  %49 = call i1 @llvm.expect.i1(i1 %underflow, i1 false), !dbg !4039
  br i1 %49, label %panic119, label %checkok127, !dbg !4039

checkok127:                                       ; preds = %checkok118
  %50 = load i64, ptr %readable77, align 8, !dbg !4041
  %add128 = add i64 1, %50, !dbg !4042
  %add129 = add i64 %sub107, %add128, !dbg !4042
  %lt = icmp slt i64 %47, %add129, !dbg !4042
  %sub130 = sub i64 %add129, 1, !dbg !4042
  %51 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !4042
  br i1 %51, label %panic131, label %checkok141, !dbg !4042

checkok141:                                       ; preds = %checkok127
  %size = sub i64 %add129, %sub107, !dbg !4039
  %ptradd142 = getelementptr inbounds i8, ptr %43, i64 %sub107, !dbg !4039
  %52 = insertvalue %"char[]" undef, ptr %ptradd142, 0, !dbg !4039
  %53 = insertvalue %"char[]" %52, i64 %size, 1, !dbg !4039
  %54 = load ptr, ptr %self60, align 8, !dbg !4043
  %checknull143 = icmp eq ptr %54, null, !dbg !4043
  %55 = call i1 @llvm.expect.i1(i1 %checknull143, i1 false), !dbg !4043
  br i1 %55, label %panic144, label %checkok148, !dbg !4043

checkok148:                                       ; preds = %checkok141
  %ptradd149 = getelementptr inbounds i8, ptr %54, i64 24, !dbg !4043
  %56 = load %"char[]", ptr %ptradd149, align 8, !dbg !4043
  %57 = extractvalue %"char[]" %56, 0, !dbg !4043
  %58 = extractvalue %"char[]" %56, 1, !dbg !4044
  %gt150 = icmp sgt i64 0, %58, !dbg !4044
  %59 = call i1 @llvm.expect.i1(i1 %gt150, i1 false), !dbg !4044
  br i1 %59, label %panic151, label %checkok161, !dbg !4044

checkok161:                                       ; preds = %checkok148
  %60 = load i64, ptr %readable77, align 8, !dbg !4045
  %add162 = add i64 1, %60, !dbg !4046
  %add163 = add i64 0, %add162, !dbg !4046
  %lt164 = icmp slt i64 %58, %add163, !dbg !4046
  %sub165 = sub i64 %add163, 1, !dbg !4046
  %61 = call i1 @llvm.expect.i1(i1 %lt164, i1 false), !dbg !4046
  br i1 %61, label %panic166, label %checkok176, !dbg !4046

checkok176:                                       ; preds = %checkok161
  %size177 = sub i64 %add163, 0, !dbg !4043
  %62 = insertvalue %"char[]" undef, ptr %57, 0, !dbg !4043
  %63 = insertvalue %"char[]" %62, i64 %size177, 1, !dbg !4043
  %64 = extractvalue %"char[]" %63, 0, !dbg !4043
  %65 = extractvalue %"char[]" %53, 0, !dbg !4043
  store %"char[]" %53, ptr %taddr178, align 8
  %ptradd179 = getelementptr inbounds i8, ptr %taddr178, i64 8
  %66 = load i64, ptr %ptradd179, align 8
  store %"char[]" %63, ptr %taddr180, align 8
  %ptradd181 = getelementptr inbounds i8, ptr %taddr180, i64 8
  %67 = load i64, ptr %ptradd181, align 8
  %neq = icmp ne i64 %67, %66
  %68 = call i1 @llvm.expect.i1(i1 %neq, i1 false)
  br i1 %68, label %panic182, label %checkok192

checkok192:                                       ; preds = %checkok176
  %69 = mul i64 %66, 1, !dbg !4043
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %64, ptr align 1 %65, i64 %69, i1 false), !dbg !4043
  %70 = load ptr, ptr %self60, align 8, !dbg !4047
  %checknull193 = icmp eq ptr %70, null, !dbg !4047
  %71 = call i1 @llvm.expect.i1(i1 %checknull193, i1 false), !dbg !4047
  br i1 %71, label %panic194, label %checkok198, !dbg !4047

checkok198:                                       ; preds = %checkok192
  %ptradd199 = getelementptr inbounds i8, ptr %70, i64 48, !dbg !4047
  %72 = load i64, ptr %readable77, align 8, !dbg !4048
  %add200 = add i64 1, %72, !dbg !4049
  store i64 %add200, ptr %ptradd199, align 8, !dbg !4049
  %73 = load ptr, ptr %self60, align 8, !dbg !4050
  %checknull201 = icmp eq ptr %73, null, !dbg !4050
  %74 = call i1 @llvm.expect.i1(i1 %checknull201, i1 false), !dbg !4050
  br i1 %74, label %panic202, label %checkok206, !dbg !4050

checkok206:                                       ; preds = %checkok198
  %ptradd207 = getelementptr inbounds i8, ptr %73, i64 40, !dbg !4050
  store i64 1, ptr %ptradd207, align 8, !dbg !4051
  br label %if.exit208, !dbg !4051

if.exit208:                                       ; preds = %checkok206, %checkok73
  %75 = load i8, ptr %c, align 1, !dbg !4052
  store i8 %75, ptr %0, align 1, !dbg !4052
  ret i64 0, !dbg !4052

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg2, align 8
  %76 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %76(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 81), !dbg !4013
  unreachable, !dbg !4013

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg6, align 8
  %77 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %77(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 83), !dbg !4016
  unreachable, !dbg !4016

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg12, align 8
  %78 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %78(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 83), !dbg !4017
  unreachable, !dbg !4017

panic16:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg19, align 8
  %79 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %79(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 86), !dbg !4019
  unreachable, !dbg !4019

panic23:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg26, align 8
  %80 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %80(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 89), !dbg !4025
  unreachable, !dbg !4025

panic31:                                          ; preds = %checkok27
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg34, align 8
  %81 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %81(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 89), !dbg !4026
  unreachable, !dbg !4026

panic37:                                          ; preds = %checkok35
  store i64 %15, ptr %taddr, align 8
  %82 = insertvalue %any undef, ptr %taddr, 0
  %83 = insertvalue %any %82, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %19, ptr %taddr38, align 8
  %84 = insertvalue %any undef, ptr %taddr38, 0
  %85 = insertvalue %any %84, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg41, align 8
  store %any %83, ptr %varargslots, align 16
  %ptradd42 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %85, ptr %ptradd42, align 16
  %86 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %86, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg43, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 89, ptr align 8 %indirectarg43), !dbg !4026
  unreachable, !dbg !4026

panic47:                                          ; preds = %checkok44
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg50, align 8
  %87 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %87(ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, i32 90), !dbg !4027
  unreachable, !dbg !4027

panic54:                                          ; preds = %checkok51
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg55, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg57, align 8
  %88 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %88(ptr align 8 %indirectarg55, ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, i32 91), !dbg !4028
  unreachable, !dbg !4028

panic62:                                          ; preds = %checkok58
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg63, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg64, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg65, align 8
  %89 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %89(ptr align 8 %indirectarg63, ptr align 8 %indirectarg64, ptr align 8 %indirectarg65, i32 140), !dbg !4030
  unreachable, !dbg !4030

panic69:                                          ; preds = %checkok66
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg72, align 8
  %90 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %90(ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, i32 140), !dbg !4033
  unreachable, !dbg !4033

panic79:                                          ; preds = %if.then76
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg80, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg81, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg82, align 8
  %91 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %91(ptr align 8 %indirectarg80, ptr align 8 %indirectarg81, ptr align 8 %indirectarg82, i32 143), !dbg !4037
  unreachable, !dbg !4037

panic86:                                          ; preds = %checkok83
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg87, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg88, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg89, align 8
  %92 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %92(ptr align 8 %indirectarg87, ptr align 8 %indirectarg88, ptr align 8 %indirectarg89, i32 143), !dbg !4038
  unreachable, !dbg !4038

panic94:                                          ; preds = %checkok90
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg97, align 8
  %93 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %93(ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, i32 144), !dbg !4039
  unreachable, !dbg !4039

panic101:                                         ; preds = %checkok98
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg102, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg103, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg104, align 8
  %94 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %94(ptr align 8 %indirectarg102, ptr align 8 %indirectarg103, ptr align 8 %indirectarg104, i32 144), !dbg !4040
  unreachable, !dbg !4040

panic108:                                         ; preds = %checkok105
  store i64 %47, ptr %taddr109, align 8
  %95 = insertvalue %any undef, ptr %taddr109, 0
  %96 = insertvalue %any %95, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sub107, ptr %taddr110, align 8
  %97 = insertvalue %any undef, ptr %taddr110, 0
  %98 = insertvalue %any %97, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg111, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg112, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg113, align 8
  store %any %96, ptr %varargslots114, align 16
  %ptradd115 = getelementptr inbounds i8, ptr %varargslots114, i64 16
  store %any %98, ptr %ptradd115, align 16
  %99 = insertvalue %"any[]" undef, ptr %varargslots114, 0
  %"$$temp116" = insertvalue %"any[]" %99, i64 2, 1
  store %"any[]" %"$$temp116", ptr %indirectarg117, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg111, ptr align 8 %indirectarg112, ptr align 8 %indirectarg113, i32 144, ptr align 8 %indirectarg117), !dbg !4039
  unreachable, !dbg !4039

panic119:                                         ; preds = %checkok118
  store i64 %sub107, ptr %taddr120, align 8
  %100 = insertvalue %any undef, ptr %taddr120, 0
  %101 = insertvalue %any %100, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.222, i64 22 }, ptr %indirectarg121, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg122, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg123, align 8
  store %any %101, ptr %varargslots124, align 16
  %102 = insertvalue %"any[]" undef, ptr %varargslots124, 0
  %"$$temp125" = insertvalue %"any[]" %102, i64 1, 1
  store %"any[]" %"$$temp125", ptr %indirectarg126, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg121, ptr align 8 %indirectarg122, ptr align 8 %indirectarg123, i32 144, ptr align 8 %indirectarg126), !dbg !4040
  unreachable, !dbg !4040

panic131:                                         ; preds = %checkok127
  store i64 %sub130, ptr %taddr132, align 8
  %103 = insertvalue %any undef, ptr %taddr132, 0
  %104 = insertvalue %any %103, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %47, ptr %taddr133, align 8
  %105 = insertvalue %any undef, ptr %taddr133, 0
  %106 = insertvalue %any %105, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg134, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg135, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg136, align 8
  store %any %104, ptr %varargslots137, align 16
  %ptradd138 = getelementptr inbounds i8, ptr %varargslots137, i64 16
  store %any %106, ptr %ptradd138, align 16
  %107 = insertvalue %"any[]" undef, ptr %varargslots137, 0
  %"$$temp139" = insertvalue %"any[]" %107, i64 2, 1
  store %"any[]" %"$$temp139", ptr %indirectarg140, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg134, ptr align 8 %indirectarg135, ptr align 8 %indirectarg136, i32 144, ptr align 8 %indirectarg140), !dbg !4039
  unreachable, !dbg !4039

panic144:                                         ; preds = %checkok141
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg145, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg146, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg147, align 8
  %108 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %108(ptr align 8 %indirectarg145, ptr align 8 %indirectarg146, ptr align 8 %indirectarg147, i32 144), !dbg !4043
  unreachable, !dbg !4043

panic151:                                         ; preds = %checkok148
  store i64 %58, ptr %taddr152, align 8
  %109 = insertvalue %any undef, ptr %taddr152, 0
  %110 = insertvalue %any %109, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 0, ptr %taddr153, align 8
  %111 = insertvalue %any undef, ptr %taddr153, 0
  %112 = insertvalue %any %111, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg154, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg155, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg156, align 8
  store %any %110, ptr %varargslots157, align 16
  %ptradd158 = getelementptr inbounds i8, ptr %varargslots157, i64 16
  store %any %112, ptr %ptradd158, align 16
  %113 = insertvalue %"any[]" undef, ptr %varargslots157, 0
  %"$$temp159" = insertvalue %"any[]" %113, i64 2, 1
  store %"any[]" %"$$temp159", ptr %indirectarg160, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg154, ptr align 8 %indirectarg155, ptr align 8 %indirectarg156, i32 144, ptr align 8 %indirectarg160), !dbg !4043
  unreachable, !dbg !4043

panic166:                                         ; preds = %checkok161
  store i64 %sub165, ptr %taddr167, align 8
  %114 = insertvalue %any undef, ptr %taddr167, 0
  %115 = insertvalue %any %114, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %58, ptr %taddr168, align 8
  %116 = insertvalue %any undef, ptr %taddr168, 0
  %117 = insertvalue %any %116, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg169, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg170, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg171, align 8
  store %any %115, ptr %varargslots172, align 16
  %ptradd173 = getelementptr inbounds i8, ptr %varargslots172, i64 16
  store %any %117, ptr %ptradd173, align 16
  %118 = insertvalue %"any[]" undef, ptr %varargslots172, 0
  %"$$temp174" = insertvalue %"any[]" %118, i64 2, 1
  store %"any[]" %"$$temp174", ptr %indirectarg175, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg169, ptr align 8 %indirectarg170, ptr align 8 %indirectarg171, i32 144, ptr align 8 %indirectarg175), !dbg !4043
  unreachable, !dbg !4043

panic182:                                         ; preds = %checkok176
  store i64 %67, ptr %taddr183, align 8
  %119 = insertvalue %any undef, ptr %taddr183, 0
  %120 = insertvalue %any %119, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %66, ptr %taddr184, align 8
  %121 = insertvalue %any undef, ptr %taddr184, 0
  %122 = insertvalue %any %121, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.206, i64 38 }, ptr %indirectarg185, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg186, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg187, align 8
  store %any %120, ptr %varargslots188, align 16
  %ptradd189 = getelementptr inbounds i8, ptr %varargslots188, i64 16
  store %any %122, ptr %ptradd189, align 16
  %123 = insertvalue %"any[]" undef, ptr %varargslots188, 0
  %"$$temp190" = insertvalue %"any[]" %123, i64 2, 1
  store %"any[]" %"$$temp190", ptr %indirectarg191, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg185, ptr align 8 %indirectarg186, ptr align 8 %indirectarg187, i32 144, ptr align 8 %indirectarg191), !dbg !4043
  unreachable, !dbg !4043

panic194:                                         ; preds = %checkok192
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg195, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg196, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg197, align 8
  %124 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %124(ptr align 8 %indirectarg195, ptr align 8 %indirectarg196, ptr align 8 %indirectarg197, i32 145), !dbg !4047
  unreachable, !dbg !4047

panic202:                                         ; preds = %checkok198
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg203, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg204, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg205, align 8
  %125 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %125(ptr align 8 %indirectarg203, ptr align 8 %indirectarg204, ptr align 8 %indirectarg205, i32 146), !dbg !4050
  unreachable, !dbg !4050
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.pushback_byte(ptr %0) #0 comdat !dbg !4053 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !4056
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !4056
  br i1 %2, label %panic, label %checkok, !dbg !4056

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4057, metadata !DIExpression()), !dbg !4058
  %3 = load ptr, ptr %self, align 8, !dbg !4059
  %checknull = icmp eq ptr %3, null, !dbg !4059
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4059
  br i1 %4, label %panic3, label %checkok7, !dbg !4059

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 56, !dbg !4059
  %5 = load i8, ptr %ptradd, align 8, !dbg !4059
  %6 = trunc i8 %5 to i1, !dbg !4059
  %not = xor i1 %6, true, !dbg !4059
  br i1 %not, label %if.then, label %if.exit, !dbg !4059

if.then:                                          ; preds = %checkok7
  ret i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), !dbg !4060

if.exit:                                          ; preds = %checkok7
  %7 = load ptr, ptr %self, align 8, !dbg !4061
  %checknull8 = icmp eq ptr %7, null, !dbg !4061
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4061
  br i1 %8, label %panic9, label %checkok13, !dbg !4061

checkok13:                                        ; preds = %if.exit
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 40, !dbg !4061
  %9 = load i64, ptr %ptradd14, align 8, !dbg !4061
  %lt = icmp ult i64 0, %9, !dbg !4061
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !4061

assert_fail:                                      ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.224, i64 16 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.func.223, i64 13 }, ptr %indirectarg17, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, i32 102), !dbg !4061
  unreachable, !dbg !4061

assert_ok:                                        ; preds = %checkok13
  %11 = load ptr, ptr %self, align 8, !dbg !4062
  %checknull18 = icmp eq ptr %11, null, !dbg !4062
  %12 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !4062
  br i1 %12, label %panic19, label %checkok23, !dbg !4062

checkok23:                                        ; preds = %assert_ok
  %ptradd24 = getelementptr inbounds i8, ptr %11, i64 40, !dbg !4062
  %13 = load i64, ptr %ptradd24, align 8, !dbg !4062
  %sub = sub i64 %13, 1, !dbg !4062
  store i64 %sub, ptr %ptradd24, align 8, !dbg !4062
  %14 = load ptr, ptr %self, align 8, !dbg !4063
  %checknull25 = icmp eq ptr %14, null, !dbg !4063
  %15 = call i1 @llvm.expect.i1(i1 %checknull25, i1 false), !dbg !4063
  br i1 %15, label %panic26, label %checkok30, !dbg !4063

checkok30:                                        ; preds = %checkok23
  %ptradd31 = getelementptr inbounds i8, ptr %14, i64 56, !dbg !4063
  store i8 0, ptr %ptradd31, align 8, !dbg !4064
  ret i64 0, !dbg !4064

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.223, i64 13 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 99), !dbg !4058
  unreachable, !dbg !4058

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.223, i64 13 }, ptr %indirectarg6, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 101), !dbg !4059
  unreachable, !dbg !4059

panic9:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.223, i64 13 }, ptr %indirectarg12, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 102), !dbg !4061
  unreachable, !dbg !4061

panic19:                                          ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.223, i64 13 }, ptr %indirectarg22, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 103), !dbg !4062
  unreachable, !dbg !4062

panic26:                                          ; preds = %checkok23
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.223, i64 13 }, ptr %indirectarg29, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 104), !dbg !4063
  unreachable, !dbg !4063
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.seek(ptr %0, ptr %1, i64 %2, i32 %3) #0 comdat !dbg !4065 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %offset = alloca i64, align 8
  %seek = alloca i32, align 4
  %switch = alloca i32, align 4
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg56 = alloca %"char[]", align 8
  %indirectarg57 = alloca %"char[]", align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg67 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg81 = alloca %"char[]", align 8
  %indirectarg82 = alloca %"char[]", align 8
  %indirectarg83 = alloca %"char[]", align 8
  %indirectarg88 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %reterr93 = alloca i64, align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %indirectarg98 = alloca %"char[]", align 8
  %4 = icmp eq ptr %1, null, !dbg !4068
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !4068
  br i1 %5, label %panic, label %checkok, !dbg !4068

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4069, metadata !DIExpression()), !dbg !4070
  store i64 %2, ptr %offset, align 8
  call void @llvm.dbg.declare(metadata ptr %offset, metadata !4071, metadata !DIExpression()), !dbg !4072
  store i32 %3, ptr %seek, align 4
  call void @llvm.dbg.declare(metadata ptr %seek, metadata !4073, metadata !DIExpression()), !dbg !4074
  %6 = load i32, ptr %seek, align 4
  store i32 %6, ptr %switch, align 4
  br label %switch.entry

switch.entry:                                     ; preds = %checkok
  %7 = load i32, ptr %switch, align 4
  switch i32 %7, label %switch.exit [
    i32 0, label %switch.case
    i32 1, label %switch.case15
    i32 2, label %switch.case62
  ]

switch.case:                                      ; preds = %switch.entry
  %8 = load i64, ptr %offset, align 8, !dbg !4075
  %lt = icmp slt i64 %8, 0, !dbg !4075
  br i1 %lt, label %or.phi, label %or.rhs, !dbg !4075

or.rhs:                                           ; preds = %switch.case
  %9 = load i64, ptr %offset, align 8, !dbg !4078
  %10 = load ptr, ptr %self, align 8, !dbg !4079
  %checknull = icmp eq ptr %10, null, !dbg !4079
  %11 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4079
  br i1 %11, label %panic3, label %checkok7, !dbg !4079

checkok7:                                         ; preds = %or.rhs
  %ptradd = getelementptr inbounds i8, ptr %10, i64 48, !dbg !4079
  %12 = load i64, ptr %ptradd, align 8, !dbg !4079
  %gt = icmp sgt i64 %9, %12, !dbg !4078
  %check = icmp sge i64 %12, 0, !dbg !4078
  %siui-gt = and i1 %check, %gt, !dbg !4078
  br label %or.phi, !dbg !4078

or.phi:                                           ; preds = %checkok7, %switch.case
  %val = phi i1 [ true, %switch.case ], [ %siui-gt, %checkok7 ], !dbg !4078
  br i1 %val, label %if.then, label %if.exit, !dbg !4078

if.then:                                          ; preds = %or.phi
  ret i64 ptrtoint (ptr @"std.io.IoError$INVALID_POSITION" to i64), !dbg !4080

if.exit:                                          ; preds = %or.phi
  %13 = load ptr, ptr %self, align 8, !dbg !4081
  %checknull8 = icmp eq ptr %13, null, !dbg !4081
  %14 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4081
  br i1 %14, label %panic9, label %checkok13, !dbg !4081

checkok13:                                        ; preds = %if.exit
  %ptradd14 = getelementptr inbounds i8, ptr %13, i64 40, !dbg !4081
  %15 = load i64, ptr %offset, align 8, !dbg !4082
  store i64 %15, ptr %ptradd14, align 8, !dbg !4082
  %16 = load i64, ptr %offset, align 8, !dbg !4083
  store i64 %16, ptr %0, align 8, !dbg !4083
  ret i64 0, !dbg !4083

switch.case15:                                    ; preds = %switch.entry
  %17 = load i64, ptr %offset, align 8, !dbg !4084
  %lt16 = icmp slt i64 %17, 0, !dbg !4084
  br i1 %lt16, label %and.rhs, label %and.phi, !dbg !4084

and.rhs:                                          ; preds = %switch.case15
  %18 = load ptr, ptr %self, align 8, !dbg !4086
  %checknull17 = icmp eq ptr %18, null, !dbg !4086
  %19 = call i1 @llvm.expect.i1(i1 %checknull17, i1 false), !dbg !4086
  br i1 %19, label %panic18, label %checkok22, !dbg !4086

checkok22:                                        ; preds = %and.rhs
  %ptradd23 = getelementptr inbounds i8, ptr %18, i64 40, !dbg !4086
  %20 = load i64, ptr %ptradd23, align 8, !dbg !4086
  %21 = load i64, ptr %offset, align 8, !dbg !4087
  %neg = sub i64 0, %21, !dbg !4087
  %gt24 = icmp sgt i64 %neg, %20, !dbg !4086
  %check25 = icmp sge i64 %20, 0, !dbg !4086
  %siui-gt26 = and i1 %check25, %gt24, !dbg !4086
  br label %and.phi, !dbg !4086

and.phi:                                          ; preds = %checkok22, %switch.case15
  %val27 = phi i1 [ false, %switch.case15 ], [ %siui-gt26, %checkok22 ], !dbg !4086
  br i1 %val27, label %or.phi50, label %or.rhs28, !dbg !4086

or.rhs28:                                         ; preds = %and.phi
  %22 = load i64, ptr %offset, align 8, !dbg !4088
  %gt29 = icmp sgt i64 %22, 0, !dbg !4088
  br i1 %gt29, label %and.rhs30, label %and.phi48, !dbg !4088

and.rhs30:                                        ; preds = %or.rhs28
  %23 = load ptr, ptr %self, align 8, !dbg !4089
  %checknull31 = icmp eq ptr %23, null, !dbg !4089
  %24 = call i1 @llvm.expect.i1(i1 %checknull31, i1 false), !dbg !4089
  br i1 %24, label %panic32, label %checkok36, !dbg !4089

checkok36:                                        ; preds = %and.rhs30
  %ptradd37 = getelementptr inbounds i8, ptr %23, i64 40, !dbg !4089
  %25 = load i64, ptr %ptradd37, align 8, !dbg !4089
  %26 = load i64, ptr %offset, align 8, !dbg !4090
  %add = add i64 %25, %26, !dbg !4089
  %27 = load ptr, ptr %self, align 8, !dbg !4091
  %checknull38 = icmp eq ptr %27, null, !dbg !4091
  %28 = call i1 @llvm.expect.i1(i1 %checknull38, i1 false), !dbg !4091
  br i1 %28, label %panic39, label %checkok43, !dbg !4091

checkok43:                                        ; preds = %checkok36
  %ptradd44 = getelementptr inbounds i8, ptr %27, i64 48, !dbg !4091
  %29 = load i64, ptr %ptradd44, align 8, !dbg !4091
  %gt45 = icmp sgt i64 %add, %29, !dbg !4089
  %check46 = icmp sge i64 %29, 0, !dbg !4089
  %siui-gt47 = and i1 %check46, %gt45, !dbg !4089
  br label %and.phi48, !dbg !4089

and.phi48:                                        ; preds = %checkok43, %or.rhs28
  %val49 = phi i1 [ false, %or.rhs28 ], [ %siui-gt47, %checkok43 ], !dbg !4089
  br label %or.phi50, !dbg !4089

or.phi50:                                         ; preds = %and.phi48, %and.phi
  %val51 = phi i1 [ true, %and.phi ], [ %val49, %and.phi48 ], !dbg !4089
  br i1 %val51, label %if.then52, label %if.exit53, !dbg !4089

if.then52:                                        ; preds = %or.phi50
  ret i64 ptrtoint (ptr @"std.io.IoError$INVALID_POSITION" to i64), !dbg !4092

if.exit53:                                        ; preds = %or.phi50
  %30 = load ptr, ptr %self, align 8, !dbg !4093
  %checknull54 = icmp eq ptr %30, null, !dbg !4093
  %31 = call i1 @llvm.expect.i1(i1 %checknull54, i1 false), !dbg !4093
  br i1 %31, label %panic55, label %checkok59, !dbg !4093

checkok59:                                        ; preds = %if.exit53
  %ptradd60 = getelementptr inbounds i8, ptr %30, i64 40, !dbg !4093
  %32 = load i64, ptr %ptradd60, align 8, !dbg !4093
  %33 = load i64, ptr %offset, align 8, !dbg !4094
  %add61 = add i64 %32, %33, !dbg !4093
  store i64 %add61, ptr %ptradd60, align 8, !dbg !4093
  br label %switch.exit, !dbg !4093

switch.case62:                                    ; preds = %switch.entry
  %34 = load i64, ptr %offset, align 8, !dbg !4095
  %lt63 = icmp slt i64 %34, 0, !dbg !4095
  br i1 %lt63, label %or.phi75, label %or.rhs64, !dbg !4095

or.rhs64:                                         ; preds = %switch.case62
  %35 = load i64, ptr %offset, align 8, !dbg !4097
  %36 = load ptr, ptr %self, align 8, !dbg !4098
  %checknull65 = icmp eq ptr %36, null, !dbg !4098
  %37 = call i1 @llvm.expect.i1(i1 %checknull65, i1 false), !dbg !4098
  br i1 %37, label %panic66, label %checkok70, !dbg !4098

checkok70:                                        ; preds = %or.rhs64
  %ptradd71 = getelementptr inbounds i8, ptr %36, i64 48, !dbg !4098
  %38 = load i64, ptr %ptradd71, align 8, !dbg !4098
  %gt72 = icmp sgt i64 %35, %38, !dbg !4097
  %check73 = icmp sge i64 %38, 0, !dbg !4097
  %siui-gt74 = and i1 %check73, %gt72, !dbg !4097
  br label %or.phi75, !dbg !4097

or.phi75:                                         ; preds = %checkok70, %switch.case62
  %val76 = phi i1 [ true, %switch.case62 ], [ %siui-gt74, %checkok70 ], !dbg !4097
  br i1 %val76, label %if.then77, label %if.exit78, !dbg !4097

if.then77:                                        ; preds = %or.phi75
  ret i64 ptrtoint (ptr @"std.io.IoError$INVALID_POSITION" to i64), !dbg !4099

if.exit78:                                        ; preds = %or.phi75
  %39 = load ptr, ptr %self, align 8, !dbg !4100
  %checknull79 = icmp eq ptr %39, null, !dbg !4100
  %40 = call i1 @llvm.expect.i1(i1 %checknull79, i1 false), !dbg !4100
  br i1 %40, label %panic80, label %checkok84, !dbg !4100

checkok84:                                        ; preds = %if.exit78
  %ptradd85 = getelementptr inbounds i8, ptr %39, i64 40, !dbg !4100
  %41 = load ptr, ptr %self, align 8, !dbg !4101
  %checknull86 = icmp eq ptr %41, null, !dbg !4101
  %42 = call i1 @llvm.expect.i1(i1 %checknull86, i1 false), !dbg !4101
  br i1 %42, label %panic87, label %checkok91, !dbg !4101

checkok91:                                        ; preds = %checkok84
  %ptradd92 = getelementptr inbounds i8, ptr %41, i64 48, !dbg !4101
  %43 = load i64, ptr %ptradd92, align 8, !dbg !4101
  %44 = load i64, ptr %offset, align 8, !dbg !4102
  %sub = sub i64 %43, %44, !dbg !4101
  store i64 %sub, ptr %ptradd85, align 8, !dbg !4101
  br label %switch.exit, !dbg !4101

switch.exit:                                      ; preds = %checkok91, %checkok59, %switch.entry
  %45 = load ptr, ptr %self, align 8, !dbg !4103
  %checknull94 = icmp eq ptr %45, null, !dbg !4103
  %46 = call i1 @llvm.expect.i1(i1 %checknull94, i1 false), !dbg !4103
  br i1 %46, label %panic95, label %checkok99, !dbg !4103

checkok99:                                        ; preds = %switch.exit
  %ptradd100 = getelementptr inbounds i8, ptr %45, i64 40, !dbg !4103
  %47 = load i64, ptr %ptradd100, align 8, !dbg !4103
  store i64 %47, ptr %0, align 8, !dbg !4103
  ret i64 0, !dbg !4103

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg2, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 107), !dbg !4070
  unreachable, !dbg !4070

panic3:                                           ; preds = %or.rhs
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg6, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 112), !dbg !4079
  unreachable, !dbg !4079

panic9:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg12, align 8
  %50 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %50(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 113), !dbg !4081
  unreachable, !dbg !4081

panic18:                                          ; preds = %and.rhs
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg21, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 116), !dbg !4086
  unreachable, !dbg !4086

panic32:                                          ; preds = %and.rhs30
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg35, align 8
  %52 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %52(ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, i32 117), !dbg !4089
  unreachable, !dbg !4089

panic39:                                          ; preds = %checkok36
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg42, align 8
  %53 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %53(ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, i32 117), !dbg !4091
  unreachable, !dbg !4091

panic55:                                          ; preds = %if.exit53
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg56, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg57, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg58, align 8
  %54 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %54(ptr align 8 %indirectarg56, ptr align 8 %indirectarg57, ptr align 8 %indirectarg58, i32 118), !dbg !4093
  unreachable, !dbg !4093

panic66:                                          ; preds = %or.rhs64
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg67, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg69, align 8
  %55 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %55(ptr align 8 %indirectarg67, ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, i32 120), !dbg !4098
  unreachable, !dbg !4098

panic80:                                          ; preds = %if.exit78
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg81, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg82, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg83, align 8
  %56 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %56(ptr align 8 %indirectarg81, ptr align 8 %indirectarg82, ptr align 8 %indirectarg83, i32 121), !dbg !4100
  unreachable, !dbg !4100

panic87:                                          ; preds = %checkok84
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg88, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg90, align 8
  %57 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %57(ptr align 8 %indirectarg88, ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, i32 121), !dbg !4101
  unreachable, !dbg !4101

panic95:                                          ; preds = %switch.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg97, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg98, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, ptr align 8 %indirectarg98, i32 123), !dbg !4103
  unreachable, !dbg !4103
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.available(ptr %0, ptr %1) #0 comdat !dbg !4104 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %2 = icmp eq ptr %1, null, !dbg !4107
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4107
  br i1 %3, label %panic, label %checkok, !dbg !4107

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4108, metadata !DIExpression()), !dbg !4109
  %4 = load ptr, ptr %self, align 8, !dbg !4110
  %checknull = icmp eq ptr %4, null, !dbg !4110
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4110
  br i1 %5, label %panic3, label %checkok7, !dbg !4110

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 48, !dbg !4110
  %6 = load i64, ptr %ptradd, align 8, !dbg !4110
  %7 = load ptr, ptr %self, align 8, !dbg !4111
  %checknull8 = icmp eq ptr %7, null, !dbg !4111
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4111
  br i1 %8, label %panic9, label %checkok13, !dbg !4111

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 40, !dbg !4111
  %9 = load i64, ptr %ptradd14, align 8, !dbg !4111
  %sub = sub i64 %6, %9, !dbg !4110
  store i64 %sub, ptr %0, align 8, !dbg !4110
  ret i64 0, !dbg !4110

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg2, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 126), !dbg !4109
  unreachable, !dbg !4109

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg6, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 128), !dbg !4110
  unreachable, !dbg !4110

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg12, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 128), !dbg !4111
  unreachable, !dbg !4111
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteBuffer.grow(ptr %0, i64 %1) #0 comdat !dbg !4112 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %n = alloca i64, align 8
  %x = alloca i64, align 8
  %y = alloca i64, align 8
  %p = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %allocator = alloca %any, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %ptr = alloca ptr, align 8
  %new_size = alloca i64, align 8
  %alignment = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %allocator14 = alloca %any, align 8
  %ptr15 = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %allocator26 = alloca %any, align 8
  %size = alloca i64, align 8
  %alignment27 = alloca i64, align 8
  %blockret28 = alloca ptr, align 8
  %.inlinecache33 = alloca ptr, align 8
  %.cachedtype34 = alloca ptr, align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %.inlinecache49 = alloca ptr, align 8
  %.cachedtype50 = alloca ptr, align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %retparam62 = alloca ptr, align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype50, align 8, !dbg !4115
  store ptr null, ptr %.cachedtype34, align 8, !dbg !4115
  store ptr null, ptr %.cachedtype, align 8, !dbg !4115
  %2 = icmp eq ptr %0, null, !dbg !4115
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4115
  br i1 %3, label %panic, label %checkok, !dbg !4115

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4116, metadata !DIExpression()), !dbg !4117
  store i64 %1, ptr %n, align 8
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4118, metadata !DIExpression()), !dbg !4119
  %4 = load i64, ptr %n, align 8
  store i64 %4, ptr %x, align 8
  call void @llvm.dbg.declare(metadata ptr %y, metadata !4120, metadata !DIExpression()), !dbg !4122
  store i64 1, ptr %y, align 8, !dbg !4124
  br label %loop.cond, !dbg !4125

loop.cond:                                        ; preds = %loop.body, %checkok
  %5 = load i64, ptr %y, align 8, !dbg !4126
  %6 = load i64, ptr %x, align 8, !dbg !4128
  %lt = icmp ult i64 %5, %6, !dbg !4126
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !4126

loop.body:                                        ; preds = %loop.cond
  %7 = load i64, ptr %y, align 8, !dbg !4129
  %8 = load i64, ptr %y, align 8, !dbg !4130
  %add = add i64 %7, %8, !dbg !4129
  store i64 %add, ptr %y, align 8, !dbg !4129
  br label %loop.cond, !dbg !4129

loop.exit:                                        ; preds = %loop.cond
  %9 = load i64, ptr %y, align 8, !dbg !4131
  store i64 %9, ptr %n, align 8, !dbg !4131
  call void @llvm.dbg.declare(metadata ptr %p, metadata !4132, metadata !DIExpression()), !dbg !4133
  %10 = load ptr, ptr %self, align 8, !dbg !4134
  %checknull = icmp eq ptr %10, null, !dbg !4134
  %11 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4134
  br i1 %11, label %panic3, label %checkok7, !dbg !4134

checkok7:                                         ; preds = %loop.exit
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %10, i32 16, i1 false)
  %12 = load ptr, ptr %self, align 8, !dbg !4135
  %checknull8 = icmp eq ptr %12, null, !dbg !4135
  %13 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4135
  br i1 %13, label %panic9, label %checkok13, !dbg !4135

checkok13:                                        ; preds = %checkok7
  %ptradd = getelementptr inbounds i8, ptr %12, i64 24, !dbg !4135
  %14 = load ptr, ptr %ptradd, align 8
  store ptr %14, ptr %ptr, align 8
  %15 = load i64, ptr %n, align 8
  store i64 %15, ptr %new_size, align 8
  store i64 1, ptr %alignment, align 8
  %16 = load i64, ptr %new_size, align 8, !dbg !4136
  %not = icmp eq i64 %16, 0, !dbg !4136
  br i1 %not, label %if.then, label %if.exit23, !dbg !4136

if.then:                                          ; preds = %checkok13
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator14, ptr align 8 %allocator, i32 16, i1 false)
  %17 = load ptr, ptr %ptr, align 8
  store ptr %17, ptr %ptr15, align 8
  %18 = load ptr, ptr %ptr15, align 8, !dbg !4139
  %not16 = icmp eq ptr %18, null, !dbg !4139
  br i1 %not16, label %if.then17, label %if.exit, !dbg !4139

if.then17:                                        ; preds = %if.then
  br label %expr_block.exit, !dbg !4143

if.exit:                                          ; preds = %if.then
  %ptradd18 = getelementptr inbounds i8, ptr %allocator14, i64 8, !dbg !4144
  %19 = load i64, ptr %ptradd18, align 8, !dbg !4144
  %20 = inttoptr i64 %19 to ptr, !dbg !4144
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4115
  %21 = icmp eq ptr %20, %type, !dbg !4115
  br i1 %21, label %cache_hit, label %cache_miss, !dbg !4115

cache_miss:                                       ; preds = %if.exit
  %ptradd19 = getelementptr inbounds i8, ptr %20, i64 16, !dbg !4115
  %22 = load ptr, ptr %ptradd19, align 8, !dbg !4115
  %23 = call ptr @.dyn_search(ptr %22, ptr @"$sel.release"), !dbg !4115
  store ptr %23, ptr %.inlinecache, align 8, !dbg !4115
  store ptr %20, ptr %.cachedtype, align 8, !dbg !4115
  br label %24, !dbg !4115

cache_hit:                                        ; preds = %if.exit
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4115
  br label %24, !dbg !4115

24:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %23, %cache_miss ], !dbg !4115
  %25 = icmp eq ptr %fn_phi, null, !dbg !4115
  br i1 %25, label %missing_function, label %match, !dbg !4115

missing_function:                                 ; preds = %24
  store %"char[]" { ptr @.panic_msg.220, i64 44 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.221, i64 16 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.227, i64 4 }, ptr %indirectarg22, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 146), !dbg !4145
  unreachable, !dbg !4145

match:                                            ; preds = %24
  %27 = load ptr, ptr %allocator14, align 8, !dbg !4145
  %28 = load ptr, ptr %ptr15, align 8, !dbg !4145
  call void %fn_phi(ptr %27, ptr %28, i8 zeroext 1), !dbg !4145
  br label %expr_block.exit, !dbg !4145

expr_block.exit:                                  ; preds = %match, %if.then17
  store ptr null, ptr %blockret, align 8, !dbg !4146
  br label %expr_block.exit66, !dbg !4146

if.exit23:                                        ; preds = %checkok13
  %29 = load ptr, ptr %ptr, align 8, !dbg !4147
  %not24 = icmp eq ptr %29, null, !dbg !4147
  br i1 %not24, label %if.then25, label %if.exit47, !dbg !4147

if.then25:                                        ; preds = %if.exit23
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator26, ptr align 8 %allocator, i32 16, i1 false)
  %30 = load i64, ptr %new_size, align 8
  store i64 %30, ptr %size, align 8
  %31 = load i64, ptr %alignment, align 8
  store i64 %31, ptr %alignment27, align 8
  %32 = load i64, ptr %size, align 8, !dbg !4148
  %not29 = icmp eq i64 %32, 0, !dbg !4148
  br i1 %not29, label %if.then30, label %if.exit31, !dbg !4148

if.then30:                                        ; preds = %if.then25
  store ptr null, ptr %blockret28, align 8, !dbg !4152
  br label %expr_block.exit46, !dbg !4152

if.exit31:                                        ; preds = %if.then25
  %ptradd32 = getelementptr inbounds i8, ptr %allocator26, i64 8, !dbg !4153
  %33 = load i64, ptr %ptradd32, align 8, !dbg !4153
  %34 = inttoptr i64 %33 to ptr, !dbg !4153
  %type35 = load ptr, ptr %.cachedtype34, align 8, !dbg !4115
  %35 = icmp eq ptr %34, %type35, !dbg !4115
  br i1 %35, label %cache_hit38, label %cache_miss36, !dbg !4115

cache_miss36:                                     ; preds = %if.exit31
  %ptradd37 = getelementptr inbounds i8, ptr %34, i64 16, !dbg !4115
  %36 = load ptr, ptr %ptradd37, align 8, !dbg !4115
  %37 = call ptr @.dyn_search(ptr %36, ptr @"$sel.acquire"), !dbg !4115
  store ptr %37, ptr %.inlinecache33, align 8, !dbg !4115
  store ptr %34, ptr %.cachedtype34, align 8, !dbg !4115
  br label %38, !dbg !4115

cache_hit38:                                      ; preds = %if.exit31
  %cache_hit_fn39 = load ptr, ptr %.inlinecache33, align 8, !dbg !4115
  br label %38, !dbg !4115

38:                                               ; preds = %cache_hit38, %cache_miss36
  %fn_phi40 = phi ptr [ %cache_hit_fn39, %cache_hit38 ], [ %37, %cache_miss36 ], !dbg !4115
  %39 = icmp eq ptr %fn_phi40, null, !dbg !4115
  br i1 %39, label %missing_function41, label %match45, !dbg !4115

missing_function41:                               ; preds = %38
  store %"char[]" { ptr @.panic_msg.228, i64 44 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.221, i64 16 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.227, i64 4 }, ptr %indirectarg44, align 8
  %40 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %40(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 116), !dbg !4154
  unreachable, !dbg !4154

match45:                                          ; preds = %38
  %41 = load ptr, ptr %allocator26, align 8
  %42 = load i64, ptr %size, align 8
  %43 = load i64, ptr %alignment27, align 8
  %44 = call i64 %fn_phi40(ptr %retparam, ptr %41, i64 %42, i32 0, i64 %43), !dbg !4154
  %not_err = icmp eq i64 %44, 0, !dbg !4154
  %45 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4154
  br i1 %45, label %after_check, label %assign_optional, !dbg !4154

assign_optional:                                  ; preds = %match45
  store i64 %44, ptr %error_var, align 8, !dbg !4154
  br label %guard_block, !dbg !4154

after_check:                                      ; preds = %match45
  %46 = load ptr, ptr %retparam, align 8, !dbg !4154
  store ptr %46, ptr %blockret28, align 8, !dbg !4154
  br label %expr_block.exit46, !dbg !4154

expr_block.exit46:                                ; preds = %after_check, %if.then30
  %47 = load ptr, ptr %blockret28, align 8, !dbg !4154
  store ptr %47, ptr %blockret, align 8, !dbg !4154
  br label %expr_block.exit66, !dbg !4154

if.exit47:                                        ; preds = %if.exit23
  %ptradd48 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !4155
  %48 = load i64, ptr %ptradd48, align 8, !dbg !4155
  %49 = inttoptr i64 %48 to ptr, !dbg !4155
  %type51 = load ptr, ptr %.cachedtype50, align 8, !dbg !4115
  %50 = icmp eq ptr %49, %type51, !dbg !4115
  br i1 %50, label %cache_hit54, label %cache_miss52, !dbg !4115

cache_miss52:                                     ; preds = %if.exit47
  %ptradd53 = getelementptr inbounds i8, ptr %49, i64 16, !dbg !4115
  %51 = load ptr, ptr %ptradd53, align 8, !dbg !4115
  %52 = call ptr @.dyn_search(ptr %51, ptr @"$sel.resize"), !dbg !4115
  store ptr %52, ptr %.inlinecache49, align 8, !dbg !4115
  store ptr %49, ptr %.cachedtype50, align 8, !dbg !4115
  br label %53, !dbg !4115

cache_hit54:                                      ; preds = %if.exit47
  %cache_hit_fn55 = load ptr, ptr %.inlinecache49, align 8, !dbg !4115
  br label %53, !dbg !4115

53:                                               ; preds = %cache_hit54, %cache_miss52
  %fn_phi56 = phi ptr [ %cache_hit_fn55, %cache_hit54 ], [ %52, %cache_miss52 ], !dbg !4115
  %54 = icmp eq ptr %fn_phi56, null, !dbg !4115
  br i1 %54, label %missing_function57, label %match61, !dbg !4115

missing_function57:                               ; preds = %53
  store %"char[]" { ptr @.panic_msg.229, i64 43 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.221, i64 16 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.227, i64 4 }, ptr %indirectarg60, align 8
  %55 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %55(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 137), !dbg !4156
  unreachable, !dbg !4156

match61:                                          ; preds = %53
  %56 = load ptr, ptr %allocator, align 8
  %57 = load ptr, ptr %ptr, align 8
  %58 = load i64, ptr %new_size, align 8
  %59 = load i64, ptr %alignment, align 8
  %60 = call i64 %fn_phi56(ptr %retparam62, ptr %56, ptr %57, i64 %58, i64 %59), !dbg !4156
  %not_err63 = icmp eq i64 %60, 0, !dbg !4156
  %61 = call i1 @llvm.expect.i1(i1 %not_err63, i1 true), !dbg !4156
  br i1 %61, label %after_check65, label %assign_optional64, !dbg !4156

assign_optional64:                                ; preds = %match61
  store i64 %60, ptr %error_var, align 8, !dbg !4156
  br label %guard_block, !dbg !4156

after_check65:                                    ; preds = %match61
  %62 = load ptr, ptr %retparam62, align 8, !dbg !4156
  store ptr %62, ptr %blockret, align 8, !dbg !4156
  br label %expr_block.exit66, !dbg !4156

expr_block.exit66:                                ; preds = %after_check65, %expr_block.exit46, %expr_block.exit
  br label %noerr_block, !dbg !4156

guard_block:                                      ; preds = %assign_optional64, %assign_optional
  %63 = load i64, ptr %error_var, align 8, !dbg !4156
  ret i64 %63, !dbg !4156

noerr_block:                                      ; preds = %expr_block.exit66
  %64 = load ptr, ptr %blockret, align 8, !dbg !4156
  store ptr %64, ptr %p, align 8, !dbg !4156
  %65 = load ptr, ptr %self, align 8, !dbg !4157
  %checknull67 = icmp eq ptr %65, null, !dbg !4157
  %66 = call i1 @llvm.expect.i1(i1 %checknull67, i1 false), !dbg !4157
  br i1 %66, label %panic68, label %checkok72, !dbg !4157

checkok72:                                        ; preds = %noerr_block
  %ptradd73 = getelementptr inbounds i8, ptr %65, i64 24, !dbg !4157
  %67 = load ptr, ptr %p, align 8, !dbg !4158
  %68 = load i64, ptr %n, align 8, !dbg !4159
  %add74 = add i64 0, %68, !dbg !4159
  %size75 = sub i64 %add74, 0, !dbg !4159
  %69 = insertvalue %"char[]" undef, ptr %67, 0, !dbg !4159
  %70 = insertvalue %"char[]" %69, i64 %size75, 1, !dbg !4159
  store %"char[]" %70, ptr %ptradd73, align 8, !dbg !4159
  ret i64 0, !dbg !4159

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.227, i64 4 }, ptr %indirectarg2, align 8
  %71 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %71(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 131), !dbg !4117
  unreachable, !dbg !4117

panic3:                                           ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.227, i64 4 }, ptr %indirectarg6, align 8
  %72 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %72(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 134), !dbg !4134
  unreachable, !dbg !4134

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.227, i64 4 }, ptr %indirectarg12, align 8
  %73 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %73(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 134), !dbg !4135
  unreachable, !dbg !4135

panic68:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.file.213, i64 13 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.func.227, i64 4 }, ptr %indirectarg71, align 8
  %74 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %74(ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, i32 135), !dbg !4157
  unreachable, !dbg !4157
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteReader.len(ptr %0) #0 comdat !dbg !4160 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !4169
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !4169
  br i1 %2, label %panic, label %checkok, !dbg !4169

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4170, metadata !DIExpression()), !dbg !4171
  %3 = load ptr, ptr %self, align 8, !dbg !4172
  %checknull = icmp eq ptr %3, null, !dbg !4172
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4172
  br i1 %4, label %panic3, label %checkok7, !dbg !4172

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 8, !dbg !4172
  %5 = load i64, ptr %ptradd, align 8, !dbg !4172
  ret i64 %5, !dbg !4172

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.231, i64 3 }, ptr %indirectarg2, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 9), !dbg !4171
  unreachable, !dbg !4171

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.231, i64 3 }, ptr %indirectarg6, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 11), !dbg !4172
  unreachable, !dbg !4172
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.ByteReader.init(ptr %0, ptr align 8 %1) #0 comdat !dbg !4173 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.assign_list = alloca %ByteReader, align 8
  %2 = icmp eq ptr %0, null, !dbg !4176
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4176
  br i1 %3, label %panic, label %checkok, !dbg !4176

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4177, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.declare(metadata ptr %1, metadata !4179, metadata !DIExpression()), !dbg !4180
  %4 = load ptr, ptr %self, align 8, !dbg !4181
  %checknull = icmp eq ptr %4, null, !dbg !4181
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4181
  br i1 %5, label %panic3, label %checkok7, !dbg !4181

checkok7:                                         ; preds = %checkok
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %.assign_list, ptr align 8 %1, i32 16, i1 false), !dbg !4182
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %4, ptr align 8 %.assign_list, i32 24, i1 false), !dbg !4182
  %6 = load ptr, ptr %self, align 8, !dbg !4183
  ret ptr %6, !dbg !4183

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 14), !dbg !4178
  unreachable, !dbg !4178

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg6, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 16), !dbg !4181
  unreachable, !dbg !4181
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteReader.read(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !4184 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %len = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %x = alloca i64, align 8
  %.anon = alloca i64, align 8
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  %reterr = alloca i64, align 8
  %dst = alloca ptr, align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr48 = alloca i64, align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg53 = alloca %"any[]", align 8
  %src = alloca ptr, align 8
  %len56 = alloca i64, align 8
  %indirectarg64 = alloca %"char[]", align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %reterr74 = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !4187
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !4187
  br i1 %4, label %panic, label %checkok, !dbg !4187

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4188, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4190, metadata !DIExpression()), !dbg !4191
  %5 = load ptr, ptr %self, align 8, !dbg !4192
  %checknull = icmp eq ptr %5, null, !dbg !4192
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4192
  br i1 %6, label %panic3, label %checkok7, !dbg !4192

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !4192
  %7 = load i64, ptr %ptradd, align 8, !dbg !4192
  %8 = load ptr, ptr %self, align 8, !dbg !4193
  %checknull8 = icmp eq ptr %8, null, !dbg !4193
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4193
  br i1 %9, label %panic9, label %checkok13, !dbg !4193

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %8, i64 8, !dbg !4193
  %10 = load i64, ptr %ptradd14, align 8, !dbg !4193
  %ge = icmp uge i64 %7, %10, !dbg !4192
  br i1 %ge, label %if.then, label %if.exit, !dbg !4192

if.then:                                          ; preds = %checkok13
  ret i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), !dbg !4194

if.exit:                                          ; preds = %checkok13
  call void @llvm.dbg.declare(metadata ptr %len, metadata !4195, metadata !DIExpression()), !dbg !4196
  %11 = load ptr, ptr %self, align 8, !dbg !4197
  %checknull15 = icmp eq ptr %11, null, !dbg !4197
  %12 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !4197
  br i1 %12, label %panic16, label %checkok20, !dbg !4197

checkok20:                                        ; preds = %if.exit
  %ptradd21 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !4197
  %13 = load i64, ptr %ptradd21, align 8, !dbg !4197
  %14 = load ptr, ptr %self, align 8, !dbg !4198
  %checknull22 = icmp eq ptr %14, null, !dbg !4198
  %15 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !4198
  br i1 %15, label %panic23, label %checkok27, !dbg !4198

checkok27:                                        ; preds = %checkok20
  %ptradd28 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !4198
  %16 = load i64, ptr %ptradd28, align 8, !dbg !4198
  %sub = sub i64 %13, %16, !dbg !4197
  store i64 %sub, ptr %x, align 8
  %ptradd29 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4199
  %17 = load i64, ptr %ptradd29, align 8
  store i64 %17, ptr %.anon, align 8
  %18 = load i64, ptr %x, align 8
  store i64 %18, ptr %a, align 8
  %19 = load i64, ptr %.anon, align 8
  store i64 %19, ptr %b, align 8
  %20 = load i64, ptr %a, align 8, !dbg !4200
  %21 = load i64, ptr %b, align 8, !dbg !4205
  %lt = icmp ult i64 %20, %21, !dbg !4200
  br i1 %lt, label %cond.lhs, label %cond.rhs, !dbg !4200

cond.lhs:                                         ; preds = %checkok27
  %22 = load i64, ptr %x, align 8, !dbg !4206
  br label %cond.phi, !dbg !4206

cond.rhs:                                         ; preds = %checkok27
  %23 = load i64, ptr %.anon, align 8, !dbg !4207
  br label %cond.phi, !dbg !4207

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i64 [ %22, %cond.lhs ], [ %23, %cond.rhs ], !dbg !4207
  store i64 %val, ptr %len, align 8, !dbg !4207
  %24 = load i64, ptr %len, align 8, !dbg !4208
  %eq = icmp eq i64 0, %24, !dbg !4208
  br i1 %eq, label %if.then30, label %if.exit31, !dbg !4208

if.then30:                                        ; preds = %cond.phi
  store i64 0, ptr %0, align 8, !dbg !4209
  ret i64 0, !dbg !4209

if.exit31:                                        ; preds = %cond.phi
  %25 = load ptr, ptr %2, align 8, !dbg !4210
  store ptr %25, ptr %dst, align 8
  %26 = load ptr, ptr %self, align 8, !dbg !4211
  %checknull32 = icmp eq ptr %26, null, !dbg !4211
  %27 = call i1 @llvm.expect.i1(i1 %checknull32, i1 false), !dbg !4211
  br i1 %27, label %panic33, label %checkok37, !dbg !4211

checkok37:                                        ; preds = %if.exit31
  %ptradd38 = getelementptr inbounds i8, ptr %26, i64 8, !dbg !4211
  %28 = load i64, ptr %ptradd38, align 8, !dbg !4211
  %29 = load ptr, ptr %26, align 8, !dbg !4211
  %30 = load ptr, ptr %self, align 8, !dbg !4212
  %checknull39 = icmp eq ptr %30, null, !dbg !4212
  %31 = call i1 @llvm.expect.i1(i1 %checknull39, i1 false), !dbg !4212
  br i1 %31, label %panic40, label %checkok44, !dbg !4212

checkok44:                                        ; preds = %checkok37
  %ptradd45 = getelementptr inbounds i8, ptr %30, i64 16, !dbg !4212
  %32 = load i64, ptr %ptradd45, align 8, !dbg !4212
  %ge46 = icmp uge i64 %32, %28, !dbg !4212
  %33 = call i1 @llvm.expect.i1(i1 %ge46, i1 false), !dbg !4212
  br i1 %33, label %panic47, label %checkok54, !dbg !4212

checkok54:                                        ; preds = %checkok44
  %ptradd55 = getelementptr inbounds i8, ptr %29, i64 %32, !dbg !4212
  store ptr %ptradd55, ptr %src, align 8
  %34 = load i64, ptr %len, align 8
  store i64 %34, ptr %len56, align 8
  %35 = load i64, ptr %len56, align 8, !dbg !4213
  %eq57 = icmp eq i64 0, %35, !dbg !4213
  br i1 %eq57, label %or.phi, label %or.rhs, !dbg !4213

or.rhs:                                           ; preds = %checkok54
  %36 = load ptr, ptr %dst, align 8, !dbg !4217
  %37 = load i64, ptr %len56, align 8, !dbg !4218
  %ptradd_any = getelementptr i8, ptr %36, i64 %37, !dbg !4218
  %38 = load ptr, ptr %src, align 8, !dbg !4219
  %le = icmp ule ptr %ptradd_any, %38, !dbg !4217
  br label %or.phi, !dbg !4217

or.phi:                                           ; preds = %or.rhs, %checkok54
  %val58 = phi i1 [ true, %checkok54 ], [ %le, %or.rhs ], !dbg !4217
  br i1 %val58, label %or.phi62, label %or.rhs59, !dbg !4217

or.rhs59:                                         ; preds = %or.phi
  %39 = load ptr, ptr %src, align 8, !dbg !4220
  %40 = load i64, ptr %len56, align 8, !dbg !4221
  %ptradd_any60 = getelementptr i8, ptr %39, i64 %40, !dbg !4221
  %41 = load ptr, ptr %dst, align 8, !dbg !4222
  %le61 = icmp ule ptr %ptradd_any60, %41, !dbg !4220
  br label %or.phi62, !dbg !4220

or.phi62:                                         ; preds = %or.rhs59, %or.phi
  %val63 = phi i1 [ true, %or.phi ], [ %le61, %or.rhs59 ], !dbg !4220
  br i1 %val63, label %assert_ok, label %assert_fail, !dbg !4220

assert_fail:                                      ; preds = %or.phi62
  store %"char[]" { ptr @.panic_msg.232, i64 95 }, ptr %indirectarg64, align 8
  store %"char[]" { ptr @.file.233, i64 6 }, ptr %indirectarg65, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg66, align 8
  %42 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %42(ptr align 8 %indirectarg64, ptr align 8 %indirectarg65, ptr align 8 %indirectarg66, i32 309), !dbg !4213
  unreachable, !dbg !4213

assert_ok:                                        ; preds = %or.phi62
  %43 = load ptr, ptr %dst, align 8, !dbg !4223
  %44 = load ptr, ptr %src, align 8, !dbg !4224
  %45 = load i64, ptr %len56, align 8, !dbg !4225
  call void @llvm.memcpy.p0.p0.i64(ptr %43, ptr %44, i64 %45, i1 false), !dbg !4226
  %46 = load ptr, ptr %self, align 8, !dbg !4227
  %checknull67 = icmp eq ptr %46, null, !dbg !4227
  %47 = call i1 @llvm.expect.i1(i1 %checknull67, i1 false), !dbg !4227
  br i1 %47, label %panic68, label %checkok72, !dbg !4227

checkok72:                                        ; preds = %assert_ok
  %ptradd73 = getelementptr inbounds i8, ptr %46, i64 16, !dbg !4227
  %48 = load i64, ptr %ptradd73, align 8, !dbg !4227
  %49 = load i64, ptr %len, align 8, !dbg !4228
  %add = add i64 %48, %49, !dbg !4227
  store i64 %add, ptr %ptradd73, align 8, !dbg !4227
  %50 = load i64, ptr %len, align 8, !dbg !4229
  store i64 %50, ptr %0, align 8, !dbg !4229
  ret i64 0, !dbg !4229

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg2, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 20), !dbg !4189
  unreachable, !dbg !4189

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg6, align 8
  %52 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %52(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 22), !dbg !4192
  unreachable, !dbg !4192

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg12, align 8
  %53 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %53(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 22), !dbg !4193
  unreachable, !dbg !4193

panic16:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg19, align 8
  %54 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %54(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 23), !dbg !4197
  unreachable, !dbg !4197

panic23:                                          ; preds = %checkok20
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg26, align 8
  %55 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %55(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 23), !dbg !4198
  unreachable, !dbg !4198

panic33:                                          ; preds = %if.exit31
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg36, align 8
  %56 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %56(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 25), !dbg !4211
  unreachable, !dbg !4211

panic40:                                          ; preds = %checkok37
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg43, align 8
  %57 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %57(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 25), !dbg !4212
  unreachable, !dbg !4212

panic47:                                          ; preds = %checkok44
  store i64 %28, ptr %taddr, align 8
  %58 = insertvalue %any undef, ptr %taddr, 0
  %59 = insertvalue %any %58, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %32, ptr %taddr48, align 8
  %60 = insertvalue %any undef, ptr %taddr48, 0
  %61 = insertvalue %any %60, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg51, align 8
  store %any %59, ptr %varargslots, align 16
  %ptradd52 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %61, ptr %ptradd52, align 16
  %62 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %62, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg53, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 25, ptr align 8 %indirectarg53), !dbg !4212
  unreachable, !dbg !4212

panic68:                                          ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg71, align 8
  %63 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %63(ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, i32 26), !dbg !4227
  unreachable, !dbg !4227
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteReader.read_byte(ptr %0, ptr %1) #0 comdat !dbg !4230 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr31 = alloca i64, align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg36 = alloca %"any[]", align 8
  %2 = icmp eq ptr %1, null, !dbg !4233
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4233
  br i1 %3, label %panic, label %checkok, !dbg !4233

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4234, metadata !DIExpression()), !dbg !4235
  %4 = load ptr, ptr %self, align 8, !dbg !4236
  %checknull = icmp eq ptr %4, null, !dbg !4236
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4236
  br i1 %5, label %panic3, label %checkok7, !dbg !4236

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !4236
  %6 = load i64, ptr %ptradd, align 8, !dbg !4236
  %7 = load ptr, ptr %self, align 8, !dbg !4237
  %checknull8 = icmp eq ptr %7, null, !dbg !4237
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4237
  br i1 %8, label %panic9, label %checkok13, !dbg !4237

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 8, !dbg !4237
  %9 = load i64, ptr %ptradd14, align 8, !dbg !4237
  %ge = icmp uge i64 %6, %9, !dbg !4236
  br i1 %ge, label %if.then, label %if.exit, !dbg !4236

if.then:                                          ; preds = %checkok13
  ret i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), !dbg !4238

if.exit:                                          ; preds = %checkok13
  %10 = load ptr, ptr %self, align 8, !dbg !4239
  %checknull15 = icmp eq ptr %10, null, !dbg !4239
  %11 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !4239
  br i1 %11, label %panic16, label %checkok20, !dbg !4239

checkok20:                                        ; preds = %if.exit
  %ptradd21 = getelementptr inbounds i8, ptr %10, i64 8, !dbg !4239
  %12 = load i64, ptr %ptradd21, align 8, !dbg !4239
  %13 = load ptr, ptr %10, align 8, !dbg !4239
  %14 = load ptr, ptr %self, align 8, !dbg !4240
  %checknull22 = icmp eq ptr %14, null, !dbg !4240
  %15 = call i1 @llvm.expect.i1(i1 %checknull22, i1 false), !dbg !4240
  br i1 %15, label %panic23, label %checkok27, !dbg !4240

checkok27:                                        ; preds = %checkok20
  %ptradd28 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !4240
  %16 = load i64, ptr %ptradd28, align 8, !dbg !4240
  %add = add i64 %16, 1, !dbg !4240
  store i64 %add, ptr %ptradd28, align 8, !dbg !4240
  %ge29 = icmp uge i64 %16, %12, !dbg !4240
  %17 = call i1 @llvm.expect.i1(i1 %ge29, i1 false), !dbg !4240
  br i1 %17, label %panic30, label %checkok37, !dbg !4240

checkok37:                                        ; preds = %checkok27
  %ptradd38 = getelementptr inbounds i8, ptr %13, i64 %16, !dbg !4240
  %18 = load i8, ptr %ptradd38, align 1, !dbg !4240
  store i8 %18, ptr %0, align 1, !dbg !4240
  ret i64 0, !dbg !4240

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg2, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 30), !dbg !4235
  unreachable, !dbg !4235

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg6, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 32), !dbg !4236
  unreachable, !dbg !4236

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg12, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 32), !dbg !4237
  unreachable, !dbg !4237

panic16:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg19, align 8
  %22 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %22(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 33), !dbg !4239
  unreachable, !dbg !4239

panic23:                                          ; preds = %checkok20
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg26, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 33), !dbg !4240
  unreachable, !dbg !4240

panic30:                                          ; preds = %checkok27
  store i64 %12, ptr %taddr, align 8
  %24 = insertvalue %any undef, ptr %taddr, 0
  %25 = insertvalue %any %24, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %16, ptr %taddr31, align 8
  %26 = insertvalue %any undef, ptr %taddr31, 0
  %27 = insertvalue %any %26, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg34, align 8
  store %any %25, ptr %varargslots, align 16
  %ptradd35 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %27, ptr %ptradd35, align 16
  %28 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %28, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg36, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 33, ptr align 8 %indirectarg36), !dbg !4240
  unreachable, !dbg !4240
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteReader.pushback_byte(ptr %0) #0 comdat !dbg !4241 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !4244
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !4244
  br i1 %2, label %panic, label %checkok, !dbg !4244

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4245, metadata !DIExpression()), !dbg !4246
  %3 = load ptr, ptr %self, align 8, !dbg !4247
  %checknull = icmp eq ptr %3, null, !dbg !4247
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4247
  br i1 %4, label %panic3, label %checkok7, !dbg !4247

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 16, !dbg !4247
  %5 = load i64, ptr %ptradd, align 8, !dbg !4247
  %not = icmp eq i64 %5, 0, !dbg !4247
  br i1 %not, label %if.then, label %if.exit, !dbg !4247

if.then:                                          ; preds = %checkok7
  ret i64 ptrtoint (ptr @"std.io.IoError$INVALID_PUSHBACK" to i64), !dbg !4248

if.exit:                                          ; preds = %checkok7
  %6 = load ptr, ptr %self, align 8, !dbg !4249
  %checknull8 = icmp eq ptr %6, null, !dbg !4249
  %7 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4249
  br i1 %7, label %panic9, label %checkok13, !dbg !4249

checkok13:                                        ; preds = %if.exit
  %ptradd14 = getelementptr inbounds i8, ptr %6, i64 16, !dbg !4249
  %8 = load i64, ptr %ptradd14, align 8, !dbg !4249
  %sub = sub i64 %8, 1, !dbg !4249
  store i64 %sub, ptr %ptradd14, align 8, !dbg !4249
  ret i64 0, !dbg !4249

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.223, i64 13 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 36), !dbg !4246
  unreachable, !dbg !4246

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.223, i64 13 }, ptr %indirectarg6, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 38), !dbg !4247
  unreachable, !dbg !4247

panic9:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.223, i64 13 }, ptr %indirectarg12, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 39), !dbg !4249
  unreachable, !dbg !4249
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteReader.seek(ptr %0, ptr %1, i64 %2, i32 %3) #0 comdat !dbg !4250 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %offset = alloca i64, align 8
  %seek = alloca i32, align 4
  %new_index = alloca i64, align 8
  %switch = alloca i32, align 4
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %4 = icmp eq ptr %1, null, !dbg !4253
  %5 = call i1 @llvm.expect.i1(i1 %4, i1 false), !dbg !4253
  br i1 %5, label %panic, label %checkok, !dbg !4253

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4254, metadata !DIExpression()), !dbg !4255
  store i64 %2, ptr %offset, align 8
  call void @llvm.dbg.declare(metadata ptr %offset, metadata !4256, metadata !DIExpression()), !dbg !4257
  store i32 %3, ptr %seek, align 4
  call void @llvm.dbg.declare(metadata ptr %seek, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata ptr %new_index, metadata !4260, metadata !DIExpression()), !dbg !4261
  store i64 0, ptr %new_index, align 8, !dbg !4261
  %6 = load i32, ptr %seek, align 4
  store i32 %6, ptr %switch, align 4
  br label %switch.entry

switch.entry:                                     ; preds = %checkok
  %7 = load i32, ptr %switch, align 4
  switch i32 %7, label %switch.exit [
    i32 0, label %switch.case
    i32 1, label %switch.case3
    i32 2, label %switch.case9
  ]

switch.case:                                      ; preds = %switch.entry
  %8 = load i64, ptr %offset, align 8, !dbg !4262
  store i64 %8, ptr %new_index, align 8, !dbg !4262
  br label %switch.exit, !dbg !4262

switch.case3:                                     ; preds = %switch.entry
  %9 = load ptr, ptr %self, align 8, !dbg !4265
  %checknull = icmp eq ptr %9, null, !dbg !4265
  %10 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4265
  br i1 %10, label %panic4, label %checkok8, !dbg !4265

checkok8:                                         ; preds = %switch.case3
  %ptradd = getelementptr inbounds i8, ptr %9, i64 16, !dbg !4265
  %11 = load i64, ptr %ptradd, align 8, !dbg !4265
  %12 = load i64, ptr %offset, align 8, !dbg !4267
  %add = add i64 %11, %12, !dbg !4265
  store i64 %add, ptr %new_index, align 8, !dbg !4265
  br label %switch.exit, !dbg !4265

switch.case9:                                     ; preds = %switch.entry
  %13 = load ptr, ptr %self, align 8, !dbg !4268
  %checknull10 = icmp eq ptr %13, null, !dbg !4268
  %14 = call i1 @llvm.expect.i1(i1 %checknull10, i1 false), !dbg !4268
  br i1 %14, label %panic11, label %checkok15, !dbg !4268

checkok15:                                        ; preds = %switch.case9
  %ptradd16 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !4268
  %15 = load i64, ptr %ptradd16, align 8, !dbg !4268
  %16 = load i64, ptr %offset, align 8, !dbg !4270
  %add17 = add i64 %15, %16, !dbg !4268
  store i64 %add17, ptr %new_index, align 8, !dbg !4268
  br label %switch.exit, !dbg !4268

switch.exit:                                      ; preds = %checkok15, %checkok8, %switch.case, %switch.entry
  %17 = load i64, ptr %new_index, align 8, !dbg !4271
  %lt = icmp slt i64 %17, 0, !dbg !4271
  br i1 %lt, label %if.then, label %if.exit, !dbg !4271

if.then:                                          ; preds = %switch.exit
  ret i64 ptrtoint (ptr @"std.io.IoError$INVALID_POSITION" to i64), !dbg !4272

if.exit:                                          ; preds = %switch.exit
  %18 = load ptr, ptr %self, align 8, !dbg !4273
  %checknull18 = icmp eq ptr %18, null, !dbg !4273
  %19 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !4273
  br i1 %19, label %panic19, label %checkok23, !dbg !4273

checkok23:                                        ; preds = %if.exit
  %ptradd24 = getelementptr inbounds i8, ptr %18, i64 16, !dbg !4273
  %20 = load i64, ptr %new_index, align 8, !dbg !4274
  store i64 %20, ptr %ptradd24, align 8, !dbg !4274
  %21 = load i64, ptr %new_index, align 8, !dbg !4275
  store i64 %21, ptr %0, align 8, !dbg !4275
  ret i64 0, !dbg !4275

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg2, align 8
  %22 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %22(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 42), !dbg !4255
  unreachable, !dbg !4255

panic4:                                           ; preds = %switch.case3
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg6, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg7, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, ptr align 8 %indirectarg7, i32 48), !dbg !4265
  unreachable, !dbg !4265

panic11:                                          ; preds = %switch.case9
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg14, align 8
  %24 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %24(ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, i32 49), !dbg !4268
  unreachable, !dbg !4268

panic19:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.225, i64 4 }, ptr %indirectarg22, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 52), !dbg !4273
  unreachable, !dbg !4273
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteReader.write_to(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !4276 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %written = alloca i64, align 8
  %error_var = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr29 = alloca i64, align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg34 = alloca %"any[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg64 = alloca %"char[]", align 8
  %indirectarg65 = alloca %"char[]", align 8
  %indirectarg66 = alloca %"char[]", align 8
  %reterr67 = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !4279
  %3 = icmp eq ptr %1, null, !dbg !4279
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !4279
  br i1 %4, label %panic, label %checkok, !dbg !4279

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4280, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4282, metadata !DIExpression()), !dbg !4283
  %5 = load ptr, ptr %self, align 8, !dbg !4284
  %checknull = icmp eq ptr %5, null, !dbg !4284
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4284
  br i1 %6, label %panic3, label %checkok7, !dbg !4284

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !4284
  %7 = load i64, ptr %ptradd, align 8, !dbg !4284
  %8 = load ptr, ptr %self, align 8, !dbg !4285
  %checknull8 = icmp eq ptr %8, null, !dbg !4285
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4285
  br i1 %9, label %panic9, label %checkok13, !dbg !4285

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %8, i64 8, !dbg !4285
  %10 = load i64, ptr %ptradd14, align 8, !dbg !4285
  %ge = icmp uge i64 %7, %10, !dbg !4284
  br i1 %ge, label %if.then, label %if.exit, !dbg !4284

if.then:                                          ; preds = %checkok13
  store i64 0, ptr %0, align 8, !dbg !4286
  ret i64 0, !dbg !4286

if.exit:                                          ; preds = %checkok13
  call void @llvm.dbg.declare(metadata ptr %written, metadata !4287, metadata !DIExpression()), !dbg !4288
  %11 = load ptr, ptr %self, align 8, !dbg !4289
  %checknull15 = icmp eq ptr %11, null, !dbg !4289
  %12 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !4289
  br i1 %12, label %panic16, label %checkok20, !dbg !4289

checkok20:                                        ; preds = %if.exit
  %13 = load %"char[]", ptr %11, align 8, !dbg !4289
  %14 = extractvalue %"char[]" %13, 0, !dbg !4289
  %15 = load ptr, ptr %self, align 8, !dbg !4290
  %checknull21 = icmp eq ptr %15, null, !dbg !4290
  %16 = call i1 @llvm.expect.i1(i1 %checknull21, i1 false), !dbg !4290
  br i1 %16, label %panic22, label %checkok26, !dbg !4290

checkok26:                                        ; preds = %checkok20
  %ptradd27 = getelementptr inbounds i8, ptr %15, i64 16, !dbg !4290
  %17 = load i64, ptr %ptradd27, align 8, !dbg !4290
  %18 = extractvalue %"char[]" %13, 1, !dbg !4290
  %gt = icmp ugt i64 %17, %18, !dbg !4290
  %19 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !4290
  br i1 %19, label %panic28, label %checkok35, !dbg !4290

checkok35:                                        ; preds = %checkok26
  %size = sub i64 %18, %17, !dbg !4289
  %ptradd36 = getelementptr inbounds i8, ptr %14, i64 %17, !dbg !4289
  %20 = insertvalue %"char[]" undef, ptr %ptradd36, 0, !dbg !4289
  %21 = insertvalue %"char[]" %20, i64 %size, 1, !dbg !4289
  %ptradd37 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4289
  %22 = load i64, ptr %ptradd37, align 8, !dbg !4289
  %23 = inttoptr i64 %22 to ptr, !dbg !4289
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4279
  %24 = icmp eq ptr %23, %type, !dbg !4279
  br i1 %24, label %cache_hit, label %cache_miss, !dbg !4279

cache_miss:                                       ; preds = %checkok35
  %ptradd38 = getelementptr inbounds i8, ptr %23, i64 16, !dbg !4279
  %25 = load ptr, ptr %ptradd38, align 8, !dbg !4279
  %26 = call ptr @.dyn_search(ptr %25, ptr @"$sel.write"), !dbg !4279
  store ptr %26, ptr %.inlinecache, align 8, !dbg !4279
  store ptr %23, ptr %.cachedtype, align 8, !dbg !4279
  br label %27, !dbg !4279

cache_hit:                                        ; preds = %checkok35
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4279
  br label %27, !dbg !4279

27:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %26, %cache_miss ], !dbg !4279
  %28 = icmp eq ptr %fn_phi, null, !dbg !4279
  br i1 %28, label %missing_function, label %match, !dbg !4279

missing_function:                                 ; preds = %27
  store %"char[]" { ptr @.panic_msg.51, i64 42 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg41, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 59), !dbg !4291
  unreachable, !dbg !4291

match:                                            ; preds = %27
  %30 = load ptr, ptr %2, align 8
  store %"char[]" %21, ptr %indirectarg42, align 8
  %31 = call i64 %fn_phi(ptr %retparam, ptr %30, ptr align 8 %indirectarg42), !dbg !4291
  %not_err = icmp eq i64 %31, 0, !dbg !4291
  %32 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4291
  br i1 %32, label %after_check, label %assign_optional, !dbg !4291

assign_optional:                                  ; preds = %match
  store i64 %31, ptr %error_var, align 8, !dbg !4291
  br label %guard_block, !dbg !4291

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !4291

guard_block:                                      ; preds = %assign_optional
  %33 = load i64, ptr %error_var, align 8, !dbg !4291
  ret i64 %33, !dbg !4291

noerr_block:                                      ; preds = %after_check
  %34 = load i64, ptr %retparam, align 8, !dbg !4291
  store i64 %34, ptr %written, align 8, !dbg !4291
  %35 = load ptr, ptr %self, align 8, !dbg !4292
  %checknull43 = icmp eq ptr %35, null, !dbg !4292
  %36 = call i1 @llvm.expect.i1(i1 %checknull43, i1 false), !dbg !4292
  br i1 %36, label %panic44, label %checkok48, !dbg !4292

checkok48:                                        ; preds = %noerr_block
  %ptradd49 = getelementptr inbounds i8, ptr %35, i64 16, !dbg !4292
  %37 = load i64, ptr %ptradd49, align 8, !dbg !4292
  %38 = load i64, ptr %written, align 8, !dbg !4293
  %add = add i64 %37, %38, !dbg !4292
  store i64 %add, ptr %ptradd49, align 8, !dbg !4292
  %39 = load ptr, ptr %self, align 8, !dbg !4294
  %checknull50 = icmp eq ptr %39, null, !dbg !4294
  %40 = call i1 @llvm.expect.i1(i1 %checknull50, i1 false), !dbg !4294
  br i1 %40, label %panic51, label %checkok55, !dbg !4294

checkok55:                                        ; preds = %checkok48
  %ptradd56 = getelementptr inbounds i8, ptr %39, i64 16, !dbg !4294
  %41 = load i64, ptr %ptradd56, align 8, !dbg !4294
  %42 = load ptr, ptr %self, align 8, !dbg !4295
  %checknull57 = icmp eq ptr %42, null, !dbg !4295
  %43 = call i1 @llvm.expect.i1(i1 %checknull57, i1 false), !dbg !4295
  br i1 %43, label %panic58, label %checkok62, !dbg !4295

checkok62:                                        ; preds = %checkok55
  %ptradd63 = getelementptr inbounds i8, ptr %42, i64 8, !dbg !4295
  %44 = load i64, ptr %ptradd63, align 8, !dbg !4295
  %le = icmp ule i64 %41, %44, !dbg !4294
  br i1 %le, label %assert_ok, label %assert_fail, !dbg !4294

assert_fail:                                      ; preds = %checkok62
  store %"char[]" { ptr @.panic_msg.224, i64 16 }, ptr %indirectarg64, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg65, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg66, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg64, ptr align 8 %indirectarg65, ptr align 8 %indirectarg66, i32 61), !dbg !4294
  unreachable, !dbg !4294

assert_ok:                                        ; preds = %checkok62
  %46 = load i64, ptr %written, align 8, !dbg !4296
  store i64 %46, ptr %0, align 8, !dbg !4296
  ret i64 0, !dbg !4296

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg2, align 8
  %47 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %47(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 56), !dbg !4281
  unreachable, !dbg !4281

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg6, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 58), !dbg !4284
  unreachable, !dbg !4284

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg12, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 58), !dbg !4285
  unreachable, !dbg !4285

panic16:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg19, align 8
  %50 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %50(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 59), !dbg !4289
  unreachable, !dbg !4289

panic22:                                          ; preds = %checkok20
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg25, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, i32 59), !dbg !4290
  unreachable, !dbg !4290

panic28:                                          ; preds = %checkok26
  store i64 %18, ptr %taddr, align 8
  %52 = insertvalue %any undef, ptr %taddr, 0
  %53 = insertvalue %any %52, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %17, ptr %taddr29, align 8
  %54 = insertvalue %any undef, ptr %taddr29, 0
  %55 = insertvalue %any %54, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg31, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg32, align 8
  store %any %53, ptr %varargslots, align 16
  %ptradd33 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %55, ptr %ptradd33, align 16
  %56 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %56, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg34, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, ptr align 8 %indirectarg32, i32 59, ptr align 8 %indirectarg34), !dbg !4289
  unreachable, !dbg !4289

panic44:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg46, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg47, align 8
  %57 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %57(ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, ptr align 8 %indirectarg47, i32 60), !dbg !4292
  unreachable, !dbg !4292

panic51:                                          ; preds = %checkok48
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg54, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, i32 61), !dbg !4294
  unreachable, !dbg !4294

panic58:                                          ; preds = %checkok55
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.func.234, i64 8 }, ptr %indirectarg61, align 8
  %59 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %59(ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, i32 61), !dbg !4295
  unreachable, !dbg !4295
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteReader.available(ptr %0, ptr %1) #0 comdat !dbg !4297 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %x = alloca i32, align 4
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %.anon = alloca i64, align 8
  %a = alloca i32, align 4
  %b = alloca i64, align 8
  %2 = icmp eq ptr %1, null, !dbg !4300
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4300
  br i1 %3, label %panic, label %checkok, !dbg !4300

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4301, metadata !DIExpression()), !dbg !4302
  store i32 0, ptr %x, align 4
  %4 = load ptr, ptr %self, align 8, !dbg !4303
  %checknull = icmp eq ptr %4, null, !dbg !4303
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4303
  br i1 %5, label %panic3, label %checkok7, !dbg !4303

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 8, !dbg !4303
  %6 = load i64, ptr %ptradd, align 8, !dbg !4303
  %7 = load ptr, ptr %self, align 8, !dbg !4304
  %checknull8 = icmp eq ptr %7, null, !dbg !4304
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4304
  br i1 %8, label %panic9, label %checkok13, !dbg !4304

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 16, !dbg !4304
  %9 = load i64, ptr %ptradd14, align 8, !dbg !4304
  %sub = sub i64 %6, %9, !dbg !4303
  store i64 %sub, ptr %.anon, align 8
  %10 = load i32, ptr %x, align 4
  store i32 %10, ptr %a, align 4
  %11 = load i64, ptr %.anon, align 8
  store i64 %11, ptr %b, align 8
  %12 = load i32, ptr %a, align 4, !dbg !4305
  %sext = sext i32 %12 to i64, !dbg !4305
  %13 = load i64, ptr %b, align 8, !dbg !4310
  %gt = icmp sgt i64 %sext, %13, !dbg !4305
  %check = icmp sge i64 %13, 0, !dbg !4305
  %siui-gt = and i1 %check, %gt, !dbg !4305
  br i1 %siui-gt, label %cond.lhs, label %cond.rhs, !dbg !4305

cond.lhs:                                         ; preds = %checkok13
  %14 = load i32, ptr %x, align 4, !dbg !4311
  %sext15 = sext i32 %14 to i64, !dbg !4311
  br label %cond.phi, !dbg !4311

cond.rhs:                                         ; preds = %checkok13
  %15 = load i64, ptr %.anon, align 8, !dbg !4312
  br label %cond.phi, !dbg !4312

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i64 [ %sext15, %cond.lhs ], [ %15, %cond.rhs ], !dbg !4312
  store i64 %val, ptr %0, align 8, !dbg !4312
  ret i64 0, !dbg !4312

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 65), !dbg !4302
  unreachable, !dbg !4302

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg6, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 67), !dbg !4303
  unreachable, !dbg !4303

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.230, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg12, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 67), !dbg !4304
  unreachable, !dbg !4304
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.ByteWriter.new_init(ptr %0, ptr align 8 %1) #0 comdat !dbg !4313 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %.assign_list = alloca %ByteWriter, align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !4323
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4323
  br i1 %3, label %panic, label %checkok, !dbg !4323

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4324, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.declare(metadata ptr %1, metadata !4326, metadata !DIExpression()), !dbg !4327
  %4 = load ptr, ptr %self, align 8, !dbg !4328
  %checknull = icmp eq ptr %4, null, !dbg !4328
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4328
  br i1 %5, label %panic3, label %checkok7, !dbg !4328

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 8, !dbg !4328
  %6 = load i64, ptr %ptradd, align 8, !dbg !4328
  %eq = icmp eq i64 0, %6, !dbg !4328
  br i1 %eq, label %assert_ok, label %assert_fail, !dbg !4328

assert_fail:                                      ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.200, i64 88 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg10, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 14), !dbg !4328
  unreachable, !dbg !4328

assert_ok:                                        ; preds = %checkok7
  %8 = load ptr, ptr %self, align 8, !dbg !4330
  %checknull11 = icmp eq ptr %8, null, !dbg !4330
  %9 = call i1 @llvm.expect.i1(i1 %checknull11, i1 false), !dbg !4330
  br i1 %9, label %panic12, label %checkok16, !dbg !4330

checkok16:                                        ; preds = %assert_ok
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 40, i1 false)
  store %"char[]" zeroinitializer, ptr %.assign_list, align 8, !dbg !4331
  %ptradd17 = getelementptr inbounds i8, ptr %.assign_list, i64 24, !dbg !4331
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd17, ptr align 8 %1, i32 16, i1 false), !dbg !4332
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %8, ptr align 8 %.assign_list, i32 40, i1 false), !dbg !4332
  %10 = load ptr, ptr %self, align 8, !dbg !4333
  %11 = load ptr, ptr %1, align 8, !dbg !4334
  %anybool = icmp ne ptr %11, null, !dbg !4334
  br i1 %anybool, label %assert_ok22, label %assert_fail18, !dbg !4334

assert_fail18:                                    ; preds = %checkok16
  store %"char[]" { ptr @.panic_msg.236, i64 52 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg21, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 15), !dbg !4334
  unreachable, !dbg !4334

assert_ok22:                                      ; preds = %checkok16
  %13 = load ptr, ptr %self, align 8, !dbg !4335
  %checknull23 = icmp eq ptr %13, null, !dbg !4335
  %14 = call i1 @llvm.expect.i1(i1 %checknull23, i1 false), !dbg !4335
  br i1 %14, label %panic24, label %checkok28, !dbg !4335

checkok28:                                        ; preds = %assert_ok22
  %ptradd29 = getelementptr inbounds i8, ptr %13, i64 16, !dbg !4335
  %15 = load i64, ptr %ptradd29, align 8, !dbg !4335
  %eq30 = icmp eq i64 0, %15, !dbg !4335
  br i1 %eq30, label %assert_ok35, label %assert_fail31, !dbg !4335

assert_fail31:                                    ; preds = %checkok28
  store %"char[]" { ptr @.panic_msg.236, i64 52 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg34, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 15), !dbg !4335
  unreachable, !dbg !4335

assert_ok35:                                      ; preds = %checkok28
  ret ptr %10, !dbg !4335

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg2, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 17), !dbg !4325
  unreachable, !dbg !4325

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg6, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 14), !dbg !4328
  unreachable, !dbg !4328

panic12:                                          ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg15, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 19), !dbg !4330
  unreachable, !dbg !4330

panic24:                                          ; preds = %assert_ok22
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.214, i64 8 }, ptr %indirectarg27, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 15), !dbg !4335
  unreachable, !dbg !4335
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.ByteWriter.temp_init(ptr %0) #0 comdat !dbg !4336 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %any, align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %1 = icmp eq ptr %0, null, !dbg !4339
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !4339
  br i1 %2, label %panic, label %checkok, !dbg !4339

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4340, metadata !DIExpression()), !dbg !4341
  %3 = load ptr, ptr %self, align 8, !dbg !4342
  %checknull = icmp eq ptr %3, null, !dbg !4342
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4342
  br i1 %4, label %panic3, label %checkok7, !dbg !4342

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 8, !dbg !4342
  %5 = load i64, ptr %ptradd, align 8, !dbg !4342
  %eq = icmp eq i64 0, %5, !dbg !4342
  br i1 %eq, label %assert_ok, label %assert_fail, !dbg !4342

assert_fail:                                      ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.200, i64 88 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg9, align 8
  store %"char[]" { ptr @.func.216, i64 9 }, ptr %indirectarg10, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, ptr align 8 %indirectarg10, i32 25), !dbg !4342
  unreachable, !dbg !4342

assert_ok:                                        ; preds = %checkok7
  %7 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !4344
  %not = icmp eq ptr %7, null, !dbg !4344
  br i1 %not, label %if.then, label %if.exit, !dbg !4344

if.then:                                          ; preds = %assert_ok
  call void @std.core.mem.allocator.init_default_temp_allocators(), !dbg !4347
  br label %if.exit, !dbg !4347

if.exit:                                          ; preds = %if.then, %assert_ok
  %8 = load ptr, ptr @std.core.mem.allocator.thread_temp_allocator, align 8, !dbg !4349
  %9 = insertvalue %any undef, ptr %8, 0, !dbg !4349
  %10 = insertvalue %any %9, i64 ptrtoint (ptr @"$ct.std.core.mem.allocator.TempAllocator" to i64), 1, !dbg !4349
  %11 = load ptr, ptr %self, align 8, !dbg !4349
  store %any %10, ptr %indirectarg11, align 8
  %12 = call ptr @std.io.ByteWriter.new_init(ptr %11, ptr align 8 %indirectarg11) #5, !dbg !4350
  %13 = load ptr, ptr %self, align 8, !dbg !4351
  %checknull12 = icmp eq ptr %13, null, !dbg !4351
  %14 = call i1 @llvm.expect.i1(i1 %checknull12, i1 false), !dbg !4351
  br i1 %14, label %panic13, label %checkok17, !dbg !4351

checkok17:                                        ; preds = %if.exit
  %ptradd18 = getelementptr inbounds i8, ptr %13, i64 16, !dbg !4351
  %15 = load i64, ptr %ptradd18, align 8, !dbg !4351
  %eq19 = icmp eq i64 0, %15, !dbg !4351
  br i1 %eq19, label %assert_ok24, label %assert_fail20, !dbg !4351

assert_fail20:                                    ; preds = %checkok17
  store %"char[]" { ptr @.panic_msg.237, i64 35 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.216, i64 9 }, ptr %indirectarg23, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 26), !dbg !4351
  unreachable, !dbg !4351

assert_ok24:                                      ; preds = %checkok17
  ret ptr %12, !dbg !4351

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.216, i64 9 }, ptr %indirectarg2, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 28), !dbg !4341
  unreachable, !dbg !4341

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.216, i64 9 }, ptr %indirectarg6, align 8
  %18 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %18(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 25), !dbg !4342
  unreachable, !dbg !4342

panic13:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.func.216, i64 9 }, ptr %indirectarg16, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, i32 26), !dbg !4351
  unreachable, !dbg !4351
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.ByteWriter.init_with_buffer(ptr %0, ptr align 8 %1) #0 comdat !dbg !4352 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.assign_list = alloca %ByteWriter, align 8
  %2 = icmp eq ptr %0, null, !dbg !4355
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4355
  br i1 %3, label %panic, label %checkok, !dbg !4355

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4356, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.declare(metadata ptr %1, metadata !4358, metadata !DIExpression()), !dbg !4359
  %4 = load ptr, ptr %self, align 8, !dbg !4360
  %checknull = icmp eq ptr %4, null, !dbg !4360
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4360
  br i1 %5, label %panic3, label %checkok7, !dbg !4360

checkok7:                                         ; preds = %checkok
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 40, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %.assign_list, ptr align 8 %1, i32 16, i1 false), !dbg !4361
  %ptradd = getelementptr inbounds i8, ptr %.assign_list, i64 24, !dbg !4361
  store %any { ptr null, i64 ptrtoint (ptr @"$ct.void" to i64) }, ptr %ptradd, align 8, !dbg !4362
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %4, ptr align 8 %.assign_list, i32 40, i1 false), !dbg !4362
  %6 = load ptr, ptr %self, align 8, !dbg !4363
  ret ptr %6, !dbg !4363

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.217, i64 16 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 33), !dbg !4357
  unreachable, !dbg !4357

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.217, i64 16 }, ptr %indirectarg6, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 35), !dbg !4360
  unreachable, !dbg !4360
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteWriter.destroy(ptr %0) #0 comdat !dbg !4364 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %ptr = alloca ptr, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %allocator = alloca %any, align 8
  %ptr22 = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !4367
  %1 = icmp eq ptr %0, null, !dbg !4367
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !4367
  br i1 %2, label %panic, label %checkok, !dbg !4367

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4368, metadata !DIExpression()), !dbg !4369
  %3 = load ptr, ptr %self, align 8, !dbg !4370
  %checknull = icmp eq ptr %3, null, !dbg !4370
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4370
  br i1 %4, label %panic3, label %checkok7, !dbg !4370

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 24, !dbg !4370
  %5 = load ptr, ptr %ptradd, align 8, !dbg !4370
  %not = icmp eq ptr %5, null, !dbg !4370
  br i1 %not, label %if.then, label %if.exit, !dbg !4370

if.then:                                          ; preds = %checkok7
  ret i64 0

if.exit:                                          ; preds = %checkok7
  call void @llvm.dbg.declare(metadata ptr %ptr, metadata !4371, metadata !DIExpression()), !dbg !4372
  %6 = load ptr, ptr %self, align 8, !dbg !4373
  %checknull8 = icmp eq ptr %6, null, !dbg !4373
  %7 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4373
  br i1 %7, label %panic9, label %checkok13, !dbg !4373

checkok13:                                        ; preds = %if.exit
  %8 = load ptr, ptr %6, align 8, !dbg !4373
  store ptr %8, ptr %ptr, align 8, !dbg !4373
  %9 = load ptr, ptr %ptr, align 8, !dbg !4373
  %ptrbool = icmp ne ptr %9, null, !dbg !4373
  br i1 %ptrbool, label %if.then14, label %if.exit31, !dbg !4373

if.then14:                                        ; preds = %checkok13
  %10 = load ptr, ptr %self, align 8, !dbg !4374
  %checknull15 = icmp eq ptr %10, null, !dbg !4374
  %11 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !4374
  br i1 %11, label %panic16, label %checkok20, !dbg !4374

checkok20:                                        ; preds = %if.then14
  %ptradd21 = getelementptr inbounds i8, ptr %10, i64 24, !dbg !4374
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd21, i32 16, i1 false)
  %12 = load ptr, ptr %ptr, align 8
  store ptr %12, ptr %ptr22, align 8
  %13 = load ptr, ptr %ptr22, align 8, !dbg !4375
  %not23 = icmp eq ptr %13, null, !dbg !4375
  br i1 %not23, label %if.then24, label %if.exit25, !dbg !4375

if.then24:                                        ; preds = %checkok20
  br label %expr_block.exit, !dbg !4378

if.exit25:                                        ; preds = %checkok20
  %ptradd26 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !4379
  %14 = load i64, ptr %ptradd26, align 8, !dbg !4379
  %15 = inttoptr i64 %14 to ptr, !dbg !4379
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4367
  %16 = icmp eq ptr %15, %type, !dbg !4367
  br i1 %16, label %cache_hit, label %cache_miss, !dbg !4367

cache_miss:                                       ; preds = %if.exit25
  %ptradd27 = getelementptr inbounds i8, ptr %15, i64 16, !dbg !4367
  %17 = load ptr, ptr %ptradd27, align 8, !dbg !4367
  %18 = call ptr @.dyn_search(ptr %17, ptr @"$sel.release"), !dbg !4367
  store ptr %18, ptr %.inlinecache, align 8, !dbg !4367
  store ptr %15, ptr %.cachedtype, align 8, !dbg !4367
  br label %19, !dbg !4367

cache_hit:                                        ; preds = %if.exit25
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4367
  br label %19, !dbg !4367

19:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %18, %cache_miss ], !dbg !4367
  %20 = icmp eq ptr %fn_phi, null, !dbg !4367
  br i1 %20, label %missing_function, label %match, !dbg !4367

missing_function:                                 ; preds = %19
  store %"char[]" { ptr @.panic_msg.220, i64 44 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.file.221, i64 16 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.func.238, i64 7 }, ptr %indirectarg30, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, i32 105), !dbg !4380
  unreachable, !dbg !4380

match:                                            ; preds = %19
  %22 = load ptr, ptr %allocator, align 8, !dbg !4380
  %23 = load ptr, ptr %ptr22, align 8, !dbg !4380
  call void %fn_phi(ptr %22, ptr %23, i8 zeroext 0), !dbg !4380
  br label %expr_block.exit, !dbg !4380

expr_block.exit:                                  ; preds = %match, %if.then24
  br label %if.exit31, !dbg !4380

if.exit31:                                        ; preds = %expr_block.exit, %checkok13
  %24 = load ptr, ptr %self, align 8, !dbg !4381
  %checknull32 = icmp eq ptr %24, null, !dbg !4381
  %25 = call i1 @llvm.expect.i1(i1 %checknull32, i1 false), !dbg !4381
  br i1 %25, label %panic33, label %checkok37, !dbg !4381

checkok37:                                        ; preds = %if.exit31
  call void @llvm.memset.p0.i64(ptr align 8 %24, i8 0, i64 40, i1 false), !dbg !4381
  ret i64 0, !dbg !4381

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.238, i64 7 }, ptr %indirectarg2, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 39), !dbg !4369
  unreachable, !dbg !4369

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.238, i64 7 }, ptr %indirectarg6, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 41), !dbg !4370
  unreachable, !dbg !4370

panic9:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.238, i64 7 }, ptr %indirectarg12, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 42), !dbg !4373
  unreachable, !dbg !4373

panic16:                                          ; preds = %if.then14
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.238, i64 7 }, ptr %indirectarg19, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 42), !dbg !4374
  unreachable, !dbg !4374

panic33:                                          ; preds = %if.exit31
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.238, i64 7 }, ptr %indirectarg36, align 8
  %30 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %30(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 43), !dbg !4381
  unreachable, !dbg !4381
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.ByteWriter.str_view(ptr noalias sret(%"char[]") align 8 %0, ptr %1) #0 comdat !dbg !4382 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr9 = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg13 = alloca %"any[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %taddr23 = alloca i64, align 8
  %taddr24 = alloca i64, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %varargslots28 = alloca [2 x %any], align 16
  %indirectarg31 = alloca %"any[]", align 8
  %2 = icmp eq ptr %1, null, !dbg !4385
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4385
  br i1 %3, label %panic, label %checkok, !dbg !4385

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4386, metadata !DIExpression()), !dbg !4387
  %4 = load ptr, ptr %self, align 8, !dbg !4388
  %checknull = icmp eq ptr %4, null, !dbg !4388
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4388
  br i1 %5, label %panic3, label %checkok7, !dbg !4388

checkok7:                                         ; preds = %checkok
  %6 = load %"char[]", ptr %4, align 8, !dbg !4388
  %7 = extractvalue %"char[]" %6, 0, !dbg !4388
  %8 = extractvalue %"char[]" %6, 1, !dbg !4389
  %gt = icmp ugt i64 0, %8, !dbg !4389
  %9 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !4389
  br i1 %9, label %panic8, label %checkok14, !dbg !4389

checkok14:                                        ; preds = %checkok7
  %10 = load ptr, ptr %self, align 8, !dbg !4390
  %checknull15 = icmp eq ptr %10, null, !dbg !4390
  %11 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !4390
  br i1 %11, label %panic16, label %checkok20, !dbg !4390

checkok20:                                        ; preds = %checkok14
  %ptradd21 = getelementptr inbounds i8, ptr %10, i64 16, !dbg !4390
  %12 = load i64, ptr %ptradd21, align 8, !dbg !4390
  %add = add i64 0, %12, !dbg !4390
  %lt = icmp ult i64 %8, %add, !dbg !4390
  %sub = sub i64 %add, 1, !dbg !4390
  %13 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !4390
  br i1 %13, label %panic22, label %checkok32, !dbg !4390

checkok32:                                        ; preds = %checkok20
  %size = sub i64 %add, 0, !dbg !4391
  %14 = insertvalue %"char[]" undef, ptr %7, 0, !dbg !4391
  %15 = insertvalue %"char[]" %14, i64 %size, 1, !dbg !4391
  store %"char[]" %15, ptr %0, align 8, !dbg !4391
  ret void, !dbg !4391

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg2, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 46), !dbg !4387
  unreachable, !dbg !4387

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg6, align 8
  %17 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %17(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 48), !dbg !4388
  unreachable, !dbg !4388

panic8:                                           ; preds = %checkok7
  store i64 %8, ptr %taddr, align 8
  %18 = insertvalue %any undef, ptr %taddr, 0
  %19 = insertvalue %any %18, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr9, align 8
  %20 = insertvalue %any undef, ptr %taddr9, 0
  %21 = insertvalue %any %20, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg12, align 8
  store %any %19, ptr %varargslots, align 16
  %ptradd = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %21, ptr %ptradd, align 16
  %22 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %22, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg13, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 48, ptr align 8 %indirectarg13), !dbg !4391
  unreachable, !dbg !4391

panic16:                                          ; preds = %checkok14
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg19, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 48), !dbg !4390
  unreachable, !dbg !4390

panic22:                                          ; preds = %checkok20
  store i64 %sub, ptr %taddr23, align 8
  %24 = insertvalue %any undef, ptr %taddr23, 0
  %25 = insertvalue %any %24, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %8, ptr %taddr24, align 8
  %26 = insertvalue %any undef, ptr %taddr24, 0
  %27 = insertvalue %any %26, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.201, i64 8 }, ptr %indirectarg27, align 8
  store %any %25, ptr %varargslots28, align 16
  %ptradd29 = getelementptr inbounds i8, ptr %varargslots28, i64 16
  store %any %27, ptr %ptradd29, align 16
  %28 = insertvalue %"any[]" undef, ptr %varargslots28, 0
  %"$$temp30" = insertvalue %"any[]" %28, i64 2, 1
  store %"any[]" %"$$temp30", ptr %indirectarg31, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 48, ptr align 8 %indirectarg31), !dbg !4391
  unreachable, !dbg !4391
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteWriter.ensure_capacity(ptr %0, i64 %1) #0 comdat !dbg !4392 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %len = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %new_capacity = alloca i64, align 8
  %x = alloca i64, align 8
  %y = alloca i64, align 8
  %new_ptr = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg24 = alloca %"char[]", align 8
  %allocator = alloca %any, align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %indirectarg31 = alloca %"char[]", align 8
  %ptr = alloca ptr, align 8
  %new_size = alloca i64, align 8
  %blockret = alloca ptr, align 8
  %allocator35 = alloca %any, align 8
  %ptr36 = alloca ptr, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %.inlinecache49 = alloca ptr, align 8
  %.cachedtype50 = alloca ptr, align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %retparam = alloca ptr, align 8
  %.inlinecache64 = alloca ptr, align 8
  %.cachedtype65 = alloca ptr, align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %retparam77 = alloca ptr, align 8
  %indirectarg84 = alloca %"char[]", align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype65, align 8, !dbg !4395
  store ptr null, ptr %.cachedtype50, align 8, !dbg !4395
  store ptr null, ptr %.cachedtype, align 8, !dbg !4395
  %2 = icmp eq ptr %0, null, !dbg !4395
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4395
  br i1 %3, label %panic, label %checkok, !dbg !4395

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4396, metadata !DIExpression()), !dbg !4397
  store i64 %1, ptr %len, align 8
  call void @llvm.dbg.declare(metadata ptr %len, metadata !4398, metadata !DIExpression()), !dbg !4399
  %4 = load ptr, ptr %self, align 8, !dbg !4400
  %checknull = icmp eq ptr %4, null, !dbg !4400
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4400
  br i1 %5, label %panic3, label %checkok7, !dbg !4400

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 8, !dbg !4400
  %6 = load i64, ptr %ptradd, align 8, !dbg !4400
  %7 = load i64, ptr %len, align 8, !dbg !4401
  %gt = icmp ugt i64 %6, %7, !dbg !4400
  br i1 %gt, label %if.then, label %if.exit, !dbg !4400

if.then:                                          ; preds = %checkok7
  ret i64 0

if.exit:                                          ; preds = %checkok7
  %8 = load ptr, ptr %self, align 8, !dbg !4402
  %checknull8 = icmp eq ptr %8, null, !dbg !4402
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4402
  br i1 %9, label %panic9, label %checkok13, !dbg !4402

checkok13:                                        ; preds = %if.exit
  %ptradd14 = getelementptr inbounds i8, ptr %8, i64 24, !dbg !4402
  %10 = load ptr, ptr %ptradd14, align 8, !dbg !4402
  %not = icmp eq ptr %10, null, !dbg !4402
  br i1 %not, label %if.then15, label %if.exit16, !dbg !4402

if.then15:                                        ; preds = %checkok13
  ret i64 ptrtoint (ptr @"std.io.IoError$OUT_OF_SPACE" to i64), !dbg !4403

if.exit16:                                        ; preds = %checkok13
  %11 = load i64, ptr %len, align 8, !dbg !4404
  %gt17 = icmp ugt i64 16, %11, !dbg !4404
  br i1 %gt17, label %if.then18, label %if.exit19, !dbg !4404

if.then18:                                        ; preds = %if.exit16
  store i64 16, ptr %len, align 8, !dbg !4405
  br label %if.exit19, !dbg !4405

if.exit19:                                        ; preds = %if.then18, %if.exit16
  call void @llvm.dbg.declare(metadata ptr %new_capacity, metadata !4406, metadata !DIExpression()), !dbg !4407
  %12 = load i64, ptr %len, align 8
  store i64 %12, ptr %x, align 8
  call void @llvm.dbg.declare(metadata ptr %y, metadata !4408, metadata !DIExpression()), !dbg !4410
  store i64 1, ptr %y, align 8, !dbg !4412
  br label %loop.cond, !dbg !4413

loop.cond:                                        ; preds = %loop.body, %if.exit19
  %13 = load i64, ptr %y, align 8, !dbg !4414
  %14 = load i64, ptr %x, align 8, !dbg !4416
  %lt = icmp ult i64 %13, %14, !dbg !4414
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !4414

loop.body:                                        ; preds = %loop.cond
  %15 = load i64, ptr %y, align 8, !dbg !4417
  %16 = load i64, ptr %y, align 8, !dbg !4418
  %add = add i64 %15, %16, !dbg !4417
  store i64 %add, ptr %y, align 8, !dbg !4417
  br label %loop.cond, !dbg !4417

loop.exit:                                        ; preds = %loop.cond
  %17 = load i64, ptr %y, align 8, !dbg !4419
  store i64 %17, ptr %new_capacity, align 8, !dbg !4419
  call void @llvm.dbg.declare(metadata ptr %new_ptr, metadata !4420, metadata !DIExpression()), !dbg !4421
  %18 = load ptr, ptr %self, align 8, !dbg !4422
  %checknull20 = icmp eq ptr %18, null, !dbg !4422
  %19 = call i1 @llvm.expect.i1(i1 %checknull20, i1 false), !dbg !4422
  br i1 %19, label %panic21, label %checkok25, !dbg !4422

checkok25:                                        ; preds = %loop.exit
  %ptradd26 = getelementptr inbounds i8, ptr %18, i64 24, !dbg !4422
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 %ptradd26, i32 16, i1 false)
  %20 = load ptr, ptr %self, align 8, !dbg !4423
  %checknull27 = icmp eq ptr %20, null, !dbg !4423
  %21 = call i1 @llvm.expect.i1(i1 %checknull27, i1 false), !dbg !4423
  br i1 %21, label %panic28, label %checkok32, !dbg !4423

checkok32:                                        ; preds = %checkok25
  %22 = load ptr, ptr %20, align 8, !dbg !4423
  store ptr %22, ptr %ptr, align 8
  %23 = load i64, ptr %new_capacity, align 8
  store i64 %23, ptr %new_size, align 8
  %24 = load i64, ptr %new_size, align 8, !dbg !4424
  %not33 = icmp eq i64 %24, 0, !dbg !4424
  br i1 %not33, label %if.then34, label %if.exit45, !dbg !4424

if.then34:                                        ; preds = %checkok32
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator35, ptr align 8 %allocator, i32 16, i1 false)
  %25 = load ptr, ptr %ptr, align 8
  store ptr %25, ptr %ptr36, align 8
  %26 = load ptr, ptr %ptr36, align 8, !dbg !4427
  %not37 = icmp eq ptr %26, null, !dbg !4427
  br i1 %not37, label %if.then38, label %if.exit39, !dbg !4427

if.then38:                                        ; preds = %if.then34
  br label %expr_block.exit, !dbg !4431

if.exit39:                                        ; preds = %if.then34
  %ptradd40 = getelementptr inbounds i8, ptr %allocator35, i64 8, !dbg !4432
  %27 = load i64, ptr %ptradd40, align 8, !dbg !4432
  %28 = inttoptr i64 %27 to ptr, !dbg !4432
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4395
  %29 = icmp eq ptr %28, %type, !dbg !4395
  br i1 %29, label %cache_hit, label %cache_miss, !dbg !4395

cache_miss:                                       ; preds = %if.exit39
  %ptradd41 = getelementptr inbounds i8, ptr %28, i64 16, !dbg !4395
  %30 = load ptr, ptr %ptradd41, align 8, !dbg !4395
  %31 = call ptr @.dyn_search(ptr %30, ptr @"$sel.release"), !dbg !4395
  store ptr %31, ptr %.inlinecache, align 8, !dbg !4395
  store ptr %28, ptr %.cachedtype, align 8, !dbg !4395
  br label %32, !dbg !4395

cache_hit:                                        ; preds = %if.exit39
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4395
  br label %32, !dbg !4395

32:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %31, %cache_miss ], !dbg !4395
  %33 = icmp eq ptr %fn_phi, null, !dbg !4395
  br i1 %33, label %missing_function, label %match, !dbg !4395

missing_function:                                 ; preds = %32
  store %"char[]" { ptr @.panic_msg.220, i64 44 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.221, i64 16 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.239, i64 15 }, ptr %indirectarg44, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 105), !dbg !4433
  unreachable, !dbg !4433

match:                                            ; preds = %32
  %35 = load ptr, ptr %allocator35, align 8, !dbg !4433
  %36 = load ptr, ptr %ptr36, align 8, !dbg !4433
  call void %fn_phi(ptr %35, ptr %36, i8 zeroext 0), !dbg !4433
  br label %expr_block.exit, !dbg !4433

expr_block.exit:                                  ; preds = %match, %if.then38
  store ptr null, ptr %blockret, align 8, !dbg !4434
  br label %expr_block.exit81, !dbg !4434

if.exit45:                                        ; preds = %checkok32
  %37 = load ptr, ptr %ptr, align 8, !dbg !4435
  %not46 = icmp eq ptr %37, null, !dbg !4435
  br i1 %not46, label %if.then47, label %if.exit62, !dbg !4435

if.then47:                                        ; preds = %if.exit45
  %ptradd48 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !4436
  %38 = load i64, ptr %ptradd48, align 8, !dbg !4436
  %39 = inttoptr i64 %38 to ptr, !dbg !4436
  %type51 = load ptr, ptr %.cachedtype50, align 8, !dbg !4395
  %40 = icmp eq ptr %39, %type51, !dbg !4395
  br i1 %40, label %cache_hit54, label %cache_miss52, !dbg !4395

cache_miss52:                                     ; preds = %if.then47
  %ptradd53 = getelementptr inbounds i8, ptr %39, i64 16, !dbg !4395
  %41 = load ptr, ptr %ptradd53, align 8, !dbg !4395
  %42 = call ptr @.dyn_search(ptr %41, ptr @"$sel.acquire"), !dbg !4395
  store ptr %42, ptr %.inlinecache49, align 8, !dbg !4395
  store ptr %39, ptr %.cachedtype50, align 8, !dbg !4395
  br label %43, !dbg !4395

cache_hit54:                                      ; preds = %if.then47
  %cache_hit_fn55 = load ptr, ptr %.inlinecache49, align 8, !dbg !4395
  br label %43, !dbg !4395

43:                                               ; preds = %cache_hit54, %cache_miss52
  %fn_phi56 = phi ptr [ %cache_hit_fn55, %cache_hit54 ], [ %42, %cache_miss52 ], !dbg !4395
  %44 = icmp eq ptr %fn_phi56, null, !dbg !4395
  br i1 %44, label %missing_function57, label %match61, !dbg !4395

missing_function57:                               ; preds = %43
  store %"char[]" { ptr @.panic_msg.228, i64 44 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.221, i64 16 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.239, i64 15 }, ptr %indirectarg60, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 95), !dbg !4438
  unreachable, !dbg !4438

match61:                                          ; preds = %43
  %46 = load ptr, ptr %allocator, align 8
  %47 = load i64, ptr %new_size, align 8
  %48 = call i64 %fn_phi56(ptr %retparam, ptr %46, i64 %47, i32 0, i64 0), !dbg !4438
  %not_err = icmp eq i64 %48, 0, !dbg !4438
  %49 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4438
  br i1 %49, label %after_check, label %assign_optional, !dbg !4438

assign_optional:                                  ; preds = %match61
  store i64 %48, ptr %error_var, align 8, !dbg !4438
  br label %guard_block, !dbg !4438

after_check:                                      ; preds = %match61
  %50 = load ptr, ptr %retparam, align 8, !dbg !4438
  store ptr %50, ptr %blockret, align 8, !dbg !4438
  br label %expr_block.exit81, !dbg !4438

if.exit62:                                        ; preds = %if.exit45
  %ptradd63 = getelementptr inbounds i8, ptr %allocator, i64 8, !dbg !4439
  %51 = load i64, ptr %ptradd63, align 8, !dbg !4439
  %52 = inttoptr i64 %51 to ptr, !dbg !4439
  %type66 = load ptr, ptr %.cachedtype65, align 8, !dbg !4395
  %53 = icmp eq ptr %52, %type66, !dbg !4395
  br i1 %53, label %cache_hit69, label %cache_miss67, !dbg !4395

cache_miss67:                                     ; preds = %if.exit62
  %ptradd68 = getelementptr inbounds i8, ptr %52, i64 16, !dbg !4395
  %54 = load ptr, ptr %ptradd68, align 8, !dbg !4395
  %55 = call ptr @.dyn_search(ptr %54, ptr @"$sel.resize"), !dbg !4395
  store ptr %55, ptr %.inlinecache64, align 8, !dbg !4395
  store ptr %52, ptr %.cachedtype65, align 8, !dbg !4395
  br label %56, !dbg !4395

cache_hit69:                                      ; preds = %if.exit62
  %cache_hit_fn70 = load ptr, ptr %.inlinecache64, align 8, !dbg !4395
  br label %56, !dbg !4395

56:                                               ; preds = %cache_hit69, %cache_miss67
  %fn_phi71 = phi ptr [ %cache_hit_fn70, %cache_hit69 ], [ %55, %cache_miss67 ], !dbg !4395
  %57 = icmp eq ptr %fn_phi71, null, !dbg !4395
  br i1 %57, label %missing_function72, label %match76, !dbg !4395

missing_function72:                               ; preds = %56
  store %"char[]" { ptr @.panic_msg.229, i64 43 }, ptr %indirectarg73, align 8
  store %"char[]" { ptr @.file.221, i64 16 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.func.239, i64 15 }, ptr %indirectarg75, align 8
  %58 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %58(ptr align 8 %indirectarg73, ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, i32 96), !dbg !4441
  unreachable, !dbg !4441

match76:                                          ; preds = %56
  %59 = load ptr, ptr %allocator, align 8
  %60 = load ptr, ptr %ptr, align 8
  %61 = load i64, ptr %new_size, align 8
  %62 = call i64 %fn_phi71(ptr %retparam77, ptr %59, ptr %60, i64 %61, i64 0), !dbg !4441
  %not_err78 = icmp eq i64 %62, 0, !dbg !4441
  %63 = call i1 @llvm.expect.i1(i1 %not_err78, i1 true), !dbg !4441
  br i1 %63, label %after_check80, label %assign_optional79, !dbg !4441

assign_optional79:                                ; preds = %match76
  store i64 %62, ptr %error_var, align 8, !dbg !4441
  br label %guard_block, !dbg !4441

after_check80:                                    ; preds = %match76
  %64 = load ptr, ptr %retparam77, align 8, !dbg !4441
  store ptr %64, ptr %blockret, align 8, !dbg !4441
  br label %expr_block.exit81, !dbg !4441

expr_block.exit81:                                ; preds = %after_check80, %after_check, %expr_block.exit
  br label %noerr_block, !dbg !4441

guard_block:                                      ; preds = %assign_optional79, %assign_optional
  %65 = load i64, ptr %error_var, align 8, !dbg !4441
  ret i64 %65, !dbg !4441

noerr_block:                                      ; preds = %expr_block.exit81
  %66 = load ptr, ptr %blockret, align 8, !dbg !4441
  store ptr %66, ptr %new_ptr, align 8, !dbg !4441
  %67 = load ptr, ptr %self, align 8, !dbg !4442
  %checknull82 = icmp eq ptr %67, null, !dbg !4442
  %68 = call i1 @llvm.expect.i1(i1 %checknull82, i1 false), !dbg !4442
  br i1 %68, label %panic83, label %checkok87, !dbg !4442

checkok87:                                        ; preds = %noerr_block
  %69 = load ptr, ptr %new_ptr, align 8, !dbg !4443
  %70 = load i64, ptr %new_capacity, align 8, !dbg !4444
  %add88 = add i64 0, %70, !dbg !4444
  %size = sub i64 %add88, 0, !dbg !4444
  %71 = insertvalue %"char[]" undef, ptr %69, 0, !dbg !4444
  %72 = insertvalue %"char[]" %71, i64 %size, 1, !dbg !4444
  store %"char[]" %72, ptr %67, align 8, !dbg !4444
  ret i64 0, !dbg !4444

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.239, i64 15 }, ptr %indirectarg2, align 8
  %73 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %73(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 51), !dbg !4397
  unreachable, !dbg !4397

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.239, i64 15 }, ptr %indirectarg6, align 8
  %74 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %74(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 53), !dbg !4400
  unreachable, !dbg !4400

panic9:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.239, i64 15 }, ptr %indirectarg12, align 8
  %75 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %75(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 54), !dbg !4402
  unreachable, !dbg !4402

panic21:                                          ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg23, align 8
  store %"char[]" { ptr @.func.239, i64 15 }, ptr %indirectarg24, align 8
  %76 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %76(ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, ptr align 8 %indirectarg24, i32 57), !dbg !4422
  unreachable, !dbg !4422

panic28:                                          ; preds = %checkok25
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg30, align 8
  store %"char[]" { ptr @.func.239, i64 15 }, ptr %indirectarg31, align 8
  %77 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %77(ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, ptr align 8 %indirectarg31, i32 57), !dbg !4423
  unreachable, !dbg !4423

panic83:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg84, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.func.239, i64 15 }, ptr %indirectarg86, align 8
  %78 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %78(ptr align 8 %indirectarg84, ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, i32 58), !dbg !4442
  unreachable, !dbg !4442
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteWriter.write(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !4445 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %error_var = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr24 = alloca i64, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg29 = alloca %"any[]", align 8
  %dst = alloca ptr, align 8
  %src = alloca ptr, align 8
  %len = alloca i64, align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %3 = icmp eq ptr %1, null, !dbg !4448
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !4448
  br i1 %4, label %panic, label %checkok, !dbg !4448

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4449, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4451, metadata !DIExpression()), !dbg !4452
  %5 = load ptr, ptr %self, align 8, !dbg !4453
  %checknull = icmp eq ptr %5, null, !dbg !4453
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4453
  br i1 %6, label %panic3, label %checkok7, !dbg !4453

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !4453
  %7 = load i64, ptr %ptradd, align 8, !dbg !4453
  %ptradd8 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4454
  %8 = load i64, ptr %ptradd8, align 8, !dbg !4454
  %add = add i64 %7, %8, !dbg !4453
  %9 = load ptr, ptr %self, align 8, !dbg !4453
  %10 = call i64 @std.io.ByteWriter.ensure_capacity(ptr %9, i64 %add) #5, !dbg !4455
  %not_err = icmp eq i64 %10, 0, !dbg !4455
  %11 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4455
  br i1 %11, label %after_check, label %assign_optional, !dbg !4455

assign_optional:                                  ; preds = %checkok7
  store i64 %10, ptr %error_var, align 8, !dbg !4455
  br label %guard_block, !dbg !4455

after_check:                                      ; preds = %checkok7
  br label %noerr_block, !dbg !4455

guard_block:                                      ; preds = %assign_optional
  %12 = load i64, ptr %error_var, align 8, !dbg !4455
  ret i64 %12, !dbg !4455

noerr_block:                                      ; preds = %after_check
  %13 = load ptr, ptr %self, align 8, !dbg !4456
  %checknull9 = icmp eq ptr %13, null, !dbg !4456
  %14 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !4456
  br i1 %14, label %panic10, label %checkok14, !dbg !4456

checkok14:                                        ; preds = %noerr_block
  %ptradd15 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !4456
  %15 = load i64, ptr %ptradd15, align 8, !dbg !4456
  %16 = load ptr, ptr %13, align 8, !dbg !4456
  %17 = load ptr, ptr %self, align 8, !dbg !4457
  %checknull16 = icmp eq ptr %17, null, !dbg !4457
  %18 = call i1 @llvm.expect.i1(i1 %checknull16, i1 false), !dbg !4457
  br i1 %18, label %panic17, label %checkok21, !dbg !4457

checkok21:                                        ; preds = %checkok14
  %ptradd22 = getelementptr inbounds i8, ptr %17, i64 16, !dbg !4457
  %19 = load i64, ptr %ptradd22, align 8, !dbg !4457
  %ge = icmp uge i64 %19, %15, !dbg !4457
  %20 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !4457
  br i1 %20, label %panic23, label %checkok30, !dbg !4457

checkok30:                                        ; preds = %checkok21
  %ptradd31 = getelementptr inbounds i8, ptr %16, i64 %19, !dbg !4457
  store ptr %ptradd31, ptr %dst, align 8
  %21 = load ptr, ptr %2, align 8, !dbg !4458
  store ptr %21, ptr %src, align 8
  %ptradd32 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4459
  %22 = load i64, ptr %ptradd32, align 8
  store i64 %22, ptr %len, align 8
  %23 = load i64, ptr %len, align 8, !dbg !4460
  %eq = icmp eq i64 0, %23, !dbg !4460
  br i1 %eq, label %or.phi, label %or.rhs, !dbg !4460

or.rhs:                                           ; preds = %checkok30
  %24 = load ptr, ptr %dst, align 8, !dbg !4464
  %25 = load i64, ptr %len, align 8, !dbg !4465
  %ptradd_any = getelementptr i8, ptr %24, i64 %25, !dbg !4465
  %26 = load ptr, ptr %src, align 8, !dbg !4466
  %le = icmp ule ptr %ptradd_any, %26, !dbg !4464
  br label %or.phi, !dbg !4464

or.phi:                                           ; preds = %or.rhs, %checkok30
  %val = phi i1 [ true, %checkok30 ], [ %le, %or.rhs ], !dbg !4464
  br i1 %val, label %or.phi36, label %or.rhs33, !dbg !4464

or.rhs33:                                         ; preds = %or.phi
  %27 = load ptr, ptr %src, align 8, !dbg !4467
  %28 = load i64, ptr %len, align 8, !dbg !4468
  %ptradd_any34 = getelementptr i8, ptr %27, i64 %28, !dbg !4468
  %29 = load ptr, ptr %dst, align 8, !dbg !4469
  %le35 = icmp ule ptr %ptradd_any34, %29, !dbg !4467
  br label %or.phi36, !dbg !4467

or.phi36:                                         ; preds = %or.rhs33, %or.phi
  %val37 = phi i1 [ true, %or.phi ], [ %le35, %or.rhs33 ], !dbg !4467
  br i1 %val37, label %assert_ok, label %assert_fail, !dbg !4467

assert_fail:                                      ; preds = %or.phi36
  store %"char[]" { ptr @.panic_msg.232, i64 95 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file.233, i64 6 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg40, align 8
  %30 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %30(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 309), !dbg !4460
  unreachable, !dbg !4460

assert_ok:                                        ; preds = %or.phi36
  %31 = load ptr, ptr %dst, align 8, !dbg !4470
  %32 = load ptr, ptr %src, align 8, !dbg !4471
  %33 = load i64, ptr %len, align 8, !dbg !4472
  call void @llvm.memcpy.p0.p0.i64(ptr %31, ptr %32, i64 %33, i1 false), !dbg !4473
  %34 = load ptr, ptr %self, align 8, !dbg !4474
  %checknull41 = icmp eq ptr %34, null, !dbg !4474
  %35 = call i1 @llvm.expect.i1(i1 %checknull41, i1 false), !dbg !4474
  br i1 %35, label %panic42, label %checkok46, !dbg !4474

checkok46:                                        ; preds = %assert_ok
  %ptradd47 = getelementptr inbounds i8, ptr %34, i64 16, !dbg !4474
  %36 = load i64, ptr %ptradd47, align 8, !dbg !4474
  %ptradd48 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4475
  %37 = load i64, ptr %ptradd48, align 8, !dbg !4475
  %add49 = add i64 %36, %37, !dbg !4474
  store i64 %add49, ptr %ptradd47, align 8, !dbg !4474
  %ptradd50 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4476
  %38 = load i64, ptr %ptradd50, align 8, !dbg !4476
  store i64 %38, ptr %0, align 8, !dbg !4476
  ret i64 0, !dbg !4476

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg2, align 8
  %39 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %39(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 61), !dbg !4450
  unreachable, !dbg !4450

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg6, align 8
  %40 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %40(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 63), !dbg !4453
  unreachable, !dbg !4453

panic10:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg13, align 8
  %41 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %41(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 64), !dbg !4456
  unreachable, !dbg !4456

panic17:                                          ; preds = %checkok14
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg20, align 8
  %42 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %42(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 64), !dbg !4457
  unreachable, !dbg !4457

panic23:                                          ; preds = %checkok21
  store i64 %15, ptr %taddr, align 8
  %43 = insertvalue %any undef, ptr %taddr, 0
  %44 = insertvalue %any %43, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %19, ptr %taddr24, align 8
  %45 = insertvalue %any undef, ptr %taddr24, 0
  %46 = insertvalue %any %45, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg27, align 8
  store %any %44, ptr %varargslots, align 16
  %ptradd28 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %46, ptr %ptradd28, align 16
  %47 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %47, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg29, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 64, ptr align 8 %indirectarg29), !dbg !4457
  unreachable, !dbg !4457

panic42:                                          ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.210, i64 5 }, ptr %indirectarg45, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 65), !dbg !4474
  unreachable, !dbg !4474
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteWriter.write_byte(ptr %0, i8 %1) #0 comdat !dbg !4477 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %c = alloca i8, align 1
  %error_var = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr24 = alloca i64, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg29 = alloca %"any[]", align 8
  %2 = icmp eq ptr %0, null, !dbg !4480
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4480
  br i1 %3, label %panic, label %checkok, !dbg !4480

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4481, metadata !DIExpression()), !dbg !4482
  store i8 %1, ptr %c, align 1
  call void @llvm.dbg.declare(metadata ptr %c, metadata !4483, metadata !DIExpression()), !dbg !4484
  %4 = load ptr, ptr %self, align 8, !dbg !4485
  %checknull = icmp eq ptr %4, null, !dbg !4485
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4485
  br i1 %5, label %panic3, label %checkok7, !dbg !4485

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !4485
  %6 = load i64, ptr %ptradd, align 8, !dbg !4485
  %add = add i64 %6, 1, !dbg !4485
  %7 = load ptr, ptr %self, align 8, !dbg !4485
  %8 = call i64 @std.io.ByteWriter.ensure_capacity(ptr %7, i64 %add) #5, !dbg !4486
  %not_err = icmp eq i64 %8, 0, !dbg !4486
  %9 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4486
  br i1 %9, label %after_check, label %assign_optional, !dbg !4486

assign_optional:                                  ; preds = %checkok7
  store i64 %8, ptr %error_var, align 8, !dbg !4486
  br label %guard_block, !dbg !4486

after_check:                                      ; preds = %checkok7
  br label %noerr_block, !dbg !4486

guard_block:                                      ; preds = %assign_optional
  %10 = load i64, ptr %error_var, align 8, !dbg !4486
  ret i64 %10, !dbg !4486

noerr_block:                                      ; preds = %after_check
  %11 = load ptr, ptr %self, align 8, !dbg !4487
  %checknull8 = icmp eq ptr %11, null, !dbg !4487
  %12 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4487
  br i1 %12, label %panic9, label %checkok13, !dbg !4487

checkok13:                                        ; preds = %noerr_block
  %ptradd14 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !4487
  %13 = load i64, ptr %ptradd14, align 8, !dbg !4487
  %14 = load ptr, ptr %11, align 8, !dbg !4487
  %15 = load ptr, ptr %self, align 8, !dbg !4488
  %checknull15 = icmp eq ptr %15, null, !dbg !4488
  %16 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !4488
  br i1 %16, label %panic16, label %checkok20, !dbg !4488

checkok20:                                        ; preds = %checkok13
  %ptradd21 = getelementptr inbounds i8, ptr %15, i64 16, !dbg !4488
  %17 = load i64, ptr %ptradd21, align 8, !dbg !4488
  %add22 = add i64 %17, 1, !dbg !4488
  store i64 %add22, ptr %ptradd21, align 8, !dbg !4488
  %ge = icmp uge i64 %17, %13, !dbg !4488
  %18 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !4488
  br i1 %18, label %panic23, label %checkok30, !dbg !4488

checkok30:                                        ; preds = %checkok20
  %ptradd31 = getelementptr inbounds i8, ptr %14, i64 %17, !dbg !4488
  %19 = load i8, ptr %c, align 1, !dbg !4489
  store i8 %19, ptr %ptradd31, align 1, !dbg !4489
  ret i64 0, !dbg !4489

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg2, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 69), !dbg !4482
  unreachable, !dbg !4482

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg6, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 71), !dbg !4485
  unreachable, !dbg !4485

panic9:                                           ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg12, align 8
  %22 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %22(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 72), !dbg !4487
  unreachable, !dbg !4487

panic16:                                          ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg19, align 8
  %23 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %23(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 72), !dbg !4488
  unreachable, !dbg !4488

panic23:                                          ; preds = %checkok20
  store i64 %13, ptr %taddr, align 8
  %24 = insertvalue %any undef, ptr %taddr, 0
  %25 = insertvalue %any %24, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %17, ptr %taddr24, align 8
  %26 = insertvalue %any undef, ptr %taddr24, 0
  %27 = insertvalue %any %26, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.211, i64 10 }, ptr %indirectarg27, align 8
  store %any %25, ptr %varargslots, align 16
  %ptradd28 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %27, ptr %ptradd28, align 16
  %28 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %28, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg29, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 72, ptr align 8 %indirectarg29), !dbg !4488
  unreachable, !dbg !4488
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.ByteWriter.read_from(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !4490 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %start_index = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %available = alloca i64, align 8
  %error_var = alloca i64, align 8
  %.inlinecache11 = alloca ptr, align 8
  %.cachedtype12 = alloca ptr, align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %error_var22 = alloca i64, align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %read = alloca i64, align 8
  %error_var35 = alloca i64, align 8
  %indirectarg38 = alloca %"char[]", align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr50 = alloca i64, align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %indirectarg53 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg55 = alloca %"any[]", align 8
  %.inlinecache59 = alloca ptr, align 8
  %.cachedtype60 = alloca ptr, align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %retparam72 = alloca i64, align 8
  %indirectarg73 = alloca %"char[]", align 8
  %indirectarg81 = alloca %"char[]", align 8
  %indirectarg82 = alloca %"char[]", align 8
  %indirectarg83 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg91 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %indirectarg98 = alloca %"char[]", align 8
  %error_var102 = alloca i64, align 8
  %len_to_read = alloca i64, align 8
  %indirectarg112 = alloca %"char[]", align 8
  %indirectarg113 = alloca %"char[]", align 8
  %indirectarg114 = alloca %"char[]", align 8
  %indirectarg119 = alloca %"char[]", align 8
  %indirectarg120 = alloca %"char[]", align 8
  %indirectarg121 = alloca %"char[]", align 8
  %error_var127 = alloca i64, align 8
  %indirectarg130 = alloca %"char[]", align 8
  %indirectarg131 = alloca %"char[]", align 8
  %indirectarg132 = alloca %"char[]", align 8
  %indirectarg142 = alloca %"char[]", align 8
  %indirectarg143 = alloca %"char[]", align 8
  %indirectarg144 = alloca %"char[]", align 8
  %indirectarg149 = alloca %"char[]", align 8
  %indirectarg150 = alloca %"char[]", align 8
  %indirectarg151 = alloca %"char[]", align 8
  %read156 = alloca i64, align 8
  %error_var157 = alloca i64, align 8
  %indirectarg160 = alloca %"char[]", align 8
  %indirectarg161 = alloca %"char[]", align 8
  %indirectarg162 = alloca %"char[]", align 8
  %indirectarg166 = alloca %"char[]", align 8
  %indirectarg167 = alloca %"char[]", align 8
  %indirectarg168 = alloca %"char[]", align 8
  %taddr173 = alloca i64, align 8
  %taddr174 = alloca i64, align 8
  %indirectarg175 = alloca %"char[]", align 8
  %indirectarg176 = alloca %"char[]", align 8
  %indirectarg177 = alloca %"char[]", align 8
  %varargslots178 = alloca [2 x %any], align 16
  %indirectarg181 = alloca %"any[]", align 8
  %.inlinecache186 = alloca ptr, align 8
  %.cachedtype187 = alloca ptr, align 8
  %indirectarg195 = alloca %"char[]", align 8
  %indirectarg196 = alloca %"char[]", align 8
  %indirectarg197 = alloca %"char[]", align 8
  %retparam199 = alloca i64, align 8
  %indirectarg200 = alloca %"char[]", align 8
  %indirectarg208 = alloca %"char[]", align 8
  %indirectarg209 = alloca %"char[]", align 8
  %indirectarg210 = alloca %"char[]", align 8
  %reterr215 = alloca i64, align 8
  %indirectarg218 = alloca %"char[]", align 8
  %indirectarg219 = alloca %"char[]", align 8
  %indirectarg220 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype187, align 8, !dbg !4493
  store ptr null, ptr %.cachedtype60, align 8, !dbg !4493
  store ptr null, ptr %.cachedtype12, align 8, !dbg !4493
  store ptr null, ptr %.cachedtype, align 8, !dbg !4493
  %3 = icmp eq ptr %1, null, !dbg !4493
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !4493
  br i1 %4, label %panic, label %checkok, !dbg !4493

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4494, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4496, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.declare(metadata ptr %start_index, metadata !4498, metadata !DIExpression()), !dbg !4499
  %5 = load ptr, ptr %self, align 8, !dbg !4500
  %checknull = icmp eq ptr %5, null, !dbg !4500
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4500
  br i1 %6, label %panic3, label %checkok7, !dbg !4500

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !4500
  %7 = load i64, ptr %ptradd, align 8, !dbg !4500
  store i64 %7, ptr %start_index, align 8, !dbg !4500
  %ptradd8 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4501
  %8 = load i64, ptr %ptradd8, align 8, !dbg !4501
  %9 = inttoptr i64 %8 to ptr, !dbg !4501
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4493
  %10 = icmp eq ptr %9, %type, !dbg !4493
  br i1 %10, label %cache_hit, label %cache_miss, !dbg !4493

cache_miss:                                       ; preds = %checkok7
  %ptradd9 = getelementptr inbounds i8, ptr %9, i64 16, !dbg !4493
  %11 = load ptr, ptr %ptradd9, align 8, !dbg !4493
  %12 = call ptr @.dyn_search(ptr %11, ptr @"$sel.available"), !dbg !4493
  store ptr %12, ptr %.inlinecache, align 8, !dbg !4493
  store ptr %9, ptr %.cachedtype, align 8, !dbg !4493
  br label %13, !dbg !4493

cache_hit:                                        ; preds = %checkok7
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4493
  br label %13, !dbg !4493

13:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %12, %cache_miss ], !dbg !4493
  %ptrbool = icmp ne ptr %fn_phi, null, !dbg !4493
  br i1 %ptrbool, label %if.then, label %if.exit, !dbg !4493

if.then:                                          ; preds = %13
  br label %loop.cond, !dbg !4502

loop.cond:                                        ; preds = %checkok84, %if.then
  call void @llvm.dbg.declare(metadata ptr %available, metadata !4504, metadata !DIExpression()), !dbg !4506
  %ptradd10 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4507
  %14 = load i64, ptr %ptradd10, align 8, !dbg !4507
  %15 = inttoptr i64 %14 to ptr, !dbg !4507
  %type13 = load ptr, ptr %.cachedtype12, align 8, !dbg !4493
  %16 = icmp eq ptr %15, %type13, !dbg !4493
  br i1 %16, label %cache_hit16, label %cache_miss14, !dbg !4493

cache_miss14:                                     ; preds = %loop.cond
  %ptradd15 = getelementptr inbounds i8, ptr %15, i64 16, !dbg !4493
  %17 = load ptr, ptr %ptradd15, align 8, !dbg !4493
  %18 = call ptr @.dyn_search(ptr %17, ptr @"$sel.available"), !dbg !4493
  store ptr %18, ptr %.inlinecache11, align 8, !dbg !4493
  store ptr %15, ptr %.cachedtype12, align 8, !dbg !4493
  br label %19, !dbg !4493

cache_hit16:                                      ; preds = %loop.cond
  %cache_hit_fn17 = load ptr, ptr %.inlinecache11, align 8, !dbg !4493
  br label %19, !dbg !4493

19:                                               ; preds = %cache_hit16, %cache_miss14
  %fn_phi18 = phi ptr [ %cache_hit_fn17, %cache_hit16 ], [ %18, %cache_miss14 ], !dbg !4493
  %20 = icmp eq ptr %fn_phi18, null, !dbg !4493
  br i1 %20, label %missing_function, label %match, !dbg !4493

missing_function:                                 ; preds = %19
  store %"char[]" { ptr @.panic_msg.241, i64 46 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg21, align 8
  %21 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %21(ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, i32 84), !dbg !4507
  unreachable, !dbg !4507

match:                                            ; preds = %19
  %22 = load ptr, ptr %2, align 8
  %23 = call i64 %fn_phi18(ptr %retparam, ptr %22), !dbg !4507
  %not_err = icmp eq i64 %23, 0, !dbg !4507
  %24 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4507
  br i1 %24, label %after_check, label %assign_optional, !dbg !4507

assign_optional:                                  ; preds = %match
  store i64 %23, ptr %error_var, align 8, !dbg !4507
  br label %guard_block, !dbg !4507

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !4507

guard_block:                                      ; preds = %assign_optional
  %25 = load i64, ptr %error_var, align 8, !dbg !4507
  ret i64 %25, !dbg !4507

noerr_block:                                      ; preds = %after_check
  %26 = load i64, ptr %retparam, align 8, !dbg !4507
  store i64 %26, ptr %available, align 8, !dbg !4507
  %27 = load i64, ptr %available, align 8, !dbg !4507
  %intbool = icmp ne i64 %27, 0, !dbg !4507
  br i1 %intbool, label %loop.body, label %loop.exit, !dbg !4507

loop.body:                                        ; preds = %noerr_block
  %28 = load ptr, ptr %self, align 8, !dbg !4508
  %checknull23 = icmp eq ptr %28, null, !dbg !4508
  %29 = call i1 @llvm.expect.i1(i1 %checknull23, i1 false), !dbg !4508
  br i1 %29, label %panic24, label %checkok28, !dbg !4508

checkok28:                                        ; preds = %loop.body
  %ptradd29 = getelementptr inbounds i8, ptr %28, i64 16, !dbg !4508
  %30 = load i64, ptr %ptradd29, align 8, !dbg !4508
  %31 = load i64, ptr %available, align 8, !dbg !4510
  %add = add i64 %30, %31, !dbg !4508
  %32 = load ptr, ptr %self, align 8, !dbg !4508
  %33 = call i64 @std.io.ByteWriter.ensure_capacity(ptr %32, i64 %add) #5, !dbg !4511
  %not_err30 = icmp eq i64 %33, 0, !dbg !4511
  %34 = call i1 @llvm.expect.i1(i1 %not_err30, i1 true), !dbg !4511
  br i1 %34, label %after_check32, label %assign_optional31, !dbg !4511

assign_optional31:                                ; preds = %checkok28
  store i64 %33, ptr %error_var22, align 8, !dbg !4511
  br label %guard_block33, !dbg !4511

after_check32:                                    ; preds = %checkok28
  br label %noerr_block34, !dbg !4511

guard_block33:                                    ; preds = %assign_optional31
  %35 = load i64, ptr %error_var22, align 8, !dbg !4511
  ret i64 %35, !dbg !4511

noerr_block34:                                    ; preds = %after_check32
  call void @llvm.dbg.declare(metadata ptr %read, metadata !4512, metadata !DIExpression()), !dbg !4513
  %36 = load ptr, ptr %self, align 8, !dbg !4514
  %checknull36 = icmp eq ptr %36, null, !dbg !4514
  %37 = call i1 @llvm.expect.i1(i1 %checknull36, i1 false), !dbg !4514
  br i1 %37, label %panic37, label %checkok41, !dbg !4514

checkok41:                                        ; preds = %noerr_block34
  %38 = load %"char[]", ptr %36, align 8, !dbg !4514
  %39 = extractvalue %"char[]" %38, 0, !dbg !4514
  %40 = load ptr, ptr %self, align 8, !dbg !4515
  %checknull42 = icmp eq ptr %40, null, !dbg !4515
  %41 = call i1 @llvm.expect.i1(i1 %checknull42, i1 false), !dbg !4515
  br i1 %41, label %panic43, label %checkok47, !dbg !4515

checkok47:                                        ; preds = %checkok41
  %ptradd48 = getelementptr inbounds i8, ptr %40, i64 16, !dbg !4515
  %42 = load i64, ptr %ptradd48, align 8, !dbg !4515
  %43 = extractvalue %"char[]" %38, 1, !dbg !4515
  %gt = icmp ugt i64 %42, %43, !dbg !4515
  %44 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !4515
  br i1 %44, label %panic49, label %checkok56, !dbg !4515

checkok56:                                        ; preds = %checkok47
  %size = sub i64 %43, %42, !dbg !4514
  %ptradd57 = getelementptr inbounds i8, ptr %39, i64 %42, !dbg !4514
  %45 = insertvalue %"char[]" undef, ptr %ptradd57, 0, !dbg !4514
  %46 = insertvalue %"char[]" %45, i64 %size, 1, !dbg !4514
  %ptradd58 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4514
  %47 = load i64, ptr %ptradd58, align 8, !dbg !4514
  %48 = inttoptr i64 %47 to ptr, !dbg !4514
  %type61 = load ptr, ptr %.cachedtype60, align 8, !dbg !4493
  %49 = icmp eq ptr %48, %type61, !dbg !4493
  br i1 %49, label %cache_hit64, label %cache_miss62, !dbg !4493

cache_miss62:                                     ; preds = %checkok56
  %ptradd63 = getelementptr inbounds i8, ptr %48, i64 16, !dbg !4493
  %50 = load ptr, ptr %ptradd63, align 8, !dbg !4493
  %51 = call ptr @.dyn_search(ptr %50, ptr @"$sel.read"), !dbg !4493
  store ptr %51, ptr %.inlinecache59, align 8, !dbg !4493
  store ptr %48, ptr %.cachedtype60, align 8, !dbg !4493
  br label %52, !dbg !4493

cache_hit64:                                      ; preds = %checkok56
  %cache_hit_fn65 = load ptr, ptr %.inlinecache59, align 8, !dbg !4493
  br label %52, !dbg !4493

52:                                               ; preds = %cache_hit64, %cache_miss62
  %fn_phi66 = phi ptr [ %cache_hit_fn65, %cache_hit64 ], [ %51, %cache_miss62 ], !dbg !4493
  %53 = icmp eq ptr %fn_phi66, null, !dbg !4493
  br i1 %53, label %missing_function67, label %match71, !dbg !4493

missing_function67:                               ; preds = %52
  store %"char[]" { ptr @.panic_msg.205, i64 41 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg70, align 8
  %54 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %54(ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, i32 87), !dbg !4516
  unreachable, !dbg !4516

match71:                                          ; preds = %52
  %55 = load ptr, ptr %2, align 8
  store %"char[]" %46, ptr %indirectarg73, align 8
  %56 = call i64 %fn_phi66(ptr %retparam72, ptr %55, ptr align 8 %indirectarg73), !dbg !4516
  %not_err74 = icmp eq i64 %56, 0, !dbg !4516
  %57 = call i1 @llvm.expect.i1(i1 %not_err74, i1 true), !dbg !4516
  br i1 %57, label %after_check76, label %assign_optional75, !dbg !4516

assign_optional75:                                ; preds = %match71
  store i64 %56, ptr %error_var35, align 8, !dbg !4516
  br label %guard_block77, !dbg !4516

after_check76:                                    ; preds = %match71
  br label %noerr_block78, !dbg !4516

guard_block77:                                    ; preds = %assign_optional75
  %58 = load i64, ptr %error_var35, align 8, !dbg !4516
  ret i64 %58, !dbg !4516

noerr_block78:                                    ; preds = %after_check76
  %59 = load i64, ptr %retparam72, align 8, !dbg !4516
  store i64 %59, ptr %read, align 8, !dbg !4516
  %60 = load ptr, ptr %self, align 8, !dbg !4517
  %checknull79 = icmp eq ptr %60, null, !dbg !4517
  %61 = call i1 @llvm.expect.i1(i1 %checknull79, i1 false), !dbg !4517
  br i1 %61, label %panic80, label %checkok84, !dbg !4517

checkok84:                                        ; preds = %noerr_block78
  %ptradd85 = getelementptr inbounds i8, ptr %60, i64 16, !dbg !4517
  %62 = load i64, ptr %ptradd85, align 8, !dbg !4517
  %63 = load i64, ptr %read, align 8, !dbg !4518
  %add86 = add i64 %62, %63, !dbg !4517
  store i64 %add86, ptr %ptradd85, align 8, !dbg !4517
  br label %loop.cond, !dbg !4517

loop.exit:                                        ; preds = %noerr_block
  %64 = load ptr, ptr %self, align 8, !dbg !4519
  %checknull87 = icmp eq ptr %64, null, !dbg !4519
  %65 = call i1 @llvm.expect.i1(i1 %checknull87, i1 false), !dbg !4519
  br i1 %65, label %panic88, label %checkok92, !dbg !4519

checkok92:                                        ; preds = %loop.exit
  %ptradd93 = getelementptr inbounds i8, ptr %64, i64 16, !dbg !4519
  %66 = load i64, ptr %ptradd93, align 8, !dbg !4519
  %67 = load i64, ptr %start_index, align 8, !dbg !4520
  %sub = sub i64 %66, %67, !dbg !4519
  store i64 %sub, ptr %0, align 8, !dbg !4519
  ret i64 0, !dbg !4519

if.exit:                                          ; preds = %13
  %68 = load ptr, ptr %self, align 8, !dbg !4521
  %checknull94 = icmp eq ptr %68, null, !dbg !4521
  %69 = call i1 @llvm.expect.i1(i1 %checknull94, i1 false), !dbg !4521
  br i1 %69, label %panic95, label %checkok99, !dbg !4521

checkok99:                                        ; preds = %if.exit
  %ptradd100 = getelementptr inbounds i8, ptr %68, i64 8, !dbg !4521
  %70 = load i64, ptr %ptradd100, align 8, !dbg !4521
  %eq = icmp eq i64 0, %70, !dbg !4521
  br i1 %eq, label %if.then101, label %if.exit108, !dbg !4521

if.then101:                                       ; preds = %checkok99
  %71 = load ptr, ptr %self, align 8, !dbg !4522
  %72 = call i64 @std.io.ByteWriter.ensure_capacity(ptr %71, i64 16) #5, !dbg !4524
  %not_err103 = icmp eq i64 %72, 0, !dbg !4524
  %73 = call i1 @llvm.expect.i1(i1 %not_err103, i1 true), !dbg !4524
  br i1 %73, label %after_check105, label %assign_optional104, !dbg !4524

assign_optional104:                               ; preds = %if.then101
  store i64 %72, ptr %error_var102, align 8, !dbg !4524
  br label %guard_block106, !dbg !4524

after_check105:                                   ; preds = %if.then101
  br label %noerr_block107, !dbg !4524

guard_block106:                                   ; preds = %assign_optional104
  %74 = load i64, ptr %error_var102, align 8, !dbg !4524
  ret i64 %74, !dbg !4524

noerr_block107:                                   ; preds = %after_check105
  br label %if.exit108, !dbg !4524

if.exit108:                                       ; preds = %noerr_block107, %checkok99
  br label %loop.body109, !dbg !4525

loop.body109:                                     ; preds = %if.exit224, %if.exit108
  call void @llvm.dbg.declare(metadata ptr %len_to_read, metadata !4526, metadata !DIExpression()), !dbg !4529
  %75 = load ptr, ptr %self, align 8, !dbg !4530
  %checknull110 = icmp eq ptr %75, null, !dbg !4530
  %76 = call i1 @llvm.expect.i1(i1 %checknull110, i1 false), !dbg !4530
  br i1 %76, label %panic111, label %checkok115, !dbg !4530

checkok115:                                       ; preds = %loop.body109
  %ptradd116 = getelementptr inbounds i8, ptr %75, i64 8, !dbg !4530
  %77 = load i64, ptr %ptradd116, align 8, !dbg !4530
  %78 = load ptr, ptr %self, align 8, !dbg !4531
  %checknull117 = icmp eq ptr %78, null, !dbg !4531
  %79 = call i1 @llvm.expect.i1(i1 %checknull117, i1 false), !dbg !4531
  br i1 %79, label %panic118, label %checkok122, !dbg !4531

checkok122:                                       ; preds = %checkok115
  %ptradd123 = getelementptr inbounds i8, ptr %78, i64 16, !dbg !4531
  %80 = load i64, ptr %ptradd123, align 8, !dbg !4531
  %sub124 = sub i64 %77, %80, !dbg !4530
  store i64 %sub124, ptr %len_to_read, align 8, !dbg !4530
  %81 = load i64, ptr %len_to_read, align 8, !dbg !4532
  %gt125 = icmp ugt i64 16, %81, !dbg !4532
  br i1 %gt125, label %if.then126, label %if.exit155, !dbg !4532

if.then126:                                       ; preds = %checkok122
  %82 = load ptr, ptr %self, align 8, !dbg !4533
  %checknull128 = icmp eq ptr %82, null, !dbg !4533
  %83 = call i1 @llvm.expect.i1(i1 %checknull128, i1 false), !dbg !4533
  br i1 %83, label %panic129, label %checkok133, !dbg !4533

checkok133:                                       ; preds = %if.then126
  %ptradd134 = getelementptr inbounds i8, ptr %82, i64 8, !dbg !4533
  %84 = load i64, ptr %ptradd134, align 8, !dbg !4533
  %mul = mul i64 %84, 2, !dbg !4533
  %85 = load ptr, ptr %self, align 8, !dbg !4533
  %86 = call i64 @std.io.ByteWriter.ensure_capacity(ptr %85, i64 %mul) #5, !dbg !4535
  %not_err135 = icmp eq i64 %86, 0, !dbg !4535
  %87 = call i1 @llvm.expect.i1(i1 %not_err135, i1 true), !dbg !4535
  br i1 %87, label %after_check137, label %assign_optional136, !dbg !4535

assign_optional136:                               ; preds = %checkok133
  store i64 %86, ptr %error_var127, align 8, !dbg !4535
  br label %guard_block138, !dbg !4535

after_check137:                                   ; preds = %checkok133
  br label %noerr_block139, !dbg !4535

guard_block138:                                   ; preds = %assign_optional136
  %88 = load i64, ptr %error_var127, align 8, !dbg !4535
  ret i64 %88, !dbg !4535

noerr_block139:                                   ; preds = %after_check137
  %89 = load ptr, ptr %self, align 8, !dbg !4536
  %checknull140 = icmp eq ptr %89, null, !dbg !4536
  %90 = call i1 @llvm.expect.i1(i1 %checknull140, i1 false), !dbg !4536
  br i1 %90, label %panic141, label %checkok145, !dbg !4536

checkok145:                                       ; preds = %noerr_block139
  %ptradd146 = getelementptr inbounds i8, ptr %89, i64 8, !dbg !4536
  %91 = load i64, ptr %ptradd146, align 8, !dbg !4536
  %92 = load ptr, ptr %self, align 8, !dbg !4537
  %checknull147 = icmp eq ptr %92, null, !dbg !4537
  %93 = call i1 @llvm.expect.i1(i1 %checknull147, i1 false), !dbg !4537
  br i1 %93, label %panic148, label %checkok152, !dbg !4537

checkok152:                                       ; preds = %checkok145
  %ptradd153 = getelementptr inbounds i8, ptr %92, i64 16, !dbg !4537
  %94 = load i64, ptr %ptradd153, align 8, !dbg !4537
  %sub154 = sub i64 %91, %94, !dbg !4536
  store i64 %sub154, ptr %len_to_read, align 8, !dbg !4536
  br label %if.exit155, !dbg !4536

if.exit155:                                       ; preds = %checkok152, %checkok122
  call void @llvm.dbg.declare(metadata ptr %read156, metadata !4538, metadata !DIExpression()), !dbg !4539
  %95 = load ptr, ptr %self, align 8, !dbg !4540
  %checknull158 = icmp eq ptr %95, null, !dbg !4540
  %96 = call i1 @llvm.expect.i1(i1 %checknull158, i1 false), !dbg !4540
  br i1 %96, label %panic159, label %checkok163, !dbg !4540

checkok163:                                       ; preds = %if.exit155
  %97 = load %"char[]", ptr %95, align 8, !dbg !4540
  %98 = extractvalue %"char[]" %97, 0, !dbg !4540
  %99 = load ptr, ptr %self, align 8, !dbg !4541
  %checknull164 = icmp eq ptr %99, null, !dbg !4541
  %100 = call i1 @llvm.expect.i1(i1 %checknull164, i1 false), !dbg !4541
  br i1 %100, label %panic165, label %checkok169, !dbg !4541

checkok169:                                       ; preds = %checkok163
  %ptradd170 = getelementptr inbounds i8, ptr %99, i64 16, !dbg !4541
  %101 = load i64, ptr %ptradd170, align 8, !dbg !4541
  %102 = extractvalue %"char[]" %97, 1, !dbg !4541
  %gt171 = icmp ugt i64 %101, %102, !dbg !4541
  %103 = call i1 @llvm.expect.i1(i1 %gt171, i1 false), !dbg !4541
  br i1 %103, label %panic172, label %checkok182, !dbg !4541

checkok182:                                       ; preds = %checkok169
  %size183 = sub i64 %102, %101, !dbg !4540
  %ptradd184 = getelementptr inbounds i8, ptr %98, i64 %101, !dbg !4540
  %104 = insertvalue %"char[]" undef, ptr %ptradd184, 0, !dbg !4540
  %105 = insertvalue %"char[]" %104, i64 %size183, 1, !dbg !4540
  %ptradd185 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4540
  %106 = load i64, ptr %ptradd185, align 8, !dbg !4540
  %107 = inttoptr i64 %106 to ptr, !dbg !4540
  %type188 = load ptr, ptr %.cachedtype187, align 8, !dbg !4493
  %108 = icmp eq ptr %107, %type188, !dbg !4493
  br i1 %108, label %cache_hit191, label %cache_miss189, !dbg !4493

cache_miss189:                                    ; preds = %checkok182
  %ptradd190 = getelementptr inbounds i8, ptr %107, i64 16, !dbg !4493
  %109 = load ptr, ptr %ptradd190, align 8, !dbg !4493
  %110 = call ptr @.dyn_search(ptr %109, ptr @"$sel.read"), !dbg !4493
  store ptr %110, ptr %.inlinecache186, align 8, !dbg !4493
  store ptr %107, ptr %.cachedtype187, align 8, !dbg !4493
  br label %111, !dbg !4493

cache_hit191:                                     ; preds = %checkok182
  %cache_hit_fn192 = load ptr, ptr %.inlinecache186, align 8, !dbg !4493
  br label %111, !dbg !4493

111:                                              ; preds = %cache_hit191, %cache_miss189
  %fn_phi193 = phi ptr [ %cache_hit_fn192, %cache_hit191 ], [ %110, %cache_miss189 ], !dbg !4493
  %112 = icmp eq ptr %fn_phi193, null, !dbg !4493
  br i1 %112, label %missing_function194, label %match198, !dbg !4493

missing_function194:                              ; preds = %111
  store %"char[]" { ptr @.panic_msg.205, i64 41 }, ptr %indirectarg195, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg196, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg197, align 8
  %113 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %113(ptr align 8 %indirectarg195, ptr align 8 %indirectarg196, ptr align 8 %indirectarg197, i32 107), !dbg !4542
  unreachable, !dbg !4542

match198:                                         ; preds = %111
  %114 = load ptr, ptr %2, align 8
  store %"char[]" %105, ptr %indirectarg200, align 8
  %115 = call i64 %fn_phi193(ptr %retparam199, ptr %114, ptr align 8 %indirectarg200), !dbg !4542
  %not_err201 = icmp eq i64 %115, 0, !dbg !4542
  %116 = call i1 @llvm.expect.i1(i1 %not_err201, i1 true), !dbg !4542
  br i1 %116, label %after_check203, label %assign_optional202, !dbg !4542

assign_optional202:                               ; preds = %match198
  store i64 %115, ptr %error_var157, align 8, !dbg !4542
  br label %guard_block204, !dbg !4542

after_check203:                                   ; preds = %match198
  br label %noerr_block205, !dbg !4542

guard_block204:                                   ; preds = %assign_optional202
  %117 = load i64, ptr %error_var157, align 8, !dbg !4542
  ret i64 %117, !dbg !4542

noerr_block205:                                   ; preds = %after_check203
  %118 = load i64, ptr %retparam199, align 8, !dbg !4542
  store i64 %118, ptr %read156, align 8, !dbg !4542
  %119 = load ptr, ptr %self, align 8, !dbg !4543
  %checknull206 = icmp eq ptr %119, null, !dbg !4543
  %120 = call i1 @llvm.expect.i1(i1 %checknull206, i1 false), !dbg !4543
  br i1 %120, label %panic207, label %checkok211, !dbg !4543

checkok211:                                       ; preds = %noerr_block205
  %ptradd212 = getelementptr inbounds i8, ptr %119, i64 16, !dbg !4543
  %121 = load i64, ptr %ptradd212, align 8, !dbg !4543
  %122 = load i64, ptr %read156, align 8, !dbg !4544
  %add213 = add i64 %121, %122, !dbg !4543
  store i64 %add213, ptr %ptradd212, align 8, !dbg !4543
  %123 = load i64, ptr %read156, align 8, !dbg !4545
  %124 = load i64, ptr %len_to_read, align 8, !dbg !4546
  %lt = icmp ult i64 %123, %124, !dbg !4545
  br i1 %lt, label %if.then214, label %if.exit224, !dbg !4545

if.then214:                                       ; preds = %checkok211
  %125 = load ptr, ptr %self, align 8, !dbg !4547
  %checknull216 = icmp eq ptr %125, null, !dbg !4547
  %126 = call i1 @llvm.expect.i1(i1 %checknull216, i1 false), !dbg !4547
  br i1 %126, label %panic217, label %checkok221, !dbg !4547

checkok221:                                       ; preds = %if.then214
  %ptradd222 = getelementptr inbounds i8, ptr %125, i64 16, !dbg !4547
  %127 = load i64, ptr %ptradd222, align 8, !dbg !4547
  %128 = load i64, ptr %start_index, align 8, !dbg !4548
  %sub223 = sub i64 %127, %128, !dbg !4547
  store i64 %sub223, ptr %0, align 8, !dbg !4547
  ret i64 0, !dbg !4547

if.exit224:                                       ; preds = %checkok211
  br label %loop.body109, !dbg !4547

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg2, align 8
  %129 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %129(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 79), !dbg !4495
  unreachable, !dbg !4495

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg6, align 8
  %130 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %130(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 81), !dbg !4500
  unreachable, !dbg !4500

panic24:                                          ; preds = %loop.body
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg27, align 8
  %131 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %131(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 86), !dbg !4508
  unreachable, !dbg !4508

panic37:                                          ; preds = %noerr_block34
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg38, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg40, align 8
  %132 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %132(ptr align 8 %indirectarg38, ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, i32 87), !dbg !4514
  unreachable, !dbg !4514

panic43:                                          ; preds = %checkok41
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg46, align 8
  %133 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %133(ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, i32 87), !dbg !4515
  unreachable, !dbg !4515

panic49:                                          ; preds = %checkok47
  store i64 %43, ptr %taddr, align 8
  %134 = insertvalue %any undef, ptr %taddr, 0
  %135 = insertvalue %any %134, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %42, ptr %taddr50, align 8
  %136 = insertvalue %any undef, ptr %taddr50, 0
  %137 = insertvalue %any %136, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg52, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg53, align 8
  store %any %135, ptr %varargslots, align 16
  %ptradd54 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %137, ptr %ptradd54, align 16
  %138 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %138, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg55, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, ptr align 8 %indirectarg53, i32 87, ptr align 8 %indirectarg55), !dbg !4514
  unreachable, !dbg !4514

panic80:                                          ; preds = %noerr_block78
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg81, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg82, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg83, align 8
  %139 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %139(ptr align 8 %indirectarg81, ptr align 8 %indirectarg82, ptr align 8 %indirectarg83, i32 88), !dbg !4517
  unreachable, !dbg !4517

panic88:                                          ; preds = %loop.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg90, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg91, align 8
  %140 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %140(ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, ptr align 8 %indirectarg91, i32 90), !dbg !4519
  unreachable, !dbg !4519

panic95:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg97, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg98, align 8
  %141 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %141(ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, ptr align 8 %indirectarg98, i32 92), !dbg !4521
  unreachable, !dbg !4521

panic111:                                         ; preds = %loop.body109
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg112, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg113, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg114, align 8
  %142 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %142(ptr align 8 %indirectarg112, ptr align 8 %indirectarg113, ptr align 8 %indirectarg114, i32 99), !dbg !4530
  unreachable, !dbg !4530

panic118:                                         ; preds = %checkok115
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg119, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg120, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg121, align 8
  %143 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %143(ptr align 8 %indirectarg119, ptr align 8 %indirectarg120, ptr align 8 %indirectarg121, i32 99), !dbg !4531
  unreachable, !dbg !4531

panic129:                                         ; preds = %if.then126
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg130, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg131, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg132, align 8
  %144 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %144(ptr align 8 %indirectarg130, ptr align 8 %indirectarg131, ptr align 8 %indirectarg132, i32 103), !dbg !4533
  unreachable, !dbg !4533

panic141:                                         ; preds = %noerr_block139
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg142, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg143, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg144, align 8
  %145 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %145(ptr align 8 %indirectarg142, ptr align 8 %indirectarg143, ptr align 8 %indirectarg144, i32 104), !dbg !4536
  unreachable, !dbg !4536

panic148:                                         ; preds = %checkok145
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg149, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg150, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg151, align 8
  %146 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %146(ptr align 8 %indirectarg149, ptr align 8 %indirectarg150, ptr align 8 %indirectarg151, i32 104), !dbg !4537
  unreachable, !dbg !4537

panic159:                                         ; preds = %if.exit155
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg160, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg161, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg162, align 8
  %147 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %147(ptr align 8 %indirectarg160, ptr align 8 %indirectarg161, ptr align 8 %indirectarg162, i32 107), !dbg !4540
  unreachable, !dbg !4540

panic165:                                         ; preds = %checkok163
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg166, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg167, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg168, align 8
  %148 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %148(ptr align 8 %indirectarg166, ptr align 8 %indirectarg167, ptr align 8 %indirectarg168, i32 107), !dbg !4541
  unreachable, !dbg !4541

panic172:                                         ; preds = %checkok169
  store i64 %102, ptr %taddr173, align 8
  %149 = insertvalue %any undef, ptr %taddr173, 0
  %150 = insertvalue %any %149, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %101, ptr %taddr174, align 8
  %151 = insertvalue %any undef, ptr %taddr174, 0
  %152 = insertvalue %any %151, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg175, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg176, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg177, align 8
  store %any %150, ptr %varargslots178, align 16
  %ptradd179 = getelementptr inbounds i8, ptr %varargslots178, i64 16
  store %any %152, ptr %ptradd179, align 16
  %153 = insertvalue %"any[]" undef, ptr %varargslots178, 0
  %"$$temp180" = insertvalue %"any[]" %153, i64 2, 1
  store %"any[]" %"$$temp180", ptr %indirectarg181, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg175, ptr align 8 %indirectarg176, ptr align 8 %indirectarg177, i32 107, ptr align 8 %indirectarg181), !dbg !4540
  unreachable, !dbg !4540

panic207:                                         ; preds = %noerr_block205
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg208, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg209, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg210, align 8
  %154 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %154(ptr align 8 %indirectarg208, ptr align 8 %indirectarg209, ptr align 8 %indirectarg210, i32 108), !dbg !4543
  unreachable, !dbg !4543

panic217:                                         ; preds = %if.then214
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg218, align 8
  store %"char[]" { ptr @.file.235, i64 13 }, ptr %indirectarg219, align 8
  store %"char[]" { ptr @.func.240, i64 9 }, ptr %indirectarg220, align 8
  %155 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %155(ptr align 8 %indirectarg218, ptr align 8 %indirectarg219, ptr align 8 %indirectarg220, i32 110), !dbg !4547
  unreachable, !dbg !4547
}

; Function Attrs: nounwind ssp uwtable
define weak ptr @std.io.LimitReader.init(ptr %0, ptr align 8 %1, i64 %2) #0 comdat !dbg !4549 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %limit = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.assign_list = alloca %LimitReader, align 8
  %3 = icmp eq ptr %0, null, !dbg !4558
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !4558
  br i1 %4, label %panic, label %checkok, !dbg !4558

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4559, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.declare(metadata ptr %1, metadata !4561, metadata !DIExpression()), !dbg !4562
  store i64 %2, ptr %limit, align 8
  call void @llvm.dbg.declare(metadata ptr %limit, metadata !4563, metadata !DIExpression()), !dbg !4564
  %5 = load ptr, ptr %self, align 8, !dbg !4565
  %checknull = icmp eq ptr %5, null, !dbg !4565
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4565
  br i1 %6, label %panic3, label %checkok7, !dbg !4565

checkok7:                                         ; preds = %checkok
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %.assign_list, ptr align 8 %1, i32 16, i1 false), !dbg !4566
  %ptradd = getelementptr inbounds i8, ptr %.assign_list, i64 16, !dbg !4566
  %7 = load i64, ptr %limit, align 8, !dbg !4567
  store i64 %7, ptr %ptradd, align 8, !dbg !4567
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %5, ptr align 8 %.assign_list, i32 24, i1 false), !dbg !4567
  %8 = load ptr, ptr %self, align 8, !dbg !4568
  ret ptr %8, !dbg !4568

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 13), !dbg !4560
  unreachable, !dbg !4560

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg6, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 15), !dbg !4565
  unreachable, !dbg !4565
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.LimitReader.close(ptr %0) #0 comdat !dbg !4569 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %.inlinecache16 = alloca ptr, align 8
  %.cachedtype17 = alloca ptr, align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype17, align 8, !dbg !4572
  store ptr null, ptr %.cachedtype, align 8, !dbg !4572
  %1 = icmp eq ptr %0, null, !dbg !4572
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !4572
  br i1 %2, label %panic, label %checkok, !dbg !4572

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4573, metadata !DIExpression()), !dbg !4574
  %3 = load ptr, ptr %self, align 8, !dbg !4575
  %checknull = icmp eq ptr %3, null, !dbg !4575
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4575
  br i1 %4, label %panic3, label %checkok7, !dbg !4575

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 8, !dbg !4575
  %5 = load i64, ptr %ptradd, align 8, !dbg !4575
  %6 = inttoptr i64 %5 to ptr, !dbg !4575
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4572
  %7 = icmp eq ptr %6, %type, !dbg !4572
  br i1 %7, label %cache_hit, label %cache_miss, !dbg !4572

cache_miss:                                       ; preds = %checkok7
  %ptradd8 = getelementptr inbounds i8, ptr %6, i64 16, !dbg !4572
  %8 = load ptr, ptr %ptradd8, align 8, !dbg !4572
  %9 = call ptr @.dyn_search(ptr %8, ptr @"$sel.close"), !dbg !4572
  store ptr %9, ptr %.inlinecache, align 8, !dbg !4572
  store ptr %6, ptr %.cachedtype, align 8, !dbg !4572
  br label %10, !dbg !4572

cache_hit:                                        ; preds = %checkok7
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4572
  br label %10, !dbg !4572

10:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %9, %cache_miss ], !dbg !4572
  %ptrbool = icmp ne ptr %fn_phi, null, !dbg !4572
  br i1 %ptrbool, label %if.then, label %if.exit, !dbg !4572

if.then:                                          ; preds = %10
  %11 = load ptr, ptr %self, align 8, !dbg !4576
  %checknull9 = icmp eq ptr %11, null, !dbg !4576
  %12 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !4576
  br i1 %12, label %panic10, label %checkok14, !dbg !4576

checkok14:                                        ; preds = %if.then
  %ptradd15 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !4576
  %13 = load i64, ptr %ptradd15, align 8, !dbg !4576
  %14 = inttoptr i64 %13 to ptr, !dbg !4576
  %type18 = load ptr, ptr %.cachedtype17, align 8, !dbg !4572
  %15 = icmp eq ptr %14, %type18, !dbg !4572
  br i1 %15, label %cache_hit21, label %cache_miss19, !dbg !4572

cache_miss19:                                     ; preds = %checkok14
  %ptradd20 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !4572
  %16 = load ptr, ptr %ptradd20, align 8, !dbg !4572
  %17 = call ptr @.dyn_search(ptr %16, ptr @"$sel.close"), !dbg !4572
  store ptr %17, ptr %.inlinecache16, align 8, !dbg !4572
  store ptr %14, ptr %.cachedtype17, align 8, !dbg !4572
  br label %18, !dbg !4572

cache_hit21:                                      ; preds = %checkok14
  %cache_hit_fn22 = load ptr, ptr %.inlinecache16, align 8, !dbg !4572
  br label %18, !dbg !4572

18:                                               ; preds = %cache_hit21, %cache_miss19
  %fn_phi23 = phi ptr [ %cache_hit_fn22, %cache_hit21 ], [ %17, %cache_miss19 ], !dbg !4572
  %19 = icmp eq ptr %fn_phi23, null, !dbg !4572
  br i1 %19, label %missing_function, label %match, !dbg !4572

missing_function:                                 ; preds = %18
  store %"char[]" { ptr @.panic_msg.203, i64 42 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg26, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 21), !dbg !4576
  unreachable, !dbg !4576

match:                                            ; preds = %18
  %21 = load ptr, ptr %11, align 8, !dbg !4576
  %22 = call i64 %fn_phi23(ptr %21), !dbg !4576
  %not_err = icmp eq i64 %22, 0, !dbg !4576
  %23 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4576
  br i1 %23, label %after_check, label %assign_optional, !dbg !4576

assign_optional:                                  ; preds = %match
  store i64 %22, ptr %reterr, align 8, !dbg !4576
  br label %err_retblock, !dbg !4576

after_check:                                      ; preds = %match
  ret i64 0, !dbg !4576

err_retblock:                                     ; preds = %assign_optional
  %24 = load i64, ptr %reterr, align 8, !dbg !4576
  ret i64 %24, !dbg !4576

if.exit:                                          ; preds = %10
  ret i64 0, !dbg !4576

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg2, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 19), !dbg !4574
  unreachable, !dbg !4574

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg6, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 21), !dbg !4575
  unreachable, !dbg !4575

panic10:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg13, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 21), !dbg !4576
  unreachable, !dbg !4576
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.LimitReader.read(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !4577 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %m = alloca i64, align 8
  %x = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %.anon = alloca i64, align 8
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  %n = alloca i64, align 8
  %error_var = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr23 = alloca i64, align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg28 = alloca %"any[]", align 8
  %taddr32 = alloca i64, align 8
  %taddr33 = alloca i64, align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %varargslots37 = alloca [2 x %any], align 16
  %indirectarg40 = alloca %"any[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %indirectarg46 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %indirectarg52 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !4580
  %3 = icmp eq ptr %1, null, !dbg !4580
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !4580
  br i1 %4, label %panic, label %checkok, !dbg !4580

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4581, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4583, metadata !DIExpression()), !dbg !4584
  %5 = load ptr, ptr %self, align 8, !dbg !4585
  %checknull = icmp eq ptr %5, null, !dbg !4585
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4585
  br i1 %6, label %panic3, label %checkok7, !dbg !4585

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 16, !dbg !4585
  %7 = load i64, ptr %ptradd, align 8, !dbg !4585
  %eq = icmp eq i64 0, %7, !dbg !4585
  br i1 %eq, label %if.then, label %if.exit, !dbg !4585

if.then:                                          ; preds = %checkok7
  ret i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), !dbg !4586

if.exit:                                          ; preds = %checkok7
  call void @llvm.dbg.declare(metadata ptr %m, metadata !4587, metadata !DIExpression()), !dbg !4588
  %ptradd8 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4589
  %8 = load i64, ptr %ptradd8, align 8
  store i64 %8, ptr %x, align 8
  %9 = load ptr, ptr %self, align 8, !dbg !4590
  %checknull9 = icmp eq ptr %9, null, !dbg !4590
  %10 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !4590
  br i1 %10, label %panic10, label %checkok14, !dbg !4590

checkok14:                                        ; preds = %if.exit
  %ptradd15 = getelementptr inbounds i8, ptr %9, i64 16, !dbg !4590
  %11 = load i64, ptr %ptradd15, align 8
  store i64 %11, ptr %.anon, align 8
  %12 = load i64, ptr %x, align 8
  store i64 %12, ptr %a, align 8
  %13 = load i64, ptr %.anon, align 8
  store i64 %13, ptr %b, align 8
  %14 = load i64, ptr %a, align 8, !dbg !4591
  %15 = load i64, ptr %b, align 8, !dbg !4596
  %lt = icmp ult i64 %14, %15, !dbg !4591
  br i1 %lt, label %cond.lhs, label %cond.rhs, !dbg !4591

cond.lhs:                                         ; preds = %checkok14
  %16 = load i64, ptr %x, align 8, !dbg !4597
  br label %cond.phi, !dbg !4597

cond.rhs:                                         ; preds = %checkok14
  %17 = load i64, ptr %.anon, align 8, !dbg !4598
  br label %cond.phi, !dbg !4598

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i64 [ %16, %cond.lhs ], [ %17, %cond.rhs ], !dbg !4598
  store i64 %val, ptr %m, align 8, !dbg !4598
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4599, metadata !DIExpression()), !dbg !4600
  %18 = load ptr, ptr %self, align 8, !dbg !4601
  %checknull16 = icmp eq ptr %18, null, !dbg !4601
  %19 = call i1 @llvm.expect.i1(i1 %checknull16, i1 false), !dbg !4601
  br i1 %19, label %panic17, label %checkok21, !dbg !4601

checkok21:                                        ; preds = %cond.phi
  %20 = load %"char[]", ptr %2, align 8, !dbg !4602
  %21 = extractvalue %"char[]" %20, 0, !dbg !4602
  %22 = extractvalue %"char[]" %20, 1, !dbg !4603
  %gt = icmp ugt i64 0, %22, !dbg !4603
  %23 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !4603
  br i1 %23, label %panic22, label %checkok29, !dbg !4603

checkok29:                                        ; preds = %checkok21
  %24 = load i64, ptr %m, align 8, !dbg !4604
  %add = add i64 0, %24, !dbg !4604
  %lt30 = icmp ult i64 %22, %add, !dbg !4604
  %sub = sub i64 %add, 1, !dbg !4604
  %25 = call i1 @llvm.expect.i1(i1 %lt30, i1 false), !dbg !4604
  br i1 %25, label %panic31, label %checkok41, !dbg !4604

checkok41:                                        ; preds = %checkok29
  %size = sub i64 %add, 0, !dbg !4602
  %26 = insertvalue %"char[]" undef, ptr %21, 0, !dbg !4602
  %27 = insertvalue %"char[]" %26, i64 %size, 1, !dbg !4602
  %ptradd42 = getelementptr inbounds i8, ptr %18, i64 8, !dbg !4602
  %28 = load i64, ptr %ptradd42, align 8, !dbg !4602
  %29 = inttoptr i64 %28 to ptr, !dbg !4602
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4580
  %30 = icmp eq ptr %29, %type, !dbg !4580
  br i1 %30, label %cache_hit, label %cache_miss, !dbg !4580

cache_miss:                                       ; preds = %checkok41
  %ptradd43 = getelementptr inbounds i8, ptr %29, i64 16, !dbg !4580
  %31 = load ptr, ptr %ptradd43, align 8, !dbg !4580
  %32 = call ptr @.dyn_search(ptr %31, ptr @"$sel.read"), !dbg !4580
  store ptr %32, ptr %.inlinecache, align 8, !dbg !4580
  store ptr %29, ptr %.cachedtype, align 8, !dbg !4580
  br label %33, !dbg !4580

cache_hit:                                        ; preds = %checkok41
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4580
  br label %33, !dbg !4580

33:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %32, %cache_miss ], !dbg !4580
  %34 = icmp eq ptr %fn_phi, null, !dbg !4580
  br i1 %34, label %missing_function, label %match, !dbg !4580

missing_function:                                 ; preds = %33
  store %"char[]" { ptr @.panic_msg.205, i64 41 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg45, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg46, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, ptr align 8 %indirectarg46, i32 29), !dbg !4601
  unreachable, !dbg !4601

match:                                            ; preds = %33
  %36 = load ptr, ptr %18, align 8
  store %"char[]" %27, ptr %indirectarg47, align 8
  %37 = call i64 %fn_phi(ptr %retparam, ptr %36, ptr align 8 %indirectarg47), !dbg !4601
  %not_err = icmp eq i64 %37, 0, !dbg !4601
  %38 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4601
  br i1 %38, label %after_check, label %assign_optional, !dbg !4601

assign_optional:                                  ; preds = %match
  store i64 %37, ptr %error_var, align 8, !dbg !4601
  br label %guard_block, !dbg !4601

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !4601

guard_block:                                      ; preds = %assign_optional
  %39 = load i64, ptr %error_var, align 8, !dbg !4601
  ret i64 %39, !dbg !4601

noerr_block:                                      ; preds = %after_check
  %40 = load i64, ptr %retparam, align 8, !dbg !4601
  store i64 %40, ptr %n, align 8, !dbg !4601
  %41 = load ptr, ptr %self, align 8, !dbg !4605
  %checknull48 = icmp eq ptr %41, null, !dbg !4605
  %42 = call i1 @llvm.expect.i1(i1 %checknull48, i1 false), !dbg !4605
  br i1 %42, label %panic49, label %checkok53, !dbg !4605

checkok53:                                        ; preds = %noerr_block
  %ptradd54 = getelementptr inbounds i8, ptr %41, i64 16, !dbg !4605
  %43 = load i64, ptr %ptradd54, align 8, !dbg !4605
  %44 = load i64, ptr %n, align 8, !dbg !4606
  %sub55 = sub i64 %43, %44, !dbg !4605
  store i64 %sub55, ptr %ptradd54, align 8, !dbg !4605
  %45 = load i64, ptr %n, align 8, !dbg !4607
  store i64 %45, ptr %0, align 8, !dbg !4607
  ret i64 0, !dbg !4607

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg2, align 8
  %46 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %46(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 25), !dbg !4582
  unreachable, !dbg !4582

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg6, align 8
  %47 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %47(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 27), !dbg !4585
  unreachable, !dbg !4585

panic10:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg13, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 28), !dbg !4590
  unreachable, !dbg !4590

panic17:                                          ; preds = %cond.phi
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg20, align 8
  %49 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %49(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 29), !dbg !4601
  unreachable, !dbg !4601

panic22:                                          ; preds = %checkok21
  store i64 %22, ptr %taddr, align 8
  %50 = insertvalue %any undef, ptr %taddr, 0
  %51 = insertvalue %any %50, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr23, align 8
  %52 = insertvalue %any undef, ptr %taddr23, 0
  %53 = insertvalue %any %52, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg26, align 8
  store %any %51, ptr %varargslots, align 16
  %ptradd27 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %53, ptr %ptradd27, align 16
  %54 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %54, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg28, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 29, ptr align 8 %indirectarg28), !dbg !4602
  unreachable, !dbg !4602

panic31:                                          ; preds = %checkok29
  store i64 %sub, ptr %taddr32, align 8
  %55 = insertvalue %any undef, ptr %taddr32, 0
  %56 = insertvalue %any %55, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %22, ptr %taddr33, align 8
  %57 = insertvalue %any undef, ptr %taddr33, 0
  %58 = insertvalue %any %57, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg36, align 8
  store %any %56, ptr %varargslots37, align 16
  %ptradd38 = getelementptr inbounds i8, ptr %varargslots37, i64 16
  store %any %58, ptr %ptradd38, align 16
  %59 = insertvalue %"any[]" undef, ptr %varargslots37, 0
  %"$$temp39" = insertvalue %"any[]" %59, i64 2, 1
  store %"any[]" %"$$temp39", ptr %indirectarg40, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 29, ptr align 8 %indirectarg40), !dbg !4602
  unreachable, !dbg !4602

panic49:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg51, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg52, align 8
  %60 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %60(ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, ptr align 8 %indirectarg52, i32 30), !dbg !4605
  unreachable, !dbg !4605
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.LimitReader.read_byte(ptr %0, ptr %1) #0 comdat !dbg !4608 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %retparam = alloca i8, align 1
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !4611
  %2 = icmp eq ptr %1, null, !dbg !4611
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4611
  br i1 %3, label %panic, label %checkok, !dbg !4611

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4612, metadata !DIExpression()), !dbg !4613
  %4 = load ptr, ptr %self, align 8, !dbg !4614
  %checknull = icmp eq ptr %4, null, !dbg !4614
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4614
  br i1 %5, label %panic3, label %checkok7, !dbg !4614

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !4614
  %6 = load i64, ptr %ptradd, align 8, !dbg !4614
  %eq = icmp eq i64 0, %6, !dbg !4614
  br i1 %eq, label %if.then, label %if.exit, !dbg !4614

if.then:                                          ; preds = %checkok7
  ret i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), !dbg !4615

if.exit:                                          ; preds = %checkok7
  %7 = load ptr, ptr %self, align 8, !dbg !4616
  %checknull8 = icmp eq ptr %7, null, !dbg !4616
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4616
  br i1 %8, label %panic9, label %checkok13, !dbg !4616

checkok13:                                        ; preds = %if.exit
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 8, !dbg !4616
  %9 = load i64, ptr %ptradd14, align 8, !dbg !4616
  %10 = inttoptr i64 %9 to ptr, !dbg !4616
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4611
  %11 = icmp eq ptr %10, %type, !dbg !4611
  br i1 %11, label %cache_hit, label %cache_miss, !dbg !4611

cache_miss:                                       ; preds = %checkok13
  %ptradd15 = getelementptr inbounds i8, ptr %10, i64 16, !dbg !4611
  %12 = load ptr, ptr %ptradd15, align 8, !dbg !4611
  %13 = call ptr @.dyn_search(ptr %12, ptr @"$sel.read_byte"), !dbg !4611
  store ptr %13, ptr %.inlinecache, align 8, !dbg !4611
  store ptr %10, ptr %.cachedtype, align 8, !dbg !4611
  br label %14, !dbg !4611

cache_hit:                                        ; preds = %checkok13
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4611
  br label %14, !dbg !4611

14:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %13, %cache_miss ], !dbg !4611
  %15 = icmp eq ptr %fn_phi, null, !dbg !4611
  br i1 %15, label %missing_function, label %match, !dbg !4611

missing_function:                                 ; preds = %14
  store %"char[]" { ptr @.panic_msg.41, i64 46 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg18, align 8
  %16 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %16(ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, i32 38), !dbg !4616
  unreachable, !dbg !4616

match:                                            ; preds = %14
  %17 = load ptr, ptr %7, align 8
  %18 = call i64 %fn_phi(ptr %retparam, ptr %17), !dbg !4616
  %not_err = icmp eq i64 %18, 0, !dbg !4616
  %19 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4616
  br i1 %19, label %after_check, label %assign_optional, !dbg !4616

assign_optional:                                  ; preds = %match
  store i64 %18, ptr %reterr, align 8, !dbg !4616
  br label %err_retblock, !dbg !4616

after_check:                                      ; preds = %match
  %20 = load i8, ptr %retparam, align 1, !dbg !4616
  %21 = load ptr, ptr %self, align 8, !dbg !4617
  %checknull19 = icmp eq ptr %21, null, !dbg !4617
  %22 = call i1 @llvm.expect.i1(i1 %checknull19, i1 false), !dbg !4617
  br i1 %22, label %panic20, label %checkok24, !dbg !4617

checkok24:                                        ; preds = %after_check
  %ptradd25 = getelementptr inbounds i8, ptr %21, i64 16, !dbg !4617
  %23 = load i64, ptr %ptradd25, align 8, !dbg !4617
  %sub = sub i64 %23, 1, !dbg !4617
  store i64 %sub, ptr %ptradd25, align 8, !dbg !4617
  store i8 %20, ptr %0, align 1, !dbg !4617
  ret i64 0, !dbg !4617

err_retblock:                                     ; preds = %assign_optional
  %24 = load i64, ptr %reterr, align 8, !dbg !4617
  ret i64 %24, !dbg !4617

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg2, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 34), !dbg !4613
  unreachable, !dbg !4613

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg6, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 36), !dbg !4614
  unreachable, !dbg !4614

panic9:                                           ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg12, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 38), !dbg !4616
  unreachable, !dbg !4616

panic20:                                          ; preds = %after_check
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg23, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 37), !dbg !4617
  unreachable, !dbg !4617
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.LimitReader.available(ptr %0, ptr %1) #0 comdat !dbg !4619 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %2 = icmp eq ptr %1, null, !dbg !4622
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4622
  br i1 %3, label %panic, label %checkok, !dbg !4622

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4623, metadata !DIExpression()), !dbg !4624
  %4 = load ptr, ptr %self, align 8, !dbg !4625
  %checknull = icmp eq ptr %4, null, !dbg !4625
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4625
  br i1 %5, label %panic3, label %checkok7, !dbg !4625

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 16, !dbg !4625
  %6 = load i64, ptr %ptradd, align 8, !dbg !4625
  store i64 %6, ptr %0, align 8, !dbg !4625
  ret i64 0, !dbg !4625

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg2, align 8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 41), !dbg !4624
  unreachable, !dbg !4624

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.242, i64 14 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg6, align 8
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 43), !dbg !4625
  unreachable, !dbg !4625
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.Scanner.init(ptr %0, ptr align 8 %1, ptr align 8 %2) #0 comdat !dbg !4626 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %.assign_list = alloca %Scanner, align 8
  %3 = icmp eq ptr %0, null, !dbg !4637
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !4637
  br i1 %4, label %panic, label %checkok, !dbg !4637

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4638, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.declare(metadata ptr %1, metadata !4640, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4642, metadata !DIExpression()), !dbg !4643
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4644
  %5 = load i64, ptr %ptradd, align 8, !dbg !4644
  %lt = icmp ult i64 0, %5, !dbg !4644
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !4644

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.244, i64 65 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 17), !dbg !4644
  unreachable, !dbg !4644

assert_ok:                                        ; preds = %checkok
  %7 = load ptr, ptr %self, align 8, !dbg !4646
  %checknull = icmp eq ptr %7, null, !dbg !4646
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4646
  br i1 %8, label %panic6, label %checkok10, !dbg !4646

checkok10:                                        ; preds = %assert_ok
  call void @llvm.memset.p0.i64(ptr align 8 %.assign_list, i8 0, i64 48, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %.assign_list, ptr align 8 %1, i32 16, i1 false), !dbg !4647
  %ptradd11 = getelementptr inbounds i8, ptr %.assign_list, i64 16, !dbg !4647
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %ptradd11, ptr align 8 %2, i32 16, i1 false), !dbg !4648
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %7, ptr align 8 %.assign_list, i32 48, i1 false), !dbg !4648
  ret void, !dbg !4648

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg2, align 8
  %9 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %9(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 19), !dbg !4639
  unreachable, !dbg !4639

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func, i64 4 }, ptr %indirectarg9, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 21), !dbg !4646
  unreachable, !dbg !4646
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.Scanner.flush(ptr noalias sret(%"char[]") align 8 %0, ptr %1) #0 comdat !dbg !4649 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %n = alloca i64, align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %buf = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr47 = alloca i64, align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg52 = alloca %"any[]", align 8
  %taddr56 = alloca i64, align 8
  %taddr57 = alloca i64, align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %varargslots61 = alloca [2 x %any], align 16
  %indirectarg64 = alloca %"any[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %indirectarg78 = alloca %"char[]", align 8
  %2 = icmp eq ptr %1, null, !dbg !4652
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4652
  br i1 %3, label %panic, label %checkok, !dbg !4652

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4653, metadata !DIExpression()), !dbg !4654
  %4 = load ptr, ptr %self, align 8, !dbg !4655
  %checknull = icmp eq ptr %4, null, !dbg !4655
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4655
  br i1 %5, label %panic3, label %checkok7, !dbg !4655

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 40, !dbg !4655
  %6 = load i64, ptr %ptradd, align 8, !dbg !4655
  %7 = load ptr, ptr %self, align 8, !dbg !4656
  %checknull8 = icmp eq ptr %7, null, !dbg !4656
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4656
  br i1 %8, label %panic9, label %checkok13, !dbg !4656

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 32, !dbg !4656
  %9 = load i64, ptr %ptradd14, align 8, !dbg !4656
  %ge = icmp uge i64 %6, %9, !dbg !4655
  br i1 %ge, label %assert_ok, label %assert_fail, !dbg !4655

assert_fail:                                      ; preds = %checkok13
  store %"char[]" { ptr @.panic_msg.224, i64 16 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg17, align 8
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, i32 30), !dbg !4655
  unreachable, !dbg !4655

assert_ok:                                        ; preds = %checkok13
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4657, metadata !DIExpression()), !dbg !4658
  %11 = load ptr, ptr %self, align 8, !dbg !4659
  %checknull18 = icmp eq ptr %11, null, !dbg !4659
  %12 = call i1 @llvm.expect.i1(i1 %checknull18, i1 false), !dbg !4659
  br i1 %12, label %panic19, label %checkok23, !dbg !4659

checkok23:                                        ; preds = %assert_ok
  %ptradd24 = getelementptr inbounds i8, ptr %11, i64 40, !dbg !4659
  %13 = load i64, ptr %ptradd24, align 8, !dbg !4659
  %14 = load ptr, ptr %self, align 8, !dbg !4660
  %checknull25 = icmp eq ptr %14, null, !dbg !4660
  %15 = call i1 @llvm.expect.i1(i1 %checknull25, i1 false), !dbg !4660
  br i1 %15, label %panic26, label %checkok30, !dbg !4660

checkok30:                                        ; preds = %checkok23
  %ptradd31 = getelementptr inbounds i8, ptr %14, i64 32, !dbg !4660
  %16 = load i64, ptr %ptradd31, align 8, !dbg !4660
  %sub = sub i64 %13, %16, !dbg !4659
  store i64 %sub, ptr %n, align 8, !dbg !4659
  call void @llvm.dbg.declare(metadata ptr %buf, metadata !4661, metadata !DIExpression()), !dbg !4662
  %17 = load ptr, ptr %self, align 8, !dbg !4663
  %checknull32 = icmp eq ptr %17, null, !dbg !4663
  %18 = call i1 @llvm.expect.i1(i1 %checknull32, i1 false), !dbg !4663
  br i1 %18, label %panic33, label %checkok37, !dbg !4663

checkok37:                                        ; preds = %checkok30
  %ptradd38 = getelementptr inbounds i8, ptr %17, i64 16, !dbg !4663
  %19 = load %"char[]", ptr %ptradd38, align 8, !dbg !4663
  %20 = extractvalue %"char[]" %19, 0, !dbg !4663
  %21 = load ptr, ptr %self, align 8, !dbg !4664
  %checknull39 = icmp eq ptr %21, null, !dbg !4664
  %22 = call i1 @llvm.expect.i1(i1 %checknull39, i1 false), !dbg !4664
  br i1 %22, label %panic40, label %checkok44, !dbg !4664

checkok44:                                        ; preds = %checkok37
  %ptradd45 = getelementptr inbounds i8, ptr %21, i64 32, !dbg !4664
  %23 = load i64, ptr %ptradd45, align 8, !dbg !4664
  %24 = extractvalue %"char[]" %19, 1, !dbg !4664
  %gt = icmp ugt i64 %23, %24, !dbg !4664
  %25 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !4664
  br i1 %25, label %panic46, label %checkok53, !dbg !4664

checkok53:                                        ; preds = %checkok44
  %26 = load i64, ptr %n, align 8, !dbg !4665
  %add = add i64 %23, %26, !dbg !4665
  %lt = icmp ult i64 %24, %add, !dbg !4665
  %sub54 = sub i64 %add, 1, !dbg !4665
  %27 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !4665
  br i1 %27, label %panic55, label %checkok65, !dbg !4665

checkok65:                                        ; preds = %checkok53
  %size = sub i64 %add, %23, !dbg !4663
  %ptradd66 = getelementptr inbounds i8, ptr %20, i64 %23, !dbg !4663
  %28 = insertvalue %"char[]" undef, ptr %ptradd66, 0, !dbg !4663
  %29 = insertvalue %"char[]" %28, i64 %size, 1, !dbg !4663
  store %"char[]" %29, ptr %buf, align 8, !dbg !4663
  %30 = load ptr, ptr %self, align 8, !dbg !4666
  %checknull67 = icmp eq ptr %30, null, !dbg !4666
  %31 = call i1 @llvm.expect.i1(i1 %checknull67, i1 false), !dbg !4666
  br i1 %31, label %panic68, label %checkok72, !dbg !4666

checkok72:                                        ; preds = %checkok65
  %ptradd73 = getelementptr inbounds i8, ptr %30, i64 32, !dbg !4666
  store i64 0, ptr %ptradd73, align 8, !dbg !4667
  %32 = load ptr, ptr %self, align 8, !dbg !4668
  %checknull74 = icmp eq ptr %32, null, !dbg !4668
  %33 = call i1 @llvm.expect.i1(i1 %checknull74, i1 false), !dbg !4668
  br i1 %33, label %panic75, label %checkok79, !dbg !4668

checkok79:                                        ; preds = %checkok72
  %ptradd80 = getelementptr inbounds i8, ptr %32, i64 40, !dbg !4668
  store i64 0, ptr %ptradd80, align 8, !dbg !4669
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %buf, i32 16, i1 false), !dbg !4670
  ret void, !dbg !4670

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg2, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 28), !dbg !4654
  unreachable, !dbg !4654

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg6, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 30), !dbg !4655
  unreachable, !dbg !4655

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg12, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 30), !dbg !4656
  unreachable, !dbg !4656

panic19:                                          ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg20, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg22, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg20, ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, i32 31), !dbg !4659
  unreachable, !dbg !4659

panic26:                                          ; preds = %checkok23
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg27, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg29, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg27, ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, i32 31), !dbg !4660
  unreachable, !dbg !4660

panic33:                                          ; preds = %checkok30
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg36, align 8
  %39 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %39(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 32), !dbg !4663
  unreachable, !dbg !4663

panic40:                                          ; preds = %checkok37
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg43, align 8
  %40 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %40(ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, i32 32), !dbg !4664
  unreachable, !dbg !4664

panic46:                                          ; preds = %checkok44
  store i64 %24, ptr %taddr, align 8
  %41 = insertvalue %any undef, ptr %taddr, 0
  %42 = insertvalue %any %41, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %23, ptr %taddr47, align 8
  %43 = insertvalue %any undef, ptr %taddr47, 0
  %44 = insertvalue %any %43, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg50, align 8
  store %any %42, ptr %varargslots, align 16
  %ptradd51 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %44, ptr %ptradd51, align 16
  %45 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %45, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg52, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, i32 32, ptr align 8 %indirectarg52), !dbg !4663
  unreachable, !dbg !4663

panic55:                                          ; preds = %checkok53
  store i64 %sub54, ptr %taddr56, align 8
  %46 = insertvalue %any undef, ptr %taddr56, 0
  %47 = insertvalue %any %46, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %24, ptr %taddr57, align 8
  %48 = insertvalue %any undef, ptr %taddr57, 0
  %49 = insertvalue %any %48, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg60, align 8
  store %any %47, ptr %varargslots61, align 16
  %ptradd62 = getelementptr inbounds i8, ptr %varargslots61, i64 16
  store %any %49, ptr %ptradd62, align 16
  %50 = insertvalue %"any[]" undef, ptr %varargslots61, 0
  %"$$temp63" = insertvalue %"any[]" %50, i64 2, 1
  store %"any[]" %"$$temp63", ptr %indirectarg64, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 32, ptr align 8 %indirectarg64), !dbg !4663
  unreachable, !dbg !4663

panic68:                                          ; preds = %checkok65
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg70, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg71, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, ptr align 8 %indirectarg71, i32 33), !dbg !4666
  unreachable, !dbg !4666

panic75:                                          ; preds = %checkok72
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg76, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg77, align 8
  store %"char[]" { ptr @.func.43, i64 5 }, ptr %indirectarg78, align 8
  %52 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %52(ptr align 8 %indirectarg76, ptr align 8 %indirectarg77, ptr align 8 %indirectarg78, i32 34), !dbg !4668
  unreachable, !dbg !4668
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Scanner.close(ptr %0) #0 comdat !dbg !4671 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %indirectarg13 = alloca %"char[]", align 8
  %.inlinecache16 = alloca ptr, align 8
  %.cachedtype17 = alloca ptr, align 8
  %indirectarg24 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype17, align 8, !dbg !4674
  store ptr null, ptr %.cachedtype, align 8, !dbg !4674
  %1 = icmp eq ptr %0, null, !dbg !4674
  %2 = call i1 @llvm.expect.i1(i1 %1, i1 false), !dbg !4674
  br i1 %2, label %panic, label %checkok, !dbg !4674

checkok:                                          ; preds = %entry
  store ptr %0, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4675, metadata !DIExpression()), !dbg !4676
  %3 = load ptr, ptr %self, align 8, !dbg !4677
  %checknull = icmp eq ptr %3, null, !dbg !4677
  %4 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4677
  br i1 %4, label %panic3, label %checkok7, !dbg !4677

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %3, i64 8, !dbg !4677
  %5 = load i64, ptr %ptradd, align 8, !dbg !4677
  %6 = inttoptr i64 %5 to ptr, !dbg !4677
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4674
  %7 = icmp eq ptr %6, %type, !dbg !4674
  br i1 %7, label %cache_hit, label %cache_miss, !dbg !4674

cache_miss:                                       ; preds = %checkok7
  %ptradd8 = getelementptr inbounds i8, ptr %6, i64 16, !dbg !4674
  %8 = load ptr, ptr %ptradd8, align 8, !dbg !4674
  %9 = call ptr @.dyn_search(ptr %8, ptr @"$sel.close"), !dbg !4674
  store ptr %9, ptr %.inlinecache, align 8, !dbg !4674
  store ptr %6, ptr %.cachedtype, align 8, !dbg !4674
  br label %10, !dbg !4674

cache_hit:                                        ; preds = %checkok7
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4674
  br label %10, !dbg !4674

10:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %9, %cache_miss ], !dbg !4674
  %ptrbool = icmp ne ptr %fn_phi, null, !dbg !4674
  br i1 %ptrbool, label %if.then, label %if.exit, !dbg !4674

if.then:                                          ; preds = %10
  %11 = load ptr, ptr %self, align 8, !dbg !4678
  %checknull9 = icmp eq ptr %11, null, !dbg !4678
  %12 = call i1 @llvm.expect.i1(i1 %checknull9, i1 false), !dbg !4678
  br i1 %12, label %panic10, label %checkok14, !dbg !4678

checkok14:                                        ; preds = %if.then
  %ptradd15 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !4678
  %13 = load i64, ptr %ptradd15, align 8, !dbg !4678
  %14 = inttoptr i64 %13 to ptr, !dbg !4678
  %type18 = load ptr, ptr %.cachedtype17, align 8, !dbg !4674
  %15 = icmp eq ptr %14, %type18, !dbg !4674
  br i1 %15, label %cache_hit21, label %cache_miss19, !dbg !4674

cache_miss19:                                     ; preds = %checkok14
  %ptradd20 = getelementptr inbounds i8, ptr %14, i64 16, !dbg !4674
  %16 = load ptr, ptr %ptradd20, align 8, !dbg !4674
  %17 = call ptr @.dyn_search(ptr %16, ptr @"$sel.close"), !dbg !4674
  store ptr %17, ptr %.inlinecache16, align 8, !dbg !4674
  store ptr %14, ptr %.cachedtype17, align 8, !dbg !4674
  br label %18, !dbg !4674

cache_hit21:                                      ; preds = %checkok14
  %cache_hit_fn22 = load ptr, ptr %.inlinecache16, align 8, !dbg !4674
  br label %18, !dbg !4674

18:                                               ; preds = %cache_hit21, %cache_miss19
  %fn_phi23 = phi ptr [ %cache_hit_fn22, %cache_hit21 ], [ %17, %cache_miss19 ], !dbg !4674
  %19 = icmp eq ptr %fn_phi23, null, !dbg !4674
  br i1 %19, label %missing_function, label %match, !dbg !4674

missing_function:                                 ; preds = %18
  store %"char[]" { ptr @.panic_msg.203, i64 42 }, ptr %indirectarg24, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg26, align 8
  %20 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %20(ptr align 8 %indirectarg24, ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, i32 40), !dbg !4678
  unreachable, !dbg !4678

match:                                            ; preds = %18
  %21 = load ptr, ptr %11, align 8, !dbg !4678
  %22 = call i64 %fn_phi23(ptr %21), !dbg !4678
  %not_err = icmp eq i64 %22, 0, !dbg !4678
  %23 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4678
  br i1 %23, label %after_check, label %assign_optional, !dbg !4678

assign_optional:                                  ; preds = %match
  store i64 %22, ptr %reterr, align 8, !dbg !4678
  br label %err_retblock, !dbg !4678

after_check:                                      ; preds = %match
  ret i64 0, !dbg !4678

err_retblock:                                     ; preds = %assign_optional
  %24 = load i64, ptr %reterr, align 8, !dbg !4678
  ret i64 %24, !dbg !4678

if.exit:                                          ; preds = %10
  ret i64 0, !dbg !4678

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg2, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 38), !dbg !4676
  unreachable, !dbg !4676

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg6, align 8
  %26 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %26(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 40), !dbg !4677
  unreachable, !dbg !4677

panic10:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg12, align 8
  store %"char[]" { ptr @.func.202, i64 5 }, ptr %indirectarg13, align 8
  %27 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %27(ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, ptr align 8 %indirectarg13, i32 40), !dbg !4678
  unreachable, !dbg !4678
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Scanner.scan(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !4679 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg7 = alloca %"char[]", align 8
  %indirectarg8 = alloca %"char[]", align 8
  %indirectarg9 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %indirectarg16 = alloca %"char[]", align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %indirectarg28 = alloca %"char[]", align 8
  %indirectarg29 = alloca %"char[]", align 8
  %indirectarg30 = alloca %"char[]", align 8
  %error_var = alloca i64, align 8
  %self33 = alloca ptr, align 8
  %indirectarg36 = alloca %"char[]", align 8
  %indirectarg37 = alloca %"char[]", align 8
  %indirectarg38 = alloca %"char[]", align 8
  %buf = alloca %"char[]", align 8
  %n = alloca i64, align 8
  %n.f = alloca i64, align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %indirectarg45 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %indirectarg51 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg52 = alloca %"char[]", align 8
  %err = alloca i64, align 8
  %switch = alloca i64, align 8
  %indirectarg60 = alloca %"char[]", align 8
  %indirectarg61 = alloca %"char[]", align 8
  %indirectarg62 = alloca %"char[]", align 8
  %indirectarg68 = alloca %"char[]", align 8
  %indirectarg69 = alloca %"char[]", align 8
  %indirectarg70 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %indirectarg77 = alloca %"char[]", align 8
  %indirectarg81 = alloca %"char[]", align 8
  %indirectarg82 = alloca %"char[]", align 8
  %indirectarg83 = alloca %"char[]", align 8
  %n85 = alloca i64, align 8
  %indirectarg88 = alloca %"char[]", align 8
  %indirectarg89 = alloca %"char[]", align 8
  %indirectarg90 = alloca %"char[]", align 8
  %indirectarg95 = alloca %"char[]", align 8
  %indirectarg96 = alloca %"char[]", align 8
  %indirectarg97 = alloca %"char[]", align 8
  %buf100 = alloca %"char[]", align 8
  %indirectarg103 = alloca %"char[]", align 8
  %indirectarg104 = alloca %"char[]", align 8
  %indirectarg105 = alloca %"char[]", align 8
  %indirectarg110 = alloca %"char[]", align 8
  %indirectarg111 = alloca %"char[]", align 8
  %indirectarg112 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr117 = alloca i64, align 8
  %indirectarg118 = alloca %"char[]", align 8
  %indirectarg119 = alloca %"char[]", align 8
  %indirectarg120 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg122 = alloca %"any[]", align 8
  %taddr127 = alloca i64, align 8
  %taddr128 = alloca i64, align 8
  %indirectarg129 = alloca %"char[]", align 8
  %indirectarg130 = alloca %"char[]", align 8
  %indirectarg131 = alloca %"char[]", align 8
  %varargslots132 = alloca [2 x %any], align 16
  %indirectarg135 = alloca %"any[]", align 8
  %i = alloca i64, align 8
  %self138 = alloca ptr, align 8
  %buf139 = alloca %"char[]", align 8
  %pattern = alloca %"char[]", align 8
  %retparam140 = alloca i64, align 8
  %indirectarg141 = alloca %"char[]", align 8
  %indirectarg142 = alloca %"char[]", align 8
  %indirectarg148 = alloca %"char[]", align 8
  %indirectarg149 = alloca %"char[]", align 8
  %indirectarg150 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %taddr158 = alloca i64, align 8
  %taddr159 = alloca i64, align 8
  %indirectarg160 = alloca %"char[]", align 8
  %indirectarg161 = alloca %"char[]", align 8
  %indirectarg162 = alloca %"char[]", align 8
  %varargslots163 = alloca [2 x %any], align 16
  %indirectarg166 = alloca %"any[]", align 8
  %taddr172 = alloca i64, align 8
  %taddr173 = alloca i64, align 8
  %indirectarg174 = alloca %"char[]", align 8
  %indirectarg175 = alloca %"char[]", align 8
  %indirectarg176 = alloca %"char[]", align 8
  %varargslots177 = alloca [2 x %any], align 16
  %indirectarg180 = alloca %"any[]", align 8
  %indirectarg186 = alloca %"char[]", align 8
  %indirectarg187 = alloca %"char[]", align 8
  %indirectarg188 = alloca %"char[]", align 8
  %indirectarg194 = alloca %"char[]", align 8
  %indirectarg195 = alloca %"char[]", align 8
  %indirectarg196 = alloca %"char[]", align 8
  %indirectarg201 = alloca %"char[]", align 8
  %indirectarg202 = alloca %"char[]", align 8
  %indirectarg203 = alloca %"char[]", align 8
  %taddr213 = alloca i64, align 8
  %taddr214 = alloca i64, align 8
  %indirectarg215 = alloca %"char[]", align 8
  %indirectarg216 = alloca %"char[]", align 8
  %indirectarg217 = alloca %"char[]", align 8
  %varargslots218 = alloca [2 x %any], align 16
  %indirectarg221 = alloca %"any[]", align 8
  %indirectarg226 = alloca %"char[]", align 8
  %indirectarg227 = alloca %"char[]", align 8
  %indirectarg228 = alloca %"char[]", align 8
  %taddr233 = alloca i64, align 8
  %taddr234 = alloca i64, align 8
  %indirectarg235 = alloca %"char[]", align 8
  %indirectarg236 = alloca %"char[]", align 8
  %indirectarg237 = alloca %"char[]", align 8
  %varargslots238 = alloca [2 x %any], align 16
  %indirectarg241 = alloca %"any[]", align 8
  %taddr247 = alloca i64, align 8
  %taddr248 = alloca i64, align 8
  %indirectarg249 = alloca %"char[]", align 8
  %indirectarg250 = alloca %"char[]", align 8
  %indirectarg251 = alloca %"char[]", align 8
  %varargslots252 = alloca [2 x %any], align 16
  %indirectarg255 = alloca %"any[]", align 8
  %taddr258 = alloca %"char[]", align 8
  %taddr260 = alloca %"char[]", align 8
  %taddr264 = alloca i64, align 8
  %taddr265 = alloca i64, align 8
  %indirectarg266 = alloca %"char[]", align 8
  %indirectarg267 = alloca %"char[]", align 8
  %indirectarg268 = alloca %"char[]", align 8
  %varargslots269 = alloca [2 x %any], align 16
  %indirectarg272 = alloca %"any[]", align 8
  %indirectarg276 = alloca %"char[]", align 8
  %indirectarg277 = alloca %"char[]", align 8
  %indirectarg278 = alloca %"char[]", align 8
  %indirectarg283 = alloca %"char[]", align 8
  %indirectarg284 = alloca %"char[]", align 8
  %indirectarg285 = alloca %"char[]", align 8
  %taddr290 = alloca i64, align 8
  %taddr291 = alloca i64, align 8
  %indirectarg292 = alloca %"char[]", align 8
  %indirectarg293 = alloca %"char[]", align 8
  %indirectarg294 = alloca %"char[]", align 8
  %varargslots295 = alloca [2 x %any], align 16
  %indirectarg298 = alloca %"any[]", align 8
  %p = alloca i64, align 8
  %error_var302 = alloca i64, align 8
  %self303 = alloca ptr, align 8
  %buf304 = alloca %"char[]", align 8
  %n305 = alloca i64, align 8
  %n.f306 = alloca i64, align 8
  %indirectarg309 = alloca %"char[]", align 8
  %indirectarg310 = alloca %"char[]", align 8
  %indirectarg311 = alloca %"char[]", align 8
  %.inlinecache314 = alloca ptr, align 8
  %.cachedtype315 = alloca ptr, align 8
  %indirectarg323 = alloca %"char[]", align 8
  %indirectarg324 = alloca %"char[]", align 8
  %indirectarg325 = alloca %"char[]", align 8
  %retparam327 = alloca i64, align 8
  %indirectarg328 = alloca %"char[]", align 8
  %err333 = alloca i64, align 8
  %switch342 = alloca i64, align 8
  %indirectarg353 = alloca %"char[]", align 8
  %indirectarg354 = alloca %"char[]", align 8
  %indirectarg355 = alloca %"char[]", align 8
  %taddr361 = alloca i64, align 8
  %taddr362 = alloca i64, align 8
  %indirectarg363 = alloca %"char[]", align 8
  %indirectarg364 = alloca %"char[]", align 8
  %indirectarg365 = alloca %"char[]", align 8
  %varargslots366 = alloca [2 x %any], align 16
  %indirectarg369 = alloca %"any[]", align 8
  %taddr375 = alloca i64, align 8
  %taddr376 = alloca i64, align 8
  %indirectarg377 = alloca %"char[]", align 8
  %indirectarg378 = alloca %"char[]", align 8
  %indirectarg379 = alloca %"char[]", align 8
  %varargslots380 = alloca [2 x %any], align 16
  %indirectarg383 = alloca %"any[]", align 8
  %i386 = alloca i64, align 8
  %error_var387 = alloca i64, align 8
  %self388 = alloca ptr, align 8
  %buf389 = alloca %"char[]", align 8
  %pattern390 = alloca %"char[]", align 8
  %retparam391 = alloca i64, align 8
  %indirectarg392 = alloca %"char[]", align 8
  %indirectarg393 = alloca %"char[]", align 8
  %indirectarg401 = alloca %"char[]", align 8
  %indirectarg402 = alloca %"char[]", align 8
  %indirectarg403 = alloca %"char[]", align 8
  %reterr409 = alloca i64, align 8
  %indirectarg412 = alloca %"char[]", align 8
  %indirectarg413 = alloca %"char[]", align 8
  %indirectarg414 = alloca %"char[]", align 8
  %taddr419 = alloca i64, align 8
  %taddr420 = alloca i64, align 8
  %indirectarg421 = alloca %"char[]", align 8
  %indirectarg422 = alloca %"char[]", align 8
  %indirectarg423 = alloca %"char[]", align 8
  %varargslots424 = alloca [2 x %any], align 16
  %indirectarg427 = alloca %"any[]", align 8
  %taddr434 = alloca i64, align 8
  %taddr435 = alloca i64, align 8
  %indirectarg436 = alloca %"char[]", align 8
  %indirectarg437 = alloca %"char[]", align 8
  %indirectarg438 = alloca %"char[]", align 8
  %varargslots439 = alloca [2 x %any], align 16
  %indirectarg442 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype315, align 8, !dbg !4682
  store ptr null, ptr %.cachedtype, align 8, !dbg !4682
  %3 = icmp eq ptr %1, null, !dbg !4682
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !4682
  br i1 %4, label %panic, label %checkok, !dbg !4682

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4683, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4685, metadata !DIExpression()), !dbg !4686
  %ptradd = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4687
  %5 = load i64, ptr %ptradd, align 8, !dbg !4687
  %lt = icmp ult i64 0, %5, !dbg !4687
  br i1 %lt, label %assert_ok, label %assert_fail, !dbg !4687

assert_fail:                                      ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.246, i64 67 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg5, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, i32 45), !dbg !4687
  unreachable, !dbg !4687

assert_ok:                                        ; preds = %checkok
  %7 = load ptr, ptr %self, align 8, !dbg !4689
  %checknull = icmp eq ptr %7, null, !dbg !4689
  %8 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4689
  br i1 %8, label %panic6, label %checkok10, !dbg !4689

checkok10:                                        ; preds = %assert_ok
  %ptradd11 = getelementptr inbounds i8, ptr %7, i64 16, !dbg !4689
  %ptradd12 = getelementptr inbounds i8, ptr %ptradd11, i64 8, !dbg !4689
  %9 = load i64, ptr %ptradd12, align 8, !dbg !4689
  %ptradd13 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4690
  %10 = load i64, ptr %ptradd13, align 8, !dbg !4690
  %gt = icmp ugt i64 %9, %10, !dbg !4689
  br i1 %gt, label %assert_ok18, label %assert_fail14, !dbg !4689

assert_fail14:                                    ; preds = %checkok10
  store %"char[]" { ptr @.panic_msg.247, i64 69 }, ptr %indirectarg15, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg16, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg17, align 8
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr align 8 %indirectarg15, ptr align 8 %indirectarg16, ptr align 8 %indirectarg17, i32 46), !dbg !4689
  unreachable, !dbg !4689

assert_ok18:                                      ; preds = %checkok10
  %12 = load ptr, ptr %self, align 8, !dbg !4691
  %checknull19 = icmp eq ptr %12, null, !dbg !4691
  %13 = call i1 @llvm.expect.i1(i1 %checknull19, i1 false), !dbg !4691
  br i1 %13, label %panic20, label %checkok24, !dbg !4691

checkok24:                                        ; preds = %assert_ok18
  %ptradd25 = getelementptr inbounds i8, ptr %12, i64 40, !dbg !4691
  %14 = load i64, ptr %ptradd25, align 8, !dbg !4691
  %eq = icmp eq i64 0, %14, !dbg !4691
  br i1 %eq, label %if.then, label %if.exit65, !dbg !4691

if.then:                                          ; preds = %checkok24
  %15 = load ptr, ptr %self, align 8, !dbg !4692
  %checknull26 = icmp eq ptr %15, null, !dbg !4692
  %16 = call i1 @llvm.expect.i1(i1 %checknull26, i1 false), !dbg !4692
  br i1 %16, label %panic27, label %checkok31, !dbg !4692

checkok31:                                        ; preds = %if.then
  %ptradd32 = getelementptr inbounds i8, ptr %15, i64 40, !dbg !4692
  %17 = load ptr, ptr %self, align 8
  store ptr %17, ptr %self33, align 8
  %18 = load ptr, ptr %self, align 8, !dbg !4694
  %checknull34 = icmp eq ptr %18, null, !dbg !4694
  %19 = call i1 @llvm.expect.i1(i1 %checknull34, i1 false), !dbg !4694
  br i1 %19, label %panic35, label %checkok39, !dbg !4694

checkok39:                                        ; preds = %checkok31
  %ptradd40 = getelementptr inbounds i8, ptr %18, i64 16, !dbg !4694
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %buf, ptr align 8 %ptradd40, i32 16, i1 false)
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4695, metadata !DIExpression()), !dbg !4697
  %20 = load ptr, ptr %self33, align 8, !dbg !4699
  %checknull41 = icmp eq ptr %20, null, !dbg !4699
  %21 = call i1 @llvm.expect.i1(i1 %checknull41, i1 false), !dbg !4699
  br i1 %21, label %panic42, label %checkok46, !dbg !4699

checkok46:                                        ; preds = %checkok39
  %ptradd47 = getelementptr inbounds i8, ptr %20, i64 8, !dbg !4700
  %22 = load i64, ptr %ptradd47, align 8, !dbg !4700
  %23 = inttoptr i64 %22 to ptr, !dbg !4700
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4682
  %24 = icmp eq ptr %23, %type, !dbg !4682
  br i1 %24, label %cache_hit, label %cache_miss, !dbg !4682

cache_miss:                                       ; preds = %checkok46
  %ptradd48 = getelementptr inbounds i8, ptr %23, i64 16, !dbg !4682
  %25 = load ptr, ptr %ptradd48, align 8, !dbg !4682
  %26 = call ptr @.dyn_search(ptr %25, ptr @"$sel.read"), !dbg !4682
  store ptr %26, ptr %.inlinecache, align 8, !dbg !4682
  store ptr %23, ptr %.cachedtype, align 8, !dbg !4682
  br label %27, !dbg !4682

cache_hit:                                        ; preds = %checkok46
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4682
  br label %27, !dbg !4682

27:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %26, %cache_miss ], !dbg !4682
  %28 = icmp eq ptr %fn_phi, null, !dbg !4682
  br i1 %28, label %missing_function, label %match, !dbg !4682

missing_function:                                 ; preds = %27
  store %"char[]" { ptr @.panic_msg.205, i64 41 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg50, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg51, align 8
  %29 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %29(ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, ptr align 8 %indirectarg51, i32 92), !dbg !4699
  unreachable, !dbg !4699

match:                                            ; preds = %27
  %30 = load ptr, ptr %20, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg52, ptr align 8 %buf, i32 16, i1 false)
  %31 = call i64 %fn_phi(ptr %retparam, ptr %30, ptr align 8 %indirectarg52), !dbg !4699
  %not_err = icmp eq i64 %31, 0, !dbg !4699
  %32 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4699
  br i1 %32, label %after_check, label %assign_optional, !dbg !4699

assign_optional:                                  ; preds = %match
  store i64 %31, ptr %n.f, align 8, !dbg !4699
  br label %after_assign, !dbg !4699

after_check:                                      ; preds = %match
  %33 = load i64, ptr %retparam, align 8, !dbg !4699
  store i64 %33, ptr %n, align 8, !dbg !4699
  store i64 0, ptr %n.f, align 8, !dbg !4699
  br label %after_assign, !dbg !4699

after_assign:                                     ; preds = %after_check, %assign_optional
  call void @llvm.dbg.declare(metadata ptr %err, metadata !4701, metadata !DIExpression()), !dbg !4702
  br label %testblock, !dbg !4702

testblock:                                        ; preds = %after_assign
  %optval = load i64, ptr %n.f, align 8, !dbg !4703
  %not_err53 = icmp eq i64 %optval, 0, !dbg !4703
  %34 = call i1 @llvm.expect.i1(i1 %not_err53, i1 true), !dbg !4703
  br i1 %34, label %after_check55, label %assign_optional54, !dbg !4703

assign_optional54:                                ; preds = %testblock
  store i64 %optval, ptr %err, align 8, !dbg !4703
  br label %end_block, !dbg !4703

after_check55:                                    ; preds = %testblock
  store i64 0, ptr %err, align 8, !dbg !4703
  br label %end_block, !dbg !4703

end_block:                                        ; preds = %after_check55, %assign_optional54
  %35 = load i64, ptr %err, align 8, !dbg !4703
  %neq = icmp ne i64 %35, 0, !dbg !4703
  br i1 %neq, label %if.then56, label %if.exit, !dbg !4703

if.then56:                                        ; preds = %end_block
  store i64 %35, ptr %switch, align 8
  br label %switch.entry

switch.entry:                                     ; preds = %if.then56
  %36 = load i64, ptr %switch, align 8
  %eq57 = icmp eq i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), %36, !dbg !4704
  br i1 %eq57, label %switch.case, label %next_if, !dbg !4704

switch.case:                                      ; preds = %switch.entry
  store i64 ptrtoint (ptr @"std.core.builtin.SearchResult$MISSING" to i64), ptr %error_var, align 8, !dbg !4705
  br label %guard_block, !dbg !4705

next_if:                                          ; preds = %switch.entry
  br label %switch.default, !dbg !4705

switch.default:                                   ; preds = %next_if
  %37 = load i64, ptr %err, align 8, !dbg !4707
  store i64 %37, ptr %error_var, align 8, !dbg !4707
  br label %guard_block, !dbg !4707

if.exit:                                          ; preds = %end_block
  br label %noerr_block, !dbg !4709

guard_block:                                      ; preds = %switch.default, %switch.case
  %38 = load i64, ptr %error_var, align 8, !dbg !4709
  ret i64 %38, !dbg !4709

noerr_block:                                      ; preds = %if.exit
  %39 = load i64, ptr %n, align 8, !dbg !4709
  store i64 %39, ptr %ptradd32, align 8, !dbg !4709
  %40 = load ptr, ptr %self, align 8, !dbg !4710
  %checknull58 = icmp eq ptr %40, null, !dbg !4710
  %41 = call i1 @llvm.expect.i1(i1 %checknull58, i1 false), !dbg !4710
  br i1 %41, label %panic59, label %checkok63, !dbg !4710

checkok63:                                        ; preds = %noerr_block
  %ptradd64 = getelementptr inbounds i8, ptr %40, i64 32, !dbg !4710
  store i64 0, ptr %ptradd64, align 8, !dbg !4711
  br label %if.exit65, !dbg !4711

if.exit65:                                        ; preds = %checkok63, %checkok24
  %42 = load ptr, ptr %self, align 8, !dbg !4712
  %checknull66 = icmp eq ptr %42, null, !dbg !4712
  %43 = call i1 @llvm.expect.i1(i1 %checknull66, i1 false), !dbg !4712
  br i1 %43, label %panic67, label %checkok71, !dbg !4712

checkok71:                                        ; preds = %if.exit65
  %ptradd72 = getelementptr inbounds i8, ptr %42, i64 40, !dbg !4712
  %44 = load i64, ptr %ptradd72, align 8, !dbg !4712
  %45 = load ptr, ptr %self, align 8, !dbg !4713
  %checknull73 = icmp eq ptr %45, null, !dbg !4713
  %46 = call i1 @llvm.expect.i1(i1 %checknull73, i1 false), !dbg !4713
  br i1 %46, label %panic74, label %checkok78, !dbg !4713

checkok78:                                        ; preds = %checkok71
  %ptradd79 = getelementptr inbounds i8, ptr %45, i64 32, !dbg !4713
  %47 = load i64, ptr %ptradd79, align 8, !dbg !4713
  %ge = icmp uge i64 %44, %47, !dbg !4712
  br i1 %ge, label %assert_ok84, label %assert_fail80, !dbg !4712

assert_fail80:                                    ; preds = %checkok78
  store %"char[]" { ptr @.panic_msg.224, i64 16 }, ptr %indirectarg81, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg82, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg83, align 8
  %48 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %48(ptr align 8 %indirectarg81, ptr align 8 %indirectarg82, ptr align 8 %indirectarg83, i32 56), !dbg !4712
  unreachable, !dbg !4712

assert_ok84:                                      ; preds = %checkok78
  call void @llvm.dbg.declare(metadata ptr %n85, metadata !4714, metadata !DIExpression()), !dbg !4715
  %49 = load ptr, ptr %self, align 8, !dbg !4716
  %checknull86 = icmp eq ptr %49, null, !dbg !4716
  %50 = call i1 @llvm.expect.i1(i1 %checknull86, i1 false), !dbg !4716
  br i1 %50, label %panic87, label %checkok91, !dbg !4716

checkok91:                                        ; preds = %assert_ok84
  %ptradd92 = getelementptr inbounds i8, ptr %49, i64 40, !dbg !4716
  %51 = load i64, ptr %ptradd92, align 8, !dbg !4716
  %52 = load ptr, ptr %self, align 8, !dbg !4717
  %checknull93 = icmp eq ptr %52, null, !dbg !4717
  %53 = call i1 @llvm.expect.i1(i1 %checknull93, i1 false), !dbg !4717
  br i1 %53, label %panic94, label %checkok98, !dbg !4717

checkok98:                                        ; preds = %checkok91
  %ptradd99 = getelementptr inbounds i8, ptr %52, i64 32, !dbg !4717
  %54 = load i64, ptr %ptradd99, align 8, !dbg !4717
  %sub = sub i64 %51, %54, !dbg !4716
  store i64 %sub, ptr %n85, align 8, !dbg !4716
  call void @llvm.dbg.declare(metadata ptr %buf100, metadata !4718, metadata !DIExpression()), !dbg !4719
  %55 = load ptr, ptr %self, align 8, !dbg !4720
  %checknull101 = icmp eq ptr %55, null, !dbg !4720
  %56 = call i1 @llvm.expect.i1(i1 %checknull101, i1 false), !dbg !4720
  br i1 %56, label %panic102, label %checkok106, !dbg !4720

checkok106:                                       ; preds = %checkok98
  %ptradd107 = getelementptr inbounds i8, ptr %55, i64 16, !dbg !4720
  %57 = load %"char[]", ptr %ptradd107, align 8, !dbg !4720
  %58 = extractvalue %"char[]" %57, 0, !dbg !4720
  %59 = load ptr, ptr %self, align 8, !dbg !4721
  %checknull108 = icmp eq ptr %59, null, !dbg !4721
  %60 = call i1 @llvm.expect.i1(i1 %checknull108, i1 false), !dbg !4721
  br i1 %60, label %panic109, label %checkok113, !dbg !4721

checkok113:                                       ; preds = %checkok106
  %ptradd114 = getelementptr inbounds i8, ptr %59, i64 32, !dbg !4721
  %61 = load i64, ptr %ptradd114, align 8, !dbg !4721
  %62 = extractvalue %"char[]" %57, 1, !dbg !4721
  %gt115 = icmp ugt i64 %61, %62, !dbg !4721
  %63 = call i1 @llvm.expect.i1(i1 %gt115, i1 false), !dbg !4721
  br i1 %63, label %panic116, label %checkok123, !dbg !4721

checkok123:                                       ; preds = %checkok113
  %64 = load i64, ptr %n85, align 8, !dbg !4722
  %add = add i64 %61, %64, !dbg !4722
  %lt124 = icmp ult i64 %62, %add, !dbg !4722
  %sub125 = sub i64 %add, 1, !dbg !4722
  %65 = call i1 @llvm.expect.i1(i1 %lt124, i1 false), !dbg !4722
  br i1 %65, label %panic126, label %checkok136, !dbg !4722

checkok136:                                       ; preds = %checkok123
  %size = sub i64 %add, %61, !dbg !4720
  %ptradd137 = getelementptr inbounds i8, ptr %58, i64 %61, !dbg !4720
  %66 = insertvalue %"char[]" undef, ptr %ptradd137, 0, !dbg !4720
  %67 = insertvalue %"char[]" %66, i64 %size, 1, !dbg !4720
  store %"char[]" %67, ptr %buf100, align 8, !dbg !4720
  call void @llvm.dbg.declare(metadata ptr %i, metadata !4723, metadata !DIExpression()), !dbg !4724
  store i64 0, ptr %i, align 8, !dbg !4724
  %68 = load ptr, ptr %self, align 8
  store ptr %68, ptr %self138, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %buf139, ptr align 8 %buf100, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %pattern, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg141, ptr align 8 %buf139, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg142, ptr align 8 %pattern, i32 16, i1 false)
  %69 = call i64 @std.core.String.index_of(ptr %retparam140, ptr align 8 %indirectarg141, ptr align 8 %indirectarg142), !dbg !4725
  %not_err143 = icmp eq i64 %69, 0, !dbg !4725
  %70 = call i1 @llvm.expect.i1(i1 %not_err143, i1 true), !dbg !4725
  br i1 %70, label %after_check144, label %catch_landing, !dbg !4725

after_check144:                                   ; preds = %checkok136
  %71 = load i64, ptr %retparam140, align 8, !dbg !4725
  store i64 %71, ptr %i, align 8, !dbg !4725
  br label %phi_try_catch, !dbg !4725

catch_landing:                                    ; preds = %checkok136
  br label %phi_try_catch, !dbg !4725

phi_try_catch:                                    ; preds = %catch_landing, %after_check144
  %val = phi i1 [ true, %after_check144 ], [ false, %catch_landing ], !dbg !4725
  br i1 %val, label %if.then145, label %if.exit183, !dbg !4725

if.then145:                                       ; preds = %phi_try_catch
  %72 = load ptr, ptr %self, align 8, !dbg !4728
  %checknull146 = icmp eq ptr %72, null, !dbg !4728
  %73 = call i1 @llvm.expect.i1(i1 %checknull146, i1 false), !dbg !4728
  br i1 %73, label %panic147, label %checkok151, !dbg !4728

checkok151:                                       ; preds = %if.then145
  %ptradd152 = getelementptr inbounds i8, ptr %72, i64 32, !dbg !4728
  %74 = load i64, ptr %ptradd152, align 8, !dbg !4728
  %75 = load i64, ptr %i, align 8, !dbg !4730
  %ptradd153 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4731
  %76 = load i64, ptr %ptradd153, align 8, !dbg !4731
  %add154 = add i64 %75, %76, !dbg !4730
  %add155 = add i64 %74, %add154, !dbg !4728
  store i64 %add155, ptr %ptradd152, align 8, !dbg !4728
  %77 = load %"char[]", ptr %buf100, align 8, !dbg !4732
  %78 = extractvalue %"char[]" %77, 0, !dbg !4732
  %79 = extractvalue %"char[]" %77, 1, !dbg !4733
  %gt156 = icmp ugt i64 0, %79, !dbg !4733
  %80 = call i1 @llvm.expect.i1(i1 %gt156, i1 false), !dbg !4733
  br i1 %80, label %panic157, label %checkok167, !dbg !4733

checkok167:                                       ; preds = %checkok151
  %81 = load i64, ptr %i, align 8, !dbg !4734
  %add168 = add i64 0, %81, !dbg !4734
  %lt169 = icmp ult i64 %79, %add168, !dbg !4734
  %sub170 = sub i64 %add168, 1, !dbg !4734
  %82 = call i1 @llvm.expect.i1(i1 %lt169, i1 false), !dbg !4734
  br i1 %82, label %panic171, label %checkok181, !dbg !4734

checkok181:                                       ; preds = %checkok167
  %size182 = sub i64 %add168, 0, !dbg !4732
  %83 = insertvalue %"char[]" undef, ptr %78, 0, !dbg !4732
  %84 = insertvalue %"char[]" %83, i64 %size182, 1, !dbg !4732
  store %"char[]" %84, ptr %0, align 8, !dbg !4732
  ret i64 0, !dbg !4732

if.exit183:                                       ; preds = %phi_try_catch
  %85 = load ptr, ptr %self, align 8, !dbg !4735
  %checknull184 = icmp eq ptr %85, null, !dbg !4735
  %86 = call i1 @llvm.expect.i1(i1 %checknull184, i1 false), !dbg !4735
  br i1 %86, label %panic185, label %checkok189, !dbg !4735

checkok189:                                       ; preds = %if.exit183
  %ptradd190 = getelementptr inbounds i8, ptr %85, i64 32, !dbg !4735
  %87 = load i64, ptr %ptradd190, align 8, !dbg !4735
  %eq191 = icmp eq i64 0, %87, !dbg !4735
  br i1 %eq191, label %or.phi, label %or.rhs, !dbg !4735

or.rhs:                                           ; preds = %checkok189
  %88 = load ptr, ptr %self, align 8, !dbg !4736
  %checknull192 = icmp eq ptr %88, null, !dbg !4736
  %89 = call i1 @llvm.expect.i1(i1 %checknull192, i1 false), !dbg !4736
  br i1 %89, label %panic193, label %checkok197, !dbg !4736

checkok197:                                       ; preds = %or.rhs
  %ptradd198 = getelementptr inbounds i8, ptr %88, i64 40, !dbg !4736
  %90 = load i64, ptr %ptradd198, align 8, !dbg !4736
  %91 = load ptr, ptr %self, align 8, !dbg !4737
  %checknull199 = icmp eq ptr %91, null, !dbg !4737
  %92 = call i1 @llvm.expect.i1(i1 %checknull199, i1 false), !dbg !4737
  br i1 %92, label %panic200, label %checkok204, !dbg !4737

checkok204:                                       ; preds = %checkok197
  %ptradd205 = getelementptr inbounds i8, ptr %91, i64 16, !dbg !4737
  %ptradd206 = getelementptr inbounds i8, ptr %ptradd205, i64 8, !dbg !4737
  %93 = load i64, ptr %ptradd206, align 8, !dbg !4737
  %lt207 = icmp ult i64 %90, %93, !dbg !4736
  br label %or.phi, !dbg !4736

or.phi:                                           ; preds = %checkok204, %checkok189
  %val208 = phi i1 [ true, %checkok189 ], [ %lt207, %checkok204 ], !dbg !4736
  br i1 %val208, label %if.then209, label %if.exit210, !dbg !4736

if.then209:                                       ; preds = %or.phi
  ret i64 ptrtoint (ptr @"std.core.builtin.SearchResult$MISSING" to i64), !dbg !4738

if.exit210:                                       ; preds = %or.phi
  %94 = load %"char[]", ptr %buf100, align 8, !dbg !4740
  %95 = extractvalue %"char[]" %94, 0, !dbg !4740
  %96 = extractvalue %"char[]" %94, 1, !dbg !4741
  %gt211 = icmp ugt i64 0, %96, !dbg !4741
  %97 = call i1 @llvm.expect.i1(i1 %gt211, i1 false), !dbg !4741
  br i1 %97, label %panic212, label %checkok222, !dbg !4741

checkok222:                                       ; preds = %if.exit210
  %size223 = sub i64 %96, 0, !dbg !4740
  %98 = insertvalue %"char[]" undef, ptr %95, 0, !dbg !4740
  %99 = insertvalue %"char[]" %98, i64 %size223, 1, !dbg !4740
  %100 = load ptr, ptr %self, align 8, !dbg !4742
  %checknull224 = icmp eq ptr %100, null, !dbg !4742
  %101 = call i1 @llvm.expect.i1(i1 %checknull224, i1 false), !dbg !4742
  br i1 %101, label %panic225, label %checkok229, !dbg !4742

checkok229:                                       ; preds = %checkok222
  %ptradd230 = getelementptr inbounds i8, ptr %100, i64 16, !dbg !4742
  %102 = load %"char[]", ptr %ptradd230, align 8, !dbg !4742
  %103 = extractvalue %"char[]" %102, 0, !dbg !4742
  %104 = extractvalue %"char[]" %102, 1, !dbg !4743
  %gt231 = icmp ugt i64 0, %104, !dbg !4743
  %105 = call i1 @llvm.expect.i1(i1 %gt231, i1 false), !dbg !4743
  br i1 %105, label %panic232, label %checkok242, !dbg !4743

checkok242:                                       ; preds = %checkok229
  %106 = load i64, ptr %n85, align 8, !dbg !4744
  %add243 = add i64 0, %106, !dbg !4744
  %lt244 = icmp ult i64 %104, %add243, !dbg !4744
  %sub245 = sub i64 %add243, 1, !dbg !4744
  %107 = call i1 @llvm.expect.i1(i1 %lt244, i1 false), !dbg !4744
  br i1 %107, label %panic246, label %checkok256, !dbg !4744

checkok256:                                       ; preds = %checkok242
  %size257 = sub i64 %add243, 0, !dbg !4742
  %108 = insertvalue %"char[]" undef, ptr %103, 0, !dbg !4742
  %109 = insertvalue %"char[]" %108, i64 %size257, 1, !dbg !4742
  %110 = extractvalue %"char[]" %109, 0, !dbg !4742
  %111 = extractvalue %"char[]" %99, 0, !dbg !4742
  store %"char[]" %99, ptr %taddr258, align 8
  %ptradd259 = getelementptr inbounds i8, ptr %taddr258, i64 8
  %112 = load i64, ptr %ptradd259, align 8
  store %"char[]" %109, ptr %taddr260, align 8
  %ptradd261 = getelementptr inbounds i8, ptr %taddr260, i64 8
  %113 = load i64, ptr %ptradd261, align 8
  %neq262 = icmp ne i64 %113, %112
  %114 = call i1 @llvm.expect.i1(i1 %neq262, i1 false)
  br i1 %114, label %panic263, label %checkok273

checkok273:                                       ; preds = %checkok256
  %115 = mul i64 %112, 1, !dbg !4742
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %110, ptr align 1 %111, i64 %115, i1 false), !dbg !4742
  %116 = load ptr, ptr %self, align 8, !dbg !4745
  %checknull274 = icmp eq ptr %116, null, !dbg !4745
  %117 = call i1 @llvm.expect.i1(i1 %checknull274, i1 false), !dbg !4745
  br i1 %117, label %panic275, label %checkok279, !dbg !4745

checkok279:                                       ; preds = %checkok273
  %ptradd280 = getelementptr inbounds i8, ptr %116, i64 32, !dbg !4745
  store i64 0, ptr %ptradd280, align 8, !dbg !4746
  %118 = load ptr, ptr %self, align 8, !dbg !4747
  %checknull281 = icmp eq ptr %118, null, !dbg !4747
  %119 = call i1 @llvm.expect.i1(i1 %checknull281, i1 false), !dbg !4747
  br i1 %119, label %panic282, label %checkok286, !dbg !4747

checkok286:                                       ; preds = %checkok279
  %ptradd287 = getelementptr inbounds i8, ptr %118, i64 16, !dbg !4747
  %120 = load %"char[]", ptr %ptradd287, align 8, !dbg !4747
  %121 = extractvalue %"char[]" %120, 0, !dbg !4747
  %122 = load i64, ptr %n85, align 8, !dbg !4748
  %123 = extractvalue %"char[]" %120, 1, !dbg !4748
  %gt288 = icmp ugt i64 %122, %123, !dbg !4748
  %124 = call i1 @llvm.expect.i1(i1 %gt288, i1 false), !dbg !4748
  br i1 %124, label %panic289, label %checkok299, !dbg !4748

checkok299:                                       ; preds = %checkok286
  %size300 = sub i64 %123, %122, !dbg !4747
  %ptradd301 = getelementptr inbounds i8, ptr %121, i64 %122, !dbg !4747
  %125 = insertvalue %"char[]" undef, ptr %ptradd301, 0, !dbg !4747
  %126 = insertvalue %"char[]" %125, i64 %size300, 1, !dbg !4747
  store %"char[]" %126, ptr %buf100, align 8, !dbg !4747
  call void @llvm.dbg.declare(metadata ptr %p, metadata !4749, metadata !DIExpression()), !dbg !4750
  %127 = load ptr, ptr %self, align 8
  store ptr %127, ptr %self303, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %buf304, ptr align 8 %buf100, i32 16, i1 false)
  call void @llvm.dbg.declare(metadata ptr %n305, metadata !4751, metadata !DIExpression()), !dbg !4753
  %128 = load ptr, ptr %self303, align 8, !dbg !4755
  %checknull307 = icmp eq ptr %128, null, !dbg !4755
  %129 = call i1 @llvm.expect.i1(i1 %checknull307, i1 false), !dbg !4755
  br i1 %129, label %panic308, label %checkok312, !dbg !4755

checkok312:                                       ; preds = %checkok299
  %ptradd313 = getelementptr inbounds i8, ptr %128, i64 8, !dbg !4756
  %130 = load i64, ptr %ptradd313, align 8, !dbg !4756
  %131 = inttoptr i64 %130 to ptr, !dbg !4756
  %type316 = load ptr, ptr %.cachedtype315, align 8, !dbg !4682
  %132 = icmp eq ptr %131, %type316, !dbg !4682
  br i1 %132, label %cache_hit319, label %cache_miss317, !dbg !4682

cache_miss317:                                    ; preds = %checkok312
  %ptradd318 = getelementptr inbounds i8, ptr %131, i64 16, !dbg !4682
  %133 = load ptr, ptr %ptradd318, align 8, !dbg !4682
  %134 = call ptr @.dyn_search(ptr %133, ptr @"$sel.read"), !dbg !4682
  store ptr %134, ptr %.inlinecache314, align 8, !dbg !4682
  store ptr %131, ptr %.cachedtype315, align 8, !dbg !4682
  br label %135, !dbg !4682

cache_hit319:                                     ; preds = %checkok312
  %cache_hit_fn320 = load ptr, ptr %.inlinecache314, align 8, !dbg !4682
  br label %135, !dbg !4682

135:                                              ; preds = %cache_hit319, %cache_miss317
  %fn_phi321 = phi ptr [ %cache_hit_fn320, %cache_hit319 ], [ %134, %cache_miss317 ], !dbg !4682
  %136 = icmp eq ptr %fn_phi321, null, !dbg !4682
  br i1 %136, label %missing_function322, label %match326, !dbg !4682

missing_function322:                              ; preds = %135
  store %"char[]" { ptr @.panic_msg.205, i64 41 }, ptr %indirectarg323, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg324, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg325, align 8
  %137 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %137(ptr align 8 %indirectarg323, ptr align 8 %indirectarg324, ptr align 8 %indirectarg325, i32 92), !dbg !4755
  unreachable, !dbg !4755

match326:                                         ; preds = %135
  %138 = load ptr, ptr %128, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg328, ptr align 8 %buf304, i32 16, i1 false)
  %139 = call i64 %fn_phi321(ptr %retparam327, ptr %138, ptr align 8 %indirectarg328), !dbg !4755
  %not_err329 = icmp eq i64 %139, 0, !dbg !4755
  %140 = call i1 @llvm.expect.i1(i1 %not_err329, i1 true), !dbg !4755
  br i1 %140, label %after_check331, label %assign_optional330, !dbg !4755

assign_optional330:                               ; preds = %match326
  store i64 %139, ptr %n.f306, align 8, !dbg !4755
  br label %after_assign332, !dbg !4755

after_check331:                                   ; preds = %match326
  %141 = load i64, ptr %retparam327, align 8, !dbg !4755
  store i64 %141, ptr %n305, align 8, !dbg !4755
  store i64 0, ptr %n.f306, align 8, !dbg !4755
  br label %after_assign332, !dbg !4755

after_assign332:                                  ; preds = %after_check331, %assign_optional330
  call void @llvm.dbg.declare(metadata ptr %err333, metadata !4757, metadata !DIExpression()), !dbg !4758
  br label %testblock334, !dbg !4758

testblock334:                                     ; preds = %after_assign332
  %optval335 = load i64, ptr %n.f306, align 8, !dbg !4759
  %not_err336 = icmp eq i64 %optval335, 0, !dbg !4759
  %142 = call i1 @llvm.expect.i1(i1 %not_err336, i1 true), !dbg !4759
  br i1 %142, label %after_check338, label %assign_optional337, !dbg !4759

assign_optional337:                               ; preds = %testblock334
  store i64 %optval335, ptr %err333, align 8, !dbg !4759
  br label %end_block339, !dbg !4759

after_check338:                                   ; preds = %testblock334
  store i64 0, ptr %err333, align 8, !dbg !4759
  br label %end_block339, !dbg !4759

end_block339:                                     ; preds = %after_check338, %assign_optional337
  %143 = load i64, ptr %err333, align 8, !dbg !4759
  %neq340 = icmp ne i64 %143, 0, !dbg !4759
  br i1 %neq340, label %if.then341, label %if.exit348, !dbg !4759

if.then341:                                       ; preds = %end_block339
  store i64 %143, ptr %switch342, align 8
  br label %switch.entry343

switch.entry343:                                  ; preds = %if.then341
  %144 = load i64, ptr %switch342, align 8
  %eq344 = icmp eq i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), %144, !dbg !4760
  br i1 %eq344, label %switch.case345, label %next_if346, !dbg !4760

switch.case345:                                   ; preds = %switch.entry343
  store i64 ptrtoint (ptr @"std.core.builtin.SearchResult$MISSING" to i64), ptr %error_var302, align 8, !dbg !4761
  br label %guard_block349, !dbg !4761

next_if346:                                       ; preds = %switch.entry343
  br label %switch.default347, !dbg !4761

switch.default347:                                ; preds = %next_if346
  %145 = load i64, ptr %err333, align 8, !dbg !4763
  store i64 %145, ptr %error_var302, align 8, !dbg !4763
  br label %guard_block349, !dbg !4763

if.exit348:                                       ; preds = %end_block339
  br label %noerr_block350, !dbg !4765

guard_block349:                                   ; preds = %switch.default347, %switch.case345
  %146 = load i64, ptr %error_var302, align 8, !dbg !4765
  ret i64 %146, !dbg !4765

noerr_block350:                                   ; preds = %if.exit348
  %147 = load i64, ptr %n305, align 8, !dbg !4765
  store i64 %147, ptr %p, align 8, !dbg !4765
  %148 = load ptr, ptr %self, align 8, !dbg !4766
  %checknull351 = icmp eq ptr %148, null, !dbg !4766
  %149 = call i1 @llvm.expect.i1(i1 %checknull351, i1 false), !dbg !4766
  br i1 %149, label %panic352, label %checkok356, !dbg !4766

checkok356:                                       ; preds = %noerr_block350
  %ptradd357 = getelementptr inbounds i8, ptr %148, i64 40, !dbg !4766
  %150 = load i64, ptr %n85, align 8, !dbg !4767
  %151 = load i64, ptr %p, align 8, !dbg !4768
  %add358 = add i64 %150, %151, !dbg !4767
  store i64 %add358, ptr %ptradd357, align 8, !dbg !4767
  %152 = load %"char[]", ptr %buf100, align 8, !dbg !4769
  %153 = extractvalue %"char[]" %152, 0, !dbg !4769
  %154 = extractvalue %"char[]" %152, 1, !dbg !4770
  %gt359 = icmp ugt i64 0, %154, !dbg !4770
  %155 = call i1 @llvm.expect.i1(i1 %gt359, i1 false), !dbg !4770
  br i1 %155, label %panic360, label %checkok370, !dbg !4770

checkok370:                                       ; preds = %checkok356
  %156 = load i64, ptr %p, align 8, !dbg !4771
  %add371 = add i64 0, %156, !dbg !4771
  %lt372 = icmp ult i64 %154, %add371, !dbg !4771
  %sub373 = sub i64 %add371, 1, !dbg !4771
  %157 = call i1 @llvm.expect.i1(i1 %lt372, i1 false), !dbg !4771
  br i1 %157, label %panic374, label %checkok384, !dbg !4771

checkok384:                                       ; preds = %checkok370
  %size385 = sub i64 %add371, 0, !dbg !4769
  %158 = insertvalue %"char[]" undef, ptr %153, 0, !dbg !4769
  %159 = insertvalue %"char[]" %158, i64 %size385, 1, !dbg !4769
  store %"char[]" %159, ptr %buf100, align 8, !dbg !4769
  call void @llvm.dbg.declare(metadata ptr %i386, metadata !4772, metadata !DIExpression()), !dbg !4773
  %160 = load ptr, ptr %self, align 8
  store ptr %160, ptr %self388, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %buf389, ptr align 8 %buf100, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %pattern390, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg392, ptr align 8 %buf389, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg393, ptr align 8 %pattern390, i32 16, i1 false)
  %161 = call i64 @std.core.String.index_of(ptr %retparam391, ptr align 8 %indirectarg392, ptr align 8 %indirectarg393), !dbg !4774
  %not_err394 = icmp eq i64 %161, 0, !dbg !4774
  %162 = call i1 @llvm.expect.i1(i1 %not_err394, i1 true), !dbg !4774
  br i1 %162, label %after_check396, label %assign_optional395, !dbg !4774

assign_optional395:                               ; preds = %checkok384
  store i64 %161, ptr %error_var387, align 8, !dbg !4774
  br label %guard_block397, !dbg !4774

after_check396:                                   ; preds = %checkok384
  br label %noerr_block398, !dbg !4774

guard_block397:                                   ; preds = %assign_optional395
  %163 = load i64, ptr %error_var387, align 8, !dbg !4774
  ret i64 %163, !dbg !4774

noerr_block398:                                   ; preds = %after_check396
  %164 = load i64, ptr %retparam391, align 8, !dbg !4774
  store i64 %164, ptr %i386, align 8, !dbg !4774
  %165 = load ptr, ptr %self, align 8, !dbg !4777
  %checknull399 = icmp eq ptr %165, null, !dbg !4777
  %166 = call i1 @llvm.expect.i1(i1 %checknull399, i1 false), !dbg !4777
  br i1 %166, label %panic400, label %checkok404, !dbg !4777

checkok404:                                       ; preds = %noerr_block398
  %ptradd405 = getelementptr inbounds i8, ptr %165, i64 32, !dbg !4777
  %167 = load i64, ptr %n85, align 8, !dbg !4778
  %168 = load i64, ptr %i386, align 8, !dbg !4779
  %add406 = add i64 %167, %168, !dbg !4778
  %ptradd407 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4780
  %169 = load i64, ptr %ptradd407, align 8, !dbg !4780
  %add408 = add i64 %add406, %169, !dbg !4778
  store i64 %add408, ptr %ptradd405, align 8, !dbg !4778
  %170 = load ptr, ptr %self, align 8, !dbg !4781
  %checknull410 = icmp eq ptr %170, null, !dbg !4781
  %171 = call i1 @llvm.expect.i1(i1 %checknull410, i1 false), !dbg !4781
  br i1 %171, label %panic411, label %checkok415, !dbg !4781

checkok415:                                       ; preds = %checkok404
  %ptradd416 = getelementptr inbounds i8, ptr %170, i64 16, !dbg !4781
  %172 = load %"char[]", ptr %ptradd416, align 8, !dbg !4781
  %173 = extractvalue %"char[]" %172, 0, !dbg !4781
  %174 = extractvalue %"char[]" %172, 1, !dbg !4782
  %gt417 = icmp ugt i64 0, %174, !dbg !4782
  %175 = call i1 @llvm.expect.i1(i1 %gt417, i1 false), !dbg !4782
  br i1 %175, label %panic418, label %checkok428, !dbg !4782

checkok428:                                       ; preds = %checkok415
  %176 = load i64, ptr %n85, align 8, !dbg !4783
  %177 = load i64, ptr %i386, align 8, !dbg !4784
  %add429 = add i64 %176, %177, !dbg !4783
  %add430 = add i64 0, %add429, !dbg !4783
  %lt431 = icmp ult i64 %174, %add430, !dbg !4783
  %sub432 = sub i64 %add430, 1, !dbg !4783
  %178 = call i1 @llvm.expect.i1(i1 %lt431, i1 false), !dbg !4783
  br i1 %178, label %panic433, label %checkok443, !dbg !4783

checkok443:                                       ; preds = %checkok428
  %size444 = sub i64 %add430, 0, !dbg !4781
  %179 = insertvalue %"char[]" undef, ptr %173, 0, !dbg !4781
  %180 = insertvalue %"char[]" %179, i64 %size444, 1, !dbg !4781
  store %"char[]" %180, ptr %0, align 8, !dbg !4781
  ret i64 0, !dbg !4781

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg2, align 8
  %181 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %181(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 48), !dbg !4684
  unreachable, !dbg !4684

panic6:                                           ; preds = %assert_ok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg7, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg8, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg9, align 8
  %182 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %182(ptr align 8 %indirectarg7, ptr align 8 %indirectarg8, ptr align 8 %indirectarg9, i32 46), !dbg !4689
  unreachable, !dbg !4689

panic20:                                          ; preds = %assert_ok18
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg23, align 8
  %183 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %183(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 50), !dbg !4691
  unreachable, !dbg !4691

panic27:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg28, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg29, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg30, align 8
  %184 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %184(ptr align 8 %indirectarg28, ptr align 8 %indirectarg29, ptr align 8 %indirectarg30, i32 53), !dbg !4692
  unreachable, !dbg !4692

panic35:                                          ; preds = %checkok31
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg36, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg37, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg38, align 8
  %185 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %185(ptr align 8 %indirectarg36, ptr align 8 %indirectarg37, ptr align 8 %indirectarg38, i32 53), !dbg !4694
  unreachable, !dbg !4694

panic42:                                          ; preds = %checkok39
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg44, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg45, align 8
  %186 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %186(ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, ptr align 8 %indirectarg45, i32 92), !dbg !4699
  unreachable, !dbg !4699

panic59:                                          ; preds = %noerr_block
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg60, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg61, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg62, align 8
  %187 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %187(ptr align 8 %indirectarg60, ptr align 8 %indirectarg61, ptr align 8 %indirectarg62, i32 54), !dbg !4710
  unreachable, !dbg !4710

panic67:                                          ; preds = %if.exit65
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg68, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg69, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg70, align 8
  %188 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %188(ptr align 8 %indirectarg68, ptr align 8 %indirectarg69, ptr align 8 %indirectarg70, i32 56), !dbg !4712
  unreachable, !dbg !4712

panic74:                                          ; preds = %checkok71
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg75, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg76, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg77, align 8
  %189 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %189(ptr align 8 %indirectarg75, ptr align 8 %indirectarg76, ptr align 8 %indirectarg77, i32 56), !dbg !4713
  unreachable, !dbg !4713

panic87:                                          ; preds = %assert_ok84
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg88, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg89, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg90, align 8
  %190 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %190(ptr align 8 %indirectarg88, ptr align 8 %indirectarg89, ptr align 8 %indirectarg90, i32 57), !dbg !4716
  unreachable, !dbg !4716

panic94:                                          ; preds = %checkok91
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg95, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg96, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg97, align 8
  %191 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %191(ptr align 8 %indirectarg95, ptr align 8 %indirectarg96, ptr align 8 %indirectarg97, i32 57), !dbg !4717
  unreachable, !dbg !4717

panic102:                                         ; preds = %checkok98
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg103, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg104, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg105, align 8
  %192 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %192(ptr align 8 %indirectarg103, ptr align 8 %indirectarg104, ptr align 8 %indirectarg105, i32 58), !dbg !4720
  unreachable, !dbg !4720

panic109:                                         ; preds = %checkok106
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg110, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg111, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg112, align 8
  %193 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %193(ptr align 8 %indirectarg110, ptr align 8 %indirectarg111, ptr align 8 %indirectarg112, i32 58), !dbg !4721
  unreachable, !dbg !4721

panic116:                                         ; preds = %checkok113
  store i64 %62, ptr %taddr, align 8
  %194 = insertvalue %any undef, ptr %taddr, 0
  %195 = insertvalue %any %194, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %61, ptr %taddr117, align 8
  %196 = insertvalue %any undef, ptr %taddr117, 0
  %197 = insertvalue %any %196, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg118, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg119, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg120, align 8
  store %any %195, ptr %varargslots, align 16
  %ptradd121 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %197, ptr %ptradd121, align 16
  %198 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %198, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg122, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg118, ptr align 8 %indirectarg119, ptr align 8 %indirectarg120, i32 58, ptr align 8 %indirectarg122), !dbg !4720
  unreachable, !dbg !4720

panic126:                                         ; preds = %checkok123
  store i64 %sub125, ptr %taddr127, align 8
  %199 = insertvalue %any undef, ptr %taddr127, 0
  %200 = insertvalue %any %199, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %62, ptr %taddr128, align 8
  %201 = insertvalue %any undef, ptr %taddr128, 0
  %202 = insertvalue %any %201, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg129, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg130, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg131, align 8
  store %any %200, ptr %varargslots132, align 16
  %ptradd133 = getelementptr inbounds i8, ptr %varargslots132, i64 16
  store %any %202, ptr %ptradd133, align 16
  %203 = insertvalue %"any[]" undef, ptr %varargslots132, 0
  %"$$temp134" = insertvalue %"any[]" %203, i64 2, 1
  store %"any[]" %"$$temp134", ptr %indirectarg135, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg129, ptr align 8 %indirectarg130, ptr align 8 %indirectarg131, i32 58, ptr align 8 %indirectarg135), !dbg !4720
  unreachable, !dbg !4720

panic147:                                         ; preds = %if.then145
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg148, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg149, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg150, align 8
  %204 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %204(ptr align 8 %indirectarg148, ptr align 8 %indirectarg149, ptr align 8 %indirectarg150, i32 61), !dbg !4728
  unreachable, !dbg !4728

panic157:                                         ; preds = %checkok151
  store i64 %79, ptr %taddr158, align 8
  %205 = insertvalue %any undef, ptr %taddr158, 0
  %206 = insertvalue %any %205, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr159, align 8
  %207 = insertvalue %any undef, ptr %taddr159, 0
  %208 = insertvalue %any %207, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg160, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg161, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg162, align 8
  store %any %206, ptr %varargslots163, align 16
  %ptradd164 = getelementptr inbounds i8, ptr %varargslots163, i64 16
  store %any %208, ptr %ptradd164, align 16
  %209 = insertvalue %"any[]" undef, ptr %varargslots163, 0
  %"$$temp165" = insertvalue %"any[]" %209, i64 2, 1
  store %"any[]" %"$$temp165", ptr %indirectarg166, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg160, ptr align 8 %indirectarg161, ptr align 8 %indirectarg162, i32 62, ptr align 8 %indirectarg166), !dbg !4732
  unreachable, !dbg !4732

panic171:                                         ; preds = %checkok167
  store i64 %sub170, ptr %taddr172, align 8
  %210 = insertvalue %any undef, ptr %taddr172, 0
  %211 = insertvalue %any %210, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %79, ptr %taddr173, align 8
  %212 = insertvalue %any undef, ptr %taddr173, 0
  %213 = insertvalue %any %212, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg174, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg175, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg176, align 8
  store %any %211, ptr %varargslots177, align 16
  %ptradd178 = getelementptr inbounds i8, ptr %varargslots177, i64 16
  store %any %213, ptr %ptradd178, align 16
  %214 = insertvalue %"any[]" undef, ptr %varargslots177, 0
  %"$$temp179" = insertvalue %"any[]" %214, i64 2, 1
  store %"any[]" %"$$temp179", ptr %indirectarg180, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg174, ptr align 8 %indirectarg175, ptr align 8 %indirectarg176, i32 62, ptr align 8 %indirectarg180), !dbg !4732
  unreachable, !dbg !4732

panic185:                                         ; preds = %if.exit183
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg186, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg187, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg188, align 8
  %215 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %215(ptr align 8 %indirectarg186, ptr align 8 %indirectarg187, ptr align 8 %indirectarg188, i32 64), !dbg !4735
  unreachable, !dbg !4735

panic193:                                         ; preds = %or.rhs
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg194, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg195, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg196, align 8
  %216 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %216(ptr align 8 %indirectarg194, ptr align 8 %indirectarg195, ptr align 8 %indirectarg196, i32 64), !dbg !4736
  unreachable, !dbg !4736

panic200:                                         ; preds = %checkok197
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg201, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg202, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg203, align 8
  %217 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %217(ptr align 8 %indirectarg201, ptr align 8 %indirectarg202, ptr align 8 %indirectarg203, i32 64), !dbg !4737
  unreachable, !dbg !4737

panic212:                                         ; preds = %if.exit210
  store i64 %96, ptr %taddr213, align 8
  %218 = insertvalue %any undef, ptr %taddr213, 0
  %219 = insertvalue %any %218, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr214, align 8
  %220 = insertvalue %any undef, ptr %taddr214, 0
  %221 = insertvalue %any %220, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg215, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg216, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg217, align 8
  store %any %219, ptr %varargslots218, align 16
  %ptradd219 = getelementptr inbounds i8, ptr %varargslots218, i64 16
  store %any %221, ptr %ptradd219, align 16
  %222 = insertvalue %"any[]" undef, ptr %varargslots218, 0
  %"$$temp220" = insertvalue %"any[]" %222, i64 2, 1
  store %"any[]" %"$$temp220", ptr %indirectarg221, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg215, ptr align 8 %indirectarg216, ptr align 8 %indirectarg217, i32 71, ptr align 8 %indirectarg221), !dbg !4740
  unreachable, !dbg !4740

panic225:                                         ; preds = %checkok222
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg226, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg227, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg228, align 8
  %223 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %223(ptr align 8 %indirectarg226, ptr align 8 %indirectarg227, ptr align 8 %indirectarg228, i32 71), !dbg !4742
  unreachable, !dbg !4742

panic232:                                         ; preds = %checkok229
  store i64 %104, ptr %taddr233, align 8
  %224 = insertvalue %any undef, ptr %taddr233, 0
  %225 = insertvalue %any %224, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr234, align 8
  %226 = insertvalue %any undef, ptr %taddr234, 0
  %227 = insertvalue %any %226, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg235, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg236, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg237, align 8
  store %any %225, ptr %varargslots238, align 16
  %ptradd239 = getelementptr inbounds i8, ptr %varargslots238, i64 16
  store %any %227, ptr %ptradd239, align 16
  %228 = insertvalue %"any[]" undef, ptr %varargslots238, 0
  %"$$temp240" = insertvalue %"any[]" %228, i64 2, 1
  store %"any[]" %"$$temp240", ptr %indirectarg241, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg235, ptr align 8 %indirectarg236, ptr align 8 %indirectarg237, i32 71, ptr align 8 %indirectarg241), !dbg !4742
  unreachable, !dbg !4742

panic246:                                         ; preds = %checkok242
  store i64 %sub245, ptr %taddr247, align 8
  %229 = insertvalue %any undef, ptr %taddr247, 0
  %230 = insertvalue %any %229, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %104, ptr %taddr248, align 8
  %231 = insertvalue %any undef, ptr %taddr248, 0
  %232 = insertvalue %any %231, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg249, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg250, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg251, align 8
  store %any %230, ptr %varargslots252, align 16
  %ptradd253 = getelementptr inbounds i8, ptr %varargslots252, i64 16
  store %any %232, ptr %ptradd253, align 16
  %233 = insertvalue %"any[]" undef, ptr %varargslots252, 0
  %"$$temp254" = insertvalue %"any[]" %233, i64 2, 1
  store %"any[]" %"$$temp254", ptr %indirectarg255, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg249, ptr align 8 %indirectarg250, ptr align 8 %indirectarg251, i32 71, ptr align 8 %indirectarg255), !dbg !4742
  unreachable, !dbg !4742

panic263:                                         ; preds = %checkok256
  store i64 %113, ptr %taddr264, align 8
  %234 = insertvalue %any undef, ptr %taddr264, 0
  %235 = insertvalue %any %234, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %112, ptr %taddr265, align 8
  %236 = insertvalue %any undef, ptr %taddr265, 0
  %237 = insertvalue %any %236, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.206, i64 38 }, ptr %indirectarg266, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg267, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg268, align 8
  store %any %235, ptr %varargslots269, align 16
  %ptradd270 = getelementptr inbounds i8, ptr %varargslots269, i64 16
  store %any %237, ptr %ptradd270, align 16
  %238 = insertvalue %"any[]" undef, ptr %varargslots269, 0
  %"$$temp271" = insertvalue %"any[]" %238, i64 2, 1
  store %"any[]" %"$$temp271", ptr %indirectarg272, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg266, ptr align 8 %indirectarg267, ptr align 8 %indirectarg268, i32 71, ptr align 8 %indirectarg272), !dbg !4742
  unreachable, !dbg !4742

panic275:                                         ; preds = %checkok273
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg276, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg277, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg278, align 8
  %239 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %239(ptr align 8 %indirectarg276, ptr align 8 %indirectarg277, ptr align 8 %indirectarg278, i32 72), !dbg !4745
  unreachable, !dbg !4745

panic282:                                         ; preds = %checkok279
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg283, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg284, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg285, align 8
  %240 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %240(ptr align 8 %indirectarg283, ptr align 8 %indirectarg284, ptr align 8 %indirectarg285, i32 74), !dbg !4747
  unreachable, !dbg !4747

panic289:                                         ; preds = %checkok286
  store i64 %123, ptr %taddr290, align 8
  %241 = insertvalue %any undef, ptr %taddr290, 0
  %242 = insertvalue %any %241, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %122, ptr %taddr291, align 8
  %243 = insertvalue %any undef, ptr %taddr291, 0
  %244 = insertvalue %any %243, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg292, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg293, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg294, align 8
  store %any %242, ptr %varargslots295, align 16
  %ptradd296 = getelementptr inbounds i8, ptr %varargslots295, i64 16
  store %any %244, ptr %ptradd296, align 16
  %245 = insertvalue %"any[]" undef, ptr %varargslots295, 0
  %"$$temp297" = insertvalue %"any[]" %245, i64 2, 1
  store %"any[]" %"$$temp297", ptr %indirectarg298, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg292, ptr align 8 %indirectarg293, ptr align 8 %indirectarg294, i32 74, ptr align 8 %indirectarg298), !dbg !4747
  unreachable, !dbg !4747

panic308:                                         ; preds = %checkok299
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg309, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg310, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg311, align 8
  %246 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %246(ptr align 8 %indirectarg309, ptr align 8 %indirectarg310, ptr align 8 %indirectarg311, i32 92), !dbg !4755
  unreachable, !dbg !4755

panic352:                                         ; preds = %noerr_block350
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg353, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg354, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg355, align 8
  %247 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %247(ptr align 8 %indirectarg353, ptr align 8 %indirectarg354, ptr align 8 %indirectarg355, i32 76), !dbg !4766
  unreachable, !dbg !4766

panic360:                                         ; preds = %checkok356
  store i64 %154, ptr %taddr361, align 8
  %248 = insertvalue %any undef, ptr %taddr361, 0
  %249 = insertvalue %any %248, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr362, align 8
  %250 = insertvalue %any undef, ptr %taddr362, 0
  %251 = insertvalue %any %250, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg363, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg364, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg365, align 8
  store %any %249, ptr %varargslots366, align 16
  %ptradd367 = getelementptr inbounds i8, ptr %varargslots366, i64 16
  store %any %251, ptr %ptradd367, align 16
  %252 = insertvalue %"any[]" undef, ptr %varargslots366, 0
  %"$$temp368" = insertvalue %"any[]" %252, i64 2, 1
  store %"any[]" %"$$temp368", ptr %indirectarg369, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg363, ptr align 8 %indirectarg364, ptr align 8 %indirectarg365, i32 78, ptr align 8 %indirectarg369), !dbg !4769
  unreachable, !dbg !4769

panic374:                                         ; preds = %checkok370
  store i64 %sub373, ptr %taddr375, align 8
  %253 = insertvalue %any undef, ptr %taddr375, 0
  %254 = insertvalue %any %253, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %154, ptr %taddr376, align 8
  %255 = insertvalue %any undef, ptr %taddr376, 0
  %256 = insertvalue %any %255, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg377, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg378, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg379, align 8
  store %any %254, ptr %varargslots380, align 16
  %ptradd381 = getelementptr inbounds i8, ptr %varargslots380, i64 16
  store %any %256, ptr %ptradd381, align 16
  %257 = insertvalue %"any[]" undef, ptr %varargslots380, 0
  %"$$temp382" = insertvalue %"any[]" %257, i64 2, 1
  store %"any[]" %"$$temp382", ptr %indirectarg383, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg377, ptr align 8 %indirectarg378, ptr align 8 %indirectarg379, i32 78, ptr align 8 %indirectarg383), !dbg !4769
  unreachable, !dbg !4769

panic400:                                         ; preds = %noerr_block398
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg401, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg402, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg403, align 8
  %258 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %258(ptr align 8 %indirectarg401, ptr align 8 %indirectarg402, ptr align 8 %indirectarg403, i32 80), !dbg !4777
  unreachable, !dbg !4777

panic411:                                         ; preds = %checkok404
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg412, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg413, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg414, align 8
  %259 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %259(ptr align 8 %indirectarg412, ptr align 8 %indirectarg413, ptr align 8 %indirectarg414, i32 82), !dbg !4781
  unreachable, !dbg !4781

panic418:                                         ; preds = %checkok415
  store i64 %174, ptr %taddr419, align 8
  %260 = insertvalue %any undef, ptr %taddr419, 0
  %261 = insertvalue %any %260, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr420, align 8
  %262 = insertvalue %any undef, ptr %taddr420, 0
  %263 = insertvalue %any %262, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg421, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg422, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg423, align 8
  store %any %261, ptr %varargslots424, align 16
  %ptradd425 = getelementptr inbounds i8, ptr %varargslots424, i64 16
  store %any %263, ptr %ptradd425, align 16
  %264 = insertvalue %"any[]" undef, ptr %varargslots424, 0
  %"$$temp426" = insertvalue %"any[]" %264, i64 2, 1
  store %"any[]" %"$$temp426", ptr %indirectarg427, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg421, ptr align 8 %indirectarg422, ptr align 8 %indirectarg423, i32 82, ptr align 8 %indirectarg427), !dbg !4781
  unreachable, !dbg !4781

panic433:                                         ; preds = %checkok428
  store i64 %sub432, ptr %taddr434, align 8
  %265 = insertvalue %any undef, ptr %taddr434, 0
  %266 = insertvalue %any %265, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %174, ptr %taddr435, align 8
  %267 = insertvalue %any undef, ptr %taddr435, 0
  %268 = insertvalue %any %267, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg436, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg437, align 8
  store %"char[]" { ptr @.func.245, i64 4 }, ptr %indirectarg438, align 8
  store %any %266, ptr %varargslots439, align 16
  %ptradd440 = getelementptr inbounds i8, ptr %varargslots439, i64 16
  store %any %268, ptr %ptradd440, align 16
  %269 = insertvalue %"any[]" undef, ptr %varargslots439, 0
  %"$$temp441" = insertvalue %"any[]" %269, i64 2, 1
  store %"any[]" %"$$temp441", ptr %indirectarg442, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg436, ptr align 8 %indirectarg437, ptr align 8 %indirectarg438, i32 82, ptr align 8 %indirectarg442), !dbg !4781
  unreachable, !dbg !4781
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Scanner.read(ptr %0, ptr %1, ptr align 8 %2) #0 comdat !dbg !4785 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %n = alloca i64, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %x = alloca i64, align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg20 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %.anon = alloca i64, align 8
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %indirectarg42 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr46 = alloca i64, align 8
  %indirectarg47 = alloca %"char[]", align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg51 = alloca %"any[]", align 8
  %taddr56 = alloca i64, align 8
  %taddr57 = alloca i64, align 8
  %indirectarg58 = alloca %"char[]", align 8
  %indirectarg59 = alloca %"char[]", align 8
  %indirectarg60 = alloca %"char[]", align 8
  %varargslots61 = alloca [2 x %any], align 16
  %indirectarg64 = alloca %"any[]", align 8
  %taddr69 = alloca i64, align 8
  %taddr70 = alloca i64, align 8
  %indirectarg71 = alloca %"char[]", align 8
  %indirectarg72 = alloca %"char[]", align 8
  %indirectarg73 = alloca %"char[]", align 8
  %varargslots74 = alloca [2 x %any], align 16
  %indirectarg77 = alloca %"any[]", align 8
  %taddr83 = alloca i64, align 8
  %taddr84 = alloca i64, align 8
  %indirectarg85 = alloca %"char[]", align 8
  %indirectarg86 = alloca %"char[]", align 8
  %indirectarg87 = alloca %"char[]", align 8
  %varargslots88 = alloca [2 x %any], align 16
  %indirectarg91 = alloca %"any[]", align 8
  %taddr94 = alloca %"char[]", align 8
  %taddr96 = alloca %"char[]", align 8
  %taddr99 = alloca i64, align 8
  %taddr100 = alloca i64, align 8
  %indirectarg101 = alloca %"char[]", align 8
  %indirectarg102 = alloca %"char[]", align 8
  %indirectarg103 = alloca %"char[]", align 8
  %varargslots104 = alloca [2 x %any], align 16
  %indirectarg107 = alloca %"any[]", align 8
  %indirectarg111 = alloca %"char[]", align 8
  %indirectarg112 = alloca %"char[]", align 8
  %indirectarg113 = alloca %"char[]", align 8
  %taddr119 = alloca i64, align 8
  %taddr120 = alloca i64, align 8
  %indirectarg121 = alloca %"char[]", align 8
  %indirectarg122 = alloca %"char[]", align 8
  %indirectarg123 = alloca %"char[]", align 8
  %varargslots124 = alloca [2 x %any], align 16
  %indirectarg127 = alloca %"any[]", align 8
  %error_var = alloca i64, align 8
  %indirectarg133 = alloca %"char[]", align 8
  %indirectarg134 = alloca %"char[]", align 8
  %indirectarg135 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg139 = alloca %"char[]", align 8
  %indirectarg140 = alloca %"char[]", align 8
  %indirectarg141 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg142 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  store ptr null, ptr %.cachedtype, align 8, !dbg !4788
  %3 = icmp eq ptr %1, null, !dbg !4788
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false), !dbg !4788
  br i1 %4, label %panic, label %checkok, !dbg !4788

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4789, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4791, metadata !DIExpression()), !dbg !4792
  call void @llvm.dbg.declare(metadata ptr %n, metadata !4793, metadata !DIExpression()), !dbg !4794
  store i64 0, ptr %n, align 8, !dbg !4794
  %5 = load ptr, ptr %self, align 8, !dbg !4795
  %checknull = icmp eq ptr %5, null, !dbg !4795
  %6 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4795
  br i1 %6, label %panic3, label %checkok7, !dbg !4795

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %5, i64 32, !dbg !4795
  %7 = load i64, ptr %ptradd, align 8, !dbg !4795
  %8 = load ptr, ptr %self, align 8, !dbg !4796
  %checknull8 = icmp eq ptr %8, null, !dbg !4796
  %9 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4796
  br i1 %9, label %panic9, label %checkok13, !dbg !4796

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %8, i64 40, !dbg !4796
  %10 = load i64, ptr %ptradd14, align 8, !dbg !4796
  %lt = icmp ult i64 %7, %10, !dbg !4795
  br i1 %lt, label %if.then, label %if.exit, !dbg !4795

if.then:                                          ; preds = %checkok13
  %ptradd15 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4797
  %11 = load i64, ptr %ptradd15, align 8
  store i64 %11, ptr %x, align 8
  %12 = load ptr, ptr %self, align 8, !dbg !4799
  %checknull16 = icmp eq ptr %12, null, !dbg !4799
  %13 = call i1 @llvm.expect.i1(i1 %checknull16, i1 false), !dbg !4799
  br i1 %13, label %panic17, label %checkok21, !dbg !4799

checkok21:                                        ; preds = %if.then
  %ptradd22 = getelementptr inbounds i8, ptr %12, i64 40, !dbg !4799
  %14 = load i64, ptr %ptradd22, align 8, !dbg !4799
  %15 = load ptr, ptr %self, align 8, !dbg !4800
  %checknull23 = icmp eq ptr %15, null, !dbg !4800
  %16 = call i1 @llvm.expect.i1(i1 %checknull23, i1 false), !dbg !4800
  br i1 %16, label %panic24, label %checkok28, !dbg !4800

checkok28:                                        ; preds = %checkok21
  %ptradd29 = getelementptr inbounds i8, ptr %15, i64 32, !dbg !4800
  %17 = load i64, ptr %ptradd29, align 8, !dbg !4800
  %sub = sub i64 %14, %17, !dbg !4799
  store i64 %sub, ptr %.anon, align 8
  %18 = load i64, ptr %x, align 8
  store i64 %18, ptr %a, align 8
  %19 = load i64, ptr %.anon, align 8
  store i64 %19, ptr %b, align 8
  %20 = load i64, ptr %a, align 8, !dbg !4801
  %21 = load i64, ptr %b, align 8, !dbg !4806
  %lt30 = icmp ult i64 %20, %21, !dbg !4801
  br i1 %lt30, label %cond.lhs, label %cond.rhs, !dbg !4801

cond.lhs:                                         ; preds = %checkok28
  %22 = load i64, ptr %x, align 8, !dbg !4807
  br label %cond.phi, !dbg !4807

cond.rhs:                                         ; preds = %checkok28
  %23 = load i64, ptr %.anon, align 8, !dbg !4808
  br label %cond.phi, !dbg !4808

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i64 [ %22, %cond.lhs ], [ %23, %cond.rhs ], !dbg !4808
  store i64 %val, ptr %n, align 8, !dbg !4808
  %24 = load ptr, ptr %self, align 8, !dbg !4809
  %checknull31 = icmp eq ptr %24, null, !dbg !4809
  %25 = call i1 @llvm.expect.i1(i1 %checknull31, i1 false), !dbg !4809
  br i1 %25, label %panic32, label %checkok36, !dbg !4809

checkok36:                                        ; preds = %cond.phi
  %ptradd37 = getelementptr inbounds i8, ptr %24, i64 16, !dbg !4809
  %26 = load %"char[]", ptr %ptradd37, align 8, !dbg !4809
  %27 = extractvalue %"char[]" %26, 0, !dbg !4809
  %28 = load ptr, ptr %self, align 8, !dbg !4810
  %checknull38 = icmp eq ptr %28, null, !dbg !4810
  %29 = call i1 @llvm.expect.i1(i1 %checknull38, i1 false), !dbg !4810
  br i1 %29, label %panic39, label %checkok43, !dbg !4810

checkok43:                                        ; preds = %checkok36
  %ptradd44 = getelementptr inbounds i8, ptr %28, i64 32, !dbg !4810
  %30 = load i64, ptr %ptradd44, align 8, !dbg !4810
  %31 = extractvalue %"char[]" %26, 1, !dbg !4810
  %gt = icmp ugt i64 %30, %31, !dbg !4810
  %32 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !4810
  br i1 %32, label %panic45, label %checkok52, !dbg !4810

checkok52:                                        ; preds = %checkok43
  %33 = load i64, ptr %n, align 8, !dbg !4811
  %add = add i64 %30, %33, !dbg !4811
  %lt53 = icmp ult i64 %31, %add, !dbg !4811
  %sub54 = sub i64 %add, 1, !dbg !4811
  %34 = call i1 @llvm.expect.i1(i1 %lt53, i1 false), !dbg !4811
  br i1 %34, label %panic55, label %checkok65, !dbg !4811

checkok65:                                        ; preds = %checkok52
  %size = sub i64 %add, %30, !dbg !4809
  %ptradd66 = getelementptr inbounds i8, ptr %27, i64 %30, !dbg !4809
  %35 = insertvalue %"char[]" undef, ptr %ptradd66, 0, !dbg !4809
  %36 = insertvalue %"char[]" %35, i64 %size, 1, !dbg !4809
  %37 = load %"char[]", ptr %2, align 8, !dbg !4812
  %38 = extractvalue %"char[]" %37, 0, !dbg !4812
  %39 = extractvalue %"char[]" %37, 1, !dbg !4813
  %gt67 = icmp ugt i64 0, %39, !dbg !4813
  %40 = call i1 @llvm.expect.i1(i1 %gt67, i1 false), !dbg !4813
  br i1 %40, label %panic68, label %checkok78, !dbg !4813

checkok78:                                        ; preds = %checkok65
  %41 = load i64, ptr %n, align 8, !dbg !4814
  %add79 = add i64 0, %41, !dbg !4814
  %lt80 = icmp ult i64 %39, %add79, !dbg !4814
  %sub81 = sub i64 %add79, 1, !dbg !4814
  %42 = call i1 @llvm.expect.i1(i1 %lt80, i1 false), !dbg !4814
  br i1 %42, label %panic82, label %checkok92, !dbg !4814

checkok92:                                        ; preds = %checkok78
  %size93 = sub i64 %add79, 0, !dbg !4812
  %43 = insertvalue %"char[]" undef, ptr %38, 0, !dbg !4812
  %44 = insertvalue %"char[]" %43, i64 %size93, 1, !dbg !4812
  %45 = extractvalue %"char[]" %44, 0, !dbg !4812
  %46 = extractvalue %"char[]" %36, 0, !dbg !4812
  store %"char[]" %36, ptr %taddr94, align 8
  %ptradd95 = getelementptr inbounds i8, ptr %taddr94, i64 8
  %47 = load i64, ptr %ptradd95, align 8
  store %"char[]" %44, ptr %taddr96, align 8
  %ptradd97 = getelementptr inbounds i8, ptr %taddr96, i64 8
  %48 = load i64, ptr %ptradd97, align 8
  %neq = icmp ne i64 %48, %47
  %49 = call i1 @llvm.expect.i1(i1 %neq, i1 false)
  br i1 %49, label %panic98, label %checkok108

checkok108:                                       ; preds = %checkok92
  %50 = mul i64 %47, 1, !dbg !4812
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %45, ptr align 1 %46, i64 %50, i1 false), !dbg !4812
  %51 = load ptr, ptr %self, align 8, !dbg !4815
  %checknull109 = icmp eq ptr %51, null, !dbg !4815
  %52 = call i1 @llvm.expect.i1(i1 %checknull109, i1 false), !dbg !4815
  br i1 %52, label %panic110, label %checkok114, !dbg !4815

checkok114:                                       ; preds = %checkok108
  %ptradd115 = getelementptr inbounds i8, ptr %51, i64 32, !dbg !4815
  %53 = load i64, ptr %ptradd115, align 8, !dbg !4815
  %54 = load i64, ptr %n, align 8, !dbg !4816
  %add116 = add i64 %53, %54, !dbg !4815
  store i64 %add116, ptr %ptradd115, align 8, !dbg !4815
  %55 = load %"char[]", ptr %2, align 8, !dbg !4817
  %56 = extractvalue %"char[]" %55, 0, !dbg !4817
  %57 = load i64, ptr %n, align 8, !dbg !4818
  %58 = extractvalue %"char[]" %55, 1, !dbg !4818
  %gt117 = icmp ugt i64 %57, %58, !dbg !4818
  %59 = call i1 @llvm.expect.i1(i1 %gt117, i1 false), !dbg !4818
  br i1 %59, label %panic118, label %checkok128, !dbg !4818

checkok128:                                       ; preds = %checkok114
  %size129 = sub i64 %58, %57, !dbg !4817
  %ptradd130 = getelementptr inbounds i8, ptr %56, i64 %57, !dbg !4817
  %60 = insertvalue %"char[]" undef, ptr %ptradd130, 0, !dbg !4817
  %61 = insertvalue %"char[]" %60, i64 %size129, 1, !dbg !4817
  store %"char[]" %61, ptr %2, align 8, !dbg !4817
  br label %if.exit, !dbg !4817

if.exit:                                          ; preds = %checkok128, %checkok13
  %62 = load i64, ptr %n, align 8, !dbg !4819
  %63 = load ptr, ptr %self, align 8, !dbg !4820
  %checknull131 = icmp eq ptr %63, null, !dbg !4820
  %64 = call i1 @llvm.expect.i1(i1 %checknull131, i1 false), !dbg !4820
  br i1 %64, label %panic132, label %checkok136, !dbg !4820

checkok136:                                       ; preds = %if.exit
  %ptradd137 = getelementptr inbounds i8, ptr %63, i64 8, !dbg !4821
  %65 = load i64, ptr %ptradd137, align 8, !dbg !4821
  %66 = inttoptr i64 %65 to ptr, !dbg !4821
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4788
  %67 = icmp eq ptr %66, %type, !dbg !4788
  br i1 %67, label %cache_hit, label %cache_miss, !dbg !4788

cache_miss:                                       ; preds = %checkok136
  %ptradd138 = getelementptr inbounds i8, ptr %66, i64 16, !dbg !4788
  %68 = load ptr, ptr %ptradd138, align 8, !dbg !4788
  %69 = call ptr @.dyn_search(ptr %68, ptr @"$sel.read"), !dbg !4788
  store ptr %69, ptr %.inlinecache, align 8, !dbg !4788
  store ptr %66, ptr %.cachedtype, align 8, !dbg !4788
  br label %70, !dbg !4788

cache_hit:                                        ; preds = %checkok136
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4788
  br label %70, !dbg !4788

70:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %69, %cache_miss ], !dbg !4788
  %71 = icmp eq ptr %fn_phi, null, !dbg !4788
  br i1 %71, label %missing_function, label %match, !dbg !4788

missing_function:                                 ; preds = %70
  store %"char[]" { ptr @.panic_msg.205, i64 41 }, ptr %indirectarg139, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg140, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg141, align 8
  %72 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %72(ptr align 8 %indirectarg139, ptr align 8 %indirectarg140, ptr align 8 %indirectarg141, i32 113), !dbg !4820
  unreachable, !dbg !4820

match:                                            ; preds = %70
  %73 = load ptr, ptr %63, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg142, ptr align 8 %2, i32 16, i1 false)
  %74 = call i64 %fn_phi(ptr %retparam, ptr %73, ptr align 8 %indirectarg142), !dbg !4820
  %not_err = icmp eq i64 %74, 0, !dbg !4820
  %75 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4820
  br i1 %75, label %after_check, label %assign_optional, !dbg !4820

assign_optional:                                  ; preds = %match
  store i64 %74, ptr %error_var, align 8, !dbg !4820
  br label %guard_block, !dbg !4820

after_check:                                      ; preds = %match
  br label %noerr_block, !dbg !4820

guard_block:                                      ; preds = %assign_optional
  %76 = load i64, ptr %error_var, align 8, !dbg !4820
  ret i64 %76, !dbg !4820

noerr_block:                                      ; preds = %after_check
  %77 = load i64, ptr %retparam, align 8, !dbg !4820
  %add143 = add i64 %62, %77, !dbg !4819
  store i64 %add143, ptr %n, align 8, !dbg !4819
  %78 = load i64, ptr %n, align 8, !dbg !4822
  store i64 %78, ptr %0, align 8, !dbg !4822
  ret i64 0, !dbg !4822

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg2, align 8
  %79 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %79(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 103), !dbg !4790
  unreachable, !dbg !4790

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg6, align 8
  %80 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %80(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 106), !dbg !4795
  unreachable, !dbg !4795

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg12, align 8
  %81 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %81(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 106), !dbg !4796
  unreachable, !dbg !4796

panic17:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg19, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg20, align 8
  %82 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %82(ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, ptr align 8 %indirectarg20, i32 108), !dbg !4799
  unreachable, !dbg !4799

panic24:                                          ; preds = %checkok21
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg27, align 8
  %83 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %83(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 108), !dbg !4800
  unreachable, !dbg !4800

panic32:                                          ; preds = %cond.phi
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg35, align 8
  %84 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %84(ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, i32 109), !dbg !4809
  unreachable, !dbg !4809

panic39:                                          ; preds = %checkok36
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg41, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg42, align 8
  %85 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %85(ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, ptr align 8 %indirectarg42, i32 109), !dbg !4810
  unreachable, !dbg !4810

panic45:                                          ; preds = %checkok43
  store i64 %31, ptr %taddr, align 8
  %86 = insertvalue %any undef, ptr %taddr, 0
  %87 = insertvalue %any %86, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %30, ptr %taddr46, align 8
  %88 = insertvalue %any undef, ptr %taddr46, 0
  %89 = insertvalue %any %88, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg47, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg49, align 8
  store %any %87, ptr %varargslots, align 16
  %ptradd50 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %89, ptr %ptradd50, align 16
  %90 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %90, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg51, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg47, ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, i32 109, ptr align 8 %indirectarg51), !dbg !4809
  unreachable, !dbg !4809

panic55:                                          ; preds = %checkok52
  store i64 %sub54, ptr %taddr56, align 8
  %91 = insertvalue %any undef, ptr %taddr56, 0
  %92 = insertvalue %any %91, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %31, ptr %taddr57, align 8
  %93 = insertvalue %any undef, ptr %taddr57, 0
  %94 = insertvalue %any %93, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg58, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg59, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg60, align 8
  store %any %92, ptr %varargslots61, align 16
  %ptradd62 = getelementptr inbounds i8, ptr %varargslots61, i64 16
  store %any %94, ptr %ptradd62, align 16
  %95 = insertvalue %"any[]" undef, ptr %varargslots61, 0
  %"$$temp63" = insertvalue %"any[]" %95, i64 2, 1
  store %"any[]" %"$$temp63", ptr %indirectarg64, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg58, ptr align 8 %indirectarg59, ptr align 8 %indirectarg60, i32 109, ptr align 8 %indirectarg64), !dbg !4809
  unreachable, !dbg !4809

panic68:                                          ; preds = %checkok65
  store i64 %39, ptr %taddr69, align 8
  %96 = insertvalue %any undef, ptr %taddr69, 0
  %97 = insertvalue %any %96, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr70, align 8
  %98 = insertvalue %any undef, ptr %taddr70, 0
  %99 = insertvalue %any %98, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg71, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg72, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg73, align 8
  store %any %97, ptr %varargslots74, align 16
  %ptradd75 = getelementptr inbounds i8, ptr %varargslots74, i64 16
  store %any %99, ptr %ptradd75, align 16
  %100 = insertvalue %"any[]" undef, ptr %varargslots74, 0
  %"$$temp76" = insertvalue %"any[]" %100, i64 2, 1
  store %"any[]" %"$$temp76", ptr %indirectarg77, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg71, ptr align 8 %indirectarg72, ptr align 8 %indirectarg73, i32 109, ptr align 8 %indirectarg77), !dbg !4812
  unreachable, !dbg !4812

panic82:                                          ; preds = %checkok78
  store i64 %sub81, ptr %taddr83, align 8
  %101 = insertvalue %any undef, ptr %taddr83, 0
  %102 = insertvalue %any %101, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %39, ptr %taddr84, align 8
  %103 = insertvalue %any undef, ptr %taddr84, 0
  %104 = insertvalue %any %103, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg85, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg86, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg87, align 8
  store %any %102, ptr %varargslots88, align 16
  %ptradd89 = getelementptr inbounds i8, ptr %varargslots88, i64 16
  store %any %104, ptr %ptradd89, align 16
  %105 = insertvalue %"any[]" undef, ptr %varargslots88, 0
  %"$$temp90" = insertvalue %"any[]" %105, i64 2, 1
  store %"any[]" %"$$temp90", ptr %indirectarg91, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg85, ptr align 8 %indirectarg86, ptr align 8 %indirectarg87, i32 109, ptr align 8 %indirectarg91), !dbg !4812
  unreachable, !dbg !4812

panic98:                                          ; preds = %checkok92
  store i64 %48, ptr %taddr99, align 8
  %106 = insertvalue %any undef, ptr %taddr99, 0
  %107 = insertvalue %any %106, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %47, ptr %taddr100, align 8
  %108 = insertvalue %any undef, ptr %taddr100, 0
  %109 = insertvalue %any %108, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.206, i64 38 }, ptr %indirectarg101, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg102, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg103, align 8
  store %any %107, ptr %varargslots104, align 16
  %ptradd105 = getelementptr inbounds i8, ptr %varargslots104, i64 16
  store %any %109, ptr %ptradd105, align 16
  %110 = insertvalue %"any[]" undef, ptr %varargslots104, 0
  %"$$temp106" = insertvalue %"any[]" %110, i64 2, 1
  store %"any[]" %"$$temp106", ptr %indirectarg107, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg101, ptr align 8 %indirectarg102, ptr align 8 %indirectarg103, i32 109, ptr align 8 %indirectarg107), !dbg !4812
  unreachable, !dbg !4812

panic110:                                         ; preds = %checkok108
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg111, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg112, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg113, align 8
  %111 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %111(ptr align 8 %indirectarg111, ptr align 8 %indirectarg112, ptr align 8 %indirectarg113, i32 110), !dbg !4815
  unreachable, !dbg !4815

panic118:                                         ; preds = %checkok114
  store i64 %58, ptr %taddr119, align 8
  %112 = insertvalue %any undef, ptr %taddr119, 0
  %113 = insertvalue %any %112, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %57, ptr %taddr120, align 8
  %114 = insertvalue %any undef, ptr %taddr120, 0
  %115 = insertvalue %any %114, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg121, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg122, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg123, align 8
  store %any %113, ptr %varargslots124, align 16
  %ptradd125 = getelementptr inbounds i8, ptr %varargslots124, i64 16
  store %any %115, ptr %ptradd125, align 16
  %116 = insertvalue %"any[]" undef, ptr %varargslots124, 0
  %"$$temp126" = insertvalue %"any[]" %116, i64 2, 1
  store %"any[]" %"$$temp126", ptr %indirectarg127, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg121, ptr align 8 %indirectarg122, ptr align 8 %indirectarg123, i32 111, ptr align 8 %indirectarg127), !dbg !4817
  unreachable, !dbg !4817

panic132:                                         ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg133, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg134, align 8
  store %"char[]" { ptr @.func.204, i64 4 }, ptr %indirectarg135, align 8
  %117 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %117(ptr align 8 %indirectarg133, ptr align 8 %indirectarg134, ptr align 8 %indirectarg135, i32 113), !dbg !4820
  unreachable, !dbg !4820
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.Scanner.read_byte(ptr %0, ptr %1) #0 comdat !dbg !4823 {
entry:
  %indirectarg = alloca %"char[]", align 8
  %indirectarg1 = alloca %"char[]", align 8
  %indirectarg2 = alloca %"char[]", align 8
  %self = alloca ptr, align 8
  %indirectarg4 = alloca %"char[]", align 8
  %indirectarg5 = alloca %"char[]", align 8
  %indirectarg6 = alloca %"char[]", align 8
  %indirectarg10 = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %reterr = alloca i64, align 8
  %indirectarg17 = alloca %"char[]", align 8
  %indirectarg18 = alloca %"char[]", align 8
  %indirectarg19 = alloca %"char[]", align 8
  %indirectarg25 = alloca %"char[]", align 8
  %indirectarg26 = alloca %"char[]", align 8
  %indirectarg27 = alloca %"char[]", align 8
  %taddr = alloca i64, align 8
  %taddr31 = alloca i64, align 8
  %indirectarg32 = alloca %"char[]", align 8
  %indirectarg33 = alloca %"char[]", align 8
  %indirectarg34 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg36 = alloca %"any[]", align 8
  %reterr39 = alloca i64, align 8
  %indirectarg42 = alloca %"char[]", align 8
  %indirectarg43 = alloca %"char[]", align 8
  %indirectarg44 = alloca %"char[]", align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg48 = alloca %"char[]", align 8
  %indirectarg49 = alloca %"char[]", align 8
  %indirectarg50 = alloca %"char[]", align 8
  %retparam = alloca i8, align 1
  store ptr null, ptr %.cachedtype, align 8, !dbg !4826
  %2 = icmp eq ptr %1, null, !dbg !4826
  %3 = call i1 @llvm.expect.i1(i1 %2, i1 false), !dbg !4826
  br i1 %3, label %panic, label %checkok, !dbg !4826

checkok:                                          ; preds = %entry
  store ptr %1, ptr %self, align 8
  call void @llvm.dbg.declare(metadata ptr %self, metadata !4827, metadata !DIExpression()), !dbg !4828
  %4 = load ptr, ptr %self, align 8, !dbg !4829
  %checknull = icmp eq ptr %4, null, !dbg !4829
  %5 = call i1 @llvm.expect.i1(i1 %checknull, i1 false), !dbg !4829
  br i1 %5, label %panic3, label %checkok7, !dbg !4829

checkok7:                                         ; preds = %checkok
  %ptradd = getelementptr inbounds i8, ptr %4, i64 32, !dbg !4829
  %6 = load i64, ptr %ptradd, align 8, !dbg !4829
  %7 = load ptr, ptr %self, align 8, !dbg !4830
  %checknull8 = icmp eq ptr %7, null, !dbg !4830
  %8 = call i1 @llvm.expect.i1(i1 %checknull8, i1 false), !dbg !4830
  br i1 %8, label %panic9, label %checkok13, !dbg !4830

checkok13:                                        ; preds = %checkok7
  %ptradd14 = getelementptr inbounds i8, ptr %7, i64 40, !dbg !4830
  %9 = load i64, ptr %ptradd14, align 8, !dbg !4830
  %lt = icmp ult i64 %6, %9, !dbg !4829
  br i1 %lt, label %if.then, label %if.exit, !dbg !4829

if.then:                                          ; preds = %checkok13
  %10 = load ptr, ptr %self, align 8, !dbg !4831
  %checknull15 = icmp eq ptr %10, null, !dbg !4831
  %11 = call i1 @llvm.expect.i1(i1 %checknull15, i1 false), !dbg !4831
  br i1 %11, label %panic16, label %checkok20, !dbg !4831

checkok20:                                        ; preds = %if.then
  %ptradd21 = getelementptr inbounds i8, ptr %10, i64 16, !dbg !4831
  %ptradd22 = getelementptr inbounds i8, ptr %ptradd21, i64 8, !dbg !4831
  %12 = load i64, ptr %ptradd22, align 8, !dbg !4831
  %13 = load ptr, ptr %ptradd21, align 8, !dbg !4831
  %14 = load ptr, ptr %self, align 8, !dbg !4833
  %checknull23 = icmp eq ptr %14, null, !dbg !4833
  %15 = call i1 @llvm.expect.i1(i1 %checknull23, i1 false), !dbg !4833
  br i1 %15, label %panic24, label %checkok28, !dbg !4833

checkok28:                                        ; preds = %checkok20
  %ptradd29 = getelementptr inbounds i8, ptr %14, i64 32, !dbg !4833
  %16 = load i64, ptr %ptradd29, align 8, !dbg !4833
  %add = add i64 %16, 1, !dbg !4833
  store i64 %add, ptr %ptradd29, align 8, !dbg !4833
  %ge = icmp uge i64 %16, %12, !dbg !4833
  %17 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !4833
  br i1 %17, label %panic30, label %checkok37, !dbg !4833

checkok37:                                        ; preds = %checkok28
  %ptradd38 = getelementptr inbounds i8, ptr %13, i64 %16, !dbg !4833
  %18 = load i8, ptr %ptradd38, align 1, !dbg !4833
  store i8 %18, ptr %0, align 1, !dbg !4833
  ret i64 0, !dbg !4833

if.exit:                                          ; preds = %checkok13
  %19 = load ptr, ptr %self, align 8, !dbg !4834
  %checknull40 = icmp eq ptr %19, null, !dbg !4834
  %20 = call i1 @llvm.expect.i1(i1 %checknull40, i1 false), !dbg !4834
  br i1 %20, label %panic41, label %checkok45, !dbg !4834

checkok45:                                        ; preds = %if.exit
  %ptradd46 = getelementptr inbounds i8, ptr %19, i64 8, !dbg !4834
  %21 = load i64, ptr %ptradd46, align 8, !dbg !4834
  %22 = inttoptr i64 %21 to ptr, !dbg !4834
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4826
  %23 = icmp eq ptr %22, %type, !dbg !4826
  br i1 %23, label %cache_hit, label %cache_miss, !dbg !4826

cache_miss:                                       ; preds = %checkok45
  %ptradd47 = getelementptr inbounds i8, ptr %22, i64 16, !dbg !4826
  %24 = load ptr, ptr %ptradd47, align 8, !dbg !4826
  %25 = call ptr @.dyn_search(ptr %24, ptr @"$sel.read_byte"), !dbg !4826
  store ptr %25, ptr %.inlinecache, align 8, !dbg !4826
  store ptr %22, ptr %.cachedtype, align 8, !dbg !4826
  br label %26, !dbg !4826

cache_hit:                                        ; preds = %checkok45
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4826
  br label %26, !dbg !4826

26:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %25, %cache_miss ], !dbg !4826
  %27 = icmp eq ptr %fn_phi, null, !dbg !4826
  br i1 %27, label %missing_function, label %match, !dbg !4826

missing_function:                                 ; preds = %26
  store %"char[]" { ptr @.panic_msg.41, i64 46 }, ptr %indirectarg48, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg49, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg50, align 8
  %28 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %28(ptr align 8 %indirectarg48, ptr align 8 %indirectarg49, ptr align 8 %indirectarg50, i32 123), !dbg !4834
  unreachable, !dbg !4834

match:                                            ; preds = %26
  %29 = load ptr, ptr %19, align 8
  %30 = call i64 %fn_phi(ptr %retparam, ptr %29), !dbg !4834
  %not_err = icmp eq i64 %30, 0, !dbg !4834
  %31 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4834
  br i1 %31, label %after_check, label %assign_optional, !dbg !4834

assign_optional:                                  ; preds = %match
  store i64 %30, ptr %reterr39, align 8, !dbg !4834
  br label %err_retblock, !dbg !4834

after_check:                                      ; preds = %match
  %32 = load i8, ptr %retparam, align 1, !dbg !4834
  store i8 %32, ptr %0, align 1, !dbg !4834
  ret i64 0, !dbg !4834

err_retblock:                                     ; preds = %assign_optional
  %33 = load i64, ptr %reterr39, align 8, !dbg !4834
  ret i64 %33, !dbg !4834

panic:                                            ; preds = %entry
  store %"char[]" { ptr @.panic_msg, i64 62 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg1, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg2, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg, ptr align 8 %indirectarg1, ptr align 8 %indirectarg2, i32 117), !dbg !4828
  unreachable, !dbg !4828

panic3:                                           ; preds = %checkok
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg4, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg5, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg6, align 8
  %35 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %35(ptr align 8 %indirectarg4, ptr align 8 %indirectarg5, ptr align 8 %indirectarg6, i32 119), !dbg !4829
  unreachable, !dbg !4829

panic9:                                           ; preds = %checkok7
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg10, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg12, align 8
  %36 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %36(ptr align 8 %indirectarg10, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 119), !dbg !4830
  unreachable, !dbg !4830

panic16:                                          ; preds = %if.then
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg17, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg18, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg19, align 8
  %37 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %37(ptr align 8 %indirectarg17, ptr align 8 %indirectarg18, ptr align 8 %indirectarg19, i32 121), !dbg !4831
  unreachable, !dbg !4831

panic24:                                          ; preds = %checkok20
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg25, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg26, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg27, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr align 8 %indirectarg25, ptr align 8 %indirectarg26, ptr align 8 %indirectarg27, i32 121), !dbg !4833
  unreachable, !dbg !4833

panic30:                                          ; preds = %checkok28
  store i64 %12, ptr %taddr, align 8
  %39 = insertvalue %any undef, ptr %taddr, 0
  %40 = insertvalue %any %39, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %16, ptr %taddr31, align 8
  %41 = insertvalue %any undef, ptr %taddr31, 0
  %42 = insertvalue %any %41, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.95, i64 59 }, ptr %indirectarg32, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg33, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg34, align 8
  store %any %40, ptr %varargslots, align 16
  %ptradd35 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %42, ptr %ptradd35, align 16
  %43 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %43, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg36, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg32, ptr align 8 %indirectarg33, ptr align 8 %indirectarg34, i32 121, ptr align 8 %indirectarg36), !dbg !4833
  unreachable, !dbg !4833

panic41:                                          ; preds = %if.exit
  store %"char[]" { ptr @.panic_msg.36, i64 45 }, ptr %indirectarg42, align 8
  store %"char[]" { ptr @.file.243, i64 10 }, ptr %indirectarg43, align 8
  store %"char[]" { ptr @.func.207, i64 9 }, ptr %indirectarg44, align 8
  %44 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %44(ptr align 8 %indirectarg42, ptr align 8 %indirectarg43, ptr align 8 %indirectarg44, i32 123), !dbg !4834
  unreachable, !dbg !4834
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.available(ptr %0, ptr align 8 %1) #0 comdat !dbg !4835 {
entry:
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %reterr = alloca i64, align 8
  %.inlinecache3 = alloca ptr, align 8
  %.cachedtype4 = alloca ptr, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg11 = alloca %"char[]", align 8
  %indirectarg12 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %.inlinecache14 = alloca ptr, align 8
  %.cachedtype15 = alloca ptr, align 8
  %curr = alloca i64, align 8
  %error_var = alloca i64, align 8
  %.inlinecache25 = alloca ptr, align 8
  %.cachedtype26 = alloca ptr, align 8
  %indirectarg34 = alloca %"char[]", align 8
  %indirectarg35 = alloca %"char[]", align 8
  %indirectarg36 = alloca %"char[]", align 8
  %retparam38 = alloca i64, align 8
  %len = alloca i64, align 8
  %error_var42 = alloca i64, align 8
  %.inlinecache44 = alloca ptr, align 8
  %.cachedtype45 = alloca ptr, align 8
  %indirectarg53 = alloca %"char[]", align 8
  %indirectarg54 = alloca %"char[]", align 8
  %indirectarg55 = alloca %"char[]", align 8
  %retparam57 = alloca i64, align 8
  %error_var63 = alloca i64, align 8
  %.inlinecache65 = alloca ptr, align 8
  %.cachedtype66 = alloca ptr, align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %retparam78 = alloca i64, align 8
  %reterr84 = alloca i64, align 8
  %reterr86 = alloca i64, align 8
  store ptr null, ptr %.cachedtype66, align 8, !dbg !4838
  store ptr null, ptr %.cachedtype45, align 8, !dbg !4838
  store ptr null, ptr %.cachedtype26, align 8, !dbg !4838
  store ptr null, ptr %.cachedtype15, align 8, !dbg !4838
  store ptr null, ptr %.cachedtype4, align 8, !dbg !4838
  store ptr null, ptr %.cachedtype, align 8, !dbg !4838
  call void @llvm.dbg.declare(metadata ptr %1, metadata !4839, metadata !DIExpression()), !dbg !4840
  %ptradd = getelementptr inbounds i8, ptr %1, i64 8, !dbg !4838
  %2 = load i64, ptr %ptradd, align 8, !dbg !4838
  %3 = inttoptr i64 %2 to ptr, !dbg !4838
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4838
  %4 = icmp eq ptr %3, %type, !dbg !4838
  br i1 %4, label %cache_hit, label %cache_miss, !dbg !4838

cache_miss:                                       ; preds = %entry
  %ptradd1 = getelementptr inbounds i8, ptr %3, i64 16, !dbg !4838
  %5 = load ptr, ptr %ptradd1, align 8, !dbg !4838
  %6 = call ptr @.dyn_search(ptr %5, ptr @"$sel.available"), !dbg !4838
  store ptr %6, ptr %.inlinecache, align 8, !dbg !4838
  store ptr %3, ptr %.cachedtype, align 8, !dbg !4838
  br label %7, !dbg !4838

cache_hit:                                        ; preds = %entry
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4838
  br label %7, !dbg !4838

7:                                                ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %6, %cache_miss ], !dbg !4838
  %ptrbool = icmp ne ptr %fn_phi, null, !dbg !4838
  br i1 %ptrbool, label %if.then, label %if.exit, !dbg !4838

if.then:                                          ; preds = %7
  %ptradd2 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !4841
  %8 = load i64, ptr %ptradd2, align 8, !dbg !4841
  %9 = inttoptr i64 %8 to ptr, !dbg !4841
  %type5 = load ptr, ptr %.cachedtype4, align 8, !dbg !4838
  %10 = icmp eq ptr %9, %type5, !dbg !4838
  br i1 %10, label %cache_hit8, label %cache_miss6, !dbg !4838

cache_miss6:                                      ; preds = %if.then
  %ptradd7 = getelementptr inbounds i8, ptr %9, i64 16, !dbg !4838
  %11 = load ptr, ptr %ptradd7, align 8, !dbg !4838
  %12 = call ptr @.dyn_search(ptr %11, ptr @"$sel.available"), !dbg !4838
  store ptr %12, ptr %.inlinecache3, align 8, !dbg !4838
  store ptr %9, ptr %.cachedtype4, align 8, !dbg !4838
  br label %13, !dbg !4838

cache_hit8:                                       ; preds = %if.then
  %cache_hit_fn9 = load ptr, ptr %.inlinecache3, align 8, !dbg !4838
  br label %13, !dbg !4838

13:                                               ; preds = %cache_hit8, %cache_miss6
  %fn_phi10 = phi ptr [ %cache_hit_fn9, %cache_hit8 ], [ %12, %cache_miss6 ], !dbg !4838
  %14 = icmp eq ptr %fn_phi10, null, !dbg !4838
  br i1 %14, label %missing_function, label %match, !dbg !4838

missing_function:                                 ; preds = %13
  store %"char[]" { ptr @.panic_msg.241, i64 46 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg11, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg12, align 8
  %15 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %15(ptr align 8 %indirectarg, ptr align 8 %indirectarg11, ptr align 8 %indirectarg12, i32 29), !dbg !4841
  unreachable, !dbg !4841

match:                                            ; preds = %13
  %16 = load ptr, ptr %1, align 8
  %17 = call i64 %fn_phi10(ptr %retparam, ptr %16), !dbg !4841
  %not_err = icmp eq i64 %17, 0, !dbg !4841
  %18 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4841
  br i1 %18, label %after_check, label %assign_optional, !dbg !4841

assign_optional:                                  ; preds = %match
  store i64 %17, ptr %reterr, align 8, !dbg !4841
  br label %err_retblock, !dbg !4841

after_check:                                      ; preds = %match
  %19 = load i64, ptr %retparam, align 8, !dbg !4841
  store i64 %19, ptr %0, align 8, !dbg !4841
  ret i64 0, !dbg !4841

err_retblock:                                     ; preds = %assign_optional
  %20 = load i64, ptr %reterr, align 8, !dbg !4841
  ret i64 %20, !dbg !4841

if.exit:                                          ; preds = %7
  %ptradd13 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !4842
  %21 = load i64, ptr %ptradd13, align 8, !dbg !4842
  %22 = inttoptr i64 %21 to ptr, !dbg !4842
  %type16 = load ptr, ptr %.cachedtype15, align 8, !dbg !4838
  %23 = icmp eq ptr %22, %type16, !dbg !4838
  br i1 %23, label %cache_hit19, label %cache_miss17, !dbg !4838

cache_miss17:                                     ; preds = %if.exit
  %ptradd18 = getelementptr inbounds i8, ptr %22, i64 16, !dbg !4838
  %24 = load ptr, ptr %ptradd18, align 8, !dbg !4838
  %25 = call ptr @.dyn_search(ptr %24, ptr @"$sel.seek"), !dbg !4838
  store ptr %25, ptr %.inlinecache14, align 8, !dbg !4838
  store ptr %22, ptr %.cachedtype15, align 8, !dbg !4838
  br label %26, !dbg !4838

cache_hit19:                                      ; preds = %if.exit
  %cache_hit_fn20 = load ptr, ptr %.inlinecache14, align 8, !dbg !4838
  br label %26, !dbg !4838

26:                                               ; preds = %cache_hit19, %cache_miss17
  %fn_phi21 = phi ptr [ %cache_hit_fn20, %cache_hit19 ], [ %25, %cache_miss17 ], !dbg !4838
  %ptrbool22 = icmp ne ptr %fn_phi21, null, !dbg !4838
  br i1 %ptrbool22, label %if.then23, label %if.exit85, !dbg !4838

if.then23:                                        ; preds = %26
  call void @llvm.dbg.declare(metadata ptr %curr, metadata !4843, metadata !DIExpression()), !dbg !4845
  %ptradd24 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !4846
  %27 = load i64, ptr %ptradd24, align 8, !dbg !4846
  %28 = inttoptr i64 %27 to ptr, !dbg !4846
  %type27 = load ptr, ptr %.cachedtype26, align 8, !dbg !4838
  %29 = icmp eq ptr %28, %type27, !dbg !4838
  br i1 %29, label %cache_hit30, label %cache_miss28, !dbg !4838

cache_miss28:                                     ; preds = %if.then23
  %ptradd29 = getelementptr inbounds i8, ptr %28, i64 16, !dbg !4838
  %30 = load ptr, ptr %ptradd29, align 8, !dbg !4838
  %31 = call ptr @.dyn_search(ptr %30, ptr @"$sel.seek"), !dbg !4838
  store ptr %31, ptr %.inlinecache25, align 8, !dbg !4838
  store ptr %28, ptr %.cachedtype26, align 8, !dbg !4838
  br label %32, !dbg !4838

cache_hit30:                                      ; preds = %if.then23
  %cache_hit_fn31 = load ptr, ptr %.inlinecache25, align 8, !dbg !4838
  br label %32, !dbg !4838

32:                                               ; preds = %cache_hit30, %cache_miss28
  %fn_phi32 = phi ptr [ %cache_hit_fn31, %cache_hit30 ], [ %31, %cache_miss28 ], !dbg !4838
  %33 = icmp eq ptr %fn_phi32, null, !dbg !4838
  br i1 %33, label %missing_function33, label %match37, !dbg !4838

missing_function33:                               ; preds = %32
  store %"char[]" { ptr @.panic_msg.248, i64 41 }, ptr %indirectarg34, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg35, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg36, align 8
  %34 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %34(ptr align 8 %indirectarg34, ptr align 8 %indirectarg35, ptr align 8 %indirectarg36, i32 32), !dbg !4847
  unreachable, !dbg !4847

match37:                                          ; preds = %32
  %35 = load ptr, ptr %1, align 8
  %36 = call i64 %fn_phi32(ptr %retparam38, ptr %35, i64 0, i32 1), !dbg !4847
  %not_err39 = icmp eq i64 %36, 0, !dbg !4847
  %37 = call i1 @llvm.expect.i1(i1 %not_err39, i1 true), !dbg !4847
  br i1 %37, label %after_check41, label %assign_optional40, !dbg !4847

assign_optional40:                                ; preds = %match37
  store i64 %36, ptr %error_var, align 8, !dbg !4847
  br label %guard_block, !dbg !4847

after_check41:                                    ; preds = %match37
  br label %noerr_block, !dbg !4847

guard_block:                                      ; preds = %assign_optional40
  %38 = load i64, ptr %error_var, align 8, !dbg !4847
  ret i64 %38, !dbg !4847

noerr_block:                                      ; preds = %after_check41
  %39 = load i64, ptr %retparam38, align 8, !dbg !4847
  store i64 %39, ptr %curr, align 8, !dbg !4847
  call void @llvm.dbg.declare(metadata ptr %len, metadata !4848, metadata !DIExpression()), !dbg !4849
  %ptradd43 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !4850
  %40 = load i64, ptr %ptradd43, align 8, !dbg !4850
  %41 = inttoptr i64 %40 to ptr, !dbg !4850
  %type46 = load ptr, ptr %.cachedtype45, align 8, !dbg !4838
  %42 = icmp eq ptr %41, %type46, !dbg !4838
  br i1 %42, label %cache_hit49, label %cache_miss47, !dbg !4838

cache_miss47:                                     ; preds = %noerr_block
  %ptradd48 = getelementptr inbounds i8, ptr %41, i64 16, !dbg !4838
  %43 = load ptr, ptr %ptradd48, align 8, !dbg !4838
  %44 = call ptr @.dyn_search(ptr %43, ptr @"$sel.seek"), !dbg !4838
  store ptr %44, ptr %.inlinecache44, align 8, !dbg !4838
  store ptr %41, ptr %.cachedtype45, align 8, !dbg !4838
  br label %45, !dbg !4838

cache_hit49:                                      ; preds = %noerr_block
  %cache_hit_fn50 = load ptr, ptr %.inlinecache44, align 8, !dbg !4838
  br label %45, !dbg !4838

45:                                               ; preds = %cache_hit49, %cache_miss47
  %fn_phi51 = phi ptr [ %cache_hit_fn50, %cache_hit49 ], [ %44, %cache_miss47 ], !dbg !4838
  %46 = icmp eq ptr %fn_phi51, null, !dbg !4838
  br i1 %46, label %missing_function52, label %match56, !dbg !4838

missing_function52:                               ; preds = %45
  store %"char[]" { ptr @.panic_msg.248, i64 41 }, ptr %indirectarg53, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg54, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg55, align 8
  %47 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %47(ptr align 8 %indirectarg53, ptr align 8 %indirectarg54, ptr align 8 %indirectarg55, i32 33), !dbg !4851
  unreachable, !dbg !4851

match56:                                          ; preds = %45
  %48 = load ptr, ptr %1, align 8
  %49 = call i64 %fn_phi51(ptr %retparam57, ptr %48, i64 0, i32 2), !dbg !4851
  %not_err58 = icmp eq i64 %49, 0, !dbg !4851
  %50 = call i1 @llvm.expect.i1(i1 %not_err58, i1 true), !dbg !4851
  br i1 %50, label %after_check60, label %assign_optional59, !dbg !4851

assign_optional59:                                ; preds = %match56
  store i64 %49, ptr %error_var42, align 8, !dbg !4851
  br label %guard_block61, !dbg !4851

after_check60:                                    ; preds = %match56
  br label %noerr_block62, !dbg !4851

guard_block61:                                    ; preds = %assign_optional59
  %51 = load i64, ptr %error_var42, align 8, !dbg !4851
  ret i64 %51, !dbg !4851

noerr_block62:                                    ; preds = %after_check60
  %52 = load i64, ptr %retparam57, align 8, !dbg !4851
  store i64 %52, ptr %len, align 8, !dbg !4851
  %ptradd64 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !4852
  %53 = load i64, ptr %ptradd64, align 8, !dbg !4852
  %54 = inttoptr i64 %53 to ptr, !dbg !4852
  %type67 = load ptr, ptr %.cachedtype66, align 8, !dbg !4838
  %55 = icmp eq ptr %54, %type67, !dbg !4838
  br i1 %55, label %cache_hit70, label %cache_miss68, !dbg !4838

cache_miss68:                                     ; preds = %noerr_block62
  %ptradd69 = getelementptr inbounds i8, ptr %54, i64 16, !dbg !4838
  %56 = load ptr, ptr %ptradd69, align 8, !dbg !4838
  %57 = call ptr @.dyn_search(ptr %56, ptr @"$sel.seek"), !dbg !4838
  store ptr %57, ptr %.inlinecache65, align 8, !dbg !4838
  store ptr %54, ptr %.cachedtype66, align 8, !dbg !4838
  br label %58, !dbg !4838

cache_hit70:                                      ; preds = %noerr_block62
  %cache_hit_fn71 = load ptr, ptr %.inlinecache65, align 8, !dbg !4838
  br label %58, !dbg !4838

58:                                               ; preds = %cache_hit70, %cache_miss68
  %fn_phi72 = phi ptr [ %cache_hit_fn71, %cache_hit70 ], [ %57, %cache_miss68 ], !dbg !4838
  %59 = icmp eq ptr %fn_phi72, null, !dbg !4838
  br i1 %59, label %missing_function73, label %match77, !dbg !4838

missing_function73:                               ; preds = %58
  store %"char[]" { ptr @.panic_msg.248, i64 41 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg75, align 8
  store %"char[]" { ptr @.func.226, i64 9 }, ptr %indirectarg76, align 8
  %60 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %60(ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, ptr align 8 %indirectarg76, i32 34), !dbg !4853
  unreachable, !dbg !4853

match77:                                          ; preds = %58
  %61 = load ptr, ptr %1, align 8
  %62 = load i64, ptr %curr, align 8
  %63 = call i64 %fn_phi72(ptr %retparam78, ptr %61, i64 %62, i32 0), !dbg !4853
  %not_err79 = icmp eq i64 %63, 0, !dbg !4853
  %64 = call i1 @llvm.expect.i1(i1 %not_err79, i1 true), !dbg !4853
  br i1 %64, label %after_check81, label %assign_optional80, !dbg !4853

assign_optional80:                                ; preds = %match77
  store i64 %63, ptr %error_var63, align 8, !dbg !4853
  br label %guard_block82, !dbg !4853

after_check81:                                    ; preds = %match77
  br label %noerr_block83, !dbg !4853

guard_block82:                                    ; preds = %assign_optional80
  %65 = load i64, ptr %error_var63, align 8, !dbg !4853
  ret i64 %65, !dbg !4853

noerr_block83:                                    ; preds = %after_check81
  %66 = load i64, ptr %len, align 8, !dbg !4854
  %67 = load i64, ptr %curr, align 8, !dbg !4855
  %sub = sub i64 %66, %67, !dbg !4854
  store i64 %sub, ptr %0, align 8, !dbg !4854
  ret i64 0, !dbg !4854

if.exit85:                                        ; preds = %26
  store i64 0, ptr %0, align 8, !dbg !4856
  ret i64 0, !dbg !4856
}

; Function Attrs: nounwind ssp uwtable
define weak i64 @std.io.copy_to(ptr %0, ptr align 8 %1, ptr align 8 %2, ptr align 8 %3) #0 comdat !dbg !4857 {
entry:
  %reterr = alloca i64, align 8
  %in = alloca %any, align 8
  %dst = alloca %any, align 8
  %buffer = alloca %"char[]", align 8
  %blockret = alloca i64, align 8
  %total_copied = alloca i64, align 8
  %len = alloca i64, align 8
  %len.f = alloca i64, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %indirectarg = alloca %"char[]", align 8
  %indirectarg3 = alloca %"char[]", align 8
  %indirectarg4 = alloca %"char[]", align 8
  %retparam = alloca i64, align 8
  %indirectarg5 = alloca %"char[]", align 8
  %err = alloca i64, align 8
  %switch = alloca i64, align 8
  %written = alloca i64, align 8
  %error_var = alloca i64, align 8
  %taddr = alloca i64, align 8
  %taddr12 = alloca i64, align 8
  %indirectarg13 = alloca %"char[]", align 8
  %indirectarg14 = alloca %"char[]", align 8
  %indirectarg15 = alloca %"char[]", align 8
  %varargslots = alloca [2 x %any], align 16
  %indirectarg17 = alloca %"any[]", align 8
  %taddr19 = alloca i64, align 8
  %taddr20 = alloca i64, align 8
  %indirectarg21 = alloca %"char[]", align 8
  %indirectarg22 = alloca %"char[]", align 8
  %indirectarg23 = alloca %"char[]", align 8
  %varargslots24 = alloca [2 x %any], align 16
  %indirectarg27 = alloca %"any[]", align 8
  %.inlinecache30 = alloca ptr, align 8
  %.cachedtype31 = alloca ptr, align 8
  %indirectarg39 = alloca %"char[]", align 8
  %indirectarg40 = alloca %"char[]", align 8
  %indirectarg41 = alloca %"char[]", align 8
  %retparam43 = alloca i64, align 8
  %indirectarg44 = alloca %"char[]", align 8
  %.inlinecache54 = alloca ptr, align 8
  %.cachedtype55 = alloca ptr, align 8
  %reterr63 = alloca i64, align 8
  %.inlinecache65 = alloca ptr, align 8
  %.cachedtype66 = alloca ptr, align 8
  %indirectarg74 = alloca %"char[]", align 8
  %indirectarg75 = alloca %"char[]", align 8
  %indirectarg76 = alloca %"char[]", align 8
  %retparam78 = alloca i64, align 8
  %indirectarg79 = alloca %any, align 8
  %.inlinecache86 = alloca ptr, align 8
  %.cachedtype87 = alloca ptr, align 8
  %reterr96 = alloca i64, align 8
  %.inlinecache98 = alloca ptr, align 8
  %.cachedtype99 = alloca ptr, align 8
  %indirectarg107 = alloca %"char[]", align 8
  %indirectarg108 = alloca %"char[]", align 8
  %indirectarg109 = alloca %"char[]", align 8
  %retparam111 = alloca i64, align 8
  %indirectarg112 = alloca %any, align 8
  %reterr118 = alloca i64, align 8
  %in119 = alloca %any, align 8
  %dst120 = alloca %any, align 8
  %literal = alloca [4096 x i8], align 16
  %buffer121 = alloca %"char[]", align 8
  %blockret122 = alloca i64, align 8
  %total_copied123 = alloca i64, align 8
  %len125 = alloca i64, align 8
  %len.f126 = alloca i64, align 8
  %.inlinecache128 = alloca ptr, align 8
  %.cachedtype129 = alloca ptr, align 8
  %indirectarg137 = alloca %"char[]", align 8
  %indirectarg138 = alloca %"char[]", align 8
  %indirectarg139 = alloca %"char[]", align 8
  %retparam141 = alloca i64, align 8
  %indirectarg142 = alloca %"char[]", align 8
  %err147 = alloca i64, align 8
  %switch156 = alloca i64, align 8
  %written166 = alloca i64, align 8
  %error_var167 = alloca i64, align 8
  %taddr170 = alloca i64, align 8
  %taddr171 = alloca i64, align 8
  %indirectarg172 = alloca %"char[]", align 8
  %indirectarg173 = alloca %"char[]", align 8
  %indirectarg174 = alloca %"char[]", align 8
  %varargslots175 = alloca [2 x %any], align 16
  %indirectarg178 = alloca %"any[]", align 8
  %taddr184 = alloca i64, align 8
  %taddr185 = alloca i64, align 8
  %indirectarg186 = alloca %"char[]", align 8
  %indirectarg187 = alloca %"char[]", align 8
  %indirectarg188 = alloca %"char[]", align 8
  %varargslots189 = alloca [2 x %any], align 16
  %indirectarg192 = alloca %"any[]", align 8
  %.inlinecache196 = alloca ptr, align 8
  %.cachedtype197 = alloca ptr, align 8
  %indirectarg205 = alloca %"char[]", align 8
  %indirectarg206 = alloca %"char[]", align 8
  %indirectarg207 = alloca %"char[]", align 8
  %retparam209 = alloca i64, align 8
  %indirectarg210 = alloca %"char[]", align 8
  store ptr null, ptr %.cachedtype197, align 8, !dbg !4860
  store ptr null, ptr %.cachedtype129, align 8, !dbg !4860
  store ptr null, ptr %.cachedtype99, align 8, !dbg !4860
  store ptr null, ptr %.cachedtype87, align 8, !dbg !4860
  store ptr null, ptr %.cachedtype66, align 8, !dbg !4860
  store ptr null, ptr %.cachedtype55, align 8, !dbg !4860
  store ptr null, ptr %.cachedtype31, align 8, !dbg !4860
  store ptr null, ptr %.cachedtype, align 8, !dbg !4860
  call void @llvm.dbg.declare(metadata ptr %1, metadata !4861, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4863, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.declare(metadata ptr %3, metadata !4865, metadata !DIExpression()), !dbg !4866
  %ptradd = getelementptr inbounds i8, ptr %3, i64 8, !dbg !4860
  %4 = load i64, ptr %ptradd, align 8, !dbg !4860
  %intbool = icmp ne i64 %4, 0, !dbg !4860
  br i1 %intbool, label %if.then, label %if.exit52, !dbg !4860

if.then:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %in, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %dst, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %buffer, ptr align 8 %3, i32 16, i1 false)
  call void @llvm.dbg.declare(metadata ptr %total_copied, metadata !4867, metadata !DIExpression()), !dbg !4869
  store i64 0, ptr %total_copied, align 8, !dbg !4869
  br label %loop.body, !dbg !4871

loop.body:                                        ; preds = %if.exit51, %if.then
  call void @llvm.dbg.declare(metadata ptr %len, metadata !4872, metadata !DIExpression()), !dbg !4875
  %ptradd1 = getelementptr inbounds i8, ptr %in, i64 8, !dbg !4876
  %5 = load i64, ptr %ptradd1, align 8, !dbg !4876
  %6 = inttoptr i64 %5 to ptr, !dbg !4876
  %type = load ptr, ptr %.cachedtype, align 8, !dbg !4860
  %7 = icmp eq ptr %6, %type, !dbg !4860
  br i1 %7, label %cache_hit, label %cache_miss, !dbg !4860

cache_miss:                                       ; preds = %loop.body
  %ptradd2 = getelementptr inbounds i8, ptr %6, i64 16, !dbg !4860
  %8 = load ptr, ptr %ptradd2, align 8, !dbg !4860
  %9 = call ptr @.dyn_search(ptr %8, ptr @"$sel.read"), !dbg !4860
  store ptr %9, ptr %.inlinecache, align 8, !dbg !4860
  store ptr %6, ptr %.cachedtype, align 8, !dbg !4860
  br label %10, !dbg !4860

cache_hit:                                        ; preds = %loop.body
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8, !dbg !4860
  br label %10, !dbg !4860

10:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %9, %cache_miss ], !dbg !4860
  %11 = icmp eq ptr %fn_phi, null, !dbg !4860
  br i1 %11, label %missing_function, label %match, !dbg !4860

missing_function:                                 ; preds = %10
  store %"char[]" { ptr @.panic_msg.205, i64 41 }, ptr %indirectarg, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg3, align 8
  store %"char[]" { ptr @.func.249, i64 7 }, ptr %indirectarg4, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr align 8 %indirectarg, ptr align 8 %indirectarg3, ptr align 8 %indirectarg4, i32 174), !dbg !4877
  unreachable, !dbg !4877

match:                                            ; preds = %10
  %13 = load ptr, ptr %in, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg5, ptr align 8 %buffer, i32 16, i1 false)
  %14 = call i64 %fn_phi(ptr %retparam, ptr %13, ptr align 8 %indirectarg5), !dbg !4877
  %not_err = icmp eq i64 %14, 0, !dbg !4877
  %15 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !4877
  br i1 %15, label %after_check, label %assign_optional, !dbg !4877

assign_optional:                                  ; preds = %match
  store i64 %14, ptr %len.f, align 8, !dbg !4877
  br label %after_assign, !dbg !4877

after_check:                                      ; preds = %match
  %16 = load i64, ptr %retparam, align 8, !dbg !4877
  store i64 %16, ptr %len, align 8, !dbg !4877
  store i64 0, ptr %len.f, align 8, !dbg !4877
  br label %after_assign, !dbg !4877

after_assign:                                     ; preds = %after_check, %assign_optional
  call void @llvm.dbg.declare(metadata ptr %err, metadata !4878, metadata !DIExpression()), !dbg !4879
  br label %testblock, !dbg !4879

testblock:                                        ; preds = %after_assign
  %optval = load i64, ptr %len.f, align 8, !dbg !4880
  %not_err6 = icmp eq i64 %optval, 0, !dbg !4880
  %17 = call i1 @llvm.expect.i1(i1 %not_err6, i1 true), !dbg !4880
  br i1 %17, label %after_check8, label %assign_optional7, !dbg !4880

assign_optional7:                                 ; preds = %testblock
  store i64 %optval, ptr %err, align 8, !dbg !4880
  br label %end_block, !dbg !4880

after_check8:                                     ; preds = %testblock
  store i64 0, ptr %err, align 8, !dbg !4880
  br label %end_block, !dbg !4880

end_block:                                        ; preds = %after_check8, %assign_optional7
  %18 = load i64, ptr %err, align 8, !dbg !4880
  %neq = icmp ne i64 %18, 0, !dbg !4880
  br i1 %neq, label %if.then9, label %if.exit, !dbg !4880

if.then9:                                         ; preds = %end_block
  store i64 %18, ptr %switch, align 8
  br label %switch.entry

switch.entry:                                     ; preds = %if.then9
  %19 = load i64, ptr %switch, align 8
  %eq = icmp eq i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), %19, !dbg !4881
  br i1 %eq, label %switch.case, label %next_if, !dbg !4881

switch.case:                                      ; preds = %switch.entry
  %20 = load i64, ptr %total_copied, align 8, !dbg !4882
  store i64 %20, ptr %blockret, align 8, !dbg !4882
  br label %expr_block.exit, !dbg !4882

next_if:                                          ; preds = %switch.entry
  br label %switch.default, !dbg !4882

switch.default:                                   ; preds = %next_if
  %21 = load i64, ptr %err, align 8, !dbg !4884
  store i64 %21, ptr %reterr, align 8, !dbg !4884
  br label %err_retblock, !dbg !4884

if.exit:                                          ; preds = %end_block
  %22 = load i64, ptr %len, align 8, !dbg !4886
  %not = icmp eq i64 %22, 0, !dbg !4886
  br i1 %not, label %if.then10, label %if.exit11, !dbg !4886

if.then10:                                        ; preds = %if.exit
  %23 = load i64, ptr %total_copied, align 8, !dbg !4887
  store i64 %23, ptr %blockret, align 8, !dbg !4887
  br label %expr_block.exit, !dbg !4887

if.exit11:                                        ; preds = %if.exit
  call void @llvm.dbg.declare(metadata ptr %written, metadata !4888, metadata !DIExpression()), !dbg !4889
  %24 = load %"char[]", ptr %buffer, align 8, !dbg !4890
  %25 = extractvalue %"char[]" %24, 0, !dbg !4890
  %26 = extractvalue %"char[]" %24, 1, !dbg !4891
  %gt = icmp ugt i64 0, %26, !dbg !4891
  %27 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !4891
  br i1 %27, label %panic, label %checkok, !dbg !4891

checkok:                                          ; preds = %if.exit11
  %28 = load i64, ptr %len, align 8, !dbg !4892
  %add = add i64 0, %28, !dbg !4892
  %lt = icmp ult i64 %26, %add, !dbg !4892
  %sub = sub i64 %add, 1, !dbg !4892
  %29 = call i1 @llvm.expect.i1(i1 %lt, i1 false), !dbg !4892
  br i1 %29, label %panic18, label %checkok28, !dbg !4892

checkok28:                                        ; preds = %checkok
  %size = sub i64 %add, 0, !dbg !4890
  %30 = insertvalue %"char[]" undef, ptr %25, 0, !dbg !4890
  %31 = insertvalue %"char[]" %30, i64 %size, 1, !dbg !4890
  %ptradd29 = getelementptr inbounds i8, ptr %dst, i64 8, !dbg !4890
  %32 = load i64, ptr %ptradd29, align 8, !dbg !4890
  %33 = inttoptr i64 %32 to ptr, !dbg !4890
  %type32 = load ptr, ptr %.cachedtype31, align 8, !dbg !4860
  %34 = icmp eq ptr %33, %type32, !dbg !4860
  br i1 %34, label %cache_hit35, label %cache_miss33, !dbg !4860

cache_miss33:                                     ; preds = %checkok28
  %ptradd34 = getelementptr inbounds i8, ptr %33, i64 16, !dbg !4860
  %35 = load ptr, ptr %ptradd34, align 8, !dbg !4860
  %36 = call ptr @.dyn_search(ptr %35, ptr @"$sel.write"), !dbg !4860
  store ptr %36, ptr %.inlinecache30, align 8, !dbg !4860
  store ptr %33, ptr %.cachedtype31, align 8, !dbg !4860
  br label %37, !dbg !4860

cache_hit35:                                      ; preds = %checkok28
  %cache_hit_fn36 = load ptr, ptr %.inlinecache30, align 8, !dbg !4860
  br label %37, !dbg !4860

37:                                               ; preds = %cache_hit35, %cache_miss33
  %fn_phi37 = phi ptr [ %cache_hit_fn36, %cache_hit35 ], [ %36, %cache_miss33 ], !dbg !4860
  %38 = icmp eq ptr %fn_phi37, null, !dbg !4860
  br i1 %38, label %missing_function38, label %match42, !dbg !4860

missing_function38:                               ; preds = %37
  store %"char[]" { ptr @.panic_msg.51, i64 42 }, ptr %indirectarg39, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg40, align 8
  store %"char[]" { ptr @.func.249, i64 7 }, ptr %indirectarg41, align 8
  %39 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %39(ptr align 8 %indirectarg39, ptr align 8 %indirectarg40, ptr align 8 %indirectarg41, i32 181), !dbg !4893
  unreachable, !dbg !4893

match42:                                          ; preds = %37
  %40 = load ptr, ptr %dst, align 8
  store %"char[]" %31, ptr %indirectarg44, align 8
  %41 = call i64 %fn_phi37(ptr %retparam43, ptr %40, ptr align 8 %indirectarg44), !dbg !4893
  %not_err45 = icmp eq i64 %41, 0, !dbg !4893
  %42 = call i1 @llvm.expect.i1(i1 %not_err45, i1 true), !dbg !4893
  br i1 %42, label %after_check47, label %assign_optional46, !dbg !4893

assign_optional46:                                ; preds = %match42
  store i64 %41, ptr %error_var, align 8, !dbg !4893
  br label %guard_block, !dbg !4893

after_check47:                                    ; preds = %match42
  br label %noerr_block, !dbg !4893

guard_block:                                      ; preds = %assign_optional46
  %43 = load i64, ptr %error_var, align 8, !dbg !4893
  store i64 %43, ptr %reterr, align 8, !dbg !4893
  br label %err_retblock, !dbg !4893

noerr_block:                                      ; preds = %after_check47
  %44 = load i64, ptr %retparam43, align 8, !dbg !4893
  store i64 %44, ptr %written, align 8, !dbg !4893
  %45 = load i64, ptr %total_copied, align 8, !dbg !4894
  %46 = load i64, ptr %len, align 8, !dbg !4895
  %add48 = add i64 %45, %46, !dbg !4894
  store i64 %add48, ptr %total_copied, align 8, !dbg !4894
  %47 = load i64, ptr %written, align 8, !dbg !4896
  %48 = load i64, ptr %len, align 8, !dbg !4897
  %neq49 = icmp ne i64 %47, %48, !dbg !4896
  br i1 %neq49, label %if.then50, label %if.exit51, !dbg !4896

if.then50:                                        ; preds = %noerr_block
  store i64 ptrtoint (ptr @"std.io.IoError$INCOMPLETE_WRITE" to i64), ptr %reterr, align 8, !dbg !4898
  br label %err_retblock, !dbg !4898

if.exit51:                                        ; preds = %noerr_block
  br label %loop.body, !dbg !4898

expr_block.exit:                                  ; preds = %if.then10, %switch.case
  %49 = load i64, ptr %blockret, align 8, !dbg !4898
  store i64 %49, ptr %0, align 8, !dbg !4898
  ret i64 0, !dbg !4898

err_retblock:                                     ; preds = %if.then50, %guard_block, %switch.default
  %50 = load i64, ptr %reterr, align 8, !dbg !4898
  ret i64 %50, !dbg !4898

if.exit52:                                        ; preds = %entry
  %ptradd53 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !4899
  %51 = load i64, ptr %ptradd53, align 8, !dbg !4899
  %52 = inttoptr i64 %51 to ptr, !dbg !4899
  %type56 = load ptr, ptr %.cachedtype55, align 8, !dbg !4860
  %53 = icmp eq ptr %52, %type56, !dbg !4860
  br i1 %53, label %cache_hit59, label %cache_miss57, !dbg !4860

cache_miss57:                                     ; preds = %if.exit52
  %ptradd58 = getelementptr inbounds i8, ptr %52, i64 16, !dbg !4860
  %54 = load ptr, ptr %ptradd58, align 8, !dbg !4860
  %55 = call ptr @.dyn_search(ptr %54, ptr @"$sel.write_to"), !dbg !4860
  store ptr %55, ptr %.inlinecache54, align 8, !dbg !4860
  store ptr %52, ptr %.cachedtype55, align 8, !dbg !4860
  br label %56, !dbg !4860

cache_hit59:                                      ; preds = %if.exit52
  %cache_hit_fn60 = load ptr, ptr %.inlinecache54, align 8, !dbg !4860
  br label %56, !dbg !4860

56:                                               ; preds = %cache_hit59, %cache_miss57
  %fn_phi61 = phi ptr [ %cache_hit_fn60, %cache_hit59 ], [ %55, %cache_miss57 ], !dbg !4860
  %ptrbool = icmp ne ptr %fn_phi61, null, !dbg !4860
  br i1 %ptrbool, label %if.then62, label %if.exit84, !dbg !4860

if.then62:                                        ; preds = %56
  %ptradd64 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !4900
  %57 = load i64, ptr %ptradd64, align 8, !dbg !4900
  %58 = inttoptr i64 %57 to ptr, !dbg !4900
  %type67 = load ptr, ptr %.cachedtype66, align 8, !dbg !4860
  %59 = icmp eq ptr %58, %type67, !dbg !4860
  br i1 %59, label %cache_hit70, label %cache_miss68, !dbg !4860

cache_miss68:                                     ; preds = %if.then62
  %ptradd69 = getelementptr inbounds i8, ptr %58, i64 16, !dbg !4860
  %60 = load ptr, ptr %ptradd69, align 8, !dbg !4860
  %61 = call ptr @.dyn_search(ptr %60, ptr @"$sel.write_to"), !dbg !4860
  store ptr %61, ptr %.inlinecache65, align 8, !dbg !4860
  store ptr %58, ptr %.cachedtype66, align 8, !dbg !4860
  br label %62, !dbg !4860

cache_hit70:                                      ; preds = %if.then62
  %cache_hit_fn71 = load ptr, ptr %.inlinecache65, align 8, !dbg !4860
  br label %62, !dbg !4860

62:                                               ; preds = %cache_hit70, %cache_miss68
  %fn_phi72 = phi ptr [ %cache_hit_fn71, %cache_hit70 ], [ %61, %cache_miss68 ], !dbg !4860
  %63 = icmp eq ptr %fn_phi72, null, !dbg !4860
  br i1 %63, label %missing_function73, label %match77, !dbg !4860

missing_function73:                               ; preds = %62
  store %"char[]" { ptr @.panic_msg.250, i64 45 }, ptr %indirectarg74, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg75, align 8
  store %"char[]" { ptr @.func.249, i64 7 }, ptr %indirectarg76, align 8
  %64 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %64(ptr align 8 %indirectarg74, ptr align 8 %indirectarg75, ptr align 8 %indirectarg76, i32 156), !dbg !4901
  unreachable, !dbg !4901

match77:                                          ; preds = %62
  %65 = load ptr, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg79, ptr align 8 %2, i32 16, i1 false)
  %66 = call i64 %fn_phi72(ptr %retparam78, ptr %65, ptr align 8 %indirectarg79), !dbg !4901
  %not_err80 = icmp eq i64 %66, 0, !dbg !4901
  %67 = call i1 @llvm.expect.i1(i1 %not_err80, i1 true), !dbg !4901
  br i1 %67, label %after_check82, label %assign_optional81, !dbg !4901

assign_optional81:                                ; preds = %match77
  store i64 %66, ptr %reterr63, align 8, !dbg !4901
  br label %err_retblock83, !dbg !4901

after_check82:                                    ; preds = %match77
  %68 = load i64, ptr %retparam78, align 8, !dbg !4901
  store i64 %68, ptr %0, align 8, !dbg !4901
  ret i64 0, !dbg !4901

err_retblock83:                                   ; preds = %assign_optional81
  %69 = load i64, ptr %reterr63, align 8, !dbg !4901
  ret i64 %69, !dbg !4901

if.exit84:                                        ; preds = %56
  %ptradd85 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4902
  %70 = load i64, ptr %ptradd85, align 8, !dbg !4902
  %71 = inttoptr i64 %70 to ptr, !dbg !4902
  %type88 = load ptr, ptr %.cachedtype87, align 8, !dbg !4860
  %72 = icmp eq ptr %71, %type88, !dbg !4860
  br i1 %72, label %cache_hit91, label %cache_miss89, !dbg !4860

cache_miss89:                                     ; preds = %if.exit84
  %ptradd90 = getelementptr inbounds i8, ptr %71, i64 16, !dbg !4860
  %73 = load ptr, ptr %ptradd90, align 8, !dbg !4860
  %74 = call ptr @.dyn_search(ptr %73, ptr @"$sel.read_to"), !dbg !4860
  store ptr %74, ptr %.inlinecache86, align 8, !dbg !4860
  store ptr %71, ptr %.cachedtype87, align 8, !dbg !4860
  br label %75, !dbg !4860

cache_hit91:                                      ; preds = %if.exit84
  %cache_hit_fn92 = load ptr, ptr %.inlinecache86, align 8, !dbg !4860
  br label %75, !dbg !4860

75:                                               ; preds = %cache_hit91, %cache_miss89
  %fn_phi93 = phi ptr [ %cache_hit_fn92, %cache_hit91 ], [ %74, %cache_miss89 ], !dbg !4860
  %ptrbool94 = icmp ne ptr %fn_phi93, null, !dbg !4860
  br i1 %ptrbool94, label %if.then95, label %if.exit117, !dbg !4860

if.then95:                                        ; preds = %75
  %ptradd97 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !4903
  %76 = load i64, ptr %ptradd97, align 8, !dbg !4903
  %77 = inttoptr i64 %76 to ptr, !dbg !4903
  %type100 = load ptr, ptr %.cachedtype99, align 8, !dbg !4860
  %78 = icmp eq ptr %77, %type100, !dbg !4860
  br i1 %78, label %cache_hit103, label %cache_miss101, !dbg !4860

cache_miss101:                                    ; preds = %if.then95
  %ptradd102 = getelementptr inbounds i8, ptr %77, i64 16, !dbg !4860
  %79 = load ptr, ptr %ptradd102, align 8, !dbg !4860
  %80 = call ptr @.dyn_search(ptr %79, ptr @"$sel.read_to"), !dbg !4860
  store ptr %80, ptr %.inlinecache98, align 8, !dbg !4860
  store ptr %77, ptr %.cachedtype99, align 8, !dbg !4860
  br label %81, !dbg !4860

cache_hit103:                                     ; preds = %if.then95
  %cache_hit_fn104 = load ptr, ptr %.inlinecache98, align 8, !dbg !4860
  br label %81, !dbg !4860

81:                                               ; preds = %cache_hit103, %cache_miss101
  %fn_phi105 = phi ptr [ %cache_hit_fn104, %cache_hit103 ], [ %80, %cache_miss101 ], !dbg !4860
  %82 = icmp eq ptr %fn_phi105, null, !dbg !4860
  br i1 %82, label %missing_function106, label %match110, !dbg !4860

missing_function106:                              ; preds = %81
  store %"char[]" { ptr @.panic_msg.251, i64 44 }, ptr %indirectarg107, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg108, align 8
  store %"char[]" { ptr @.func.249, i64 7 }, ptr %indirectarg109, align 8
  %83 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %83(ptr align 8 %indirectarg107, ptr align 8 %indirectarg108, ptr align 8 %indirectarg109, i32 157), !dbg !4904
  unreachable, !dbg !4904

match110:                                         ; preds = %81
  %84 = load ptr, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg112, ptr align 8 %1, i32 16, i1 false)
  %85 = call i64 %fn_phi105(ptr %retparam111, ptr %84, ptr align 8 %indirectarg112), !dbg !4904
  %not_err113 = icmp eq i64 %85, 0, !dbg !4904
  %86 = call i1 @llvm.expect.i1(i1 %not_err113, i1 true), !dbg !4904
  br i1 %86, label %after_check115, label %assign_optional114, !dbg !4904

assign_optional114:                               ; preds = %match110
  store i64 %85, ptr %reterr96, align 8, !dbg !4904
  br label %err_retblock116, !dbg !4904

after_check115:                                   ; preds = %match110
  %87 = load i64, ptr %retparam111, align 8, !dbg !4904
  store i64 %87, ptr %0, align 8, !dbg !4904
  ret i64 0, !dbg !4904

err_retblock116:                                  ; preds = %assign_optional114
  %88 = load i64, ptr %reterr96, align 8, !dbg !4904
  ret i64 %88, !dbg !4904

if.exit117:                                       ; preds = %75
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %in119, ptr align 8 %1, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %dst120, ptr align 8 %2, i32 16, i1 false)
  call void @llvm.memset.p0.i64(ptr align 1 %literal, i8 0, i64 4096, i1 false)
  %89 = insertvalue %"char[]" undef, ptr %literal, 0
  %90 = insertvalue %"char[]" %89, i64 4096, 1
  store %"char[]" %90, ptr %buffer121, align 8
  call void @llvm.dbg.declare(metadata ptr %total_copied123, metadata !4905, metadata !DIExpression()), !dbg !4907
  store i64 0, ptr %total_copied123, align 8, !dbg !4907
  br label %loop.body124, !dbg !4909

loop.body124:                                     ; preds = %if.exit219, %if.exit117
  call void @llvm.dbg.declare(metadata ptr %len125, metadata !4910, metadata !DIExpression()), !dbg !4913
  %ptradd127 = getelementptr inbounds i8, ptr %in119, i64 8, !dbg !4914
  %91 = load i64, ptr %ptradd127, align 8, !dbg !4914
  %92 = inttoptr i64 %91 to ptr, !dbg !4914
  %type130 = load ptr, ptr %.cachedtype129, align 8, !dbg !4860
  %93 = icmp eq ptr %92, %type130, !dbg !4860
  br i1 %93, label %cache_hit133, label %cache_miss131, !dbg !4860

cache_miss131:                                    ; preds = %loop.body124
  %ptradd132 = getelementptr inbounds i8, ptr %92, i64 16, !dbg !4860
  %94 = load ptr, ptr %ptradd132, align 8, !dbg !4860
  %95 = call ptr @.dyn_search(ptr %94, ptr @"$sel.read"), !dbg !4860
  store ptr %95, ptr %.inlinecache128, align 8, !dbg !4860
  store ptr %92, ptr %.cachedtype129, align 8, !dbg !4860
  br label %96, !dbg !4860

cache_hit133:                                     ; preds = %loop.body124
  %cache_hit_fn134 = load ptr, ptr %.inlinecache128, align 8, !dbg !4860
  br label %96, !dbg !4860

96:                                               ; preds = %cache_hit133, %cache_miss131
  %fn_phi135 = phi ptr [ %cache_hit_fn134, %cache_hit133 ], [ %95, %cache_miss131 ], !dbg !4860
  %97 = icmp eq ptr %fn_phi135, null, !dbg !4860
  br i1 %97, label %missing_function136, label %match140, !dbg !4860

missing_function136:                              ; preds = %96
  store %"char[]" { ptr @.panic_msg.205, i64 41 }, ptr %indirectarg137, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg138, align 8
  store %"char[]" { ptr @.func.249, i64 7 }, ptr %indirectarg139, align 8
  %98 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %98(ptr align 8 %indirectarg137, ptr align 8 %indirectarg138, ptr align 8 %indirectarg139, i32 174), !dbg !4915
  unreachable, !dbg !4915

match140:                                         ; preds = %96
  %99 = load ptr, ptr %in119, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg142, ptr align 8 %buffer121, i32 16, i1 false)
  %100 = call i64 %fn_phi135(ptr %retparam141, ptr %99, ptr align 8 %indirectarg142), !dbg !4915
  %not_err143 = icmp eq i64 %100, 0, !dbg !4915
  %101 = call i1 @llvm.expect.i1(i1 %not_err143, i1 true), !dbg !4915
  br i1 %101, label %after_check145, label %assign_optional144, !dbg !4915

assign_optional144:                               ; preds = %match140
  store i64 %100, ptr %len.f126, align 8, !dbg !4915
  br label %after_assign146, !dbg !4915

after_check145:                                   ; preds = %match140
  %102 = load i64, ptr %retparam141, align 8, !dbg !4915
  store i64 %102, ptr %len125, align 8, !dbg !4915
  store i64 0, ptr %len.f126, align 8, !dbg !4915
  br label %after_assign146, !dbg !4915

after_assign146:                                  ; preds = %after_check145, %assign_optional144
  call void @llvm.dbg.declare(metadata ptr %err147, metadata !4916, metadata !DIExpression()), !dbg !4917
  br label %testblock148, !dbg !4917

testblock148:                                     ; preds = %after_assign146
  %optval149 = load i64, ptr %len.f126, align 8, !dbg !4918
  %not_err150 = icmp eq i64 %optval149, 0, !dbg !4918
  %103 = call i1 @llvm.expect.i1(i1 %not_err150, i1 true), !dbg !4918
  br i1 %103, label %after_check152, label %assign_optional151, !dbg !4918

assign_optional151:                               ; preds = %testblock148
  store i64 %optval149, ptr %err147, align 8, !dbg !4918
  br label %end_block153, !dbg !4918

after_check152:                                   ; preds = %testblock148
  store i64 0, ptr %err147, align 8, !dbg !4918
  br label %end_block153, !dbg !4918

end_block153:                                     ; preds = %after_check152, %assign_optional151
  %104 = load i64, ptr %err147, align 8, !dbg !4918
  %neq154 = icmp ne i64 %104, 0, !dbg !4918
  br i1 %neq154, label %if.then155, label %if.exit162, !dbg !4918

if.then155:                                       ; preds = %end_block153
  store i64 %104, ptr %switch156, align 8
  br label %switch.entry157

switch.entry157:                                  ; preds = %if.then155
  %105 = load i64, ptr %switch156, align 8
  %eq158 = icmp eq i64 ptrtoint (ptr @"std.io.IoError$EOF" to i64), %105, !dbg !4919
  br i1 %eq158, label %switch.case159, label %next_if160, !dbg !4919

switch.case159:                                   ; preds = %switch.entry157
  %106 = load i64, ptr %total_copied123, align 8, !dbg !4920
  store i64 %106, ptr %blockret122, align 8, !dbg !4920
  br label %expr_block.exit220, !dbg !4920

next_if160:                                       ; preds = %switch.entry157
  br label %switch.default161, !dbg !4920

switch.default161:                                ; preds = %next_if160
  %107 = load i64, ptr %err147, align 8, !dbg !4922
  store i64 %107, ptr %reterr118, align 8, !dbg !4922
  br label %err_retblock221, !dbg !4922

if.exit162:                                       ; preds = %end_block153
  %108 = load i64, ptr %len125, align 8, !dbg !4924
  %not163 = icmp eq i64 %108, 0, !dbg !4924
  br i1 %not163, label %if.then164, label %if.exit165, !dbg !4924

if.then164:                                       ; preds = %if.exit162
  %109 = load i64, ptr %total_copied123, align 8, !dbg !4925
  store i64 %109, ptr %blockret122, align 8, !dbg !4925
  br label %expr_block.exit220, !dbg !4925

if.exit165:                                       ; preds = %if.exit162
  call void @llvm.dbg.declare(metadata ptr %written166, metadata !4926, metadata !DIExpression()), !dbg !4927
  %110 = load %"char[]", ptr %buffer121, align 8, !dbg !4928
  %111 = extractvalue %"char[]" %110, 0, !dbg !4928
  %112 = extractvalue %"char[]" %110, 1, !dbg !4929
  %gt168 = icmp ugt i64 0, %112, !dbg !4929
  %113 = call i1 @llvm.expect.i1(i1 %gt168, i1 false), !dbg !4929
  br i1 %113, label %panic169, label %checkok179, !dbg !4929

checkok179:                                       ; preds = %if.exit165
  %114 = load i64, ptr %len125, align 8, !dbg !4930
  %add180 = add i64 0, %114, !dbg !4930
  %lt181 = icmp ult i64 %112, %add180, !dbg !4930
  %sub182 = sub i64 %add180, 1, !dbg !4930
  %115 = call i1 @llvm.expect.i1(i1 %lt181, i1 false), !dbg !4930
  br i1 %115, label %panic183, label %checkok193, !dbg !4930

checkok193:                                       ; preds = %checkok179
  %size194 = sub i64 %add180, 0, !dbg !4928
  %116 = insertvalue %"char[]" undef, ptr %111, 0, !dbg !4928
  %117 = insertvalue %"char[]" %116, i64 %size194, 1, !dbg !4928
  %ptradd195 = getelementptr inbounds i8, ptr %dst120, i64 8, !dbg !4928
  %118 = load i64, ptr %ptradd195, align 8, !dbg !4928
  %119 = inttoptr i64 %118 to ptr, !dbg !4928
  %type198 = load ptr, ptr %.cachedtype197, align 8, !dbg !4860
  %120 = icmp eq ptr %119, %type198, !dbg !4860
  br i1 %120, label %cache_hit201, label %cache_miss199, !dbg !4860

cache_miss199:                                    ; preds = %checkok193
  %ptradd200 = getelementptr inbounds i8, ptr %119, i64 16, !dbg !4860
  %121 = load ptr, ptr %ptradd200, align 8, !dbg !4860
  %122 = call ptr @.dyn_search(ptr %121, ptr @"$sel.write"), !dbg !4860
  store ptr %122, ptr %.inlinecache196, align 8, !dbg !4860
  store ptr %119, ptr %.cachedtype197, align 8, !dbg !4860
  br label %123, !dbg !4860

cache_hit201:                                     ; preds = %checkok193
  %cache_hit_fn202 = load ptr, ptr %.inlinecache196, align 8, !dbg !4860
  br label %123, !dbg !4860

123:                                              ; preds = %cache_hit201, %cache_miss199
  %fn_phi203 = phi ptr [ %cache_hit_fn202, %cache_hit201 ], [ %122, %cache_miss199 ], !dbg !4860
  %124 = icmp eq ptr %fn_phi203, null, !dbg !4860
  br i1 %124, label %missing_function204, label %match208, !dbg !4860

missing_function204:                              ; preds = %123
  store %"char[]" { ptr @.panic_msg.51, i64 42 }, ptr %indirectarg205, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg206, align 8
  store %"char[]" { ptr @.func.249, i64 7 }, ptr %indirectarg207, align 8
  %125 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %125(ptr align 8 %indirectarg205, ptr align 8 %indirectarg206, ptr align 8 %indirectarg207, i32 181), !dbg !4931
  unreachable, !dbg !4931

match208:                                         ; preds = %123
  %126 = load ptr, ptr %dst120, align 8
  store %"char[]" %117, ptr %indirectarg210, align 8
  %127 = call i64 %fn_phi203(ptr %retparam209, ptr %126, ptr align 8 %indirectarg210), !dbg !4931
  %not_err211 = icmp eq i64 %127, 0, !dbg !4931
  %128 = call i1 @llvm.expect.i1(i1 %not_err211, i1 true), !dbg !4931
  br i1 %128, label %after_check213, label %assign_optional212, !dbg !4931

assign_optional212:                               ; preds = %match208
  store i64 %127, ptr %error_var167, align 8, !dbg !4931
  br label %guard_block214, !dbg !4931

after_check213:                                   ; preds = %match208
  br label %noerr_block215, !dbg !4931

guard_block214:                                   ; preds = %assign_optional212
  %129 = load i64, ptr %error_var167, align 8, !dbg !4931
  store i64 %129, ptr %reterr118, align 8, !dbg !4931
  br label %err_retblock221, !dbg !4931

noerr_block215:                                   ; preds = %after_check213
  %130 = load i64, ptr %retparam209, align 8, !dbg !4931
  store i64 %130, ptr %written166, align 8, !dbg !4931
  %131 = load i64, ptr %total_copied123, align 8, !dbg !4932
  %132 = load i64, ptr %len125, align 8, !dbg !4933
  %add216 = add i64 %131, %132, !dbg !4932
  store i64 %add216, ptr %total_copied123, align 8, !dbg !4932
  %133 = load i64, ptr %written166, align 8, !dbg !4934
  %134 = load i64, ptr %len125, align 8, !dbg !4935
  %neq217 = icmp ne i64 %133, %134, !dbg !4934
  br i1 %neq217, label %if.then218, label %if.exit219, !dbg !4934

if.then218:                                       ; preds = %noerr_block215
  store i64 ptrtoint (ptr @"std.io.IoError$INCOMPLETE_WRITE" to i64), ptr %reterr118, align 8, !dbg !4936
  br label %err_retblock221, !dbg !4936

if.exit219:                                       ; preds = %noerr_block215
  br label %loop.body124, !dbg !4936

expr_block.exit220:                               ; preds = %if.then164, %switch.case159
  %135 = load i64, ptr %blockret122, align 8, !dbg !4936
  store i64 %135, ptr %0, align 8, !dbg !4936
  ret i64 0, !dbg !4936

err_retblock221:                                  ; preds = %if.then218, %guard_block214, %switch.default161
  %136 = load i64, ptr %reterr118, align 8, !dbg !4936
  ret i64 %136, !dbg !4936

panic:                                            ; preds = %if.exit11
  store i64 %26, ptr %taddr, align 8
  %137 = insertvalue %any undef, ptr %taddr, 0
  %138 = insertvalue %any %137, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr12, align 8
  %139 = insertvalue %any undef, ptr %taddr12, 0
  %140 = insertvalue %any %139, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg13, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg14, align 8
  store %"char[]" { ptr @.func.249, i64 7 }, ptr %indirectarg15, align 8
  store %any %138, ptr %varargslots, align 16
  %ptradd16 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %140, ptr %ptradd16, align 16
  %141 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %141, i64 2, 1
  store %"any[]" %"$$temp", ptr %indirectarg17, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg13, ptr align 8 %indirectarg14, ptr align 8 %indirectarg15, i32 181, ptr align 8 %indirectarg17), !dbg !4890
  unreachable, !dbg !4890

panic18:                                          ; preds = %checkok
  store i64 %sub, ptr %taddr19, align 8
  %142 = insertvalue %any undef, ptr %taddr19, 0
  %143 = insertvalue %any %142, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %26, ptr %taddr20, align 8
  %144 = insertvalue %any undef, ptr %taddr20, 0
  %145 = insertvalue %any %144, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg21, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg22, align 8
  store %"char[]" { ptr @.func.249, i64 7 }, ptr %indirectarg23, align 8
  store %any %143, ptr %varargslots24, align 16
  %ptradd25 = getelementptr inbounds i8, ptr %varargslots24, i64 16
  store %any %145, ptr %ptradd25, align 16
  %146 = insertvalue %"any[]" undef, ptr %varargslots24, 0
  %"$$temp26" = insertvalue %"any[]" %146, i64 2, 1
  store %"any[]" %"$$temp26", ptr %indirectarg27, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg21, ptr align 8 %indirectarg22, ptr align 8 %indirectarg23, i32 181, ptr align 8 %indirectarg27), !dbg !4890
  unreachable, !dbg !4890

panic169:                                         ; preds = %if.exit165
  store i64 %112, ptr %taddr170, align 8
  %147 = insertvalue %any undef, ptr %taddr170, 0
  %148 = insertvalue %any %147, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 0, ptr %taddr171, align 8
  %149 = insertvalue %any undef, ptr %taddr171, 0
  %150 = insertvalue %any %149, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.182, i64 61 }, ptr %indirectarg172, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg173, align 8
  store %"char[]" { ptr @.func.249, i64 7 }, ptr %indirectarg174, align 8
  store %any %148, ptr %varargslots175, align 16
  %ptradd176 = getelementptr inbounds i8, ptr %varargslots175, i64 16
  store %any %150, ptr %ptradd176, align 16
  %151 = insertvalue %"any[]" undef, ptr %varargslots175, 0
  %"$$temp177" = insertvalue %"any[]" %151, i64 2, 1
  store %"any[]" %"$$temp177", ptr %indirectarg178, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg172, ptr align 8 %indirectarg173, ptr align 8 %indirectarg174, i32 181, ptr align 8 %indirectarg178), !dbg !4928
  unreachable, !dbg !4928

panic183:                                         ; preds = %checkok179
  store i64 %sub182, ptr %taddr184, align 8
  %152 = insertvalue %any undef, ptr %taddr184, 0
  %153 = insertvalue %any %152, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store i64 %112, ptr %taddr185, align 8
  %154 = insertvalue %any undef, ptr %taddr185, 0
  %155 = insertvalue %any %154, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %"char[]" { ptr @.panic_msg.50, i64 60 }, ptr %indirectarg186, align 8
  store %"char[]" { ptr @.file.52, i64 9 }, ptr %indirectarg187, align 8
  store %"char[]" { ptr @.func.249, i64 7 }, ptr %indirectarg188, align 8
  store %any %153, ptr %varargslots189, align 16
  %ptradd190 = getelementptr inbounds i8, ptr %varargslots189, i64 16
  store %any %155, ptr %ptradd190, align 16
  %156 = insertvalue %"any[]" undef, ptr %varargslots189, 0
  %"$$temp191" = insertvalue %"any[]" %156, i64 2, 1
  store %"any[]" %"$$temp191", ptr %indirectarg192, align 8
  call void @std.core.builtin.panicf(ptr align 8 %indirectarg186, ptr align 8 %indirectarg187, ptr align 8 %indirectarg188, i32 181, ptr align 8 %indirectarg192), !dbg !4928
  unreachable, !dbg !4928
}

; Function Attrs: nounwind ssp uwtable
define weak void @std.io.wrap_bytes(ptr noalias sret(%ByteReader) align 8 %0, ptr align 8 %1) #0 comdat !dbg !4937 {
entry:
  %literal = alloca %ByteReader, align 8
  call void @llvm.dbg.declare(metadata ptr %1, metadata !4940, metadata !DIExpression()), !dbg !4941
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %literal, ptr align 8 %1, i32 16, i1 false), !dbg !4942
  %ptradd = getelementptr inbounds i8, ptr %literal, i64 16, !dbg !4942
  store i64 0, ptr %ptradd, align 8, !dbg !4943
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %literal, i32 24, i1 false), !dbg !4943
  ret void, !dbg !4943
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #4

define weak ptr @.dyn_search(ptr %0, ptr %1) unnamed_addr comdat {
entry:
  br label %check

check:                                            ; preds = %no_match, %entry
  %2 = phi ptr [ %0, %entry ], [ %9, %no_match ]
  %3 = icmp eq ptr %2, null
  br i1 %3, label %missing_function, label %compare

missing_function:                                 ; preds = %check
  ret ptr null

compare:                                          ; preds = %check
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %match, label %no_match

match:                                            ; preds = %compare
  %7 = load ptr, ptr %2, align 8
  ret ptr %7

no_match:                                         ; preds = %compare
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %9 = load ptr, ptr %8, align 8
  br label %check
}

; Function Attrs: nounwind ssp uwtable
declare void @std.core.builtin.panicf(ptr align 8, ptr align 8, ptr align 8, i32, ptr align 8) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.bswap.i32(i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.bswap.i64(i64) #2

; Function Attrs: nounwind ssp uwtable
declare void @std.core.mem.allocator.OnStackAllocator.init(ptr, ptr align 8, ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare void @std.core.mem.allocator.OnStackAllocator.free(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @std.core.types.TypeKind.is_int(i8) #0

; Function Attrs: nounwind ssp uwtable
declare void @std.core.string.ZString.str_view(ptr noalias sret(%"char[]") align 8, ptr) #0

; Function Attrs: nounwind ssp uwtable
declare void @std.core.dstring.DString.str_view(ptr noalias sret(%"char[]") align 8, ptr) #0

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @std.ascii.char.is_digit(i8) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @std.core.string.conv.utf8_codepoints(ptr align 8) #0

; Function Attrs: nounwind ssp uwtable
declare double @std.math._frexp(double, ptr) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #2

; Function Attrs: nounwind ssp uwtable
declare i32 @putchar(i32) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @std.io.File.flush(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @std.io.File.write_byte(ptr, i8) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @std.io.file.from_handle(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare ptr @__acrt_iob_func(i32) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
declare void @std.core.mem.allocator.init_default_temp_allocators() #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
declare i64 @std.core.String.index_of(ptr, ptr align 8, ptr align 8) #0

define internal void @.c3_dynamic_register() align 8 {
entry:
  %next_val = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ReadBuffer.close", i32 0, i32 2), align 8
  %0 = icmp eq ptr %next_val, inttoptr (i64 -1 to ptr)
  br i1 %0, label %dtable_check, label %dtable_skip

dtable_check:                                     ; preds = %dtable_check, %entry
  %dtable_ref = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ReadBuffer", i32 0, i32 2), %entry ], [ %next_dtable_ref, %dtable_check ]
  %dtable_ptr = load ptr, ptr %dtable_ref, align 8
  %1 = icmp eq ptr %dtable_ptr, null
  %next_dtable_ref = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr, i32 0, i32 2
  br i1 %1, label %dtable_found, label %dtable_check

dtable_found:                                     ; preds = %dtable_check
  store ptr @"$ct.dyn.std.io.ReadBuffer.close", ptr %dtable_ref, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ReadBuffer.close", i32 0, i32 2), align 8
  br label %dtable_skip

dtable_skip:                                      ; preds = %dtable_found, %entry
  %next_val1 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ReadBuffer.read", i32 0, i32 2), align 8
  %2 = icmp eq ptr %next_val1, inttoptr (i64 -1 to ptr)
  br i1 %2, label %dtable_check2, label %dtable_skip7

dtable_check2:                                    ; preds = %dtable_check2, %dtable_skip
  %dtable_ref3 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ReadBuffer", i32 0, i32 2), %dtable_skip ], [ %next_dtable_ref5, %dtable_check2 ]
  %dtable_ptr4 = load ptr, ptr %dtable_ref3, align 8
  %3 = icmp eq ptr %dtable_ptr4, null
  %next_dtable_ref5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr4, i32 0, i32 2
  br i1 %3, label %dtable_found6, label %dtable_check2

dtable_found6:                                    ; preds = %dtable_check2
  store ptr @"$ct.dyn.std.io.ReadBuffer.read", ptr %dtable_ref3, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ReadBuffer.read", i32 0, i32 2), align 8
  br label %dtable_skip7

dtable_skip7:                                     ; preds = %dtable_found6, %dtable_skip
  %next_val8 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ReadBuffer.read_byte", i32 0, i32 2), align 8
  %4 = icmp eq ptr %next_val8, inttoptr (i64 -1 to ptr)
  br i1 %4, label %dtable_check9, label %dtable_skip14

dtable_check9:                                    ; preds = %dtable_check9, %dtable_skip7
  %dtable_ref10 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ReadBuffer", i32 0, i32 2), %dtable_skip7 ], [ %next_dtable_ref12, %dtable_check9 ]
  %dtable_ptr11 = load ptr, ptr %dtable_ref10, align 8
  %5 = icmp eq ptr %dtable_ptr11, null
  %next_dtable_ref12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr11, i32 0, i32 2
  br i1 %5, label %dtable_found13, label %dtable_check9

dtable_found13:                                   ; preds = %dtable_check9
  store ptr @"$ct.dyn.std.io.ReadBuffer.read_byte", ptr %dtable_ref10, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ReadBuffer.read_byte", i32 0, i32 2), align 8
  br label %dtable_skip14

dtable_skip14:                                    ; preds = %dtable_found13, %dtable_skip7
  %next_val15 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.WriteBuffer.close", i32 0, i32 2), align 8
  %6 = icmp eq ptr %next_val15, inttoptr (i64 -1 to ptr)
  br i1 %6, label %dtable_check16, label %dtable_skip21

dtable_check16:                                   ; preds = %dtable_check16, %dtable_skip14
  %dtable_ref17 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.WriteBuffer", i32 0, i32 2), %dtable_skip14 ], [ %next_dtable_ref19, %dtable_check16 ]
  %dtable_ptr18 = load ptr, ptr %dtable_ref17, align 8
  %7 = icmp eq ptr %dtable_ptr18, null
  %next_dtable_ref19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr18, i32 0, i32 2
  br i1 %7, label %dtable_found20, label %dtable_check16

dtable_found20:                                   ; preds = %dtable_check16
  store ptr @"$ct.dyn.std.io.WriteBuffer.close", ptr %dtable_ref17, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.WriteBuffer.close", i32 0, i32 2), align 8
  br label %dtable_skip21

dtable_skip21:                                    ; preds = %dtable_found20, %dtable_skip14
  %next_val22 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.WriteBuffer.flush", i32 0, i32 2), align 8
  %8 = icmp eq ptr %next_val22, inttoptr (i64 -1 to ptr)
  br i1 %8, label %dtable_check23, label %dtable_skip28

dtable_check23:                                   ; preds = %dtable_check23, %dtable_skip21
  %dtable_ref24 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.WriteBuffer", i32 0, i32 2), %dtable_skip21 ], [ %next_dtable_ref26, %dtable_check23 ]
  %dtable_ptr25 = load ptr, ptr %dtable_ref24, align 8
  %9 = icmp eq ptr %dtable_ptr25, null
  %next_dtable_ref26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr25, i32 0, i32 2
  br i1 %9, label %dtable_found27, label %dtable_check23

dtable_found27:                                   ; preds = %dtable_check23
  store ptr @"$ct.dyn.std.io.WriteBuffer.flush", ptr %dtable_ref24, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.WriteBuffer.flush", i32 0, i32 2), align 8
  br label %dtable_skip28

dtable_skip28:                                    ; preds = %dtable_found27, %dtable_skip21
  %next_val29 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.WriteBuffer.write", i32 0, i32 2), align 8
  %10 = icmp eq ptr %next_val29, inttoptr (i64 -1 to ptr)
  br i1 %10, label %dtable_check30, label %dtable_skip35

dtable_check30:                                   ; preds = %dtable_check30, %dtable_skip28
  %dtable_ref31 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.WriteBuffer", i32 0, i32 2), %dtable_skip28 ], [ %next_dtable_ref33, %dtable_check30 ]
  %dtable_ptr32 = load ptr, ptr %dtable_ref31, align 8
  %11 = icmp eq ptr %dtable_ptr32, null
  %next_dtable_ref33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr32, i32 0, i32 2
  br i1 %11, label %dtable_found34, label %dtable_check30

dtable_found34:                                   ; preds = %dtable_check30
  store ptr @"$ct.dyn.std.io.WriteBuffer.write", ptr %dtable_ref31, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.WriteBuffer.write", i32 0, i32 2), align 8
  br label %dtable_skip35

dtable_skip35:                                    ; preds = %dtable_found34, %dtable_skip28
  %next_val36 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.WriteBuffer.write_byte", i32 0, i32 2), align 8
  %12 = icmp eq ptr %next_val36, inttoptr (i64 -1 to ptr)
  br i1 %12, label %dtable_check37, label %dtable_skip42

dtable_check37:                                   ; preds = %dtable_check37, %dtable_skip35
  %dtable_ref38 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.WriteBuffer", i32 0, i32 2), %dtable_skip35 ], [ %next_dtable_ref40, %dtable_check37 ]
  %dtable_ptr39 = load ptr, ptr %dtable_ref38, align 8
  %13 = icmp eq ptr %dtable_ptr39, null
  %next_dtable_ref40 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr39, i32 0, i32 2
  br i1 %13, label %dtable_found41, label %dtable_check37

dtable_found41:                                   ; preds = %dtable_check37
  store ptr @"$ct.dyn.std.io.WriteBuffer.write_byte", ptr %dtable_ref38, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.WriteBuffer.write_byte", i32 0, i32 2), align 8
  br label %dtable_skip42

dtable_skip42:                                    ; preds = %dtable_found41, %dtable_skip35
  %next_val43 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.write", i32 0, i32 2), align 8
  %14 = icmp eq ptr %next_val43, inttoptr (i64 -1 to ptr)
  br i1 %14, label %dtable_check44, label %dtable_skip49

dtable_check44:                                   ; preds = %dtable_check44, %dtable_skip42
  %dtable_ref45 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteBuffer", i32 0, i32 2), %dtable_skip42 ], [ %next_dtable_ref47, %dtable_check44 ]
  %dtable_ptr46 = load ptr, ptr %dtable_ref45, align 8
  %15 = icmp eq ptr %dtable_ptr46, null
  %next_dtable_ref47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr46, i32 0, i32 2
  br i1 %15, label %dtable_found48, label %dtable_check44

dtable_found48:                                   ; preds = %dtable_check44
  store ptr @"$ct.dyn.std.io.ByteBuffer.write", ptr %dtable_ref45, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.write", i32 0, i32 2), align 8
  br label %dtable_skip49

dtable_skip49:                                    ; preds = %dtable_found48, %dtable_skip42
  %next_val50 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.write_byte", i32 0, i32 2), align 8
  %16 = icmp eq ptr %next_val50, inttoptr (i64 -1 to ptr)
  br i1 %16, label %dtable_check51, label %dtable_skip56

dtable_check51:                                   ; preds = %dtable_check51, %dtable_skip49
  %dtable_ref52 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteBuffer", i32 0, i32 2), %dtable_skip49 ], [ %next_dtable_ref54, %dtable_check51 ]
  %dtable_ptr53 = load ptr, ptr %dtable_ref52, align 8
  %17 = icmp eq ptr %dtable_ptr53, null
  %next_dtable_ref54 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr53, i32 0, i32 2
  br i1 %17, label %dtable_found55, label %dtable_check51

dtable_found55:                                   ; preds = %dtable_check51
  store ptr @"$ct.dyn.std.io.ByteBuffer.write_byte", ptr %dtable_ref52, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.write_byte", i32 0, i32 2), align 8
  br label %dtable_skip56

dtable_skip56:                                    ; preds = %dtable_found55, %dtable_skip49
  %next_val57 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.read", i32 0, i32 2), align 8
  %18 = icmp eq ptr %next_val57, inttoptr (i64 -1 to ptr)
  br i1 %18, label %dtable_check58, label %dtable_skip63

dtable_check58:                                   ; preds = %dtable_check58, %dtable_skip56
  %dtable_ref59 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteBuffer", i32 0, i32 2), %dtable_skip56 ], [ %next_dtable_ref61, %dtable_check58 ]
  %dtable_ptr60 = load ptr, ptr %dtable_ref59, align 8
  %19 = icmp eq ptr %dtable_ptr60, null
  %next_dtable_ref61 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr60, i32 0, i32 2
  br i1 %19, label %dtable_found62, label %dtable_check58

dtable_found62:                                   ; preds = %dtable_check58
  store ptr @"$ct.dyn.std.io.ByteBuffer.read", ptr %dtable_ref59, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.read", i32 0, i32 2), align 8
  br label %dtable_skip63

dtable_skip63:                                    ; preds = %dtable_found62, %dtable_skip56
  %next_val64 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.read_byte", i32 0, i32 2), align 8
  %20 = icmp eq ptr %next_val64, inttoptr (i64 -1 to ptr)
  br i1 %20, label %dtable_check65, label %dtable_skip70

dtable_check65:                                   ; preds = %dtable_check65, %dtable_skip63
  %dtable_ref66 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteBuffer", i32 0, i32 2), %dtable_skip63 ], [ %next_dtable_ref68, %dtable_check65 ]
  %dtable_ptr67 = load ptr, ptr %dtable_ref66, align 8
  %21 = icmp eq ptr %dtable_ptr67, null
  %next_dtable_ref68 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr67, i32 0, i32 2
  br i1 %21, label %dtable_found69, label %dtable_check65

dtable_found69:                                   ; preds = %dtable_check65
  store ptr @"$ct.dyn.std.io.ByteBuffer.read_byte", ptr %dtable_ref66, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.read_byte", i32 0, i32 2), align 8
  br label %dtable_skip70

dtable_skip70:                                    ; preds = %dtable_found69, %dtable_skip63
  %next_val71 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.pushback_byte", i32 0, i32 2), align 8
  %22 = icmp eq ptr %next_val71, inttoptr (i64 -1 to ptr)
  br i1 %22, label %dtable_check72, label %dtable_skip77

dtable_check72:                                   ; preds = %dtable_check72, %dtable_skip70
  %dtable_ref73 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteBuffer", i32 0, i32 2), %dtable_skip70 ], [ %next_dtable_ref75, %dtable_check72 ]
  %dtable_ptr74 = load ptr, ptr %dtable_ref73, align 8
  %23 = icmp eq ptr %dtable_ptr74, null
  %next_dtable_ref75 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr74, i32 0, i32 2
  br i1 %23, label %dtable_found76, label %dtable_check72

dtable_found76:                                   ; preds = %dtable_check72
  store ptr @"$ct.dyn.std.io.ByteBuffer.pushback_byte", ptr %dtable_ref73, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.pushback_byte", i32 0, i32 2), align 8
  br label %dtable_skip77

dtable_skip77:                                    ; preds = %dtable_found76, %dtable_skip70
  %next_val78 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.seek", i32 0, i32 2), align 8
  %24 = icmp eq ptr %next_val78, inttoptr (i64 -1 to ptr)
  br i1 %24, label %dtable_check79, label %dtable_skip84

dtable_check79:                                   ; preds = %dtable_check79, %dtable_skip77
  %dtable_ref80 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteBuffer", i32 0, i32 2), %dtable_skip77 ], [ %next_dtable_ref82, %dtable_check79 ]
  %dtable_ptr81 = load ptr, ptr %dtable_ref80, align 8
  %25 = icmp eq ptr %dtable_ptr81, null
  %next_dtable_ref82 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr81, i32 0, i32 2
  br i1 %25, label %dtable_found83, label %dtable_check79

dtable_found83:                                   ; preds = %dtable_check79
  store ptr @"$ct.dyn.std.io.ByteBuffer.seek", ptr %dtable_ref80, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.seek", i32 0, i32 2), align 8
  br label %dtable_skip84

dtable_skip84:                                    ; preds = %dtable_found83, %dtable_skip77
  %next_val85 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.available", i32 0, i32 2), align 8
  %26 = icmp eq ptr %next_val85, inttoptr (i64 -1 to ptr)
  br i1 %26, label %dtable_check86, label %dtable_skip91

dtable_check86:                                   ; preds = %dtable_check86, %dtable_skip84
  %dtable_ref87 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteBuffer", i32 0, i32 2), %dtable_skip84 ], [ %next_dtable_ref89, %dtable_check86 ]
  %dtable_ptr88 = load ptr, ptr %dtable_ref87, align 8
  %27 = icmp eq ptr %dtable_ptr88, null
  %next_dtable_ref89 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr88, i32 0, i32 2
  br i1 %27, label %dtable_found90, label %dtable_check86

dtable_found90:                                   ; preds = %dtable_check86
  store ptr @"$ct.dyn.std.io.ByteBuffer.available", ptr %dtable_ref87, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteBuffer.available", i32 0, i32 2), align 8
  br label %dtable_skip91

dtable_skip91:                                    ; preds = %dtable_found90, %dtable_skip84
  %next_val92 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.len", i32 0, i32 2), align 8
  %28 = icmp eq ptr %next_val92, inttoptr (i64 -1 to ptr)
  br i1 %28, label %dtable_check93, label %dtable_skip98

dtable_check93:                                   ; preds = %dtable_check93, %dtable_skip91
  %dtable_ref94 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteReader", i32 0, i32 2), %dtable_skip91 ], [ %next_dtable_ref96, %dtable_check93 ]
  %dtable_ptr95 = load ptr, ptr %dtable_ref94, align 8
  %29 = icmp eq ptr %dtable_ptr95, null
  %next_dtable_ref96 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr95, i32 0, i32 2
  br i1 %29, label %dtable_found97, label %dtable_check93

dtable_found97:                                   ; preds = %dtable_check93
  store ptr @"$ct.dyn.std.io.ByteReader.len", ptr %dtable_ref94, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.len", i32 0, i32 2), align 8
  br label %dtable_skip98

dtable_skip98:                                    ; preds = %dtable_found97, %dtable_skip91
  %next_val99 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.read", i32 0, i32 2), align 8
  %30 = icmp eq ptr %next_val99, inttoptr (i64 -1 to ptr)
  br i1 %30, label %dtable_check100, label %dtable_skip105

dtable_check100:                                  ; preds = %dtable_check100, %dtable_skip98
  %dtable_ref101 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteReader", i32 0, i32 2), %dtable_skip98 ], [ %next_dtable_ref103, %dtable_check100 ]
  %dtable_ptr102 = load ptr, ptr %dtable_ref101, align 8
  %31 = icmp eq ptr %dtable_ptr102, null
  %next_dtable_ref103 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr102, i32 0, i32 2
  br i1 %31, label %dtable_found104, label %dtable_check100

dtable_found104:                                  ; preds = %dtable_check100
  store ptr @"$ct.dyn.std.io.ByteReader.read", ptr %dtable_ref101, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.read", i32 0, i32 2), align 8
  br label %dtable_skip105

dtable_skip105:                                   ; preds = %dtable_found104, %dtable_skip98
  %next_val106 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.read_byte", i32 0, i32 2), align 8
  %32 = icmp eq ptr %next_val106, inttoptr (i64 -1 to ptr)
  br i1 %32, label %dtable_check107, label %dtable_skip112

dtable_check107:                                  ; preds = %dtable_check107, %dtable_skip105
  %dtable_ref108 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteReader", i32 0, i32 2), %dtable_skip105 ], [ %next_dtable_ref110, %dtable_check107 ]
  %dtable_ptr109 = load ptr, ptr %dtable_ref108, align 8
  %33 = icmp eq ptr %dtable_ptr109, null
  %next_dtable_ref110 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr109, i32 0, i32 2
  br i1 %33, label %dtable_found111, label %dtable_check107

dtable_found111:                                  ; preds = %dtable_check107
  store ptr @"$ct.dyn.std.io.ByteReader.read_byte", ptr %dtable_ref108, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.read_byte", i32 0, i32 2), align 8
  br label %dtable_skip112

dtable_skip112:                                   ; preds = %dtable_found111, %dtable_skip105
  %next_val113 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.pushback_byte", i32 0, i32 2), align 8
  %34 = icmp eq ptr %next_val113, inttoptr (i64 -1 to ptr)
  br i1 %34, label %dtable_check114, label %dtable_skip119

dtable_check114:                                  ; preds = %dtable_check114, %dtable_skip112
  %dtable_ref115 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteReader", i32 0, i32 2), %dtable_skip112 ], [ %next_dtable_ref117, %dtable_check114 ]
  %dtable_ptr116 = load ptr, ptr %dtable_ref115, align 8
  %35 = icmp eq ptr %dtable_ptr116, null
  %next_dtable_ref117 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr116, i32 0, i32 2
  br i1 %35, label %dtable_found118, label %dtable_check114

dtable_found118:                                  ; preds = %dtable_check114
  store ptr @"$ct.dyn.std.io.ByteReader.pushback_byte", ptr %dtable_ref115, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.pushback_byte", i32 0, i32 2), align 8
  br label %dtable_skip119

dtable_skip119:                                   ; preds = %dtable_found118, %dtable_skip112
  %next_val120 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.seek", i32 0, i32 2), align 8
  %36 = icmp eq ptr %next_val120, inttoptr (i64 -1 to ptr)
  br i1 %36, label %dtable_check121, label %dtable_skip126

dtable_check121:                                  ; preds = %dtable_check121, %dtable_skip119
  %dtable_ref122 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteReader", i32 0, i32 2), %dtable_skip119 ], [ %next_dtable_ref124, %dtable_check121 ]
  %dtable_ptr123 = load ptr, ptr %dtable_ref122, align 8
  %37 = icmp eq ptr %dtable_ptr123, null
  %next_dtable_ref124 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr123, i32 0, i32 2
  br i1 %37, label %dtable_found125, label %dtable_check121

dtable_found125:                                  ; preds = %dtable_check121
  store ptr @"$ct.dyn.std.io.ByteReader.seek", ptr %dtable_ref122, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.seek", i32 0, i32 2), align 8
  br label %dtable_skip126

dtable_skip126:                                   ; preds = %dtable_found125, %dtable_skip119
  %next_val127 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.write_to", i32 0, i32 2), align 8
  %38 = icmp eq ptr %next_val127, inttoptr (i64 -1 to ptr)
  br i1 %38, label %dtable_check128, label %dtable_skip133

dtable_check128:                                  ; preds = %dtable_check128, %dtable_skip126
  %dtable_ref129 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteReader", i32 0, i32 2), %dtable_skip126 ], [ %next_dtable_ref131, %dtable_check128 ]
  %dtable_ptr130 = load ptr, ptr %dtable_ref129, align 8
  %39 = icmp eq ptr %dtable_ptr130, null
  %next_dtable_ref131 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr130, i32 0, i32 2
  br i1 %39, label %dtable_found132, label %dtable_check128

dtable_found132:                                  ; preds = %dtable_check128
  store ptr @"$ct.dyn.std.io.ByteReader.write_to", ptr %dtable_ref129, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.write_to", i32 0, i32 2), align 8
  br label %dtable_skip133

dtable_skip133:                                   ; preds = %dtable_found132, %dtable_skip126
  %next_val134 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.available", i32 0, i32 2), align 8
  %40 = icmp eq ptr %next_val134, inttoptr (i64 -1 to ptr)
  br i1 %40, label %dtable_check135, label %dtable_skip140

dtable_check135:                                  ; preds = %dtable_check135, %dtable_skip133
  %dtable_ref136 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteReader", i32 0, i32 2), %dtable_skip133 ], [ %next_dtable_ref138, %dtable_check135 ]
  %dtable_ptr137 = load ptr, ptr %dtable_ref136, align 8
  %41 = icmp eq ptr %dtable_ptr137, null
  %next_dtable_ref138 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr137, i32 0, i32 2
  br i1 %41, label %dtable_found139, label %dtable_check135

dtable_found139:                                  ; preds = %dtable_check135
  store ptr @"$ct.dyn.std.io.ByteReader.available", ptr %dtable_ref136, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteReader.available", i32 0, i32 2), align 8
  br label %dtable_skip140

dtable_skip140:                                   ; preds = %dtable_found139, %dtable_skip133
  %next_val141 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteWriter.destroy", i32 0, i32 2), align 8
  %42 = icmp eq ptr %next_val141, inttoptr (i64 -1 to ptr)
  br i1 %42, label %dtable_check142, label %dtable_skip147

dtable_check142:                                  ; preds = %dtable_check142, %dtable_skip140
  %dtable_ref143 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteWriter", i32 0, i32 2), %dtable_skip140 ], [ %next_dtable_ref145, %dtable_check142 ]
  %dtable_ptr144 = load ptr, ptr %dtable_ref143, align 8
  %43 = icmp eq ptr %dtable_ptr144, null
  %next_dtable_ref145 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr144, i32 0, i32 2
  br i1 %43, label %dtable_found146, label %dtable_check142

dtable_found146:                                  ; preds = %dtable_check142
  store ptr @"$ct.dyn.std.io.ByteWriter.destroy", ptr %dtable_ref143, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteWriter.destroy", i32 0, i32 2), align 8
  br label %dtable_skip147

dtable_skip147:                                   ; preds = %dtable_found146, %dtable_skip140
  %next_val148 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteWriter.write", i32 0, i32 2), align 8
  %44 = icmp eq ptr %next_val148, inttoptr (i64 -1 to ptr)
  br i1 %44, label %dtable_check149, label %dtable_skip154

dtable_check149:                                  ; preds = %dtable_check149, %dtable_skip147
  %dtable_ref150 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteWriter", i32 0, i32 2), %dtable_skip147 ], [ %next_dtable_ref152, %dtable_check149 ]
  %dtable_ptr151 = load ptr, ptr %dtable_ref150, align 8
  %45 = icmp eq ptr %dtable_ptr151, null
  %next_dtable_ref152 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr151, i32 0, i32 2
  br i1 %45, label %dtable_found153, label %dtable_check149

dtable_found153:                                  ; preds = %dtable_check149
  store ptr @"$ct.dyn.std.io.ByteWriter.write", ptr %dtable_ref150, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteWriter.write", i32 0, i32 2), align 8
  br label %dtable_skip154

dtable_skip154:                                   ; preds = %dtable_found153, %dtable_skip147
  %next_val155 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteWriter.write_byte", i32 0, i32 2), align 8
  %46 = icmp eq ptr %next_val155, inttoptr (i64 -1 to ptr)
  br i1 %46, label %dtable_check156, label %dtable_skip161

dtable_check156:                                  ; preds = %dtable_check156, %dtable_skip154
  %dtable_ref157 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteWriter", i32 0, i32 2), %dtable_skip154 ], [ %next_dtable_ref159, %dtable_check156 ]
  %dtable_ptr158 = load ptr, ptr %dtable_ref157, align 8
  %47 = icmp eq ptr %dtable_ptr158, null
  %next_dtable_ref159 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr158, i32 0, i32 2
  br i1 %47, label %dtable_found160, label %dtable_check156

dtable_found160:                                  ; preds = %dtable_check156
  store ptr @"$ct.dyn.std.io.ByteWriter.write_byte", ptr %dtable_ref157, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteWriter.write_byte", i32 0, i32 2), align 8
  br label %dtable_skip161

dtable_skip161:                                   ; preds = %dtable_found160, %dtable_skip154
  %next_val162 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteWriter.read_from", i32 0, i32 2), align 8
  %48 = icmp eq ptr %next_val162, inttoptr (i64 -1 to ptr)
  br i1 %48, label %dtable_check163, label %dtable_skip168

dtable_check163:                                  ; preds = %dtable_check163, %dtable_skip161
  %dtable_ref164 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.ByteWriter", i32 0, i32 2), %dtable_skip161 ], [ %next_dtable_ref166, %dtable_check163 ]
  %dtable_ptr165 = load ptr, ptr %dtable_ref164, align 8
  %49 = icmp eq ptr %dtable_ptr165, null
  %next_dtable_ref166 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr165, i32 0, i32 2
  br i1 %49, label %dtable_found167, label %dtable_check163

dtable_found167:                                  ; preds = %dtable_check163
  store ptr @"$ct.dyn.std.io.ByteWriter.read_from", ptr %dtable_ref164, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.ByteWriter.read_from", i32 0, i32 2), align 8
  br label %dtable_skip168

dtable_skip168:                                   ; preds = %dtable_found167, %dtable_skip161
  %next_val169 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.LimitReader.close", i32 0, i32 2), align 8
  %50 = icmp eq ptr %next_val169, inttoptr (i64 -1 to ptr)
  br i1 %50, label %dtable_check170, label %dtable_skip175

dtable_check170:                                  ; preds = %dtable_check170, %dtable_skip168
  %dtable_ref171 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.LimitReader", i32 0, i32 2), %dtable_skip168 ], [ %next_dtable_ref173, %dtable_check170 ]
  %dtable_ptr172 = load ptr, ptr %dtable_ref171, align 8
  %51 = icmp eq ptr %dtable_ptr172, null
  %next_dtable_ref173 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr172, i32 0, i32 2
  br i1 %51, label %dtable_found174, label %dtable_check170

dtable_found174:                                  ; preds = %dtable_check170
  store ptr @"$ct.dyn.std.io.LimitReader.close", ptr %dtable_ref171, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.LimitReader.close", i32 0, i32 2), align 8
  br label %dtable_skip175

dtable_skip175:                                   ; preds = %dtable_found174, %dtable_skip168
  %next_val176 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.LimitReader.read", i32 0, i32 2), align 8
  %52 = icmp eq ptr %next_val176, inttoptr (i64 -1 to ptr)
  br i1 %52, label %dtable_check177, label %dtable_skip182

dtable_check177:                                  ; preds = %dtable_check177, %dtable_skip175
  %dtable_ref178 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.LimitReader", i32 0, i32 2), %dtable_skip175 ], [ %next_dtable_ref180, %dtable_check177 ]
  %dtable_ptr179 = load ptr, ptr %dtable_ref178, align 8
  %53 = icmp eq ptr %dtable_ptr179, null
  %next_dtable_ref180 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr179, i32 0, i32 2
  br i1 %53, label %dtable_found181, label %dtable_check177

dtable_found181:                                  ; preds = %dtable_check177
  store ptr @"$ct.dyn.std.io.LimitReader.read", ptr %dtable_ref178, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.LimitReader.read", i32 0, i32 2), align 8
  br label %dtable_skip182

dtable_skip182:                                   ; preds = %dtable_found181, %dtable_skip175
  %next_val183 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.LimitReader.read_byte", i32 0, i32 2), align 8
  %54 = icmp eq ptr %next_val183, inttoptr (i64 -1 to ptr)
  br i1 %54, label %dtable_check184, label %dtable_skip189

dtable_check184:                                  ; preds = %dtable_check184, %dtable_skip182
  %dtable_ref185 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.LimitReader", i32 0, i32 2), %dtable_skip182 ], [ %next_dtable_ref187, %dtable_check184 ]
  %dtable_ptr186 = load ptr, ptr %dtable_ref185, align 8
  %55 = icmp eq ptr %dtable_ptr186, null
  %next_dtable_ref187 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr186, i32 0, i32 2
  br i1 %55, label %dtable_found188, label %dtable_check184

dtable_found188:                                  ; preds = %dtable_check184
  store ptr @"$ct.dyn.std.io.LimitReader.read_byte", ptr %dtable_ref185, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.LimitReader.read_byte", i32 0, i32 2), align 8
  br label %dtable_skip189

dtable_skip189:                                   ; preds = %dtable_found188, %dtable_skip182
  %next_val190 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.LimitReader.available", i32 0, i32 2), align 8
  %56 = icmp eq ptr %next_val190, inttoptr (i64 -1 to ptr)
  br i1 %56, label %dtable_check191, label %dtable_skip196

dtable_check191:                                  ; preds = %dtable_check191, %dtable_skip189
  %dtable_ref192 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.LimitReader", i32 0, i32 2), %dtable_skip189 ], [ %next_dtable_ref194, %dtable_check191 ]
  %dtable_ptr193 = load ptr, ptr %dtable_ref192, align 8
  %57 = icmp eq ptr %dtable_ptr193, null
  %next_dtable_ref194 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr193, i32 0, i32 2
  br i1 %57, label %dtable_found195, label %dtable_check191

dtable_found195:                                  ; preds = %dtable_check191
  store ptr @"$ct.dyn.std.io.LimitReader.available", ptr %dtable_ref192, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.LimitReader.available", i32 0, i32 2), align 8
  br label %dtable_skip196

dtable_skip196:                                   ; preds = %dtable_found195, %dtable_skip189
  %next_val197 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.Scanner.flush", i32 0, i32 2), align 8
  %58 = icmp eq ptr %next_val197, inttoptr (i64 -1 to ptr)
  br i1 %58, label %dtable_check198, label %dtable_skip203

dtable_check198:                                  ; preds = %dtable_check198, %dtable_skip196
  %dtable_ref199 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.Scanner", i32 0, i32 2), %dtable_skip196 ], [ %next_dtable_ref201, %dtable_check198 ]
  %dtable_ptr200 = load ptr, ptr %dtable_ref199, align 8
  %59 = icmp eq ptr %dtable_ptr200, null
  %next_dtable_ref201 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr200, i32 0, i32 2
  br i1 %59, label %dtable_found202, label %dtable_check198

dtable_found202:                                  ; preds = %dtable_check198
  store ptr @"$ct.dyn.std.io.Scanner.flush", ptr %dtable_ref199, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.Scanner.flush", i32 0, i32 2), align 8
  br label %dtable_skip203

dtable_skip203:                                   ; preds = %dtable_found202, %dtable_skip196
  %next_val204 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.Scanner.close", i32 0, i32 2), align 8
  %60 = icmp eq ptr %next_val204, inttoptr (i64 -1 to ptr)
  br i1 %60, label %dtable_check205, label %dtable_skip210

dtable_check205:                                  ; preds = %dtable_check205, %dtable_skip203
  %dtable_ref206 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.Scanner", i32 0, i32 2), %dtable_skip203 ], [ %next_dtable_ref208, %dtable_check205 ]
  %dtable_ptr207 = load ptr, ptr %dtable_ref206, align 8
  %61 = icmp eq ptr %dtable_ptr207, null
  %next_dtable_ref208 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr207, i32 0, i32 2
  br i1 %61, label %dtable_found209, label %dtable_check205

dtable_found209:                                  ; preds = %dtable_check205
  store ptr @"$ct.dyn.std.io.Scanner.close", ptr %dtable_ref206, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.Scanner.close", i32 0, i32 2), align 8
  br label %dtable_skip210

dtable_skip210:                                   ; preds = %dtable_found209, %dtable_skip203
  %next_val211 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.Scanner.read", i32 0, i32 2), align 8
  %62 = icmp eq ptr %next_val211, inttoptr (i64 -1 to ptr)
  br i1 %62, label %dtable_check212, label %dtable_skip217

dtable_check212:                                  ; preds = %dtable_check212, %dtable_skip210
  %dtable_ref213 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.Scanner", i32 0, i32 2), %dtable_skip210 ], [ %next_dtable_ref215, %dtable_check212 ]
  %dtable_ptr214 = load ptr, ptr %dtable_ref213, align 8
  %63 = icmp eq ptr %dtable_ptr214, null
  %next_dtable_ref215 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr214, i32 0, i32 2
  br i1 %63, label %dtable_found216, label %dtable_check212

dtable_found216:                                  ; preds = %dtable_check212
  store ptr @"$ct.dyn.std.io.Scanner.read", ptr %dtable_ref213, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.Scanner.read", i32 0, i32 2), align 8
  br label %dtable_skip217

dtable_skip217:                                   ; preds = %dtable_found216, %dtable_skip210
  %next_val218 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.Scanner.read_byte", i32 0, i32 2), align 8
  %64 = icmp eq ptr %next_val218, inttoptr (i64 -1 to ptr)
  br i1 %64, label %dtable_check219, label %dtable_skip224

dtable_check219:                                  ; preds = %dtable_check219, %dtable_skip217
  %dtable_ref220 = phi ptr [ getelementptr inbounds (%.introspect, ptr @"$ct.std.io.Scanner", i32 0, i32 2), %dtable_skip217 ], [ %next_dtable_ref222, %dtable_check219 ]
  %dtable_ptr221 = load ptr, ptr %dtable_ref220, align 8
  %65 = icmp eq ptr %dtable_ptr221, null
  %next_dtable_ref222 = getelementptr inbounds { ptr, ptr, ptr }, ptr %dtable_ptr221, i32 0, i32 2
  br i1 %65, label %dtable_found223, label %dtable_check219

dtable_found223:                                  ; preds = %dtable_check219
  store ptr @"$ct.dyn.std.io.Scanner.read_byte", ptr %dtable_ref220, align 8
  store ptr null, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @"$ct.dyn.std.io.Scanner.read_byte", i32 0, i32 2), align 8
  br label %dtable_skip224

dtable_skip224:                                   ; preds = %dtable_found223, %dtable_skip217
  ret void
}

attributes #0 = { nounwind ssp uwtable "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { alwaysinline }

!llvm.module.flags = !{!33, !34, !35}
!llvm.dbg.cu = !{!36}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "PRINTF_NTOA_BUFFER_SIZE", linkageName: "std.io.PRINTF_NTOA_BUFFER_SIZE", scope: !2, file: !2, line: 5, type: !3, isLocal: false, isDefinition: true, align: 4)
!2 = !DIFile(filename: "formatter.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io")
!3 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!4 = !DIGlobalVariableExpression(var: !5, expr: !DIExpression())
!5 = distinct !DIGlobalVariable(name: "XDIGITS_H", linkageName: "std.io.XDIGITS_H", scope: !6, file: !6, line: 4, type: !7, isLocal: false, isDefinition: true, align: 16)
!6 = !DIFile(filename: "formatter_private.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io")
!7 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, align: 8, elements: !9)
!8 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!9 = !{!10}
!10 = !DISubrange(count: 16, lowerBound: 0)
!11 = !DIGlobalVariableExpression(var: !12, expr: !DIExpression())
!12 = distinct !DIGlobalVariable(name: "XDIGITS_L", linkageName: "std.io.XDIGITS_L", scope: !6, file: !6, line: 5, type: !7, isLocal: false, isDefinition: true, align: 16)
!13 = !DIGlobalVariableExpression(var: !14, expr: !DIExpression())
!14 = distinct !DIGlobalVariable(name: "BUF_SIZE", linkageName: "floatformat.BUF_SIZE", scope: !6, file: !6, line: 200, type: !3, isLocal: true, isDefinition: true, align: 4)
!15 = !DIGlobalVariableExpression(var: !16, expr: !DIExpression())
!16 = distinct !DIGlobalVariable(name: "file", linkageName: "stdout.file", scope: !17, file: !17, line: 350, type: !18, isLocal: true, isDefinition: true, align: 8)
!17 = !DIFile(filename: "io.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io")
!18 = !DICompositeType(tag: DW_TAG_structure_type, name: "File", scope: !17, file: !17, line: 4, size: 64, align: 64, elements: !19, identifier: "std.io.File")
!19 = !{!20}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !18, file: !17, line: 6, baseType: !21, size: 64, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "CFile", scope: !17, file: !17, line: 360, baseType: !22, align: 8)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "void*", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "file", linkageName: "stderr.file", scope: !17, file: !17, line: 362, type: !18, isLocal: true, isDefinition: true, align: 8)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "file", linkageName: "stdin.file", scope: !17, file: !17, line: 374, type: !18, isLocal: true, isDefinition: true, align: 8)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(name: "MAX_VARS", linkageName: "std.io.MAX_VARS", scope: !29, file: !29, line: 187, type: !30, isLocal: true, isDefinition: true, align: 1)
!29 = !DIFile(filename: "stream.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io")
!30 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 72, align: 8, elements: !31)
!31 = !{!32}
!32 = !DISubrange(count: 9, lowerBound: 0)
!33 = !{i32 4, !"PIC Level", i32 2}
!34 = !{i32 1, !"CodeView", i32 1}
!35 = !{i32 1, !"uwtable", i32 2}
!36 = distinct !DICompileUnit(language: DW_LANG_C11, file: !37, producer: "c3c", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !38, globals: !74, splitDebugInlining: false)
!37 = !DIFile(filename: "bits.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io")
!38 = !{!39, !45, !51}
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FloatFormatting", scope: !6, file: !6, line: 184, baseType: !3, size: 32, align: 32, elements: !40)
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "FLOAT", value: 0)
!42 = !DIEnumerator(name: "EXPONENTIAL", value: 1)
!43 = !DIEnumerator(name: "ADAPTIVE", value: 2)
!44 = !DIEnumerator(name: "HEX", value: 3)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Seek", scope: !46, file: !46, line: 7, baseType: !3, size: 32, align: 32, elements: !47)
!46 = !DIFile(filename: "bytebuffer.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io/stream")
!47 = !{!48, !49, !50}
!48 = !DIEnumerator(name: "SET", value: 0)
!49 = !DIEnumerator(name: "CURSOR", value: 1)
!50 = !DIEnumerator(name: "END", value: 2)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "TypeKind", scope: !2, file: !2, line: 343, baseType: !8, size: 8, align: 8, elements: !52)
!52 = !{!53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73}
!53 = !DIEnumerator(name: "VOID", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "BOOL", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "SIGNED_INT", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "UNSIGNED_INT", value: 3, isUnsigned: true)
!57 = !DIEnumerator(name: "FLOAT", value: 4, isUnsigned: true)
!58 = !DIEnumerator(name: "TYPEID", value: 5, isUnsigned: true)
!59 = !DIEnumerator(name: "ANYFAULT", value: 6, isUnsigned: true)
!60 = !DIEnumerator(name: "ANY", value: 7, isUnsigned: true)
!61 = !DIEnumerator(name: "ENUM", value: 8, isUnsigned: true)
!62 = !DIEnumerator(name: "FAULT", value: 9, isUnsigned: true)
!63 = !DIEnumerator(name: "STRUCT", value: 10, isUnsigned: true)
!64 = !DIEnumerator(name: "UNION", value: 11, isUnsigned: true)
!65 = !DIEnumerator(name: "BITSTRUCT", value: 12, isUnsigned: true)
!66 = !DIEnumerator(name: "FUNC", value: 13, isUnsigned: true)
!67 = !DIEnumerator(name: "OPTIONAL", value: 14, isUnsigned: true)
!68 = !DIEnumerator(name: "ARRAY", value: 15, isUnsigned: true)
!69 = !DIEnumerator(name: "SLICE", value: 16, isUnsigned: true)
!70 = !DIEnumerator(name: "VECTOR", value: 17, isUnsigned: true)
!71 = !DIEnumerator(name: "DISTINCT", value: 18, isUnsigned: true)
!72 = !DIEnumerator(name: "POINTER", value: 19, isUnsigned: true)
!73 = !DIEnumerator(name: "INTERFACE", value: 20, isUnsigned: true)
!74 = !{!0, !4, !11, !13, !15, !23, !25, !27}
!75 = distinct !DISubprogram(name: "init", linkageName: "std.io.BitReader.init", scope: !37, file: !37, line: 10, type: !76, scopeLine: 10, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!76 = !DISubroutineType(types: !77)
!77 = !{null, !78, !82}
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "BitReader*", baseType: !79, size: 64, align: 64, dwarfAddressSpace: 0)
!79 = !DICompositeType(tag: DW_TAG_structure_type, name: "BitReader", scope: !37, file: !37, line: 3, size: 192, align: 64, elements: !80, identifier: "std.io.BitReader")
!80 = !{!81, !87, !89}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "reader", scope: !79, file: !37, line: 5, baseType: !82, size: 128, align: 64)
!82 = !DICompositeType(tag: DW_TAG_structure_type, name: "InStream", size: 128, align: 64, elements: !83, identifier: "InStream")
!83 = !{!84, !85}
!84 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !82, baseType: !22, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !82, baseType: !86, size: 64, align: 64, offset: 64)
!86 = !DIBasicType(name: "typeid", size: 64, encoding: DW_ATE_address)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !79, file: !37, line: 6, baseType: !88, size: 32, align: 32, offset: 128)
!88 = !DIBasicType(name: "uint", size: 32, encoding: DW_ATE_unsigned)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !79, file: !37, line: 7, baseType: !88, size: 32, align: 32, offset: 160)
!90 = !{}
!91 = !DILocation(line: 11, column: 1, scope: !75)
!92 = !DILocalVariable(name: "self", arg: 1, scope: !75, file: !37, line: 10, type: !78)
!93 = !DILocation(line: 10, column: 24, scope: !75)
!94 = !DILocalVariable(name: "byte_reader", arg: 2, scope: !75, file: !37, line: 10, type: !82)
!95 = !DILocation(line: 10, column: 40, scope: !75)
!96 = !DILocation(line: 12, column: 3, scope: !75)
!97 = !DILocation(line: 12, column: 22, scope: !75)
!98 = distinct !DISubprogram(name: "clear", linkageName: "std.io.BitReader.clear", scope: !37, file: !37, line: 15, type: !99, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!99 = !DISubroutineType(types: !100)
!100 = !{null, !78}
!101 = !DILocation(line: 16, column: 1, scope: !98)
!102 = !DILocalVariable(name: "self", arg: 1, scope: !98, file: !37, line: 15, type: !78)
!103 = !DILocation(line: 15, column: 25, scope: !98)
!104 = !DILocation(line: 17, column: 2, scope: !98)
!105 = !DILocation(line: 17, column: 13, scope: !98)
!106 = distinct !DISubprogram(name: "read_bits", linkageName: "std.io.BitReader.read_bits", scope: !37, file: !37, line: 24, type: !107, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!107 = !DISubroutineType(types: !108)
!108 = !{!109, !111, !78, !88}
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "anyfault", baseType: !110)
!110 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "char*", baseType: !8, size: 64, align: 64, dwarfAddressSpace: 0)
!112 = !DILocation(line: 25, column: 1, scope: !106)
!113 = !DILocalVariable(name: "self", arg: 1, scope: !106, file: !37, line: 24, type: !78)
!114 = !DILocation(line: 24, column: 30, scope: !106)
!115 = !DILocalVariable(name: "nbits", arg: 2, scope: !106, file: !37, line: 24, type: !88)
!116 = !DILocation(line: 24, column: 42, scope: !106)
!117 = !DILocation(line: 21, column: 11, scope: !118)
!118 = distinct !DILexicalBlock(scope: !106, file: !37, line: 25, column: 1)
!119 = !DILocation(line: 22, column: 11, scope: !118)
!120 = !DILocation(line: 22, column: 22, scope: !118)
!121 = !DILocalVariable(name: "bits", scope: !106, file: !37, line: 26, type: !88, align: 4)
!122 = !DILocation(line: 26, column: 7, scope: !106)
!123 = !DILocation(line: 26, column: 14, scope: !106)
!124 = !DILocation(line: 27, column: 6, scope: !106)
!125 = !DILocation(line: 27, column: 17, scope: !106)
!126 = !DILocalVariable(name: "c", scope: !127, file: !37, line: 30, type: !8, align: 1)
!127 = distinct !DILexicalBlock(scope: !106, file: !37, line: 28, column: 2)
!128 = !DILocation(line: 30, column: 8, scope: !127)
!129 = !DILocation(line: 30, column: 12, scope: !127)
!130 = !DILocation(line: 31, column: 3, scope: !127)
!131 = !DILocation(line: 32, column: 3, scope: !127)
!132 = !DILocation(line: 32, column: 11, scope: !127)
!133 = !DILocation(line: 33, column: 3, scope: !127)
!134 = !DILocation(line: 33, column: 15, scope: !127)
!135 = !DILocation(line: 34, column: 3, scope: !127)
!136 = !DILocation(line: 36, column: 2, scope: !106)
!137 = !DILocation(line: 36, column: 14, scope: !106)
!138 = !DILocalVariable(name: "mask", scope: !106, file: !37, line: 37, type: !88, align: 4)
!139 = !DILocation(line: 37, column: 7, scope: !106)
!140 = !DILocation(line: 37, column: 20, scope: !106)
!141 = !DILocation(line: 37, column: 15, scope: !106)
!142 = !DILocation(line: 38, column: 17, scope: !106)
!143 = !DILocation(line: 38, column: 25, scope: !106)
!144 = !DILocation(line: 38, column: 37, scope: !106)
!145 = !DILocation(line: 38, column: 10, scope: !106)
!146 = distinct !DISubprogram(name: "init", linkageName: "std.io.BitWriter.init", scope: !37, file: !37, line: 48, type: !147, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!147 = !DISubroutineType(types: !148)
!148 = !{null, !149, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "BitWriter*", baseType: !150, size: 64, align: 64, dwarfAddressSpace: 0)
!150 = !DICompositeType(tag: DW_TAG_structure_type, name: "BitWriter", scope: !37, file: !37, line: 41, size: 192, align: 64, elements: !151, identifier: "std.io.BitWriter")
!151 = !{!152, !157, !158}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !150, file: !37, line: 43, baseType: !153, size: 128, align: 64)
!153 = !DICompositeType(tag: DW_TAG_structure_type, name: "OutStream", size: 128, align: 64, elements: !154, identifier: "OutStream")
!154 = !{!155, !156}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !153, baseType: !22, size: 64, align: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !153, baseType: !86, size: 64, align: 64, offset: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !150, file: !37, line: 44, baseType: !88, size: 32, align: 32, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !150, file: !37, line: 45, baseType: !88, size: 32, align: 32, offset: 160)
!159 = !DILocation(line: 49, column: 1, scope: !146)
!160 = !DILocalVariable(name: "self", arg: 1, scope: !146, file: !37, line: 48, type: !149)
!161 = !DILocation(line: 48, column: 24, scope: !146)
!162 = !DILocalVariable(name: "byte_writer", arg: 2, scope: !146, file: !37, line: 48, type: !153)
!163 = !DILocation(line: 48, column: 41, scope: !146)
!164 = !DILocation(line: 50, column: 3, scope: !146)
!165 = !DILocation(line: 50, column: 22, scope: !146)
!166 = distinct !DISubprogram(name: "flush", linkageName: "std.io.BitWriter.flush", scope: !37, file: !37, line: 53, type: !167, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!167 = !DISubroutineType(types: !168)
!168 = !{!109, !22, !149}
!169 = !DILocation(line: 54, column: 1, scope: !166)
!170 = !DILocalVariable(name: "self", arg: 1, scope: !166, file: !37, line: 53, type: !149)
!171 = !DILocation(line: 53, column: 26, scope: !166)
!172 = !DILocation(line: 55, column: 6, scope: !166)
!173 = !DILocalVariable(name: "bits", scope: !166, file: !37, line: 56, type: !88, align: 4)
!174 = !DILocation(line: 56, column: 7, scope: !166)
!175 = !DILocation(line: 56, column: 14, scope: !166)
!176 = !DILocation(line: 56, column: 33, scope: !166)
!177 = !DILocation(line: 56, column: 28, scope: !166)
!178 = !DILocalVariable(name: "n", scope: !166, file: !37, line: 57, type: !88, align: 4)
!179 = !DILocation(line: 57, column: 7, scope: !166)
!180 = !DILocation(line: 57, column: 12, scope: !166)
!181 = !DILocalVariable(name: "buffer", scope: !166, file: !37, line: 58, type: !182, align: 1)
!182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32, align: 8, elements: !183)
!183 = !{!184}
!184 = !DISubrange(count: 4, lowerBound: 0)
!185 = !DILocation(line: 58, column: 10, scope: !166)
!186 = !DILocation(line: 172, column: 11, scope: !187, inlinedAt: !189)
!187 = distinct !DISubprogram(name: "is_arrayptr_or_slice_of_char", linkageName: "is_arrayptr_or_slice_of_char", scope: !188, file: !188, line: 165, scopeLine: 165, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!188 = !DIFile(filename: "bitorder.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core")
!189 = !DILocation(line: 107, column: 11, scope: !190, inlinedAt: !192)
!190 = distinct !DILexicalBlock(scope: !191, file: !188, line: 111, column: 1)
!191 = distinct !DISubprogram(name: "write", linkageName: "write", scope: !188, file: !188, line: 110, scopeLine: 110, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!192 = !DILocation(line: 59, column: 12, scope: !166)
!193 = !DILocalVariable(name: "s", scope: !191, file: !37, line: 112, type: !194, align: 8)
!194 = !DICompositeType(tag: DW_TAG_structure_type, name: "char[]", size: 128, align: 64, elements: !195, identifier: "char[]")
!195 = !{!196, !197}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !194, baseType: !111, size: 64, align: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !194, baseType: !198, size: 64, align: 64, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "usz", baseType: !199)
!199 = !DIBasicType(name: "ulong", size: 64, encoding: DW_ATE_unsigned)
!200 = !DILocation(line: 112, column: 9, scope: !191, inlinedAt: !192)
!201 = !DILocation(line: 115, column: 9, scope: !191, inlinedAt: !192)
!202 = !DILocation(line: 119, column: 16, scope: !191, inlinedAt: !192)
!203 = !DILocation(line: 212, column: 20, scope: !204, inlinedAt: !206)
!204 = distinct !DISubprogram(name: "bitcast", linkageName: "bitcast", scope: !205, file: !205, line: 209, scopeLine: 209, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!205 = !DIFile(filename: "builtin.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core")
!206 = !DILocation(line: 119, column: 24, scope: !191, inlinedAt: !192)
!207 = !DILocation(line: 212, column: 12, scope: !204, inlinedAt: !206)
!208 = !DILocation(line: 60, column: 16, scope: !166)
!209 = !DILocation(line: 60, column: 37, scope: !166)
!210 = !DILocation(line: 60, column: 29, scope: !166)
!211 = !DILocation(line: 101, column: 6, scope: !212, inlinedAt: !213)
!212 = distinct !DISubprogram(name: "write_all", linkageName: "write_all", scope: !29, file: !29, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!213 = !DILocation(line: 60, column: 6, scope: !166)
!214 = !DILocation(line: 101, column: 30, scope: !212, inlinedAt: !213)
!215 = !DILocalVariable(name: "n", scope: !212, file: !37, line: 102, type: !198, align: 8)
!216 = !DILocation(line: 102, column: 6, scope: !212, inlinedAt: !213)
!217 = !DILocation(line: 102, column: 23, scope: !212, inlinedAt: !213)
!218 = !DILocation(line: 102, column: 10, scope: !212, inlinedAt: !213)
!219 = !DILocation(line: 103, column: 6, scope: !212, inlinedAt: !213)
!220 = !DILocation(line: 103, column: 11, scope: !212, inlinedAt: !213)
!221 = !DILocation(line: 103, column: 30, scope: !212, inlinedAt: !213)
!222 = !DILocation(line: 104, column: 9, scope: !212, inlinedAt: !213)
!223 = !DILocation(line: 61, column: 2, scope: !166)
!224 = !DILocation(line: 61, column: 13, scope: !166)
!225 = !DILocation(line: 119, column: 4, scope: !191, inlinedAt: !192)
!226 = distinct !DISubprogram(name: "write_bits", linkageName: "std.io.BitWriter.write_bits", scope: !37, file: !37, line: 67, type: !227, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!227 = !DISubroutineType(types: !228)
!228 = !{!109, !22, !149, !88, !88}
!229 = !DILocation(line: 68, column: 1, scope: !226)
!230 = !DILocalVariable(name: "self", arg: 1, scope: !226, file: !37, line: 67, type: !149)
!231 = !DILocation(line: 67, column: 31, scope: !226)
!232 = !DILocalVariable(name: "bits", arg: 2, scope: !226, file: !37, line: 67, type: !88)
!233 = !DILocation(line: 67, column: 43, scope: !226)
!234 = !DILocalVariable(name: "nbits", arg: 3, scope: !226, file: !37, line: 67, type: !88)
!235 = !DILocation(line: 67, column: 54, scope: !226)
!236 = !DILocation(line: 65, column: 11, scope: !237)
!237 = distinct !DILexicalBlock(scope: !226, file: !37, line: 68, column: 1)
!238 = !DILocation(line: 69, column: 6, scope: !226)
!239 = !DILocalVariable(name: "n", scope: !226, file: !37, line: 70, type: !88, align: 4)
!240 = !DILocation(line: 70, column: 7, scope: !226)
!241 = !DILocation(line: 70, column: 11, scope: !226)
!242 = !DILocation(line: 70, column: 22, scope: !226)
!243 = !DILocalVariable(name: "to_write", scope: !226, file: !37, line: 71, type: !88, align: 4)
!244 = !DILocation(line: 71, column: 7, scope: !226)
!245 = !DILocation(line: 71, column: 18, scope: !226)
!246 = !DILocalVariable(name: "left", scope: !226, file: !37, line: 72, type: !88, align: 4)
!247 = !DILocation(line: 72, column: 7, scope: !226)
!248 = !DILocation(line: 72, column: 14, scope: !226)
!249 = !DILocation(line: 73, column: 6, scope: !226)
!250 = !DILocalVariable(name: "lbits", scope: !251, file: !37, line: 75, type: !199, align: 8)
!251 = distinct !DILexicalBlock(scope: !226, file: !37, line: 74, column: 2)
!252 = !DILocation(line: 75, column: 9, scope: !251)
!253 = !DILocation(line: 76, column: 7, scope: !251)
!254 = !DILocation(line: 76, column: 36, scope: !251)
!255 = !DILocation(line: 76, column: 55, scope: !251)
!256 = !DILocation(line: 76, column: 50, scope: !251)
!257 = !DILocation(line: 76, column: 30, scope: !251)
!258 = !DILocation(line: 77, column: 3, scope: !251)
!259 = !DILocation(line: 77, column: 20, scope: !251)
!260 = !DILocation(line: 77, column: 28, scope: !251)
!261 = !DILocation(line: 77, column: 13, scope: !251)
!262 = !DILocation(line: 77, column: 44, scope: !251)
!263 = !DILocation(line: 77, column: 48, scope: !251)
!264 = !DILocation(line: 77, column: 38, scope: !251)
!265 = !DILocalVariable(name: "buffer", scope: !251, file: !37, line: 78, type: !266, align: 1)
!266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, align: 8, elements: !267)
!267 = !{!268}
!268 = !DISubrange(count: 8, lowerBound: 0)
!269 = !DILocation(line: 78, column: 11, scope: !251)
!270 = !DILocation(line: 172, column: 11, scope: !271, inlinedAt: !272)
!271 = distinct !DISubprogram(name: "is_arrayptr_or_slice_of_char", linkageName: "is_arrayptr_or_slice_of_char", scope: !188, file: !188, line: 165, scopeLine: 165, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!272 = !DILocation(line: 107, column: 11, scope: !273, inlinedAt: !275)
!273 = distinct !DILexicalBlock(scope: !274, file: !188, line: 111, column: 1)
!274 = distinct !DISubprogram(name: "write", linkageName: "write", scope: !188, file: !188, line: 110, scopeLine: 110, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!275 = !DILocation(line: 79, column: 13, scope: !251)
!276 = !DILocalVariable(name: "s", scope: !274, file: !37, line: 112, type: !194, align: 8)
!277 = !DILocation(line: 112, column: 9, scope: !274, inlinedAt: !275)
!278 = !DILocation(line: 115, column: 9, scope: !274, inlinedAt: !275)
!279 = !DILocation(line: 119, column: 16, scope: !274, inlinedAt: !275)
!280 = !DILocation(line: 212, column: 20, scope: !281, inlinedAt: !282)
!281 = distinct !DISubprogram(name: "bitcast", linkageName: "bitcast", scope: !205, file: !205, line: 209, scopeLine: 209, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!282 = !DILocation(line: 119, column: 24, scope: !274, inlinedAt: !275)
!283 = !DILocation(line: 212, column: 12, scope: !281, inlinedAt: !282)
!284 = !DILocation(line: 80, column: 17, scope: !251)
!285 = !DILocation(line: 80, column: 38, scope: !251)
!286 = !DILocation(line: 80, column: 30, scope: !251)
!287 = !DILocation(line: 101, column: 6, scope: !288, inlinedAt: !289)
!288 = distinct !DISubprogram(name: "write_all", linkageName: "write_all", scope: !29, file: !29, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!289 = !DILocation(line: 80, column: 7, scope: !251)
!290 = !DILocation(line: 101, column: 30, scope: !288, inlinedAt: !289)
!291 = !DILocalVariable(name: "n", scope: !288, file: !37, line: 102, type: !198, align: 8)
!292 = !DILocation(line: 102, column: 6, scope: !288, inlinedAt: !289)
!293 = !DILocation(line: 102, column: 23, scope: !288, inlinedAt: !289)
!294 = !DILocation(line: 102, column: 10, scope: !288, inlinedAt: !289)
!295 = !DILocation(line: 103, column: 6, scope: !288, inlinedAt: !289)
!296 = !DILocation(line: 103, column: 11, scope: !288, inlinedAt: !289)
!297 = !DILocation(line: 103, column: 30, scope: !288, inlinedAt: !289)
!298 = !DILocation(line: 104, column: 9, scope: !288, inlinedAt: !289)
!299 = !DILocation(line: 82, column: 2, scope: !226)
!300 = !DILocation(line: 82, column: 16, scope: !226)
!301 = !DILocation(line: 83, column: 2, scope: !226)
!302 = !DILocation(line: 83, column: 15, scope: !226)
!303 = !DILocation(line: 83, column: 29, scope: !226)
!304 = !DILocation(line: 83, column: 24, scope: !226)
!305 = !DILocation(line: 84, column: 2, scope: !226)
!306 = !DILocation(line: 84, column: 13, scope: !226)
!307 = !DILocation(line: 119, column: 4, scope: !274, inlinedAt: !275)
!308 = distinct !DISubprogram(name: "printf", linkageName: "std.io.Formatter.printf", scope: !2, file: !2, line: 26, type: !309, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!309 = !DISubroutineType(types: !310)
!310 = !{!109, !311, !312, !329, !330}
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "usz*", baseType: !198, size: 64, align: 64, dwarfAddressSpace: 0)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Formatter*", baseType: !313, size: 64, align: 64, dwarfAddressSpace: 0)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !2, file: !2, line: 31, size: 384, align: 64, elements: !314, identifier: "std.io.Formatter")
!314 = !{!315, !316, !321}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !313, file: !2, line: 33, baseType: !22, size: 64, align: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "out_fn", scope: !313, file: !2, line: 34, baseType: !317, size: 64, align: 64, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputFn", scope: !2, file: !2, line: 23, baseType: !318, align: 8)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "OutputFn", baseType: !319, size: 64, align: 64, dwarfAddressSpace: 0)
!319 = !DISubroutineType(types: !320)
!320 = !{!109, !22, !22, !8}
!321 = !DIDerivedType(tag: DW_TAG_member, scope: !313, file: !2, line: 35, baseType: !322, size: 256, align: 64, offset: 128)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "$anon", scope: !313, file: !2, line: 35, size: 256, align: 64, elements: !323)
!323 = !{!324, !325, !326, !327, !328}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !322, file: !2, line: 37, baseType: !88, size: 32, align: 32)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !322, file: !2, line: 38, baseType: !88, size: 32, align: 32, offset: 32)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "prec", scope: !322, file: !2, line: 39, baseType: !88, size: 32, align: 32, offset: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !322, file: !2, line: 40, baseType: !198, size: 64, align: 64, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "first_fault", scope: !322, file: !2, line: 41, baseType: !109, size: 64, align: 64, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "String", baseType: !194)
!330 = !DICompositeType(tag: DW_TAG_structure_type, name: "any[]", size: 128, align: 64, elements: !331, identifier: "any[]")
!331 = !{!332, !338}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !330, baseType: !333, size: 64, align: 64)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "any*", baseType: !334, size: 64, align: 64, dwarfAddressSpace: 0)
!334 = !DICompositeType(tag: DW_TAG_structure_type, name: "any", size: 128, align: 64, elements: !335, identifier: "any")
!335 = !{!336, !337}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !334, baseType: !22, size: 64, align: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !334, baseType: !86, size: 64, align: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !330, baseType: !198, size: 64, align: 64, offset: 64)
!339 = !DILocation(line: 27, column: 1, scope: !308)
!340 = !DILocalVariable(name: "self", arg: 1, scope: !308, file: !2, line: 26, type: !312)
!341 = !DILocation(line: 26, column: 26, scope: !308)
!342 = !DILocalVariable(name: "format", arg: 2, scope: !308, file: !2, line: 26, type: !329)
!343 = !DILocation(line: 26, column: 40, scope: !308)
!344 = !DILocalVariable(name: "args", arg: 3, scope: !308, file: !2, line: 26, type: !330)
!345 = !DILocation(line: 26, column: 48, scope: !308)
!346 = !DILocation(line: 28, column: 9, scope: !308)
!347 = distinct !DISubprogram(name: "init", linkageName: "std.io.Formatter.init", scope: !2, file: !2, line: 56, type: !348, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!348 = !DISubroutineType(types: !349)
!349 = !{null, !312, !318, !22}
!350 = !DILocation(line: 57, column: 1, scope: !347)
!351 = !DILocalVariable(name: "self", arg: 1, scope: !347, file: !2, line: 56, type: !312)
!352 = !DILocation(line: 56, column: 24, scope: !347)
!353 = !DILocalVariable(name: "out_fn", arg: 2, scope: !347, file: !2, line: 56, type: !317)
!354 = !DILocation(line: 56, column: 40, scope: !347)
!355 = !DILocalVariable(name: "data", arg: 3, scope: !347, file: !2, line: 56, type: !22)
!356 = !DILocation(line: 56, column: 54, scope: !347)
!357 = !DILocation(line: 58, column: 3, scope: !347)
!358 = !DILocation(line: 58, column: 20, scope: !347)
!359 = !DILocation(line: 58, column: 36, scope: !347)
!360 = distinct !DISubprogram(name: "out", linkageName: "std.io.Formatter.out", scope: !2, file: !2, line: 61, type: !361, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!361 = !DISubroutineType(types: !362)
!362 = !{!109, !311, !312, !8}
!363 = !DILocation(line: 62, column: 1, scope: !360)
!364 = !DILocalVariable(name: "self", arg: 1, scope: !360, file: !2, line: 61, type: !312)
!365 = !DILocation(line: 61, column: 23, scope: !360)
!366 = !DILocalVariable(name: "c", arg: 2, scope: !360, file: !2, line: 61, type: !8)
!367 = !DILocation(line: 61, column: 35, scope: !360)
!368 = !DILocalVariable(name: "err", scope: !360, file: !2, line: 63, type: !109, align: 8)
!369 = !DILocation(line: 63, column: 12, scope: !360)
!370 = !DILocation(line: 63, column: 18, scope: !360)
!371 = !DILocation(line: 63, column: 30, scope: !360)
!372 = !DILocation(line: 63, column: 41, scope: !360)
!373 = !DILocation(line: 65, column: 7, scope: !374)
!374 = distinct !DILexicalBlock(scope: !360, file: !2, line: 64, column: 2)
!375 = !DILocation(line: 65, column: 32, scope: !374)
!376 = !DILocation(line: 66, column: 3, scope: !374)
!377 = !DILocation(line: 66, column: 22, scope: !374)
!378 = !DILocation(line: 67, column: 10, scope: !374)
!379 = !DILocation(line: 69, column: 9, scope: !360)
!380 = distinct !DISubprogram(name: "print_with_function", linkageName: "std.io.Formatter.print_with_function", scope: !2, file: !2, line: 72, type: !381, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!381 = !DISubroutineType(types: !382)
!382 = !{!109, !311, !312, !383}
!383 = !DICompositeType(tag: DW_TAG_structure_type, name: "Printable", size: 128, align: 64, elements: !384, identifier: "Printable")
!384 = !{!385, !386}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !383, baseType: !22, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !383, baseType: !86, size: 64, align: 64, offset: 64)
!387 = !DILocation(line: 73, column: 1, scope: !380)
!388 = !DILocalVariable(name: "self", arg: 1, scope: !380, file: !2, line: 72, type: !312)
!389 = !DILocation(line: 72, column: 39, scope: !380)
!390 = !DILocalVariable(name: "arg", arg: 2, scope: !380, file: !2, line: 72, type: !383)
!391 = !DILocation(line: 72, column: 56, scope: !380)
!392 = !DILocation(line: 74, column: 7, scope: !380)
!393 = !DILocalVariable(name: "old", scope: !394, file: !2, line: 76, type: !88, align: 4)
!394 = distinct !DILexicalBlock(scope: !380, file: !2, line: 75, column: 2)
!395 = !DILocation(line: 76, column: 14, scope: !394)
!396 = !DILocation(line: 76, column: 20, scope: !394)
!397 = !DILocalVariable(name: "old_width", scope: !394, file: !2, line: 77, type: !88, align: 4)
!398 = !DILocation(line: 77, column: 8, scope: !394)
!399 = !DILocation(line: 77, column: 20, scope: !394)
!400 = !DILocalVariable(name: "old_prec", scope: !394, file: !2, line: 78, type: !88, align: 4)
!401 = !DILocation(line: 78, column: 8, scope: !394)
!402 = !DILocation(line: 78, column: 19, scope: !394)
!403 = !DILocation(line: 85, column: 8, scope: !394)
!404 = !DILocation(line: 85, column: 20, scope: !394)
!405 = !DILocation(line: 81, column: 4, scope: !406)
!406 = distinct !DILexicalBlock(scope: !394, file: !2, line: 80, column: 3)
!407 = !DILocation(line: 81, column: 17, scope: !406)
!408 = !DILocation(line: 82, column: 4, scope: !406)
!409 = !DILocation(line: 82, column: 17, scope: !406)
!410 = !DILocation(line: 83, column: 4, scope: !406)
!411 = !DILocation(line: 83, column: 16, scope: !406)
!412 = !DILocation(line: 81, column: 4, scope: !413)
!413 = distinct !DILexicalBlock(scope: !394, file: !2, line: 80, column: 3)
!414 = !DILocation(line: 81, column: 17, scope: !413)
!415 = !DILocation(line: 82, column: 4, scope: !413)
!416 = !DILocation(line: 82, column: 17, scope: !413)
!417 = !DILocation(line: 83, column: 4, scope: !413)
!418 = !DILocation(line: 83, column: 16, scope: !413)
!419 = !DILocation(line: 86, column: 24, scope: !394)
!420 = !DILocation(line: 86, column: 10, scope: !394)
!421 = !DILocation(line: 81, column: 4, scope: !422)
!422 = distinct !DILexicalBlock(scope: !394, file: !2, line: 80, column: 3)
!423 = !DILocation(line: 81, column: 17, scope: !422)
!424 = !DILocation(line: 82, column: 4, scope: !422)
!425 = !DILocation(line: 82, column: 17, scope: !422)
!426 = !DILocation(line: 83, column: 4, scope: !422)
!427 = !DILocation(line: 83, column: 16, scope: !422)
!428 = !DILocation(line: 81, column: 4, scope: !429)
!429 = distinct !DILexicalBlock(scope: !394, file: !2, line: 80, column: 3)
!430 = !DILocation(line: 81, column: 17, scope: !429)
!431 = !DILocation(line: 82, column: 4, scope: !429)
!432 = !DILocation(line: 82, column: 17, scope: !429)
!433 = !DILocation(line: 83, column: 4, scope: !429)
!434 = !DILocation(line: 83, column: 16, scope: !429)
!435 = !DILocation(line: 88, column: 7, scope: !380)
!436 = !DILocalVariable(name: "old", scope: !437, file: !2, line: 90, type: !88, align: 4)
!437 = distinct !DILexicalBlock(scope: !380, file: !2, line: 89, column: 2)
!438 = !DILocation(line: 90, column: 14, scope: !437)
!439 = !DILocation(line: 90, column: 20, scope: !437)
!440 = !DILocalVariable(name: "old_width", scope: !437, file: !2, line: 91, type: !88, align: 4)
!441 = !DILocation(line: 91, column: 8, scope: !437)
!442 = !DILocation(line: 91, column: 20, scope: !437)
!443 = !DILocalVariable(name: "old_prec", scope: !437, file: !2, line: 92, type: !88, align: 4)
!444 = !DILocation(line: 92, column: 8, scope: !437)
!445 = !DILocation(line: 92, column: 19, scope: !437)
!446 = !DILocation(line: 99, column: 8, scope: !437)
!447 = !DILocation(line: 99, column: 20, scope: !437)
!448 = !DILocation(line: 95, column: 4, scope: !449)
!449 = distinct !DILexicalBlock(scope: !437, file: !2, line: 94, column: 3)
!450 = !DILocation(line: 95, column: 17, scope: !449)
!451 = !DILocation(line: 96, column: 4, scope: !449)
!452 = !DILocation(line: 96, column: 17, scope: !449)
!453 = !DILocation(line: 97, column: 4, scope: !449)
!454 = !DILocation(line: 97, column: 16, scope: !449)
!455 = !DILocation(line: 95, column: 4, scope: !456)
!456 = distinct !DILexicalBlock(scope: !437, file: !2, line: 94, column: 3)
!457 = !DILocation(line: 95, column: 17, scope: !456)
!458 = !DILocation(line: 96, column: 4, scope: !456)
!459 = !DILocation(line: 96, column: 17, scope: !456)
!460 = !DILocation(line: 97, column: 4, scope: !456)
!461 = !DILocation(line: 97, column: 16, scope: !456)
!462 = !DILocalVariable(name: "buffer", scope: !463, file: !2, line: 484, type: !465, align: 16)
!463 = distinct !DISubprogram(name: "@stack_mem", linkageName: "@stack_mem", scope: !464, file: !464, line: 482, scopeLine: 482, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!464 = !DIFile(filename: "mem.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core")
!465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8192, align: 8, elements: !466)
!466 = !{!467}
!467 = !DISubrange(count: 1024, lowerBound: 0)
!468 = !DILocation(line: 484, column: 14, scope: !463, inlinedAt: !469)
!469 = !DILocation(line: 100, column: 3, scope: !437)
!470 = !DILocalVariable(name: "allocator", scope: !463, file: !2, line: 485, type: !471, align: 8)
!471 = !DICompositeType(tag: DW_TAG_structure_type, name: "OnStackAllocator", scope: !2, file: !2, line: 3, size: 384, align: 64, elements: !472, identifier: "std.core.mem.allocator.OnStackAllocator")
!472 = !{!473, !478, !479, !480}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "backing_allocator", scope: !471, file: !2, line: 5, baseType: !474, size: 128, align: 64)
!474 = !DICompositeType(tag: DW_TAG_structure_type, name: "Allocator", size: 128, align: 64, elements: !475, identifier: "Allocator")
!475 = !{!476, !477}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !474, baseType: !22, size: 64, align: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !474, baseType: !86, size: 64, align: 64, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !2, line: 6, baseType: !194, size: 128, align: 64, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !471, file: !2, line: 7, baseType: !198, size: 64, align: 64, offset: 256)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !471, file: !2, line: 8, baseType: !481, size: 64, align: 64, offset: 320)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "OnStackAllocatorExtraChunk*", baseType: !482, size: 64, align: 64, dwarfAddressSpace: 0)
!482 = !DICompositeType(tag: DW_TAG_structure_type, name: "OnStackAllocatorExtraChunk", scope: !2, file: !2, line: 12, size: 192, align: 64, elements: !483, identifier: "std.core.mem.allocator.OnStackAllocatorExtraChunk")
!483 = !{!484, !486, !487}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "is_aligned", scope: !482, file: !2, line: 14, baseType: !485, size: 8, align: 8)
!485 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !482, file: !2, line: 15, baseType: !481, size: 64, align: 64, offset: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !482, file: !2, line: 16, baseType: !22, size: 64, align: 64, offset: 128)
!488 = !DILocation(line: 485, column: 19, scope: !463, inlinedAt: !469)
!489 = !DILocation(line: 486, column: 18, scope: !463, inlinedAt: !469)
!490 = !DILocation(line: 486, column: 2, scope: !463, inlinedAt: !469)
!491 = !DILocalVariable(name: "mem", scope: !437, file: !2, line: 100, type: !474, align: 8)
!492 = !DILocation(line: 100, column: 30, scope: !437)
!493 = !DILocation(line: 488, column: 9, scope: !494, inlinedAt: !469)
!494 = distinct !DILexicalBlock(scope: !463, file: !464, line: 488, column: 2)
!495 = !DILocation(line: 102, column: 41, scope: !496)
!496 = distinct !DILexicalBlock(scope: !437, file: !2, line: 101, column: 3)
!497 = !DILocation(line: 102, column: 27, scope: !496)
!498 = !DILocation(line: 102, column: 11, scope: !496)
!499 = !DILocation(line: 487, column: 8, scope: !500, inlinedAt: !469)
!500 = distinct !DILexicalBlock(scope: !463, file: !464, line: 487, column: 8)
!501 = !DILocation(line: 95, column: 4, scope: !502)
!502 = distinct !DILexicalBlock(scope: !437, file: !2, line: 94, column: 3)
!503 = !DILocation(line: 95, column: 17, scope: !502)
!504 = !DILocation(line: 96, column: 4, scope: !502)
!505 = !DILocation(line: 96, column: 17, scope: !502)
!506 = !DILocation(line: 97, column: 4, scope: !502)
!507 = !DILocation(line: 97, column: 16, scope: !502)
!508 = !DILocation(line: 487, column: 8, scope: !509, inlinedAt: !469)
!509 = distinct !DILexicalBlock(scope: !463, file: !464, line: 487, column: 8)
!510 = !DILocation(line: 95, column: 4, scope: !511)
!511 = distinct !DILexicalBlock(scope: !437, file: !2, line: 94, column: 3)
!512 = !DILocation(line: 95, column: 17, scope: !511)
!513 = !DILocation(line: 96, column: 4, scope: !511)
!514 = !DILocation(line: 96, column: 17, scope: !511)
!515 = !DILocation(line: 97, column: 4, scope: !511)
!516 = !DILocation(line: 97, column: 16, scope: !511)
!517 = !DILocation(line: 105, column: 9, scope: !380)
!518 = distinct !DISubprogram(name: "out_str", linkageName: "std.io.Formatter.out_str", scope: !2, file: !2, line: 109, type: !519, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!519 = !DISubroutineType(types: !520)
!520 = !{!109, !311, !312, !334}
!521 = !DILocation(line: 110, column: 1, scope: !518)
!522 = !DILocalVariable(name: "self", arg: 1, scope: !518, file: !2, line: 109, type: !312)
!523 = !DILocation(line: 109, column: 27, scope: !518)
!524 = !DILocalVariable(name: "arg", arg: 2, scope: !518, file: !2, line: 109, type: !334)
!525 = !DILocation(line: 109, column: 38, scope: !518)
!526 = !DILocation(line: 111, column: 10, scope: !527)
!527 = distinct !DILexicalBlock(scope: !518, file: !2, line: 111, column: 2)
!528 = !DILocation(line: 114, column: 11, scope: !529)
!529 = distinct !DILexicalBlock(scope: !527, file: !2, line: 114, column: 4)
!530 = !DILocation(line: 116, column: 11, scope: !531)
!531 = distinct !DILexicalBlock(scope: !527, file: !2, line: 116, column: 4)
!532 = !DILocation(line: 119, column: 40, scope: !533)
!533 = distinct !DILexicalBlock(scope: !527, file: !2, line: 119, column: 4)
!534 = !DILocation(line: 119, column: 30, scope: !533)
!535 = !DILocation(line: 119, column: 11, scope: !533)
!536 = !DILocation(line: 122, column: 26, scope: !537)
!537 = distinct !DILexicalBlock(scope: !527, file: !2, line: 122, column: 4)
!538 = !DILocation(line: 122, column: 11, scope: !537)
!539 = !DILocation(line: 164, column: 2, scope: !540, inlinedAt: !541)
!540 = distinct !DISubprogram(name: "unreachable", linkageName: "unreachable", scope: !205, file: !205, line: 161, scopeLine: 161, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!541 = !DILocation(line: 124, column: 4, scope: !542)
!542 = distinct !DILexicalBlock(scope: !527, file: !2, line: 124, column: 4)
!543 = !DILocation(line: 166, column: 2, scope: !540, inlinedAt: !541)
!544 = !DILocalVariable(name: "flags", scope: !545, file: !2, line: 127, type: !88, align: 4)
!545 = distinct !DILexicalBlock(scope: !527, file: !2, line: 127, column: 4)
!546 = !DILocation(line: 127, column: 15, scope: !545)
!547 = !DILocation(line: 127, column: 23, scope: !545)
!548 = !DILocalVariable(name: "width", scope: !545, file: !2, line: 128, type: !88, align: 4)
!549 = !DILocation(line: 128, column: 9, scope: !545)
!550 = !DILocation(line: 128, column: 17, scope: !545)
!551 = !DILocation(line: 134, column: 4, scope: !545)
!552 = !DILocation(line: 135, column: 4, scope: !545)
!553 = !DILocation(line: 135, column: 17, scope: !545)
!554 = !DILocation(line: 136, column: 11, scope: !545)
!555 = !DILocation(line: 136, column: 37, scope: !545)
!556 = !DILocation(line: 131, column: 5, scope: !557)
!557 = distinct !DILexicalBlock(scope: !545, file: !2, line: 130, column: 4)
!558 = !DILocation(line: 131, column: 18, scope: !557)
!559 = !DILocation(line: 132, column: 5, scope: !557)
!560 = !DILocation(line: 132, column: 18, scope: !557)
!561 = !DILocation(line: 131, column: 5, scope: !562)
!562 = distinct !DILexicalBlock(scope: !545, file: !2, line: 130, column: 4)
!563 = !DILocation(line: 131, column: 18, scope: !562)
!564 = !DILocation(line: 132, column: 5, scope: !562)
!565 = !DILocation(line: 132, column: 18, scope: !562)
!566 = !DILocalVariable(name: "flags", scope: !567, file: !2, line: 138, type: !88, align: 4)
!567 = distinct !DILexicalBlock(scope: !527, file: !2, line: 138, column: 4)
!568 = !DILocation(line: 138, column: 15, scope: !567)
!569 = !DILocation(line: 138, column: 23, scope: !567)
!570 = !DILocalVariable(name: "width", scope: !567, file: !2, line: 139, type: !88, align: 4)
!571 = !DILocation(line: 139, column: 9, scope: !567)
!572 = !DILocation(line: 139, column: 17, scope: !567)
!573 = !DILocation(line: 145, column: 4, scope: !567)
!574 = !DILocation(line: 146, column: 4, scope: !567)
!575 = !DILocation(line: 146, column: 17, scope: !567)
!576 = !DILocation(line: 147, column: 21, scope: !567)
!577 = !DILocation(line: 147, column: 11, scope: !567)
!578 = !DILocation(line: 147, column: 45, scope: !567)
!579 = !DILocation(line: 142, column: 5, scope: !580)
!580 = distinct !DILexicalBlock(scope: !567, file: !2, line: 141, column: 4)
!581 = !DILocation(line: 142, column: 18, scope: !580)
!582 = !DILocation(line: 143, column: 5, scope: !580)
!583 = !DILocation(line: 143, column: 18, scope: !580)
!584 = !DILocation(line: 142, column: 5, scope: !585)
!585 = distinct !DILexicalBlock(scope: !567, file: !2, line: 141, column: 4)
!586 = !DILocation(line: 142, column: 18, scope: !585)
!587 = !DILocation(line: 143, column: 5, scope: !585)
!588 = !DILocation(line: 143, column: 18, scope: !585)
!589 = !DILocation(line: 149, column: 35, scope: !590)
!590 = distinct !DILexicalBlock(scope: !527, file: !2, line: 149, column: 4)
!591 = !DILocation(line: 149, column: 29, scope: !590)
!592 = !DILocation(line: 149, column: 54, scope: !590)
!593 = !DILocation(line: 149, column: 11, scope: !590)
!594 = !DILocalVariable(name: "n", scope: !518, file: !2, line: 152, type: !199, align: 8)
!595 = !DILocation(line: 152, column: 7, scope: !518)
!596 = !DILocation(line: 152, column: 37, scope: !518)
!597 = !DILocation(line: 152, column: 11, scope: !518)
!598 = !DILocation(line: 153, column: 6, scope: !518)
!599 = !DILocation(line: 153, column: 20, scope: !518)
!600 = !DILocalVariable(name: "f", scope: !601, file: !2, line: 330, type: !109, align: 8)
!601 = distinct !DISubprogram(name: "@catch", linkageName: "@catch", scope: !205, file: !205, line: 328, scopeLine: 328, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!602 = !DILocation(line: 330, column: 12, scope: !601, inlinedAt: !603)
!603 = !DILocation(line: 154, column: 6, scope: !518)
!604 = !DILocation(line: 330, column: 16, scope: !601, inlinedAt: !603)
!605 = !DILocation(line: 330, column: 30, scope: !601, inlinedAt: !603)
!606 = !DILocation(line: 331, column: 9, scope: !601, inlinedAt: !603)
!607 = !DILocation(line: 154, column: 41, scope: !518)
!608 = !DILocation(line: 155, column: 10, scope: !609)
!609 = distinct !DILexicalBlock(scope: !518, file: !2, line: 155, column: 2)
!610 = !DILocalVariable(name: "i", scope: !611, file: !2, line: 158, type: !198, align: 8)
!611 = distinct !DILexicalBlock(scope: !609, file: !2, line: 158, column: 4)
!612 = !DILocation(line: 158, column: 8, scope: !611)
!613 = !DILocation(line: 12, column: 11, scope: !614, inlinedAt: !617)
!614 = distinct !DILexicalBlock(scope: !616, file: !615, line: 15, column: 1)
!615 = !DIFile(filename: "types.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core")
!616 = distinct !DISubprogram(name: "any_to_int", linkageName: "any_to_int", scope: !615, file: !615, line: 14, scopeLine: 14, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!617 = !DILocation(line: 158, column: 19, scope: !611)
!618 = !DILocation(line: 12, column: 36, scope: !614, inlinedAt: !617)
!619 = !DILocalVariable(name: "any_type", scope: !616, file: !2, line: 16, type: !86, align: 8)
!620 = !DILocation(line: 16, column: 9, scope: !616, inlinedAt: !617)
!621 = !DILocation(line: 16, column: 20, scope: !616, inlinedAt: !617)
!622 = !DILocalVariable(name: "kind", scope: !616, file: !2, line: 17, type: !51, align: 1)
!623 = !DILocation(line: 17, column: 11, scope: !616, inlinedAt: !617)
!624 = !DILocation(line: 17, column: 18, scope: !616, inlinedAt: !617)
!625 = !DILocation(line: 18, column: 6, scope: !616, inlinedAt: !617)
!626 = !DILocation(line: 20, column: 14, scope: !627, inlinedAt: !617)
!627 = distinct !DILexicalBlock(scope: !616, file: !615, line: 19, column: 2)
!628 = !DILocation(line: 21, column: 10, scope: !627, inlinedAt: !617)
!629 = !DILocalVariable(name: "is_mixed_signed", scope: !616, file: !2, line: 23, type: !485, align: 1)
!630 = !DILocation(line: 23, column: 7, scope: !616, inlinedAt: !617)
!631 = !DILocation(line: 23, column: 41, scope: !616, inlinedAt: !617)
!632 = !DILocation(line: 23, column: 25, scope: !616, inlinedAt: !617)
!633 = !DILocalVariable(name: "max", scope: !616, file: !2, line: 24, type: !198, align: 8)
!634 = !DILocation(line: 24, column: 8, scope: !616, inlinedAt: !617)
!635 = !DILocation(line: 24, column: 14, scope: !616, inlinedAt: !617)
!636 = !DILocalVariable(name: "min", scope: !616, file: !2, line: 25, type: !198, align: 8)
!637 = !DILocation(line: 25, column: 8, scope: !616, inlinedAt: !617)
!638 = !DILocation(line: 25, column: 14, scope: !616, inlinedAt: !617)
!639 = !DILocation(line: 28, column: 8, scope: !640, inlinedAt: !617)
!640 = distinct !DILexicalBlock(scope: !616, file: !615, line: 26, column: 2)
!641 = !DILocalVariable(name: "c", scope: !642, file: !2, line: 29, type: !643, align: 1)
!642 = distinct !DILexicalBlock(scope: !640, file: !615, line: 29, column: 4)
!643 = !DIBasicType(name: "ichar", size: 8, encoding: DW_ATE_signed_char)
!644 = !DILocation(line: 29, column: 10, scope: !642, inlinedAt: !617)
!645 = !DILocation(line: 29, column: 22, scope: !642, inlinedAt: !617)
!646 = !DILocation(line: 29, column: 16, scope: !642, inlinedAt: !617)
!647 = !DILocation(line: 30, column: 8, scope: !642, inlinedAt: !617)
!648 = !DILocation(line: 30, column: 27, scope: !642, inlinedAt: !617)
!649 = !DILocation(line: 30, column: 41, scope: !642, inlinedAt: !617)
!650 = !DILocation(line: 31, column: 12, scope: !642, inlinedAt: !617)
!651 = !DILocation(line: 32, column: 8, scope: !640, inlinedAt: !617)
!652 = !DILocalVariable(name: "s", scope: !653, file: !2, line: 33, type: !654, align: 2)
!653 = distinct !DILexicalBlock(scope: !640, file: !615, line: 33, column: 4)
!654 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!655 = !DILocation(line: 33, column: 10, scope: !653, inlinedAt: !617)
!656 = !DILocation(line: 33, column: 23, scope: !653, inlinedAt: !617)
!657 = !DILocation(line: 33, column: 16, scope: !653, inlinedAt: !617)
!658 = !DILocation(line: 34, column: 8, scope: !653, inlinedAt: !617)
!659 = !DILocation(line: 34, column: 27, scope: !653, inlinedAt: !617)
!660 = !DILocation(line: 34, column: 41, scope: !653, inlinedAt: !617)
!661 = !DILocation(line: 35, column: 8, scope: !653, inlinedAt: !617)
!662 = !DILocation(line: 35, column: 12, scope: !653, inlinedAt: !617)
!663 = !DILocation(line: 35, column: 19, scope: !653, inlinedAt: !617)
!664 = !DILocation(line: 35, column: 23, scope: !653, inlinedAt: !617)
!665 = !DILocation(line: 35, column: 35, scope: !653, inlinedAt: !617)
!666 = !DILocation(line: 36, column: 12, scope: !653, inlinedAt: !617)
!667 = !DILocation(line: 37, column: 8, scope: !640, inlinedAt: !617)
!668 = !DILocalVariable(name: "i", scope: !669, file: !2, line: 38, type: !3, align: 4)
!669 = distinct !DILexicalBlock(scope: !640, file: !615, line: 38, column: 4)
!670 = !DILocation(line: 38, column: 8, scope: !669, inlinedAt: !617)
!671 = !DILocation(line: 38, column: 19, scope: !669, inlinedAt: !617)
!672 = !DILocation(line: 38, column: 14, scope: !669, inlinedAt: !617)
!673 = !DILocation(line: 39, column: 8, scope: !669, inlinedAt: !617)
!674 = !DILocation(line: 39, column: 27, scope: !669, inlinedAt: !617)
!675 = !DILocation(line: 39, column: 41, scope: !669, inlinedAt: !617)
!676 = !DILocation(line: 40, column: 8, scope: !669, inlinedAt: !617)
!677 = !DILocation(line: 40, column: 12, scope: !669, inlinedAt: !617)
!678 = !DILocation(line: 40, column: 19, scope: !669, inlinedAt: !617)
!679 = !DILocation(line: 40, column: 23, scope: !669, inlinedAt: !617)
!680 = !DILocation(line: 40, column: 35, scope: !669, inlinedAt: !617)
!681 = !DILocation(line: 41, column: 12, scope: !669, inlinedAt: !617)
!682 = !DILocation(line: 42, column: 8, scope: !640, inlinedAt: !617)
!683 = !DILocalVariable(name: "l", scope: !684, file: !2, line: 43, type: !110, align: 8)
!684 = distinct !DILexicalBlock(scope: !640, file: !615, line: 43, column: 4)
!685 = !DILocation(line: 43, column: 9, scope: !684, inlinedAt: !617)
!686 = !DILocation(line: 43, column: 21, scope: !684, inlinedAt: !617)
!687 = !DILocation(line: 43, column: 15, scope: !684, inlinedAt: !617)
!688 = !DILocation(line: 44, column: 8, scope: !684, inlinedAt: !617)
!689 = !DILocation(line: 44, column: 27, scope: !684, inlinedAt: !617)
!690 = !DILocation(line: 44, column: 41, scope: !684, inlinedAt: !617)
!691 = !DILocation(line: 45, column: 8, scope: !684, inlinedAt: !617)
!692 = !DILocation(line: 45, column: 12, scope: !684, inlinedAt: !617)
!693 = !DILocation(line: 45, column: 19, scope: !684, inlinedAt: !617)
!694 = !DILocation(line: 45, column: 23, scope: !684, inlinedAt: !617)
!695 = !DILocation(line: 45, column: 35, scope: !684, inlinedAt: !617)
!696 = !DILocation(line: 46, column: 12, scope: !684, inlinedAt: !617)
!697 = !DILocation(line: 47, column: 8, scope: !640, inlinedAt: !617)
!698 = !DILocalVariable(name: "i", scope: !699, file: !2, line: 48, type: !700, align: 16)
!699 = distinct !DILexicalBlock(scope: !640, file: !615, line: 48, column: 4)
!700 = !DIBasicType(name: "int128", size: 128, encoding: DW_ATE_signed)
!701 = !DILocation(line: 48, column: 11, scope: !699, inlinedAt: !617)
!702 = !DILocation(line: 48, column: 25, scope: !699, inlinedAt: !617)
!703 = !DILocation(line: 48, column: 17, scope: !699, inlinedAt: !617)
!704 = !DILocation(line: 49, column: 8, scope: !699, inlinedAt: !617)
!705 = !DILocation(line: 49, column: 27, scope: !699, inlinedAt: !617)
!706 = !DILocation(line: 49, column: 41, scope: !699, inlinedAt: !617)
!707 = !DILocation(line: 50, column: 8, scope: !699, inlinedAt: !617)
!708 = !DILocation(line: 50, column: 12, scope: !699, inlinedAt: !617)
!709 = !DILocation(line: 50, column: 19, scope: !699, inlinedAt: !617)
!710 = !DILocation(line: 50, column: 23, scope: !699, inlinedAt: !617)
!711 = !DILocation(line: 50, column: 35, scope: !699, inlinedAt: !617)
!712 = !DILocation(line: 51, column: 12, scope: !699, inlinedAt: !617)
!713 = !DILocation(line: 52, column: 8, scope: !640, inlinedAt: !617)
!714 = !DILocalVariable(name: "c", scope: !715, file: !2, line: 53, type: !8, align: 1)
!715 = distinct !DILexicalBlock(scope: !640, file: !615, line: 53, column: 4)
!716 = !DILocation(line: 53, column: 9, scope: !715, inlinedAt: !617)
!717 = !DILocation(line: 53, column: 21, scope: !715, inlinedAt: !617)
!718 = !DILocation(line: 53, column: 15, scope: !715, inlinedAt: !617)
!719 = !DILocation(line: 54, column: 8, scope: !715, inlinedAt: !617)
!720 = !DILocation(line: 54, column: 12, scope: !715, inlinedAt: !617)
!721 = !DILocation(line: 54, column: 24, scope: !715, inlinedAt: !617)
!722 = !DILocation(line: 55, column: 12, scope: !715, inlinedAt: !617)
!723 = !DILocation(line: 56, column: 8, scope: !640, inlinedAt: !617)
!724 = !DILocalVariable(name: "s", scope: !725, file: !2, line: 57, type: !726, align: 2)
!725 = distinct !DILexicalBlock(scope: !640, file: !615, line: 57, column: 4)
!726 = !DIBasicType(name: "ushort", size: 16, encoding: DW_ATE_unsigned)
!727 = !DILocation(line: 57, column: 11, scope: !725, inlinedAt: !617)
!728 = !DILocation(line: 57, column: 25, scope: !725, inlinedAt: !617)
!729 = !DILocation(line: 57, column: 17, scope: !725, inlinedAt: !617)
!730 = !DILocation(line: 58, column: 8, scope: !725, inlinedAt: !617)
!731 = !DILocation(line: 58, column: 12, scope: !725, inlinedAt: !617)
!732 = !DILocation(line: 58, column: 19, scope: !725, inlinedAt: !617)
!733 = !DILocation(line: 58, column: 23, scope: !725, inlinedAt: !617)
!734 = !DILocation(line: 58, column: 35, scope: !725, inlinedAt: !617)
!735 = !DILocation(line: 59, column: 12, scope: !725, inlinedAt: !617)
!736 = !DILocation(line: 60, column: 8, scope: !640, inlinedAt: !617)
!737 = !DILocalVariable(name: "i", scope: !738, file: !2, line: 61, type: !88, align: 4)
!738 = distinct !DILexicalBlock(scope: !640, file: !615, line: 61, column: 4)
!739 = !DILocation(line: 61, column: 9, scope: !738, inlinedAt: !617)
!740 = !DILocation(line: 61, column: 21, scope: !738, inlinedAt: !617)
!741 = !DILocation(line: 61, column: 15, scope: !738, inlinedAt: !617)
!742 = !DILocation(line: 62, column: 8, scope: !738, inlinedAt: !617)
!743 = !DILocation(line: 62, column: 12, scope: !738, inlinedAt: !617)
!744 = !DILocation(line: 62, column: 19, scope: !738, inlinedAt: !617)
!745 = !DILocation(line: 62, column: 23, scope: !738, inlinedAt: !617)
!746 = !DILocation(line: 62, column: 35, scope: !738, inlinedAt: !617)
!747 = !DILocation(line: 63, column: 12, scope: !738, inlinedAt: !617)
!748 = !DILocation(line: 64, column: 8, scope: !640, inlinedAt: !617)
!749 = !DILocalVariable(name: "l", scope: !750, file: !2, line: 65, type: !199, align: 8)
!750 = distinct !DILexicalBlock(scope: !640, file: !615, line: 65, column: 4)
!751 = !DILocation(line: 65, column: 10, scope: !750, inlinedAt: !617)
!752 = !DILocation(line: 65, column: 23, scope: !750, inlinedAt: !617)
!753 = !DILocation(line: 65, column: 16, scope: !750, inlinedAt: !617)
!754 = !DILocation(line: 66, column: 8, scope: !750, inlinedAt: !617)
!755 = !DILocation(line: 66, column: 12, scope: !750, inlinedAt: !617)
!756 = !DILocation(line: 66, column: 19, scope: !750, inlinedAt: !617)
!757 = !DILocation(line: 66, column: 23, scope: !750, inlinedAt: !617)
!758 = !DILocation(line: 66, column: 35, scope: !750, inlinedAt: !617)
!759 = !DILocation(line: 67, column: 12, scope: !750, inlinedAt: !617)
!760 = !DILocation(line: 68, column: 8, scope: !640, inlinedAt: !617)
!761 = !DILocalVariable(name: "i", scope: !762, file: !2, line: 69, type: !763, align: 16)
!762 = distinct !DILexicalBlock(scope: !640, file: !615, line: 69, column: 4)
!763 = !DIBasicType(name: "uint128", size: 128, encoding: DW_ATE_unsigned)
!764 = !DILocation(line: 69, column: 12, scope: !762, inlinedAt: !617)
!765 = !DILocation(line: 69, column: 27, scope: !762, inlinedAt: !617)
!766 = !DILocation(line: 69, column: 18, scope: !762, inlinedAt: !617)
!767 = !DILocation(line: 70, column: 8, scope: !762, inlinedAt: !617)
!768 = !DILocation(line: 70, column: 12, scope: !762, inlinedAt: !617)
!769 = !DILocation(line: 70, column: 19, scope: !762, inlinedAt: !617)
!770 = !DILocation(line: 70, column: 23, scope: !762, inlinedAt: !617)
!771 = !DILocation(line: 70, column: 35, scope: !762, inlinedAt: !617)
!772 = !DILocation(line: 71, column: 12, scope: !762, inlinedAt: !617)
!773 = !DILocation(line: 164, column: 2, scope: !774, inlinedAt: !775)
!774 = distinct !DISubprogram(name: "unreachable", linkageName: "unreachable", scope: !205, file: !205, line: 161, scopeLine: 161, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!775 = !DILocation(line: 73, column: 4, scope: !776, inlinedAt: !617)
!776 = distinct !DILexicalBlock(scope: !640, file: !615, line: 73, column: 4)
!777 = !DILocation(line: 166, column: 2, scope: !774, inlinedAt: !775)
!778 = !DILocation(line: 159, column: 11, scope: !611)
!779 = !DILocation(line: 159, column: 15, scope: !611)
!780 = !DILocation(line: 159, column: 88, scope: !611)
!781 = !DILocation(line: 160, column: 27, scope: !611)
!782 = !DILocation(line: 160, column: 42, scope: !611)
!783 = !DILocation(line: 160, column: 11, scope: !611)
!784 = !DILocation(line: 162, column: 8, scope: !785)
!785 = distinct !DILexicalBlock(scope: !609, file: !2, line: 162, column: 4)
!786 = !DILocalVariable(name: "param", scope: !787, file: !2, line: 164, type: !788, align: 8)
!787 = distinct !DILexicalBlock(scope: !785, file: !2, line: 163, column: 4)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ReflectedParam*", baseType: !789, size: 64, align: 64, dwarfAddressSpace: 0)
!789 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReflectedParam", scope: !2, file: !2, line: 1, size: 192, align: 64, elements: !790, identifier: "ReflectedParam")
!790 = !{!791, !792}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !789, file: !2, baseType: !329, size: 128, align: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !789, file: !2, baseType: !86, size: 64, align: 64, offset: 128)
!793 = !DILocation(line: 164, column: 21, scope: !787)
!794 = !DILocation(line: 164, column: 29, scope: !787)
!795 = !DILocation(line: 165, column: 12, scope: !787)
!796 = !DILocation(line: 166, column: 25, scope: !787)
!797 = !DILocation(line: 166, column: 9, scope: !787)
!798 = !DILocation(line: 166, column: 39, scope: !787)
!799 = !DILocation(line: 168, column: 11, scope: !785)
!800 = !DILocation(line: 170, column: 11, scope: !801)
!801 = distinct !DILexicalBlock(scope: !609, file: !2, line: 170, column: 4)
!802 = !DILocation(line: 172, column: 11, scope: !803)
!803 = distinct !DILexicalBlock(scope: !609, file: !2, line: 172, column: 4)
!804 = !DILocation(line: 174, column: 11, scope: !805)
!805 = distinct !DILexicalBlock(scope: !609, file: !2, line: 174, column: 4)
!806 = !DILocation(line: 176, column: 8, scope: !807)
!807 = distinct !DILexicalBlock(scope: !609, file: !2, line: 176, column: 4)
!808 = !DILocation(line: 178, column: 30, scope: !809)
!809 = distinct !DILexicalBlock(scope: !807, file: !2, line: 177, column: 4)
!810 = !DILocation(line: 178, column: 12, scope: !809)
!811 = !DILocation(line: 180, column: 8, scope: !807)
!812 = !DILocation(line: 182, column: 30, scope: !813)
!813 = distinct !DILexicalBlock(scope: !807, file: !2, line: 181, column: 4)
!814 = !DILocation(line: 182, column: 47, scope: !813)
!815 = !DILocation(line: 182, column: 74, scope: !813)
!816 = !DILocation(line: 182, column: 12, scope: !813)
!817 = !DILocation(line: 184, column: 8, scope: !807)
!818 = !DILocation(line: 186, column: 30, scope: !819)
!819 = distinct !DILexicalBlock(scope: !807, file: !2, line: 185, column: 4)
!820 = !DILocation(line: 186, column: 47, scope: !819)
!821 = !DILocation(line: 186, column: 74, scope: !819)
!822 = !DILocation(line: 186, column: 12, scope: !819)
!823 = !DILocation(line: 199, column: 20, scope: !824, inlinedAt: !825)
!824 = distinct !DISubprogram(name: "as_inner", linkageName: "as_inner", scope: !205, file: !205, line: 197, scopeLine: 197, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!825 = !DILocation(line: 188, column: 24, scope: !807)
!826 = !DILocation(line: 199, column: 30, scope: !824, inlinedAt: !825)
!827 = !DILocation(line: 188, column: 11, scope: !807)
!828 = !DILocalVariable(name: "inner", scope: !829, file: !2, line: 190, type: !86, align: 8)
!829 = distinct !DILexicalBlock(scope: !609, file: !2, line: 190, column: 4)
!830 = !DILocation(line: 190, column: 11, scope: !829)
!831 = !DILocation(line: 190, column: 19, scope: !829)
!832 = !DILocalVariable(name: "pointer", scope: !829, file: !2, line: 191, type: !833, align: 8)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "void**", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!834 = !DILocation(line: 191, column: 11, scope: !829)
!835 = !DILocation(line: 191, column: 21, scope: !829)
!836 = !DILocation(line: 192, column: 8, scope: !829)
!837 = !DILocalVariable(name: "deref", scope: !838, file: !2, line: 194, type: !334, align: 8)
!838 = distinct !DILexicalBlock(scope: !829, file: !2, line: 193, column: 4)
!839 = !DILocation(line: 194, column: 9, scope: !838)
!840 = !DILocation(line: 194, column: 27, scope: !838)
!841 = !DILocation(line: 189, column: 20, scope: !842, inlinedAt: !843)
!842 = distinct !DISubprogram(name: "any_make", linkageName: "any_make", scope: !205, file: !205, line: 187, scopeLine: 187, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!843 = !DILocation(line: 194, column: 17, scope: !838)
!844 = !DILocation(line: 189, column: 25, scope: !842, inlinedAt: !843)
!845 = !DILocation(line: 195, column: 35, scope: !838)
!846 = !DILocation(line: 195, column: 9, scope: !838)
!847 = !DILocation(line: 196, column: 9, scope: !838)
!848 = !DILocation(line: 196, column: 23, scope: !838)
!849 = !DILocalVariable(name: "f", scope: !850, file: !2, line: 330, type: !109, align: 8)
!850 = distinct !DISubprogram(name: "@catch", linkageName: "@catch", scope: !205, file: !205, line: 328, scopeLine: 328, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!851 = !DILocation(line: 330, column: 12, scope: !850, inlinedAt: !852)
!852 = !DILocation(line: 197, column: 9, scope: !838)
!853 = !DILocation(line: 330, column: 16, scope: !850, inlinedAt: !852)
!854 = !DILocation(line: 330, column: 30, scope: !850, inlinedAt: !852)
!855 = !DILocation(line: 331, column: 9, scope: !850, inlinedAt: !852)
!856 = !DILocation(line: 197, column: 44, scope: !838)
!857 = !DILocalVariable(name: "flags", scope: !829, file: !2, line: 199, type: !88, align: 4)
!858 = !DILocation(line: 199, column: 15, scope: !829)
!859 = !DILocation(line: 199, column: 23, scope: !829)
!860 = !DILocalVariable(name: "width", scope: !829, file: !2, line: 200, type: !88, align: 4)
!861 = !DILocation(line: 200, column: 9, scope: !829)
!862 = !DILocation(line: 200, column: 17, scope: !829)
!863 = !DILocation(line: 206, column: 4, scope: !829)
!864 = !DILocation(line: 206, column: 17, scope: !829)
!865 = !DILocation(line: 207, column: 4, scope: !829)
!866 = !DILocation(line: 203, column: 5, scope: !867)
!867 = distinct !DILexicalBlock(scope: !829, file: !2, line: 202, column: 4)
!868 = !DILocation(line: 203, column: 18, scope: !867)
!869 = !DILocation(line: 204, column: 5, scope: !867)
!870 = !DILocation(line: 204, column: 18, scope: !867)
!871 = !DILocation(line: 208, column: 11, scope: !829)
!872 = !DILocation(line: 203, column: 5, scope: !873)
!873 = distinct !DILexicalBlock(scope: !829, file: !2, line: 202, column: 4)
!874 = !DILocation(line: 203, column: 18, scope: !873)
!875 = !DILocation(line: 204, column: 5, scope: !873)
!876 = !DILocation(line: 204, column: 18, scope: !873)
!877 = !DILocation(line: 203, column: 5, scope: !878)
!878 = distinct !DILexicalBlock(scope: !829, file: !2, line: 202, column: 4)
!879 = !DILocation(line: 203, column: 18, scope: !878)
!880 = !DILocation(line: 204, column: 5, scope: !878)
!881 = !DILocation(line: 204, column: 18, scope: !878)
!882 = !DILocalVariable(name: "flags", scope: !883, file: !2, line: 211, type: !88, align: 4)
!883 = distinct !DILexicalBlock(scope: !609, file: !2, line: 211, column: 4)
!884 = !DILocation(line: 211, column: 15, scope: !883)
!885 = !DILocation(line: 211, column: 23, scope: !883)
!886 = !DILocalVariable(name: "width", scope: !883, file: !2, line: 212, type: !88, align: 4)
!887 = !DILocation(line: 212, column: 9, scope: !883)
!888 = !DILocation(line: 212, column: 17, scope: !883)
!889 = !DILocation(line: 218, column: 4, scope: !883)
!890 = !DILocation(line: 219, column: 4, scope: !883)
!891 = !DILocation(line: 219, column: 17, scope: !883)
!892 = !DILocalVariable(name: "inner", scope: !883, file: !2, line: 220, type: !86, align: 8)
!893 = !DILocation(line: 220, column: 11, scope: !883)
!894 = !DILocation(line: 220, column: 19, scope: !883)
!895 = !DILocalVariable(name: "size", scope: !883, file: !2, line: 221, type: !198, align: 8)
!896 = !DILocation(line: 221, column: 8, scope: !883)
!897 = !DILocation(line: 221, column: 15, scope: !883)
!898 = !DILocalVariable(name: "alen", scope: !883, file: !2, line: 222, type: !198, align: 8)
!899 = !DILocation(line: 222, column: 8, scope: !883)
!900 = !DILocation(line: 222, column: 15, scope: !883)
!901 = !DILocalVariable(name: "ptr", scope: !883, file: !2, line: 224, type: !22, align: 8)
!902 = !DILocation(line: 224, column: 10, scope: !883)
!903 = !DILocation(line: 224, column: 23, scope: !883)
!904 = !DILocalVariable(name: "len", scope: !883, file: !2, line: 225, type: !198, align: 8)
!905 = !DILocation(line: 225, column: 8, scope: !883)
!906 = !DILocation(line: 225, column: 14, scope: !883)
!907 = !DILocation(line: 215, column: 5, scope: !908)
!908 = distinct !DILexicalBlock(scope: !883, file: !2, line: 214, column: 4)
!909 = !DILocation(line: 215, column: 18, scope: !908)
!910 = !DILocation(line: 216, column: 5, scope: !908)
!911 = !DILocation(line: 216, column: 18, scope: !908)
!912 = !DILocalVariable(name: "i", scope: !913, file: !2, line: 226, type: !198, align: 8)
!913 = distinct !DILexicalBlock(scope: !883, file: !2, line: 226, column: 4)
!914 = !DILocation(line: 226, column: 13, scope: !913)
!915 = !DILocation(line: 226, column: 17, scope: !913)
!916 = !DILocation(line: 226, column: 20, scope: !913)
!917 = !DILocation(line: 226, column: 24, scope: !913)
!918 = !DILocation(line: 228, column: 9, scope: !919)
!919 = distinct !DILexicalBlock(scope: !913, file: !2, line: 227, column: 4)
!920 = !DILocation(line: 228, column: 17, scope: !919)
!921 = !DILocation(line: 228, column: 24, scope: !919)
!922 = !DILocation(line: 215, column: 5, scope: !923)
!923 = distinct !DILexicalBlock(scope: !883, file: !2, line: 214, column: 4)
!924 = !DILocation(line: 215, column: 18, scope: !923)
!925 = !DILocation(line: 216, column: 5, scope: !923)
!926 = !DILocation(line: 216, column: 18, scope: !923)
!927 = !DILocation(line: 229, column: 5, scope: !919)
!928 = !DILocation(line: 189, column: 20, scope: !929, inlinedAt: !930)
!929 = distinct !DISubprogram(name: "any_make", linkageName: "any_make", scope: !205, file: !205, line: 187, scopeLine: 187, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!930 = !DILocation(line: 229, column: 25, scope: !919)
!931 = !DILocation(line: 189, column: 25, scope: !929, inlinedAt: !930)
!932 = !DILocation(line: 229, column: 12, scope: !919)
!933 = !DILocation(line: 215, column: 5, scope: !934)
!934 = distinct !DILexicalBlock(scope: !883, file: !2, line: 214, column: 4)
!935 = !DILocation(line: 215, column: 18, scope: !934)
!936 = !DILocation(line: 216, column: 5, scope: !934)
!937 = !DILocation(line: 216, column: 18, scope: !934)
!938 = !DILocation(line: 230, column: 5, scope: !919)
!939 = !DILocation(line: 230, column: 12, scope: !919)
!940 = !DILocation(line: 226, column: 30, scope: !913)
!941 = !DILocation(line: 232, column: 4, scope: !883)
!942 = !DILocation(line: 232, column: 11, scope: !883)
!943 = !DILocation(line: 215, column: 5, scope: !944)
!944 = distinct !DILexicalBlock(scope: !883, file: !2, line: 214, column: 4)
!945 = !DILocation(line: 215, column: 18, scope: !944)
!946 = !DILocation(line: 216, column: 5, scope: !944)
!947 = !DILocation(line: 216, column: 18, scope: !944)
!948 = !DILocation(line: 233, column: 11, scope: !883)
!949 = !DILocation(line: 215, column: 5, scope: !950)
!950 = distinct !DILexicalBlock(scope: !883, file: !2, line: 214, column: 4)
!951 = !DILocation(line: 215, column: 18, scope: !950)
!952 = !DILocation(line: 216, column: 5, scope: !950)
!953 = !DILocation(line: 216, column: 18, scope: !950)
!954 = !DILocalVariable(name: "flags", scope: !955, file: !2, line: 235, type: !88, align: 4)
!955 = distinct !DILexicalBlock(scope: !609, file: !2, line: 235, column: 4)
!956 = !DILocation(line: 235, column: 15, scope: !955)
!957 = !DILocation(line: 235, column: 23, scope: !955)
!958 = !DILocalVariable(name: "width", scope: !955, file: !2, line: 236, type: !88, align: 4)
!959 = !DILocation(line: 236, column: 9, scope: !955)
!960 = !DILocation(line: 236, column: 17, scope: !955)
!961 = !DILocation(line: 242, column: 4, scope: !955)
!962 = !DILocation(line: 243, column: 4, scope: !955)
!963 = !DILocation(line: 243, column: 17, scope: !955)
!964 = !DILocalVariable(name: "inner", scope: !955, file: !2, line: 245, type: !86, align: 8)
!965 = !DILocation(line: 245, column: 11, scope: !955)
!966 = !DILocation(line: 245, column: 19, scope: !955)
!967 = !DILocalVariable(name: "size", scope: !955, file: !2, line: 246, type: !198, align: 8)
!968 = !DILocation(line: 246, column: 8, scope: !955)
!969 = !DILocation(line: 246, column: 15, scope: !955)
!970 = !DILocalVariable(name: "vlen", scope: !955, file: !2, line: 247, type: !198, align: 8)
!971 = !DILocation(line: 247, column: 8, scope: !955)
!972 = !DILocation(line: 247, column: 15, scope: !955)
!973 = !DILocalVariable(name: "ptr", scope: !955, file: !2, line: 249, type: !22, align: 8)
!974 = !DILocation(line: 249, column: 10, scope: !955)
!975 = !DILocation(line: 249, column: 23, scope: !955)
!976 = !DILocalVariable(name: "len", scope: !955, file: !2, line: 250, type: !198, align: 8)
!977 = !DILocation(line: 250, column: 8, scope: !955)
!978 = !DILocation(line: 250, column: 14, scope: !955)
!979 = !DILocation(line: 239, column: 5, scope: !980)
!980 = distinct !DILexicalBlock(scope: !955, file: !2, line: 238, column: 4)
!981 = !DILocation(line: 239, column: 18, scope: !980)
!982 = !DILocation(line: 240, column: 5, scope: !980)
!983 = !DILocation(line: 240, column: 18, scope: !980)
!984 = !DILocalVariable(name: "i", scope: !985, file: !2, line: 251, type: !198, align: 8)
!985 = distinct !DILexicalBlock(scope: !955, file: !2, line: 251, column: 4)
!986 = !DILocation(line: 251, column: 13, scope: !985)
!987 = !DILocation(line: 251, column: 17, scope: !985)
!988 = !DILocation(line: 251, column: 20, scope: !985)
!989 = !DILocation(line: 251, column: 24, scope: !985)
!990 = !DILocation(line: 253, column: 9, scope: !991)
!991 = distinct !DILexicalBlock(scope: !985, file: !2, line: 252, column: 4)
!992 = !DILocation(line: 253, column: 17, scope: !991)
!993 = !DILocation(line: 253, column: 24, scope: !991)
!994 = !DILocation(line: 239, column: 5, scope: !995)
!995 = distinct !DILexicalBlock(scope: !955, file: !2, line: 238, column: 4)
!996 = !DILocation(line: 239, column: 18, scope: !995)
!997 = !DILocation(line: 240, column: 5, scope: !995)
!998 = !DILocation(line: 240, column: 18, scope: !995)
!999 = !DILocation(line: 254, column: 5, scope: !991)
!1000 = !DILocation(line: 189, column: 20, scope: !1001, inlinedAt: !1002)
!1001 = distinct !DISubprogram(name: "any_make", linkageName: "any_make", scope: !205, file: !205, line: 187, scopeLine: 187, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1002 = !DILocation(line: 254, column: 25, scope: !991)
!1003 = !DILocation(line: 189, column: 25, scope: !1001, inlinedAt: !1002)
!1004 = !DILocation(line: 254, column: 12, scope: !991)
!1005 = !DILocation(line: 239, column: 5, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !955, file: !2, line: 238, column: 4)
!1007 = !DILocation(line: 239, column: 18, scope: !1006)
!1008 = !DILocation(line: 240, column: 5, scope: !1006)
!1009 = !DILocation(line: 240, column: 18, scope: !1006)
!1010 = !DILocation(line: 255, column: 5, scope: !991)
!1011 = !DILocation(line: 255, column: 12, scope: !991)
!1012 = !DILocation(line: 251, column: 30, scope: !985)
!1013 = !DILocation(line: 257, column: 4, scope: !955)
!1014 = !DILocation(line: 257, column: 11, scope: !955)
!1015 = !DILocation(line: 239, column: 5, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !955, file: !2, line: 238, column: 4)
!1017 = !DILocation(line: 239, column: 18, scope: !1016)
!1018 = !DILocation(line: 240, column: 5, scope: !1016)
!1019 = !DILocation(line: 240, column: 18, scope: !1016)
!1020 = !DILocation(line: 258, column: 11, scope: !955)
!1021 = !DILocation(line: 239, column: 5, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !955, file: !2, line: 238, column: 4)
!1023 = !DILocation(line: 239, column: 18, scope: !1022)
!1024 = !DILocation(line: 240, column: 5, scope: !1022)
!1025 = !DILocation(line: 240, column: 18, scope: !1022)
!1026 = !DILocalVariable(name: "inner", scope: !1027, file: !2, line: 261, type: !86, align: 8)
!1027 = distinct !DILexicalBlock(scope: !609, file: !2, line: 261, column: 4)
!1028 = !DILocation(line: 261, column: 11, scope: !1027)
!1029 = !DILocation(line: 261, column: 19, scope: !1027)
!1030 = !DILocation(line: 262, column: 8, scope: !1027)
!1031 = !DILocation(line: 262, column: 38, scope: !1027)
!1032 = !DILocalVariable(name: "flags", scope: !1027, file: !2, line: 263, type: !88, align: 4)
!1033 = !DILocation(line: 263, column: 15, scope: !1027)
!1034 = !DILocation(line: 263, column: 23, scope: !1027)
!1035 = !DILocalVariable(name: "width", scope: !1027, file: !2, line: 264, type: !88, align: 4)
!1036 = !DILocation(line: 264, column: 9, scope: !1027)
!1037 = !DILocation(line: 264, column: 17, scope: !1027)
!1038 = !DILocation(line: 270, column: 4, scope: !1027)
!1039 = !DILocation(line: 271, column: 4, scope: !1027)
!1040 = !DILocation(line: 271, column: 17, scope: !1027)
!1041 = !DILocalVariable(name: "size", scope: !1027, file: !2, line: 272, type: !198, align: 8)
!1042 = !DILocation(line: 272, column: 8, scope: !1027)
!1043 = !DILocation(line: 272, column: 15, scope: !1027)
!1044 = !DILocalVariable(name: "temp", scope: !1027, file: !2, line: 274, type: !1045, align: 8)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "String*", baseType: !329, size: 64, align: 64, dwarfAddressSpace: 0)
!1046 = !DILocation(line: 274, column: 12, scope: !1027)
!1047 = !DILocation(line: 274, column: 26, scope: !1027)
!1048 = !DILocalVariable(name: "ptr", scope: !1027, file: !2, line: 275, type: !22, align: 8)
!1049 = !DILocation(line: 275, column: 10, scope: !1027)
!1050 = !DILocation(line: 275, column: 23, scope: !1027)
!1051 = !DILocalVariable(name: "slen", scope: !1027, file: !2, line: 276, type: !198, align: 8)
!1052 = !DILocation(line: 276, column: 8, scope: !1027)
!1053 = !DILocation(line: 276, column: 15, scope: !1027)
!1054 = !DILocalVariable(name: "len", scope: !1027, file: !2, line: 277, type: !198, align: 8)
!1055 = !DILocation(line: 277, column: 8, scope: !1027)
!1056 = !DILocation(line: 277, column: 14, scope: !1027)
!1057 = !DILocation(line: 267, column: 5, scope: !1058)
!1058 = distinct !DILexicalBlock(scope: !1027, file: !2, line: 266, column: 4)
!1059 = !DILocation(line: 267, column: 18, scope: !1058)
!1060 = !DILocation(line: 268, column: 5, scope: !1058)
!1061 = !DILocation(line: 268, column: 18, scope: !1058)
!1062 = !DILocalVariable(name: "i", scope: !1063, file: !2, line: 278, type: !198, align: 8)
!1063 = distinct !DILexicalBlock(scope: !1027, file: !2, line: 278, column: 4)
!1064 = !DILocation(line: 278, column: 13, scope: !1063)
!1065 = !DILocation(line: 278, column: 17, scope: !1063)
!1066 = !DILocation(line: 278, column: 20, scope: !1063)
!1067 = !DILocation(line: 278, column: 24, scope: !1063)
!1068 = !DILocation(line: 280, column: 9, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1063, file: !2, line: 279, column: 4)
!1070 = !DILocation(line: 280, column: 17, scope: !1069)
!1071 = !DILocation(line: 280, column: 24, scope: !1069)
!1072 = !DILocation(line: 267, column: 5, scope: !1073)
!1073 = distinct !DILexicalBlock(scope: !1027, file: !2, line: 266, column: 4)
!1074 = !DILocation(line: 267, column: 18, scope: !1073)
!1075 = !DILocation(line: 268, column: 5, scope: !1073)
!1076 = !DILocation(line: 268, column: 18, scope: !1073)
!1077 = !DILocation(line: 281, column: 5, scope: !1069)
!1078 = !DILocation(line: 189, column: 20, scope: !1079, inlinedAt: !1080)
!1079 = distinct !DISubprogram(name: "any_make", linkageName: "any_make", scope: !205, file: !205, line: 187, scopeLine: 187, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1080 = !DILocation(line: 281, column: 25, scope: !1069)
!1081 = !DILocation(line: 189, column: 25, scope: !1079, inlinedAt: !1080)
!1082 = !DILocation(line: 281, column: 12, scope: !1069)
!1083 = !DILocation(line: 267, column: 5, scope: !1084)
!1084 = distinct !DILexicalBlock(scope: !1027, file: !2, line: 266, column: 4)
!1085 = !DILocation(line: 267, column: 18, scope: !1084)
!1086 = !DILocation(line: 268, column: 5, scope: !1084)
!1087 = !DILocation(line: 268, column: 18, scope: !1084)
!1088 = !DILocation(line: 282, column: 5, scope: !1069)
!1089 = !DILocation(line: 282, column: 12, scope: !1069)
!1090 = !DILocation(line: 278, column: 30, scope: !1063)
!1091 = !DILocation(line: 284, column: 4, scope: !1027)
!1092 = !DILocation(line: 284, column: 11, scope: !1027)
!1093 = !DILocation(line: 267, column: 5, scope: !1094)
!1094 = distinct !DILexicalBlock(scope: !1027, file: !2, line: 266, column: 4)
!1095 = !DILocation(line: 267, column: 18, scope: !1094)
!1096 = !DILocation(line: 268, column: 5, scope: !1094)
!1097 = !DILocation(line: 268, column: 18, scope: !1094)
!1098 = !DILocation(line: 285, column: 11, scope: !1027)
!1099 = !DILocation(line: 267, column: 5, scope: !1100)
!1100 = distinct !DILexicalBlock(scope: !1027, file: !2, line: 266, column: 4)
!1101 = !DILocation(line: 267, column: 18, scope: !1100)
!1102 = !DILocation(line: 268, column: 5, scope: !1100)
!1103 = !DILocation(line: 268, column: 18, scope: !1100)
!1104 = !DILocation(line: 164, column: 2, scope: !1105, inlinedAt: !1106)
!1105 = distinct !DISubprogram(name: "unreachable", linkageName: "unreachable", scope: !205, file: !205, line: 161, scopeLine: 161, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1106 = !DILocation(line: 288, column: 4, scope: !1107)
!1107 = distinct !DILexicalBlock(scope: !609, file: !2, line: 288, column: 4)
!1108 = !DILocation(line: 166, column: 2, scope: !1105, inlinedAt: !1106)
!1109 = !DILocation(line: 291, column: 9, scope: !518)
!1110 = distinct !DISubprogram(name: "vprintf", linkageName: "std.io.Formatter.vprintf", scope: !2, file: !2, line: 323, type: !309, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1111 = !DILocation(line: 324, column: 1, scope: !1110)
!1112 = !DILocalVariable(name: "self", arg: 1, scope: !1110, file: !2, line: 323, type: !312)
!1113 = !DILocation(line: 323, column: 27, scope: !1110)
!1114 = !DILocalVariable(name: "format", arg: 2, scope: !1110, file: !2, line: 323, type: !329)
!1115 = !DILocation(line: 323, column: 41, scope: !1110)
!1116 = !DILocalVariable(name: "anys", arg: 3, scope: !1110, file: !2, line: 323, type: !330)
!1117 = !DILocation(line: 323, column: 55, scope: !1110)
!1118 = !DILocation(line: 325, column: 2, scope: !1110)
!1119 = !DILocation(line: 325, column: 21, scope: !1110)
!1120 = !DILocation(line: 326, column: 7, scope: !1110)
!1121 = !DILocation(line: 329, column: 3, scope: !1122)
!1122 = distinct !DILexicalBlock(scope: !1110, file: !2, line: 327, column: 2)
!1123 = !DILocation(line: 329, column: 18, scope: !1122)
!1124 = !DILocalVariable(name: "total_len", scope: !1110, file: !2, line: 331, type: !198, align: 8)
!1125 = !DILocation(line: 331, column: 6, scope: !1110)
!1126 = !DILocalVariable(name: "format_len", scope: !1110, file: !2, line: 332, type: !198, align: 8)
!1127 = !DILocation(line: 332, column: 6, scope: !1110)
!1128 = !DILocation(line: 332, column: 19, scope: !1110)
!1129 = !DILocalVariable(name: "variant_index", scope: !1110, file: !2, line: 333, type: !198, align: 8)
!1130 = !DILocation(line: 333, column: 6, scope: !1110)
!1131 = !DILocation(line: 333, column: 22, scope: !1110)
!1132 = !DILocalVariable(name: "i", scope: !1133, file: !2, line: 334, type: !198, align: 8)
!1133 = distinct !DILexicalBlock(scope: !1110, file: !2, line: 334, column: 2)
!1134 = !DILocation(line: 334, column: 11, scope: !1133)
!1135 = !DILocation(line: 334, column: 15, scope: !1133)
!1136 = !DILocation(line: 334, column: 18, scope: !1133)
!1137 = !DILocation(line: 334, column: 22, scope: !1133)
!1138 = !DILocalVariable(name: "c", scope: !1139, file: !2, line: 337, type: !8, align: 1)
!1139 = distinct !DILexicalBlock(scope: !1133, file: !2, line: 335, column: 2)
!1140 = !DILocation(line: 337, column: 8, scope: !1139)
!1141 = !DILocation(line: 337, column: 12, scope: !1139)
!1142 = !DILocation(line: 337, column: 19, scope: !1139)
!1143 = !DILocation(line: 338, column: 7, scope: !1139)
!1144 = !DILocation(line: 341, column: 4, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1139, file: !2, line: 339, column: 3)
!1146 = !DILocation(line: 341, column: 17, scope: !1145)
!1147 = !DILocation(line: 342, column: 4, scope: !1145)
!1148 = !DILocation(line: 344, column: 3, scope: !1139)
!1149 = !DILocation(line: 345, column: 7, scope: !1139)
!1150 = !DILocation(line: 345, column: 12, scope: !1139)
!1151 = !DILocation(line: 303, column: 3, scope: !1152, inlinedAt: !1153)
!1152 = distinct !DISubprogram(name: "@report_fault", linkageName: "@report_fault", scope: !2, file: !2, line: 301, scopeLine: 301, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1153 = !DILocation(line: 345, column: 31, scope: !1139)
!1154 = !DILocation(line: 304, column: 9, scope: !1152, inlinedAt: !1153)
!1155 = !DILocation(line: 346, column: 7, scope: !1139)
!1156 = !DILocation(line: 346, column: 14, scope: !1139)
!1157 = !DILocation(line: 347, column: 7, scope: !1139)
!1158 = !DILocation(line: 349, column: 4, scope: !1159)
!1159 = distinct !DILexicalBlock(scope: !1139, file: !2, line: 348, column: 3)
!1160 = !DILocation(line: 349, column: 17, scope: !1159)
!1161 = !DILocation(line: 350, column: 4, scope: !1159)
!1162 = !DILocation(line: 353, column: 3, scope: !1139)
!1163 = !DILocation(line: 354, column: 3, scope: !1139)
!1164 = !DILocation(line: 358, column: 15, scope: !1165)
!1165 = distinct !DILexicalBlock(scope: !1166, file: !2, line: 358, column: 15)
!1166 = distinct !DILexicalBlock(scope: !1167, file: !2, line: 356, column: 4)
!1167 = distinct !DILexicalBlock(scope: !1168, file: !2, line: 355, column: 3)
!1168 = distinct !DILexicalBlock(scope: !1139, file: !2, line: 354, column: 3)
!1169 = !DILocation(line: 358, column: 36, scope: !1165)
!1170 = !DILocation(line: 359, column: 15, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1166, file: !2, line: 359, column: 15)
!1172 = !DILocation(line: 359, column: 33, scope: !1171)
!1173 = !DILocation(line: 360, column: 15, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !1166, file: !2, line: 360, column: 15)
!1175 = !DILocation(line: 360, column: 33, scope: !1174)
!1176 = !DILocation(line: 361, column: 15, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1166, file: !2, line: 361, column: 15)
!1178 = !DILocation(line: 361, column: 34, scope: !1177)
!1179 = !DILocation(line: 362, column: 15, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1166, file: !2, line: 362, column: 15)
!1181 = !DILocation(line: 362, column: 33, scope: !1180)
!1182 = !DILocation(line: 363, column: 14, scope: !1183)
!1183 = distinct !DILexicalBlock(scope: !1166, file: !2, line: 363, column: 14)
!1184 = !DILocation(line: 365, column: 10, scope: !1167)
!1185 = !DILocation(line: 365, column: 15, scope: !1167)
!1186 = !DILocation(line: 365, column: 8, scope: !1167)
!1187 = !DILocation(line: 303, column: 3, scope: !1188, inlinedAt: !1189)
!1188 = distinct !DISubprogram(name: "@report_fault", linkageName: "@report_fault", scope: !2, file: !2, line: 301, scopeLine: 301, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1189 = !DILocation(line: 365, column: 34, scope: !1167)
!1190 = !DILocation(line: 304, column: 9, scope: !1188, inlinedAt: !1189)
!1191 = !DILocation(line: 366, column: 8, scope: !1167)
!1192 = !DILocation(line: 366, column: 15, scope: !1167)
!1193 = !DILocalVariable(name: "w", scope: !1139, file: !2, line: 369, type: !3, align: 4)
!1194 = !DILocation(line: 369, column: 8, scope: !1139)
!1195 = !DILocation(line: 369, column: 48, scope: !1139)
!1196 = !DILocation(line: 369, column: 86, scope: !1139)
!1197 = !DILocation(line: 369, column: 12, scope: !1139)
!1198 = !DILocation(line: 370, column: 13, scope: !1139)
!1199 = !DILocation(line: 303, column: 3, scope: !1200, inlinedAt: !1201)
!1200 = distinct !DISubprogram(name: "@report_fault", linkageName: "@report_fault", scope: !2, file: !2, line: 301, scopeLine: 301, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1201 = !DILocation(line: 370, column: 23, scope: !1139)
!1202 = !DILocation(line: 304, column: 9, scope: !1200, inlinedAt: !1201)
!1203 = !DILocation(line: 371, column: 7, scope: !1139)
!1204 = !DILocation(line: 371, column: 14, scope: !1139)
!1205 = !DILocation(line: 372, column: 7, scope: !1139)
!1206 = !DILocation(line: 374, column: 4, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1139, file: !2, line: 373, column: 3)
!1208 = !DILocation(line: 374, column: 22, scope: !1207)
!1209 = !DILocation(line: 375, column: 9, scope: !1207)
!1210 = !DILocation(line: 377, column: 3, scope: !1139)
!1211 = !DILocation(line: 377, column: 16, scope: !1139)
!1212 = !DILocation(line: 379, column: 3, scope: !1139)
!1213 = !DILocation(line: 379, column: 15, scope: !1139)
!1214 = !DILocation(line: 380, column: 7, scope: !1139)
!1215 = !DILocation(line: 382, column: 4, scope: !1216)
!1216 = distinct !DILexicalBlock(scope: !1139, file: !2, line: 381, column: 3)
!1217 = !DILocation(line: 382, column: 27, scope: !1216)
!1218 = !DILocation(line: 383, column: 10, scope: !1216)
!1219 = !DILocation(line: 383, column: 15, scope: !1216)
!1220 = !DILocation(line: 383, column: 8, scope: !1216)
!1221 = !DILocation(line: 303, column: 3, scope: !1222, inlinedAt: !1223)
!1222 = distinct !DISubprogram(name: "@report_fault", linkageName: "@report_fault", scope: !2, file: !2, line: 301, scopeLine: 301, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1223 = !DILocation(line: 383, column: 34, scope: !1216)
!1224 = !DILocation(line: 304, column: 9, scope: !1222, inlinedAt: !1223)
!1225 = !DILocalVariable(name: "prec", scope: !1216, file: !2, line: 384, type: !3, align: 4)
!1226 = !DILocation(line: 384, column: 9, scope: !1216)
!1227 = !DILocation(line: 384, column: 52, scope: !1216)
!1228 = !DILocation(line: 384, column: 90, scope: !1216)
!1229 = !DILocation(line: 384, column: 16, scope: !1216)
!1230 = !DILocation(line: 385, column: 14, scope: !1216)
!1231 = !DILocation(line: 303, column: 3, scope: !1232, inlinedAt: !1233)
!1232 = distinct !DISubprogram(name: "@report_fault", linkageName: "@report_fault", scope: !2, file: !2, line: 301, scopeLine: 301, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1233 = !DILocation(line: 385, column: 27, scope: !1216)
!1234 = !DILocation(line: 304, column: 9, scope: !1232, inlinedAt: !1233)
!1235 = !DILocation(line: 386, column: 4, scope: !1216)
!1236 = !DILocation(line: 386, column: 16, scope: !1216)
!1237 = !DILocation(line: 386, column: 27, scope: !1216)
!1238 = !DILocation(line: 386, column: 31, scope: !1216)
!1239 = !DILocation(line: 387, column: 8, scope: !1216)
!1240 = !DILocation(line: 387, column: 15, scope: !1216)
!1241 = !DILocalVariable(name: "base", scope: !1139, file: !2, line: 391, type: !88, align: 4)
!1242 = !DILocation(line: 391, column: 8, scope: !1139)
!1243 = !DILocation(line: 391, column: 15, scope: !1139)
!1244 = !DILocation(line: 392, column: 7, scope: !1139)
!1245 = !DILocation(line: 392, column: 24, scope: !1139)
!1246 = !DILocation(line: 14, column: 6, scope: !1247, inlinedAt: !1248)
!1247 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1248 = !DILocation(line: 394, column: 4, scope: !1249)
!1249 = distinct !DILexicalBlock(scope: !1139, file: !2, line: 393, column: 3)
!1250 = !DILocation(line: 14, column: 31, scope: !1247, inlinedAt: !1248)
!1251 = !DILocation(line: 15, column: 2, scope: !1247, inlinedAt: !1248)
!1252 = !DILocation(line: 15, column: 21, scope: !1247, inlinedAt: !1248)
!1253 = !DILocation(line: 16, column: 9, scope: !1247, inlinedAt: !1248)
!1254 = !DILocation(line: 395, column: 4, scope: !1249)
!1255 = !DILocation(line: 395, column: 17, scope: !1249)
!1256 = !DILocation(line: 396, column: 4, scope: !1249)
!1257 = !DILocalVariable(name: "current", scope: !1139, file: !2, line: 398, type: !334, align: 8)
!1258 = !DILocation(line: 398, column: 7, scope: !1139)
!1259 = !DILocation(line: 398, column: 17, scope: !1139)
!1260 = !DILocation(line: 398, column: 22, scope: !1139)
!1261 = !DILocation(line: 402, column: 12, scope: !1262)
!1262 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 402, column: 5)
!1263 = distinct !DILexicalBlock(scope: !1139, file: !2, line: 399, column: 3)
!1264 = !DILocation(line: 403, column: 5, scope: !1262)
!1265 = !DILocation(line: 403, column: 23, scope: !1262)
!1266 = !DILocation(line: 405, column: 5, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 405, column: 5)
!1268 = !DILocation(line: 405, column: 28, scope: !1267)
!1269 = !DILocation(line: 406, column: 5, scope: !1267)
!1270 = !DILocation(line: 408, column: 12, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 408, column: 5)
!1272 = !DILocation(line: 410, column: 5, scope: !1273)
!1273 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 410, column: 5)
!1274 = !DILocation(line: 410, column: 28, scope: !1273)
!1275 = !DILocation(line: 411, column: 5, scope: !1273)
!1276 = !DILocation(line: 413, column: 12, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 413, column: 5)
!1278 = !DILocation(line: 415, column: 5, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 415, column: 5)
!1280 = !DILocation(line: 415, column: 28, scope: !1279)
!1281 = !DILocation(line: 416, column: 5, scope: !1279)
!1282 = !DILocation(line: 418, column: 12, scope: !1283)
!1283 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 418, column: 5)
!1284 = !DILocation(line: 420, column: 5, scope: !1285)
!1285 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 420, column: 5)
!1286 = !DILocation(line: 420, column: 28, scope: !1285)
!1287 = !DILocation(line: 421, column: 5, scope: !1285)
!1288 = !DILocation(line: 423, column: 5, scope: !1289)
!1289 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 423, column: 5)
!1290 = !DILocalVariable(name: "len", scope: !1291, file: !2, line: 309, type: !199, align: 8)
!1291 = distinct !DISubprogram(name: "@wrap_bad", linkageName: "@wrap_bad", scope: !2, file: !2, line: 307, scopeLine: 307, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1292 = !DILocation(line: 309, column: 7, scope: !1291, inlinedAt: !1293)
!1293 = !DILocation(line: 423, column: 18, scope: !1289)
!1294 = !DILocation(line: 423, column: 44, scope: !1291, inlinedAt: !1293)
!1295 = !DILocation(line: 309, column: 13, scope: !1291, inlinedAt: !1293)
!1296 = !DILocalVariable(name: "err", scope: !1291, file: !2, line: 310, type: !109, align: 8)
!1297 = !DILocation(line: 310, column: 12, scope: !1291, inlinedAt: !1293)
!1298 = !DILocation(line: 310, column: 18, scope: !1291, inlinedAt: !1293)
!1299 = !DILocation(line: 312, column: 8, scope: !1291, inlinedAt: !1293)
!1300 = !DILocation(line: 313, column: 8, scope: !1291, inlinedAt: !1293)
!1301 = !DILocation(line: 14, column: 6, scope: !1302, inlinedAt: !1303)
!1302 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1303 = !DILocation(line: 314, column: 11, scope: !1304, inlinedAt: !1293)
!1304 = distinct !DILexicalBlock(scope: !1291, file: !2, line: 314, column: 4)
!1305 = !DILocation(line: 14, column: 31, scope: !1302, inlinedAt: !1303)
!1306 = !DILocation(line: 15, column: 2, scope: !1302, inlinedAt: !1303)
!1307 = !DILocation(line: 15, column: 21, scope: !1302, inlinedAt: !1303)
!1308 = !DILocation(line: 16, column: 9, scope: !1302, inlinedAt: !1303)
!1309 = !DILocation(line: 14, column: 6, scope: !1310, inlinedAt: !1311)
!1310 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1311 = !DILocation(line: 316, column: 10, scope: !1312, inlinedAt: !1293)
!1312 = distinct !DILexicalBlock(scope: !1291, file: !2, line: 316, column: 4)
!1313 = !DILocation(line: 14, column: 31, scope: !1310, inlinedAt: !1311)
!1314 = !DILocation(line: 15, column: 2, scope: !1310, inlinedAt: !1311)
!1315 = !DILocation(line: 15, column: 21, scope: !1310, inlinedAt: !1311)
!1316 = !DILocation(line: 16, column: 9, scope: !1310, inlinedAt: !1311)
!1317 = !DILocation(line: 317, column: 4, scope: !1312, inlinedAt: !1293)
!1318 = !DILocation(line: 318, column: 11, scope: !1312, inlinedAt: !1293)
!1319 = !DILocation(line: 320, column: 9, scope: !1291, inlinedAt: !1293)
!1320 = !DILocation(line: 424, column: 5, scope: !1289)
!1321 = !DILocation(line: 426, column: 5, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 426, column: 5)
!1323 = !DILocation(line: 426, column: 28, scope: !1322)
!1324 = !DILocation(line: 427, column: 5, scope: !1322)
!1325 = !DILocation(line: 429, column: 5, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 429, column: 5)
!1327 = !DILocalVariable(name: "len", scope: !1328, file: !2, line: 309, type: !199, align: 8)
!1328 = distinct !DISubprogram(name: "@wrap_bad", linkageName: "@wrap_bad", scope: !2, file: !2, line: 307, scopeLine: 307, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1329 = !DILocation(line: 309, column: 7, scope: !1328, inlinedAt: !1330)
!1330 = !DILocation(line: 429, column: 18, scope: !1326)
!1331 = !DILocation(line: 429, column: 44, scope: !1328, inlinedAt: !1330)
!1332 = !DILocation(line: 309, column: 13, scope: !1328, inlinedAt: !1330)
!1333 = !DILocalVariable(name: "err", scope: !1328, file: !2, line: 310, type: !109, align: 8)
!1334 = !DILocation(line: 310, column: 12, scope: !1328, inlinedAt: !1330)
!1335 = !DILocation(line: 310, column: 18, scope: !1328, inlinedAt: !1330)
!1336 = !DILocation(line: 312, column: 8, scope: !1328, inlinedAt: !1330)
!1337 = !DILocation(line: 313, column: 8, scope: !1328, inlinedAt: !1330)
!1338 = !DILocation(line: 14, column: 6, scope: !1339, inlinedAt: !1340)
!1339 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1340 = !DILocation(line: 314, column: 11, scope: !1341, inlinedAt: !1330)
!1341 = distinct !DILexicalBlock(scope: !1328, file: !2, line: 314, column: 4)
!1342 = !DILocation(line: 14, column: 31, scope: !1339, inlinedAt: !1340)
!1343 = !DILocation(line: 15, column: 2, scope: !1339, inlinedAt: !1340)
!1344 = !DILocation(line: 15, column: 21, scope: !1339, inlinedAt: !1340)
!1345 = !DILocation(line: 16, column: 9, scope: !1339, inlinedAt: !1340)
!1346 = !DILocation(line: 14, column: 6, scope: !1347, inlinedAt: !1348)
!1347 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1348 = !DILocation(line: 316, column: 10, scope: !1349, inlinedAt: !1330)
!1349 = distinct !DILexicalBlock(scope: !1328, file: !2, line: 316, column: 4)
!1350 = !DILocation(line: 14, column: 31, scope: !1347, inlinedAt: !1348)
!1351 = !DILocation(line: 15, column: 2, scope: !1347, inlinedAt: !1348)
!1352 = !DILocation(line: 15, column: 21, scope: !1347, inlinedAt: !1348)
!1353 = !DILocation(line: 16, column: 9, scope: !1347, inlinedAt: !1348)
!1354 = !DILocation(line: 317, column: 4, scope: !1349, inlinedAt: !1330)
!1355 = !DILocation(line: 318, column: 11, scope: !1349, inlinedAt: !1330)
!1356 = !DILocation(line: 320, column: 9, scope: !1328, inlinedAt: !1330)
!1357 = !DILocation(line: 430, column: 5, scope: !1326)
!1358 = !DILocation(line: 432, column: 5, scope: !1359)
!1359 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 432, column: 5)
!1360 = !DILocation(line: 432, column: 28, scope: !1359)
!1361 = !DILocation(line: 433, column: 5, scope: !1359)
!1362 = !DILocation(line: 435, column: 5, scope: !1363)
!1363 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 435, column: 5)
!1364 = !DILocalVariable(name: "len", scope: !1365, file: !2, line: 309, type: !199, align: 8)
!1365 = distinct !DISubprogram(name: "@wrap_bad", linkageName: "@wrap_bad", scope: !2, file: !2, line: 307, scopeLine: 307, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1366 = !DILocation(line: 309, column: 7, scope: !1365, inlinedAt: !1367)
!1367 = !DILocation(line: 435, column: 18, scope: !1363)
!1368 = !DILocation(line: 435, column: 44, scope: !1365, inlinedAt: !1367)
!1369 = !DILocation(line: 309, column: 13, scope: !1365, inlinedAt: !1367)
!1370 = !DILocalVariable(name: "err", scope: !1365, file: !2, line: 310, type: !109, align: 8)
!1371 = !DILocation(line: 310, column: 12, scope: !1365, inlinedAt: !1367)
!1372 = !DILocation(line: 310, column: 18, scope: !1365, inlinedAt: !1367)
!1373 = !DILocation(line: 312, column: 8, scope: !1365, inlinedAt: !1367)
!1374 = !DILocation(line: 313, column: 8, scope: !1365, inlinedAt: !1367)
!1375 = !DILocation(line: 14, column: 6, scope: !1376, inlinedAt: !1377)
!1376 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1377 = !DILocation(line: 314, column: 11, scope: !1378, inlinedAt: !1367)
!1378 = distinct !DILexicalBlock(scope: !1365, file: !2, line: 314, column: 4)
!1379 = !DILocation(line: 14, column: 31, scope: !1376, inlinedAt: !1377)
!1380 = !DILocation(line: 15, column: 2, scope: !1376, inlinedAt: !1377)
!1381 = !DILocation(line: 15, column: 21, scope: !1376, inlinedAt: !1377)
!1382 = !DILocation(line: 16, column: 9, scope: !1376, inlinedAt: !1377)
!1383 = !DILocation(line: 14, column: 6, scope: !1384, inlinedAt: !1385)
!1384 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1385 = !DILocation(line: 316, column: 10, scope: !1386, inlinedAt: !1367)
!1386 = distinct !DILexicalBlock(scope: !1365, file: !2, line: 316, column: 4)
!1387 = !DILocation(line: 14, column: 31, scope: !1384, inlinedAt: !1385)
!1388 = !DILocation(line: 15, column: 2, scope: !1384, inlinedAt: !1385)
!1389 = !DILocation(line: 15, column: 21, scope: !1384, inlinedAt: !1385)
!1390 = !DILocation(line: 16, column: 9, scope: !1384, inlinedAt: !1385)
!1391 = !DILocation(line: 317, column: 4, scope: !1386, inlinedAt: !1367)
!1392 = !DILocation(line: 318, column: 11, scope: !1386, inlinedAt: !1367)
!1393 = !DILocation(line: 320, column: 9, scope: !1365, inlinedAt: !1367)
!1394 = !DILocation(line: 436, column: 5, scope: !1363)
!1395 = !DILocation(line: 438, column: 5, scope: !1396)
!1396 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 438, column: 5)
!1397 = !DILocation(line: 438, column: 28, scope: !1396)
!1398 = !DILocation(line: 439, column: 5, scope: !1396)
!1399 = !DILocation(line: 441, column: 5, scope: !1400)
!1400 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 441, column: 5)
!1401 = !DILocalVariable(name: "len", scope: !1402, file: !2, line: 309, type: !199, align: 8)
!1402 = distinct !DISubprogram(name: "@wrap_bad", linkageName: "@wrap_bad", scope: !2, file: !2, line: 307, scopeLine: 307, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1403 = !DILocation(line: 309, column: 7, scope: !1402, inlinedAt: !1404)
!1404 = !DILocation(line: 441, column: 18, scope: !1400)
!1405 = !DILocation(line: 441, column: 44, scope: !1402, inlinedAt: !1404)
!1406 = !DILocation(line: 309, column: 13, scope: !1402, inlinedAt: !1404)
!1407 = !DILocalVariable(name: "err", scope: !1402, file: !2, line: 310, type: !109, align: 8)
!1408 = !DILocation(line: 310, column: 12, scope: !1402, inlinedAt: !1404)
!1409 = !DILocation(line: 310, column: 18, scope: !1402, inlinedAt: !1404)
!1410 = !DILocation(line: 312, column: 8, scope: !1402, inlinedAt: !1404)
!1411 = !DILocation(line: 313, column: 8, scope: !1402, inlinedAt: !1404)
!1412 = !DILocation(line: 14, column: 6, scope: !1413, inlinedAt: !1414)
!1413 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1414 = !DILocation(line: 314, column: 11, scope: !1415, inlinedAt: !1404)
!1415 = distinct !DILexicalBlock(scope: !1402, file: !2, line: 314, column: 4)
!1416 = !DILocation(line: 14, column: 31, scope: !1413, inlinedAt: !1414)
!1417 = !DILocation(line: 15, column: 2, scope: !1413, inlinedAt: !1414)
!1418 = !DILocation(line: 15, column: 21, scope: !1413, inlinedAt: !1414)
!1419 = !DILocation(line: 16, column: 9, scope: !1413, inlinedAt: !1414)
!1420 = !DILocation(line: 14, column: 6, scope: !1421, inlinedAt: !1422)
!1421 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1422 = !DILocation(line: 316, column: 10, scope: !1423, inlinedAt: !1404)
!1423 = distinct !DILexicalBlock(scope: !1402, file: !2, line: 316, column: 4)
!1424 = !DILocation(line: 14, column: 31, scope: !1421, inlinedAt: !1422)
!1425 = !DILocation(line: 15, column: 2, scope: !1421, inlinedAt: !1422)
!1426 = !DILocation(line: 15, column: 21, scope: !1421, inlinedAt: !1422)
!1427 = !DILocation(line: 16, column: 9, scope: !1421, inlinedAt: !1422)
!1428 = !DILocation(line: 317, column: 4, scope: !1423, inlinedAt: !1404)
!1429 = !DILocation(line: 318, column: 11, scope: !1423, inlinedAt: !1404)
!1430 = !DILocation(line: 320, column: 9, scope: !1402, inlinedAt: !1404)
!1431 = !DILocation(line: 442, column: 5, scope: !1400)
!1432 = !DILocation(line: 444, column: 5, scope: !1433)
!1433 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 444, column: 5)
!1434 = !DILocation(line: 444, column: 18, scope: !1433)
!1435 = !DILocation(line: 445, column: 5, scope: !1433)
!1436 = !DILocation(line: 447, column: 9, scope: !1437)
!1437 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 447, column: 5)
!1438 = !DILocalVariable(name: "len", scope: !1439, file: !2, line: 449, type: !198, align: 8)
!1439 = distinct !DILexicalBlock(scope: !1437, file: !2, line: 448, column: 5)
!1440 = !DILocation(line: 449, column: 10, scope: !1439)
!1441 = !DILocation(line: 449, column: 16, scope: !1439)
!1442 = !DILocation(line: 450, column: 6, scope: !1439)
!1443 = !DILocation(line: 450, column: 19, scope: !1439)
!1444 = !DILocation(line: 451, column: 6, scope: !1439)
!1445 = !DILocation(line: 451, column: 33, scope: !1439)
!1446 = !DILocation(line: 451, column: 19, scope: !1439)
!1447 = !DILocation(line: 452, column: 6, scope: !1439)
!1448 = !DILocalVariable(name: "out_fn", scope: !1437, file: !2, line: 454, type: !317, align: 8)
!1449 = !DILocation(line: 454, column: 14, scope: !1437)
!1450 = !DILocation(line: 454, column: 23, scope: !1437)
!1451 = !DILocation(line: 455, column: 5, scope: !1437)
!1452 = !DILocation(line: 455, column: 30, scope: !1437)
!1453 = !DILocalVariable(name: "len", scope: !1437, file: !2, line: 456, type: !198, align: 8)
!1454 = !DILocation(line: 456, column: 9, scope: !1437)
!1455 = !DILocation(line: 456, column: 15, scope: !1437)
!1456 = !DILocation(line: 457, column: 5, scope: !1437)
!1457 = !DILocation(line: 457, column: 19, scope: !1437)
!1458 = !DILocation(line: 458, column: 5, scope: !1437)
!1459 = !DILocation(line: 458, column: 32, scope: !1437)
!1460 = !DILocation(line: 458, column: 18, scope: !1437)
!1461 = !DILocation(line: 459, column: 5, scope: !1437)
!1462 = !DILocation(line: 459, column: 18, scope: !1437)
!1463 = !DILocation(line: 460, column: 5, scope: !1437)
!1464 = !DILocation(line: 462, column: 5, scope: !1465)
!1465 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 462, column: 5)
!1466 = !DILocation(line: 462, column: 26, scope: !1465)
!1467 = !DILocation(line: 463, column: 5, scope: !1465)
!1468 = !DILocation(line: 463, column: 23, scope: !1465)
!1469 = !DILocation(line: 464, column: 12, scope: !1465)
!1470 = !DILocation(line: 14, column: 6, scope: !1471, inlinedAt: !1472)
!1471 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1472 = !DILocation(line: 466, column: 5, scope: !1473)
!1473 = distinct !DILexicalBlock(scope: !1263, file: !2, line: 466, column: 5)
!1474 = !DILocation(line: 14, column: 31, scope: !1471, inlinedAt: !1472)
!1475 = !DILocation(line: 15, column: 2, scope: !1471, inlinedAt: !1472)
!1476 = !DILocation(line: 15, column: 21, scope: !1471, inlinedAt: !1472)
!1477 = !DILocation(line: 16, column: 9, scope: !1471, inlinedAt: !1472)
!1478 = !DILocation(line: 467, column: 5, scope: !1473)
!1479 = !DILocation(line: 467, column: 18, scope: !1473)
!1480 = !DILocation(line: 468, column: 5, scope: !1473)
!1481 = !DILocation(line: 470, column: 7, scope: !1139)
!1482 = !DILocation(line: 472, column: 4, scope: !1483)
!1483 = distinct !DILexicalBlock(scope: !1139, file: !2, line: 471, column: 3)
!1484 = !DILocation(line: 472, column: 22, scope: !1483)
!1485 = !DILocation(line: 473, column: 4, scope: !1483)
!1486 = !DILocation(line: 473, column: 23, scope: !1483)
!1487 = !DILocation(line: 476, column: 7, scope: !1139)
!1488 = !DILocation(line: 476, column: 29, scope: !1139)
!1489 = !DILocation(line: 476, column: 50, scope: !1139)
!1490 = !DILocalVariable(name: "is_neg", scope: !1139, file: !2, line: 478, type: !485, align: 1)
!1491 = !DILocation(line: 478, column: 8, scope: !1139)
!1492 = !DILocation(line: 479, column: 3, scope: !1139)
!1493 = !DILocalVariable(name: "len", scope: !1494, file: !2, line: 309, type: !199, align: 8)
!1494 = distinct !DISubprogram(name: "@wrap_bad", linkageName: "@wrap_bad", scope: !2, file: !2, line: 307, scopeLine: 307, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1495 = !DILocation(line: 309, column: 7, scope: !1494, inlinedAt: !1496)
!1496 = !DILocation(line: 479, column: 16, scope: !1139)
!1497 = !DILocation(line: 479, column: 42, scope: !1494, inlinedAt: !1496)
!1498 = !DILocation(line: 309, column: 13, scope: !1494, inlinedAt: !1496)
!1499 = !DILocalVariable(name: "err", scope: !1494, file: !2, line: 310, type: !109, align: 8)
!1500 = !DILocation(line: 310, column: 12, scope: !1494, inlinedAt: !1496)
!1501 = !DILocation(line: 310, column: 18, scope: !1494, inlinedAt: !1496)
!1502 = !DILocation(line: 312, column: 8, scope: !1494, inlinedAt: !1496)
!1503 = !DILocation(line: 313, column: 8, scope: !1494, inlinedAt: !1496)
!1504 = !DILocation(line: 14, column: 6, scope: !1505, inlinedAt: !1506)
!1505 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1506 = !DILocation(line: 314, column: 11, scope: !1507, inlinedAt: !1496)
!1507 = distinct !DILexicalBlock(scope: !1494, file: !2, line: 314, column: 4)
!1508 = !DILocation(line: 14, column: 31, scope: !1505, inlinedAt: !1506)
!1509 = !DILocation(line: 15, column: 2, scope: !1505, inlinedAt: !1506)
!1510 = !DILocation(line: 15, column: 21, scope: !1505, inlinedAt: !1506)
!1511 = !DILocation(line: 16, column: 9, scope: !1505, inlinedAt: !1506)
!1512 = !DILocation(line: 14, column: 6, scope: !1513, inlinedAt: !1514)
!1513 = distinct !DISubprogram(name: "first_err", linkageName: "first_err", scope: !6, file: !6, line: 12, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1514 = !DILocation(line: 316, column: 10, scope: !1515, inlinedAt: !1496)
!1515 = distinct !DILexicalBlock(scope: !1494, file: !2, line: 316, column: 4)
!1516 = !DILocation(line: 14, column: 31, scope: !1513, inlinedAt: !1514)
!1517 = !DILocation(line: 15, column: 2, scope: !1513, inlinedAt: !1514)
!1518 = !DILocation(line: 15, column: 21, scope: !1513, inlinedAt: !1514)
!1519 = !DILocation(line: 16, column: 9, scope: !1513, inlinedAt: !1514)
!1520 = !DILocation(line: 317, column: 4, scope: !1515, inlinedAt: !1496)
!1521 = !DILocation(line: 318, column: 11, scope: !1515, inlinedAt: !1496)
!1522 = !DILocation(line: 320, column: 9, scope: !1494, inlinedAt: !1496)
!1523 = !DILocation(line: 334, column: 34, scope: !1133)
!1524 = !DILocation(line: 485, column: 6, scope: !1110)
!1525 = !DILocation(line: 485, column: 31, scope: !1110)
!1526 = !DILocation(line: 486, column: 9, scope: !1110)
!1527 = distinct !DISubprogram(name: "print", linkageName: "std.io.Formatter.print", scope: !2, file: !2, line: 490, type: !1528, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!109, !311, !312, !329}
!1530 = !DILocation(line: 491, column: 1, scope: !1527)
!1531 = !DILocalVariable(name: "self", arg: 1, scope: !1527, file: !2, line: 490, type: !312)
!1532 = !DILocation(line: 490, column: 25, scope: !1527)
!1533 = !DILocalVariable(name: "str", arg: 2, scope: !1527, file: !2, line: 490, type: !329)
!1534 = !DILocation(line: 490, column: 39, scope: !1527)
!1535 = !DILocation(line: 492, column: 7, scope: !1527)
!1536 = !DILocation(line: 495, column: 3, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1527, file: !2, line: 493, column: 2)
!1538 = !DILocation(line: 495, column: 18, scope: !1537)
!1539 = !DILocalVariable(name: ".temp", scope: !1540, file: !2, line: 497, type: !198, align: 8)
!1540 = distinct !DILexicalBlock(scope: !1527, file: !2, line: 497, column: 2)
!1541 = !DILocation(line: 497, column: 15, scope: !1540)
!1542 = !DILocalVariable(name: "c", scope: !1543, file: !2, line: 497, type: !8, align: 1)
!1543 = distinct !DILexicalBlock(scope: !1540, file: !2, line: 497, column: 20)
!1544 = !DILocation(line: 497, column: 11, scope: !1543)
!1545 = !DILocation(line: 497, column: 15, scope: !1543)
!1546 = !DILocation(line: 497, column: 20, scope: !1543)
!1547 = !DILocation(line: 498, column: 9, scope: !1527)
!1548 = distinct !DISubprogram(name: "out_null_fn", linkageName: "std.io.out_null_fn", scope: !2, file: !2, line: 297, type: !319, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1549 = !DILocalVariable(name: "data", arg: 1, scope: !1548, file: !2, line: 297, type: !22)
!1550 = !DILocation(line: 297, column: 28, scope: !1548)
!1551 = !DILocalVariable(name: "c", arg: 2, scope: !1548, file: !2, line: 297, type: !8)
!1552 = !DILocation(line: 297, column: 47, scope: !1548)
!1553 = distinct !DISubprogram(name: "adjust", linkageName: "std.io.Formatter.adjust", scope: !6, file: !6, line: 19, type: !1554, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!109, !311, !312, !199}
!1556 = !DILocation(line: 20, column: 1, scope: !1553)
!1557 = !DILocalVariable(name: "self", arg: 1, scope: !1553, file: !6, line: 19, type: !312)
!1558 = !DILocation(line: 19, column: 26, scope: !1553)
!1559 = !DILocalVariable(name: "len", arg: 2, scope: !1553, file: !6, line: 19, type: !198)
!1560 = !DILocation(line: 19, column: 37, scope: !1553)
!1561 = !DILocation(line: 21, column: 7, scope: !1553)
!1562 = !DILocation(line: 21, column: 31, scope: !1553)
!1563 = !DILocation(line: 22, column: 23, scope: !1553)
!1564 = !DILocation(line: 22, column: 9, scope: !1553)
!1565 = distinct !DISubprogram(name: "out_substr", linkageName: "std.io.Formatter.out_substr", scope: !6, file: !6, line: 145, type: !1528, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1566 = !DILocation(line: 146, column: 1, scope: !1565)
!1567 = !DILocalVariable(name: "self", arg: 1, scope: !1565, file: !6, line: 145, type: !312)
!1568 = !DILocation(line: 145, column: 30, scope: !1565)
!1569 = !DILocalVariable(name: "str", arg: 2, scope: !1565, file: !6, line: 145, type: !329)
!1570 = !DILocation(line: 145, column: 44, scope: !1565)
!1571 = !DILocalVariable(name: "l", scope: !1565, file: !6, line: 147, type: !198, align: 8)
!1572 = !DILocation(line: 147, column: 6, scope: !1565)
!1573 = !DILocation(line: 147, column: 16, scope: !1565)
!1574 = !DILocalVariable(name: "prec", scope: !1565, file: !6, line: 148, type: !88, align: 4)
!1575 = !DILocation(line: 148, column: 7, scope: !1565)
!1576 = !DILocation(line: 148, column: 14, scope: !1565)
!1577 = !DILocation(line: 149, column: 6, scope: !1565)
!1578 = !DILocation(line: 149, column: 30, scope: !1565)
!1579 = !DILocation(line: 149, column: 34, scope: !1565)
!1580 = !DILocation(line: 149, column: 44, scope: !1565)
!1581 = !DILocalVariable(name: "index", scope: !1565, file: !6, line: 150, type: !198, align: 8)
!1582 = !DILocation(line: 150, column: 6, scope: !1565)
!1583 = !DILocation(line: 150, column: 14, scope: !1565)
!1584 = !DILocalVariable(name: "chars", scope: !1565, file: !6, line: 151, type: !198, align: 8)
!1585 = !DILocation(line: 151, column: 6, scope: !1565)
!1586 = !DILocation(line: 151, column: 14, scope: !1565)
!1587 = !DILocalVariable(name: "ptr", scope: !1565, file: !6, line: 152, type: !111, align: 8)
!1588 = !DILocation(line: 152, column: 8, scope: !1565)
!1589 = !DILocation(line: 152, column: 14, scope: !1565)
!1590 = !DILocation(line: 153, column: 2, scope: !1565)
!1591 = !DILocation(line: 153, column: 9, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !1565, file: !6, line: 153, column: 2)
!1593 = !DILocation(line: 153, column: 17, scope: !1592)
!1594 = !DILocalVariable(name: "c", scope: !1595, file: !6, line: 155, type: !8, align: 1)
!1595 = distinct !DILexicalBlock(scope: !1592, file: !6, line: 154, column: 2)
!1596 = !DILocation(line: 155, column: 8, scope: !1595)
!1597 = !DILocation(line: 155, column: 12, scope: !1595)
!1598 = !DILocation(line: 155, column: 16, scope: !1595)
!1599 = !DILocation(line: 157, column: 7, scope: !1595)
!1600 = !DILocation(line: 157, column: 27, scope: !1595)
!1601 = !DILocation(line: 157, column: 52, scope: !1595)
!1602 = !DILocation(line: 157, column: 60, scope: !1595)
!1603 = !DILocation(line: 158, column: 3, scope: !1595)
!1604 = !DILocation(line: 159, column: 3, scope: !1595)
!1605 = !DILocation(line: 161, column: 9, scope: !1565)
!1606 = distinct !DISubprogram(name: "pad", linkageName: "std.io.Formatter.pad", scope: !6, file: !6, line: 164, type: !1607, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!109, !311, !312, !8, !110, !110}
!1609 = !DILocation(line: 165, column: 1, scope: !1606)
!1610 = !DILocalVariable(name: "self", arg: 1, scope: !1606, file: !6, line: 164, type: !312)
!1611 = !DILocation(line: 164, column: 23, scope: !1606)
!1612 = !DILocalVariable(name: "c", arg: 2, scope: !1606, file: !6, line: 164, type: !8)
!1613 = !DILocation(line: 164, column: 35, scope: !1606)
!1614 = !DILocalVariable(name: "width", arg: 3, scope: !1606, file: !6, line: 164, type: !1615)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "isz", baseType: !110)
!1616 = !DILocation(line: 164, column: 42, scope: !1606)
!1617 = !DILocalVariable(name: "len", arg: 4, scope: !1606, file: !6, line: 164, type: !1615)
!1618 = !DILocation(line: 164, column: 53, scope: !1606)
!1619 = !DILocalVariable(name: "delta", scope: !1606, file: !6, line: 166, type: !1615, align: 8)
!1620 = !DILocation(line: 166, column: 6, scope: !1606)
!1621 = !DILocation(line: 166, column: 14, scope: !1606)
!1622 = !DILocation(line: 166, column: 22, scope: !1606)
!1623 = !DILocalVariable(name: "i", scope: !1624, file: !6, line: 167, type: !1615, align: 8)
!1624 = distinct !DILexicalBlock(scope: !1606, file: !6, line: 167, column: 2)
!1625 = !DILocation(line: 167, column: 11, scope: !1624)
!1626 = !DILocation(line: 167, column: 15, scope: !1624)
!1627 = !DILocation(line: 167, column: 18, scope: !1624)
!1628 = !DILocation(line: 167, column: 22, scope: !1624)
!1629 = !DILocation(line: 167, column: 34, scope: !1624)
!1630 = !DILocation(line: 167, column: 29, scope: !1624)
!1631 = !DILocation(line: 47, column: 10, scope: !1632, inlinedAt: !1634)
!1632 = distinct !DISubprogram(name: "greater", linkageName: "greater", scope: !1633, file: !1633, line: 39, scopeLine: 39, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1633 = !DIFile(filename: "builtin_comparison.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core")
!1634 = !DILocation(line: 116, column: 10, scope: !1635, inlinedAt: !1636)
!1635 = distinct !DISubprogram(name: "max", linkageName: "max", scope: !1633, file: !1633, line: 113, scopeLine: 113, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1636 = !DILocation(line: 168, column: 9, scope: !1606)
!1637 = !DILocation(line: 47, column: 14, scope: !1632, inlinedAt: !1634)
!1638 = !DILocation(line: 116, column: 34, scope: !1635, inlinedAt: !1636)
!1639 = !DILocation(line: 116, column: 38, scope: !1635, inlinedAt: !1636)
!1640 = distinct !DISubprogram(name: "out_chars", linkageName: "std.io.Formatter.out_chars", scope: !6, file: !6, line: 178, type: !1641, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!109, !311, !312, !194}
!1643 = !DILocation(line: 179, column: 1, scope: !1640)
!1644 = !DILocalVariable(name: "self", arg: 1, scope: !1640, file: !6, line: 178, type: !312)
!1645 = !DILocation(line: 178, column: 29, scope: !1640)
!1646 = !DILocalVariable(name: "s", arg: 2, scope: !1640, file: !6, line: 178, type: !194)
!1647 = !DILocation(line: 178, column: 43, scope: !1640)
!1648 = !DILocalVariable(name: ".temp", scope: !1649, file: !6, line: 180, type: !198, align: 8)
!1649 = distinct !DILexicalBlock(scope: !1640, file: !6, line: 180, column: 2)
!1650 = !DILocation(line: 180, column: 15, scope: !1649)
!1651 = !DILocalVariable(name: "c", scope: !1652, file: !6, line: 180, type: !8, align: 1)
!1652 = distinct !DILexicalBlock(scope: !1649, file: !6, line: 180, column: 18)
!1653 = !DILocation(line: 180, column: 11, scope: !1652)
!1654 = !DILocation(line: 180, column: 15, scope: !1652)
!1655 = !DILocation(line: 180, column: 18, scope: !1652)
!1656 = !DILocation(line: 181, column: 9, scope: !1640)
!1657 = distinct !DISubprogram(name: "etoa", linkageName: "std.io.Formatter.etoa", scope: !6, file: !6, line: 192, type: !1658, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!109, !311, !312, !1660}
!1660 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1661 = !DILocation(line: 192, column: 44, scope: !1657)
!1662 = !DILocalVariable(name: "self", arg: 1, scope: !1657, file: !6, line: 192, type: !312)
!1663 = !DILocation(line: 192, column: 24, scope: !1657)
!1664 = !DILocalVariable(name: "y", arg: 2, scope: !1657, file: !6, line: 192, type: !1660)
!1665 = !DILocation(line: 192, column: 38, scope: !1657)
!1666 = distinct !DISubprogram(name: "ftoa", linkageName: "std.io.Formatter.ftoa", scope: !6, file: !6, line: 193, type: !1658, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1667 = !DILocation(line: 193, column: 44, scope: !1666)
!1668 = !DILocalVariable(name: "self", arg: 1, scope: !1666, file: !6, line: 193, type: !312)
!1669 = !DILocation(line: 193, column: 24, scope: !1666)
!1670 = !DILocalVariable(name: "y", arg: 2, scope: !1666, file: !6, line: 193, type: !1660)
!1671 = !DILocation(line: 193, column: 38, scope: !1666)
!1672 = distinct !DISubprogram(name: "gtoa", linkageName: "std.io.Formatter.gtoa", scope: !6, file: !6, line: 194, type: !1658, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1673 = !DILocation(line: 194, column: 44, scope: !1672)
!1674 = !DILocalVariable(name: "self", arg: 1, scope: !1672, file: !6, line: 194, type: !312)
!1675 = !DILocation(line: 194, column: 24, scope: !1672)
!1676 = !DILocalVariable(name: "y", arg: 2, scope: !1672, file: !6, line: 194, type: !1660)
!1677 = !DILocation(line: 194, column: 38, scope: !1672)
!1678 = distinct !DISubprogram(name: "atoa", linkageName: "std.io.Formatter.atoa", scope: !6, file: !6, line: 195, type: !1658, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1679 = !DILocation(line: 195, column: 44, scope: !1678)
!1680 = !DILocalVariable(name: "self", arg: 1, scope: !1678, file: !6, line: 195, type: !312)
!1681 = !DILocation(line: 195, column: 24, scope: !1678)
!1682 = !DILocalVariable(name: "y", arg: 2, scope: !1678, file: !6, line: 195, type: !1660)
!1683 = !DILocation(line: 195, column: 38, scope: !1678)
!1684 = distinct !DISubprogram(name: "floatformat", linkageName: "std.io.Formatter.floatformat", scope: !6, file: !6, line: 197, type: !1685, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!109, !311, !312, !39, !1660}
!1687 = !DILocation(line: 198, column: 1, scope: !1684)
!1688 = !DILocalVariable(name: "self", arg: 1, scope: !1684, file: !6, line: 197, type: !312)
!1689 = !DILocation(line: 197, column: 31, scope: !1684)
!1690 = !DILocalVariable(name: "formatting", arg: 2, scope: !1684, file: !6, line: 197, type: !39)
!1691 = !DILocation(line: 197, column: 54, scope: !1684)
!1692 = !DILocalVariable(name: "y", arg: 3, scope: !1684, file: !6, line: 197, type: !1660)
!1693 = !DILocation(line: 197, column: 73, scope: !1684)
!1694 = !DILocalVariable(name: "big", scope: !1684, file: !6, line: 202, type: !1695, align: 16)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 4032, align: 32, elements: !1696)
!1696 = !{!1697}
!1697 = !DISubrange(count: 126, lowerBound: 0)
!1698 = !DILocation(line: 202, column: 17, scope: !1684)
!1699 = !DILocalVariable(name: "is_neg", scope: !1684, file: !6, line: 203, type: !485, align: 1)
!1700 = !DILocation(line: 203, column: 7, scope: !1684)
!1701 = !DILocation(line: 203, column: 16, scope: !1684)
!1702 = !DILocation(line: 212, column: 20, scope: !1703, inlinedAt: !1704)
!1703 = distinct !DISubprogram(name: "bitcast", linkageName: "bitcast", scope: !205, file: !205, line: 209, scopeLine: 209, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1704 = !DILocation(line: 458, column: 16, scope: !1705, inlinedAt: !1707)
!1705 = distinct !DISubprogram(name: "signbit", linkageName: "signbit", scope: !1706, file: !1706, line: 451, scopeLine: 451, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1706 = !DIFile(filename: "math.c3", directory: "C:/Dev/C3/c3-windows/lib/std/math")
!1707 = !DILocation(line: 204, column: 12, scope: !1684)
!1708 = !DILocation(line: 212, column: 12, scope: !1703, inlinedAt: !1704)
!1709 = !DILocation(line: 458, column: 11, scope: !1705, inlinedAt: !1707)
!1710 = !DILocation(line: 206, column: 12, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 205, column: 2)
!1712 = !DILocation(line: 207, column: 8, scope: !1711)
!1713 = !DILocalVariable(name: "pl", scope: !1684, file: !6, line: 209, type: !1615, align: 8)
!1714 = !DILocation(line: 209, column: 6, scope: !1684)
!1715 = !DILocation(line: 209, column: 11, scope: !1684)
!1716 = !DILocation(line: 209, column: 21, scope: !1684)
!1717 = !DILocation(line: 209, column: 43, scope: !1684)
!1718 = !DILocation(line: 212, column: 20, scope: !1719, inlinedAt: !1720)
!1719 = distinct !DISubprogram(name: "bitcast", linkageName: "bitcast", scope: !205, file: !205, line: 209, scopeLine: 209, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1720 = !DILocation(line: 543, column: 11, scope: !1721, inlinedAt: !1722)
!1721 = distinct !DISubprogram(name: "is_finite", linkageName: "is_finite", scope: !1706, file: !1706, line: 536, scopeLine: 536, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1722 = !DILocation(line: 211, column: 13, scope: !1684)
!1723 = !DILocation(line: 212, column: 12, scope: !1719, inlinedAt: !1720)
!1724 = !DILocalVariable(name: "len", scope: !1725, file: !6, line: 213, type: !198, align: 8)
!1725 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 212, column: 2)
!1726 = !DILocation(line: 213, column: 7, scope: !1725)
!1727 = !DILocation(line: 215, column: 8, scope: !1725)
!1728 = !DILocation(line: 215, column: 25, scope: !1725)
!1729 = !DILocation(line: 215, column: 46, scope: !1725)
!1730 = !DILocation(line: 215, column: 62, scope: !1725)
!1731 = !DILocation(line: 215, column: 58, scope: !1725)
!1732 = !DILocation(line: 215, column: 32, scope: !1725)
!1733 = !DILocalVariable(name: "s", scope: !1725, file: !6, line: 216, type: !329, align: 8)
!1734 = !DILocation(line: 216, column: 10, scope: !1725)
!1735 = !DILocation(line: 216, column: 14, scope: !1725)
!1736 = !DILocation(line: 216, column: 45, scope: !1725)
!1737 = !DILocation(line: 217, column: 7, scope: !1725)
!1738 = !DILocation(line: 217, column: 12, scope: !1725)
!1739 = !DILocation(line: 217, column: 19, scope: !1725)
!1740 = !DILocation(line: 217, column: 50, scope: !1725)
!1741 = !DILocation(line: 218, column: 3, scope: !1725)
!1742 = !DILocation(line: 218, column: 10, scope: !1725)
!1743 = !DILocation(line: 219, column: 7, scope: !1725)
!1744 = !DILocation(line: 219, column: 11, scope: !1725)
!1745 = !DILocation(line: 219, column: 27, scope: !1725)
!1746 = !DILocation(line: 219, column: 42, scope: !1725)
!1747 = !DILocation(line: 219, column: 18, scope: !1725)
!1748 = !DILocation(line: 220, column: 3, scope: !1725)
!1749 = !DILocation(line: 220, column: 10, scope: !1725)
!1750 = !DILocation(line: 221, column: 7, scope: !1725)
!1751 = !DILocation(line: 221, column: 24, scope: !1725)
!1752 = !DILocation(line: 221, column: 45, scope: !1725)
!1753 = !DILocation(line: 221, column: 61, scope: !1725)
!1754 = !DILocation(line: 221, column: 57, scope: !1725)
!1755 = !DILocation(line: 221, column: 31, scope: !1725)
!1756 = !DILocation(line: 222, column: 10, scope: !1725)
!1757 = !DILocalVariable(name: "e2", scope: !1684, file: !6, line: 225, type: !3, align: 4)
!1758 = !DILocation(line: 225, column: 6, scope: !1684)
!1759 = !DILocation(line: 444, column: 28, scope: !1760, inlinedAt: !1761)
!1760 = distinct !DISubprogram(name: "frexp", linkageName: "frexp", scope: !1706, file: !1706, line: 437, scopeLine: 437, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1761 = !DILocation(line: 227, column: 12, scope: !1684)
!1762 = !DILocation(line: 444, column: 10, scope: !1760, inlinedAt: !1761)
!1763 = !DILocation(line: 228, column: 6, scope: !1684)
!1764 = !DILocation(line: 228, column: 9, scope: !1684)
!1765 = !DILocalVariable(name: "ebuf0", scope: !1684, file: !6, line: 229, type: !1766, align: 1)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 96, align: 8, elements: !1767)
!1767 = !{!1768}
!1768 = !DISubrange(count: 12, lowerBound: 0)
!1769 = !DILocation(line: 229, column: 11, scope: !1684)
!1770 = !DILocalVariable(name: "ebuf", scope: !1684, file: !6, line: 230, type: !111, align: 8)
!1771 = !DILocation(line: 230, column: 8, scope: !1684)
!1772 = !DILocation(line: 230, column: 15, scope: !1684)
!1773 = !DILocalVariable(name: "buf_array", scope: !1684, file: !6, line: 231, type: !1774, align: 16)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 176, align: 8, elements: !1775)
!1775 = !{!1776}
!1776 = !DISubrange(count: 22, lowerBound: 0)
!1777 = !DILocation(line: 231, column: 38, scope: !1684)
!1778 = !DILocalVariable(name: "buf", scope: !1684, file: !6, line: 232, type: !111, align: 8)
!1779 = !DILocation(line: 232, column: 8, scope: !1684)
!1780 = !DILocation(line: 232, column: 15, scope: !1684)
!1781 = !DILocalVariable(name: "p", scope: !1684, file: !6, line: 233, type: !1615, align: 8)
!1782 = !DILocation(line: 233, column: 6, scope: !1684)
!1783 = !DILocation(line: 233, column: 10, scope: !1684)
!1784 = !DILocation(line: 233, column: 33, scope: !1684)
!1785 = !DILocation(line: 233, column: 45, scope: !1684)
!1786 = !DILocation(line: 234, column: 6, scope: !1684)
!1787 = !DILocalVariable(name: "round", scope: !1788, file: !6, line: 236, type: !1660, align: 8)
!1788 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 235, column: 2)
!1789 = !DILocation(line: 236, column: 10, scope: !1788)
!1790 = !DILocation(line: 236, column: 18, scope: !1788)
!1791 = !DILocation(line: 238, column: 3, scope: !1788)
!1792 = !DILocation(line: 239, column: 7, scope: !1788)
!1793 = !DILocation(line: 239, column: 16, scope: !1788)
!1794 = !DILocalVariable(name: "re", scope: !1795, file: !6, line: 241, type: !3, align: 4)
!1795 = distinct !DILexicalBlock(scope: !1788, file: !6, line: 240, column: 3)
!1796 = !DILocation(line: 241, column: 8, scope: !1795)
!1797 = !DILocation(line: 241, column: 46, scope: !1795)
!1798 = !DILocation(line: 241, column: 19, scope: !1795)
!1799 = !DILocation(line: 242, column: 4, scope: !1795)
!1800 = !DILocation(line: 243, column: 4, scope: !1795)
!1801 = !DILocation(line: 243, column: 11, scope: !1802)
!1802 = distinct !DILexicalBlock(scope: !1795, file: !6, line: 243, column: 4)
!1803 = !DILocation(line: 243, column: 17, scope: !1802)
!1804 = !DILocation(line: 244, column: 8, scope: !1795)
!1805 = !DILocation(line: 246, column: 10, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1795, file: !6, line: 245, column: 4)
!1807 = !DILocation(line: 247, column: 5, scope: !1806)
!1808 = !DILocation(line: 247, column: 10, scope: !1806)
!1809 = !DILocation(line: 248, column: 5, scope: !1806)
!1810 = !DILocation(line: 248, column: 10, scope: !1806)
!1811 = !DILocation(line: 249, column: 10, scope: !1806)
!1812 = !DILocation(line: 253, column: 5, scope: !1813)
!1813 = distinct !DILexicalBlock(scope: !1795, file: !6, line: 252, column: 4)
!1814 = !DILocation(line: 253, column: 10, scope: !1813)
!1815 = !DILocation(line: 254, column: 5, scope: !1813)
!1816 = !DILocation(line: 254, column: 10, scope: !1813)
!1817 = !DILocalVariable(name: "estr", scope: !1788, file: !6, line: 258, type: !111, align: 8)
!1818 = !DILocation(line: 258, column: 9, scope: !1788)
!1819 = !DILocation(line: 258, column: 22, scope: !1788)
!1820 = !DILocation(line: 258, column: 40, scope: !1788)
!1821 = !DILocation(line: 258, column: 46, scope: !1788)
!1822 = !DILocation(line: 258, column: 16, scope: !1788)
!1823 = !DILocation(line: 259, column: 7, scope: !1788)
!1824 = !DILocation(line: 259, column: 15, scope: !1788)
!1825 = !DILocation(line: 259, column: 24, scope: !1788)
!1826 = !DILocation(line: 259, column: 31, scope: !1788)
!1827 = !DILocation(line: 260, column: 6, scope: !1788)
!1828 = !DILocation(line: 260, column: 14, scope: !1788)
!1829 = !DILocation(line: 260, column: 29, scope: !1788)
!1830 = !DILocation(line: 261, column: 6, scope: !1788)
!1831 = !DILocation(line: 261, column: 13, scope: !1788)
!1832 = !DILocation(line: 261, column: 42, scope: !1788)
!1833 = !DILocalVariable(name: "s", scope: !1788, file: !6, line: 262, type: !111, align: 8)
!1834 = !DILocation(line: 262, column: 9, scope: !1788)
!1835 = !DILocation(line: 262, column: 13, scope: !1788)
!1836 = !DILocalVariable(name: "xdigits", scope: !1788, file: !6, line: 263, type: !111, align: 8)
!1837 = !DILocation(line: 263, column: 9, scope: !1788)
!1838 = !DILocation(line: 263, column: 19, scope: !1788)
!1839 = !DILocation(line: 263, column: 55, scope: !1788)
!1840 = !DILocation(line: 264, column: 3, scope: !1788)
!1841 = !DILocation(line: 270, column: 12, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !1788, file: !6, line: 264, column: 3)
!1843 = !DILocalVariable(name: "x", scope: !1844, file: !6, line: 266, type: !3, align: 4)
!1844 = distinct !DILexicalBlock(scope: !1842, file: !6, line: 265, column: 3)
!1845 = !DILocation(line: 266, column: 8, scope: !1844)
!1846 = !DILocation(line: 266, column: 13, scope: !1844)
!1847 = !DILocation(line: 267, column: 5, scope: !1844)
!1848 = !DILocation(line: 267, column: 11, scope: !1844)
!1849 = !DILocation(line: 267, column: 19, scope: !1844)
!1850 = !DILocation(line: 268, column: 14, scope: !1844)
!1851 = !DILocation(line: 268, column: 18, scope: !1844)
!1852 = !DILocation(line: 268, column: 8, scope: !1844)
!1853 = !DILocation(line: 269, column: 8, scope: !1844)
!1854 = !DILocation(line: 269, column: 12, scope: !1844)
!1855 = !DILocation(line: 269, column: 25, scope: !1844)
!1856 = !DILocation(line: 269, column: 30, scope: !1844)
!1857 = !DILocation(line: 269, column: 39, scope: !1844)
!1858 = !DILocation(line: 269, column: 58, scope: !1844)
!1859 = !DILocation(line: 269, column: 64, scope: !1844)
!1860 = !DILocalVariable(name: "outlen", scope: !1788, file: !6, line: 271, type: !1615, align: 8)
!1861 = !DILocation(line: 271, column: 7, scope: !1788)
!1862 = !DILocation(line: 271, column: 16, scope: !1788)
!1863 = !DILocation(line: 271, column: 20, scope: !1788)
!1864 = !DILocalVariable(name: "explen", scope: !1788, file: !6, line: 272, type: !1615, align: 8)
!1865 = !DILocation(line: 272, column: 7, scope: !1788)
!1866 = !DILocation(line: 272, column: 16, scope: !1788)
!1867 = !DILocation(line: 272, column: 23, scope: !1788)
!1868 = !DILocation(line: 273, column: 7, scope: !1788)
!1869 = !DILocation(line: 273, column: 25, scope: !1788)
!1870 = !DILocation(line: 273, column: 11, scope: !1788)
!1871 = !DILocation(line: 273, column: 34, scope: !1788)
!1872 = !DILocation(line: 273, column: 45, scope: !1788)
!1873 = !DILocalVariable(name: "len", scope: !1788, file: !6, line: 274, type: !198, align: 8)
!1874 = !DILocation(line: 274, column: 7, scope: !1788)
!1875 = !DILocalVariable(name: "l", scope: !1788, file: !6, line: 275, type: !198, align: 8)
!1876 = !DILocation(line: 275, column: 7, scope: !1788)
!1877 = !DILocation(line: 275, column: 11, scope: !1788)
!1878 = !DILocation(line: 275, column: 16, scope: !1788)
!1879 = !DILocation(line: 275, column: 29, scope: !1788)
!1880 = !DILocation(line: 276, column: 7, scope: !1788)
!1881 = !DILocation(line: 276, column: 15, scope: !1788)
!1882 = !DILocation(line: 277, column: 7, scope: !1788)
!1883 = !DILocation(line: 277, column: 16, scope: !1788)
!1884 = !DILocation(line: 278, column: 8, scope: !1788)
!1885 = !DILocation(line: 278, column: 28, scope: !1788)
!1886 = !DILocation(line: 278, column: 48, scope: !1788)
!1887 = !DILocation(line: 278, column: 69, scope: !1788)
!1888 = !DILocation(line: 278, column: 81, scope: !1788)
!1889 = !DILocation(line: 278, column: 86, scope: !1788)
!1890 = !DILocation(line: 278, column: 55, scope: !1788)
!1891 = !DILocation(line: 279, column: 7, scope: !1788)
!1892 = !DILocation(line: 279, column: 17, scope: !1788)
!1893 = !DILocation(line: 279, column: 34, scope: !1788)
!1894 = !DILocation(line: 279, column: 50, scope: !1788)
!1895 = !DILocation(line: 279, column: 65, scope: !1788)
!1896 = !DILocation(line: 279, column: 41, scope: !1788)
!1897 = !DILocation(line: 280, column: 3, scope: !1788)
!1898 = !DILocation(line: 280, column: 25, scope: !1788)
!1899 = !DILocation(line: 280, column: 55, scope: !1788)
!1900 = !DILocation(line: 280, column: 10, scope: !1788)
!1901 = !DILocation(line: 281, column: 7, scope: !1788)
!1902 = !DILocation(line: 281, column: 27, scope: !1788)
!1903 = !DILocation(line: 281, column: 48, scope: !1788)
!1904 = !DILocation(line: 281, column: 60, scope: !1788)
!1905 = !DILocation(line: 281, column: 65, scope: !1788)
!1906 = !DILocation(line: 281, column: 34, scope: !1788)
!1907 = !DILocation(line: 282, column: 3, scope: !1788)
!1908 = !DILocation(line: 282, column: 25, scope: !1788)
!1909 = !DILocation(line: 282, column: 30, scope: !1788)
!1910 = !DILocation(line: 282, column: 10, scope: !1788)
!1911 = !DILocation(line: 283, column: 3, scope: !1788)
!1912 = !DILocation(line: 283, column: 24, scope: !1788)
!1913 = !DILocation(line: 283, column: 28, scope: !1788)
!1914 = !DILocation(line: 283, column: 37, scope: !1788)
!1915 = !DILocation(line: 283, column: 10, scope: !1788)
!1916 = !DILocation(line: 284, column: 3, scope: !1788)
!1917 = !DILocation(line: 284, column: 25, scope: !1788)
!1918 = !DILocation(line: 284, column: 31, scope: !1788)
!1919 = !DILocation(line: 284, column: 10, scope: !1788)
!1920 = !DILocation(line: 285, column: 7, scope: !1788)
!1921 = !DILocation(line: 285, column: 24, scope: !1788)
!1922 = !DILocation(line: 285, column: 45, scope: !1788)
!1923 = !DILocation(line: 285, column: 57, scope: !1788)
!1924 = !DILocation(line: 285, column: 62, scope: !1788)
!1925 = !DILocation(line: 285, column: 31, scope: !1788)
!1926 = !DILocation(line: 286, column: 10, scope: !1788)
!1927 = !DILocation(line: 288, column: 6, scope: !1684)
!1928 = !DILocation(line: 288, column: 17, scope: !1684)
!1929 = !DILocation(line: 289, column: 6, scope: !1684)
!1930 = !DILocation(line: 291, column: 3, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 290, column: 2)
!1932 = !DILocation(line: 292, column: 3, scope: !1931)
!1933 = !DILocalVariable(name: "a", scope: !1684, file: !6, line: 295, type: !1934, align: 8)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "uint*", baseType: !88, size: 64, align: 64, dwarfAddressSpace: 0)
!1935 = !DILocation(line: 295, column: 8, scope: !1684)
!1936 = !DILocalVariable(name: "z", scope: !1684, file: !6, line: 295, type: !1934, align: 8)
!1937 = !DILocation(line: 295, column: 11, scope: !1684)
!1938 = !DILocalVariable(name: "r", scope: !1684, file: !6, line: 295, type: !1934, align: 8)
!1939 = !DILocation(line: 295, column: 14, scope: !1684)
!1940 = !DILocation(line: 296, column: 6, scope: !1684)
!1941 = !DILocation(line: 298, column: 16, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 297, column: 2)
!1943 = !DILocation(line: 302, column: 16, scope: !1944)
!1944 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 301, column: 2)
!1945 = !DILocation(line: 305, column: 2, scope: !1684)
!1946 = !DILocation(line: 309, column: 11, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 305, column: 2)
!1948 = !DILocalVariable(name: "v", scope: !1949, file: !6, line: 307, type: !88, align: 4)
!1949 = distinct !DILexicalBlock(scope: !1947, file: !6, line: 306, column: 2)
!1950 = !DILocation(line: 307, column: 8, scope: !1949)
!1951 = !DILocation(line: 307, column: 12, scope: !1949)
!1952 = !DILocation(line: 307, column: 22, scope: !1949)
!1953 = !DILocation(line: 308, column: 21, scope: !1949)
!1954 = !DILocation(line: 308, column: 25, scope: !1949)
!1955 = !DILocation(line: 308, column: 7, scope: !1949)
!1956 = !DILocation(line: 311, column: 2, scope: !1684)
!1957 = !DILocation(line: 311, column: 9, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 311, column: 2)
!1959 = !DILocalVariable(name: "carry", scope: !1960, file: !6, line: 313, type: !88, align: 4)
!1960 = distinct !DILexicalBlock(scope: !1958, file: !6, line: 312, column: 2)
!1961 = !DILocation(line: 313, column: 8, scope: !1960)
!1962 = !DILocation(line: 313, column: 16, scope: !1960)
!1963 = !DILocalVariable(name: "sh", scope: !1960, file: !6, line: 314, type: !3, align: 4)
!1964 = !DILocation(line: 314, column: 7, scope: !1960)
!1965 = !DILocation(line: 400, column: 16, scope: !1966, inlinedAt: !1967)
!1966 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1706, file: !1706, line: 397, scopeLine: 397, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!1967 = !DILocation(line: 314, column: 18, scope: !1960)
!1968 = !DILocation(line: 400, column: 19, scope: !1966, inlinedAt: !1967)
!1969 = !DILocalVariable(name: "d", scope: !1970, file: !6, line: 315, type: !1934, align: 8)
!1970 = distinct !DILexicalBlock(scope: !1960, file: !6, line: 315, column: 3)
!1971 = !DILocation(line: 315, column: 14, scope: !1970)
!1972 = !DILocation(line: 315, column: 18, scope: !1970)
!1973 = !DILocation(line: 315, column: 22, scope: !1970)
!1974 = !DILocation(line: 315, column: 25, scope: !1970)
!1975 = !DILocation(line: 315, column: 30, scope: !1970)
!1976 = !DILocalVariable(name: "x", scope: !1977, file: !6, line: 317, type: !199, align: 8)
!1977 = distinct !DILexicalBlock(scope: !1970, file: !6, line: 316, column: 3)
!1978 = !DILocation(line: 317, column: 10, scope: !1977)
!1979 = !DILocation(line: 317, column: 22, scope: !1977)
!1980 = !DILocation(line: 317, column: 27, scope: !1977)
!1981 = !DILocation(line: 317, column: 15, scope: !1977)
!1982 = !DILocation(line: 317, column: 32, scope: !1977)
!1983 = !DILocation(line: 318, column: 5, scope: !1977)
!1984 = !DILocation(line: 318, column: 16, scope: !1977)
!1985 = !DILocation(line: 318, column: 10, scope: !1977)
!1986 = !DILocation(line: 319, column: 19, scope: !1977)
!1987 = !DILocation(line: 319, column: 13, scope: !1977)
!1988 = !DILocation(line: 315, column: 33, scope: !1970)
!1989 = !DILocation(line: 321, column: 7, scope: !1960)
!1990 = !DILocation(line: 321, column: 17, scope: !1960)
!1991 = !DILocation(line: 321, column: 21, scope: !1960)
!1992 = !DILocation(line: 322, column: 3, scope: !1960)
!1993 = !DILocation(line: 322, column: 10, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !1960, file: !6, line: 322, column: 3)
!1995 = !DILocation(line: 322, column: 14, scope: !1994)
!1996 = !DILocation(line: 322, column: 20, scope: !1994)
!1997 = !DILocation(line: 322, column: 22, scope: !1994)
!1998 = !DILocation(line: 322, column: 27, scope: !1994)
!1999 = !DILocation(line: 323, column: 3, scope: !1960)
!2000 = !DILocation(line: 323, column: 9, scope: !1960)
!2001 = !DILocation(line: 326, column: 2, scope: !1684)
!2002 = !DILocation(line: 326, column: 9, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 326, column: 2)
!2004 = !DILocalVariable(name: "carry", scope: !2005, file: !6, line: 328, type: !88, align: 4)
!2005 = distinct !DILexicalBlock(scope: !2003, file: !6, line: 327, column: 2)
!2006 = !DILocation(line: 328, column: 8, scope: !2005)
!2007 = !DILocation(line: 328, column: 16, scope: !2005)
!2008 = !DILocalVariable(name: "b", scope: !2005, file: !6, line: 329, type: !1934, align: 8)
!2009 = !DILocation(line: 329, column: 9, scope: !2005)
!2010 = !DILocalVariable(name: "sh", scope: !2005, file: !6, line: 330, type: !3, align: 4)
!2011 = !DILocation(line: 330, column: 7, scope: !2005)
!2012 = !DILocation(line: 330, column: 26, scope: !2005)
!2013 = !DILocation(line: 400, column: 16, scope: !2014, inlinedAt: !2015)
!2014 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1706, file: !1706, line: 397, scopeLine: 397, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!2015 = !DILocation(line: 330, column: 18, scope: !2005)
!2016 = !DILocation(line: 400, column: 19, scope: !2014, inlinedAt: !2015)
!2017 = !DILocalVariable(name: "need", scope: !2005, file: !6, line: 331, type: !3, align: 4)
!2018 = !DILocation(line: 331, column: 7, scope: !2005)
!2019 = !DILocation(line: 331, column: 25, scope: !2005)
!2020 = !DILocation(line: 331, column: 15, scope: !2005)
!2021 = !DILocalVariable(name: "d", scope: !2022, file: !6, line: 332, type: !1934, align: 8)
!2022 = distinct !DILexicalBlock(scope: !2005, file: !6, line: 332, column: 3)
!2023 = !DILocation(line: 332, column: 14, scope: !2022)
!2024 = !DILocation(line: 332, column: 18, scope: !2022)
!2025 = !DILocation(line: 332, column: 21, scope: !2022)
!2026 = !DILocation(line: 332, column: 25, scope: !2022)
!2027 = !DILocalVariable(name: "rm", scope: !2028, file: !6, line: 335, type: !88, align: 4)
!2028 = distinct !DILexicalBlock(scope: !2022, file: !6, line: 333, column: 3)
!2029 = !DILocation(line: 335, column: 9, scope: !2028)
!2030 = !DILocation(line: 335, column: 15, scope: !2028)
!2031 = !DILocation(line: 335, column: 26, scope: !2028)
!2032 = !DILocation(line: 335, column: 21, scope: !2028)
!2033 = !DILocation(line: 335, column: 14, scope: !2028)
!2034 = !DILocation(line: 336, column: 5, scope: !2028)
!2035 = !DILocation(line: 336, column: 11, scope: !2028)
!2036 = !DILocation(line: 336, column: 16, scope: !2028)
!2037 = !DILocation(line: 336, column: 10, scope: !2028)
!2038 = !DILocation(line: 336, column: 22, scope: !2028)
!2039 = !DILocation(line: 337, column: 27, scope: !2028)
!2040 = !DILocation(line: 337, column: 13, scope: !2028)
!2041 = !DILocation(line: 337, column: 33, scope: !2028)
!2042 = !DILocation(line: 332, column: 28, scope: !2022)
!2043 = !DILocation(line: 339, column: 8, scope: !2005)
!2044 = !DILocation(line: 339, column: 10, scope: !2005)
!2045 = !DILocation(line: 339, column: 14, scope: !2005)
!2046 = !DILocation(line: 340, column: 7, scope: !2005)
!2047 = !DILocation(line: 340, column: 14, scope: !2005)
!2048 = !DILocation(line: 340, column: 23, scope: !2005)
!2049 = !DILocation(line: 342, column: 7, scope: !2005)
!2050 = !DILocation(line: 342, column: 29, scope: !2005)
!2051 = !DILocation(line: 342, column: 33, scope: !2005)
!2052 = !DILocation(line: 343, column: 7, scope: !2005)
!2053 = !DILocation(line: 343, column: 11, scope: !2005)
!2054 = !DILocation(line: 343, column: 15, scope: !2005)
!2055 = !DILocation(line: 343, column: 25, scope: !2005)
!2056 = !DILocation(line: 343, column: 29, scope: !2005)
!2057 = !DILocation(line: 344, column: 3, scope: !2005)
!2058 = !DILocation(line: 344, column: 9, scope: !2005)
!2059 = !DILocalVariable(name: "e", scope: !1684, file: !6, line: 347, type: !3, align: 4)
!2060 = !DILocation(line: 347, column: 6, scope: !1684)
!2061 = !DILocation(line: 348, column: 6, scope: !1684)
!2062 = !DILocation(line: 348, column: 10, scope: !1684)
!2063 = !DILocalVariable(name: "i", scope: !2064, file: !6, line: 350, type: !3, align: 4)
!2064 = distinct !DILexicalBlock(scope: !2065, file: !6, line: 350, column: 3)
!2065 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 349, column: 2)
!2066 = !DILocation(line: 350, column: 12, scope: !2064)
!2067 = !DILocation(line: 350, column: 16, scope: !2064)
!2068 = !DILocation(line: 350, column: 35, scope: !2064)
!2069 = !DILocation(line: 350, column: 39, scope: !2064)
!2070 = !DILocation(line: 350, column: 25, scope: !2064)
!2071 = !DILocation(line: 350, column: 45, scope: !2064)
!2072 = !DILocation(line: 350, column: 50, scope: !2064)
!2073 = !DILocation(line: 350, column: 44, scope: !2064)
!2074 = !DILocation(line: 350, column: 53, scope: !2064)
!2075 = !DILocation(line: 350, column: 62, scope: !2064)
!2076 = !DILocalVariable(name: "j", scope: !1684, file: !6, line: 354, type: !3, align: 4)
!2077 = !DILocation(line: 354, column: 6, scope: !1684)
!2078 = !DILocation(line: 354, column: 16, scope: !1684)
!2079 = !DILocation(line: 354, column: 26, scope: !1684)
!2080 = !DILocation(line: 354, column: 48, scope: !1684)
!2081 = !DILocation(line: 354, column: 52, scope: !1684)
!2082 = !DILocation(line: 354, column: 62, scope: !1684)
!2083 = !DILocation(line: 354, column: 88, scope: !1684)
!2084 = !DILocation(line: 354, column: 11, scope: !1684)
!2085 = !DILocation(line: 355, column: 6, scope: !1684)
!2086 = !DILocation(line: 355, column: 15, scope: !1684)
!2087 = !DILocation(line: 355, column: 19, scope: !1684)
!2088 = !DILocation(line: 355, column: 10, scope: !1684)
!2089 = !DILocalVariable(name: "x", scope: !2090, file: !6, line: 357, type: !88, align: 4)
!2090 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 356, column: 2)
!2091 = !DILocation(line: 357, column: 8, scope: !2090)
!2092 = !DILocalVariable(name: "d", scope: !2090, file: !6, line: 359, type: !1934, align: 8)
!2093 = !DILocation(line: 359, column: 9, scope: !2090)
!2094 = !DILocation(line: 359, column: 13, scope: !2090)
!2095 = !DILocation(line: 359, column: 23, scope: !2090)
!2096 = !DILocation(line: 360, column: 3, scope: !2090)
!2097 = !DILocation(line: 361, column: 3, scope: !2090)
!2098 = !DILocalVariable(name: "i", scope: !2090, file: !6, line: 362, type: !3, align: 4)
!2099 = !DILocation(line: 362, column: 7, scope: !2090)
!2100 = !DILocation(line: 363, column: 12, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !2090, file: !6, line: 363, column: 3)
!2102 = !DILocation(line: 363, column: 16, scope: !2101)
!2103 = !DILocation(line: 363, column: 21, scope: !2101)
!2104 = !DILocation(line: 363, column: 28, scope: !2101)
!2105 = !DILocation(line: 363, column: 37, scope: !2101)
!2106 = !DILocation(line: 364, column: 8, scope: !2090)
!2107 = !DILocation(line: 364, column: 12, scope: !2090)
!2108 = !DILocation(line: 364, column: 7, scope: !2090)
!2109 = !DILocation(line: 366, column: 7, scope: !2090)
!2110 = !DILocation(line: 366, column: 13, scope: !2090)
!2111 = !DILocation(line: 366, column: 17, scope: !2090)
!2112 = !DILocation(line: 366, column: 23, scope: !2090)
!2113 = !DILocalVariable(name: "round", scope: !2114, file: !6, line: 368, type: !1660, align: 8)
!2114 = distinct !DILexicalBlock(scope: !2090, file: !6, line: 367, column: 3)
!2115 = !DILocation(line: 368, column: 11, scope: !2114)
!2116 = !DILocation(line: 368, column: 19, scope: !2114)
!2117 = !DILocalVariable(name: "small", scope: !2114, file: !6, line: 369, type: !1660, align: 8)
!2118 = !DILocation(line: 369, column: 11, scope: !2114)
!2119 = !DILocation(line: 370, column: 11, scope: !2114)
!2120 = !DILocation(line: 370, column: 15, scope: !2114)
!2121 = !DILocation(line: 370, column: 10, scope: !2114)
!2122 = !DILocation(line: 370, column: 27, scope: !2114)
!2123 = !DILocation(line: 370, column: 46, scope: !2114)
!2124 = !DILocation(line: 370, column: 50, scope: !2114)
!2125 = !DILocation(line: 370, column: 56, scope: !2114)
!2126 = !DILocation(line: 370, column: 58, scope: !2114)
!2127 = !DILocation(line: 372, column: 5, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !2114, file: !6, line: 371, column: 4)
!2129 = !DILocation(line: 376, column: 10, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2114, file: !6, line: 374, column: 4)
!2131 = !DILocation(line: 376, column: 14, scope: !2130)
!2132 = !DILocation(line: 377, column: 14, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2130, file: !6, line: 377, column: 6)
!2134 = !DILocation(line: 378, column: 10, scope: !2130)
!2135 = !DILocation(line: 378, column: 15, scope: !2130)
!2136 = !DILocation(line: 378, column: 24, scope: !2130)
!2137 = !DILocation(line: 378, column: 28, scope: !2130)
!2138 = !DILocation(line: 378, column: 33, scope: !2130)
!2139 = !DILocation(line: 379, column: 14, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2130, file: !6, line: 379, column: 6)
!2141 = !DILocation(line: 381, column: 14, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !2130, file: !6, line: 381, column: 6)
!2143 = !DILocation(line: 383, column: 8, scope: !2114)
!2144 = !DILocation(line: 383, column: 14, scope: !2114)
!2145 = !DILocation(line: 385, column: 5, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !2114, file: !6, line: 384, column: 4)
!2147 = !DILocation(line: 386, column: 5, scope: !2146)
!2148 = !DILocation(line: 388, column: 5, scope: !2114)
!2149 = !DILocation(line: 388, column: 10, scope: !2114)
!2150 = !DILocation(line: 388, column: 4, scope: !2114)
!2151 = !DILocation(line: 390, column: 8, scope: !2114)
!2152 = !DILocation(line: 390, column: 16, scope: !2114)
!2153 = !DILocation(line: 390, column: 25, scope: !2114)
!2154 = !DILocation(line: 392, column: 6, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2114, file: !6, line: 391, column: 4)
!2156 = !DILocation(line: 392, column: 11, scope: !2155)
!2157 = !DILocation(line: 392, column: 15, scope: !2155)
!2158 = !DILocation(line: 392, column: 10, scope: !2155)
!2159 = !DILocation(line: 393, column: 5, scope: !2155)
!2160 = !DILocation(line: 393, column: 13, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2155, file: !6, line: 393, column: 5)
!2162 = !DILocation(line: 393, column: 12, scope: !2161)
!2163 = !DILocation(line: 395, column: 7, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2161, file: !6, line: 394, column: 5)
!2165 = !DILocation(line: 395, column: 13, scope: !2164)
!2166 = !DILocation(line: 396, column: 10, scope: !2164)
!2167 = !DILocation(line: 396, column: 14, scope: !2164)
!2168 = !DILocation(line: 396, column: 20, scope: !2164)
!2169 = !DILocation(line: 396, column: 24, scope: !2164)
!2170 = !DILocation(line: 397, column: 8, scope: !2164)
!2171 = !DILocation(line: 397, column: 7, scope: !2164)
!2172 = !DILocation(line: 399, column: 14, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2155, file: !6, line: 399, column: 5)
!2174 = !DILocation(line: 399, column: 33, scope: !2173)
!2175 = !DILocation(line: 399, column: 37, scope: !2173)
!2176 = !DILocation(line: 399, column: 23, scope: !2173)
!2177 = !DILocation(line: 399, column: 43, scope: !2173)
!2178 = !DILocation(line: 399, column: 48, scope: !2173)
!2179 = !DILocation(line: 399, column: 42, scope: !2173)
!2180 = !DILocation(line: 399, column: 51, scope: !2173)
!2181 = !DILocation(line: 399, column: 60, scope: !2173)
!2182 = !DILocation(line: 402, column: 7, scope: !2090)
!2183 = !DILocation(line: 402, column: 11, scope: !2090)
!2184 = !DILocation(line: 402, column: 15, scope: !2090)
!2185 = !DILocation(line: 402, column: 22, scope: !2090)
!2186 = !DILocation(line: 402, column: 26, scope: !2090)
!2187 = !DILocation(line: 404, column: 2, scope: !1684)
!2188 = !DILocation(line: 404, column: 9, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 404, column: 2)
!2190 = !DILocation(line: 404, column: 11, scope: !2189)
!2191 = !DILocation(line: 404, column: 17, scope: !2189)
!2192 = !DILocation(line: 404, column: 19, scope: !2189)
!2193 = !DILocation(line: 404, column: 24, scope: !2189)
!2194 = !DILocation(line: 406, column: 6, scope: !1684)
!2195 = !DILocation(line: 408, column: 8, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 407, column: 2)
!2197 = !DILocation(line: 408, column: 11, scope: !2196)
!2198 = !DILocation(line: 409, column: 7, scope: !2196)
!2199 = !DILocation(line: 409, column: 11, scope: !2196)
!2200 = !DILocation(line: 409, column: 16, scope: !2196)
!2201 = !DILocation(line: 411, column: 17, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2196, file: !6, line: 410, column: 3)
!2203 = !DILocation(line: 412, column: 4, scope: !2202)
!2204 = !DILocation(line: 412, column: 10, scope: !2202)
!2205 = !DILocation(line: 416, column: 17, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !2196, file: !6, line: 415, column: 3)
!2207 = !DILocation(line: 417, column: 4, scope: !2206)
!2208 = !DILocation(line: 419, column: 8, scope: !2196)
!2209 = !DILocation(line: 422, column: 8, scope: !2210)
!2210 = distinct !DILexicalBlock(scope: !2196, file: !6, line: 420, column: 3)
!2211 = !DILocation(line: 422, column: 12, scope: !2210)
!2212 = !DILocation(line: 422, column: 17, scope: !2210)
!2213 = !DILocation(line: 422, column: 19, scope: !2210)
!2214 = !DILocalVariable(name: "i", scope: !2215, file: !6, line: 424, type: !3, align: 4)
!2215 = distinct !DILexicalBlock(scope: !2216, file: !6, line: 424, column: 5)
!2216 = distinct !DILexicalBlock(scope: !2210, file: !6, line: 423, column: 4)
!2217 = !DILocation(line: 424, column: 14, scope: !2215)
!2218 = !DILocation(line: 424, column: 18, scope: !2215)
!2219 = !DILocation(line: 424, column: 26, scope: !2215)
!2220 = !DILocation(line: 424, column: 29, scope: !2215)
!2221 = !DILocation(line: 424, column: 31, scope: !2215)
!2222 = !DILocation(line: 424, column: 37, scope: !2215)
!2223 = !DILocation(line: 424, column: 45, scope: !2215)
!2224 = !DILocation(line: 424, column: 54, scope: !2215)
!2225 = !DILocation(line: 428, column: 9, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2210, file: !6, line: 427, column: 4)
!2227 = !DILocation(line: 430, column: 8, scope: !2210)
!2228 = !DILocation(line: 432, column: 45, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2210, file: !6, line: 431, column: 4)
!2230 = !DILocation(line: 432, column: 49, scope: !2229)
!2231 = !DILocation(line: 432, column: 40, scope: !2229)
!2232 = !DILocation(line: 432, column: 58, scope: !2229)
!2233 = !DILocation(line: 383, column: 16, scope: !2234, inlinedAt: !2235)
!2234 = distinct !DISubprogram(name: "max", linkageName: "max", scope: !1706, file: !1706, line: 380, scopeLine: 380, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!2235 = !DILocation(line: 432, column: 28, scope: !2229)
!2236 = !DILocation(line: 383, column: 19, scope: !2234, inlinedAt: !2235)
!2237 = !DILocation(line: 400, column: 16, scope: !2238, inlinedAt: !2239)
!2238 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1706, file: !1706, line: 397, scopeLine: 397, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!2239 = !DILocation(line: 432, column: 15, scope: !2229)
!2240 = !DILocation(line: 400, column: 19, scope: !2238, inlinedAt: !2239)
!2241 = !DILocation(line: 436, column: 45, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2210, file: !6, line: 435, column: 4)
!2243 = !DILocation(line: 436, column: 49, scope: !2242)
!2244 = !DILocation(line: 436, column: 40, scope: !2242)
!2245 = !DILocation(line: 436, column: 58, scope: !2242)
!2246 = !DILocation(line: 436, column: 62, scope: !2242)
!2247 = !DILocation(line: 383, column: 16, scope: !2248, inlinedAt: !2249)
!2248 = distinct !DISubprogram(name: "max", linkageName: "max", scope: !1706, file: !1706, line: 380, scopeLine: 380, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!2249 = !DILocation(line: 436, column: 28, scope: !2242)
!2250 = !DILocation(line: 383, column: 19, scope: !2248, inlinedAt: !2249)
!2251 = !DILocation(line: 400, column: 16, scope: !2252, inlinedAt: !2253)
!2252 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1706, file: !1706, line: 397, scopeLine: 397, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!2253 = !DILocation(line: 436, column: 15, scope: !2242)
!2254 = !DILocation(line: 400, column: 19, scope: !2252, inlinedAt: !2253)
!2255 = !DILocation(line: 441, column: 6, scope: !1684)
!2256 = !DILocation(line: 441, column: 30, scope: !1684)
!2257 = !DILocation(line: 441, column: 35, scope: !1684)
!2258 = !DILocation(line: 441, column: 10, scope: !1684)
!2259 = !DILocation(line: 441, column: 60, scope: !1684)
!2260 = !DILocalVariable(name: "l", scope: !1684, file: !6, line: 442, type: !3, align: 4)
!2261 = !DILocation(line: 442, column: 6, scope: !1684)
!2262 = !DILocation(line: 442, column: 20, scope: !1684)
!2263 = !DILocation(line: 442, column: 16, scope: !1684)
!2264 = !DILocation(line: 442, column: 30, scope: !1684)
!2265 = !DILocation(line: 442, column: 35, scope: !1684)
!2266 = !DILocation(line: 442, column: 11, scope: !1684)
!2267 = !DILocalVariable(name: "estr", scope: !1684, file: !6, line: 443, type: !111, align: 8)
!2268 = !DILocation(line: 443, column: 8, scope: !1684)
!2269 = !DILocation(line: 444, column: 6, scope: !1684)
!2270 = !DILocation(line: 446, column: 7, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 445, column: 2)
!2272 = !DILocation(line: 446, column: 21, scope: !2271)
!2273 = !DILocation(line: 446, column: 11, scope: !2271)
!2274 = !DILocation(line: 446, column: 31, scope: !2271)
!2275 = !DILocation(line: 447, column: 7, scope: !2271)
!2276 = !DILocation(line: 447, column: 14, scope: !2271)
!2277 = !DILocation(line: 447, column: 19, scope: !2271)
!2278 = !DILocation(line: 451, column: 26, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 450, column: 2)
!2280 = !DILocation(line: 451, column: 35, scope: !2279)
!2281 = !DILocation(line: 451, column: 39, scope: !2279)
!2282 = !DILocation(line: 451, column: 10, scope: !2279)
!2283 = !DILocation(line: 452, column: 3, scope: !2279)
!2284 = !DILocation(line: 452, column: 10, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2279, file: !6, line: 452, column: 3)
!2286 = !DILocation(line: 452, column: 17, scope: !2285)
!2287 = !DILocation(line: 452, column: 30, scope: !2285)
!2288 = !DILocation(line: 452, column: 41, scope: !2285)
!2289 = !DILocation(line: 453, column: 6, scope: !2279)
!2290 = !DILocation(line: 453, column: 14, scope: !2279)
!2291 = !DILocation(line: 453, column: 28, scope: !2279)
!2292 = !DILocation(line: 454, column: 6, scope: !2279)
!2293 = !DILocation(line: 454, column: 13, scope: !2279)
!2294 = !DILocation(line: 454, column: 42, scope: !2279)
!2295 = !DILocation(line: 455, column: 7, scope: !2279)
!2296 = !DILocation(line: 455, column: 14, scope: !2279)
!2297 = !DILocation(line: 455, column: 36, scope: !2279)
!2298 = !DILocation(line: 455, column: 22, scope: !2279)
!2299 = !DILocation(line: 455, column: 46, scope: !2279)
!2300 = !DILocation(line: 456, column: 3, scope: !2279)
!2301 = !DILocation(line: 456, column: 14, scope: !2279)
!2302 = !DILocation(line: 456, column: 21, scope: !2279)
!2303 = !DILocation(line: 456, column: 9, scope: !2279)
!2304 = !DILocation(line: 458, column: 6, scope: !1684)
!2305 = !DILocation(line: 458, column: 20, scope: !1684)
!2306 = !DILocation(line: 458, column: 10, scope: !1684)
!2307 = !DILocation(line: 458, column: 31, scope: !1684)
!2308 = !DILocalVariable(name: "len", scope: !1684, file: !6, line: 459, type: !198, align: 8)
!2309 = !DILocation(line: 459, column: 6, scope: !1684)
!2310 = !DILocation(line: 460, column: 7, scope: !1684)
!2311 = !DILocation(line: 460, column: 27, scope: !1684)
!2312 = !DILocation(line: 460, column: 47, scope: !1684)
!2313 = !DILocation(line: 460, column: 68, scope: !1684)
!2314 = !DILocation(line: 460, column: 80, scope: !1684)
!2315 = !DILocation(line: 460, column: 85, scope: !1684)
!2316 = !DILocation(line: 460, column: 54, scope: !1684)
!2317 = !DILocation(line: 461, column: 6, scope: !1684)
!2318 = !DILocation(line: 461, column: 16, scope: !1684)
!2319 = !DILocation(line: 461, column: 33, scope: !1684)
!2320 = !DILocation(line: 461, column: 49, scope: !1684)
!2321 = !DILocation(line: 461, column: 64, scope: !1684)
!2322 = !DILocation(line: 461, column: 40, scope: !1684)
!2323 = !DILocation(line: 462, column: 6, scope: !1684)
!2324 = !DILocation(line: 462, column: 26, scope: !1684)
!2325 = !DILocation(line: 462, column: 47, scope: !1684)
!2326 = !DILocation(line: 462, column: 59, scope: !1684)
!2327 = !DILocation(line: 462, column: 64, scope: !1684)
!2328 = !DILocation(line: 462, column: 33, scope: !1684)
!2329 = !DILocation(line: 463, column: 6, scope: !1684)
!2330 = !DILocation(line: 465, column: 7, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 464, column: 2)
!2332 = !DILocation(line: 465, column: 11, scope: !2331)
!2333 = !DILocation(line: 465, column: 18, scope: !2331)
!2334 = !DILocalVariable(name: "d", scope: !2331, file: !6, line: 466, type: !1934, align: 8)
!2335 = !DILocation(line: 466, column: 9, scope: !2331)
!2336 = !DILocation(line: 466, column: 13, scope: !2331)
!2337 = !DILocation(line: 467, column: 3, scope: !2331)
!2338 = !DILocation(line: 467, column: 10, scope: !2339)
!2339 = distinct !DILexicalBlock(scope: !2331, file: !6, line: 467, column: 3)
!2340 = !DILocation(line: 467, column: 15, scope: !2339)
!2341 = !DILocalVariable(name: "s", scope: !2342, file: !6, line: 469, type: !111, align: 8)
!2342 = distinct !DILexicalBlock(scope: !2339, file: !6, line: 468, column: 3)
!2343 = !DILocation(line: 469, column: 10, scope: !2342)
!2344 = !DILocation(line: 469, column: 21, scope: !2342)
!2345 = !DILocation(line: 469, column: 24, scope: !2342)
!2346 = !DILocation(line: 469, column: 30, scope: !2342)
!2347 = !DILocation(line: 469, column: 14, scope: !2342)
!2348 = !DILocation(line: 472, column: 10, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2342, file: !6, line: 470, column: 4)
!2350 = !DILocation(line: 472, column: 15, scope: !2349)
!2351 = !DILocation(line: 473, column: 6, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2349, file: !6, line: 473, column: 6)
!2353 = !DILocation(line: 473, column: 13, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2352, file: !6, line: 473, column: 6)
!2355 = !DILocation(line: 473, column: 17, scope: !2354)
!2356 = !DILocation(line: 473, column: 25, scope: !2354)
!2357 = !DILocation(line: 473, column: 33, scope: !2354)
!2358 = !DILocation(line: 474, column: 10, scope: !2349)
!2359 = !DILocation(line: 474, column: 15, scope: !2349)
!2360 = !DILocation(line: 474, column: 21, scope: !2349)
!2361 = !DILocation(line: 475, column: 9, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2349, file: !6, line: 475, column: 6)
!2363 = !DILocation(line: 475, column: 13, scope: !2362)
!2364 = !DILocation(line: 477, column: 4, scope: !2342)
!2365 = !DILocation(line: 477, column: 26, scope: !2342)
!2366 = !DILocation(line: 477, column: 29, scope: !2342)
!2367 = !DILocation(line: 477, column: 35, scope: !2342)
!2368 = !DILocation(line: 477, column: 39, scope: !2342)
!2369 = !DILocation(line: 477, column: 11, scope: !2342)
!2370 = !DILocation(line: 467, column: 18, scope: !2339)
!2371 = !DILocation(line: 479, column: 7, scope: !2331)
!2372 = !DILocation(line: 479, column: 12, scope: !2331)
!2373 = !DILocation(line: 479, column: 29, scope: !2331)
!2374 = !DILocation(line: 479, column: 36, scope: !2331)
!2375 = !DILocation(line: 480, column: 3, scope: !2331)
!2376 = !DILocation(line: 480, column: 10, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2331, file: !6, line: 480, column: 3)
!2378 = !DILocation(line: 480, column: 14, scope: !2377)
!2379 = !DILocation(line: 480, column: 19, scope: !2377)
!2380 = !DILocalVariable(name: "s", scope: !2381, file: !6, line: 482, type: !111, align: 8)
!2381 = distinct !DILexicalBlock(scope: !2377, file: !6, line: 481, column: 3)
!2382 = !DILocation(line: 482, column: 10, scope: !2381)
!2383 = !DILocation(line: 482, column: 21, scope: !2381)
!2384 = !DILocation(line: 482, column: 24, scope: !2381)
!2385 = !DILocation(line: 482, column: 30, scope: !2381)
!2386 = !DILocation(line: 482, column: 14, scope: !2381)
!2387 = !DILocation(line: 483, column: 4, scope: !2381)
!2388 = !DILocation(line: 483, column: 11, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2381, file: !6, line: 483, column: 4)
!2390 = !DILocation(line: 483, column: 15, scope: !2389)
!2391 = !DILocation(line: 483, column: 23, scope: !2389)
!2392 = !DILocation(line: 483, column: 27, scope: !2389)
!2393 = !DILocation(line: 484, column: 4, scope: !2381)
!2394 = !DILocation(line: 484, column: 26, scope: !2381)
!2395 = !DILocation(line: 400, column: 16, scope: !2396, inlinedAt: !2397)
!2396 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1706, file: !1706, line: 397, scopeLine: 397, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!2397 = !DILocation(line: 484, column: 35, scope: !2381)
!2398 = !DILocation(line: 400, column: 19, scope: !2396, inlinedAt: !2397)
!2399 = !DILocation(line: 484, column: 11, scope: !2381)
!2400 = !DILocation(line: 480, column: 26, scope: !2377)
!2401 = !DILocation(line: 480, column: 31, scope: !2377)
!2402 = !DILocation(line: 486, column: 3, scope: !2331)
!2403 = !DILocation(line: 486, column: 24, scope: !2331)
!2404 = !DILocation(line: 486, column: 10, scope: !2331)
!2405 = !DILocation(line: 490, column: 7, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !1684, file: !6, line: 489, column: 2)
!2407 = !DILocation(line: 490, column: 12, scope: !2406)
!2408 = !DILocation(line: 490, column: 19, scope: !2406)
!2409 = !DILocation(line: 490, column: 23, scope: !2406)
!2410 = !DILocalVariable(name: "d", scope: !2411, file: !6, line: 491, type: !1934, align: 8)
!2411 = distinct !DILexicalBlock(scope: !2406, file: !6, line: 491, column: 3)
!2412 = !DILocation(line: 491, column: 14, scope: !2411)
!2413 = !DILocation(line: 491, column: 18, scope: !2411)
!2414 = !DILocation(line: 491, column: 21, scope: !2411)
!2415 = !DILocation(line: 491, column: 25, scope: !2411)
!2416 = !DILocation(line: 491, column: 30, scope: !2411)
!2417 = !DILocalVariable(name: "s", scope: !2418, file: !6, line: 493, type: !111, align: 8)
!2418 = distinct !DILexicalBlock(scope: !2411, file: !6, line: 492, column: 3)
!2419 = !DILocation(line: 493, column: 10, scope: !2418)
!2420 = !DILocation(line: 493, column: 21, scope: !2418)
!2421 = !DILocation(line: 493, column: 24, scope: !2418)
!2422 = !DILocation(line: 493, column: 30, scope: !2418)
!2423 = !DILocation(line: 493, column: 14, scope: !2418)
!2424 = !DILocation(line: 494, column: 8, scope: !2418)
!2425 = !DILocation(line: 494, column: 13, scope: !2418)
!2426 = !DILocation(line: 494, column: 19, scope: !2418)
!2427 = !DILocation(line: 494, column: 25, scope: !2418)
!2428 = !DILocation(line: 494, column: 33, scope: !2418)
!2429 = !DILocation(line: 495, column: 8, scope: !2418)
!2430 = !DILocation(line: 495, column: 13, scope: !2418)
!2431 = !DILocation(line: 497, column: 5, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2418, file: !6, line: 496, column: 4)
!2433 = !DILocation(line: 497, column: 12, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2432, file: !6, line: 497, column: 5)
!2435 = !DILocation(line: 497, column: 16, scope: !2434)
!2436 = !DILocation(line: 497, column: 24, scope: !2434)
!2437 = !DILocation(line: 497, column: 32, scope: !2434)
!2438 = !DILocation(line: 501, column: 5, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2418, file: !6, line: 500, column: 4)
!2440 = !DILocation(line: 501, column: 21, scope: !2439)
!2441 = !DILocation(line: 501, column: 12, scope: !2439)
!2442 = !DILocation(line: 502, column: 9, scope: !2439)
!2443 = !DILocation(line: 502, column: 18, scope: !2439)
!2444 = !DILocation(line: 502, column: 35, scope: !2439)
!2445 = !DILocation(line: 502, column: 42, scope: !2439)
!2446 = !DILocation(line: 504, column: 4, scope: !2418)
!2447 = !DILocation(line: 504, column: 26, scope: !2418)
!2448 = !DILocation(line: 504, column: 39, scope: !2418)
!2449 = !DILocation(line: 504, column: 45, scope: !2418)
!2450 = !DILocation(line: 504, column: 49, scope: !2418)
!2451 = !DILocation(line: 400, column: 16, scope: !2452, inlinedAt: !2453)
!2452 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1706, file: !1706, line: 397, scopeLine: 397, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!2453 = !DILocation(line: 504, column: 35, scope: !2418)
!2454 = !DILocation(line: 400, column: 19, scope: !2452, inlinedAt: !2453)
!2455 = !DILocation(line: 504, column: 11, scope: !2418)
!2456 = !DILocation(line: 505, column: 4, scope: !2418)
!2457 = !DILocation(line: 505, column: 9, scope: !2418)
!2458 = !DILocation(line: 505, column: 15, scope: !2418)
!2459 = !DILocation(line: 505, column: 19, scope: !2418)
!2460 = !DILocation(line: 491, column: 38, scope: !2411)
!2461 = !DILocation(line: 507, column: 3, scope: !2406)
!2462 = !DILocation(line: 507, column: 24, scope: !2406)
!2463 = !DILocation(line: 507, column: 10, scope: !2406)
!2464 = !DILocation(line: 508, column: 3, scope: !2406)
!2465 = !DILocation(line: 508, column: 25, scope: !2406)
!2466 = !DILocation(line: 508, column: 31, scope: !2406)
!2467 = !DILocation(line: 508, column: 38, scope: !2406)
!2468 = !DILocation(line: 508, column: 10, scope: !2406)
!2469 = !DILocation(line: 511, column: 6, scope: !1684)
!2470 = !DILocation(line: 511, column: 23, scope: !1684)
!2471 = !DILocation(line: 511, column: 44, scope: !1684)
!2472 = !DILocation(line: 511, column: 56, scope: !1684)
!2473 = !DILocation(line: 511, column: 61, scope: !1684)
!2474 = !DILocation(line: 511, column: 30, scope: !1684)
!2475 = !DILocation(line: 513, column: 9, scope: !1684)
!2476 = !DILocation(line: 259, column: 22, scope: !1788)
!2477 = !DILocation(line: 260, column: 4, scope: !1788)
!2478 = !DILocation(line: 261, column: 4, scope: !1788)
!2479 = !DILocation(line: 321, column: 15, scope: !1960)
!2480 = !DILocation(line: 396, column: 18, scope: !2164)
!2481 = !DILocation(line: 453, column: 4, scope: !2279)
!2482 = !DILocation(line: 454, column: 4, scope: !2279)
!2483 = !DILocation(line: 475, column: 7, scope: !2362)
!2484 = !DILocation(line: 483, column: 21, scope: !2389)
!2485 = distinct !DISubprogram(name: "ntoa", linkageName: "std.io.Formatter.ntoa", scope: !6, file: !6, line: 516, type: !2486, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{!109, !311, !312, !763, !485, !88}
!2488 = !DILocation(line: 517, column: 1, scope: !2485)
!2489 = !DILocalVariable(name: "self", arg: 1, scope: !2485, file: !6, line: 516, type: !312)
!2490 = !DILocation(line: 516, column: 24, scope: !2485)
!2491 = !DILocalVariable(name: "value", arg: 2, scope: !2485, file: !6, line: 516, type: !763)
!2492 = !DILocation(line: 516, column: 39, scope: !2485)
!2493 = !DILocalVariable(name: "negative", arg: 3, scope: !2485, file: !6, line: 516, type: !485)
!2494 = !DILocation(line: 516, column: 51, scope: !2485)
!2495 = !DILocalVariable(name: "base", arg: 4, scope: !2485, file: !6, line: 516, type: !88)
!2496 = !DILocation(line: 516, column: 66, scope: !2485)
!2497 = !DILocalVariable(name: "buf", scope: !2485, file: !6, line: 518, type: !2498, align: 16)
!2498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 2048, align: 8, elements: !2499)
!2499 = !{!2500}
!2500 = !DISubrange(count: 256, lowerBound: 0)
!2501 = !DILocation(line: 518, column: 32, scope: !2485)
!2502 = !DILocalVariable(name: "len", scope: !2485, file: !6, line: 519, type: !198, align: 8)
!2503 = !DILocation(line: 519, column: 6, scope: !2485)
!2504 = !DILocation(line: 522, column: 7, scope: !2485)
!2505 = !DILocation(line: 522, column: 14, scope: !2485)
!2506 = !DILocation(line: 522, column: 32, scope: !2485)
!2507 = !DILocation(line: 525, column: 7, scope: !2485)
!2508 = !DILocation(line: 525, column: 31, scope: !2485)
!2509 = !DILocalVariable(name: "past_10", scope: !2510, file: !6, line: 527, type: !8, align: 1)
!2510 = distinct !DILexicalBlock(scope: !2485, file: !6, line: 526, column: 2)
!2511 = !DILocation(line: 527, column: 8, scope: !2510)
!2512 = !DILocation(line: 527, column: 19, scope: !2510)
!2513 = !DILocation(line: 527, column: 48, scope: !2510)
!2514 = !DILocation(line: 528, column: 3, scope: !2510)
!2515 = !DILocation(line: 535, column: 10, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2510, file: !6, line: 528, column: 3)
!2517 = !DILocation(line: 530, column: 8, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2516, file: !6, line: 529, column: 3)
!2519 = !DILocation(line: 530, column: 47, scope: !2518)
!2520 = !DILocalVariable(name: "digit", scope: !2518, file: !6, line: 531, type: !8, align: 1)
!2521 = !DILocation(line: 531, column: 9, scope: !2518)
!2522 = !DILocation(line: 531, column: 24, scope: !2518)
!2523 = !DILocation(line: 531, column: 32, scope: !2518)
!2524 = !DILocation(line: 531, column: 18, scope: !2518)
!2525 = !DILocation(line: 532, column: 8, scope: !2518)
!2526 = !DILocation(line: 532, column: 17, scope: !2518)
!2527 = !DILocation(line: 532, column: 26, scope: !2518)
!2528 = !DILocation(line: 532, column: 39, scope: !2518)
!2529 = !DILocation(line: 532, column: 45, scope: !2518)
!2530 = !DILocation(line: 533, column: 4, scope: !2518)
!2531 = !DILocation(line: 533, column: 13, scope: !2518)
!2532 = !DILocation(line: 537, column: 34, scope: !2485)
!2533 = !DILocation(line: 537, column: 9, scope: !2485)
!2534 = distinct !DISubprogram(name: "ntoa_format", linkageName: "std.io.Formatter.ntoa_format", scope: !6, file: !6, line: 540, type: !2535, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!2535 = !DISubroutineType(types: !2536)
!2536 = !{!109, !311, !312, !329, !199, !485, !88}
!2537 = !DILocation(line: 541, column: 1, scope: !2534)
!2538 = !DILocalVariable(name: "self", arg: 1, scope: !2534, file: !6, line: 540, type: !312)
!2539 = !DILocation(line: 540, column: 31, scope: !2534)
!2540 = !DILocalVariable(name: "buf", arg: 2, scope: !2534, file: !6, line: 540, type: !329)
!2541 = !DILocation(line: 540, column: 45, scope: !2534)
!2542 = !DILocalVariable(name: "len", arg: 3, scope: !2534, file: !6, line: 540, type: !198)
!2543 = !DILocation(line: 540, column: 54, scope: !2534)
!2544 = !DILocalVariable(name: "negative", arg: 4, scope: !2534, file: !6, line: 540, type: !485)
!2545 = !DILocation(line: 540, column: 64, scope: !2534)
!2546 = !DILocalVariable(name: "base", arg: 5, scope: !2534, file: !6, line: 540, type: !88)
!2547 = !DILocation(line: 540, column: 79, scope: !2534)
!2548 = !DILocation(line: 543, column: 7, scope: !2534)
!2549 = !DILocation(line: 545, column: 7, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2534, file: !6, line: 544, column: 2)
!2551 = !DILocation(line: 545, column: 21, scope: !2550)
!2552 = !DILocation(line: 545, column: 44, scope: !2550)
!2553 = !DILocation(line: 545, column: 56, scope: !2550)
!2554 = !DILocation(line: 545, column: 75, scope: !2550)
!2555 = !DILocation(line: 545, column: 94, scope: !2550)
!2556 = !DILocation(line: 546, column: 3, scope: !2550)
!2557 = !DILocation(line: 546, column: 10, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2550, file: !6, line: 546, column: 3)
!2559 = !DILocation(line: 546, column: 16, scope: !2558)
!2560 = !DILocation(line: 548, column: 8, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2558, file: !6, line: 547, column: 3)
!2562 = !DILocation(line: 548, column: 15, scope: !2561)
!2563 = !DILocation(line: 548, column: 31, scope: !2561)
!2564 = !DILocation(line: 549, column: 4, scope: !2561)
!2565 = !DILocation(line: 549, column: 8, scope: !2561)
!2566 = !DILocation(line: 549, column: 17, scope: !2561)
!2567 = !DILocation(line: 551, column: 3, scope: !2550)
!2568 = !DILocation(line: 551, column: 10, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2550, file: !6, line: 551, column: 3)
!2570 = !DILocation(line: 551, column: 32, scope: !2569)
!2571 = !DILocation(line: 551, column: 38, scope: !2569)
!2572 = !DILocation(line: 553, column: 8, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2569, file: !6, line: 552, column: 3)
!2574 = !DILocation(line: 553, column: 15, scope: !2573)
!2575 = !DILocation(line: 553, column: 31, scope: !2573)
!2576 = !DILocation(line: 554, column: 4, scope: !2573)
!2577 = !DILocation(line: 554, column: 8, scope: !2573)
!2578 = !DILocation(line: 554, column: 17, scope: !2573)
!2579 = !DILocation(line: 559, column: 6, scope: !2534)
!2580 = !DILocation(line: 559, column: 25, scope: !2534)
!2581 = !DILocation(line: 561, column: 8, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2534, file: !6, line: 560, column: 2)
!2583 = !DILocation(line: 561, column: 32, scope: !2582)
!2584 = !DILocation(line: 561, column: 39, scope: !2582)
!2585 = !DILocation(line: 561, column: 46, scope: !2582)
!2586 = !DILocation(line: 561, column: 59, scope: !2582)
!2587 = !DILocation(line: 561, column: 66, scope: !2582)
!2588 = !DILocation(line: 563, column: 4, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2582, file: !6, line: 562, column: 3)
!2590 = !DILocation(line: 564, column: 8, scope: !2589)
!2591 = !DILocation(line: 564, column: 13, scope: !2589)
!2592 = !DILocation(line: 566, column: 7, scope: !2582)
!2593 = !DILocation(line: 568, column: 8, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2582, file: !6, line: 567, column: 3)
!2595 = !DILocation(line: 568, column: 19, scope: !2594)
!2596 = !DILocation(line: 568, column: 35, scope: !2594)
!2597 = !DILocation(line: 572, column: 6, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2599, file: !6, line: 572, column: 6)
!2599 = distinct !DILexicalBlock(scope: !2594, file: !6, line: 569, column: 4)
!2600 = !DILocation(line: 572, column: 10, scope: !2598)
!2601 = !DILocation(line: 572, column: 19, scope: !2598)
!2602 = !DILocation(line: 572, column: 48, scope: !2598)
!2603 = !DILocation(line: 574, column: 6, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2599, file: !6, line: 574, column: 6)
!2605 = !DILocation(line: 574, column: 10, scope: !2604)
!2606 = !DILocation(line: 574, column: 19, scope: !2604)
!2607 = !DILocation(line: 574, column: 48, scope: !2604)
!2608 = !DILocation(line: 576, column: 6, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2599, file: !6, line: 576, column: 6)
!2610 = !DILocation(line: 576, column: 10, scope: !2609)
!2611 = !DILocation(line: 576, column: 19, scope: !2609)
!2612 = !DILocation(line: 576, column: 48, scope: !2609)
!2613 = !DILocation(line: 164, column: 2, scope: !2614, inlinedAt: !2615)
!2614 = distinct !DISubprogram(name: "unreachable", linkageName: "unreachable", scope: !205, file: !205, line: 161, scopeLine: 161, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!2615 = !DILocation(line: 578, column: 6, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2599, file: !6, line: 578, column: 6)
!2617 = !DILocation(line: 166, column: 2, scope: !2614, inlinedAt: !2615)
!2618 = !DILocation(line: 580, column: 4, scope: !2594)
!2619 = !DILocation(line: 580, column: 8, scope: !2594)
!2620 = !DILocation(line: 580, column: 17, scope: !2594)
!2621 = !DILocation(line: 586, column: 8, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2534, file: !6, line: 584, column: 2)
!2623 = !DILocation(line: 587, column: 8, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2622, file: !6, line: 587, column: 4)
!2625 = !DILocation(line: 587, column: 15, scope: !2624)
!2626 = !DILocation(line: 587, column: 31, scope: !2624)
!2627 = !DILocation(line: 588, column: 4, scope: !2624)
!2628 = !DILocation(line: 588, column: 8, scope: !2624)
!2629 = !DILocation(line: 588, column: 17, scope: !2624)
!2630 = !DILocation(line: 589, column: 8, scope: !2622)
!2631 = !DILocation(line: 590, column: 8, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2622, file: !6, line: 590, column: 4)
!2633 = !DILocation(line: 590, column: 15, scope: !2632)
!2634 = !DILocation(line: 590, column: 31, scope: !2632)
!2635 = !DILocation(line: 591, column: 4, scope: !2632)
!2636 = !DILocation(line: 591, column: 8, scope: !2632)
!2637 = !DILocation(line: 591, column: 17, scope: !2632)
!2638 = !DILocation(line: 592, column: 8, scope: !2622)
!2639 = !DILocation(line: 593, column: 8, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2622, file: !6, line: 593, column: 4)
!2641 = !DILocation(line: 593, column: 15, scope: !2640)
!2642 = !DILocation(line: 593, column: 31, scope: !2640)
!2643 = !DILocation(line: 594, column: 4, scope: !2640)
!2644 = !DILocation(line: 594, column: 8, scope: !2640)
!2645 = !DILocation(line: 594, column: 17, scope: !2640)
!2646 = !DILocation(line: 596, column: 6, scope: !2534)
!2647 = !DILocation(line: 596, column: 28, scope: !2534)
!2648 = !DILocation(line: 596, column: 32, scope: !2534)
!2649 = !DILocation(line: 596, column: 33, scope: !2534)
!2650 = !DILocation(line: 596, column: 11, scope: !2534)
!2651 = !DILocation(line: 597, column: 9, scope: !2534)
!2652 = distinct !DISubprogram(name: "ntoa_any", linkageName: "std.io.Formatter.ntoa_any", scope: !6, file: !6, line: 601, type: !2653, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!109, !311, !312, !334, !88}
!2655 = !DILocation(line: 602, column: 1, scope: !2652)
!2656 = !DILocalVariable(name: "self", arg: 1, scope: !2652, file: !6, line: 601, type: !312)
!2657 = !DILocation(line: 601, column: 28, scope: !2652)
!2658 = !DILocalVariable(name: "arg", arg: 2, scope: !2652, file: !6, line: 601, type: !334)
!2659 = !DILocation(line: 601, column: 39, scope: !2652)
!2660 = !DILocalVariable(name: "base", arg: 3, scope: !2652, file: !6, line: 601, type: !88)
!2661 = !DILocation(line: 601, column: 49, scope: !2652)
!2662 = !DILocalVariable(name: "is_neg", scope: !2652, file: !6, line: 603, type: !485, align: 1)
!2663 = !DILocation(line: 603, column: 7, scope: !2652)
!2664 = !DILocation(line: 604, column: 19, scope: !2652)
!2665 = !DILocation(line: 604, column: 9, scope: !2652)
!2666 = distinct !DISubprogram(name: "out_char", linkageName: "std.io.Formatter.out_char", scope: !6, file: !6, line: 607, type: !519, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!2667 = !DILocation(line: 608, column: 1, scope: !2666)
!2668 = !DILocalVariable(name: "self", arg: 1, scope: !2666, file: !6, line: 607, type: !312)
!2669 = !DILocation(line: 607, column: 28, scope: !2666)
!2670 = !DILocalVariable(name: "arg", arg: 2, scope: !2666, file: !6, line: 607, type: !334)
!2671 = !DILocation(line: 607, column: 39, scope: !2666)
!2672 = !DILocalVariable(name: "len", scope: !2666, file: !6, line: 609, type: !198, align: 8)
!2673 = !DILocation(line: 609, column: 6, scope: !2666)
!2674 = !DILocation(line: 609, column: 12, scope: !2666)
!2675 = !DILocalVariable(name: "l", scope: !2666, file: !6, line: 610, type: !88, align: 4)
!2676 = !DILocation(line: 610, column: 7, scope: !2666)
!2677 = !DILocation(line: 610, column: 11, scope: !2666)
!2678 = !DILocation(line: 612, column: 2, scope: !2666)
!2679 = !DILocation(line: 612, column: 21, scope: !2666)
!2680 = !DILocation(line: 612, column: 9, scope: !2666)
!2681 = !DILocalVariable(name: "c", scope: !2666, file: !6, line: 614, type: !2682, align: 4)
!2682 = !DIDerivedType(tag: DW_TAG_typedef, name: "Char32", scope: !6, file: !6, line: 7, baseType: !88, align: 4)
!2683 = !DILocation(line: 614, column: 9, scope: !2666)
!2684 = !DILocation(line: 12, column: 11, scope: !2685, inlinedAt: !2687)
!2685 = distinct !DILexicalBlock(scope: !2686, file: !615, line: 15, column: 1)
!2686 = distinct !DISubprogram(name: "any_to_int", linkageName: "any_to_int", scope: !615, file: !615, line: 14, scopeLine: 14, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!2687 = !DILocation(line: 614, column: 20, scope: !2666)
!2688 = !DILocation(line: 12, column: 36, scope: !2685, inlinedAt: !2687)
!2689 = !DILocalVariable(name: "any_type", scope: !2686, file: !6, line: 16, type: !86, align: 8)
!2690 = !DILocation(line: 16, column: 9, scope: !2686, inlinedAt: !2687)
!2691 = !DILocation(line: 16, column: 20, scope: !2686, inlinedAt: !2687)
!2692 = !DILocalVariable(name: "kind", scope: !2686, file: !6, line: 17, type: !51, align: 1)
!2693 = !DILocation(line: 17, column: 11, scope: !2686, inlinedAt: !2687)
!2694 = !DILocation(line: 17, column: 18, scope: !2686, inlinedAt: !2687)
!2695 = !DILocation(line: 18, column: 6, scope: !2686, inlinedAt: !2687)
!2696 = !DILocation(line: 20, column: 14, scope: !2697, inlinedAt: !2687)
!2697 = distinct !DILexicalBlock(scope: !2686, file: !615, line: 19, column: 2)
!2698 = !DILocation(line: 21, column: 10, scope: !2697, inlinedAt: !2687)
!2699 = !DILocalVariable(name: "is_mixed_signed", scope: !2686, file: !6, line: 23, type: !485, align: 1)
!2700 = !DILocation(line: 23, column: 7, scope: !2686, inlinedAt: !2687)
!2701 = !DILocation(line: 23, column: 41, scope: !2686, inlinedAt: !2687)
!2702 = !DILocation(line: 23, column: 25, scope: !2686, inlinedAt: !2687)
!2703 = !DILocalVariable(name: "max", scope: !2686, file: !6, line: 24, type: !88, align: 4)
!2704 = !DILocation(line: 24, column: 8, scope: !2686, inlinedAt: !2687)
!2705 = !DILocation(line: 24, column: 14, scope: !2686, inlinedAt: !2687)
!2706 = !DILocalVariable(name: "min", scope: !2686, file: !6, line: 25, type: !88, align: 4)
!2707 = !DILocation(line: 25, column: 8, scope: !2686, inlinedAt: !2687)
!2708 = !DILocation(line: 25, column: 14, scope: !2686, inlinedAt: !2687)
!2709 = !DILocation(line: 28, column: 8, scope: !2710, inlinedAt: !2687)
!2710 = distinct !DILexicalBlock(scope: !2686, file: !615, line: 26, column: 2)
!2711 = !DILocalVariable(name: "c", scope: !2712, file: !6, line: 29, type: !643, align: 1)
!2712 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 29, column: 4)
!2713 = !DILocation(line: 29, column: 10, scope: !2712, inlinedAt: !2687)
!2714 = !DILocation(line: 29, column: 22, scope: !2712, inlinedAt: !2687)
!2715 = !DILocation(line: 29, column: 16, scope: !2712, inlinedAt: !2687)
!2716 = !DILocation(line: 30, column: 8, scope: !2712, inlinedAt: !2687)
!2717 = !DILocation(line: 30, column: 27, scope: !2712, inlinedAt: !2687)
!2718 = !DILocation(line: 30, column: 41, scope: !2712, inlinedAt: !2687)
!2719 = !DILocation(line: 31, column: 12, scope: !2712, inlinedAt: !2687)
!2720 = !DILocation(line: 32, column: 8, scope: !2710, inlinedAt: !2687)
!2721 = !DILocalVariable(name: "s", scope: !2722, file: !6, line: 33, type: !654, align: 2)
!2722 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 33, column: 4)
!2723 = !DILocation(line: 33, column: 10, scope: !2722, inlinedAt: !2687)
!2724 = !DILocation(line: 33, column: 23, scope: !2722, inlinedAt: !2687)
!2725 = !DILocation(line: 33, column: 16, scope: !2722, inlinedAt: !2687)
!2726 = !DILocation(line: 34, column: 8, scope: !2722, inlinedAt: !2687)
!2727 = !DILocation(line: 34, column: 27, scope: !2722, inlinedAt: !2687)
!2728 = !DILocation(line: 34, column: 41, scope: !2722, inlinedAt: !2687)
!2729 = !DILocation(line: 35, column: 8, scope: !2722, inlinedAt: !2687)
!2730 = !DILocation(line: 35, column: 12, scope: !2722, inlinedAt: !2687)
!2731 = !DILocation(line: 35, column: 19, scope: !2722, inlinedAt: !2687)
!2732 = !DILocation(line: 35, column: 23, scope: !2722, inlinedAt: !2687)
!2733 = !DILocation(line: 35, column: 35, scope: !2722, inlinedAt: !2687)
!2734 = !DILocation(line: 36, column: 12, scope: !2722, inlinedAt: !2687)
!2735 = !DILocation(line: 37, column: 8, scope: !2710, inlinedAt: !2687)
!2736 = !DILocalVariable(name: "i", scope: !2737, file: !6, line: 38, type: !3, align: 4)
!2737 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 38, column: 4)
!2738 = !DILocation(line: 38, column: 8, scope: !2737, inlinedAt: !2687)
!2739 = !DILocation(line: 38, column: 19, scope: !2737, inlinedAt: !2687)
!2740 = !DILocation(line: 38, column: 14, scope: !2737, inlinedAt: !2687)
!2741 = !DILocation(line: 39, column: 8, scope: !2737, inlinedAt: !2687)
!2742 = !DILocation(line: 39, column: 27, scope: !2737, inlinedAt: !2687)
!2743 = !DILocation(line: 39, column: 41, scope: !2737, inlinedAt: !2687)
!2744 = !DILocation(line: 40, column: 8, scope: !2737, inlinedAt: !2687)
!2745 = !DILocation(line: 40, column: 12, scope: !2737, inlinedAt: !2687)
!2746 = !DILocation(line: 40, column: 19, scope: !2737, inlinedAt: !2687)
!2747 = !DILocation(line: 40, column: 23, scope: !2737, inlinedAt: !2687)
!2748 = !DILocation(line: 40, column: 35, scope: !2737, inlinedAt: !2687)
!2749 = !DILocation(line: 41, column: 12, scope: !2737, inlinedAt: !2687)
!2750 = !DILocation(line: 42, column: 8, scope: !2710, inlinedAt: !2687)
!2751 = !DILocalVariable(name: "l", scope: !2752, file: !6, line: 43, type: !110, align: 8)
!2752 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 43, column: 4)
!2753 = !DILocation(line: 43, column: 9, scope: !2752, inlinedAt: !2687)
!2754 = !DILocation(line: 43, column: 21, scope: !2752, inlinedAt: !2687)
!2755 = !DILocation(line: 43, column: 15, scope: !2752, inlinedAt: !2687)
!2756 = !DILocation(line: 44, column: 8, scope: !2752, inlinedAt: !2687)
!2757 = !DILocation(line: 44, column: 27, scope: !2752, inlinedAt: !2687)
!2758 = !DILocation(line: 44, column: 41, scope: !2752, inlinedAt: !2687)
!2759 = !DILocation(line: 45, column: 8, scope: !2752, inlinedAt: !2687)
!2760 = !DILocation(line: 45, column: 12, scope: !2752, inlinedAt: !2687)
!2761 = !DILocation(line: 45, column: 19, scope: !2752, inlinedAt: !2687)
!2762 = !DILocation(line: 45, column: 23, scope: !2752, inlinedAt: !2687)
!2763 = !DILocation(line: 45, column: 35, scope: !2752, inlinedAt: !2687)
!2764 = !DILocation(line: 46, column: 12, scope: !2752, inlinedAt: !2687)
!2765 = !DILocation(line: 47, column: 8, scope: !2710, inlinedAt: !2687)
!2766 = !DILocalVariable(name: "i", scope: !2767, file: !6, line: 48, type: !700, align: 16)
!2767 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 48, column: 4)
!2768 = !DILocation(line: 48, column: 11, scope: !2767, inlinedAt: !2687)
!2769 = !DILocation(line: 48, column: 25, scope: !2767, inlinedAt: !2687)
!2770 = !DILocation(line: 48, column: 17, scope: !2767, inlinedAt: !2687)
!2771 = !DILocation(line: 49, column: 8, scope: !2767, inlinedAt: !2687)
!2772 = !DILocation(line: 49, column: 27, scope: !2767, inlinedAt: !2687)
!2773 = !DILocation(line: 49, column: 41, scope: !2767, inlinedAt: !2687)
!2774 = !DILocation(line: 50, column: 8, scope: !2767, inlinedAt: !2687)
!2775 = !DILocation(line: 50, column: 12, scope: !2767, inlinedAt: !2687)
!2776 = !DILocation(line: 50, column: 19, scope: !2767, inlinedAt: !2687)
!2777 = !DILocation(line: 50, column: 23, scope: !2767, inlinedAt: !2687)
!2778 = !DILocation(line: 50, column: 35, scope: !2767, inlinedAt: !2687)
!2779 = !DILocation(line: 51, column: 12, scope: !2767, inlinedAt: !2687)
!2780 = !DILocation(line: 52, column: 8, scope: !2710, inlinedAt: !2687)
!2781 = !DILocalVariable(name: "c", scope: !2782, file: !6, line: 53, type: !8, align: 1)
!2782 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 53, column: 4)
!2783 = !DILocation(line: 53, column: 9, scope: !2782, inlinedAt: !2687)
!2784 = !DILocation(line: 53, column: 21, scope: !2782, inlinedAt: !2687)
!2785 = !DILocation(line: 53, column: 15, scope: !2782, inlinedAt: !2687)
!2786 = !DILocation(line: 54, column: 8, scope: !2782, inlinedAt: !2687)
!2787 = !DILocation(line: 54, column: 12, scope: !2782, inlinedAt: !2687)
!2788 = !DILocation(line: 54, column: 24, scope: !2782, inlinedAt: !2687)
!2789 = !DILocation(line: 55, column: 12, scope: !2782, inlinedAt: !2687)
!2790 = !DILocation(line: 56, column: 8, scope: !2710, inlinedAt: !2687)
!2791 = !DILocalVariable(name: "s", scope: !2792, file: !6, line: 57, type: !726, align: 2)
!2792 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 57, column: 4)
!2793 = !DILocation(line: 57, column: 11, scope: !2792, inlinedAt: !2687)
!2794 = !DILocation(line: 57, column: 25, scope: !2792, inlinedAt: !2687)
!2795 = !DILocation(line: 57, column: 17, scope: !2792, inlinedAt: !2687)
!2796 = !DILocation(line: 58, column: 8, scope: !2792, inlinedAt: !2687)
!2797 = !DILocation(line: 58, column: 12, scope: !2792, inlinedAt: !2687)
!2798 = !DILocation(line: 58, column: 19, scope: !2792, inlinedAt: !2687)
!2799 = !DILocation(line: 58, column: 23, scope: !2792, inlinedAt: !2687)
!2800 = !DILocation(line: 58, column: 35, scope: !2792, inlinedAt: !2687)
!2801 = !DILocation(line: 59, column: 12, scope: !2792, inlinedAt: !2687)
!2802 = !DILocation(line: 60, column: 8, scope: !2710, inlinedAt: !2687)
!2803 = !DILocalVariable(name: "i", scope: !2804, file: !6, line: 61, type: !88, align: 4)
!2804 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 61, column: 4)
!2805 = !DILocation(line: 61, column: 9, scope: !2804, inlinedAt: !2687)
!2806 = !DILocation(line: 61, column: 21, scope: !2804, inlinedAt: !2687)
!2807 = !DILocation(line: 61, column: 15, scope: !2804, inlinedAt: !2687)
!2808 = !DILocation(line: 62, column: 8, scope: !2804, inlinedAt: !2687)
!2809 = !DILocation(line: 62, column: 12, scope: !2804, inlinedAt: !2687)
!2810 = !DILocation(line: 62, column: 19, scope: !2804, inlinedAt: !2687)
!2811 = !DILocation(line: 62, column: 23, scope: !2804, inlinedAt: !2687)
!2812 = !DILocation(line: 62, column: 35, scope: !2804, inlinedAt: !2687)
!2813 = !DILocation(line: 63, column: 12, scope: !2804, inlinedAt: !2687)
!2814 = !DILocation(line: 64, column: 8, scope: !2710, inlinedAt: !2687)
!2815 = !DILocalVariable(name: "l", scope: !2816, file: !6, line: 65, type: !199, align: 8)
!2816 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 65, column: 4)
!2817 = !DILocation(line: 65, column: 10, scope: !2816, inlinedAt: !2687)
!2818 = !DILocation(line: 65, column: 23, scope: !2816, inlinedAt: !2687)
!2819 = !DILocation(line: 65, column: 16, scope: !2816, inlinedAt: !2687)
!2820 = !DILocation(line: 66, column: 8, scope: !2816, inlinedAt: !2687)
!2821 = !DILocation(line: 66, column: 12, scope: !2816, inlinedAt: !2687)
!2822 = !DILocation(line: 66, column: 19, scope: !2816, inlinedAt: !2687)
!2823 = !DILocation(line: 66, column: 23, scope: !2816, inlinedAt: !2687)
!2824 = !DILocation(line: 66, column: 35, scope: !2816, inlinedAt: !2687)
!2825 = !DILocation(line: 67, column: 12, scope: !2816, inlinedAt: !2687)
!2826 = !DILocation(line: 68, column: 8, scope: !2710, inlinedAt: !2687)
!2827 = !DILocalVariable(name: "i", scope: !2828, file: !6, line: 69, type: !763, align: 16)
!2828 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 69, column: 4)
!2829 = !DILocation(line: 69, column: 12, scope: !2828, inlinedAt: !2687)
!2830 = !DILocation(line: 69, column: 27, scope: !2828, inlinedAt: !2687)
!2831 = !DILocation(line: 69, column: 18, scope: !2828, inlinedAt: !2687)
!2832 = !DILocation(line: 70, column: 8, scope: !2828, inlinedAt: !2687)
!2833 = !DILocation(line: 70, column: 12, scope: !2828, inlinedAt: !2687)
!2834 = !DILocation(line: 70, column: 19, scope: !2828, inlinedAt: !2687)
!2835 = !DILocation(line: 70, column: 23, scope: !2828, inlinedAt: !2687)
!2836 = !DILocation(line: 70, column: 35, scope: !2828, inlinedAt: !2687)
!2837 = !DILocation(line: 71, column: 12, scope: !2828, inlinedAt: !2687)
!2838 = !DILocation(line: 164, column: 2, scope: !2839, inlinedAt: !2840)
!2839 = distinct !DISubprogram(name: "unreachable", linkageName: "unreachable", scope: !205, file: !205, line: 161, scopeLine: 161, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!2840 = !DILocation(line: 73, column: 4, scope: !2841, inlinedAt: !2687)
!2841 = distinct !DILexicalBlock(scope: !2710, file: !615, line: 73, column: 4)
!2842 = !DILocation(line: 166, column: 2, scope: !2839, inlinedAt: !2840)
!2843 = !DILocation(line: 614, column: 45, scope: !2666)
!2844 = !DILocation(line: 617, column: 8, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2666, file: !6, line: 615, column: 2)
!2846 = !DILocation(line: 618, column: 14, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2845, file: !6, line: 618, column: 4)
!2848 = !DILocation(line: 618, column: 4, scope: !2847)
!2849 = !DILocation(line: 619, column: 8, scope: !2845)
!2850 = !DILocation(line: 620, column: 27, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2845, file: !6, line: 620, column: 4)
!2852 = !DILocation(line: 620, column: 14, scope: !2851)
!2853 = !DILocation(line: 620, column: 4, scope: !2851)
!2854 = !DILocation(line: 621, column: 28, scope: !2851)
!2855 = !DILocation(line: 621, column: 14, scope: !2851)
!2856 = !DILocation(line: 621, column: 4, scope: !2851)
!2857 = !DILocation(line: 622, column: 8, scope: !2845)
!2858 = !DILocation(line: 623, column: 27, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2845, file: !6, line: 623, column: 4)
!2860 = !DILocation(line: 623, column: 14, scope: !2859)
!2861 = !DILocation(line: 623, column: 4, scope: !2859)
!2862 = !DILocation(line: 624, column: 28, scope: !2859)
!2863 = !DILocation(line: 624, column: 14, scope: !2859)
!2864 = !DILocation(line: 624, column: 4, scope: !2859)
!2865 = !DILocation(line: 625, column: 28, scope: !2859)
!2866 = !DILocation(line: 625, column: 14, scope: !2859)
!2867 = !DILocation(line: 625, column: 4, scope: !2859)
!2868 = !DILocation(line: 627, column: 27, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2845, file: !6, line: 627, column: 4)
!2870 = !DILocation(line: 627, column: 14, scope: !2869)
!2871 = !DILocation(line: 627, column: 4, scope: !2869)
!2872 = !DILocation(line: 628, column: 28, scope: !2869)
!2873 = !DILocation(line: 628, column: 14, scope: !2869)
!2874 = !DILocation(line: 628, column: 4, scope: !2869)
!2875 = !DILocation(line: 629, column: 28, scope: !2869)
!2876 = !DILocation(line: 629, column: 14, scope: !2869)
!2877 = !DILocation(line: 629, column: 4, scope: !2869)
!2878 = !DILocation(line: 630, column: 28, scope: !2869)
!2879 = !DILocation(line: 630, column: 14, scope: !2869)
!2880 = !DILocation(line: 630, column: 4, scope: !2869)
!2881 = !DILocation(line: 632, column: 2, scope: !2666)
!2882 = !DILocation(line: 632, column: 21, scope: !2666)
!2883 = !DILocation(line: 632, column: 9, scope: !2666)
!2884 = !DILocation(line: 633, column: 9, scope: !2666)
!2885 = distinct !DISubprogram(name: "out_reverse", linkageName: "std.io.Formatter.out_reverse", scope: !6, file: !6, line: 637, type: !1641, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!2886 = !DILocation(line: 638, column: 1, scope: !2885)
!2887 = !DILocalVariable(name: "self", arg: 1, scope: !2885, file: !6, line: 637, type: !312)
!2888 = !DILocation(line: 637, column: 31, scope: !2885)
!2889 = !DILocalVariable(name: "buf", arg: 2, scope: !2885, file: !6, line: 637, type: !194)
!2890 = !DILocation(line: 637, column: 45, scope: !2885)
!2891 = !DILocalVariable(name: "n", scope: !2885, file: !6, line: 639, type: !198, align: 8)
!2892 = !DILocation(line: 639, column: 6, scope: !2885)
!2893 = !DILocalVariable(name: "buffer_start_idx", scope: !2885, file: !6, line: 640, type: !198, align: 8)
!2894 = !DILocation(line: 640, column: 6, scope: !2885)
!2895 = !DILocation(line: 640, column: 25, scope: !2885)
!2896 = !DILocalVariable(name: "len", scope: !2885, file: !6, line: 641, type: !198, align: 8)
!2897 = !DILocation(line: 641, column: 6, scope: !2885)
!2898 = !DILocation(line: 641, column: 12, scope: !2885)
!2899 = !DILocation(line: 643, column: 7, scope: !2885)
!2900 = !DILocation(line: 643, column: 30, scope: !2885)
!2901 = !DILocation(line: 645, column: 3, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2885, file: !6, line: 644, column: 2)
!2903 = !DILocation(line: 645, column: 22, scope: !2902)
!2904 = !DILocation(line: 645, column: 8, scope: !2902)
!2905 = !DILocation(line: 648, column: 2, scope: !2885)
!2906 = !DILocation(line: 648, column: 9, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2885, file: !6, line: 648, column: 2)
!2908 = !DILocation(line: 648, column: 14, scope: !2907)
!2909 = !DILocation(line: 648, column: 28, scope: !2907)
!2910 = !DILocation(line: 648, column: 34, scope: !2907)
!2911 = !DILocation(line: 648, column: 32, scope: !2907)
!2912 = !DILocation(line: 648, column: 19, scope: !2907)
!2913 = !DILocation(line: 651, column: 2, scope: !2885)
!2914 = !DILocation(line: 651, column: 7, scope: !2885)
!2915 = !DILocation(line: 652, column: 9, scope: !2885)
!2916 = distinct !DISubprogram(name: "int_from_any", linkageName: "std.io.int_from_any", scope: !6, file: !6, line: 25, type: !2917, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{!109, !2919, !334, !2920}
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "uint128*", baseType: !763, size: 64, align: 64, dwarfAddressSpace: 0)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "bool*", baseType: !485, size: 64, align: 64, dwarfAddressSpace: 0)
!2921 = !DILocalVariable(name: "arg", arg: 1, scope: !2916, file: !6, line: 25, type: !334)
!2922 = !DILocation(line: 25, column: 30, scope: !2916)
!2923 = !DILocalVariable(name: "is_neg", arg: 2, scope: !2916, file: !6, line: 25, type: !2920)
!2924 = !DILocation(line: 25, column: 41, scope: !2916)
!2925 = !DILocation(line: 27, column: 10, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2916, file: !6, line: 27, column: 2)
!2927 = !DILocation(line: 30, column: 5, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2926, file: !6, line: 30, column: 4)
!2929 = !DILocation(line: 30, column: 14, scope: !2928)
!2930 = !DILocation(line: 31, column: 35, scope: !2928)
!2931 = !DILocation(line: 31, column: 28, scope: !2928)
!2932 = !DILocation(line: 199, column: 20, scope: !2933, inlinedAt: !2934)
!2933 = distinct !DISubprogram(name: "as_inner", linkageName: "as_inner", scope: !205, file: !205, line: 197, scopeLine: 197, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!2934 = !DILocation(line: 34, column: 24, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2926, file: !6, line: 34, column: 4)
!2936 = !DILocation(line: 199, column: 30, scope: !2933, inlinedAt: !2934)
!2937 = !DILocation(line: 34, column: 11, scope: !2935)
!2938 = !DILocation(line: 36, column: 4, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2926, file: !6, line: 36, column: 4)
!2940 = !DILocation(line: 38, column: 3, scope: !2916)
!2941 = !DILocation(line: 38, column: 12, scope: !2916)
!2942 = !DILocation(line: 39, column: 10, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2916, file: !6, line: 39, column: 2)
!2944 = !DILocation(line: 41, column: 8, scope: !2943)
!2945 = !DILocalVariable(name: "arg", scope: !2946, file: !6, line: 25, type: !2920, align: 8)
!2946 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 42, column: 4)
!2947 = !DILocation(line: 25, column: 30, scope: !2946)
!2948 = !DILocation(line: 42, column: 21, scope: !2946)
!2949 = !DILocation(line: 43, column: 8, scope: !2943)
!2950 = !DILocalVariable(name: "arg", scope: !2951, file: !6, line: 25, type: !2952, align: 8)
!2951 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 44, column: 4)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ichar*", baseType: !643, size: 64, align: 64, dwarfAddressSpace: 0)
!2953 = !DILocation(line: 25, column: 30, scope: !2951)
!2954 = !DILocalVariable(name: "val", scope: !2951, file: !6, line: 44, type: !3, align: 4)
!2955 = !DILocation(line: 44, column: 8, scope: !2951)
!2956 = !DILocation(line: 44, column: 15, scope: !2951)
!2957 = !DILocation(line: 45, column: 13, scope: !2951)
!2958 = !DILocation(line: 45, column: 22, scope: !2951)
!2959 = !DILocation(line: 45, column: 36, scope: !2951)
!2960 = !DILocation(line: 45, column: 34, scope: !2951)
!2961 = !DILocation(line: 45, column: 56, scope: !2951)
!2962 = !DILocation(line: 46, column: 8, scope: !2943)
!2963 = !DILocalVariable(name: "arg", scope: !2964, file: !6, line: 25, type: !2965, align: 8)
!2964 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 47, column: 4)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "short*", baseType: !654, size: 64, align: 64, dwarfAddressSpace: 0)
!2966 = !DILocation(line: 25, column: 30, scope: !2964)
!2967 = !DILocalVariable(name: "val", scope: !2964, file: !6, line: 47, type: !3, align: 4)
!2968 = !DILocation(line: 47, column: 8, scope: !2964)
!2969 = !DILocation(line: 47, column: 15, scope: !2964)
!2970 = !DILocation(line: 48, column: 13, scope: !2964)
!2971 = !DILocation(line: 48, column: 22, scope: !2964)
!2972 = !DILocation(line: 48, column: 36, scope: !2964)
!2973 = !DILocation(line: 48, column: 34, scope: !2964)
!2974 = !DILocation(line: 48, column: 56, scope: !2964)
!2975 = !DILocation(line: 49, column: 8, scope: !2943)
!2976 = !DILocalVariable(name: "arg", scope: !2977, file: !6, line: 25, type: !2978, align: 8)
!2977 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 50, column: 4)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "int*", baseType: !3, size: 64, align: 64, dwarfAddressSpace: 0)
!2979 = !DILocation(line: 25, column: 30, scope: !2977)
!2980 = !DILocalVariable(name: "val", scope: !2977, file: !6, line: 50, type: !3, align: 4)
!2981 = !DILocation(line: 50, column: 8, scope: !2977)
!2982 = !DILocation(line: 50, column: 15, scope: !2977)
!2983 = !DILocation(line: 51, column: 13, scope: !2977)
!2984 = !DILocation(line: 51, column: 22, scope: !2977)
!2985 = !DILocation(line: 51, column: 36, scope: !2977)
!2986 = !DILocation(line: 51, column: 34, scope: !2977)
!2987 = !DILocation(line: 51, column: 56, scope: !2977)
!2988 = !DILocation(line: 52, column: 8, scope: !2943)
!2989 = !DILocalVariable(name: "arg", scope: !2990, file: !6, line: 25, type: !2991, align: 8)
!2990 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 53, column: 4)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "long*", baseType: !110, size: 64, align: 64, dwarfAddressSpace: 0)
!2992 = !DILocation(line: 25, column: 30, scope: !2990)
!2993 = !DILocalVariable(name: "val", scope: !2990, file: !6, line: 53, type: !110, align: 8)
!2994 = !DILocation(line: 53, column: 9, scope: !2990)
!2995 = !DILocation(line: 53, column: 16, scope: !2990)
!2996 = !DILocation(line: 54, column: 13, scope: !2990)
!2997 = !DILocation(line: 54, column: 22, scope: !2990)
!2998 = !DILocation(line: 54, column: 36, scope: !2990)
!2999 = !DILocation(line: 54, column: 34, scope: !2990)
!3000 = !DILocation(line: 54, column: 56, scope: !2990)
!3001 = !DILocation(line: 55, column: 8, scope: !2943)
!3002 = !DILocalVariable(name: "arg", scope: !3003, file: !6, line: 25, type: !3004, align: 8)
!3003 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 56, column: 4)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "int128*", baseType: !700, size: 64, align: 64, dwarfAddressSpace: 0)
!3005 = !DILocation(line: 25, column: 30, scope: !3003)
!3006 = !DILocalVariable(name: "val", scope: !3003, file: !6, line: 56, type: !700, align: 16)
!3007 = !DILocation(line: 56, column: 11, scope: !3003)
!3008 = !DILocation(line: 56, column: 18, scope: !3003)
!3009 = !DILocation(line: 57, column: 13, scope: !3003)
!3010 = !DILocation(line: 57, column: 22, scope: !3003)
!3011 = !DILocation(line: 57, column: 36, scope: !3003)
!3012 = !DILocation(line: 57, column: 34, scope: !3003)
!3013 = !DILocation(line: 57, column: 56, scope: !3003)
!3014 = !DILocation(line: 58, column: 8, scope: !2943)
!3015 = !DILocalVariable(name: "arg", scope: !3016, file: !6, line: 25, type: !111, align: 8)
!3016 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 59, column: 4)
!3017 = !DILocation(line: 25, column: 30, scope: !3016)
!3018 = !DILocation(line: 59, column: 12, scope: !3016)
!3019 = !DILocation(line: 60, column: 8, scope: !2943)
!3020 = !DILocalVariable(name: "arg", scope: !3021, file: !6, line: 25, type: !3022, align: 8)
!3021 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 61, column: 4)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ushort*", baseType: !726, size: 64, align: 64, dwarfAddressSpace: 0)
!3023 = !DILocation(line: 25, column: 30, scope: !3021)
!3024 = !DILocation(line: 61, column: 12, scope: !3021)
!3025 = !DILocation(line: 62, column: 8, scope: !2943)
!3026 = !DILocalVariable(name: "arg", scope: !3027, file: !6, line: 25, type: !1934, align: 8)
!3027 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 63, column: 4)
!3028 = !DILocation(line: 25, column: 30, scope: !3027)
!3029 = !DILocation(line: 63, column: 12, scope: !3027)
!3030 = !DILocation(line: 64, column: 8, scope: !2943)
!3031 = !DILocalVariable(name: "arg", scope: !3032, file: !6, line: 25, type: !3033, align: 8)
!3032 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 65, column: 4)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ulong*", baseType: !199, size: 64, align: 64, dwarfAddressSpace: 0)
!3034 = !DILocation(line: 25, column: 30, scope: !3032)
!3035 = !DILocation(line: 65, column: 12, scope: !3032)
!3036 = !DILocation(line: 66, column: 8, scope: !2943)
!3037 = !DILocalVariable(name: "arg", scope: !3038, file: !6, line: 25, type: !2919, align: 8)
!3038 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 67, column: 4)
!3039 = !DILocation(line: 25, column: 30, scope: !3038)
!3040 = !DILocation(line: 67, column: 12, scope: !3038)
!3041 = !DILocation(line: 68, column: 8, scope: !2943)
!3042 = !DILocalVariable(name: "arg", scope: !3043, file: !6, line: 25, type: !3044, align: 8)
!3043 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 69, column: 4)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "float*", baseType: !3045, size: 64, align: 64, dwarfAddressSpace: 0)
!3045 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!3046 = !DILocation(line: 25, column: 30, scope: !3043)
!3047 = !DILocalVariable(name: "f", scope: !3043, file: !6, line: 69, type: !3045, align: 4)
!3048 = !DILocation(line: 69, column: 10, scope: !3043)
!3049 = !DILocation(line: 69, column: 15, scope: !3043)
!3050 = !DILocation(line: 70, column: 23, scope: !3043)
!3051 = !DILocation(line: 70, column: 32, scope: !3043)
!3052 = !DILocation(line: 70, column: 42, scope: !3043)
!3053 = !DILocation(line: 70, column: 46, scope: !3043)
!3054 = !DILocation(line: 71, column: 8, scope: !2943)
!3055 = !DILocalVariable(name: "arg", scope: !3056, file: !6, line: 25, type: !3057, align: 8)
!3056 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 72, column: 4)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "double*", baseType: !1660, size: 64, align: 64, dwarfAddressSpace: 0)
!3058 = !DILocation(line: 25, column: 30, scope: !3056)
!3059 = !DILocalVariable(name: "d", scope: !3056, file: !6, line: 72, type: !1660, align: 8)
!3060 = !DILocation(line: 72, column: 11, scope: !3056)
!3061 = !DILocation(line: 72, column: 16, scope: !3056)
!3062 = !DILocation(line: 73, column: 23, scope: !3056)
!3063 = !DILocation(line: 73, column: 32, scope: !3056)
!3064 = !DILocation(line: 73, column: 42, scope: !3056)
!3065 = !DILocation(line: 73, column: 46, scope: !3056)
!3066 = !DILocation(line: 75, column: 11, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !2943, file: !6, line: 75, column: 4)
!3068 = distinct !DISubprogram(name: "float_from_any", linkageName: "std.io.float_from_any", scope: !6, file: !6, line: 79, type: !3069, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{!109, !3071, !334}
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "FloatType*", baseType: !3072, size: 64, align: 64, dwarfAddressSpace: 0)
!3072 = !DIDerivedType(tag: DW_TAG_typedef, name: "FloatType", scope: !6, file: !6, line: 24, baseType: !1660, align: 8)
!3073 = !DILocalVariable(name: "arg", arg: 1, scope: !3068, file: !6, line: 79, type: !334)
!3074 = !DILocation(line: 79, column: 34, scope: !3068)
!3075 = !DILocation(line: 84, column: 6, scope: !3068)
!3076 = !DILocation(line: 199, column: 20, scope: !3077, inlinedAt: !3078)
!3077 = distinct !DISubprogram(name: "as_inner", linkageName: "as_inner", scope: !205, file: !205, line: 197, scopeLine: 197, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3078 = !DILocation(line: 86, column: 25, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3068, file: !6, line: 85, column: 2)
!3080 = !DILocation(line: 199, column: 30, scope: !3077, inlinedAt: !3078)
!3081 = !DILocation(line: 86, column: 10, scope: !3079)
!3082 = !DILocation(line: 88, column: 10, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3068, file: !6, line: 88, column: 2)
!3084 = !DILocation(line: 90, column: 8, scope: !3083)
!3085 = !DILocalVariable(name: "arg", scope: !3086, file: !6, line: 79, type: !2920, align: 8)
!3086 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 91, column: 4)
!3087 = !DILocation(line: 79, column: 34, scope: !3086)
!3088 = !DILocation(line: 91, column: 23, scope: !3086)
!3089 = !DILocation(line: 92, column: 8, scope: !3083)
!3090 = !DILocalVariable(name: "arg", scope: !3091, file: !6, line: 79, type: !2952, align: 8)
!3091 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 93, column: 4)
!3092 = !DILocation(line: 79, column: 34, scope: !3091)
!3093 = !DILocation(line: 93, column: 12, scope: !3091)
!3094 = !DILocation(line: 94, column: 8, scope: !3083)
!3095 = !DILocalVariable(name: "arg", scope: !3096, file: !6, line: 79, type: !2965, align: 8)
!3096 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 95, column: 4)
!3097 = !DILocation(line: 79, column: 34, scope: !3096)
!3098 = !DILocation(line: 95, column: 12, scope: !3096)
!3099 = !DILocation(line: 96, column: 8, scope: !3083)
!3100 = !DILocalVariable(name: "arg", scope: !3101, file: !6, line: 79, type: !2978, align: 8)
!3101 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 97, column: 4)
!3102 = !DILocation(line: 79, column: 34, scope: !3101)
!3103 = !DILocation(line: 97, column: 12, scope: !3101)
!3104 = !DILocation(line: 98, column: 8, scope: !3083)
!3105 = !DILocalVariable(name: "arg", scope: !3106, file: !6, line: 79, type: !2991, align: 8)
!3106 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 99, column: 4)
!3107 = !DILocation(line: 79, column: 34, scope: !3106)
!3108 = !DILocation(line: 99, column: 12, scope: !3106)
!3109 = !DILocation(line: 100, column: 8, scope: !3083)
!3110 = !DILocalVariable(name: "arg", scope: !3111, file: !6, line: 79, type: !3004, align: 8)
!3111 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 101, column: 4)
!3112 = !DILocation(line: 79, column: 34, scope: !3111)
!3113 = !DILocation(line: 101, column: 12, scope: !3111)
!3114 = !DILocation(line: 102, column: 8, scope: !3083)
!3115 = !DILocalVariable(name: "arg", scope: !3116, file: !6, line: 79, type: !111, align: 8)
!3116 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 103, column: 4)
!3117 = !DILocation(line: 79, column: 34, scope: !3116)
!3118 = !DILocation(line: 103, column: 12, scope: !3116)
!3119 = !DILocation(line: 104, column: 8, scope: !3083)
!3120 = !DILocalVariable(name: "arg", scope: !3121, file: !6, line: 79, type: !3022, align: 8)
!3121 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 105, column: 4)
!3122 = !DILocation(line: 79, column: 34, scope: !3121)
!3123 = !DILocation(line: 105, column: 12, scope: !3121)
!3124 = !DILocation(line: 106, column: 8, scope: !3083)
!3125 = !DILocalVariable(name: "arg", scope: !3126, file: !6, line: 79, type: !1934, align: 8)
!3126 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 107, column: 4)
!3127 = !DILocation(line: 79, column: 34, scope: !3126)
!3128 = !DILocation(line: 107, column: 12, scope: !3126)
!3129 = !DILocation(line: 108, column: 8, scope: !3083)
!3130 = !DILocalVariable(name: "arg", scope: !3131, file: !6, line: 79, type: !3033, align: 8)
!3131 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 109, column: 4)
!3132 = !DILocation(line: 79, column: 34, scope: !3131)
!3133 = !DILocation(line: 109, column: 12, scope: !3131)
!3134 = !DILocation(line: 110, column: 8, scope: !3083)
!3135 = !DILocalVariable(name: "arg", scope: !3136, file: !6, line: 79, type: !2919, align: 8)
!3136 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 111, column: 4)
!3137 = !DILocation(line: 79, column: 34, scope: !3136)
!3138 = !DILocation(line: 111, column: 12, scope: !3136)
!3139 = !DILocation(line: 112, column: 8, scope: !3083)
!3140 = !DILocalVariable(name: "arg", scope: !3141, file: !6, line: 79, type: !3044, align: 8)
!3141 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 113, column: 4)
!3142 = !DILocation(line: 79, column: 34, scope: !3141)
!3143 = !DILocation(line: 113, column: 23, scope: !3141)
!3144 = !DILocation(line: 114, column: 8, scope: !3083)
!3145 = !DILocalVariable(name: "arg", scope: !3146, file: !6, line: 79, type: !3057, align: 8)
!3146 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 115, column: 4)
!3147 = !DILocation(line: 79, column: 34, scope: !3146)
!3148 = !DILocation(line: 115, column: 23, scope: !3146)
!3149 = !DILocation(line: 117, column: 11, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3083, file: !6, line: 117, column: 4)
!3151 = distinct !DISubprogram(name: "simple_atoi", linkageName: "std.io.simple_atoi", scope: !6, file: !6, line: 130, type: !3152, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!88, !111, !199, !3033}
!3154 = !DILocalVariable(name: "buf", arg: 1, scope: !3151, file: !6, line: 130, type: !111)
!3155 = !DILocation(line: 130, column: 27, scope: !3151)
!3156 = !DILocalVariable(name: "maxlen", arg: 2, scope: !3151, file: !6, line: 130, type: !198)
!3157 = !DILocation(line: 130, column: 36, scope: !3151)
!3158 = !DILocalVariable(name: "len_ptr", arg: 3, scope: !3151, file: !6, line: 130, type: !311)
!3159 = !DILocation(line: 130, column: 49, scope: !3151)
!3160 = !DILocalVariable(name: "i", scope: !3151, file: !6, line: 132, type: !88, align: 4)
!3161 = !DILocation(line: 132, column: 7, scope: !3151)
!3162 = !DILocation(line: 132, column: 11, scope: !3151)
!3163 = !DILocalVariable(name: "len", scope: !3151, file: !6, line: 133, type: !198, align: 8)
!3164 = !DILocation(line: 133, column: 6, scope: !3151)
!3165 = !DILocation(line: 133, column: 13, scope: !3151)
!3166 = !DILocation(line: 134, column: 2, scope: !3151)
!3167 = !DILocation(line: 134, column: 9, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3151, file: !6, line: 134, column: 2)
!3169 = !DILocation(line: 134, column: 15, scope: !3168)
!3170 = !DILocalVariable(name: "c", scope: !3171, file: !6, line: 136, type: !8, align: 1)
!3171 = distinct !DILexicalBlock(scope: !3168, file: !6, line: 135, column: 2)
!3172 = !DILocation(line: 136, column: 8, scope: !3171)
!3173 = !DILocation(line: 136, column: 12, scope: !3171)
!3174 = !DILocation(line: 136, column: 16, scope: !3171)
!3175 = !DILocation(line: 137, column: 8, scope: !3171)
!3176 = !DILocation(line: 137, column: 22, scope: !3171)
!3177 = !DILocation(line: 138, column: 7, scope: !3171)
!3178 = !DILocation(line: 138, column: 16, scope: !3171)
!3179 = !DILocation(line: 139, column: 3, scope: !3171)
!3180 = !DILocation(line: 141, column: 3, scope: !3151)
!3181 = !DILocation(line: 141, column: 13, scope: !3151)
!3182 = !DILocation(line: 142, column: 9, scope: !3151)
!3183 = distinct !DISubprogram(name: "fmt_u", linkageName: "std.io.fmt_u", scope: !6, file: !6, line: 171, type: !3184, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{!111, !763, !111}
!3186 = !DILocalVariable(name: "x", arg: 1, scope: !3183, file: !6, line: 171, type: !763)
!3187 = !DILocation(line: 171, column: 24, scope: !3183)
!3188 = !DILocalVariable(name: "s", arg: 2, scope: !3183, file: !6, line: 171, type: !111)
!3189 = !DILocation(line: 171, column: 33, scope: !3183)
!3190 = !DILocation(line: 173, column: 2, scope: !3183)
!3191 = !DILocation(line: 173, column: 9, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3183, file: !6, line: 173, column: 2)
!3193 = !DILocation(line: 173, column: 36, scope: !3192)
!3194 = !DILocation(line: 173, column: 53, scope: !3192)
!3195 = !DILocation(line: 173, column: 47, scope: !3192)
!3196 = !DILocation(line: 173, column: 40, scope: !3192)
!3197 = !DILocation(line: 173, column: 24, scope: !3192)
!3198 = !DILocalVariable(name: "y", scope: !3199, file: !6, line: 174, type: !199, align: 8)
!3199 = distinct !DILexicalBlock(scope: !3183, file: !6, line: 174, column: 2)
!3200 = !DILocation(line: 174, column: 13, scope: !3199)
!3201 = !DILocation(line: 174, column: 18, scope: !3199)
!3202 = !DILocation(line: 174, column: 27, scope: !3199)
!3203 = !DILocation(line: 174, column: 42, scope: !3199)
!3204 = !DILocation(line: 174, column: 59, scope: !3199)
!3205 = !DILocation(line: 174, column: 53, scope: !3199)
!3206 = !DILocation(line: 174, column: 46, scope: !3199)
!3207 = !DILocation(line: 174, column: 30, scope: !3199)
!3208 = !DILocation(line: 175, column: 9, scope: !3183)
!3209 = !DILocation(line: 173, column: 34, scope: !3192)
!3210 = !DILocation(line: 174, column: 40, scope: !3199)
!3211 = distinct !DISubprogram(name: "printf_parse_format_field", linkageName: "std.io.printf_parse_format_field", scope: !6, file: !6, line: 656, type: !3212, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3212 = !DISubroutineType(types: !3213)
!3213 = !{!109, !2978, !333, !199, !3033, !111, !199, !3033}
!3214 = !DILocalVariable(name: "args_ptr", arg: 1, scope: !3211, file: !6, line: 657, type: !333)
!3215 = !DILocation(line: 657, column: 7, scope: !3211)
!3216 = !DILocalVariable(name: "args_len", arg: 2, scope: !3211, file: !6, line: 657, type: !198)
!3217 = !DILocation(line: 657, column: 21, scope: !3211)
!3218 = !DILocalVariable(name: "args_index_ptr", arg: 3, scope: !3211, file: !6, line: 657, type: !311)
!3219 = !DILocation(line: 657, column: 36, scope: !3211)
!3220 = !DILocalVariable(name: "format_ptr", arg: 4, scope: !3211, file: !6, line: 658, type: !111)
!3221 = !DILocation(line: 658, column: 8, scope: !3211)
!3222 = !DILocalVariable(name: "format_len", arg: 5, scope: !3211, file: !6, line: 658, type: !198)
!3223 = !DILocation(line: 658, column: 24, scope: !3211)
!3224 = !DILocalVariable(name: "index_ptr", arg: 6, scope: !3211, file: !6, line: 658, type: !311)
!3225 = !DILocation(line: 658, column: 41, scope: !3211)
!3226 = !DILocalVariable(name: "c", scope: !3211, file: !6, line: 660, type: !8, align: 1)
!3227 = !DILocation(line: 660, column: 7, scope: !3211)
!3228 = !DILocation(line: 660, column: 11, scope: !3211)
!3229 = !DILocation(line: 660, column: 23, scope: !3211)
!3230 = !DILocation(line: 661, column: 6, scope: !3211)
!3231 = !DILocation(line: 661, column: 63, scope: !3211)
!3232 = !DILocation(line: 661, column: 27, scope: !3211)
!3233 = !DILocation(line: 662, column: 6, scope: !3211)
!3234 = !DILocation(line: 662, column: 23, scope: !3211)
!3235 = !DILocalVariable(name: "len", scope: !3211, file: !6, line: 663, type: !198, align: 8)
!3236 = !DILocation(line: 663, column: 6, scope: !3211)
!3237 = !DILocation(line: 663, column: 16, scope: !3211)
!3238 = !DILocation(line: 663, column: 15, scope: !3211)
!3239 = !DILocation(line: 664, column: 6, scope: !3211)
!3240 = !DILocation(line: 664, column: 13, scope: !3211)
!3241 = !DILocation(line: 664, column: 32, scope: !3211)
!3242 = !DILocation(line: 665, column: 7, scope: !3211)
!3243 = !DILocation(line: 665, column: 25, scope: !3211)
!3244 = !DILocation(line: 665, column: 6, scope: !3211)
!3245 = !DILocation(line: 665, column: 42, scope: !3211)
!3246 = !DILocalVariable(name: "val", scope: !3211, file: !6, line: 666, type: !334, align: 8)
!3247 = !DILocation(line: 666, column: 6, scope: !3211)
!3248 = !DILocation(line: 666, column: 12, scope: !3211)
!3249 = !DILocation(line: 666, column: 23, scope: !3211)
!3250 = !DILocation(line: 666, column: 22, scope: !3211)
!3251 = !DILocation(line: 667, column: 7, scope: !3211)
!3252 = !DILocation(line: 667, column: 40, scope: !3211)
!3253 = !DILocalVariable(name: "intval", scope: !3211, file: !6, line: 668, type: !88, align: 4)
!3254 = !DILocation(line: 668, column: 8, scope: !3211)
!3255 = !DILocation(line: 12, column: 11, scope: !3256, inlinedAt: !3258)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !615, line: 15, column: 1)
!3257 = distinct !DISubprogram(name: "any_to_int", linkageName: "any_to_int", scope: !615, file: !615, line: 14, scopeLine: 14, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3258 = !DILocation(line: 668, column: 24, scope: !3211)
!3259 = !DILocation(line: 12, column: 36, scope: !3256, inlinedAt: !3258)
!3260 = !DILocalVariable(name: "any_type", scope: !3257, file: !6, line: 16, type: !86, align: 8)
!3261 = !DILocation(line: 16, column: 9, scope: !3257, inlinedAt: !3258)
!3262 = !DILocation(line: 16, column: 20, scope: !3257, inlinedAt: !3258)
!3263 = !DILocalVariable(name: "kind", scope: !3257, file: !6, line: 17, type: !51, align: 1)
!3264 = !DILocation(line: 17, column: 11, scope: !3257, inlinedAt: !3258)
!3265 = !DILocation(line: 17, column: 18, scope: !3257, inlinedAt: !3258)
!3266 = !DILocation(line: 18, column: 6, scope: !3257, inlinedAt: !3258)
!3267 = !DILocation(line: 20, column: 14, scope: !3268, inlinedAt: !3258)
!3268 = distinct !DILexicalBlock(scope: !3257, file: !615, line: 19, column: 2)
!3269 = !DILocation(line: 21, column: 10, scope: !3268, inlinedAt: !3258)
!3270 = !DILocalVariable(name: "is_mixed_signed", scope: !3257, file: !6, line: 23, type: !485, align: 1)
!3271 = !DILocation(line: 23, column: 7, scope: !3257, inlinedAt: !3258)
!3272 = !DILocation(line: 23, column: 41, scope: !3257, inlinedAt: !3258)
!3273 = !DILocation(line: 23, column: 25, scope: !3257, inlinedAt: !3258)
!3274 = !DILocalVariable(name: "max", scope: !3257, file: !6, line: 24, type: !3, align: 4)
!3275 = !DILocation(line: 24, column: 8, scope: !3257, inlinedAt: !3258)
!3276 = !DILocation(line: 24, column: 14, scope: !3257, inlinedAt: !3258)
!3277 = !DILocalVariable(name: "min", scope: !3257, file: !6, line: 25, type: !3, align: 4)
!3278 = !DILocation(line: 25, column: 8, scope: !3257, inlinedAt: !3258)
!3279 = !DILocation(line: 25, column: 14, scope: !3257, inlinedAt: !3258)
!3280 = !DILocation(line: 28, column: 8, scope: !3281, inlinedAt: !3258)
!3281 = distinct !DILexicalBlock(scope: !3257, file: !615, line: 26, column: 2)
!3282 = !DILocalVariable(name: "c", scope: !3283, file: !6, line: 29, type: !643, align: 1)
!3283 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 29, column: 4)
!3284 = !DILocation(line: 29, column: 10, scope: !3283, inlinedAt: !3258)
!3285 = !DILocation(line: 29, column: 22, scope: !3283, inlinedAt: !3258)
!3286 = !DILocation(line: 29, column: 16, scope: !3283, inlinedAt: !3258)
!3287 = !DILocation(line: 30, column: 8, scope: !3283, inlinedAt: !3258)
!3288 = !DILocation(line: 30, column: 27, scope: !3283, inlinedAt: !3258)
!3289 = !DILocation(line: 30, column: 41, scope: !3283, inlinedAt: !3258)
!3290 = !DILocation(line: 31, column: 12, scope: !3283, inlinedAt: !3258)
!3291 = !DILocation(line: 32, column: 8, scope: !3281, inlinedAt: !3258)
!3292 = !DILocalVariable(name: "s", scope: !3293, file: !6, line: 33, type: !654, align: 2)
!3293 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 33, column: 4)
!3294 = !DILocation(line: 33, column: 10, scope: !3293, inlinedAt: !3258)
!3295 = !DILocation(line: 33, column: 23, scope: !3293, inlinedAt: !3258)
!3296 = !DILocation(line: 33, column: 16, scope: !3293, inlinedAt: !3258)
!3297 = !DILocation(line: 34, column: 8, scope: !3293, inlinedAt: !3258)
!3298 = !DILocation(line: 34, column: 27, scope: !3293, inlinedAt: !3258)
!3299 = !DILocation(line: 34, column: 41, scope: !3293, inlinedAt: !3258)
!3300 = !DILocation(line: 35, column: 8, scope: !3293, inlinedAt: !3258)
!3301 = !DILocation(line: 35, column: 12, scope: !3293, inlinedAt: !3258)
!3302 = !DILocation(line: 35, column: 19, scope: !3293, inlinedAt: !3258)
!3303 = !DILocation(line: 35, column: 23, scope: !3293, inlinedAt: !3258)
!3304 = !DILocation(line: 35, column: 35, scope: !3293, inlinedAt: !3258)
!3305 = !DILocation(line: 36, column: 12, scope: !3293, inlinedAt: !3258)
!3306 = !DILocation(line: 37, column: 8, scope: !3281, inlinedAt: !3258)
!3307 = !DILocalVariable(name: "i", scope: !3308, file: !6, line: 38, type: !3, align: 4)
!3308 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 38, column: 4)
!3309 = !DILocation(line: 38, column: 8, scope: !3308, inlinedAt: !3258)
!3310 = !DILocation(line: 38, column: 19, scope: !3308, inlinedAt: !3258)
!3311 = !DILocation(line: 38, column: 14, scope: !3308, inlinedAt: !3258)
!3312 = !DILocation(line: 39, column: 8, scope: !3308, inlinedAt: !3258)
!3313 = !DILocation(line: 39, column: 27, scope: !3308, inlinedAt: !3258)
!3314 = !DILocation(line: 39, column: 41, scope: !3308, inlinedAt: !3258)
!3315 = !DILocation(line: 40, column: 8, scope: !3308, inlinedAt: !3258)
!3316 = !DILocation(line: 40, column: 12, scope: !3308, inlinedAt: !3258)
!3317 = !DILocation(line: 40, column: 19, scope: !3308, inlinedAt: !3258)
!3318 = !DILocation(line: 40, column: 23, scope: !3308, inlinedAt: !3258)
!3319 = !DILocation(line: 40, column: 35, scope: !3308, inlinedAt: !3258)
!3320 = !DILocation(line: 41, column: 12, scope: !3308, inlinedAt: !3258)
!3321 = !DILocation(line: 42, column: 8, scope: !3281, inlinedAt: !3258)
!3322 = !DILocalVariable(name: "l", scope: !3323, file: !6, line: 43, type: !110, align: 8)
!3323 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 43, column: 4)
!3324 = !DILocation(line: 43, column: 9, scope: !3323, inlinedAt: !3258)
!3325 = !DILocation(line: 43, column: 21, scope: !3323, inlinedAt: !3258)
!3326 = !DILocation(line: 43, column: 15, scope: !3323, inlinedAt: !3258)
!3327 = !DILocation(line: 44, column: 8, scope: !3323, inlinedAt: !3258)
!3328 = !DILocation(line: 44, column: 27, scope: !3323, inlinedAt: !3258)
!3329 = !DILocation(line: 44, column: 41, scope: !3323, inlinedAt: !3258)
!3330 = !DILocation(line: 45, column: 8, scope: !3323, inlinedAt: !3258)
!3331 = !DILocation(line: 45, column: 12, scope: !3323, inlinedAt: !3258)
!3332 = !DILocation(line: 45, column: 19, scope: !3323, inlinedAt: !3258)
!3333 = !DILocation(line: 45, column: 23, scope: !3323, inlinedAt: !3258)
!3334 = !DILocation(line: 45, column: 35, scope: !3323, inlinedAt: !3258)
!3335 = !DILocation(line: 46, column: 12, scope: !3323, inlinedAt: !3258)
!3336 = !DILocation(line: 47, column: 8, scope: !3281, inlinedAt: !3258)
!3337 = !DILocalVariable(name: "i", scope: !3338, file: !6, line: 48, type: !700, align: 16)
!3338 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 48, column: 4)
!3339 = !DILocation(line: 48, column: 11, scope: !3338, inlinedAt: !3258)
!3340 = !DILocation(line: 48, column: 25, scope: !3338, inlinedAt: !3258)
!3341 = !DILocation(line: 48, column: 17, scope: !3338, inlinedAt: !3258)
!3342 = !DILocation(line: 49, column: 8, scope: !3338, inlinedAt: !3258)
!3343 = !DILocation(line: 49, column: 27, scope: !3338, inlinedAt: !3258)
!3344 = !DILocation(line: 49, column: 41, scope: !3338, inlinedAt: !3258)
!3345 = !DILocation(line: 50, column: 8, scope: !3338, inlinedAt: !3258)
!3346 = !DILocation(line: 50, column: 12, scope: !3338, inlinedAt: !3258)
!3347 = !DILocation(line: 50, column: 19, scope: !3338, inlinedAt: !3258)
!3348 = !DILocation(line: 50, column: 23, scope: !3338, inlinedAt: !3258)
!3349 = !DILocation(line: 50, column: 35, scope: !3338, inlinedAt: !3258)
!3350 = !DILocation(line: 51, column: 12, scope: !3338, inlinedAt: !3258)
!3351 = !DILocation(line: 52, column: 8, scope: !3281, inlinedAt: !3258)
!3352 = !DILocalVariable(name: "c", scope: !3353, file: !6, line: 53, type: !8, align: 1)
!3353 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 53, column: 4)
!3354 = !DILocation(line: 53, column: 9, scope: !3353, inlinedAt: !3258)
!3355 = !DILocation(line: 53, column: 21, scope: !3353, inlinedAt: !3258)
!3356 = !DILocation(line: 53, column: 15, scope: !3353, inlinedAt: !3258)
!3357 = !DILocation(line: 54, column: 8, scope: !3353, inlinedAt: !3258)
!3358 = !DILocation(line: 54, column: 12, scope: !3353, inlinedAt: !3258)
!3359 = !DILocation(line: 54, column: 24, scope: !3353, inlinedAt: !3258)
!3360 = !DILocation(line: 55, column: 12, scope: !3353, inlinedAt: !3258)
!3361 = !DILocation(line: 56, column: 8, scope: !3281, inlinedAt: !3258)
!3362 = !DILocalVariable(name: "s", scope: !3363, file: !6, line: 57, type: !726, align: 2)
!3363 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 57, column: 4)
!3364 = !DILocation(line: 57, column: 11, scope: !3363, inlinedAt: !3258)
!3365 = !DILocation(line: 57, column: 25, scope: !3363, inlinedAt: !3258)
!3366 = !DILocation(line: 57, column: 17, scope: !3363, inlinedAt: !3258)
!3367 = !DILocation(line: 58, column: 8, scope: !3363, inlinedAt: !3258)
!3368 = !DILocation(line: 58, column: 12, scope: !3363, inlinedAt: !3258)
!3369 = !DILocation(line: 58, column: 19, scope: !3363, inlinedAt: !3258)
!3370 = !DILocation(line: 58, column: 23, scope: !3363, inlinedAt: !3258)
!3371 = !DILocation(line: 58, column: 35, scope: !3363, inlinedAt: !3258)
!3372 = !DILocation(line: 59, column: 12, scope: !3363, inlinedAt: !3258)
!3373 = !DILocation(line: 60, column: 8, scope: !3281, inlinedAt: !3258)
!3374 = !DILocalVariable(name: "i", scope: !3375, file: !6, line: 61, type: !88, align: 4)
!3375 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 61, column: 4)
!3376 = !DILocation(line: 61, column: 9, scope: !3375, inlinedAt: !3258)
!3377 = !DILocation(line: 61, column: 21, scope: !3375, inlinedAt: !3258)
!3378 = !DILocation(line: 61, column: 15, scope: !3375, inlinedAt: !3258)
!3379 = !DILocation(line: 62, column: 8, scope: !3375, inlinedAt: !3258)
!3380 = !DILocation(line: 62, column: 12, scope: !3375, inlinedAt: !3258)
!3381 = !DILocation(line: 62, column: 19, scope: !3375, inlinedAt: !3258)
!3382 = !DILocation(line: 62, column: 23, scope: !3375, inlinedAt: !3258)
!3383 = !DILocation(line: 62, column: 35, scope: !3375, inlinedAt: !3258)
!3384 = !DILocation(line: 63, column: 12, scope: !3375, inlinedAt: !3258)
!3385 = !DILocation(line: 64, column: 8, scope: !3281, inlinedAt: !3258)
!3386 = !DILocalVariable(name: "l", scope: !3387, file: !6, line: 65, type: !199, align: 8)
!3387 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 65, column: 4)
!3388 = !DILocation(line: 65, column: 10, scope: !3387, inlinedAt: !3258)
!3389 = !DILocation(line: 65, column: 23, scope: !3387, inlinedAt: !3258)
!3390 = !DILocation(line: 65, column: 16, scope: !3387, inlinedAt: !3258)
!3391 = !DILocation(line: 66, column: 8, scope: !3387, inlinedAt: !3258)
!3392 = !DILocation(line: 66, column: 12, scope: !3387, inlinedAt: !3258)
!3393 = !DILocation(line: 66, column: 19, scope: !3387, inlinedAt: !3258)
!3394 = !DILocation(line: 66, column: 23, scope: !3387, inlinedAt: !3258)
!3395 = !DILocation(line: 66, column: 35, scope: !3387, inlinedAt: !3258)
!3396 = !DILocation(line: 67, column: 12, scope: !3387, inlinedAt: !3258)
!3397 = !DILocation(line: 68, column: 8, scope: !3281, inlinedAt: !3258)
!3398 = !DILocalVariable(name: "i", scope: !3399, file: !6, line: 69, type: !763, align: 16)
!3399 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 69, column: 4)
!3400 = !DILocation(line: 69, column: 12, scope: !3399, inlinedAt: !3258)
!3401 = !DILocation(line: 69, column: 27, scope: !3399, inlinedAt: !3258)
!3402 = !DILocation(line: 69, column: 18, scope: !3399, inlinedAt: !3258)
!3403 = !DILocation(line: 70, column: 8, scope: !3399, inlinedAt: !3258)
!3404 = !DILocation(line: 70, column: 12, scope: !3399, inlinedAt: !3258)
!3405 = !DILocation(line: 70, column: 19, scope: !3399, inlinedAt: !3258)
!3406 = !DILocation(line: 70, column: 23, scope: !3399, inlinedAt: !3258)
!3407 = !DILocation(line: 70, column: 35, scope: !3399, inlinedAt: !3258)
!3408 = !DILocation(line: 71, column: 12, scope: !3399, inlinedAt: !3258)
!3409 = !DILocation(line: 164, column: 2, scope: !3410, inlinedAt: !3411)
!3410 = distinct !DISubprogram(name: "unreachable", linkageName: "unreachable", scope: !205, file: !205, line: 161, scopeLine: 161, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3411 = !DILocation(line: 73, column: 4, scope: !3412, inlinedAt: !3258)
!3412 = distinct !DILexicalBlock(scope: !3281, file: !615, line: 73, column: 4)
!3413 = !DILocation(line: 166, column: 2, scope: !3410, inlinedAt: !3411)
!3414 = !DILocation(line: 669, column: 9, scope: !3211)
!3415 = !DILocation(line: 669, column: 19, scope: !3211)
!3416 = distinct !DISubprogram(name: "fprintf", linkageName: "std.io.fprintf", scope: !17, file: !17, line: 138, type: !3417, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3417 = !DISubroutineType(types: !3418)
!3418 = !{!109, !311, !153, !329, !330}
!3419 = !DILocalVariable(name: "out", arg: 1, scope: !3416, file: !17, line: 138, type: !153)
!3420 = !DILocation(line: 138, column: 27, scope: !3416)
!3421 = !DILocalVariable(name: "format", arg: 2, scope: !3416, file: !17, line: 138, type: !329)
!3422 = !DILocation(line: 138, column: 39, scope: !3416)
!3423 = !DILocalVariable(name: "args", arg: 3, scope: !3416, file: !17, line: 138, type: !330)
!3424 = !DILocation(line: 138, column: 47, scope: !3416)
!3425 = !DILocalVariable(name: "formatter", scope: !3416, file: !17, line: 140, type: !313, align: 8)
!3426 = !DILocation(line: 140, column: 12, scope: !3416)
!3427 = !DILocation(line: 141, column: 2, scope: !3416)
!3428 = !DILocation(line: 142, column: 9, scope: !3416)
!3429 = distinct !DISubprogram(name: "fprintfn", linkageName: "std.io.fprintfn", scope: !17, file: !17, line: 153, type: !3417, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3430 = !DILocation(line: 155, column: 12, scope: !3429)
!3431 = !DILocalVariable(name: "out", arg: 1, scope: !3429, file: !17, line: 153, type: !153)
!3432 = !DILocation(line: 153, column: 28, scope: !3429)
!3433 = !DILocalVariable(name: "format", arg: 2, scope: !3429, file: !17, line: 153, type: !329)
!3434 = !DILocation(line: 153, column: 40, scope: !3429)
!3435 = !DILocalVariable(name: "args", arg: 3, scope: !3429, file: !17, line: 153, type: !330)
!3436 = !DILocation(line: 153, column: 48, scope: !3429)
!3437 = !DILocalVariable(name: "formatter", scope: !3429, file: !17, line: 155, type: !313, align: 8)
!3438 = !DILocation(line: 156, column: 2, scope: !3429)
!3439 = !DILocalVariable(name: "len", scope: !3429, file: !17, line: 157, type: !198, align: 8)
!3440 = !DILocation(line: 157, column: 6, scope: !3429)
!3441 = !DILocation(line: 157, column: 12, scope: !3429)
!3442 = !DILocation(line: 158, column: 17, scope: !3429)
!3443 = !DILocation(line: 158, column: 2, scope: !3429)
!3444 = !DILocation(line: 159, column: 7, scope: !3429)
!3445 = !DILocation(line: 159, column: 18, scope: !3429)
!3446 = !DILocation(line: 160, column: 9, scope: !3429)
!3447 = distinct !DISubprogram(name: "out_putstream_fn", linkageName: "std.io.out_putstream_fn", scope: !17, file: !17, line: 216, type: !319, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3448 = !DILocalVariable(name: "data", arg: 1, scope: !3447, file: !17, line: 216, type: !22)
!3449 = !DILocation(line: 216, column: 33, scope: !3447)
!3450 = !DILocalVariable(name: "c", arg: 2, scope: !3447, file: !17, line: 216, type: !8)
!3451 = !DILocation(line: 216, column: 44, scope: !3447)
!3452 = !DILocalVariable(name: "stream", scope: !3447, file: !17, line: 218, type: !3453, align: 8)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "OutStream*", baseType: !153, size: 64, align: 64, dwarfAddressSpace: 0)
!3454 = !DILocation(line: 218, column: 13, scope: !3447)
!3455 = !DILocation(line: 218, column: 22, scope: !3447)
!3456 = !DILocation(line: 219, column: 11, scope: !3447)
!3457 = !DILocation(line: 219, column: 30, scope: !3447)
!3458 = !DILocation(line: 219, column: 10, scope: !3447)
!3459 = distinct !DISubprogram(name: "out_putchar_fn", linkageName: "std.io.out_putchar_fn", scope: !17, file: !17, line: 222, type: !319, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3460 = !DILocalVariable(name: "data", arg: 1, scope: !3459, file: !17, line: 222, type: !22)
!3461 = !DILocation(line: 222, column: 31, scope: !3459)
!3462 = !DILocalVariable(name: "c", arg: 2, scope: !3459, file: !17, line: 222, type: !8)
!3463 = !DILocation(line: 222, column: 50, scope: !3459)
!3464 = !DILocation(line: 224, column: 16, scope: !3459)
!3465 = !DILocation(line: 224, column: 8, scope: !3459)
!3466 = distinct !DISubprogram(name: "printf", linkageName: "std.io.printf", scope: !17, file: !17, line: 241, type: !3467, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{!109, !311, !329, !330}
!3469 = !DILocalVariable(name: "format", arg: 1, scope: !3466, file: !17, line: 241, type: !329)
!3470 = !DILocation(line: 241, column: 23, scope: !3466)
!3471 = !DILocalVariable(name: "args", arg: 2, scope: !3466, file: !17, line: 241, type: !330)
!3472 = !DILocation(line: 241, column: 31, scope: !3466)
!3473 = !DILocalVariable(name: "formatter", scope: !3466, file: !17, line: 243, type: !313, align: 8)
!3474 = !DILocation(line: 243, column: 12, scope: !3466)
!3475 = !DILocation(line: 244, column: 2, scope: !3466)
!3476 = !DILocation(line: 245, column: 9, scope: !3466)
!3477 = distinct !DISubprogram(name: "printfn", linkageName: "std.io.printfn", scope: !17, file: !17, line: 255, type: !3467, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3478 = !DILocalVariable(name: "format", arg: 1, scope: !3477, file: !17, line: 255, type: !329)
!3479 = !DILocation(line: 255, column: 24, scope: !3477)
!3480 = !DILocalVariable(name: "args", arg: 2, scope: !3477, file: !17, line: 255, type: !330)
!3481 = !DILocation(line: 255, column: 32, scope: !3477)
!3482 = !DILocalVariable(name: "formatter", scope: !3477, file: !17, line: 257, type: !313, align: 8)
!3483 = !DILocation(line: 257, column: 12, scope: !3477)
!3484 = !DILocation(line: 258, column: 2, scope: !3477)
!3485 = !DILocalVariable(name: "len", scope: !3477, file: !17, line: 259, type: !199, align: 8)
!3486 = !DILocation(line: 259, column: 7, scope: !3477)
!3487 = !DILocation(line: 259, column: 13, scope: !3477)
!3488 = !DILocation(line: 260, column: 2, scope: !3477)
!3489 = !DILocation(line: 261, column: 6, scope: !3477)
!3490 = !DILocation(line: 262, column: 9, scope: !3477)
!3491 = distinct !DISubprogram(name: "eprintf", linkageName: "std.io.eprintf", scope: !17, file: !17, line: 272, type: !3467, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3492 = !DILocalVariable(name: "format", arg: 1, scope: !3491, file: !17, line: 272, type: !329)
!3493 = !DILocation(line: 272, column: 24, scope: !3491)
!3494 = !DILocalVariable(name: "args", arg: 2, scope: !3491, file: !17, line: 272, type: !330)
!3495 = !DILocation(line: 272, column: 32, scope: !3491)
!3496 = !DILocalVariable(name: "formatter", scope: !3491, file: !17, line: 274, type: !313, align: 8)
!3497 = !DILocation(line: 274, column: 12, scope: !3491)
!3498 = !DILocalVariable(name: "stream", scope: !3491, file: !17, line: 275, type: !153, align: 8)
!3499 = !DILocation(line: 275, column: 12, scope: !3491)
!3500 = !DILocation(line: 275, column: 21, scope: !3491)
!3501 = !DILocation(line: 276, column: 2, scope: !3491)
!3502 = !DILocation(line: 277, column: 9, scope: !3491)
!3503 = distinct !DISubprogram(name: "eprintfn", linkageName: "std.io.eprintfn", scope: !17, file: !17, line: 288, type: !3467, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3504 = !DILocalVariable(name: "format", arg: 1, scope: !3503, file: !17, line: 288, type: !329)
!3505 = !DILocation(line: 288, column: 25, scope: !3503)
!3506 = !DILocalVariable(name: "args", arg: 2, scope: !3503, file: !17, line: 288, type: !330)
!3507 = !DILocation(line: 288, column: 33, scope: !3503)
!3508 = !DILocalVariable(name: "formatter", scope: !3503, file: !17, line: 290, type: !313, align: 8)
!3509 = !DILocation(line: 290, column: 12, scope: !3503)
!3510 = !DILocalVariable(name: "stream", scope: !3503, file: !17, line: 291, type: !153, align: 8)
!3511 = !DILocation(line: 291, column: 12, scope: !3503)
!3512 = !DILocation(line: 291, column: 21, scope: !3503)
!3513 = !DILocation(line: 292, column: 2, scope: !3503)
!3514 = !DILocalVariable(name: "len", scope: !3503, file: !17, line: 293, type: !199, align: 8)
!3515 = !DILocation(line: 293, column: 7, scope: !3503)
!3516 = !DILocation(line: 293, column: 13, scope: !3503)
!3517 = !DILocation(line: 294, column: 2, scope: !3503)
!3518 = !DILocation(line: 295, column: 2, scope: !3503)
!3519 = !DILocation(line: 296, column: 9, scope: !3503)
!3520 = distinct !DISubprogram(name: "bprintf", linkageName: "std.io.bprintf", scope: !17, file: !17, line: 307, type: !3521, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!109, !3523, !194, !329, !330}
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "char[]*", baseType: !194, size: 64, align: 64, dwarfAddressSpace: 0)
!3524 = !DILocalVariable(name: "buffer", arg: 1, scope: !3520, file: !17, line: 307, type: !194)
!3525 = !DILocation(line: 307, column: 27, scope: !3520)
!3526 = !DILocalVariable(name: "format", arg: 2, scope: !3520, file: !17, line: 307, type: !329)
!3527 = !DILocation(line: 307, column: 42, scope: !3520)
!3528 = !DILocalVariable(name: "args", arg: 3, scope: !3520, file: !17, line: 307, type: !330)
!3529 = !DILocation(line: 307, column: 50, scope: !3520)
!3530 = !DILocalVariable(name: "formatter", scope: !3520, file: !17, line: 309, type: !313, align: 8)
!3531 = !DILocation(line: 309, column: 12, scope: !3520)
!3532 = !DILocalVariable(name: "data", scope: !3520, file: !17, line: 310, type: !3533, align: 8)
!3533 = !DICompositeType(tag: DW_TAG_structure_type, name: "BufferData", scope: !17, file: !17, line: 325, size: 192, align: 64, elements: !3534, identifier: "std.io.BufferData")
!3534 = !{!3535, !3536}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !3533, file: !17, line: 327, baseType: !194, size: 128, align: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !3533, file: !17, line: 328, baseType: !198, size: 64, align: 64, offset: 128)
!3537 = !DILocation(line: 310, column: 13, scope: !3520)
!3538 = !DILocation(line: 310, column: 32, scope: !3520)
!3539 = !DILocation(line: 311, column: 2, scope: !3520)
!3540 = !DILocalVariable(name: "size", scope: !3520, file: !17, line: 312, type: !198, align: 8)
!3541 = !DILocation(line: 312, column: 6, scope: !3520)
!3542 = !DILocation(line: 312, column: 13, scope: !3520)
!3543 = !DILocation(line: 313, column: 9, scope: !3520)
!3544 = !DILocation(line: 313, column: 16, scope: !3520)
!3545 = !DILocation(line: 313, column: 17, scope: !3520)
!3546 = distinct !DISubprogram(name: "out_buffer_fn", linkageName: "std.io.out_buffer_fn", scope: !17, file: !17, line: 317, type: !319, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3547 = !DILocalVariable(name: "data", arg: 1, scope: !3546, file: !17, line: 317, type: !22)
!3548 = !DILocation(line: 317, column: 30, scope: !3546)
!3549 = !DILocalVariable(name: "c", arg: 2, scope: !3546, file: !17, line: 317, type: !8)
!3550 = !DILocation(line: 317, column: 41, scope: !3546)
!3551 = !DILocalVariable(name: "buffer_data", scope: !3546, file: !17, line: 319, type: !3552, align: 8)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "BufferData*", baseType: !3533, size: 64, align: 64, dwarfAddressSpace: 0)
!3553 = !DILocation(line: 319, column: 14, scope: !3546)
!3554 = !DILocation(line: 319, column: 28, scope: !3546)
!3555 = !DILocation(line: 320, column: 6, scope: !3546)
!3556 = !DILocation(line: 320, column: 29, scope: !3546)
!3557 = !DILocation(line: 320, column: 60, scope: !3546)
!3558 = !DILocation(line: 321, column: 2, scope: !3546)
!3559 = !DILocation(line: 321, column: 21, scope: !3546)
!3560 = !DILocation(line: 321, column: 46, scope: !3546)
!3561 = distinct !DISubprogram(name: "putchar", linkageName: "std.io.putchar", scope: !17, file: !17, line: 338, type: !3562, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !8}
!3564 = !DILocalVariable(name: "c", arg: 1, scope: !3561, file: !17, line: 338, type: !8)
!3565 = !DILocation(line: 338, column: 22, scope: !3561)
!3566 = !DILocation(line: 340, column: 16, scope: !3561)
!3567 = !DILocation(line: 340, column: 8, scope: !3561)
!3568 = distinct !DISubprogram(name: "stdout", linkageName: "std.io.stdout", scope: !17, file: !17, line: 348, type: !3569, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!3571}
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "File*", baseType: !18, size: 64, align: 64, dwarfAddressSpace: 0)
!3572 = !DILocation(line: 351, column: 7, scope: !3568)
!3573 = !DILocation(line: 234, column: 25, scope: !3574, inlinedAt: !3576)
!3574 = distinct !DISubprogram(name: "stdout", linkageName: "stdout", scope: !3575, file: !3575, line: 234, scopeLine: 234, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3575 = !DIFile(filename: "libc.c3", directory: "C:/Dev/C3/c3-windows/lib/std/libc")
!3576 = !DILocation(line: 351, column: 49, scope: !3568)
!3577 = !DILocation(line: 351, column: 31, scope: !3568)
!3578 = !DILocation(line: 352, column: 9, scope: !3568)
!3579 = distinct !DISubprogram(name: "stderr", linkageName: "std.io.stderr", scope: !17, file: !17, line: 360, type: !3569, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36)
!3580 = !DILocation(line: 363, column: 7, scope: !3579)
!3581 = !DILocation(line: 235, column: 25, scope: !3582, inlinedAt: !3583)
!3582 = distinct !DISubprogram(name: "stderr", linkageName: "stderr", scope: !3575, file: !3575, line: 235, scopeLine: 235, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3583 = !DILocation(line: 363, column: 49, scope: !3579)
!3584 = !DILocation(line: 363, column: 31, scope: !3579)
!3585 = !DILocation(line: 364, column: 9, scope: !3579)
!3586 = distinct !DISubprogram(name: "stdin", linkageName: "std.io.stdin", scope: !17, file: !17, line: 372, type: !3569, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36)
!3587 = !DILocation(line: 375, column: 7, scope: !3586)
!3588 = !DILocation(line: 233, column: 24, scope: !3589, inlinedAt: !3590)
!3589 = distinct !DISubprogram(name: "stdin", linkageName: "stdin", scope: !3575, file: !3575, line: 233, scopeLine: 233, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3590 = !DILocation(line: 375, column: 49, scope: !3586)
!3591 = !DILocation(line: 375, column: 31, scope: !3586)
!3592 = !DILocation(line: 376, column: 9, scope: !3586)
!3593 = distinct !DISubprogram(name: "init", linkageName: "std.io.ReadBuffer.init", scope: !3594, file: !3594, line: 17, type: !3595, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3594 = !DIFile(filename: "buffer.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io/stream")
!3595 = !DISubroutineType(types: !3596)
!3596 = !{!3597, !3597, !82, !194}
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ReadBuffer*", baseType: !3598, size: 64, align: 64, dwarfAddressSpace: 0)
!3598 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReadBuffer", scope: !3594, file: !3594, line: 3, size: 384, align: 64, elements: !3599, identifier: "std.io.ReadBuffer")
!3599 = !{!3600, !3601, !3602, !3603}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "wrapped_stream", scope: !3598, file: !3594, line: 5, baseType: !82, size: 128, align: 64)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3598, file: !3594, line: 6, baseType: !194, size: 128, align: 64, offset: 128)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "read_idx", scope: !3598, file: !3594, line: 7, baseType: !198, size: 64, align: 64, offset: 256)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "write_idx", scope: !3598, file: !3594, line: 8, baseType: !198, size: 64, align: 64, offset: 320)
!3604 = !DILocation(line: 18, column: 1, scope: !3593)
!3605 = !DILocalVariable(name: "self", arg: 1, scope: !3593, file: !3594, line: 17, type: !3597)
!3606 = !DILocation(line: 17, column: 32, scope: !3593)
!3607 = !DILocalVariable(name: "wrapped_stream", arg: 2, scope: !3593, file: !3594, line: 17, type: !82)
!3608 = !DILocation(line: 17, column: 48, scope: !3593)
!3609 = !DILocalVariable(name: "bytes", arg: 3, scope: !3593, file: !3594, line: 17, type: !194)
!3610 = !DILocation(line: 17, column: 71, scope: !3593)
!3611 = !DILocation(line: 14, column: 11, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3593, file: !3594, line: 18, column: 1)
!3613 = !DILocation(line: 15, column: 11, scope: !3612)
!3614 = !DILocation(line: 19, column: 3, scope: !3593)
!3615 = !DILocation(line: 19, column: 30, scope: !3593)
!3616 = !DILocation(line: 19, column: 55, scope: !3593)
!3617 = !DILocation(line: 20, column: 9, scope: !3593)
!3618 = distinct !DISubprogram(name: "str_view", linkageName: "std.io.ReadBuffer.str_view", scope: !3594, file: !3594, line: 22, type: !3619, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3619 = !DISubroutineType(types: !3620)
!3620 = !{!329, !3597}
!3621 = !DILocation(line: 23, column: 1, scope: !3618)
!3622 = !DILocalVariable(name: "self", arg: 1, scope: !3618, file: !3594, line: 22, type: !3597)
!3623 = !DILocation(line: 22, column: 31, scope: !3618)
!3624 = !DILocation(line: 24, column: 17, scope: !3618)
!3625 = !DILocation(line: 24, column: 28, scope: !3618)
!3626 = !DILocation(line: 24, column: 42, scope: !3618)
!3627 = !DILocation(line: 24, column: 59, scope: !3618)
!3628 = !DILocation(line: 24, column: 10, scope: !3618)
!3629 = distinct !DISubprogram(name: "close", linkageName: "std.io.ReadBuffer.close", scope: !3594, file: !3594, line: 27, type: !3630, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!109, !22, !3597}
!3632 = !DILocation(line: 28, column: 1, scope: !3629)
!3633 = !DILocalVariable(name: "self", arg: 1, scope: !3629, file: !3594, line: 27, type: !3597)
!3634 = !DILocation(line: 27, column: 27, scope: !3629)
!3635 = !DILocation(line: 29, column: 7, scope: !3629)
!3636 = !DILocation(line: 29, column: 34, scope: !3629)
!3637 = distinct !DISubprogram(name: "read", linkageName: "std.io.ReadBuffer.read", scope: !3594, file: !3594, line: 32, type: !3638, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!109, !311, !3597, !194}
!3640 = !DILocation(line: 33, column: 1, scope: !3637)
!3641 = !DILocalVariable(name: "self", arg: 1, scope: !3637, file: !3594, line: 32, type: !3597)
!3642 = !DILocation(line: 32, column: 25, scope: !3637)
!3643 = !DILocalVariable(name: "bytes", arg: 2, scope: !3637, file: !3594, line: 32, type: !194)
!3644 = !DILocation(line: 32, column: 39, scope: !3637)
!3645 = !DILocation(line: 34, column: 6, scope: !3637)
!3646 = !DILocation(line: 34, column: 23, scope: !3637)
!3647 = !DILocation(line: 36, column: 7, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3637, file: !3594, line: 35, column: 2)
!3649 = !DILocation(line: 36, column: 29, scope: !3648)
!3650 = !DILocation(line: 36, column: 42, scope: !3648)
!3651 = !DILocation(line: 39, column: 11, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3648, file: !3594, line: 37, column: 3)
!3653 = !DILocation(line: 39, column: 36, scope: !3652)
!3654 = !DILocation(line: 41, column: 3, scope: !3648)
!3655 = !DILocalVariable(name: "n", scope: !3637, file: !3594, line: 43, type: !198, align: 8)
!3656 = !DILocation(line: 43, column: 6, scope: !3637)
!3657 = !DILocation(line: 43, column: 14, scope: !3637)
!3658 = !DILocation(line: 43, column: 31, scope: !3637)
!3659 = !DILocation(line: 43, column: 46, scope: !3637)
!3660 = !DILocation(line: 17, column: 10, scope: !3661, inlinedAt: !3662)
!3661 = distinct !DISubprogram(name: "less", linkageName: "less", scope: !1633, file: !1633, line: 9, scopeLine: 9, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3662 = !DILocation(line: 100, column: 10, scope: !3663, inlinedAt: !3664)
!3663 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1633, file: !1633, line: 97, scopeLine: 97, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3664 = !DILocation(line: 43, column: 10, scope: !3637)
!3665 = !DILocation(line: 17, column: 14, scope: !3661, inlinedAt: !3662)
!3666 = !DILocation(line: 100, column: 31, scope: !3663, inlinedAt: !3664)
!3667 = !DILocation(line: 100, column: 35, scope: !3663, inlinedAt: !3664)
!3668 = !DILocation(line: 44, column: 14, scope: !3637)
!3669 = !DILocation(line: 44, column: 25, scope: !3637)
!3670 = !DILocation(line: 44, column: 39, scope: !3637)
!3671 = !DILocation(line: 44, column: 2, scope: !3637)
!3672 = !DILocation(line: 44, column: 8, scope: !3637)
!3673 = !DILocation(line: 44, column: 9, scope: !3637)
!3674 = !DILocation(line: 45, column: 2, scope: !3637)
!3675 = !DILocation(line: 45, column: 19, scope: !3637)
!3676 = !DILocation(line: 46, column: 9, scope: !3637)
!3677 = distinct !DISubprogram(name: "read_byte", linkageName: "std.io.ReadBuffer.read_byte", scope: !3594, file: !3594, line: 49, type: !3678, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{!109, !111, !3597}
!3680 = !DILocation(line: 50, column: 1, scope: !3677)
!3681 = !DILocalVariable(name: "self", arg: 1, scope: !3677, file: !3594, line: 49, type: !3597)
!3682 = !DILocation(line: 49, column: 31, scope: !3677)
!3683 = !DILocation(line: 51, column: 6, scope: !3677)
!3684 = !DILocation(line: 51, column: 23, scope: !3677)
!3685 = !DILocation(line: 51, column: 39, scope: !3677)
!3686 = !DILocation(line: 52, column: 6, scope: !3677)
!3687 = !DILocation(line: 52, column: 23, scope: !3677)
!3688 = !DILocation(line: 52, column: 46, scope: !3677)
!3689 = !DILocalVariable(name: "c", scope: !3677, file: !3594, line: 53, type: !8, align: 1)
!3690 = !DILocation(line: 53, column: 7, scope: !3677)
!3691 = !DILocation(line: 53, column: 11, scope: !3677)
!3692 = !DILocation(line: 53, column: 22, scope: !3677)
!3693 = !DILocation(line: 54, column: 2, scope: !3677)
!3694 = !DILocation(line: 55, column: 9, scope: !3677)
!3695 = distinct !DISubprogram(name: "refill", linkageName: "std.io.ReadBuffer.refill", scope: !3594, file: !3594, line: 58, type: !3630, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3696 = !DILocation(line: 59, column: 1, scope: !3695)
!3697 = !DILocalVariable(name: "self", arg: 1, scope: !3695, file: !3594, line: 58, type: !3597)
!3698 = !DILocation(line: 58, column: 28, scope: !3695)
!3699 = !DILocation(line: 60, column: 2, scope: !3695)
!3700 = !DILocation(line: 60, column: 18, scope: !3695)
!3701 = !DILocation(line: 61, column: 2, scope: !3695)
!3702 = !DILocation(line: 61, column: 19, scope: !3695)
!3703 = !DILocation(line: 61, column: 44, scope: !3695)
!3704 = distinct !DISubprogram(name: "init", linkageName: "std.io.WriteBuffer.init", scope: !3594, file: !3594, line: 77, type: !3705, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!3707, !3707, !153, !194}
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "WriteBuffer*", baseType: !3708, size: 64, align: 64, dwarfAddressSpace: 0)
!3708 = !DICompositeType(tag: DW_TAG_structure_type, name: "WriteBuffer", scope: !3594, file: !3594, line: 64, size: 320, align: 64, elements: !3709, identifier: "std.io.WriteBuffer")
!3709 = !{!3710, !3711, !3712}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "wrapped_stream", scope: !3708, file: !3594, line: 66, baseType: !153, size: 128, align: 64)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3708, file: !3594, line: 67, baseType: !194, size: 128, align: 64, offset: 128)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3708, file: !3594, line: 68, baseType: !198, size: 64, align: 64, offset: 256)
!3713 = !DILocation(line: 78, column: 1, scope: !3704)
!3714 = !DILocalVariable(name: "self", arg: 1, scope: !3704, file: !3594, line: 77, type: !3707)
!3715 = !DILocation(line: 77, column: 34, scope: !3704)
!3716 = !DILocalVariable(name: "wrapped_stream", arg: 2, scope: !3704, file: !3594, line: 77, type: !153)
!3717 = !DILocation(line: 77, column: 51, scope: !3704)
!3718 = !DILocalVariable(name: "bytes", arg: 3, scope: !3704, file: !3594, line: 77, type: !194)
!3719 = !DILocation(line: 77, column: 74, scope: !3704)
!3720 = !DILocation(line: 74, column: 11, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3704, file: !3594, line: 78, column: 1)
!3722 = !DILocation(line: 75, column: 11, scope: !3721)
!3723 = !DILocation(line: 79, column: 3, scope: !3704)
!3724 = !DILocation(line: 79, column: 30, scope: !3704)
!3725 = !DILocation(line: 79, column: 55, scope: !3704)
!3726 = !DILocation(line: 80, column: 9, scope: !3704)
!3727 = distinct !DISubprogram(name: "str_view", linkageName: "std.io.WriteBuffer.str_view", scope: !3594, file: !3594, line: 83, type: !3728, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{!329, !3707}
!3730 = !DILocation(line: 84, column: 1, scope: !3727)
!3731 = !DILocalVariable(name: "self", arg: 1, scope: !3727, file: !3594, line: 83, type: !3707)
!3732 = !DILocation(line: 83, column: 32, scope: !3727)
!3733 = !DILocation(line: 85, column: 17, scope: !3727)
!3734 = !DILocation(line: 85, column: 28, scope: !3727)
!3735 = !DILocation(line: 85, column: 29, scope: !3727)
!3736 = !DILocation(line: 85, column: 10, scope: !3727)
!3737 = distinct !DISubprogram(name: "close", linkageName: "std.io.WriteBuffer.close", scope: !3594, file: !3594, line: 88, type: !3738, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!109, !22, !3707}
!3740 = !DILocation(line: 89, column: 1, scope: !3737)
!3741 = !DILocalVariable(name: "self", arg: 1, scope: !3737, file: !3594, line: 88, type: !3707)
!3742 = !DILocation(line: 88, column: 28, scope: !3737)
!3743 = !DILocation(line: 90, column: 7, scope: !3737)
!3744 = !DILocation(line: 90, column: 41, scope: !3737)
!3745 = distinct !DISubprogram(name: "flush", linkageName: "std.io.WriteBuffer.flush", scope: !3594, file: !3594, line: 93, type: !3738, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3746 = !DILocation(line: 94, column: 1, scope: !3745)
!3747 = !DILocalVariable(name: "self", arg: 1, scope: !3745, file: !3594, line: 93, type: !3707)
!3748 = !DILocation(line: 93, column: 28, scope: !3745)
!3749 = !DILocation(line: 95, column: 2, scope: !3745)
!3750 = !DILocation(line: 96, column: 7, scope: !3745)
!3751 = !DILocation(line: 96, column: 34, scope: !3745)
!3752 = distinct !DISubprogram(name: "write", linkageName: "std.io.WriteBuffer.write", scope: !3594, file: !3594, line: 99, type: !3753, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!109, !311, !3707, !194}
!3755 = !DILocation(line: 100, column: 1, scope: !3752)
!3756 = !DILocalVariable(name: "self", arg: 1, scope: !3752, file: !3594, line: 99, type: !3707)
!3757 = !DILocation(line: 99, column: 27, scope: !3752)
!3758 = !DILocalVariable(name: "bytes", arg: 2, scope: !3752, file: !3594, line: 99, type: !194)
!3759 = !DILocation(line: 99, column: 41, scope: !3752)
!3760 = !DILocalVariable(name: "n", scope: !3752, file: !3594, line: 101, type: !198, align: 8)
!3761 = !DILocation(line: 101, column: 6, scope: !3752)
!3762 = !DILocation(line: 101, column: 10, scope: !3752)
!3763 = !DILocation(line: 101, column: 27, scope: !3752)
!3764 = !DILocation(line: 102, column: 6, scope: !3752)
!3765 = !DILocation(line: 102, column: 18, scope: !3752)
!3766 = !DILocation(line: 105, column: 38, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3752, file: !3594, line: 103, column: 2)
!3768 = !DILocation(line: 105, column: 44, scope: !3767)
!3769 = !DILocation(line: 105, column: 3, scope: !3767)
!3770 = !DILocation(line: 105, column: 14, scope: !3767)
!3771 = !DILocation(line: 105, column: 25, scope: !3767)
!3772 = !DILocation(line: 106, column: 3, scope: !3767)
!3773 = !DILocation(line: 106, column: 17, scope: !3767)
!3774 = !DILocation(line: 107, column: 10, scope: !3767)
!3775 = !DILocation(line: 109, column: 2, scope: !3752)
!3776 = !DILocation(line: 110, column: 6, scope: !3752)
!3777 = !DILocation(line: 110, column: 19, scope: !3752)
!3778 = !DILocation(line: 113, column: 10, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3752, file: !3594, line: 111, column: 2)
!3780 = !DILocation(line: 113, column: 36, scope: !3779)
!3781 = !DILocation(line: 116, column: 27, scope: !3752)
!3782 = !DILocation(line: 116, column: 33, scope: !3752)
!3783 = !DILocation(line: 116, column: 2, scope: !3752)
!3784 = !DILocation(line: 116, column: 13, scope: !3752)
!3785 = !DILocation(line: 116, column: 14, scope: !3752)
!3786 = !DILocation(line: 117, column: 2, scope: !3752)
!3787 = !DILocation(line: 117, column: 15, scope: !3752)
!3788 = !DILocation(line: 118, column: 9, scope: !3752)
!3789 = distinct !DISubprogram(name: "write_byte", linkageName: "std.io.WriteBuffer.write_byte", scope: !3594, file: !3594, line: 121, type: !3790, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!109, !22, !3707, !8}
!3792 = !DILocation(line: 122, column: 1, scope: !3789)
!3793 = !DILocalVariable(name: "self", arg: 1, scope: !3789, file: !3594, line: 121, type: !3707)
!3794 = !DILocation(line: 121, column: 33, scope: !3789)
!3795 = !DILocalVariable(name: "c", arg: 2, scope: !3789, file: !3594, line: 121, type: !8)
!3796 = !DILocation(line: 121, column: 45, scope: !3789)
!3797 = !DILocalVariable(name: "n", scope: !3789, file: !3594, line: 123, type: !198, align: 8)
!3798 = !DILocation(line: 123, column: 6, scope: !3789)
!3799 = !DILocation(line: 123, column: 10, scope: !3789)
!3800 = !DILocation(line: 123, column: 27, scope: !3789)
!3801 = !DILocation(line: 124, column: 6, scope: !3789)
!3802 = !DILocation(line: 124, column: 14, scope: !3789)
!3803 = !DILocation(line: 125, column: 2, scope: !3789)
!3804 = !DILocation(line: 125, column: 13, scope: !3789)
!3805 = !DILocation(line: 125, column: 18, scope: !3789)
!3806 = !DILocation(line: 126, column: 2, scope: !3789)
!3807 = !DILocation(line: 126, column: 15, scope: !3789)
!3808 = distinct !DISubprogram(name: "write_pending", linkageName: "std.io.WriteBuffer.write_pending", scope: !3594, file: !3594, line: 129, type: !3738, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3809 = !DILocation(line: 130, column: 1, scope: !3808)
!3810 = !DILocalVariable(name: "self", arg: 1, scope: !3808, file: !3594, line: 129, type: !3707)
!3811 = !DILocation(line: 129, column: 36, scope: !3808)
!3812 = !DILocation(line: 131, column: 2, scope: !3808)
!3813 = !DILocation(line: 131, column: 16, scope: !3808)
!3814 = !DILocation(line: 131, column: 42, scope: !3808)
!3815 = !DILocation(line: 131, column: 53, scope: !3808)
!3816 = !DILocation(line: 131, column: 54, scope: !3808)
!3817 = !DILocation(line: 132, column: 6, scope: !3808)
!3818 = !DILocation(line: 132, column: 30, scope: !3808)
!3819 = distinct !DISubprogram(name: "new_init", linkageName: "std.io.ByteBuffer.new_init", scope: !46, file: !46, line: 19, type: !3820, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!109, !3822, !3823, !199, !199, !474}
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ByteBuffer**", baseType: !3823, size: 64, align: 64, dwarfAddressSpace: 0)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ByteBuffer*", baseType: !3824, size: 64, align: 64, dwarfAddressSpace: 0)
!3824 = !DICompositeType(tag: DW_TAG_structure_type, name: "ByteBuffer", scope: !46, file: !46, line: 4, size: 512, align: 64, elements: !3825, identifier: "std.io.ByteBuffer")
!3825 = !{!3826, !3827, !3828, !3829, !3830, !3831}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !3824, file: !46, line: 6, baseType: !474, size: 128, align: 64)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "max_read", scope: !3824, file: !46, line: 7, baseType: !198, size: 64, align: 64, offset: 128)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3824, file: !46, line: 8, baseType: !194, size: 128, align: 64, offset: 192)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "read_idx", scope: !3824, file: !46, line: 9, baseType: !198, size: 64, align: 64, offset: 320)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "write_idx", scope: !3824, file: !46, line: 10, baseType: !198, size: 64, align: 64, offset: 384)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "has_last", scope: !3824, file: !46, line: 11, baseType: !485, size: 8, align: 8, offset: 448)
!3832 = !DILocation(line: 20, column: 1, scope: !3819)
!3833 = !DILocalVariable(name: "self", arg: 1, scope: !3819, file: !46, line: 19, type: !3823)
!3834 = !DILocation(line: 19, column: 37, scope: !3819)
!3835 = !DILocalVariable(name: "max_read", arg: 2, scope: !3819, file: !46, line: 19, type: !198)
!3836 = !DILocation(line: 19, column: 48, scope: !3819)
!3837 = !DILocalVariable(name: "initial_capacity", arg: 3, scope: !3819, file: !46, line: 19, type: !198)
!3838 = !DILocation(line: 19, column: 62, scope: !3819)
!3839 = !DILocalVariable(name: "allocator", arg: 4, scope: !3819, file: !46, line: 19, type: !474)
!3840 = !DILocation(line: 19, column: 95, scope: !3819)
!3841 = !DILocation(line: 17, column: 11, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3819, file: !46, line: 20, column: 1)
!3843 = !DILocation(line: 21, column: 3, scope: !3819)
!3844 = !DILocation(line: 21, column: 25, scope: !3819)
!3845 = !DILocation(line: 21, column: 48, scope: !3819)
!3846 = !DILocation(line: 47, column: 10, scope: !3847, inlinedAt: !3848)
!3847 = distinct !DISubprogram(name: "greater", linkageName: "greater", scope: !1633, file: !1633, line: 39, scopeLine: 39, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3848 = !DILocation(line: 116, column: 10, scope: !3849, inlinedAt: !3850)
!3849 = distinct !DISubprogram(name: "max", linkageName: "max", scope: !1633, file: !1633, line: 113, scopeLine: 113, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3850 = !DILocation(line: 22, column: 21, scope: !3819)
!3851 = !DILocation(line: 47, column: 14, scope: !3847, inlinedAt: !3848)
!3852 = !DILocation(line: 116, column: 34, scope: !3849, inlinedAt: !3850)
!3853 = !DILocation(line: 116, column: 38, scope: !3849, inlinedAt: !3850)
!3854 = !DILocation(line: 23, column: 12, scope: !3819)
!3855 = !DILocation(line: 23, column: 2, scope: !3819)
!3856 = !DILocation(line: 24, column: 9, scope: !3819)
!3857 = distinct !DISubprogram(name: "temp_init", linkageName: "std.io.ByteBuffer.temp_init", scope: !46, file: !46, line: 27, type: !3858, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{!109, !3822, !3823, !199, !199}
!3860 = !DILocation(line: 28, column: 1, scope: !3857)
!3861 = !DILocalVariable(name: "self", arg: 1, scope: !3857, file: !46, line: 27, type: !3823)
!3862 = !DILocation(line: 27, column: 38, scope: !3857)
!3863 = !DILocalVariable(name: "max_read", arg: 2, scope: !3857, file: !46, line: 27, type: !198)
!3864 = !DILocation(line: 27, column: 49, scope: !3857)
!3865 = !DILocalVariable(name: "initial_capacity", arg: 3, scope: !3857, file: !46, line: 27, type: !198)
!3866 = !DILocation(line: 27, column: 63, scope: !3857)
!3867 = !DILocation(line: 396, column: 7, scope: !3868, inlinedAt: !3870)
!3868 = distinct !DISubprogram(name: "temp", linkageName: "temp", scope: !3869, file: !3869, line: 394, scopeLine: 394, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3869 = !DIFile(filename: "mem_allocator.c3", directory: "C:/Dev/C3/c3-windows/lib/std/core")
!3870 = !DILocation(line: 29, column: 62, scope: !3857)
!3871 = !DILocation(line: 398, column: 3, scope: !3872, inlinedAt: !3870)
!3872 = distinct !DILexicalBlock(scope: !3868, file: !3869, line: 397, column: 2)
!3873 = !DILocation(line: 400, column: 9, scope: !3868, inlinedAt: !3870)
!3874 = !DILocation(line: 29, column: 9, scope: !3857)
!3875 = distinct !DISubprogram(name: "init_with_buffer", linkageName: "std.io.ByteBuffer.init_with_buffer", scope: !46, file: !46, line: 36, type: !3876, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3876 = !DISubroutineType(types: !3877)
!3877 = !{!109, !3822, !3823, !194}
!3878 = !DILocation(line: 37, column: 1, scope: !3875)
!3879 = !DILocalVariable(name: "self", arg: 1, scope: !3875, file: !46, line: 36, type: !3823)
!3880 = !DILocation(line: 36, column: 45, scope: !3875)
!3881 = !DILocalVariable(name: "buf", arg: 2, scope: !3875, file: !46, line: 36, type: !194)
!3882 = !DILocation(line: 36, column: 59, scope: !3875)
!3883 = !DILocation(line: 33, column: 11, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3875, file: !46, line: 37, column: 1)
!3885 = !DILocation(line: 34, column: 11, scope: !3884)
!3886 = !DILocation(line: 38, column: 3, scope: !3875)
!3887 = !DILocation(line: 38, column: 24, scope: !3875)
!3888 = !DILocation(line: 38, column: 42, scope: !3875)
!3889 = !DILocation(line: 39, column: 9, scope: !3875)
!3890 = distinct !DISubprogram(name: "free", linkageName: "std.io.ByteBuffer.free", scope: !46, file: !46, line: 42, type: !3891, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !3823}
!3893 = !DILocation(line: 43, column: 1, scope: !3890)
!3894 = !DILocalVariable(name: "self", arg: 1, scope: !3890, file: !46, line: 42, type: !3823)
!3895 = !DILocation(line: 42, column: 25, scope: !3890)
!3896 = !DILocation(line: 44, column: 6, scope: !3890)
!3897 = !DILocation(line: 44, column: 38, scope: !3890)
!3898 = !DILocation(line: 44, column: 54, scope: !3890)
!3899 = !DILocation(line: 101, column: 7, scope: !3900, inlinedAt: !3901)
!3900 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !3869, file: !3869, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3901 = !DILocation(line: 44, column: 33, scope: !3890)
!3902 = !DILocation(line: 101, column: 18, scope: !3900, inlinedAt: !3901)
!3903 = !DILocation(line: 105, column: 25, scope: !3900, inlinedAt: !3901)
!3904 = !DILocation(line: 105, column: 2, scope: !3900, inlinedAt: !3901)
!3905 = !DILocation(line: 45, column: 3, scope: !3890)
!3906 = distinct !DISubprogram(name: "write", linkageName: "std.io.ByteBuffer.write", scope: !46, file: !46, line: 48, type: !3907, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{!109, !311, !3823, !194}
!3909 = !DILocation(line: 49, column: 1, scope: !3906)
!3910 = !DILocalVariable(name: "self", arg: 1, scope: !3906, file: !46, line: 48, type: !3823)
!3911 = !DILocation(line: 48, column: 26, scope: !3906)
!3912 = !DILocalVariable(name: "bytes", arg: 2, scope: !3906, file: !46, line: 48, type: !194)
!3913 = !DILocation(line: 48, column: 40, scope: !3906)
!3914 = !DILocalVariable(name: "cap", scope: !3906, file: !46, line: 50, type: !198, align: 8)
!3915 = !DILocation(line: 50, column: 6, scope: !3906)
!3916 = !DILocation(line: 50, column: 12, scope: !3906)
!3917 = !DILocation(line: 50, column: 29, scope: !3906)
!3918 = !DILocation(line: 51, column: 6, scope: !3906)
!3919 = !DILocation(line: 51, column: 12, scope: !3906)
!3920 = !DILocation(line: 51, column: 33, scope: !3906)
!3921 = !DILocation(line: 51, column: 23, scope: !3906)
!3922 = !DILocation(line: 52, column: 41, scope: !3906)
!3923 = !DILocation(line: 52, column: 47, scope: !3906)
!3924 = !DILocation(line: 52, column: 2, scope: !3906)
!3925 = !DILocation(line: 52, column: 13, scope: !3906)
!3926 = !DILocation(line: 52, column: 28, scope: !3906)
!3927 = !DILocation(line: 53, column: 2, scope: !3906)
!3928 = !DILocation(line: 53, column: 20, scope: !3906)
!3929 = !DILocation(line: 54, column: 9, scope: !3906)
!3930 = distinct !DISubprogram(name: "write_byte", linkageName: "std.io.ByteBuffer.write_byte", scope: !46, file: !46, line: 57, type: !3931, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!109, !22, !3823, !8}
!3933 = !DILocation(line: 58, column: 1, scope: !3930)
!3934 = !DILocalVariable(name: "self", arg: 1, scope: !3930, file: !46, line: 57, type: !3823)
!3935 = !DILocation(line: 57, column: 32, scope: !3930)
!3936 = !DILocalVariable(name: "c", arg: 2, scope: !3930, file: !46, line: 57, type: !8)
!3937 = !DILocation(line: 57, column: 44, scope: !3930)
!3938 = !DILocalVariable(name: "cap", scope: !3930, file: !46, line: 59, type: !198, align: 8)
!3939 = !DILocation(line: 59, column: 6, scope: !3930)
!3940 = !DILocation(line: 59, column: 12, scope: !3930)
!3941 = !DILocation(line: 59, column: 29, scope: !3930)
!3942 = !DILocation(line: 60, column: 6, scope: !3930)
!3943 = !DILocation(line: 60, column: 26, scope: !3930)
!3944 = !DILocation(line: 60, column: 16, scope: !3930)
!3945 = !DILocation(line: 61, column: 2, scope: !3930)
!3946 = !DILocation(line: 61, column: 13, scope: !3930)
!3947 = !DILocation(line: 61, column: 31, scope: !3930)
!3948 = !DILocation(line: 62, column: 2, scope: !3930)
!3949 = distinct !DISubprogram(name: "read", linkageName: "std.io.ByteBuffer.read", scope: !46, file: !46, line: 65, type: !3907, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3950 = !DILocation(line: 66, column: 1, scope: !3949)
!3951 = !DILocalVariable(name: "self", arg: 1, scope: !3949, file: !46, line: 65, type: !3823)
!3952 = !DILocation(line: 65, column: 25, scope: !3949)
!3953 = !DILocalVariable(name: "bytes", arg: 2, scope: !3949, file: !46, line: 65, type: !194)
!3954 = !DILocation(line: 65, column: 39, scope: !3949)
!3955 = !DILocalVariable(name: "readable", scope: !3949, file: !46, line: 67, type: !198, align: 8)
!3956 = !DILocation(line: 67, column: 6, scope: !3949)
!3957 = !DILocation(line: 67, column: 17, scope: !3949)
!3958 = !DILocation(line: 67, column: 34, scope: !3949)
!3959 = !DILocation(line: 68, column: 6, scope: !3949)
!3960 = !DILocation(line: 70, column: 3, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3949, file: !46, line: 69, column: 2)
!3962 = !DILocation(line: 70, column: 19, scope: !3961)
!3963 = !DILocation(line: 71, column: 10, scope: !3961)
!3964 = !DILocalVariable(name: "n", scope: !3949, file: !46, line: 73, type: !198, align: 8)
!3965 = !DILocation(line: 73, column: 6, scope: !3949)
!3966 = !DILocation(line: 73, column: 24, scope: !3949)
!3967 = !DILocation(line: 17, column: 10, scope: !3968, inlinedAt: !3969)
!3968 = distinct !DISubprogram(name: "less", linkageName: "less", scope: !1633, file: !1633, line: 9, scopeLine: 9, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3969 = !DILocation(line: 100, column: 10, scope: !3970, inlinedAt: !3971)
!3970 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1633, file: !1633, line: 97, scopeLine: 97, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!3971 = !DILocation(line: 73, column: 10, scope: !3949)
!3972 = !DILocation(line: 17, column: 14, scope: !3968, inlinedAt: !3969)
!3973 = !DILocation(line: 100, column: 31, scope: !3970, inlinedAt: !3971)
!3974 = !DILocation(line: 100, column: 35, scope: !3970, inlinedAt: !3971)
!3975 = !DILocation(line: 74, column: 14, scope: !3949)
!3976 = !DILocation(line: 74, column: 25, scope: !3949)
!3977 = !DILocation(line: 74, column: 39, scope: !3949)
!3978 = !DILocation(line: 74, column: 2, scope: !3949)
!3979 = !DILocation(line: 74, column: 8, scope: !3949)
!3980 = !DILocation(line: 74, column: 9, scope: !3949)
!3981 = !DILocation(line: 75, column: 2, scope: !3949)
!3982 = !DILocation(line: 75, column: 19, scope: !3949)
!3983 = !DILocation(line: 76, column: 2, scope: !3949)
!3984 = !DILocation(line: 76, column: 18, scope: !3949)
!3985 = !DILocation(line: 140, column: 6, scope: !3986, inlinedAt: !3987)
!3986 = distinct !DISubprogram(name: "shrink", linkageName: "shrink", scope: !46, file: !46, line: 138, scopeLine: 138, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!3987 = !DILocation(line: 77, column: 2, scope: !3949)
!3988 = !DILocation(line: 140, column: 23, scope: !3986, inlinedAt: !3987)
!3989 = !DILocalVariable(name: "readable", scope: !3990, file: !46, line: 143, type: !198, align: 8)
!3990 = distinct !DILexicalBlock(scope: !3986, file: !46, line: 141, column: 2)
!3991 = !DILocation(line: 143, column: 7, scope: !3990, inlinedAt: !3987)
!3992 = !DILocation(line: 143, column: 18, scope: !3990, inlinedAt: !3987)
!3993 = !DILocation(line: 143, column: 35, scope: !3990, inlinedAt: !3987)
!3994 = !DILocation(line: 144, column: 31, scope: !3990, inlinedAt: !3987)
!3995 = !DILocation(line: 144, column: 42, scope: !3990, inlinedAt: !3987)
!3996 = !DILocation(line: 144, column: 64, scope: !3990, inlinedAt: !3987)
!3997 = !DILocation(line: 144, column: 60, scope: !3990, inlinedAt: !3987)
!3998 = !DILocation(line: 144, column: 3, scope: !3990, inlinedAt: !3987)
!3999 = !DILocation(line: 144, column: 14, scope: !3990, inlinedAt: !3987)
!4000 = !DILocation(line: 144, column: 19, scope: !3990, inlinedAt: !3987)
!4001 = !DILocation(line: 144, column: 15, scope: !3990, inlinedAt: !3987)
!4002 = !DILocation(line: 145, column: 3, scope: !3990, inlinedAt: !3987)
!4003 = !DILocation(line: 145, column: 24, scope: !3990, inlinedAt: !3987)
!4004 = !DILocation(line: 145, column: 20, scope: !3990, inlinedAt: !3987)
!4005 = !DILocation(line: 146, column: 3, scope: !3990, inlinedAt: !3987)
!4006 = !DILocation(line: 146, column: 19, scope: !3990, inlinedAt: !3987)
!4007 = !DILocation(line: 78, column: 9, scope: !3949)
!4008 = distinct !DISubprogram(name: "read_byte", linkageName: "std.io.ByteBuffer.read_byte", scope: !46, file: !46, line: 81, type: !4009, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!109, !111, !3823}
!4011 = !DILocation(line: 82, column: 1, scope: !4008)
!4012 = !DILocalVariable(name: "self", arg: 1, scope: !4008, file: !46, line: 81, type: !3823)
!4013 = !DILocation(line: 81, column: 31, scope: !4008)
!4014 = !DILocalVariable(name: "readable", scope: !4008, file: !46, line: 83, type: !198, align: 8)
!4015 = !DILocation(line: 83, column: 6, scope: !4008)
!4016 = !DILocation(line: 83, column: 17, scope: !4008)
!4017 = !DILocation(line: 83, column: 34, scope: !4008)
!4018 = !DILocation(line: 84, column: 6, scope: !4008)
!4019 = !DILocation(line: 86, column: 3, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4008, file: !46, line: 85, column: 2)
!4021 = !DILocation(line: 86, column: 19, scope: !4020)
!4022 = !DILocation(line: 87, column: 10, scope: !4020)
!4023 = !DILocalVariable(name: "c", scope: !4008, file: !46, line: 89, type: !8, align: 1)
!4024 = !DILocation(line: 89, column: 7, scope: !4008)
!4025 = !DILocation(line: 89, column: 11, scope: !4008)
!4026 = !DILocation(line: 89, column: 22, scope: !4008)
!4027 = !DILocation(line: 90, column: 2, scope: !4008)
!4028 = !DILocation(line: 91, column: 2, scope: !4008)
!4029 = !DILocation(line: 91, column: 18, scope: !4008)
!4030 = !DILocation(line: 140, column: 6, scope: !4031, inlinedAt: !4032)
!4031 = distinct !DISubprogram(name: "shrink", linkageName: "shrink", scope: !46, file: !46, line: 138, scopeLine: 138, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4032 = !DILocation(line: 92, column: 2, scope: !4008)
!4033 = !DILocation(line: 140, column: 23, scope: !4031, inlinedAt: !4032)
!4034 = !DILocalVariable(name: "readable", scope: !4035, file: !46, line: 143, type: !198, align: 8)
!4035 = distinct !DILexicalBlock(scope: !4031, file: !46, line: 141, column: 2)
!4036 = !DILocation(line: 143, column: 7, scope: !4035, inlinedAt: !4032)
!4037 = !DILocation(line: 143, column: 18, scope: !4035, inlinedAt: !4032)
!4038 = !DILocation(line: 143, column: 35, scope: !4035, inlinedAt: !4032)
!4039 = !DILocation(line: 144, column: 31, scope: !4035, inlinedAt: !4032)
!4040 = !DILocation(line: 144, column: 42, scope: !4035, inlinedAt: !4032)
!4041 = !DILocation(line: 144, column: 64, scope: !4035, inlinedAt: !4032)
!4042 = !DILocation(line: 144, column: 60, scope: !4035, inlinedAt: !4032)
!4043 = !DILocation(line: 144, column: 3, scope: !4035, inlinedAt: !4032)
!4044 = !DILocation(line: 144, column: 14, scope: !4035, inlinedAt: !4032)
!4045 = !DILocation(line: 144, column: 19, scope: !4035, inlinedAt: !4032)
!4046 = !DILocation(line: 144, column: 15, scope: !4035, inlinedAt: !4032)
!4047 = !DILocation(line: 145, column: 3, scope: !4035, inlinedAt: !4032)
!4048 = !DILocation(line: 145, column: 24, scope: !4035, inlinedAt: !4032)
!4049 = !DILocation(line: 145, column: 20, scope: !4035, inlinedAt: !4032)
!4050 = !DILocation(line: 146, column: 3, scope: !4035, inlinedAt: !4032)
!4051 = !DILocation(line: 146, column: 19, scope: !4035, inlinedAt: !4032)
!4052 = !DILocation(line: 93, column: 9, scope: !4008)
!4053 = distinct !DISubprogram(name: "pushback_byte", linkageName: "std.io.ByteBuffer.pushback_byte", scope: !46, file: !46, line: 99, type: !4054, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!109, !22, !3823}
!4056 = !DILocation(line: 100, column: 1, scope: !4053)
!4057 = !DILocalVariable(name: "self", arg: 1, scope: !4053, file: !46, line: 99, type: !3823)
!4058 = !DILocation(line: 99, column: 35, scope: !4053)
!4059 = !DILocation(line: 101, column: 7, scope: !4053)
!4060 = !DILocation(line: 101, column: 29, scope: !4053)
!4061 = !DILocation(line: 102, column: 9, scope: !4053)
!4062 = !DILocation(line: 103, column: 2, scope: !4053)
!4063 = !DILocation(line: 104, column: 2, scope: !4053)
!4064 = !DILocation(line: 104, column: 18, scope: !4053)
!4065 = distinct !DISubprogram(name: "seek", linkageName: "std.io.ByteBuffer.seek", scope: !46, file: !46, line: 107, type: !4066, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{!109, !311, !3823, !110, !45}
!4068 = !DILocation(line: 108, column: 1, scope: !4065)
!4069 = !DILocalVariable(name: "self", arg: 1, scope: !4065, file: !46, line: 107, type: !3823)
!4070 = !DILocation(line: 107, column: 25, scope: !4065)
!4071 = !DILocalVariable(name: "offset", arg: 2, scope: !4065, file: !46, line: 107, type: !1615)
!4072 = !DILocation(line: 107, column: 36, scope: !4065)
!4073 = !DILocalVariable(name: "seek", arg: 3, scope: !4065, file: !46, line: 107, type: !45)
!4074 = !DILocation(line: 107, column: 49, scope: !4065)
!4075 = !DILocation(line: 112, column: 8, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !46, line: 112, column: 4)
!4077 = distinct !DILexicalBlock(scope: !4065, file: !46, line: 109, column: 2)
!4078 = !DILocation(line: 112, column: 22, scope: !4076)
!4079 = !DILocation(line: 112, column: 31, scope: !4076)
!4080 = !DILocation(line: 112, column: 54, scope: !4076)
!4081 = !DILocation(line: 113, column: 4, scope: !4076)
!4082 = !DILocation(line: 113, column: 20, scope: !4076)
!4083 = !DILocation(line: 114, column: 11, scope: !4076)
!4084 = !DILocation(line: 116, column: 9, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4077, file: !46, line: 116, column: 4)
!4086 = !DILocation(line: 116, column: 23, scope: !4085)
!4087 = !DILocation(line: 116, column: 40, scope: !4085)
!4088 = !DILocation(line: 117, column: 6, scope: !4085)
!4089 = !DILocation(line: 117, column: 20, scope: !4085)
!4090 = !DILocation(line: 117, column: 36, scope: !4085)
!4091 = !DILocation(line: 117, column: 45, scope: !4085)
!4092 = !DILocation(line: 117, column: 69, scope: !4085)
!4093 = !DILocation(line: 118, column: 4, scope: !4085)
!4094 = !DILocation(line: 118, column: 21, scope: !4085)
!4095 = !DILocation(line: 120, column: 8, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4077, file: !46, line: 120, column: 4)
!4097 = !DILocation(line: 120, column: 22, scope: !4096)
!4098 = !DILocation(line: 120, column: 31, scope: !4096)
!4099 = !DILocation(line: 120, column: 54, scope: !4096)
!4100 = !DILocation(line: 121, column: 4, scope: !4096)
!4101 = !DILocation(line: 121, column: 20, scope: !4096)
!4102 = !DILocation(line: 121, column: 37, scope: !4096)
!4103 = !DILocation(line: 123, column: 9, scope: !4065)
!4104 = distinct !DISubprogram(name: "available", linkageName: "std.io.ByteBuffer.available", scope: !46, file: !46, line: 126, type: !4105, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{!109, !311, !3823}
!4107 = !DILocation(line: 127, column: 1, scope: !4104)
!4108 = !DILocalVariable(name: "self", arg: 1, scope: !4104, file: !46, line: 126, type: !3823)
!4109 = !DILocation(line: 126, column: 30, scope: !4104)
!4110 = !DILocation(line: 128, column: 9, scope: !4104)
!4111 = !DILocation(line: 128, column: 26, scope: !4104)
!4112 = distinct !DISubprogram(name: "grow", linkageName: "std.io.ByteBuffer.grow", scope: !46, file: !46, line: 131, type: !4113, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{!109, !22, !3823, !199}
!4115 = !DILocation(line: 132, column: 1, scope: !4112)
!4116 = !DILocalVariable(name: "self", arg: 1, scope: !4112, file: !46, line: 131, type: !3823)
!4117 = !DILocation(line: 131, column: 26, scope: !4112)
!4118 = !DILocalVariable(name: "n", arg: 2, scope: !4112, file: !46, line: 131, type: !198)
!4119 = !DILocation(line: 131, column: 37, scope: !4112)
!4120 = !DILocalVariable(name: "y", scope: !4121, file: !46, line: 1004, type: !198, align: 8)
!4121 = distinct !DISubprogram(name: "next_power_of_2", linkageName: "next_power_of_2", scope: !1706, file: !1706, line: 1002, scopeLine: 1002, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4122 = !DILocation(line: 1004, column: 13, scope: !4121, inlinedAt: !4123)
!4123 = !DILocation(line: 133, column: 12, scope: !4112)
!4124 = !DILocation(line: 1004, column: 17, scope: !4121, inlinedAt: !4123)
!4125 = !DILocation(line: 1005, column: 2, scope: !4121, inlinedAt: !4123)
!4126 = !DILocation(line: 1005, column: 9, scope: !4127, inlinedAt: !4123)
!4127 = distinct !DILexicalBlock(scope: !4121, file: !1706, line: 1005, column: 2)
!4128 = !DILocation(line: 1005, column: 13, scope: !4127, inlinedAt: !4123)
!4129 = !DILocation(line: 1005, column: 16, scope: !4127, inlinedAt: !4123)
!4130 = !DILocation(line: 1005, column: 21, scope: !4127, inlinedAt: !4123)
!4131 = !DILocation(line: 1006, column: 9, scope: !4121, inlinedAt: !4123)
!4132 = !DILocalVariable(name: "p", scope: !4112, file: !46, line: 134, type: !111, align: 8)
!4133 = !DILocation(line: 134, column: 8, scope: !4112)
!4134 = !DILocation(line: 134, column: 39, scope: !4112)
!4135 = !DILocation(line: 134, column: 55, scope: !4112)
!4136 = !DILocation(line: 128, column: 7, scope: !4137, inlinedAt: !4138)
!4137 = distinct !DISubprogram(name: "realloc_aligned", linkageName: "realloc_aligned", scope: !3869, file: !3869, line: 126, scopeLine: 126, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4138 = !DILocation(line: 134, column: 23, scope: !4112)
!4139 = !DILocation(line: 142, column: 7, scope: !4140, inlinedAt: !4141)
!4140 = distinct !DISubprogram(name: "free_aligned", linkageName: "free_aligned", scope: !3869, file: !3869, line: 140, scopeLine: 140, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4141 = !DILocation(line: 130, column: 3, scope: !4142, inlinedAt: !4138)
!4142 = distinct !DILexicalBlock(scope: !4137, file: !3869, line: 129, column: 2)
!4143 = !DILocation(line: 142, column: 18, scope: !4140, inlinedAt: !4141)
!4144 = !DILocation(line: 146, column: 34, scope: !4140, inlinedAt: !4141)
!4145 = !DILocation(line: 146, column: 2, scope: !4140, inlinedAt: !4141)
!4146 = !DILocation(line: 131, column: 10, scope: !4142, inlinedAt: !4138)
!4147 = !DILocation(line: 133, column: 7, scope: !4137, inlinedAt: !4138)
!4148 = !DILocation(line: 110, column: 7, scope: !4149, inlinedAt: !4150)
!4149 = distinct !DISubprogram(name: "malloc_aligned", linkageName: "malloc_aligned", scope: !3869, file: !3869, line: 108, scopeLine: 108, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4150 = !DILocation(line: 135, column: 10, scope: !4151, inlinedAt: !4138)
!4151 = distinct !DILexicalBlock(scope: !4137, file: !3869, line: 134, column: 2)
!4152 = !DILocation(line: 110, column: 20, scope: !4149, inlinedAt: !4150)
!4153 = !DILocation(line: 116, column: 43, scope: !4149, inlinedAt: !4150)
!4154 = !DILocation(line: 116, column: 10, scope: !4149, inlinedAt: !4150)
!4155 = !DILocation(line: 137, column: 41, scope: !4137, inlinedAt: !4138)
!4156 = !DILocation(line: 137, column: 9, scope: !4137, inlinedAt: !4138)
!4157 = !DILocation(line: 135, column: 2, scope: !4112)
!4158 = !DILocation(line: 135, column: 15, scope: !4112)
!4159 = !DILocation(line: 135, column: 18, scope: !4112)
!4160 = distinct !DISubprogram(name: "len", linkageName: "std.io.ByteReader.len", scope: !4161, file: !4161, line: 9, type: !4162, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4161 = !DIFile(filename: "bytereader.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io/stream")
!4162 = !DISubroutineType(types: !4163)
!4163 = !{!198, !4164}
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ByteReader*", baseType: !4165, size: 64, align: 64, dwarfAddressSpace: 0)
!4165 = !DICompositeType(tag: DW_TAG_structure_type, name: "ByteReader", scope: !4161, file: !4161, line: 3, size: 192, align: 64, elements: !4166, identifier: "std.io.ByteReader")
!4166 = !{!4167, !4168}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !4165, file: !4161, line: 5, baseType: !194, size: 128, align: 64)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4165, file: !4161, line: 6, baseType: !198, size: 64, align: 64, offset: 128)
!4169 = !DILocation(line: 10, column: 1, scope: !4160)
!4170 = !DILocalVariable(name: "self", arg: 1, scope: !4160, file: !4161, line: 9, type: !4164)
!4171 = !DILocation(line: 9, column: 23, scope: !4160)
!4172 = !DILocation(line: 11, column: 9, scope: !4160)
!4173 = distinct !DISubprogram(name: "init", linkageName: "std.io.ByteReader.init", scope: !4161, file: !4161, line: 14, type: !4174, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!4164, !4164, !194}
!4176 = !DILocation(line: 15, column: 1, scope: !4173)
!4177 = !DILocalVariable(name: "self", arg: 1, scope: !4173, file: !4161, line: 14, type: !4164)
!4178 = !DILocation(line: 14, column: 32, scope: !4173)
!4179 = !DILocalVariable(name: "bytes", arg: 2, scope: !4173, file: !4161, line: 14, type: !194)
!4180 = !DILocation(line: 14, column: 46, scope: !4173)
!4181 = !DILocation(line: 16, column: 3, scope: !4173)
!4182 = !DILocation(line: 16, column: 21, scope: !4173)
!4183 = !DILocation(line: 17, column: 9, scope: !4173)
!4184 = distinct !DISubprogram(name: "read", linkageName: "std.io.ByteReader.read", scope: !4161, file: !4161, line: 20, type: !4185, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!109, !311, !4164, !194}
!4187 = !DILocation(line: 21, column: 1, scope: !4184)
!4188 = !DILocalVariable(name: "self", arg: 1, scope: !4184, file: !4161, line: 20, type: !4164)
!4189 = !DILocation(line: 20, column: 25, scope: !4184)
!4190 = !DILocalVariable(name: "bytes", arg: 2, scope: !4184, file: !4161, line: 20, type: !194)
!4191 = !DILocation(line: 20, column: 39, scope: !4184)
!4192 = !DILocation(line: 22, column: 6, scope: !4184)
!4193 = !DILocation(line: 22, column: 20, scope: !4184)
!4194 = !DILocation(line: 22, column: 43, scope: !4184)
!4195 = !DILocalVariable(name: "len", scope: !4184, file: !4161, line: 23, type: !198, align: 8)
!4196 = !DILocation(line: 23, column: 6, scope: !4184)
!4197 = !DILocation(line: 23, column: 16, scope: !4184)
!4198 = !DILocation(line: 23, column: 33, scope: !4184)
!4199 = !DILocation(line: 23, column: 45, scope: !4184)
!4200 = !DILocation(line: 17, column: 10, scope: !4201, inlinedAt: !4202)
!4201 = distinct !DISubprogram(name: "less", linkageName: "less", scope: !1633, file: !1633, line: 9, scopeLine: 9, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4202 = !DILocation(line: 100, column: 10, scope: !4203, inlinedAt: !4204)
!4203 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1633, file: !1633, line: 97, scopeLine: 97, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4204 = !DILocation(line: 23, column: 12, scope: !4184)
!4205 = !DILocation(line: 17, column: 14, scope: !4201, inlinedAt: !4202)
!4206 = !DILocation(line: 100, column: 31, scope: !4203, inlinedAt: !4204)
!4207 = !DILocation(line: 100, column: 35, scope: !4203, inlinedAt: !4204)
!4208 = !DILocation(line: 24, column: 6, scope: !4184)
!4209 = !DILocation(line: 24, column: 23, scope: !4184)
!4210 = !DILocation(line: 25, column: 12, scope: !4184)
!4211 = !DILocation(line: 25, column: 24, scope: !4184)
!4212 = !DILocation(line: 25, column: 35, scope: !4184)
!4213 = !DILocation(line: 309, column: 11, scope: !4214, inlinedAt: !4216)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !464, line: 312, column: 1)
!4215 = distinct !DISubprogram(name: "copy", linkageName: "copy", scope: !464, file: !464, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4216 = !DILocation(line: 25, column: 7, scope: !4184)
!4217 = !DILocation(line: 309, column: 23, scope: !4214, inlinedAt: !4216)
!4218 = !DILocation(line: 309, column: 29, scope: !4214, inlinedAt: !4216)
!4219 = !DILocation(line: 309, column: 36, scope: !4214, inlinedAt: !4216)
!4220 = !DILocation(line: 309, column: 43, scope: !4214, inlinedAt: !4216)
!4221 = !DILocation(line: 309, column: 49, scope: !4214, inlinedAt: !4216)
!4222 = !DILocation(line: 309, column: 56, scope: !4214, inlinedAt: !4216)
!4223 = !DILocation(line: 313, column: 11, scope: !4215, inlinedAt: !4216)
!4224 = !DILocation(line: 313, column: 16, scope: !4215, inlinedAt: !4216)
!4225 = !DILocation(line: 313, column: 21, scope: !4215, inlinedAt: !4216)
!4226 = !DILocation(line: 313, column: 26, scope: !4215, inlinedAt: !4216)
!4227 = !DILocation(line: 26, column: 2, scope: !4184)
!4228 = !DILocation(line: 26, column: 16, scope: !4184)
!4229 = !DILocation(line: 27, column: 9, scope: !4184)
!4230 = distinct !DISubprogram(name: "read_byte", linkageName: "std.io.ByteReader.read_byte", scope: !4161, file: !4161, line: 30, type: !4231, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{!109, !111, !4164}
!4233 = !DILocation(line: 31, column: 1, scope: !4230)
!4234 = !DILocalVariable(name: "self", arg: 1, scope: !4230, file: !4161, line: 30, type: !4164)
!4235 = !DILocation(line: 30, column: 31, scope: !4230)
!4236 = !DILocation(line: 32, column: 6, scope: !4230)
!4237 = !DILocation(line: 32, column: 20, scope: !4230)
!4238 = !DILocation(line: 32, column: 43, scope: !4230)
!4239 = !DILocation(line: 33, column: 9, scope: !4230)
!4240 = !DILocation(line: 33, column: 20, scope: !4230)
!4241 = distinct !DISubprogram(name: "pushback_byte", linkageName: "std.io.ByteReader.pushback_byte", scope: !4161, file: !4161, line: 36, type: !4242, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!109, !22, !4164}
!4244 = !DILocation(line: 37, column: 1, scope: !4241)
!4245 = !DILocalVariable(name: "self", arg: 1, scope: !4241, file: !4161, line: 36, type: !4164)
!4246 = !DILocation(line: 36, column: 35, scope: !4241)
!4247 = !DILocation(line: 38, column: 7, scope: !4241)
!4248 = !DILocation(line: 38, column: 26, scope: !4241)
!4249 = !DILocation(line: 39, column: 2, scope: !4241)
!4250 = distinct !DISubprogram(name: "seek", linkageName: "std.io.ByteReader.seek", scope: !4161, file: !4161, line: 42, type: !4251, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4251 = !DISubroutineType(types: !4252)
!4252 = !{!109, !311, !4164, !110, !45}
!4253 = !DILocation(line: 43, column: 1, scope: !4250)
!4254 = !DILocalVariable(name: "self", arg: 1, scope: !4250, file: !4161, line: 42, type: !4164)
!4255 = !DILocation(line: 42, column: 25, scope: !4250)
!4256 = !DILocalVariable(name: "offset", arg: 2, scope: !4250, file: !4161, line: 42, type: !1615)
!4257 = !DILocation(line: 42, column: 36, scope: !4250)
!4258 = !DILocalVariable(name: "seek", arg: 3, scope: !4250, file: !4161, line: 42, type: !45)
!4259 = !DILocation(line: 42, column: 49, scope: !4250)
!4260 = !DILocalVariable(name: "new_index", scope: !4250, file: !4161, line: 44, type: !1615, align: 8)
!4261 = !DILocation(line: 44, column: 6, scope: !4250)
!4262 = !DILocation(line: 47, column: 25, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !4161, line: 47, column: 13)
!4264 = distinct !DILexicalBlock(scope: !4250, file: !4161, line: 45, column: 2)
!4265 = !DILocation(line: 48, column: 28, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4264, file: !4161, line: 48, column: 16)
!4267 = !DILocation(line: 48, column: 41, scope: !4266)
!4268 = !DILocation(line: 49, column: 25, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4264, file: !4161, line: 49, column: 13)
!4270 = !DILocation(line: 49, column: 42, scope: !4269)
!4271 = !DILocation(line: 51, column: 6, scope: !4250)
!4272 = !DILocation(line: 51, column: 28, scope: !4250)
!4273 = !DILocation(line: 52, column: 2, scope: !4250)
!4274 = !DILocation(line: 52, column: 15, scope: !4250)
!4275 = !DILocation(line: 53, column: 9, scope: !4250)
!4276 = distinct !DISubprogram(name: "write_to", linkageName: "std.io.ByteReader.write_to", scope: !4161, file: !4161, line: 56, type: !4277, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!109, !311, !4164, !153}
!4279 = !DILocation(line: 57, column: 1, scope: !4276)
!4280 = !DILocalVariable(name: "self", arg: 1, scope: !4276, file: !4161, line: 56, type: !4164)
!4281 = !DILocation(line: 56, column: 29, scope: !4276)
!4282 = !DILocalVariable(name: "writer", arg: 2, scope: !4276, file: !4161, line: 56, type: !153)
!4283 = !DILocation(line: 56, column: 46, scope: !4276)
!4284 = !DILocation(line: 58, column: 6, scope: !4276)
!4285 = !DILocation(line: 58, column: 20, scope: !4276)
!4286 = !DILocation(line: 58, column: 43, scope: !4276)
!4287 = !DILocalVariable(name: "written", scope: !4276, file: !4161, line: 59, type: !198, align: 8)
!4288 = !DILocation(line: 59, column: 6, scope: !4276)
!4289 = !DILocation(line: 59, column: 29, scope: !4276)
!4290 = !DILocation(line: 59, column: 40, scope: !4276)
!4291 = !DILocation(line: 59, column: 16, scope: !4276)
!4292 = !DILocation(line: 60, column: 2, scope: !4276)
!4293 = !DILocation(line: 60, column: 16, scope: !4276)
!4294 = !DILocation(line: 61, column: 9, scope: !4276)
!4295 = !DILocation(line: 61, column: 23, scope: !4276)
!4296 = !DILocation(line: 62, column: 9, scope: !4276)
!4297 = distinct !DISubprogram(name: "available", linkageName: "std.io.ByteReader.available", scope: !4161, file: !4161, line: 65, type: !4298, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{!109, !311, !4164}
!4300 = !DILocation(line: 66, column: 1, scope: !4297)
!4301 = !DILocalVariable(name: "self", arg: 1, scope: !4297, file: !4161, line: 65, type: !4164)
!4302 = !DILocation(line: 65, column: 30, scope: !4297)
!4303 = !DILocation(line: 67, column: 16, scope: !4297)
!4304 = !DILocation(line: 67, column: 33, scope: !4297)
!4305 = !DILocation(line: 47, column: 10, scope: !4306, inlinedAt: !4307)
!4306 = distinct !DISubprogram(name: "greater", linkageName: "greater", scope: !1633, file: !1633, line: 39, scopeLine: 39, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4307 = !DILocation(line: 116, column: 10, scope: !4308, inlinedAt: !4309)
!4308 = distinct !DISubprogram(name: "max", linkageName: "max", scope: !1633, file: !1633, line: 113, scopeLine: 113, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4309 = !DILocation(line: 67, column: 9, scope: !4297)
!4310 = !DILocation(line: 47, column: 14, scope: !4306, inlinedAt: !4307)
!4311 = !DILocation(line: 116, column: 34, scope: !4308, inlinedAt: !4309)
!4312 = !DILocation(line: 116, column: 38, scope: !4308, inlinedAt: !4309)
!4313 = distinct !DISubprogram(name: "new_init", linkageName: "std.io.ByteWriter.new_init", scope: !4314, file: !4314, line: 17, type: !4315, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4314 = !DIFile(filename: "bytewriter.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io/stream")
!4315 = !DISubroutineType(types: !4316)
!4316 = !{!4317, !4317, !474}
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "ByteWriter*", baseType: !4318, size: 64, align: 64, dwarfAddressSpace: 0)
!4318 = !DICompositeType(tag: DW_TAG_structure_type, name: "ByteWriter", scope: !4314, file: !4314, line: 4, size: 320, align: 64, elements: !4319, identifier: "std.io.ByteWriter")
!4319 = !{!4320, !4321, !4322}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !4318, file: !4314, line: 6, baseType: !194, size: 128, align: 64)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4318, file: !4314, line: 7, baseType: !198, size: 64, align: 64, offset: 128)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !4318, file: !4314, line: 8, baseType: !474, size: 128, align: 64, offset: 192)
!4323 = !DILocation(line: 18, column: 1, scope: !4313)
!4324 = !DILocalVariable(name: "self", arg: 1, scope: !4313, file: !4314, line: 17, type: !4317)
!4325 = !DILocation(line: 17, column: 36, scope: !4313)
!4326 = !DILocalVariable(name: "allocator", arg: 2, scope: !4313, file: !4314, line: 17, type: !474)
!4327 = !DILocation(line: 17, column: 53, scope: !4313)
!4328 = !DILocation(line: 14, column: 11, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4313, file: !4314, line: 18, column: 1)
!4330 = !DILocation(line: 19, column: 3, scope: !4313)
!4331 = !DILocation(line: 19, column: 21, scope: !4313)
!4332 = !DILocation(line: 19, column: 38, scope: !4313)
!4333 = !DILocation(line: 20, column: 9, scope: !4313)
!4334 = !DILocation(line: 15, column: 11, scope: !4313)
!4335 = !DILocation(line: 15, column: 27, scope: !4313)
!4336 = distinct !DISubprogram(name: "temp_init", linkageName: "std.io.ByteWriter.temp_init", scope: !4314, file: !4314, line: 28, type: !4337, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4337 = !DISubroutineType(types: !4338)
!4338 = !{!4317, !4317}
!4339 = !DILocation(line: 29, column: 1, scope: !4336)
!4340 = !DILocalVariable(name: "self", arg: 1, scope: !4336, file: !4314, line: 28, type: !4317)
!4341 = !DILocation(line: 28, column: 37, scope: !4336)
!4342 = !DILocation(line: 25, column: 11, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4336, file: !4314, line: 29, column: 1)
!4344 = !DILocation(line: 396, column: 7, scope: !4345, inlinedAt: !4346)
!4345 = distinct !DISubprogram(name: "temp", linkageName: "temp", scope: !3869, file: !3869, line: 394, scopeLine: 394, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4346 = !DILocation(line: 30, column: 34, scope: !4336)
!4347 = !DILocation(line: 398, column: 3, scope: !4348, inlinedAt: !4346)
!4348 = distinct !DILexicalBlock(scope: !4345, file: !3869, line: 397, column: 2)
!4349 = !DILocation(line: 400, column: 9, scope: !4345, inlinedAt: !4346)
!4350 = !DILocation(line: 30, column: 9, scope: !4336)
!4351 = !DILocation(line: 26, column: 10, scope: !4336)
!4352 = distinct !DISubprogram(name: "init_with_buffer", linkageName: "std.io.ByteWriter.init_with_buffer", scope: !4314, file: !4314, line: 33, type: !4353, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!4317, !4317, !194}
!4355 = !DILocation(line: 34, column: 1, scope: !4352)
!4356 = !DILocalVariable(name: "self", arg: 1, scope: !4352, file: !4314, line: 33, type: !4317)
!4357 = !DILocation(line: 33, column: 44, scope: !4352)
!4358 = !DILocalVariable(name: "data", arg: 2, scope: !4352, file: !4314, line: 33, type: !194)
!4359 = !DILocation(line: 33, column: 58, scope: !4352)
!4360 = !DILocation(line: 35, column: 3, scope: !4352)
!4361 = !DILocation(line: 35, column: 21, scope: !4352)
!4362 = !DILocation(line: 35, column: 40, scope: !4352)
!4363 = !DILocation(line: 36, column: 9, scope: !4352)
!4364 = distinct !DISubprogram(name: "destroy", linkageName: "std.io.ByteWriter.destroy", scope: !4314, file: !4314, line: 39, type: !4365, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4365 = !DISubroutineType(types: !4366)
!4366 = !{!109, !22, !4317}
!4367 = !DILocation(line: 40, column: 1, scope: !4364)
!4368 = !DILocalVariable(name: "self", arg: 1, scope: !4364, file: !4314, line: 39, type: !4317)
!4369 = !DILocation(line: 39, column: 29, scope: !4364)
!4370 = !DILocation(line: 41, column: 7, scope: !4364)
!4371 = !DILocalVariable(name: "ptr", scope: !4364, file: !4314, line: 42, type: !22, align: 8)
!4372 = !DILocation(line: 42, column: 12, scope: !4364)
!4373 = !DILocation(line: 42, column: 18, scope: !4364)
!4374 = !DILocation(line: 42, column: 50, scope: !4364)
!4375 = !DILocation(line: 101, column: 7, scope: !4376, inlinedAt: !4377)
!4376 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !3869, file: !3869, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4377 = !DILocation(line: 42, column: 45, scope: !4364)
!4378 = !DILocation(line: 101, column: 18, scope: !4376, inlinedAt: !4377)
!4379 = !DILocation(line: 105, column: 25, scope: !4376, inlinedAt: !4377)
!4380 = !DILocation(line: 105, column: 2, scope: !4376, inlinedAt: !4377)
!4381 = !DILocation(line: 43, column: 3, scope: !4364)
!4382 = distinct !DISubprogram(name: "str_view", linkageName: "std.io.ByteWriter.str_view", scope: !4314, file: !4314, line: 46, type: !4383, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4383 = !DISubroutineType(types: !4384)
!4384 = !{!329, !4317}
!4385 = !DILocation(line: 47, column: 1, scope: !4382)
!4386 = !DILocalVariable(name: "self", arg: 1, scope: !4382, file: !4314, line: 46, type: !4317)
!4387 = !DILocation(line: 46, column: 31, scope: !4382)
!4388 = !DILocation(line: 48, column: 17, scope: !4382)
!4389 = !DILocation(line: 48, column: 28, scope: !4382)
!4390 = !DILocation(line: 48, column: 29, scope: !4382)
!4391 = !DILocation(line: 48, column: 10, scope: !4382)
!4392 = distinct !DISubprogram(name: "ensure_capacity", linkageName: "std.io.ByteWriter.ensure_capacity", scope: !4314, file: !4314, line: 51, type: !4393, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4393 = !DISubroutineType(types: !4394)
!4394 = !{!109, !22, !4317, !199}
!4395 = !DILocation(line: 52, column: 1, scope: !4392)
!4396 = !DILocalVariable(name: "self", arg: 1, scope: !4392, file: !4314, line: 51, type: !4317)
!4397 = !DILocation(line: 51, column: 37, scope: !4392)
!4398 = !DILocalVariable(name: "len", arg: 2, scope: !4392, file: !4314, line: 51, type: !198)
!4399 = !DILocation(line: 51, column: 48, scope: !4392)
!4400 = !DILocation(line: 53, column: 6, scope: !4392)
!4401 = !DILocation(line: 53, column: 23, scope: !4392)
!4402 = !DILocation(line: 54, column: 7, scope: !4392)
!4403 = !DILocation(line: 54, column: 30, scope: !4392)
!4404 = !DILocation(line: 55, column: 6, scope: !4392)
!4405 = !DILocation(line: 55, column: 22, scope: !4392)
!4406 = !DILocalVariable(name: "new_capacity", scope: !4392, file: !4314, line: 56, type: !198, align: 8)
!4407 = !DILocation(line: 56, column: 6, scope: !4392)
!4408 = !DILocalVariable(name: "y", scope: !4409, file: !4314, line: 1004, type: !198, align: 8)
!4409 = distinct !DISubprogram(name: "next_power_of_2", linkageName: "next_power_of_2", scope: !1706, file: !1706, line: 1002, scopeLine: 1002, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4410 = !DILocation(line: 1004, column: 13, scope: !4409, inlinedAt: !4411)
!4411 = !DILocation(line: 56, column: 27, scope: !4392)
!4412 = !DILocation(line: 1004, column: 17, scope: !4409, inlinedAt: !4411)
!4413 = !DILocation(line: 1005, column: 2, scope: !4409, inlinedAt: !4411)
!4414 = !DILocation(line: 1005, column: 9, scope: !4415, inlinedAt: !4411)
!4415 = distinct !DILexicalBlock(scope: !4409, file: !1706, line: 1005, column: 2)
!4416 = !DILocation(line: 1005, column: 13, scope: !4415, inlinedAt: !4411)
!4417 = !DILocation(line: 1005, column: 16, scope: !4415, inlinedAt: !4411)
!4418 = !DILocation(line: 1005, column: 21, scope: !4415, inlinedAt: !4411)
!4419 = !DILocation(line: 1006, column: 9, scope: !4409, inlinedAt: !4411)
!4420 = !DILocalVariable(name: "new_ptr", scope: !4392, file: !4314, line: 57, type: !111, align: 8)
!4421 = !DILocation(line: 57, column: 8, scope: !4392)
!4422 = !DILocation(line: 57, column: 41, scope: !4392)
!4423 = !DILocation(line: 57, column: 57, scope: !4392)
!4424 = !DILocation(line: 90, column: 7, scope: !4425, inlinedAt: !4426)
!4425 = distinct !DISubprogram(name: "realloc_try", linkageName: "realloc_try", scope: !3869, file: !3869, line: 88, scopeLine: 88, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4426 = !DILocation(line: 57, column: 29, scope: !4392)
!4427 = !DILocation(line: 101, column: 7, scope: !4428, inlinedAt: !4429)
!4428 = distinct !DISubprogram(name: "free", linkageName: "free", scope: !3869, file: !3869, line: 99, scopeLine: 99, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4429 = !DILocation(line: 92, column: 3, scope: !4430, inlinedAt: !4426)
!4430 = distinct !DILexicalBlock(scope: !4425, file: !3869, line: 91, column: 2)
!4431 = !DILocation(line: 101, column: 18, scope: !4428, inlinedAt: !4429)
!4432 = !DILocation(line: 105, column: 25, scope: !4428, inlinedAt: !4429)
!4433 = !DILocation(line: 105, column: 2, scope: !4428, inlinedAt: !4429)
!4434 = !DILocation(line: 93, column: 10, scope: !4430, inlinedAt: !4426)
!4435 = !DILocation(line: 95, column: 7, scope: !4425, inlinedAt: !4426)
!4436 = !DILocation(line: 28, column: 71, scope: !4437, inlinedAt: !4438)
!4437 = distinct !DISubprogram(name: "[DEFAULT INIT]", linkageName: "[DEFAULT INIT]", scope: !3869, file: !3869, line: 28, scopeLine: 28, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4438 = !DILocation(line: 95, column: 19, scope: !4425, inlinedAt: !4426)
!4439 = !DILocation(line: 35, column: 60, scope: !4440, inlinedAt: !4441)
!4440 = distinct !DISubprogram(name: "[DEFAULT INIT]", linkageName: "[DEFAULT INIT]", scope: !3869, file: !3869, line: 35, scopeLine: 35, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4441 = !DILocation(line: 96, column: 9, scope: !4425, inlinedAt: !4426)
!4442 = !DILocation(line: 58, column: 2, scope: !4392)
!4443 = !DILocation(line: 58, column: 15, scope: !4392)
!4444 = !DILocation(line: 58, column: 24, scope: !4392)
!4445 = distinct !DISubprogram(name: "write", linkageName: "std.io.ByteWriter.write", scope: !4314, file: !4314, line: 61, type: !4446, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!109, !311, !4317, !194}
!4448 = !DILocation(line: 62, column: 1, scope: !4445)
!4449 = !DILocalVariable(name: "self", arg: 1, scope: !4445, file: !4314, line: 61, type: !4317)
!4450 = !DILocation(line: 61, column: 26, scope: !4445)
!4451 = !DILocalVariable(name: "bytes", arg: 2, scope: !4445, file: !4314, line: 61, type: !194)
!4452 = !DILocation(line: 61, column: 40, scope: !4445)
!4453 = !DILocation(line: 63, column: 23, scope: !4445)
!4454 = !DILocation(line: 63, column: 36, scope: !4445)
!4455 = !DILocation(line: 63, column: 2, scope: !4445)
!4456 = !DILocation(line: 64, column: 13, scope: !4445)
!4457 = !DILocation(line: 64, column: 24, scope: !4445)
!4458 = !DILocation(line: 64, column: 37, scope: !4445)
!4459 = !DILocation(line: 64, column: 48, scope: !4445)
!4460 = !DILocation(line: 309, column: 11, scope: !4461, inlinedAt: !4463)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !464, line: 312, column: 1)
!4462 = distinct !DISubprogram(name: "copy", linkageName: "copy", scope: !464, file: !464, line: 311, scopeLine: 311, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4463 = !DILocation(line: 64, column: 7, scope: !4445)
!4464 = !DILocation(line: 309, column: 23, scope: !4461, inlinedAt: !4463)
!4465 = !DILocation(line: 309, column: 29, scope: !4461, inlinedAt: !4463)
!4466 = !DILocation(line: 309, column: 36, scope: !4461, inlinedAt: !4463)
!4467 = !DILocation(line: 309, column: 43, scope: !4461, inlinedAt: !4463)
!4468 = !DILocation(line: 309, column: 49, scope: !4461, inlinedAt: !4463)
!4469 = !DILocation(line: 309, column: 56, scope: !4461, inlinedAt: !4463)
!4470 = !DILocation(line: 313, column: 11, scope: !4462, inlinedAt: !4463)
!4471 = !DILocation(line: 313, column: 16, scope: !4462, inlinedAt: !4463)
!4472 = !DILocation(line: 313, column: 21, scope: !4462, inlinedAt: !4463)
!4473 = !DILocation(line: 313, column: 26, scope: !4462, inlinedAt: !4463)
!4474 = !DILocation(line: 65, column: 2, scope: !4445)
!4475 = !DILocation(line: 65, column: 16, scope: !4445)
!4476 = !DILocation(line: 66, column: 9, scope: !4445)
!4477 = distinct !DISubprogram(name: "write_byte", linkageName: "std.io.ByteWriter.write_byte", scope: !4314, file: !4314, line: 69, type: !4478, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!109, !22, !4317, !8}
!4480 = !DILocation(line: 70, column: 1, scope: !4477)
!4481 = !DILocalVariable(name: "self", arg: 1, scope: !4477, file: !4314, line: 69, type: !4317)
!4482 = !DILocation(line: 69, column: 32, scope: !4477)
!4483 = !DILocalVariable(name: "c", arg: 2, scope: !4477, file: !4314, line: 69, type: !8)
!4484 = !DILocation(line: 69, column: 44, scope: !4477)
!4485 = !DILocation(line: 71, column: 23, scope: !4477)
!4486 = !DILocation(line: 71, column: 2, scope: !4477)
!4487 = !DILocation(line: 72, column: 2, scope: !4477)
!4488 = !DILocation(line: 72, column: 13, scope: !4477)
!4489 = !DILocation(line: 72, column: 29, scope: !4477)
!4490 = distinct !DISubprogram(name: "read_from", linkageName: "std.io.ByteWriter.read_from", scope: !4314, file: !4314, line: 79, type: !4491, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4491 = !DISubroutineType(types: !4492)
!4492 = !{!109, !311, !4317, !82}
!4493 = !DILocation(line: 80, column: 1, scope: !4490)
!4494 = !DILocalVariable(name: "self", arg: 1, scope: !4490, file: !4314, line: 79, type: !4317)
!4495 = !DILocation(line: 79, column: 30, scope: !4490)
!4496 = !DILocalVariable(name: "reader", arg: 2, scope: !4490, file: !4314, line: 79, type: !82)
!4497 = !DILocation(line: 79, column: 46, scope: !4490)
!4498 = !DILocalVariable(name: "start_index", scope: !4490, file: !4314, line: 81, type: !198, align: 8)
!4499 = !DILocation(line: 81, column: 6, scope: !4490)
!4500 = !DILocation(line: 81, column: 20, scope: !4490)
!4501 = !DILocation(line: 82, column: 7, scope: !4490)
!4502 = !DILocation(line: 84, column: 3, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4490, file: !4314, line: 83, column: 2)
!4504 = !DILocalVariable(name: "available", scope: !4505, file: !4314, line: 84, type: !198, align: 8)
!4505 = distinct !DILexicalBlock(scope: !4503, file: !4314, line: 84, column: 3)
!4506 = !DILocation(line: 84, column: 14, scope: !4505)
!4507 = !DILocation(line: 84, column: 26, scope: !4505)
!4508 = !DILocation(line: 86, column: 25, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4505, file: !4314, line: 85, column: 3)
!4510 = !DILocation(line: 86, column: 38, scope: !4509)
!4511 = !DILocation(line: 86, column: 4, scope: !4509)
!4512 = !DILocalVariable(name: "read", scope: !4509, file: !4314, line: 87, type: !198, align: 8)
!4513 = !DILocation(line: 87, column: 8, scope: !4509)
!4514 = !DILocation(line: 87, column: 27, scope: !4509)
!4515 = !DILocation(line: 87, column: 38, scope: !4509)
!4516 = !DILocation(line: 87, column: 15, scope: !4509)
!4517 = !DILocation(line: 88, column: 4, scope: !4509)
!4518 = !DILocation(line: 88, column: 18, scope: !4509)
!4519 = !DILocation(line: 90, column: 10, scope: !4503)
!4520 = !DILocation(line: 90, column: 23, scope: !4503)
!4521 = !DILocation(line: 92, column: 6, scope: !4490)
!4522 = !DILocation(line: 94, column: 24, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4490, file: !4314, line: 93, column: 2)
!4524 = !DILocation(line: 94, column: 3, scope: !4523)
!4525 = !DILocation(line: 96, column: 2, scope: !4490)
!4526 = !DILocalVariable(name: "len_to_read", scope: !4527, file: !4314, line: 99, type: !198, align: 8)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !4314, line: 97, column: 2)
!4528 = distinct !DILexicalBlock(scope: !4490, file: !4314, line: 96, column: 2)
!4529 = !DILocation(line: 99, column: 7, scope: !4527)
!4530 = !DILocation(line: 99, column: 21, scope: !4527)
!4531 = !DILocation(line: 99, column: 38, scope: !4527)
!4532 = !DILocation(line: 101, column: 7, scope: !4527)
!4533 = !DILocation(line: 103, column: 25, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4527, file: !4314, line: 102, column: 3)
!4535 = !DILocation(line: 103, column: 4, scope: !4534)
!4536 = !DILocation(line: 104, column: 18, scope: !4534)
!4537 = !DILocation(line: 104, column: 35, scope: !4534)
!4538 = !DILocalVariable(name: "read", scope: !4527, file: !4314, line: 107, type: !198, align: 8)
!4539 = !DILocation(line: 107, column: 7, scope: !4527)
!4540 = !DILocation(line: 107, column: 26, scope: !4527)
!4541 = !DILocation(line: 107, column: 37, scope: !4527)
!4542 = !DILocation(line: 107, column: 14, scope: !4527)
!4543 = !DILocation(line: 108, column: 3, scope: !4527)
!4544 = !DILocation(line: 108, column: 17, scope: !4527)
!4545 = !DILocation(line: 110, column: 7, scope: !4527)
!4546 = !DILocation(line: 110, column: 14, scope: !4527)
!4547 = !DILocation(line: 110, column: 34, scope: !4527)
!4548 = !DILocation(line: 110, column: 47, scope: !4527)
!4549 = distinct !DISubprogram(name: "init", linkageName: "std.io.LimitReader.init", scope: !4550, file: !4550, line: 13, type: !4551, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4550 = !DIFile(filename: "limitreader.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io/stream")
!4551 = !DISubroutineType(types: !4552)
!4552 = !{!4553, !4553, !82, !199}
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "LimitReader*", baseType: !4554, size: 64, align: 64, dwarfAddressSpace: 0)
!4554 = !DICompositeType(tag: DW_TAG_structure_type, name: "LimitReader", scope: !4550, file: !4550, line: 3, size: 192, align: 64, elements: !4555, identifier: "std.io.LimitReader")
!4555 = !{!4556, !4557}
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "wrapped_stream", scope: !4554, file: !4550, line: 5, baseType: !82, size: 128, align: 64)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !4554, file: !4550, line: 6, baseType: !198, size: 64, align: 64, offset: 128)
!4558 = !DILocation(line: 14, column: 1, scope: !4549)
!4559 = !DILocalVariable(name: "self", arg: 1, scope: !4549, file: !4550, line: 13, type: !4553)
!4560 = !DILocation(line: 13, column: 34, scope: !4549)
!4561 = !DILocalVariable(name: "wrapped_stream", arg: 2, scope: !4549, file: !4550, line: 13, type: !82)
!4562 = !DILocation(line: 13, column: 50, scope: !4549)
!4563 = !DILocalVariable(name: "limit", arg: 3, scope: !4549, file: !4550, line: 13, type: !198)
!4564 = !DILocation(line: 13, column: 70, scope: !4549)
!4565 = !DILocation(line: 15, column: 3, scope: !4549)
!4566 = !DILocation(line: 15, column: 30, scope: !4549)
!4567 = !DILocation(line: 15, column: 55, scope: !4549)
!4568 = !DILocation(line: 16, column: 9, scope: !4549)
!4569 = distinct !DISubprogram(name: "close", linkageName: "std.io.LimitReader.close", scope: !4550, file: !4550, line: 19, type: !4570, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4570 = !DISubroutineType(types: !4571)
!4571 = !{!109, !22, !4553}
!4572 = !DILocation(line: 20, column: 1, scope: !4569)
!4573 = !DILocalVariable(name: "self", arg: 1, scope: !4569, file: !4550, line: 19, type: !4553)
!4574 = !DILocation(line: 19, column: 28, scope: !4569)
!4575 = !DILocation(line: 21, column: 7, scope: !4569)
!4576 = !DILocation(line: 21, column: 41, scope: !4569)
!4577 = distinct !DISubprogram(name: "read", linkageName: "std.io.LimitReader.read", scope: !4550, file: !4550, line: 25, type: !4578, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!109, !311, !4553, !194}
!4580 = !DILocation(line: 26, column: 1, scope: !4577)
!4581 = !DILocalVariable(name: "self", arg: 1, scope: !4577, file: !4550, line: 25, type: !4553)
!4582 = !DILocation(line: 25, column: 26, scope: !4577)
!4583 = !DILocalVariable(name: "bytes", arg: 2, scope: !4577, file: !4550, line: 25, type: !194)
!4584 = !DILocation(line: 25, column: 40, scope: !4577)
!4585 = !DILocation(line: 27, column: 6, scope: !4577)
!4586 = !DILocation(line: 27, column: 30, scope: !4577)
!4587 = !DILocalVariable(name: "m", scope: !4577, file: !4550, line: 28, type: !198, align: 8)
!4588 = !DILocation(line: 28, column: 6, scope: !4577)
!4589 = !DILocation(line: 28, column: 14, scope: !4577)
!4590 = !DILocation(line: 28, column: 25, scope: !4577)
!4591 = !DILocation(line: 17, column: 10, scope: !4592, inlinedAt: !4593)
!4592 = distinct !DISubprogram(name: "less", linkageName: "less", scope: !1633, file: !1633, line: 9, scopeLine: 9, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4593 = !DILocation(line: 100, column: 10, scope: !4594, inlinedAt: !4595)
!4594 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1633, file: !1633, line: 97, scopeLine: 97, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4595 = !DILocation(line: 28, column: 10, scope: !4577)
!4596 = !DILocation(line: 17, column: 14, scope: !4592, inlinedAt: !4593)
!4597 = !DILocation(line: 100, column: 31, scope: !4594, inlinedAt: !4595)
!4598 = !DILocation(line: 100, column: 35, scope: !4594, inlinedAt: !4595)
!4599 = !DILocalVariable(name: "n", scope: !4577, file: !4550, line: 29, type: !198, align: 8)
!4600 = !DILocation(line: 29, column: 6, scope: !4577)
!4601 = !DILocation(line: 29, column: 10, scope: !4577)
!4602 = !DILocation(line: 29, column: 35, scope: !4577)
!4603 = !DILocation(line: 29, column: 41, scope: !4577)
!4604 = !DILocation(line: 29, column: 42, scope: !4577)
!4605 = !DILocation(line: 30, column: 2, scope: !4577)
!4606 = !DILocation(line: 30, column: 16, scope: !4577)
!4607 = !DILocation(line: 31, column: 9, scope: !4577)
!4608 = distinct !DISubprogram(name: "read_byte", linkageName: "std.io.LimitReader.read_byte", scope: !4550, file: !4550, line: 34, type: !4609, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4609 = !DISubroutineType(types: !4610)
!4610 = !{!109, !111, !4553}
!4611 = !DILocation(line: 35, column: 1, scope: !4608)
!4612 = !DILocalVariable(name: "self", arg: 1, scope: !4608, file: !4550, line: 34, type: !4553)
!4613 = !DILocation(line: 34, column: 32, scope: !4608)
!4614 = !DILocation(line: 36, column: 6, scope: !4608)
!4615 = !DILocation(line: 36, column: 30, scope: !4608)
!4616 = !DILocation(line: 38, column: 9, scope: !4608)
!4617 = !DILocation(line: 37, column: 12, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4608, file: !4550, line: 37, column: 12)
!4619 = distinct !DISubprogram(name: "available", linkageName: "std.io.LimitReader.available", scope: !4550, file: !4550, line: 41, type: !4620, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!109, !311, !4553}
!4622 = !DILocation(line: 42, column: 1, scope: !4619)
!4623 = !DILocalVariable(name: "self", arg: 1, scope: !4619, file: !4550, line: 41, type: !4553)
!4624 = !DILocation(line: 41, column: 31, scope: !4619)
!4625 = !DILocation(line: 43, column: 9, scope: !4619)
!4626 = distinct !DISubprogram(name: "init", linkageName: "std.io.Scanner.init", scope: !4627, file: !4627, line: 19, type: !4628, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4627 = !DIFile(filename: "scanner.c3", directory: "C:/Dev/C3/c3-windows/lib/std/io/stream")
!4628 = !DISubroutineType(types: !4629)
!4629 = !{null, !4630, !82, !194}
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Scanner*", baseType: !4631, size: 64, align: 64, dwarfAddressSpace: 0)
!4631 = !DICompositeType(tag: DW_TAG_structure_type, name: "Scanner", scope: !4627, file: !4627, line: 3, size: 384, align: 64, elements: !4632, identifier: "std.io.Scanner")
!4632 = !{!4633, !4634, !4635, !4636}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "wrapped_stream", scope: !4631, file: !4627, line: 5, baseType: !82, size: 128, align: 64)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4631, file: !4627, line: 6, baseType: !194, size: 128, align: 64, offset: 128)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_idx", scope: !4631, file: !4627, line: 7, baseType: !198, size: 64, align: 64, offset: 256)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "read_idx", scope: !4631, file: !4627, line: 8, baseType: !198, size: 64, align: 64, offset: 320)
!4637 = !DILocation(line: 20, column: 1, scope: !4626)
!4638 = !DILocalVariable(name: "self", arg: 1, scope: !4626, file: !4627, line: 19, type: !4630)
!4639 = !DILocation(line: 19, column: 22, scope: !4626)
!4640 = !DILocalVariable(name: "stream", arg: 2, scope: !4626, file: !4627, line: 19, type: !82)
!4641 = !DILocation(line: 19, column: 38, scope: !4626)
!4642 = !DILocalVariable(name: "buffer", arg: 3, scope: !4626, file: !4627, line: 19, type: !194)
!4643 = !DILocation(line: 19, column: 53, scope: !4626)
!4644 = !DILocation(line: 17, column: 11, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4626, file: !4627, line: 20, column: 1)
!4646 = !DILocation(line: 21, column: 3, scope: !4626)
!4647 = !DILocation(line: 21, column: 30, scope: !4626)
!4648 = !DILocation(line: 21, column: 45, scope: !4626)
!4649 = distinct !DISubprogram(name: "flush", linkageName: "std.io.Scanner.flush", scope: !4627, file: !4627, line: 28, type: !4650, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4650 = !DISubroutineType(types: !4651)
!4651 = !{!194, !4630}
!4652 = !DILocation(line: 29, column: 1, scope: !4649)
!4653 = !DILocalVariable(name: "self", arg: 1, scope: !4649, file: !4627, line: 28, type: !4630)
!4654 = !DILocation(line: 28, column: 25, scope: !4649)
!4655 = !DILocation(line: 30, column: 9, scope: !4649)
!4656 = !DILocation(line: 30, column: 26, scope: !4649)
!4657 = !DILocalVariable(name: "n", scope: !4649, file: !4627, line: 31, type: !198, align: 8)
!4658 = !DILocation(line: 31, column: 6, scope: !4649)
!4659 = !DILocation(line: 31, column: 10, scope: !4649)
!4660 = !DILocation(line: 31, column: 26, scope: !4649)
!4661 = !DILocalVariable(name: "buf", scope: !4649, file: !4627, line: 32, type: !194, align: 8)
!4662 = !DILocation(line: 32, column: 9, scope: !4649)
!4663 = !DILocation(line: 32, column: 15, scope: !4649)
!4664 = !DILocation(line: 32, column: 24, scope: !4649)
!4665 = !DILocation(line: 32, column: 41, scope: !4649)
!4666 = !DILocation(line: 33, column: 2, scope: !4649)
!4667 = !DILocation(line: 33, column: 21, scope: !4649)
!4668 = !DILocation(line: 34, column: 2, scope: !4649)
!4669 = !DILocation(line: 34, column: 18, scope: !4649)
!4670 = !DILocation(line: 35, column: 9, scope: !4649)
!4671 = distinct !DISubprogram(name: "close", linkageName: "std.io.Scanner.close", scope: !4627, file: !4627, line: 38, type: !4672, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!109, !22, !4630}
!4674 = !DILocation(line: 39, column: 1, scope: !4671)
!4675 = !DILocalVariable(name: "self", arg: 1, scope: !4671, file: !4627, line: 38, type: !4630)
!4676 = !DILocation(line: 38, column: 24, scope: !4671)
!4677 = !DILocation(line: 40, column: 7, scope: !4671)
!4678 = !DILocation(line: 40, column: 41, scope: !4671)
!4679 = distinct !DISubprogram(name: "scan", linkageName: "std.io.Scanner.scan", scope: !4627, file: !4627, line: 48, type: !4680, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{!109, !3523, !4630, !329}
!4682 = !DILocation(line: 49, column: 1, scope: !4679)
!4683 = !DILocalVariable(name: "self", arg: 1, scope: !4679, file: !4627, line: 48, type: !4630)
!4684 = !DILocation(line: 48, column: 25, scope: !4679)
!4685 = !DILocalVariable(name: "pattern", arg: 2, scope: !4679, file: !4627, line: 48, type: !329)
!4686 = !DILocation(line: 48, column: 39, scope: !4679)
!4687 = !DILocation(line: 45, column: 11, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4679, file: !4627, line: 49, column: 1)
!4689 = !DILocation(line: 46, column: 11, scope: !4688)
!4690 = !DILocation(line: 46, column: 26, scope: !4688)
!4691 = !DILocation(line: 50, column: 6, scope: !4679)
!4692 = !DILocation(line: 53, column: 3, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4679, file: !4627, line: 51, column: 2)
!4694 = !DILocation(line: 53, column: 31, scope: !4693)
!4695 = !DILocalVariable(name: "n", scope: !4696, file: !4627, line: 92, type: !199, align: 8)
!4696 = distinct !DISubprogram(name: "refill", linkageName: "refill", scope: !4627, file: !4627, line: 90, scopeLine: 90, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4697 = !DILocation(line: 92, column: 7, scope: !4696, inlinedAt: !4698)
!4698 = !DILocation(line: 53, column: 19, scope: !4693)
!4699 = !DILocation(line: 92, column: 11, scope: !4696, inlinedAt: !4698)
!4700 = !DILocation(line: 92, column: 36, scope: !4696, inlinedAt: !4698)
!4701 = !DILocalVariable(name: "err", scope: !4696, file: !4627, line: 93, type: !109, align: 8)
!4702 = !DILocation(line: 93, column: 12, scope: !4696, inlinedAt: !4698)
!4703 = !DILocation(line: 93, column: 18, scope: !4696, inlinedAt: !4698)
!4704 = !DILocation(line: 95, column: 8, scope: !4696, inlinedAt: !4698)
!4705 = !DILocation(line: 96, column: 11, scope: !4706, inlinedAt: !4698)
!4706 = distinct !DILexicalBlock(scope: !4696, file: !4627, line: 96, column: 4)
!4707 = !DILocation(line: 98, column: 11, scope: !4708, inlinedAt: !4698)
!4708 = distinct !DILexicalBlock(scope: !4696, file: !4627, line: 98, column: 4)
!4709 = !DILocation(line: 100, column: 9, scope: !4696, inlinedAt: !4698)
!4710 = !DILocation(line: 54, column: 3, scope: !4693)
!4711 = !DILocation(line: 54, column: 22, scope: !4693)
!4712 = !DILocation(line: 56, column: 9, scope: !4679)
!4713 = !DILocation(line: 56, column: 26, scope: !4679)
!4714 = !DILocalVariable(name: "n", scope: !4679, file: !4627, line: 57, type: !198, align: 8)
!4715 = !DILocation(line: 57, column: 6, scope: !4679)
!4716 = !DILocation(line: 57, column: 10, scope: !4679)
!4717 = !DILocation(line: 57, column: 26, scope: !4679)
!4718 = !DILocalVariable(name: "buf", scope: !4679, file: !4627, line: 58, type: !194, align: 8)
!4719 = !DILocation(line: 58, column: 9, scope: !4679)
!4720 = !DILocation(line: 58, column: 15, scope: !4679)
!4721 = !DILocation(line: 58, column: 24, scope: !4679)
!4722 = !DILocation(line: 58, column: 41, scope: !4679)
!4723 = !DILocalVariable(name: "i", scope: !4679, file: !4627, line: 59, type: !198, align: 8)
!4724 = !DILocation(line: 59, column: 10, scope: !4679)
!4725 = !DILocation(line: 87, column: 11, scope: !4726, inlinedAt: !4727)
!4726 = distinct !DISubprogram(name: "find", linkageName: "find", scope: !4627, file: !4627, line: 85, scopeLine: 85, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4727 = !DILocation(line: 59, column: 14, scope: !4679)
!4728 = !DILocation(line: 61, column: 3, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4679, file: !4627, line: 60, column: 2)
!4730 = !DILocation(line: 61, column: 23, scope: !4729)
!4731 = !DILocation(line: 61, column: 27, scope: !4729)
!4732 = !DILocation(line: 62, column: 10, scope: !4729)
!4733 = !DILocation(line: 62, column: 14, scope: !4729)
!4734 = !DILocation(line: 62, column: 15, scope: !4729)
!4735 = !DILocation(line: 64, column: 6, scope: !4679)
!4736 = !DILocation(line: 64, column: 31, scope: !4679)
!4737 = !DILocation(line: 64, column: 47, scope: !4679)
!4738 = !DILocation(line: 68, column: 10, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4679, file: !4627, line: 65, column: 2)
!4740 = !DILocation(line: 71, column: 17, scope: !4679)
!4741 = !DILocation(line: 71, column: 21, scope: !4679)
!4742 = !DILocation(line: 71, column: 2, scope: !4679)
!4743 = !DILocation(line: 71, column: 11, scope: !4679)
!4744 = !DILocation(line: 71, column: 12, scope: !4679)
!4745 = !DILocation(line: 72, column: 2, scope: !4679)
!4746 = !DILocation(line: 72, column: 21, scope: !4679)
!4747 = !DILocation(line: 74, column: 8, scope: !4679)
!4748 = !DILocation(line: 74, column: 17, scope: !4679)
!4749 = !DILocalVariable(name: "p", scope: !4679, file: !4627, line: 75, type: !198, align: 8)
!4750 = !DILocation(line: 75, column: 6, scope: !4679)
!4751 = !DILocalVariable(name: "n", scope: !4752, file: !4627, line: 92, type: !199, align: 8)
!4752 = distinct !DISubprogram(name: "refill", linkageName: "refill", scope: !4627, file: !4627, line: 90, scopeLine: 90, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4753 = !DILocation(line: 92, column: 7, scope: !4752, inlinedAt: !4754)
!4754 = !DILocation(line: 75, column: 10, scope: !4679)
!4755 = !DILocation(line: 92, column: 11, scope: !4752, inlinedAt: !4754)
!4756 = !DILocation(line: 92, column: 36, scope: !4752, inlinedAt: !4754)
!4757 = !DILocalVariable(name: "err", scope: !4752, file: !4627, line: 93, type: !109, align: 8)
!4758 = !DILocation(line: 93, column: 12, scope: !4752, inlinedAt: !4754)
!4759 = !DILocation(line: 93, column: 18, scope: !4752, inlinedAt: !4754)
!4760 = !DILocation(line: 95, column: 8, scope: !4752, inlinedAt: !4754)
!4761 = !DILocation(line: 96, column: 11, scope: !4762, inlinedAt: !4754)
!4762 = distinct !DILexicalBlock(scope: !4752, file: !4627, line: 96, column: 4)
!4763 = !DILocation(line: 98, column: 11, scope: !4764, inlinedAt: !4754)
!4764 = distinct !DILexicalBlock(scope: !4752, file: !4627, line: 98, column: 4)
!4765 = !DILocation(line: 100, column: 9, scope: !4752, inlinedAt: !4754)
!4766 = !DILocation(line: 76, column: 2, scope: !4679)
!4767 = !DILocation(line: 76, column: 18, scope: !4679)
!4768 = !DILocation(line: 76, column: 22, scope: !4679)
!4769 = !DILocation(line: 78, column: 8, scope: !4679)
!4770 = !DILocation(line: 78, column: 12, scope: !4679)
!4771 = !DILocation(line: 78, column: 13, scope: !4679)
!4772 = !DILocalVariable(name: "i", scope: !4679, file: !4627, line: 79, type: !198, align: 8)
!4773 = !DILocation(line: 79, column: 6, scope: !4679)
!4774 = !DILocation(line: 87, column: 11, scope: !4775, inlinedAt: !4776)
!4775 = distinct !DISubprogram(name: "find", linkageName: "find", scope: !4627, file: !4627, line: 85, scopeLine: 85, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4776 = !DILocation(line: 79, column: 10, scope: !4679)
!4777 = !DILocation(line: 80, column: 2, scope: !4679)
!4778 = !DILocation(line: 80, column: 21, scope: !4679)
!4779 = !DILocation(line: 80, column: 25, scope: !4679)
!4780 = !DILocation(line: 80, column: 29, scope: !4679)
!4781 = !DILocation(line: 82, column: 9, scope: !4679)
!4782 = !DILocation(line: 82, column: 18, scope: !4679)
!4783 = !DILocation(line: 82, column: 19, scope: !4679)
!4784 = !DILocation(line: 82, column: 23, scope: !4679)
!4785 = distinct !DISubprogram(name: "read", linkageName: "std.io.Scanner.read", scope: !4627, file: !4627, line: 103, type: !4786, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4786 = !DISubroutineType(types: !4787)
!4787 = !{!109, !311, !4630, !194}
!4788 = !DILocation(line: 104, column: 1, scope: !4785)
!4789 = !DILocalVariable(name: "self", arg: 1, scope: !4785, file: !4627, line: 103, type: !4630)
!4790 = !DILocation(line: 103, column: 22, scope: !4785)
!4791 = !DILocalVariable(name: "bytes", arg: 2, scope: !4785, file: !4627, line: 103, type: !194)
!4792 = !DILocation(line: 103, column: 36, scope: !4785)
!4793 = !DILocalVariable(name: "n", scope: !4785, file: !4627, line: 105, type: !198, align: 8)
!4794 = !DILocation(line: 105, column: 6, scope: !4785)
!4795 = !DILocation(line: 106, column: 6, scope: !4785)
!4796 = !DILocation(line: 106, column: 25, scope: !4785)
!4797 = !DILocation(line: 108, column: 11, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4785, file: !4627, line: 107, column: 2)
!4799 = !DILocation(line: 108, column: 22, scope: !4798)
!4800 = !DILocation(line: 108, column: 38, scope: !4798)
!4801 = !DILocation(line: 17, column: 10, scope: !4802, inlinedAt: !4803)
!4802 = distinct !DISubprogram(name: "less", linkageName: "less", scope: !1633, file: !1633, line: 9, scopeLine: 9, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4803 = !DILocation(line: 100, column: 10, scope: !4804, inlinedAt: !4805)
!4804 = distinct !DISubprogram(name: "min", linkageName: "min", scope: !1633, file: !1633, line: 97, scopeLine: 97, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36)
!4805 = !DILocation(line: 108, column: 7, scope: !4798)
!4806 = !DILocation(line: 17, column: 14, scope: !4802, inlinedAt: !4803)
!4807 = !DILocation(line: 100, column: 31, scope: !4804, inlinedAt: !4805)
!4808 = !DILocation(line: 100, column: 35, scope: !4804, inlinedAt: !4805)
!4809 = !DILocation(line: 109, column: 15, scope: !4798)
!4810 = !DILocation(line: 109, column: 24, scope: !4798)
!4811 = !DILocation(line: 109, column: 41, scope: !4798)
!4812 = !DILocation(line: 109, column: 3, scope: !4798)
!4813 = !DILocation(line: 109, column: 9, scope: !4798)
!4814 = !DILocation(line: 109, column: 10, scope: !4798)
!4815 = !DILocation(line: 110, column: 3, scope: !4798)
!4816 = !DILocation(line: 110, column: 23, scope: !4798)
!4817 = !DILocation(line: 111, column: 11, scope: !4798)
!4818 = !DILocation(line: 111, column: 17, scope: !4798)
!4819 = !DILocation(line: 113, column: 2, scope: !4785)
!4820 = !DILocation(line: 113, column: 7, scope: !4785)
!4821 = !DILocation(line: 113, column: 32, scope: !4785)
!4822 = !DILocation(line: 114, column: 9, scope: !4785)
!4823 = distinct !DISubprogram(name: "read_byte", linkageName: "std.io.Scanner.read_byte", scope: !4627, file: !4627, line: 117, type: !4824, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{!109, !111, !4630}
!4826 = !DILocation(line: 118, column: 1, scope: !4823)
!4827 = !DILocalVariable(name: "self", arg: 1, scope: !4823, file: !4627, line: 117, type: !4630)
!4828 = !DILocation(line: 117, column: 28, scope: !4823)
!4829 = !DILocation(line: 119, column: 6, scope: !4823)
!4830 = !DILocation(line: 119, column: 25, scope: !4823)
!4831 = !DILocation(line: 121, column: 10, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4823, file: !4627, line: 120, column: 2)
!4833 = !DILocation(line: 121, column: 19, scope: !4832)
!4834 = !DILocation(line: 123, column: 9, scope: !4823)
!4835 = distinct !DISubprogram(name: "available", linkageName: "std.io.available", scope: !29, file: !29, line: 27, type: !4836, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4836 = !DISubroutineType(types: !4837)
!4837 = !{!109, !311, !82}
!4838 = !DILocation(line: 29, column: 7, scope: !4835)
!4839 = !DILocalVariable(name: "s", arg: 1, scope: !4835, file: !29, line: 27, type: !82)
!4840 = !DILocation(line: 27, column: 28, scope: !4835)
!4841 = !DILocation(line: 29, column: 27, scope: !4835)
!4842 = !DILocation(line: 30, column: 7, scope: !4835)
!4843 = !DILocalVariable(name: "curr", scope: !4844, file: !29, line: 32, type: !198, align: 8)
!4844 = distinct !DILexicalBlock(scope: !4835, file: !29, line: 31, column: 2)
!4845 = !DILocation(line: 32, column: 7, scope: !4844)
!4846 = !DILocation(line: 32, column: 24, scope: !4844)
!4847 = !DILocation(line: 32, column: 14, scope: !4844)
!4848 = !DILocalVariable(name: "len", scope: !4844, file: !29, line: 33, type: !198, align: 8)
!4849 = !DILocation(line: 33, column: 7, scope: !4844)
!4850 = !DILocation(line: 33, column: 23, scope: !4844)
!4851 = !DILocation(line: 33, column: 13, scope: !4844)
!4852 = !DILocation(line: 34, column: 16, scope: !4844)
!4853 = !DILocation(line: 34, column: 3, scope: !4844)
!4854 = !DILocation(line: 35, column: 10, scope: !4844)
!4855 = !DILocation(line: 35, column: 16, scope: !4844)
!4856 = !DILocation(line: 37, column: 9, scope: !4835)
!4857 = distinct !DISubprogram(name: "copy_to", linkageName: "std.io.copy_to", scope: !29, file: !29, line: 153, type: !4858, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4858 = !DISubroutineType(types: !4859)
!4859 = !{!109, !311, !82, !153, !194}
!4860 = !DILocation(line: 155, column: 6, scope: !4857)
!4861 = !DILocalVariable(name: "in", arg: 1, scope: !4857, file: !29, line: 153, type: !82)
!4862 = !DILocation(line: 153, column: 26, scope: !4857)
!4863 = !DILocalVariable(name: "dst", arg: 2, scope: !4857, file: !29, line: 153, type: !153)
!4864 = !DILocation(line: 153, column: 40, scope: !4857)
!4865 = !DILocalVariable(name: "buffer", arg: 3, scope: !4857, file: !29, line: 153, type: !194)
!4866 = !DILocation(line: 153, column: 52, scope: !4857)
!4867 = !DILocalVariable(name: "total_copied", scope: !4868, file: !29, line: 171, type: !198, align: 8)
!4868 = distinct !DISubprogram(name: "copy_through_buffer", linkageName: "copy_through_buffer", scope: !29, file: !29, line: 169, scopeLine: 169, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4869 = !DILocation(line: 171, column: 6, scope: !4868, inlinedAt: !4870)
!4870 = !DILocation(line: 155, column: 25, scope: !4857)
!4871 = !DILocation(line: 172, column: 2, scope: !4868, inlinedAt: !4870)
!4872 = !DILocalVariable(name: "len", scope: !4873, file: !29, line: 174, type: !199, align: 8)
!4873 = distinct !DILexicalBlock(scope: !4874, file: !29, line: 173, column: 2)
!4874 = distinct !DILexicalBlock(scope: !4868, file: !29, line: 172, column: 2)
!4875 = !DILocation(line: 174, column: 8, scope: !4873, inlinedAt: !4870)
!4876 = !DILocation(line: 174, column: 22, scope: !4873, inlinedAt: !4870)
!4877 = !DILocation(line: 174, column: 14, scope: !4873, inlinedAt: !4870)
!4878 = !DILocalVariable(name: "err", scope: !4873, file: !29, line: 175, type: !109, align: 8)
!4879 = !DILocation(line: 175, column: 13, scope: !4873, inlinedAt: !4870)
!4880 = !DILocation(line: 175, column: 19, scope: !4873, inlinedAt: !4870)
!4881 = !DILocation(line: 177, column: 9, scope: !4873, inlinedAt: !4870)
!4882 = !DILocation(line: 177, column: 29, scope: !4883, inlinedAt: !4870)
!4883 = distinct !DILexicalBlock(scope: !4873, file: !29, line: 177, column: 22)
!4884 = !DILocation(line: 178, column: 20, scope: !4885, inlinedAt: !4870)
!4885 = distinct !DILexicalBlock(scope: !4873, file: !29, line: 178, column: 13)
!4886 = !DILocation(line: 180, column: 8, scope: !4873, inlinedAt: !4870)
!4887 = !DILocation(line: 180, column: 20, scope: !4873, inlinedAt: !4870)
!4888 = !DILocalVariable(name: "written", scope: !4873, file: !29, line: 181, type: !198, align: 8)
!4889 = !DILocation(line: 181, column: 7, scope: !4873, inlinedAt: !4870)
!4890 = !DILocation(line: 181, column: 27, scope: !4873, inlinedAt: !4870)
!4891 = !DILocation(line: 181, column: 34, scope: !4873, inlinedAt: !4870)
!4892 = !DILocation(line: 181, column: 35, scope: !4873, inlinedAt: !4870)
!4893 = !DILocation(line: 181, column: 17, scope: !4873, inlinedAt: !4870)
!4894 = !DILocation(line: 182, column: 3, scope: !4873, inlinedAt: !4870)
!4895 = !DILocation(line: 182, column: 19, scope: !4873, inlinedAt: !4870)
!4896 = !DILocation(line: 183, column: 7, scope: !4873, inlinedAt: !4870)
!4897 = !DILocation(line: 183, column: 18, scope: !4873, inlinedAt: !4870)
!4898 = !DILocation(line: 183, column: 30, scope: !4873, inlinedAt: !4870)
!4899 = !DILocation(line: 156, column: 7, scope: !4857)
!4900 = !DILocation(line: 156, column: 39, scope: !4857)
!4901 = !DILocation(line: 156, column: 27, scope: !4857)
!4902 = !DILocation(line: 157, column: 7, scope: !4857)
!4903 = !DILocation(line: 157, column: 39, scope: !4857)
!4904 = !DILocation(line: 157, column: 27, scope: !4857)
!4905 = !DILocalVariable(name: "total_copied", scope: !4906, file: !29, line: 171, type: !198, align: 8)
!4906 = distinct !DISubprogram(name: "copy_through_buffer", linkageName: "copy_through_buffer", scope: !29, file: !29, line: 169, scopeLine: 169, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4907 = !DILocation(line: 171, column: 6, scope: !4906, inlinedAt: !4908)
!4908 = !DILocation(line: 160, column: 11, scope: !4857)
!4909 = !DILocation(line: 172, column: 2, scope: !4906, inlinedAt: !4908)
!4910 = !DILocalVariable(name: "len", scope: !4911, file: !29, line: 174, type: !199, align: 8)
!4911 = distinct !DILexicalBlock(scope: !4912, file: !29, line: 173, column: 2)
!4912 = distinct !DILexicalBlock(scope: !4906, file: !29, line: 172, column: 2)
!4913 = !DILocation(line: 174, column: 8, scope: !4911, inlinedAt: !4908)
!4914 = !DILocation(line: 174, column: 22, scope: !4911, inlinedAt: !4908)
!4915 = !DILocation(line: 174, column: 14, scope: !4911, inlinedAt: !4908)
!4916 = !DILocalVariable(name: "err", scope: !4911, file: !29, line: 175, type: !109, align: 8)
!4917 = !DILocation(line: 175, column: 13, scope: !4911, inlinedAt: !4908)
!4918 = !DILocation(line: 175, column: 19, scope: !4911, inlinedAt: !4908)
!4919 = !DILocation(line: 177, column: 9, scope: !4911, inlinedAt: !4908)
!4920 = !DILocation(line: 177, column: 29, scope: !4921, inlinedAt: !4908)
!4921 = distinct !DILexicalBlock(scope: !4911, file: !29, line: 177, column: 22)
!4922 = !DILocation(line: 178, column: 20, scope: !4923, inlinedAt: !4908)
!4923 = distinct !DILexicalBlock(scope: !4911, file: !29, line: 178, column: 13)
!4924 = !DILocation(line: 180, column: 8, scope: !4911, inlinedAt: !4908)
!4925 = !DILocation(line: 180, column: 20, scope: !4911, inlinedAt: !4908)
!4926 = !DILocalVariable(name: "written", scope: !4911, file: !29, line: 181, type: !198, align: 8)
!4927 = !DILocation(line: 181, column: 7, scope: !4911, inlinedAt: !4908)
!4928 = !DILocation(line: 181, column: 27, scope: !4911, inlinedAt: !4908)
!4929 = !DILocation(line: 181, column: 34, scope: !4911, inlinedAt: !4908)
!4930 = !DILocation(line: 181, column: 35, scope: !4911, inlinedAt: !4908)
!4931 = !DILocation(line: 181, column: 17, scope: !4911, inlinedAt: !4908)
!4932 = !DILocation(line: 182, column: 3, scope: !4911, inlinedAt: !4908)
!4933 = !DILocation(line: 182, column: 19, scope: !4911, inlinedAt: !4908)
!4934 = !DILocation(line: 183, column: 7, scope: !4911, inlinedAt: !4908)
!4935 = !DILocation(line: 183, column: 18, scope: !4911, inlinedAt: !4908)
!4936 = !DILocation(line: 183, column: 30, scope: !4911, inlinedAt: !4908)
!4937 = distinct !DISubprogram(name: "wrap_bytes", linkageName: "std.io.wrap_bytes", scope: !29, file: !29, line: 442, type: !4938, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !36, retainedNodes: !90)
!4938 = !DISubroutineType(types: !4939)
!4939 = !{!4165, !194}
!4940 = !DILocalVariable(name: "bytes", arg: 1, scope: !4937, file: !29, line: 442, type: !194)
!4941 = !DILocation(line: 442, column: 33, scope: !4937)
!4942 = !DILocation(line: 444, column: 11, scope: !4937)
!4943 = !DILocation(line: 444, column: 18, scope: !4937)
